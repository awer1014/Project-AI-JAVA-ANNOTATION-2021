<?xml version="1.0" encoding="UTF-8"?><ErrorList id="C:\Users\user\Desktop\勘誤\81\81.xml">
	
<SourceCode_List><SourceCode lines="6" name="ChineseLetter.java"><![CDATA[public class ChineseLetter extends Letter { 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
} 
]]></SourceCode><SourceCode lines="13" name="EnglishLetter.java"><![CDATA[public class EnglishLetter extends Letter { 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
void display ( ) { 
System . out . println ( "Dear " + receiver + " " + title + "," ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + " 敬上" ) ; 
System . out . println ( date ) ; 
System . out . println ( c ) ; 
} 
} 
]]></SourceCode><SourceCode lines="15" name="Envelop.java"><![CDATA[public class Envelop { 
String senderAddr , receiverAddr ; 
Letter letter ; 
public Envelop ( String senderAddr , String receiverAddr , Letter letter ) { 
this . senderAddr = senderAddr ; 
this . receiverAddr = receiverAddr ; 
this . letter = letter ; 
} 
void display ( ) { 
System . out . println ( "From: " + senderAddr + ", " + letter . getSender ( ) ) ; 
System . out . println ( "To: " + receiverAddr + ", " + letter . getReceiver ( ) + " " + letter . getTitle ( ) ) ; 
letter . display ( ) ; 
} 
} 
]]></SourceCode><SourceCode lines="40" name="Letter.java"><![CDATA[import java . util . * ; 
public abstract class Letter { 
String title , receiver , content , sender , date ; 
int c ; 
public Letter ( String title , String receiver , String content , String sender , String date ) { 
c = 0 ; 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
for ( int k = 0 ; k < this . date . length ( ) ; k ++ ) { 
String i = "" ; 
i += date . charAt ( k ) ; 
if ( i . equals ( "/" ) ) continue ; 
c += i . charAt ( 0 ) - '0' ; 
c *= 10 ; 
} 
} 
void display ( ) { 
System . out . println ( receiver + " " + title + "," ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + " 敬上" ) ; 
System . out . println ( date ) ; 
System . out . println ( c ) ; 
} 
String getSender ( ) { 
return sender ; 
} 
String getReceiver ( ) { 
return receiver ; 
} 
String getDate ( ) { 
return date ; 
} 
String getTitle ( ) { 
return title ; 
} 
} 
]]></SourceCode><SourceCode lines="25" name="Main.java"><![CDATA[import java . util . * ; 
import java . util . Collections ; 
public class Main { 
public static void main ( String [ ] args ) { 
Vector < Letter > a = new Vector < Letter > ( ) ; 
a . addElement ( new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ) ; 
a . addElement ( new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) ) ; 
a . addElement ( new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) ) ; 
int min , locate ; 
for ( int k = 0 ; k < a . size ( ) ; k ++ ) { 
min = a . elementAt ( k ) . c ; 
locate = k ; 
for ( int y = k ; y < a . size ( ) ; y ++ ) { 
min = Math . min ( min , a . elementAt ( y ) . c ) ; 
if ( a . elementAt ( k ) . c > a . elementAt ( y ) . c ) 
locate = y ; 
} 
Collections . swap ( a , k , locate ) ; 
} 
for ( int k = 0 ; k < a . size ( ) ; k ++ ) { 
a . elementAt ( k ) . display ( ) ; 
} 
} 
} 
]]></SourceCode></SourceCode_List><Errors><Error tpye="介面:Comparable介面"><Message><![CDATA[Comparable介面是JAVA內建的Interface，允許類別實作int compareTo(Object)動作，進而協助該類別的物件進行大小或順序的比較。注意，
int compareTo(Object)動作傳回值  1， 0， -1分別代表物件本身相較於Object參數物件來得大，相等或小。]]></Message><Linelist><line Begin="12" End="18" src="Letter"/><line Begin="10" End="22" src="Main"/></Linelist></Error><Error tpye="抽象:抽象動作"><Message><![CDATA[抽象動作是抽象類別裡面的物件動作，只宣告函式名稱以及參數列型態，沒有實質的函式內容。實際的函式內容則由子類別來實踐並加以覆寫，進而完成物件動作的多型功能。

本程式Letter類別的display()動作應隨不同的的子類別(ChineseLetter和EnglishLetter)有不同的變化，因此，在Letter類別須宣告為抽象動作，
例如:
public abstract void display ( ) ;
而ChineseLetter類別和EnglishLetter類別則分別寫各自的display()函式。]]></Message><Linelist><line Begin="20" End="26" src="Letter"/></Linelist></Error></Errors></ErrorList>