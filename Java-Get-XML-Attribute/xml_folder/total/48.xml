<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorList id="C:\Users\USER\Desktop\手機待儲存\專研程式碼標記錯誤\XML_Error\1.12\JavaAnnotationXMLProgram\code(正規化)\期末考題三\48\48.xml">
	
<SourceCode_List><SourceCode lines="14" name="ChineseLetter.java"><![CDATA[public class ChineseLetter extends Letter { 
public ChineseLetter ( ) { 
} 
public ChineseLetter ( String a , String b , String c , String d , String e ) { 
super ( a , b , c , d , e ) ; 
} 
public void display ( ) { 
System . out . println ( receiver + " " + title + " 您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + " 敬上" ) ; 
System . out . println ( date ) ; 
} 
} 
]]></SourceCode><SourceCode lines="15" name="EnglishLetter.java"><![CDATA[public class EnglishLetter extends Letter { 
public EnglishLetter ( ) { 
} 
public EnglishLetter ( String a , String b , String c , String d , String e ) { 
super ( a , b , c , d , e ) ; 
} 
public void display ( ) { 
System . out . println ( "Dear " + receiver + " " + title ) ; 
System . out . println ( content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( sender ) ; 
System . out . println ( date ) ; 
} 
} 
]]></SourceCode><SourceCode lines="19" name="Envelop.java"><![CDATA[public class Envelop { 
private String senderAddr , receiverAddr ; 
private Letter letter ; 
public Envelop ( String senderAddr , String receiverAddr , Letter letter ) { 
this . senderAddr = senderAddr ; 
this . receiverAddr = receiverAddr ; 
this . letter = letter ; 
} 
public Letter getLetterr ( ) { 
return letter ; 
} 
public void display ( ) { 
System . out . println ( "From: " + senderAddr + "," + letter . getSender ( ) ) ; 
System . out . println ( "To: " + receiverAddr + letter . getReceiver ( ) ) ; 
System . out . println ( "信件內容:" ) ; 
System . out . println ( letter . display ( ) ) ; 
} 
} 
]]></SourceCode><SourceCode lines="18" name="Letter.java"><![CDATA[abstract public class Letter { 
protected String title ; 
protected String receiver ; 
protected String content ; 
protected String sender ; 
protected String date ; 
public Letter ( ) { 
} 
public Letter ( String a , String b , String c , String d , String e ) { 
title = a ; 
receiver = b ; 
content = c ; 
sender = d ; 
date = e ; 
} 
abstract public void display ( ) ; 
} 
]]></SourceCode><SourceCode lines="9" name="Test.java"><![CDATA[public class Test { 
public static void main ( String [ ] args ) { 
Letter lt = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ; 
Envelop env = new Envelop ( "Taipei" , "Kaohsiung" , lt ) ; 
env . display ( ) ; 
lt . display ( ) ; 
} 
} 
]]></SourceCode></SourceCode_List><Errors><Error tpye="物件:不會使用物件之間的關係"><Message><![CDATA[在Envelop類別已宣告Letter類別的letter物件
如下列:
private Letter letter ; 
所以不用編寫一個類別動作來回傳letter物件 Envelop類別第9~11行是不必要的。 
Envelop類別第16行使用已宣告的letter物件中的display ( )物件動作 
如下列: letter . display ( ) ;]]></Message><Linelist><line Begin="9" End="11" src="ChineseLetter"/><line Begin="16" End="16" src="ChineseLetter"/></Linelist></Error></Errors></ErrorList>