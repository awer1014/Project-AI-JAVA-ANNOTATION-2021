<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorList id="C:\Users\USER\Desktop\手機待儲存\專研程式碼標記錯誤\XML_Error\1.12\JavaAnnotationXMLProgram\code(正規化)\期末考題四\31(x)\31.xml">
	
<SourceCode_List><SourceCode lines="12" name="ChineseLetter.java"><![CDATA[public class ChineseLetter extends Letter { 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
void display ( ) { 
System . out . println ( receiver + " " + title + ", 您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + " 敬上" ) ; 
System . out . println ( date ) ; 
} 
} 
]]></SourceCode><SourceCode lines="13" name="EnglishLetter.java"><![CDATA[public class EnglishLetter extends Letter { 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
void display ( ) { 
System . out . println ( "Dear " + receiver + " " + title ) ; 
System . out . println ( content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( sender ) ; 
System . out . println ( date ) ; 
} 
} 
]]></SourceCode><SourceCode lines="33" name="Letter.java"><![CDATA[abstract public class Letter implements Comparable { 
String title , receiver , content , sender , date ; 
Letter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
String getSender ( ) { 
return sender ; 
} 
String getReceiver ( ) { 
return receiver ; 
} 
String getDate ( ) { 
return date ; 
} 
abstract void display ( ) ; 
public int compareTo ( Object o ) { 
Letter obj = ( Letter ) o ; 
if ( this . getDate ( ) . compareTo ( obj . getDate ( ) ) < 0 ) { 
return 1 ; 
} 
else if ( this . getDate ( ) . compareTo ( obj . getDate ( ) ) > 0 ) { 
return - 1 ; 
} 
else { 
return 0 ; 
} 
} 
} 
]]></SourceCode><SourceCode lines="16" name="Test.java"><![CDATA[import java.util.*;
public class Test 
{
   public static void main(String[] args) {
     Letter l1=new ChineseLetter ("教授", "王", "很高興跟您連絡", "銘哥", "2019/01/05");
     Letter l2=new EnglishLetter("Professor", "Wang", "I am glad to write to you!", "J. J. Lin", "2018/11/01") ;  
     Letter l3=new EnglishLetter("Professor", "Liu", "I am sorry!", "K. Ming", "2018/07/05");
      ArrayList list = {l1, l2, l3}; 
for (l in list)
l.display()	
    }
   
} 


]]></SourceCode></SourceCode_List><Errors><Error tpye="介面:Comparable介面的排序應用"><Message><![CDATA[將第5~8行修改為
先將資料用Letter型態的陣列存取
        Letter[] list={
                new ChineseLetter ("教授", "王", "很高興跟您連絡", "銘哥", "2019/01/05"),
                new EnglishLetter("Professor", "Wang", "I am glad to write to you!", "J. J. Lin", "2018/11/01"),
                new EnglishLetter("Professor", "Liu", "I am sorry!", "K. Ming", "2018/07/05")};

需要呼叫letter.compareTo()的動作來實現比較大小
這樣才有達到依照日期排序的輸出結果
        for (Letter letter : list)
            letter.compareTo(letter);
        for (Letter letter : list)
            letter.display();]]></Message><Linelist><line Begin="-1" End="-1" src="Test"/></Linelist></Error><Error tpye="物件:不會使用物件資料"><Message><![CDATA[在第22行與第25行
if ( this . getDate ( ) . compareTo ( obj . getDate ( ) ) < 0 ) 
這樣會形成不斷呼叫自己本身的函數(compareTo)的無線迴圈
且getDate()所回傳的值屬於String不能直接比大小
有兩個解決方法
1.寫出一個函式把getDate()所回傳的值轉成int
2.因為Java的String類別也是有實作Comparable介面
也是依照原則return 1;return 0;return -1
如下列:
@Override public int compareTo (Object other){
Letter o = (Letter)other;
return date.compareTo(o.getDate());
}]]></Message><Linelist><line Begin="22" End="24" src="Letter"/><line Begin="25" End="27" src="Letter"/></Linelist></Error></Errors></ErrorList>