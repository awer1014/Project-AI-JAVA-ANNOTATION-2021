<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorList id="C:\Users\USER\Desktop\手機待儲存\專研程式碼標記錯誤\XML_Error\1.12\JavaAnnotationXMLProgram\code(正規化)\期末考題二\50\50.xml">
	
<SourceCode_List><SourceCode lines="27" name="ChineseLetter.java"><![CDATA[public class ChineseLetter extends Letter { 
private String title ; 
private String receiver ; 
private String content ; 
private String sender ; 
private String date ; 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
public void display ( ) { 
System . out . println ( receiver + " " + title + ", 您好\n" + content + "\n" + sender + " 敬上\n" + date ) ; 
} 
String getSender ( ) { 
return sender ; 
} 
String getReceiver ( ) { 
return receiver ; 
} 
String getDate ( ) { 
return date ; 
} 
} 
]]></SourceCode><SourceCode lines="27" name="EnglishLetter.java"><![CDATA[public class EnglishLetter extends Letter { 
private String title ; 
private String receiver ; 
private String content ; 
private String sender ; 
private String date ; 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
public void display ( ) { 
System . out . println ( "Dear " + title + " " + receiver + ",\n" + content + "\nSincerely\n" + sender + "\n" + date ) ; 
} 
String getSender ( ) { 
return sender ; 
} 
String getReceiver ( ) { 
return receiver ; 
} 
String getDate ( ) { 
return date ; 
} 
} 
]]></SourceCode><SourceCode lines="4" name="Letter.java"><![CDATA[abstract public class Letter { 
abstract void display ( ) ; 
} 
]]></SourceCode><SourceCode lines="9" name="Test.java"><![CDATA[public class Test { 
public static void main ( String [ ] args ) { 
Letter le = new ChineseLetter ( "同學" , "黃" , "很高興跟您連絡" , "彭" , "2019/01/05" ) ; 
Letter lt = new EnglishLetter ( "Student" , "Huang" , "I am glad to write to you!" , "Pon" , "2019/01/05" ) ; 
le . display ( ) ; 
lt . display ( ) ; 
} 
} 
]]></SourceCode></SourceCode_List><Errors><Error tpye="抽象:不會分離變跟不變的部分"><Message><![CDATA[物件資料是可以被子類別繼承的,只需在Letter宣告一次即可
public abstract class Letter 
{
public String title,receiver,content,sender,date;
Letter(String title, String receiver, String content, String sender, String date)
{
this.title= title;
this.receiver=receiver;
this.content=content;
this.sender=sender;
this.date=date;
}
}
子類別的建構子再利用super做資料傳遞給上一層
public class EnglishLetter extends Letter
{
public EnglishLetter(String title, String receiver, String content, String sender, String date)
{
super(title,receiver,content,sender,date);
}
}

public class ChineseLetter extends Letter
{
public ChineseLetter(String title, String receiver, String content, String sender, String date)
{
super(title,receiver,content,sender,date);
}
}
另一方面,將共同物件寫在父類別,
宣告成public供所有類別做使用,
子類別就不用再宣告一次物件動作
public abstract class Letter 
{
public String getTitle()
{
return title;
}
public String getReceiver()
{
return receiver;
}
public String getContent()
{
return content;
}
public String getSender()
{
return sender;
}
public String getDate()
{
return date;
}
}]]></Message><Linelist><line Begin="2" End="13" src="ChineseLetter"/><line Begin="17" End="25" src="ChineseLetter"/><line Begin="2" End="13" src="EnglishLetter"/><line Begin="17" End="25" src="EnglishLetter"/></Linelist></Error><Error tpye="物件:不會使用物件之間的關係"><Message><![CDATA[使用呼叫函式去取得回傳值
public class EnglishLetter extends Letter
{
@Override public void display(){
System . out . println ( "Dear " + getTitle() + " " + getReceiver() + ",\n" + getContent()+ "\nSincerely\n" + getSender() + "\n" + getDate() ) ; 

}
}

public class ChineseLetter extends Letter
{
@Override public void display(){
System . out . println ( getReceiver() + " " + getTitle() + ", 您好\n" + getContent() + "\n" + getSender() + " 敬上\n" + getDate() ) ; 

}
}]]></Message><Linelist><line Begin="14" End="16" src="ChineseLetter"/><line Begin="14" End="16" src="EnglishLetter"/></Linelist></Error></Errors></ErrorList>