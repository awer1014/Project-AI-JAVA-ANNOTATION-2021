 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z0 , String c8 , String u9 , String H0 , String Z9 ) {  <CR> super ( Z0 , c8 , u9 , H0 , Z9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i , String C6 , String M2 , String g4 , String v ) {  <CR> super ( i , C6 , M2 , g4 , v ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] a0 ) {  <CR> Evaluation Q3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p3 = new Envelop ( "Taipei" , "Kaohsiung" , Q3 ) ;  <CR> p3 . display ( ) ;  <CR> }  <CR> public Envelop ( String F6 , String M9 , Evaluation b5 ) {  <CR> this . senderAddr = F6 ;  <CR> this . receiverAddr = M9 ;  <CR> this . letter = b5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String q , String I4 , String N1 , String E , String b8 ) {  <CR> this . title = q ;  <CR> this . receiver = I4 ;  <CR> this . content = N1 ;  <CR> this . sender = E ;  <CR> this . date = b8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Y6 ) {  <CR> int M5 ;  <CR> for ( M5 = list . length - 1 ; M5 >= 0 ; M5 -- ) {  <CR> int h0 = M5 ;  <CR> Letter L = new Letter ( M5 ) ;  <CR> Letter x0 = new Letter ( h0 - 1 ) ;  <CR> if ( L . compareTo ( x0 ) == 1 )  <CR> L . display ( M5 ) ;  <CR> }  <CR> }  <CR> Letter ( int n ) {  <CR> this . x = n ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M5 ) {  <CR> list [ M5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object m5 ) {  <CR> Letter H1 = ( Letter ) m5 ;  <CR> if ( this . x > H1 . x )  <CR> return 1 ;  <CR> else  <CR> return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 