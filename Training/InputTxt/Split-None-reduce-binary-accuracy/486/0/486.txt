 <BOC> publicclassPet{ <CR> voidspeak(StringC3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringname; <CR> Stringtype; <CR> voiddisplay(StringQ,StringC3,Stringz1){ <CR> Q=p; <CR> C3=n; <CR> z1=t; <CR> } <CR> Stringpid; <CR> intn; <CR> Pet(StringQ,StringC3,Stringz1){ <CR> Q=p; <CR> C3=n; <CR> z1=t; <CR> } <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(Stringg7,StringS4){ <CR> Stringg7=g7; <CR> StringS4=S4; <CR> } <CR> publicstaticvoidmain(String[]j1){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(Stringg7,StringS4){ <CR> Stringg7; <CR> stringS4; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]M9){ <CR> Stringn9; <CR> intR5; <CR> R5=n9.length(); <CR> System.out.print(R5); <CR> } <CR> } <CR>  <EOC> 