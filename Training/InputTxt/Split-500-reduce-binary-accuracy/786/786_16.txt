<BOC> public class Exam extends Test { <CR> public Exam ( String i 2 , String o 5 , double u 7 , double g 1 ) { <CR> super ( i 2 , o 5 , u 7 , g 1 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String M 5 , String u 4 , double Q 3 , double g 8 ) { <CR> super ( M 5 , u 4 , Q 3 , g 8 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] c 4 ) { <CR> Scanner M 8 = new Scanner ( System . in ) ; <CR> boolean V 3 = <STRING> ; <CR> while ( V 3 ) { <CR> System . out . println ( <STRING> ) ; <CR> String K 2 = M 8 . nextLine ( ) ; <CR> if ( K 2 . equals ( <STRING> ) ) { <CR> V 3 = <STRING> ; <CR> break ; <CR> } <CR> if ( K 2 . equals ( <STRING> ) || K 2 . equals ( <STRING> ) || K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String j 1 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String U 1 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double b 2 = Double . parseDouble ( M 8 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double K 4 = Double . parseDouble ( M 8 . nextLine ( ) ) ; <CR> String x 7 = <STRING> ; <CR> String y 9 = <STRING> ; <CR> String T 1 = <STRING> ; <CR> String X 8 = <STRING> ; <CR> String h 6 = <STRING> ; <CR> String o = <STRING> ; <CR> if ( K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 1 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> X 8 = M 8 . nextLine ( ) ; <CR> } <CR> if ( K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 7 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> y 9 = M 8 . nextLine ( ) ; <CR> } <CR> if ( K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> h 6 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o = M 8 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test B 3 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( K 2 . equals ( <STRING> ) ) <CR> B 3 = new Exam ( j 1 , U 1 , b 2 , K 4 ) ; <CR> else if ( K 2 . equals ( <STRING> ) ) <CR> B 3 = new HomeWork ( j 1 , U 1 , b 2 , K 4 ) ; <CR> else if ( K 2 . equals ( <STRING> ) ) <CR> B 3 = new Report ( j 1 , U 1 , b 2 , K 4 ) ; <CR> if ( B 3 ! = <STRING> ) { <CR> B 3 . print ( ) ; <CR> if ( K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + T 1 ) ; <CR> System . out . println ( <STRING> + X 8 ) ; <CR> } <CR> else if ( K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + x 7 ) ; <CR> System . out . println ( <STRING> + y 9 ) ; <CR> } <CR> else if ( K 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + h 6 ) ; <CR> System . out . println ( <STRING> + o ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> B 3 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String P 5 , String R 3 , double i 5 , double c 7 ) { <CR> super ( P 5 , R 3 , i 5 , c 7 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> private double score ; <CR> private String name ; <CR> String info ; <CR> private String number ; <CR> public Test ( String t 9 , String O , double V 4 , double P 7 ) { <CR> number = t 9 ; <CR> name = O ; <CR> score = V 4 ; <CR> propotation = P 7 ; <CR> } <CR> private double propotation ; <CR> private String time , range , end_time , description ; <CR> String info_description ; <CR> abstract public void print ( ) ; <CR> } <CR> <EOC>