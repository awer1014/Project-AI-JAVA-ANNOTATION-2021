<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String u 1 , String R 2 , double H 6 , double C 2 ) { <CR> super ( u 1 , R 2 , H 6 , C 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String b 5 , String O 1 , double j 8 , double z 6 ) { <CR> super ( b 5 , O 1 , j 8 , z 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] y 3 ) { <CR> Scanner M 6 = new Scanner ( System . in ) ; <CR> boolean d 2 = <STRING> ; <CR> while ( d 2 ) { <CR> System . out . println ( <STRING> ) ; <CR> String Q 9 = M 6 . nextLine ( ) ; <CR> if ( Q 9 . equals ( <STRING> ) ) { <CR> d 2 = <STRING> ; <CR> break ; <CR> } <CR> if ( Q 9 . equals ( <STRING> ) || Q 9 . equals ( <STRING> ) || Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String c 6 = M 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String d = M 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double C 0 = Double . parseDouble ( M 6 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double R 8 = Double . parseDouble ( M 6 . nextLine ( ) ) ; <CR> String j = <STRING> ; <CR> String I = <STRING> ; <CR> String b 8 = <STRING> ; <CR> String B 0 = <STRING> ; <CR> String a 5 = <STRING> ; <CR> String n 8 = <STRING> ; <CR> if ( Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> b 8 = M 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 0 = M 6 . nextLine ( ) ; <CR> } <CR> if ( Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> j = M 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I = M 6 . nextLine ( ) ; <CR> } <CR> if ( Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> a 5 = M 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 8 = M 6 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test b 1 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( Q 9 . equals ( <STRING> ) ) <CR> b 1 = new Exam ( c 6 , d , C 0 , R 8 ) ; <CR> else if ( Q 9 . equals ( <STRING> ) ) <CR> b 1 = new HomeWork ( c 6 , d , C 0 , R 8 ) ; <CR> else if ( Q 9 . equals ( <STRING> ) ) <CR> b 1 = new Report ( c 6 , d , C 0 , R 8 ) ; <CR> if ( b 1 ! = <STRING> ) { <CR> b 1 . print ( ) ; <CR> if ( Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + b 8 ) ; <CR> System . out . println ( <STRING> + B 0 ) ; <CR> } <CR> else if ( Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + j ) ; <CR> System . out . println ( <STRING> + I ) ; <CR> } <CR> else if ( Q 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + a 5 ) ; <CR> System . out . println ( <STRING> + n 8 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> b 1 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String P 6 , String I 1 , double y 0 , double O 6 ) { <CR> super ( P 6 , I 1 , y 0 , O 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private double score ; <CR> private String time , range , end_time , description ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> abstract public void print ( ) ; <CR> private String number ; <CR> public Test ( String w 0 , String p 6 , double L , double a 5 ) { <CR> number = w 0 ; <CR> name = p 6 ; <CR> score = L ; <CR> propotation = a 5 ; <CR> } <CR> private String name ; <CR> String info_description ; <CR> private double propotation ; <CR> String info ; <CR> } <CR> <EOC>