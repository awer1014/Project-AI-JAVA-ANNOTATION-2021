<BOC> import java . util . Scanner ; <CR> public class Evaluation { <CR> double grade , level ; <CR> String num , name ; <CR> public void namePrint ( ) { <CR> System . out . println ( name ) ; <CR> } <CR> public void numPrint ( ) { <CR> System . out . println ( num ) ; <CR> } <CR> public void gradePrint ( ) { <CR> System . out . println ( grade ) ; <CR> } <CR> public void levelPrint ( ) { <CR> System . out . println ( level ) ; <CR> } <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> public Evaluation ( String U 0 , String B 3 , double z 5 , double p 8 ) { <CR> this . num = U 0 ; <CR> this . name = B 3 ; <CR> this . grade = z 5 ; <CR> this . level = p 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String A 0 , String Y 1 , double c 2 , double l 0 , String V 7 , String U 0 ) { <CR> super ( A 0 , Y 1 , c 2 , l 0 ) ; <CR> this . data = V 7 ; <CR> this . b = U 0 ; <CR> } <CR> String data , b ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String f 5 , String j 2 , double R 0 , double z 7 , String s 1 , String O ) { <CR> super ( f 5 , j 2 , R 0 , z 7 ) ; <CR> this . data = s 1 ; <CR> this . a = O ; <CR> } <CR> String data , a ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String file , f ; <CR> public Report ( String b 6 , String K 8 , double L 4 , double k 6 , String i 8 , String b 7 ) { <CR> super ( b 6 , K 8 , L 4 , k 6 ) ; <CR> this . file = i 8 ; <CR> this . f = b 7 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static String num , name , eat ; <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> public static void main ( String [ ] y 6 ) { <CR> int L 7 ; <CR> System . out . print ( <STRING> ) ; <CR> L 7 = cin . nextInt ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> num = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> name = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> grade = cin . nextFloat ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> level = cin . nextFloat ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> switch ( L 7 ) { <CR> case <NUM_INT> : <CR> String v 2 , f 0 ; <CR> System . out . print ( <STRING> ) ; <CR> v 2 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 0 = cin . nextLine ( ) ; <CR> Exam J 0 = new Exam ( num , name , grade , level , v 2 , f 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 0 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 0 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 0 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 0 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + J 0 . v 2 ) ; <CR> System . out . println ( <STRING> + J 0 . f 0 ) ; <CR> break ; <CR> case <NUM_INT> : <CR> String Q 5 ; <CR> System . out . print ( <STRING> ) ; <CR> v 2 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 5 = cin . nextLine ( ) ; <CR> HomeWork a 2 = new HomeWork ( num , name , grade , level , v 2 , Q 5 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 2 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 2 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 2 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 2 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + a 2 . v 2 ) ; <CR> System . out . println ( <STRING> + a 2 . Q 5 ) ; <CR> break ; <CR> case <NUM_INT> : <CR> String U 3 , o 0 ; <CR> System . out . print ( <STRING> ) ; <CR> U 3 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = cin . nextLine ( ) ; <CR> Report m = new Report ( num , name , grade , level , U 3 , o 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> m . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m . levelPrint ( ) ; <CR> System . out . println ( <STRING> + m . U 3 ) ; <CR> System . out . println ( <STRING> + m . o 0 ) ; <CR> break ; <CR> } <CR> } <CR> static double grade , level ; <CR> } <CR> <EOC>