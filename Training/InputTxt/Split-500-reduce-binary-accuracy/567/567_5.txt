<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String r , String L 5 , String G 8 , String Q 0 , String O 1 ) { <CR> super ( r , L 5 , G 8 , Q 0 , O 1 ) ; <CR> } <CR> public void display ( ) { <CR> System . out . print ( receiver + title + <STRING> + <STRING> + <STRING> ) ; <CR> System . out . print ( content + <STRING> ) ; <CR> System . out . print ( sender + <STRING> + <STRING> + <STRING> ) ; <CR> System . out . print ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String C 2 , String n , String n 2 , String k , String l 9 ) { <CR> super ( C 2 , n , n 2 , k , l 9 ) ; <CR> } <CR> public void display ( ) { <CR> System . out . print ( <STRING> + <STRING> + title + <STRING> + receiver + <STRING> ) ; <CR> System . out . print ( content + <STRING> ) ; <CR> System . out . print ( <STRING> + <STRING> ) ; <CR> System . out . print ( sender + <STRING> ) ; <CR> System . out . print ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Envelop { <CR> String senderAddr ; <CR> Envelop ( String N , String v 2 , Letter c 2 ) { <CR> this . senderAddr = N ; <CR> this . receiverAddr = v 2 ; <CR> this . letter = c 2 ; <CR> } <CR> String receiverAddr ; <CR> void display ( ) { <CR> System . out . print ( <STRING> + senderAddr + <STRING> + <STRING> + letter . sender + <STRING> ) ; <CR> System . out . print ( <STRING> + <STRING> + receiverAddr + <STRING> + letter . receiver + <STRING> + letter . title + <STRING> + <STRING> ) ; <CR> System . out . print ( <STRING> + <STRING> ) ; <CR> letter . display ( ) ; <CR> } <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> abstract public class Letter implements Comparable { <CR> int valueOf ( String q 7 ) { <CR> int l 6 = <NUM_INT> ; <CR> for ( int l 9 = <NUM_INT> ; l 9 < q 7 . length ( ) ; l 9 ++ ) { <CR> char O 8 = q 7 . charAt ( l 9 ) ; <CR> l 6 = l 6 * <NUM_INT> + O 8 - <STRING> ; <CR> } <CR> return l 6 ; <CR> } <CR> Letter ( String R , String p 7 , String K 0 , String D 7 , String b 5 ) { <CR> this . title = R ; <CR> this . receiver = p 7 ; <CR> this . content = K 0 ; <CR> this . sender = D 7 ; <CR> this . date = b 5 ; <CR> } <CR> boolean same ; <CR> abstract protected void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object a ) { <CR> Letter C 3 = ( Letter ) a ; <CR> same = <STRING> ; <CR> if ( valueOf ( this . date . substring ( <NUM_INT> , <NUM_INT> ) ) > valueOf ( o . date . substring ( <NUM_INT> , <NUM_INT> ) ) ) <CR> return <NUM_INT> ; <CR> else if ( valueOf ( this . date . substring ( <NUM_INT> , <NUM_INT> ) ) == valueOf ( o . date . substring ( <NUM_INT> , <NUM_INT> ) ) ) { <CR> return <NUM_INT> ; <CR> } <CR> else <CR> return - <NUM_INT> ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> import java . util . Arrays ; <CR> public class test { <CR> public static void main ( String [ ] t 1 ) { <CR> Letter [ ] r 2 = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> Arrays . sort ( r 2 ) ; <CR> for ( int z 7 = <NUM_INT> ; z 7 < <NUM_INT> ; z 7 ++ ) <CR> r 2 [ z 7 ] . display ( ) ; <CR> } <CR> } <CR> <EOC>