<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> ChineseLetter ( String b 0 , String H 2 , String v 1 , Item [ ] r 9 , int H 1 ) { <CR> id = b 0 ; <CR> date = H 2 ; <CR> num_i = H 1 ; <CR> for ( int d 2 = <NUM_INT> ; d 2 < H 1 ; d 2 ++ ) <CR> it [ d 2 ] = r 9 [ d 2 ] ; <CR> } <CR> private int num_i ; <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( String X 4 , String L 4 , double c 1 , int C 1 , double F ) { <CR> id = X 4 ; <CR> name = L 4 ; <CR> money = c 1 ; <CR> cnt = C 1 ; <CR> discnt = F ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private double money , discnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( ) { <CR> } <CR> private static double total_money = <NUM_INT> ; <CR> private int cnt ; <CR> private String id , name ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] u 1 ) { <CR> Scanner M 6 = new Scanner ( System . in ) ; <CR> String D 6 , p 6 , X 3 ; <CR> System . out . print ( <STRING> ) ; <CR> D 6 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 6 = M 6 . nextLine ( ) ; <CR> X 3 = M 6 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String R 6 , A 4 , b 7 , n 6 , Y 8 ; <CR> System . out . print ( <STRING> ) ; <CR> R 6 = M 6 . nextLine ( ) ; <CR> if ( R 6 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> A 4 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 7 = M 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>