<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] A 3 ) { <CR> String M ; <CR> String G 4 ; <CR> Scanner X 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> M = X 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 4 = X 9 . nextLine ( ) ; <CR> Keeper l 5 = new Keeper ( M , G 4 ) ; <CR> } <CR> String tel ; <CR> String id ; <CR> void Keeper ( String M , String G 4 ) { <CR> this . id = M ; <CR> this . tel = G 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> void Pet ( String P , String y 6 , String T 0 , Keeper N 9 ) { <CR> count ++ ; <CR> this . pid = P ; <CR> this . name = y 6 ; <CR> this . type = T 0 ; <CR> this . keeper = N 9 ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] O 2 ) { <CR> String P ; <CR> String y 6 ; <CR> String T 0 ; <CR> String i 4 ; <CR> String E 2 ; <CR> Scanner Z 2 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 4 = Z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 2 = Z 2 . nextLine ( ) ; <CR> Keeper n 6 = new Keeper ( i 4 , E 2 ) ; <CR> Scanner Z 2 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> P = Z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> T 0 = Z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> y 6 = Z 2 . nextLine ( ) ; <CR> pet Y = new pet ( P , y 6 , T 0 , n 6 ) ; <CR> String y 1 = Y . Speak ( ) ; <CR> System . out . println ( <STRING> + y 1 ) ; <CR> } <CR> String pid ; <CR> static int count ; <CR> String type ; <CR> String name ; <CR> Keeper keeper ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> } <CR> <EOC>