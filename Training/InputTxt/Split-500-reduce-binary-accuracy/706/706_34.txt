<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> void Keeper ( String d 0 , String K 5 ) { <CR> this . id = d 0 ; <CR> this . tel = K 5 ; <CR> } <CR> public static void main ( String [ ] I 6 ) { <CR> String d 0 ; <CR> String K 5 ; <CR> Scanner b 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 0 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 5 = b 0 . nextLine ( ) ; <CR> Keeper U 9 = new Keeper ( d 0 , K 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String type ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] h 6 ) { <CR> String b 9 ; <CR> String k 9 ; <CR> String i 9 ; <CR> String d 0 ; <CR> String H 4 ; <CR> Scanner k 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 0 = k 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 4 = k 0 . nextLine ( ) ; <CR> Keeper U = new Keeper ( d 0 , H 4 ) ; <CR> Scanner k 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> b 9 = k 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 9 = k 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 9 = k 0 . nextLine ( ) ; <CR> pet C 9 = new pet ( b 9 , k 9 , i 9 , U ) ; <CR> String t = C 9 . Speak ( ) ; <CR> System . out . println ( <STRING> + t ) ; <CR> } <CR> Keeper keeper ; <CR> String name ; <CR> String pid ; <CR> void Pet ( String b 9 , String k 9 , String i 9 , Keeper D 3 ) { <CR> count ++ ; <CR> this . pid = b 9 ; <CR> this . name = k 9 ; <CR> this . type = i 9 ; <CR> this . keeper = D 3 ; <CR> } <CR> static int count ; <CR> } <CR> <EOC>