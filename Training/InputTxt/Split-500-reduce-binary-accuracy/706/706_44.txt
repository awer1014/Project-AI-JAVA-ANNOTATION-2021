<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> void Keeper ( String m 2 , String j 6 ) { <CR> this . id = m 2 ; <CR> this . tel = j 6 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] w 1 ) { <CR> String m 2 ; <CR> String j 6 ; <CR> Scanner G 3 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 2 = G 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> j 6 = G 3 . nextLine ( ) ; <CR> Keeper k 3 = new Keeper ( m 2 , j 6 ) ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> Keeper keeper ; <CR> String name ; <CR> static int count ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String pid ; <CR> void Pet ( String v , String K 5 , String M 0 , Keeper g ) { <CR> count ++ ; <CR> this . pid = v ; <CR> this . name = K 5 ; <CR> this . type = M 0 ; <CR> this . keeper = g ; <CR> } <CR> public static void main ( String [ ] N 1 ) { <CR> String v ; <CR> String K 5 ; <CR> String M 0 ; <CR> String d 6 ; <CR> String R 9 ; <CR> Scanner x 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 6 = x 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 9 = x 8 . nextLine ( ) ; <CR> Keeper D 2 = new Keeper ( d 6 , R 9 ) ; <CR> Scanner x 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> v = x 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> M 0 = x 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 5 = x 8 . nextLine ( ) ; <CR> pet r 5 = new pet ( v , K 5 , M 0 , D 2 ) ; <CR> String z 1 = r 5 . Speak ( ) ; <CR> System . out . println ( <STRING> + z 1 ) ; <CR> } <CR> String type ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC>