<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> protected double grade , gradepc ; <CR> abstract public void printa ( ) ; <CR> private String sid , name , type ; <CR> public Evaluation ( String k , String L 8 , String w 3 , double e 6 , double z 3 ) { <CR> sid = k ; <CR> name = L 8 ; <CR> type = w 3 ; <CR> this . grade = e 6 ; <CR> this . gradepc = z 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String L 4 , String X 9 , String B 7 , double h 1 , double Y 2 ) { <CR> super ( L 4 , X 9 , B 7 , h 1 , Y 2 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date ; <CR> String range ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] b 2 ) { <CR> Scanner r 3 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int K 5 = <NUM_INT> ; <CR> do { <CR> K 5 = r 3 . nextInt ( ) ; <CR> } <CR> while ( K 5 > <NUM_INT> || K 5 < <NUM_INT> ) ; <CR> return mapEvaluation ( K 5 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int K 5 ) { <CR> Evaluation G 9 = <STRING> ; <CR> switch ( K 5 ) { <CR> case <NUM_INT> : <CR> G 9 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>