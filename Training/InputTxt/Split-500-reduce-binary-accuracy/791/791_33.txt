<BOC> abstract public class Evaluation { <CR> abstract public void printa ( ) ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> public Evaluation ( String a 3 , String A 2 , String E 8 , double t 1 , double E 3 ) { <CR> sid = a 3 ; <CR> name = A 2 ; <CR> type = E 8 ; <CR> this . grade = t 1 ; <CR> this . gradepc = E 3 ; <CR> } <CR> private String sid , name , type ; <CR> protected double grade , gradepc ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date ; <CR> String range ; <CR> public Exam ( String H 6 , String P 3 , String r 2 , double A 7 , double q 7 ) { <CR> super ( H 6 , P 3 , r 2 , A 7 , q 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 7 ) { <CR> Scanner T 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int h 1 = <NUM_INT> ; <CR> do { <CR> h 1 = T 4 . nextInt ( ) ; <CR> } <CR> while ( h 1 > <NUM_INT> || h 1 < <NUM_INT> ) ; <CR> return mapEvaluation ( h 1 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int h 1 ) { <CR> Evaluation G 2 = <STRING> ; <CR> switch ( h 1 ) { <CR> case <NUM_INT> : <CR> G 2 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>