<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> abstract public void printa ( ) ; <CR> public Evaluation ( String U 5 , String b 3 , String m 2 , double q 4 , double l 2 ) { <CR> sid = U 5 ; <CR> name = b 3 ; <CR> type = m 2 ; <CR> this . grade = q 4 ; <CR> this . gradepc = l 2 ; <CR> } <CR> private String sid , name , type ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String range ; <CR> public Exam ( String l 4 , String g 3 , String e 5 , double X 0 , double L 0 ) { <CR> super ( l 4 , g 3 , e 5 , X 0 , L 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] s 9 ) { <CR> Scanner T 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int R 6 = <NUM_INT> ; <CR> do { <CR> R 6 = T 5 . nextInt ( ) ; <CR> } <CR> while ( R 6 > <NUM_INT> || R 6 < <NUM_INT> ) ; <CR> return mapEvaluation ( R 6 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int R 6 ) { <CR> Evaluation N 2 = <STRING> ; <CR> switch ( R 6 ) { <CR> case <NUM_INT> : <CR> N 2 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>