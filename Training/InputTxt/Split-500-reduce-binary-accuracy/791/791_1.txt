<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> public Evaluation ( String V 6 , String g 1 , String D 0 , double l , double x 8 ) { <CR> sid = V 6 ; <CR> name = g 1 ; <CR> type = D 0 ; <CR> this . grade = l ; <CR> this . gradepc = x 8 ; <CR> } <CR> abstract public void printa ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String range ; <CR> public Exam ( String B 1 , String d 9 , String K 5 , double w 1 , double M 3 ) { <CR> super ( B 1 , d 9 , K 5 , w 1 , M 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] g 4 ) { <CR> Scanner B 3 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int j 4 = <NUM_INT> ; <CR> do { <CR> j 4 = B 3 . nextInt ( ) ; <CR> } <CR> while ( j 4 > <NUM_INT> || j 4 < <NUM_INT> ) ; <CR> return mapEvaluation ( j 4 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int j 4 ) { <CR> Evaluation U 0 = <STRING> ; <CR> switch ( j 4 ) { <CR> case <NUM_INT> : <CR> U 0 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>