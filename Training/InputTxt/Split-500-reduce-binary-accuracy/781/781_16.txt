<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> public void print ( ) { <CR> String Z 0 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> Z 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> Z 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> Z 0 += <STRING> ; <CR> System . out . println ( <STRING> + Z 0 ) ; <CR> } <CR> public Evaluation ( String W 5 ) { <CR> kind = W 5 ; <CR> } <CR> abstract public void ask ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String P 5 , String A 3 ) { <CR> super ( P 5 , A 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String m 5 , String z 5 ) { <CR> super ( m 5 , z 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String m 8 , String z 5 ) { <CR> super ( m 8 , z 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String N 9 , String N 6 , String s 3 , String b 1 ) { <CR> id = N 9 ; <CR> name = N 6 ; <CR> score = s 3 ; <CR> prop = b 1 ; <CR> } <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] k 8 ) { <CR> Scanner A 3 = new Scanner ( System . in ) ; <CR> boolean j 8 = <STRING> ; <CR> while ( j 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String u 5 = A 3 . nextLine ( ) ; <CR> if ( u 5 . equals ( <STRING> ) ) { <CR> j 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String Y 2 = A 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String n 2 = A 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String J 7 = A 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String O 0 = A 3 . nextLine ( ) ; <CR> Student q 0 = new Student ( Y 2 , n 2 , J 7 , O 0 ) ; <CR> Evaluation g 6 = new Evaluation ( u 5 ) ; <CR> Evaluation n 9 = <STRING> ; <CR> String t 4 , A ; <CR> if ( u 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 4 = A 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A = A 3 . nextLine ( ) ; <CR> n 9 = new Exam ( t 4 , A ) ; <CR> } <CR> else if ( u 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 4 = A 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A = A 3 . nextLine ( ) ; <CR> n 9 = new HomeWork ( t 4 , A ) ; <CR> } <CR> else if ( u 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 4 = A 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A = A 3 . nextLine ( ) ; <CR> n 9 = new Report ( t 4 , A ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( n 9 ! = <STRING> ) { <CR> g 6 . print ( ) ; <CR> q 0 . print ( ) ; <CR> n 9 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>