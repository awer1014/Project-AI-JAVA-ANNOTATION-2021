<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> String o 4 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> o 4 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> o 4 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> o 4 += <STRING> ; <CR> System . out . println ( <STRING> + o 4 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String J 5 ) { <CR> kind = J 5 ; <CR> } <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String p 0 , String J 5 ) { <CR> super ( p 0 , J 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String w 6 , String q 1 ) { <CR> super ( w 6 , q 1 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String L 3 , String r 4 ) { <CR> super ( L 3 , r 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String j 1 , String l 0 , String f 7 , String m 5 ) { <CR> id = j 1 ; <CR> name = l 0 ; <CR> score = f 7 ; <CR> prop = m 5 ; <CR> } <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] m 3 ) { <CR> Scanner E = new Scanner ( System . in ) ; <CR> boolean l = <STRING> ; <CR> while ( l ) { <CR> System . out . println ( <STRING> ) ; <CR> String J 7 = E . nextLine ( ) ; <CR> if ( J 7 . equals ( <STRING> ) ) { <CR> l = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String N 0 = E . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String f 3 = E . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Z 5 = E . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String i 4 = E . nextLine ( ) ; <CR> Student J 3 = new Student ( N 0 , f 3 , Z 5 , i 4 ) ; <CR> Evaluation X 9 = new Evaluation ( J 7 ) ; <CR> Evaluation J 8 = <STRING> ; <CR> String z 9 , d 7 ; <CR> if ( J 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 9 = E . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 7 = E . nextLine ( ) ; <CR> J 8 = new Exam ( z 9 , d 7 ) ; <CR> } <CR> else if ( J 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 9 = E . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 7 = E . nextLine ( ) ; <CR> J 8 = new HomeWork ( z 9 , d 7 ) ; <CR> } <CR> else if ( J 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 9 = E . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 7 = E . nextLine ( ) ; <CR> J 8 = new Report ( z 9 , d 7 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( J 8 ! = <STRING> ) { <CR> X 9 . print ( ) ; <CR> J 3 . print ( ) ; <CR> J 8 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>