<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String Q 8 ) { <CR> kind = Q 8 ; <CR> } <CR> public void print ( ) { <CR> String B 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> B 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> B 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> B 9 += <STRING> ; <CR> System . out . println ( <STRING> + B 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String Y 1 , String P 0 ) { <CR> super ( Y 1 , P 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String W 6 , String e 2 ) { <CR> super ( W 6 , e 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String D 2 , String a 7 ) { <CR> super ( D 2 , a 7 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String Z 9 , String X 4 , String N 8 , String r 0 ) { <CR> id = Z 9 ; <CR> name = X 4 ; <CR> score = N 8 ; <CR> prop = r 0 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] s 9 ) { <CR> Scanner T 0 = new Scanner ( System . in ) ; <CR> boolean A 9 = <STRING> ; <CR> while ( A 9 ) { <CR> System . out . println ( <STRING> ) ; <CR> String D 3 = T 0 . nextLine ( ) ; <CR> if ( D 3 . equals ( <STRING> ) ) { <CR> A 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String O 8 = T 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String i = T 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String F 4 = T 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String d 2 = T 0 . nextLine ( ) ; <CR> Student m = new Student ( O 8 , i , F 4 , d 2 ) ; <CR> Evaluation g 2 = new Evaluation ( D 3 ) ; <CR> Evaluation P 1 = <STRING> ; <CR> String Q 8 , R 1 ; <CR> if ( D 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q 8 = T 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 1 = T 0 . nextLine ( ) ; <CR> P 1 = new Exam ( Q 8 , R 1 ) ; <CR> } <CR> else if ( D 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q 8 = T 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 1 = T 0 . nextLine ( ) ; <CR> P 1 = new HomeWork ( Q 8 , R 1 ) ; <CR> } <CR> else if ( D 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q 8 = T 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 1 = T 0 . nextLine ( ) ; <CR> P 1 = new Report ( Q 8 , R 1 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( P 1 ! = <STRING> ) { <CR> g 2 . print ( ) ; <CR> m . print ( ) ; <CR> P 1 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>