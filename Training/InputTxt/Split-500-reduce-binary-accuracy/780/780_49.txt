<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sName ; <CR> protected String sNumber ; <CR> protected double sProportion ; <CR> Evaluation ( String N 4 , String C 4 , double D 8 , double M ) { <CR> this . sNumber = N 4 ; <CR> this . sName = C 4 ; <CR> this . sGrade = D 8 ; <CR> this . sProportion = M ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String S 1 , String M 0 , double V 0 , double M 7 , String l 1 , String L 6 ) { <CR> super ( S 1 , M 0 , V 0 , M 7 ) ; <CR> this . date = l 1 ; <CR> this . range = L 6 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String deadline ; <CR> public Homework ( String D 5 , String e 2 , double s 8 , double C 2 , String j 7 , String r 7 ) { <CR> super ( D 5 , e 2 , s 8 , C 2 ) ; <CR> this . deadline = j 7 ; <CR> this . description = r 7 ; <CR> } <CR> protected String description ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Z 4 , String P 9 , double O 6 , double l 2 , String U 1 , String l 8 ) { <CR> super ( Z 4 , P 9 , O 6 , l 2 ) ; <CR> this . content = U 1 ; <CR> this . references = l 8 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int E 0 = <NUM_INT> ; <CR> do { <CR> E 0 = keyboard . nextInt ( ) ; <CR> } <CR> while ( E 0 > <NUM_INT> || E 0 < <NUM_INT> ) ; <CR> return choice ( E 0 ) ; <CR> } <CR> static Evaluation choice ( int E 0 ) { <CR> switch ( E 0 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> } <CR> <EOC>