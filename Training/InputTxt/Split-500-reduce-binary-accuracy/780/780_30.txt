<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sProportion ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> protected String sNumber ; <CR> Evaluation ( String a 3 , String b 3 , double o , double m 2 ) { <CR> this . sNumber = a 3 ; <CR> this . sName = b 3 ; <CR> this . sGrade = o ; <CR> this . sProportion = m 2 ; <CR> } <CR> protected String sName ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String g 0 , String M 0 , double k 0 , double g 8 , String x 8 , String P 5 ) { <CR> super ( g 0 , M 0 , k 0 , g 8 ) ; <CR> this . date = x 8 ; <CR> this . range = P 5 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String i 5 , String l 2 , double x 6 , double Q 5 , String t 8 , String o 1 ) { <CR> super ( i 5 , l 2 , x 6 , Q 5 ) ; <CR> this . deadline = t 8 ; <CR> this . description = o 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> protected String content ; <CR> public Report ( String E 3 , String j 7 , double P 2 , double N 3 , String s 7 , String H 1 ) { <CR> super ( E 3 , j 7 , P 2 , N 3 ) ; <CR> this . content = s 7 ; <CR> this . references = H 1 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int V 7 ) { <CR> switch ( V 7 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int V 7 = <NUM_INT> ; <CR> do { <CR> V 7 = keyboard . nextInt ( ) ; <CR> } <CR> while ( V 7 > <NUM_INT> || V 7 < <NUM_INT> ) ; <CR> return choice ( V 7 ) ; <CR> } <CR> } <CR> <EOC>