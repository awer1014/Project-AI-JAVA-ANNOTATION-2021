<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sNumber ; <CR> protected double sProportion ; <CR> protected String sName ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> Evaluation ( String u 8 , String d 4 , double R 8 , double g 9 ) { <CR> this . sNumber = u 8 ; <CR> this . sName = d 4 ; <CR> this . sGrade = R 8 ; <CR> this . sProportion = g 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String P 7 , String Z 2 , double a 8 , double j 7 , String P 5 , String G 8 ) { <CR> super ( P 7 , Z 2 , a 8 , j 7 ) ; <CR> this . date = P 5 ; <CR> this . range = G 8 ; <CR> } <CR> protected String range ; <CR> protected String date ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String d 2 , String W 1 , double e 2 , double u 1 , String r 8 , String U 2 ) { <CR> super ( d 2 , W 1 , e 2 , u 1 ) ; <CR> this . deadline = r 8 ; <CR> this . description = U 2 ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String z 8 , String K , double h 1 , double b 0 , String v 1 , String Y 2 ) { <CR> super ( z 8 , K , h 1 , b 0 ) ; <CR> this . content = v 1 ; <CR> this . references = Y 2 ; <CR> } <CR> protected String content ; <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int X 6 ) { <CR> switch ( X 6 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int X 6 = <NUM_INT> ; <CR> do { <CR> X 6 = keyboard . nextInt ( ) ; <CR> } <CR> while ( X 6 > <NUM_INT> || X 6 < <NUM_INT> ) ; <CR> return choice ( X 6 ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>