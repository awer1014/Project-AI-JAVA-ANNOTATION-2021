<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sName ; <CR> Evaluation ( String p 9 , String o 8 , double s 3 , double k 3 ) { <CR> this . sNumber = p 9 ; <CR> this . sName = o 8 ; <CR> this . sGrade = s 3 ; <CR> this . sProportion = k 3 ; <CR> } <CR> protected String sNumber ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> protected double sProportion ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String Q 1 , String s 8 , double V 9 , double e 5 , String b 7 , String N 2 ) { <CR> super ( Q 1 , s 8 , V 9 , e 5 ) ; <CR> this . date = b 7 ; <CR> this . range = N 2 ; <CR> } <CR> protected String date ; <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String R 9 , String s , double n , double J , String O 6 , String h 0 ) { <CR> super ( R 9 , s , n , J ) ; <CR> this . deadline = O 6 ; <CR> this . description = h 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String U 0 , String H 9 , double U 6 , double r 2 , String m 2 , String A ) { <CR> super ( U 0 , H 9 , U 6 , r 2 ) ; <CR> this . content = m 2 ; <CR> this . references = A ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int R 0 ) { <CR> switch ( R 0 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int R 0 = <NUM_INT> ; <CR> do { <CR> R 0 = keyboard . nextInt ( ) ; <CR> } <CR> while ( R 0 > <NUM_INT> || R 0 < <NUM_INT> ) ; <CR> return choice ( R 0 ) ; <CR> } <CR> } <CR> <EOC>