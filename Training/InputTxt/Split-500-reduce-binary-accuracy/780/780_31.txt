<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sNumber ; <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> Evaluation ( String o 7 , String y 2 , double z 0 , double f 1 ) { <CR> this . sNumber = o 7 ; <CR> this . sName = y 2 ; <CR> this . sGrade = z 0 ; <CR> this . sProportion = f 1 ; <CR> } <CR> protected String sName ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String a 2 , String i 9 , double F 3 , double J 1 , String M 8 , String p 8 ) { <CR> super ( a 2 , i 9 , F 3 , J 1 ) ; <CR> this . date = M 8 ; <CR> this . range = p 8 ; <CR> } <CR> protected String date ; <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String o 5 , String w 3 , double g , double C 7 , String f , String g 1 ) { <CR> super ( o 5 , w 3 , g , C 7 ) ; <CR> this . deadline = f ; <CR> this . description = g 1 ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> protected String references ; <CR> public Report ( String Q 5 , String F 8 , double k 5 , double k 9 , String C 4 , String G 4 ) { <CR> super ( Q 5 , F 8 , k 5 , k 9 ) ; <CR> this . content = C 4 ; <CR> this . references = G 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int r 8 ) { <CR> switch ( r 8 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int r 8 = <NUM_INT> ; <CR> do { <CR> r 8 = keyboard . nextInt ( ) ; <CR> } <CR> while ( r 8 > <NUM_INT> || r 8 < <NUM_INT> ) ; <CR> return choice ( r 8 ) ; <CR> } <CR> } <CR> <EOC>