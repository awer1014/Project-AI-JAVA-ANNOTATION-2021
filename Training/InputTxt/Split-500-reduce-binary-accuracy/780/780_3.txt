<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> Evaluation ( String j 4 , String l 5 , double G 8 , double H 1 ) { <CR> this . sNumber = j 4 ; <CR> this . sName = l 5 ; <CR> this . sGrade = G 8 ; <CR> this . sProportion = H 1 ; <CR> } <CR> protected String sNumber ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sName ; <CR> protected double sProportion ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String range ; <CR> public Exam ( String w , String o 1 , double z 1 , double Q 7 , String G 1 , String K 1 ) { <CR> super ( w , o 1 , z 1 , Q 7 ) ; <CR> this . date = G 1 ; <CR> this . range = K 1 ; <CR> } <CR> protected String date ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String s 2 , String M 7 , double w 3 , double w 9 , String r 0 , String A 0 ) { <CR> super ( s 2 , M 7 , w 3 , w 9 ) ; <CR> this . deadline = r 0 ; <CR> this . description = A 0 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> protected String content ; <CR> public Report ( String d 3 , String V 4 , double S 5 , double a , String p 9 , String B 6 ) { <CR> super ( d 3 , V 4 , S 5 , a ) ; <CR> this . content = p 9 ; <CR> this . references = B 6 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int U 4 ) { <CR> switch ( U 4 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int U 4 = <NUM_INT> ; <CR> do { <CR> U 4 = keyboard . nextInt ( ) ; <CR> } <CR> while ( U 4 > <NUM_INT> || U 4 < <NUM_INT> ) ; <CR> return choice ( U 4 ) ; <CR> } <CR> } <CR> <EOC>