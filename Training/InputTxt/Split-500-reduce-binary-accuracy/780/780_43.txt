<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sNumber ; <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> protected String sName ; <CR> Evaluation ( String S 0 , String m 6 , double k 1 , double w 9 ) { <CR> this . sNumber = S 0 ; <CR> this . sName = m 6 ; <CR> this . sGrade = k 1 ; <CR> this . sProportion = w 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String range ; <CR> protected String date ; <CR> public Exam ( String z 3 , String A 1 , double H , double r 3 , String A 6 , String P 4 ) { <CR> super ( z 3 , A 1 , H , r 3 ) ; <CR> this . date = A 6 ; <CR> this . range = P 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String F 8 , String z 7 , double p 9 , double x 3 , String f 7 , String m ) { <CR> super ( F 8 , z 7 , p 9 , x 3 ) ; <CR> this . deadline = f 7 ; <CR> this . description = m ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String B 4 , String K 3 , double n 9 , double h 4 , String w 6 , String x 6 ) { <CR> super ( B 4 , K 3 , n 9 , h 4 ) ; <CR> this . content = w 6 ; <CR> this . references = x 6 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int H 3 = <NUM_INT> ; <CR> do { <CR> H 3 = keyboard . nextInt ( ) ; <CR> } <CR> while ( H 3 > <NUM_INT> || H 3 < <NUM_INT> ) ; <CR> return choice ( H 3 ) ; <CR> } <CR> static Evaluation choice ( int H 3 ) { <CR> switch ( H 3 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>