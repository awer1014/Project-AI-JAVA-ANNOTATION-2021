<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> protected double sProportion ; <CR> protected String sNumber ; <CR> Evaluation ( String G 6 , String T 8 , double Y 9 , double u 5 ) { <CR> this . sNumber = G 6 ; <CR> this . sName = T 8 ; <CR> this . sGrade = Y 9 ; <CR> this . sProportion = u 5 ; <CR> } <CR> protected String sName ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String n 5 , String k 3 , double n 0 , double H 7 , String T 2 , String M 6 ) { <CR> super ( n 5 , k 3 , n 0 , H 7 ) ; <CR> this . date = T 2 ; <CR> this . range = M 6 ; <CR> } <CR> protected String range ; <CR> protected String date ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String t 1 , String x 3 , double H 8 , double G 5 , String x 7 , String r 3 ) { <CR> super ( t 1 , x 3 , H 8 , G 5 ) ; <CR> this . deadline = x 7 ; <CR> this . description = r 3 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> protected String content ; <CR> public Report ( String G 8 , String t 1 , double F 8 , double L 4 , String q 4 , String y 6 ) { <CR> super ( G 8 , t 1 , F 8 , L 4 ) ; <CR> this . content = q 4 ; <CR> this . references = y 6 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int b 8 ) { <CR> switch ( b 8 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int b 8 = <NUM_INT> ; <CR> do { <CR> b 8 = keyboard . nextInt ( ) ; <CR> } <CR> while ( b 8 > <NUM_INT> || b 8 < <NUM_INT> ) ; <CR> return choice ( b 8 ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>