<BOC> public class Keeper { <CR> Keeper ( String R 8 , String m 0 ) { <CR> this . id = R 8 ; <CR> this . tel = m 0 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> String id ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> String type ; <CR> void speak ( ) { <CR> if ( type . equals ( <STRING> ) ) <CR> System . out . println ( <STRING> + <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> + <STRING> ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String name ; <CR> Keeper keeper ; <CR> Pet ( String J , String I 2 , String Z 7 , Keeper H ) { <CR> this . pid = J ; <CR> this . name = I 2 ; <CR> this . type = Z 7 ; <CR> this . keeper = H ; <CR> count ++ ; <CR> } <CR> String pid ; <CR> static int count ; <CR> public static void main ( String [ ] f 6 ) { <CR> String J = f 6 [ <NUM_INT> ] ; <CR> String I 2 = f 6 [ <NUM_INT> ] ; <CR> String Z 7 = f 6 [ <NUM_INT> ] ; <CR> String C 9 = f 6 [ <NUM_INT> ] ; <CR> String Y 6 = f 6 [ <NUM_INT> ] ; <CR> String G 8 = f 6 [ <NUM_INT> ] ; <CR> Keeper N 5 = new Keeper ( <STRING> , <STRING> ) ; <CR> Pet o = new Pet ( J , I 2 , Z 7 , N 5 ) ; <CR> System . out . println ( <STRING> + Z 7 ) ; <CR> System . out . println ( <STRING> + J ) ; <CR> System . out . println ( <STRING> + I 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + G 8 ) ; <CR> System . out . println ( <STRING> + C 9 ) ; <CR> System . out . println ( <STRING> + Y 6 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> o . display ( ) ; <CR> N 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Keeper N 8 = new Keeper ( <STRING> , <STRING> ) ; <CR> Pet Z 4 = new Pet ( C 9 , Y 6 , G 8 , N 8 ) ; <CR> Z 4 . display ( ) ; <CR> N 8 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC>