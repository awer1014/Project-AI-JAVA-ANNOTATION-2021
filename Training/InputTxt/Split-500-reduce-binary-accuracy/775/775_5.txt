<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] P 8 ) { <CR> Scanner t 0 = new Scanner ( System . in ) ; <CR> String W 5 , g 0 , W 7 , a 3 , M 2 , Q 7 , t 1 ; <CR> System . out . print ( <STRING> ) ; <CR> W 5 = t 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 0 = t 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 7 = t 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 3 = t 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 2 = t 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 7 = t 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 1 = t 0 . nextLine ( ) ; <CR> if ( W 5 . equals ( <STRING> ) ) { <CR> Kindsoftest g 2 = new Test ( W 7 , g 0 , a 3 , Q 7 , M 2 , t 1 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( W 5 . equals ( <STRING> ) ) { <CR> Kindsoftest g 2 = new Hwork ( W 7 , g 0 , a 3 , Q 7 , M 2 , t 1 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest g 2 = new Mind ( W 7 , g 0 , a 3 , Q 7 , M 2 , t 1 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String k 8 , int L 6 , int h 7 , int m 6 , double e 9 , String c 8 ) { <CR> super ( k 8 , L 6 , h 7 , m 6 , e 9 , c 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String r 7 , int S 3 , int D 5 , int I , double r 6 , String q 2 ) { <CR> this . id = S 3 ; <CR> this . name = r 7 ; <CR> this . gread = D 5 ; <CR> this . gp = r 6 ; <CR> this . date = I ; <CR> this . range = q 2 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String o 4 , int W 0 , int P 9 , int M 9 , double B 0 , String w 3 ) { <CR> super ( o 4 , W 0 , P 9 , M 9 , B 0 , w 3 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String V 4 , int V 9 , int x 7 , int i , double w 9 , String k 1 ) { <CR> super ( V 4 , V 9 , x 7 , i , w 9 , k 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>