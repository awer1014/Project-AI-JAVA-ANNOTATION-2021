<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> Evaluation ( String k 3 , String c 7 , String u 1 , double P 1 , double O 3 ) { <CR> type = k 3 ; <CR> num = c 7 ; <CR> name = u 1 ; <CR> grade = P 1 ; <CR> pgrade = O 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String p 9 , String c 2 , String t 8 , double M 7 , double r 6 ) { <CR> super ( p 9 , c 2 , t 8 , M 7 , r 6 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String d 5 , String G 0 , String X 0 , double g 9 , double d 3 ) { <CR> super ( d 5 , G 0 , X 0 , g 9 , d 3 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String a 8 , String Q 2 , String v 9 , double c 7 , double d 1 ) { <CR> super ( a 8 , Q 2 , v 9 , c 7 , d 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] O 1 ) { <CR> Scanner F 8 = new Scanner ( System . in ) ; <CR> String w 1 , f 5 , Z 5 ; <CR> double F 5 , M 5 ; <CR> System . out . print ( <STRING> ) ; <CR> w 1 = F 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 5 = F 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Z 5 = F 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 5 = F 8 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 = F 8 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String O 0 , D , S 0 , D 8 , L , q 2 ; <CR> if ( w 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> O 0 = F 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D = F 8 . nextLine ( ) ; <CR> } <CR> else if ( w 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> S 0 = F 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 8 = F 8 . nextLine ( ) ; <CR> } <CR> else if ( w 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> L = F 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 2 = F 8 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation B 4 = <STRING> ; <CR> if ( w 1 . equals ( <STRING> ) ) <CR> B 4 = new Exam ( w 1 , f 5 , Z 5 , F 5 , M 5 ) ; <CR> else if ( w 1 . equals ( <STRING> ) ) <CR> B 4 = new HomeWork ( w 1 , f 5 , Z 5 , F 5 , M 5 ) ; <CR> else if ( w 1 . equals ( <STRING> ) ) <CR> B 4 = new Report ( w 1 , f 5 , Z 5 , F 5 , M 5 ) ; <CR> B 4 . print ( ) ; <CR> } <CR> } <CR> <EOC>