<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> Evaluation ( String O 7 , String F 4 , String t 8 , double t 7 , double D ) { <CR> type = O 7 ; <CR> num = F 4 ; <CR> name = t 8 ; <CR> grade = t 7 ; <CR> pgrade = D ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> public Exam ( String f 1 , String W 3 , String x 0 , double I 4 , double e 8 ) { <CR> super ( f 1 , W 3 , x 0 , I 4 , e 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String u 8 , String n 4 , String j 3 , double B 7 , double a 9 ) { <CR> super ( u 8 , n 4 , j 3 , B 7 , a 9 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String rep , bok ; <CR> public Report ( String v 8 , String X 6 , String Y 1 , double N 8 , double o 2 ) { <CR> super ( v 8 , X 6 , Y 1 , N 8 , o 2 ) ; <CR> } <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] r 6 ) { <CR> Scanner D 8 = new Scanner ( System . in ) ; <CR> String g 7 , x 2 , r 8 ; <CR> double P 0 , O 1 ; <CR> System . out . print ( <STRING> ) ; <CR> g 7 = D 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 2 = D 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> r 8 = D 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> P 0 = D 8 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> O 1 = D 8 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String o , a 2 , B , t 7 , s 5 , i 5 ; <CR> if ( g 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> o = D 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 2 = D 8 . nextLine ( ) ; <CR> } <CR> else if ( g 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> B = D 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 7 = D 8 . nextLine ( ) ; <CR> } <CR> else if ( g 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 5 = D 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 5 = D 8 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation E 9 = <STRING> ; <CR> if ( g 7 . equals ( <STRING> ) ) <CR> E 9 = new Exam ( g 7 , x 2 , r 8 , P 0 , O 1 ) ; <CR> else if ( g 7 . equals ( <STRING> ) ) <CR> E 9 = new HomeWork ( g 7 , x 2 , r 8 , P 0 , O 1 ) ; <CR> else if ( g 7 . equals ( <STRING> ) ) <CR> E 9 = new Report ( g 7 , x 2 , r 8 , P 0 , O 1 ) ; <CR> E 9 . print ( ) ; <CR> } <CR> } <CR> <EOC>