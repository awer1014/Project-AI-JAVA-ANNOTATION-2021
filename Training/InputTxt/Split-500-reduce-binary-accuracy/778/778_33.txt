<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> Evaluation ( String I 1 , String r 3 , String I , double w 7 , double t 2 ) { <CR> type = I 1 ; <CR> num = r 3 ; <CR> name = I ; <CR> grade = w 7 ; <CR> pgrade = t 2 ; <CR> } <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> public Exam ( String E 0 , String G 3 , String l 1 , double h 3 , double z 1 ) { <CR> super ( E 0 , G 3 , l 1 , h 3 , z 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String odate , des ; <CR> public HomeWork ( String S , String b 9 , String S 4 , double j 1 , double Z ) { <CR> super ( S , b 9 , S 4 , j 1 , Z ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String Y 7 , String m 4 , String u 8 , double n 4 , double L 8 ) { <CR> super ( Y 7 , m 4 , u 8 , n 4 , L 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] y 8 ) { <CR> Scanner L 3 = new Scanner ( System . in ) ; <CR> String x 1 , T 5 , L 2 ; <CR> double H 5 , z 8 ; <CR> System . out . print ( <STRING> ) ; <CR> x 1 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 5 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> L 2 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> H 5 = L 3 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> z 8 = L 3 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String i , P 2 , K 9 , J 8 , S 1 , a 0 ; <CR> if ( x 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> i = L 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 2 = L 3 . nextLine ( ) ; <CR> } <CR> else if ( x 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> K 9 = L 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 8 = L 3 . nextLine ( ) ; <CR> } <CR> else if ( x 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> S 1 = L 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 0 = L 3 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation a 1 = <STRING> ; <CR> if ( x 1 . equals ( <STRING> ) ) <CR> a 1 = new Exam ( x 1 , T 5 , L 2 , H 5 , z 8 ) ; <CR> else if ( x 1 . equals ( <STRING> ) ) <CR> a 1 = new HomeWork ( x 1 , T 5 , L 2 , H 5 , z 8 ) ; <CR> else if ( x 1 . equals ( <STRING> ) ) <CR> a 1 = new Report ( x 1 , T 5 , L 2 , H 5 , z 8 ) ; <CR> a 1 . print ( ) ; <CR> } <CR> } <CR> <EOC>