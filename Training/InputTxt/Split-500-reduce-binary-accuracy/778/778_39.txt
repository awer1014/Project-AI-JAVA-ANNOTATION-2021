<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected String type , num , name ; <CR> Evaluation ( String H 7 , String G 1 , String t 4 , double k 7 , double I 6 ) { <CR> type = H 7 ; <CR> num = G 1 ; <CR> name = t 4 ; <CR> grade = k 7 ; <CR> pgrade = I 6 ; <CR> } <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String B 7 , String a 3 , String J 0 , double S 8 , double j 1 ) { <CR> super ( B 7 , a 3 , J 0 , S 8 , j 1 ) ; <CR> } <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String X 3 , String C 0 , String g 4 , double i 8 , double T 7 ) { <CR> super ( X 3 , C 0 , g 4 , i 8 , T 7 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String K 3 , String n 1 , String e 6 , double R 7 , double u 1 ) { <CR> super ( K 3 , n 1 , e 6 , R 7 , u 1 ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] n 4 ) { <CR> Scanner M 0 = new Scanner ( System . in ) ; <CR> String v 8 , W 6 , H 8 ; <CR> double R 0 , R ; <CR> System . out . print ( <STRING> ) ; <CR> v 8 = M 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 6 = M 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> H 8 = M 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R 0 = M 0 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R = M 0 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String y , G 4 , U 1 , p 8 , U 7 , a ; <CR> if ( v 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> y = M 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 4 = M 0 . nextLine ( ) ; <CR> } <CR> else if ( v 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> U 1 = M 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 8 = M 0 . nextLine ( ) ; <CR> } <CR> else if ( v 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> U 7 = M 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> a = M 0 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation G 2 = <STRING> ; <CR> if ( v 8 . equals ( <STRING> ) ) <CR> G 2 = new Exam ( v 8 , W 6 , H 8 , R 0 , R ) ; <CR> else if ( v 8 . equals ( <STRING> ) ) <CR> G 2 = new HomeWork ( v 8 , W 6 , H 8 , R 0 , R ) ; <CR> else if ( v 8 . equals ( <STRING> ) ) <CR> G 2 = new Report ( v 8 , W 6 , H 8 , R 0 , R ) ; <CR> G 2 . print ( ) ; <CR> } <CR> } <CR> <EOC>