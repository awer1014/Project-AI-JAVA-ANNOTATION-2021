<BOC> import java . util . Scanner ; <CR> public class keeper { <CR> String id ; <CR> public void keeperdisplay ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> public keeper ( String A 8 , String O 5 ) { <CR> this . id = A 8 ; <CR> this . tel = O 5 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public void petdisplay ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> String name ; <CR> keeper keep ; <CR> static int count = <NUM_INT> ; <CR> public void speak ( String J 5 ) { <CR> if ( J 5 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else if ( J 5 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> static Scanner sca = new Scanner ( System . in ) ; <CR> pet ( String J 8 , String J 5 , String h 8 , keeper l 7 ) { <CR> this . pid = J 8 ; <CR> this . name = J 5 ; <CR> this . type = h 8 ; <CR> this . keep = l 7 ; <CR> count += <NUM_INT> ; <CR> } <CR> public static void main ( String [ ] g 1 ) { <CR> int Q 7 = <NUM_INT> ; <CR> while ( Q 7 ! = <NUM_INT> ) { <CR> System . out . print ( <STRING> ) ; <CR> String C 6 = sca . next ( ) ; <CR> if ( Integer . parseInt ( C 6 ) == <NUM_INT> ) <CR> break ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String W 5 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 8 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 9 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String M 2 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> keeper g 8 = new keeper ( e 9 , M 2 ) ; <CR> pet D 5 = new pet ( C 6 , W 5 , w 8 , g 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 5 . petdisplay ( ) ; <CR> g 8 . keeperdisplay ( ) ; <CR> D 5 . speak ( D 5 . pid ) ; <CR> System . out . println ( <STRING> ) ; <CR> count ++ ; <CR> } <CR> System . out . println ( <STRING> + count + <STRING> ) ; <CR> } <CR> String pid ; <CR> String type ; <CR> } <CR> <EOC>