<BOC> public class Evaluation { <CR> public void print ( ) { <CR> } <CR> protected String day , cover ; <CR> public Evaluation ( String Q , String z 2 ) { <CR> day = Q ; <CR> cover = z 2 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String R 2 , String a 6 ) { <CR> super ( R 2 , a 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String T 9 , String w 8 ) { <CR> super ( T 9 , w 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String W 2 , String U 5 ) { <CR> super ( W 2 , U 5 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> Student ( String D 9 , String J 3 , String U , String C 0 , String f 3 ) { <CR> evaluation = D 9 ; <CR> stid = J 3 ; <CR> stname = U ; <CR> stnumber = C 0 ; <CR> stnumberc = f 3 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] X 7 ) { <CR> Scanner t = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = t . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String j 6 , b 0 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> j 6 = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 0 = t . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> j 6 = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 0 = t . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> j 6 = t . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 0 = t . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation a = setEvaluation ( evaluation ) ; <CR> a . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String H 3 ) { <CR> Evaluation z 9 = <STRING> ; <CR> switch ( H 3 ) { <CR> case <STRING> : <CR> z 9 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> z 9 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> z 9 = new Report ( day , cover ) ; <CR> } <CR> return z 9 ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> } <CR> <EOC>