<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public Evaluation ( String d 2 , String n 0 ) { <CR> day = d 2 ; <CR> cover = n 0 ; <CR> } <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String P 1 , String o 1 ) { <CR> super ( P 1 , o 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String A , String S 0 ) { <CR> super ( A , S 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Report ( String d 6 , String g 7 ) { <CR> super ( d 6 , g 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> Student ( String j 9 , String r , String e 4 , String U 5 , String q 8 ) { <CR> evaluation = j 9 ; <CR> stid = r ; <CR> stname = e 4 ; <CR> stnumber = U 5 ; <CR> stnumberc = q 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> public static void main ( String [ ] w 2 ) { <CR> Scanner S 4 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = S 4 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String m 4 , X 7 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> m 4 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = S 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> m 4 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = S 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> m 4 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = S 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation m 7 = setEvaluation ( evaluation ) ; <CR> m 7 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String A 1 ) { <CR> Evaluation U 5 = <STRING> ; <CR> switch ( A 1 ) { <CR> case <STRING> : <CR> U 5 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> U 5 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> U 5 = new Report ( day , cover ) ; <CR> } <CR> return U 5 ; <CR> } <CR> static Student st ; <CR> } <CR> <EOC>