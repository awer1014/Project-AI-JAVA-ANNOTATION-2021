<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String U 1 , String z , String I , String k 9 , String o 9 ) { <CR> super ( U 1 , z , I , k 9 , o 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String I 0 , String O 8 , String g 0 , String a , String J 9 ) { <CR> super ( I 0 , O 8 , g 0 , a , J 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String W 7 , String l 3 , String w 9 , String H 0 , String K 2 ) { <CR> this . title = W 7 ; <CR> this . receiver = l 3 ; <CR> this . content = w 9 ; <CR> this . sender = H 0 ; <CR> this . date = K 2 ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object f 9 ) { <CR> Letter O = ( Letter ) f 9 ; <CR> if ( this . getDate ( ) . compareTo ( O . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( O . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] I 1 ) { <CR> Letter H 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter B = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter R = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList d 6 = { H 8 , B , R } ; <CR> for ( Letter L 5 : d 6 ) <CR> L 5 . display ( ) ; <CR> } <CR> } <CR> <EOC>