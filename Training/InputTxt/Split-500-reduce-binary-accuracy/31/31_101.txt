<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String B 1 , String o 1 , String a 9 , String r 5 , String g 8 ) { <CR> super ( B 1 , o 1 , a 9 , r 5 , g 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String d 0 , String Z , String a , String N 6 , String Z 0 ) { <CR> super ( d 0 , Z , a , N 6 , Z 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String D , String Z 4 , String d 1 , String r 7 , String T 5 ) { <CR> this . title = D ; <CR> this . receiver = Z 4 ; <CR> this . content = d 1 ; <CR> this . sender = r 7 ; <CR> this . date = T 5 ; <CR> } <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object Y 2 ) { <CR> Letter d 4 = ( Letter ) Y 2 ; <CR> if ( this . getDate ( ) . compareTo ( d 4 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( d 4 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] j 8 ) { <CR> Letter U 0 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter q 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter M 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList h = { U 0 , q 3 , M 3 } ; <CR> for ( Letter B : h ) <CR> B . display ( ) ; <CR> } <CR> } <CR> <EOC>