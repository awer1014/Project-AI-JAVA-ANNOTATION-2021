<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String K 1 , String r 8 , String J 2 , String x 6 , String Q 8 ) { <CR> super ( K 1 , r 8 , J 2 , x 6 , Q 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String s 9 , String x 0 , String a 8 , String O 2 , String G 6 ) { <CR> super ( s 9 , x 0 , a 8 , O 2 , G 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object l 6 ) { <CR> Letter Q = ( Letter ) l 6 ; <CR> if ( this . getDate ( ) . compareTo ( Q . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( Q . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> Letter ( String X 0 , String b 2 , String q , String f 3 , String Z 1 ) { <CR> this . title = X 0 ; <CR> this . receiver = b 2 ; <CR> this . content = q ; <CR> this . sender = f 3 ; <CR> this . date = Z 1 ; <CR> } <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] e 9 ) { <CR> Letter Q 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter P 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Q 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList g 0 = { Q 9 , P 3 , Q 8 } ; <CR> for ( Letter m 5 : g 0 ) <CR> m 5 . display ( ) ; <CR> } <CR> } <CR> <EOC>