<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String x 4 , String c 9 , String F 4 , String i 6 , String N 0 ) { <CR> super ( x 4 , c 9 , F 4 , i 6 , N 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String d 6 , String G 2 , String q 1 , String C 8 , String j 9 ) { <CR> super ( d 6 , G 2 , q 1 , C 8 , j 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> public int compareTo ( Object S 8 ) { <CR> Letter B = ( Letter ) S 8 ; <CR> if ( this . getDate ( ) . compareTo ( B . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( B . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String g 0 , String Q 8 , String k 8 , String N 1 , String s 7 ) { <CR> this . title = g 0 ; <CR> this . receiver = Q 8 ; <CR> this . content = k 8 ; <CR> this . sender = N 1 ; <CR> this . date = s 7 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] f ) { <CR> Letter Y 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter X 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList j 9 = { Y 9 , G 0 , X 0 } ; <CR> for ( Letter B 7 : j 9 ) <CR> B 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>