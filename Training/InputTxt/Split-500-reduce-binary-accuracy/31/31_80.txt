<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String d 7 , String C 0 , String H 8 , String F 8 , String S 4 ) { <CR> super ( d 7 , C 0 , H 8 , F 8 , S 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String v 9 , String I 3 , String v , String I 4 , String r 8 ) { <CR> super ( v 9 , I 3 , v , I 4 , r 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> public int compareTo ( Object z 8 ) { <CR> Letter I = ( Letter ) z 8 ; <CR> if ( this . getDate ( ) . compareTo ( I . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( I . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String G 2 , String w 8 , String q 2 , String t 7 , String u 0 ) { <CR> this . title = G 2 ; <CR> this . receiver = w 8 ; <CR> this . content = q 2 ; <CR> this . sender = t 7 ; <CR> this . date = u 0 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] D 9 ) { <CR> Letter Y 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Q 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter z 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList q 9 = { Y 9 , Q 6 , z 9 } ; <CR> for ( Letter m 3 : q 9 ) <CR> m 3 . display ( ) ; <CR> } <CR> } <CR> <EOC>