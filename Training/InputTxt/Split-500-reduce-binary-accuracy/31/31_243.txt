<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String x 3 , String Q 1 , String K 8 , String p , String T 1 ) { <CR> super ( x 3 , Q 1 , K 8 , p , T 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String U 6 , String G , String J 6 , String f 7 , String p 9 ) { <CR> super ( U 6 , G , J 6 , f 7 , p 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String N 6 , String K 2 , String L , String A 1 , String c 4 ) { <CR> this . title = N 6 ; <CR> this . receiver = K 2 ; <CR> this . content = L ; <CR> this . sender = A 1 ; <CR> this . date = c 4 ; <CR> } <CR> public int compareTo ( Object N 5 ) { <CR> Letter f 0 = ( Letter ) N 5 ; <CR> if ( this . getDate ( ) . compareTo ( f 0 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( f 0 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] z 1 ) { <CR> Letter r 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter U 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter a 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList T 7 = { r 8 , U 1 , a 1 } ; <CR> for ( Letter T 8 : T 7 ) <CR> T 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>