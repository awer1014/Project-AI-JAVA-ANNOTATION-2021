<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String H 9 , String c 4 , String q 3 , String C 3 , String L 0 ) { <CR> super ( H 9 , c 4 , q 3 , C 3 , L 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String w , String N 8 , String B 5 , String O , String t 6 ) { <CR> super ( w , N 8 , B 5 , O , t 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> public int compareTo ( Object R 7 ) { <CR> Letter q 4 = ( Letter ) R 7 ; <CR> if ( this . getDate ( ) . compareTo ( q 4 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( q 4 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> Letter ( String V 9 , String s 9 , String z 3 , String m 3 , String e 6 ) { <CR> this . title = V 9 ; <CR> this . receiver = s 9 ; <CR> this . content = z 3 ; <CR> this . sender = m 3 ; <CR> this . date = e 6 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] T ) { <CR> Letter e 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter x 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter u 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList h 5 = { e 5 , x 2 , u 1 } ; <CR> for ( Letter n 6 : h 5 ) <CR> n 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>