<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String o 1 , String l , String b 7 , String m 2 , String j 1 ) { <CR> super ( o 1 , l , b 7 , m 2 , j 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String Q 8 , String O 4 , String d 4 , String L 9 , String r 3 ) { <CR> super ( Q 8 , O 4 , d 4 , L 9 , r 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object M ) { <CR> Letter c 7 = ( Letter ) M ; <CR> if ( this . getDate ( ) . compareTo ( c 7 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( c 7 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String y 8 , String e 8 , String z 5 , String U 9 , String a 4 ) { <CR> this . title = y 8 ; <CR> this . receiver = e 8 ; <CR> this . content = z 5 ; <CR> this . sender = U 9 ; <CR> this . date = a 4 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] A 5 ) { <CR> Letter T = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter E 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter f 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList f = { T , E 3 , f 6 } ; <CR> for ( Letter w : f ) <CR> w . display ( ) ; <CR> } <CR> } <CR> <EOC>