<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String J 3 , String f 3 , String E 5 , String W 8 , String m 4 ) { <CR> super ( J 3 , f 3 , E 5 , W 8 , m 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String h 5 , String X 8 , String D 7 , String z 8 , String o 3 ) { <CR> super ( h 5 , X 8 , D 7 , z 8 , o 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String E 1 , String h 2 , String J 4 , String e 6 , String F 4 ) { <CR> this . title = E 1 ; <CR> this . receiver = h 2 ; <CR> this . content = J 4 ; <CR> this . sender = e 6 ; <CR> this . date = F 4 ; <CR> } <CR> public int compareTo ( Object D 8 ) { <CR> Letter R = ( Letter ) D 8 ; <CR> if ( this . getDate ( ) . compareTo ( R . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( R . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] O 0 ) { <CR> Letter z 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList n 8 = { z 8 , w , G 8 } ; <CR> for ( Letter z : n 8 ) <CR> z . display ( ) ; <CR> } <CR> } <CR> <EOC>