<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String z 7 , String c 8 , String L 8 , String U 0 , String t 2 ) { <CR> super ( z 7 , c 8 , L 8 , U 0 , t 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String E 8 , String D 2 , String y , String C 5 , String I 4 ) { <CR> super ( E 8 , D 2 , y , C 5 , I 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object N ) { <CR> Letter p 8 = ( Letter ) N ; <CR> if ( this . getDate ( ) . compareTo ( p 8 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( p 8 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> Letter ( String k 9 , String J 2 , String W 8 , String b 9 , String C ) { <CR> this . title = k 9 ; <CR> this . receiver = J 2 ; <CR> this . content = W 8 ; <CR> this . sender = b 9 ; <CR> this . date = C ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] B 7 ) { <CR> Letter c 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Y 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter b 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList a 8 = { c 8 , Y 7 , b 4 } ; <CR> for ( Letter x 5 : a 8 ) <CR> x 5 . display ( ) ; <CR> } <CR> } <CR> <EOC>