<BOC> abstract public class Evaluation { <CR> public Evaluation ( String D 4 , String o 8 , String x 8 , Keeper e 3 ) { <CR> pid = D 4 ; <CR> name = o 8 ; <CR> type = x 8 ; <CR> count ++ ; <CR> keeper = e 3 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private static int count ; <CR> protected String pid , name , type ; <CR> protected Keeper keeper ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String P 9 , String k 0 , String S 1 , Keeper O 3 ) { <CR> super ( P 9 , k 0 , S 1 , O 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String H 2 , String C 1 , String A 7 , Keeper u 0 ) { <CR> super ( H 2 , C 1 , A 7 , u 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String V 6 , String A , String q 9 ) { <CR> id = A ; <CR> tel = q 9 ; <CR> name = V 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String s 4 , String h 6 , String q 4 , Keeper b ) { <CR> super ( s 4 , h 6 , q 4 , b ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] l 7 ) { <CR> Scanner V 6 = new Scanner ( System . in ) ; <CR> boolean G 5 = <STRING> ; <CR> while ( G 5 ) { <CR> System . out . print ( <STRING> ) ; <CR> String d 4 = V 6 . nextLine ( ) ; <CR> if ( d 4 . equals ( <STRING> ) ) { <CR> G 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String C 1 = V 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 3 = V 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 4 = V 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String l 6 = V 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 9 = V 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 0 = V 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper c 3 = new Keeper ( X 4 , l 6 , C 9 ) ; <CR> Evaluation V 3 ; <CR> if ( d 4 . equals ( <STRING> ) ) <CR> V 3 = new Exam ( C 1 , X 3 , d 4 , c 3 ) ; <CR> else if ( d 4 . equals ( <STRING> ) ) <CR> V 3 = new HomeWork ( C 1 , X 3 , d 4 , c 3 ) ; <CR> else <CR> V 3 = new Report ( C 1 , X 3 , d 4 , c 3 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>