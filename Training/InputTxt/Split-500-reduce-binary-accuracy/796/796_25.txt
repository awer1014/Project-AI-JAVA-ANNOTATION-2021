<BOC> abstract public class Evaluation { <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Evaluation ( String m 8 , String a 5 , String M 8 , Keeper I 8 ) { <CR> pid = m 8 ; <CR> name = a 5 ; <CR> type = M 8 ; <CR> count ++ ; <CR> keeper = I 8 ; <CR> } <CR> protected Keeper keeper ; <CR> protected String pid , name , type ; <CR> private static int count ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String a 6 , String o 3 , String S 2 , Keeper H 2 ) { <CR> super ( a 6 , o 3 , S 2 , H 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String n 3 , String s 1 , String l 9 , Keeper V ) { <CR> super ( n 3 , s 1 , l 9 , V ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public Keeper ( String Q 2 , String Y 3 , String S 3 ) { <CR> id = Y 3 ; <CR> tel = S 3 ; <CR> name = Q 2 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String H 6 , String E , String w 2 , Keeper l 3 ) { <CR> super ( H 6 , E , w 2 , l 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] G 8 ) { <CR> Scanner s 3 = new Scanner ( System . in ) ; <CR> boolean m 5 = <STRING> ; <CR> while ( m 5 ) { <CR> System . out . print ( <STRING> ) ; <CR> String C 9 = s 3 . nextLine ( ) ; <CR> if ( C 9 . equals ( <STRING> ) ) { <CR> m 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String d 2 = s 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d = s 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 5 = s 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 0 = s 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c = s 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String O 5 = s 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper Q 2 = new Keeper ( J 5 , o 0 , c ) ; <CR> Evaluation j 5 ; <CR> if ( C 9 . equals ( <STRING> ) ) <CR> j 5 = new Exam ( d 2 , d , C 9 , Q 2 ) ; <CR> else if ( C 9 . equals ( <STRING> ) ) <CR> j 5 = new HomeWork ( d 2 , d , C 9 , Q 2 ) ; <CR> else <CR> j 5 = new Report ( d 2 , d , C 9 , Q 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>