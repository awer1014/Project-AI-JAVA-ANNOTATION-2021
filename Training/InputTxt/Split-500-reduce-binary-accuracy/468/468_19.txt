<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String w 0 , String l 8 , String f 3 ) { <CR> id = l 8 ; <CR> tel = f 3 ; <CR> name = w 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public Pet ( String u , String u 5 , String H 1 , Keeper w 5 ) { <CR> pid = u ; <CR> name = u 5 ; <CR> type = H 1 ; <CR> count ++ ; <CR> keeper = w 5 ; <CR> } <CR> private String pid , name , type ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private Keeper keeper ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private static int count ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] z 6 ) { <CR> Scanner D = new Scanner ( System . in ) ; <CR> boolean j 5 = <STRING> ; <CR> while ( j 5 ) { <CR> System . out . print ( <STRING> ) ; <CR> String t = D . nextLine ( ) ; <CR> if ( t . equals ( <STRING> ) ) { <CR> j 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String T 8 = D . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String E 2 = D . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String r 7 = D . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 0 = D . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String P 9 = D . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper O 2 = new Keeper ( r 7 , H 0 , P 9 ) ; <CR> Pet O 8 = new Pet ( T 8 , E 2 , t , O 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 8 . display ( ) ; <CR> O 2 . display ( ) ; <CR> O 8 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>