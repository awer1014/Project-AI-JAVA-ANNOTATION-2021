<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String p 9 , String Z 3 , String s 0 ) { <CR> id = Z 3 ; <CR> tel = s 0 ; <CR> name = p 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public Pet ( String T , String q 8 , String B 1 , Keeper H 6 ) { <CR> pid = T ; <CR> name = q 8 ; <CR> type = B 1 ; <CR> count ++ ; <CR> keeper = H 6 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private static int count ; <CR> private Keeper keeper ; <CR> private String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] r 2 ) { <CR> Scanner M 5 = new Scanner ( System . in ) ; <CR> boolean e 1 = <STRING> ; <CR> while ( e 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String g 2 = M 5 . nextLine ( ) ; <CR> if ( g 2 . equals ( <STRING> ) ) { <CR> e 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String m 4 = M 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String I 5 = M 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String T = M 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m 3 = M 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 0 = M 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper m = new Keeper ( T , m 3 , V 0 ) ; <CR> Pet D 4 = new Pet ( m 4 , I 5 , g 2 , m ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 4 . display ( ) ; <CR> m . display ( ) ; <CR> D 4 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>