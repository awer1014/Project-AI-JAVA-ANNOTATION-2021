<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String I 6 , String w 9 , String S 7 ) { <CR> id = w 9 ; <CR> tel = S 7 ; <CR> name = I 6 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Pet ( String I 2 , String u 8 , String I 3 , Keeper s 7 ) { <CR> pid = I 2 ; <CR> name = u 8 ; <CR> type = I 3 ; <CR> count ++ ; <CR> keeper = s 7 ; <CR> } <CR> private static int count ; <CR> private Keeper keeper ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] B 9 ) { <CR> Scanner Y 8 = new Scanner ( System . in ) ; <CR> boolean A 8 = <STRING> ; <CR> while ( A 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String b 3 = Y 8 . nextLine ( ) ; <CR> if ( b 3 . equals ( <STRING> ) ) { <CR> A 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String h 6 = Y 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 2 = Y 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 6 = Y 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String A = Y 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 5 = Y 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper C 5 = new Keeper ( w 6 , A , D 5 ) ; <CR> Pet s 3 = new Pet ( h 6 , C 2 , b 3 , C 5 ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 3 . display ( ) ; <CR> C 5 . display ( ) ; <CR> s 3 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>