<BOC> abstract public class Evaluation { <CR> double getRate ( ) { <CR> return rate ; <CR> } <CR> protected String name ; <CR> protected String stuno ; <CR> public Evaluation ( String S 4 , String s 3 , double y 5 , double K 9 , String u 2 , String W ) { <CR> this . stuno = S 4 ; <CR> this . name = s 3 ; <CR> this . score = y 5 ; <CR> this . rate = K 9 ; <CR> } <CR> protected double score , rate ; <CR> double getScore ( ) { <CR> return score ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Exam extends Evaluation { <CR> public Exam ( String g , String V , double B 3 , double C 3 , String K 4 , String k 1 ) { <CR> super ( g , V , B 3 , C 3 , K 4 , k 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + stuno ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Homework extends Evaluation { <CR> public Homework ( String N 3 , String r 0 , double i 9 , double G 7 , String d 8 , String H 3 ) { <CR> super ( N 3 , r 0 , i 9 , G 7 , d 8 , H 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String u 1 , String K 2 , double h 6 , double M 2 , String N 5 , String M 4 ) { <CR> super ( u 1 , K 2 , h 6 , M 2 , N 5 , M 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] O ) { <CR> int y 0 = <NUM_INT> ; <CR> String x , X 6 ; <CR> double x 4 , e 6 ; <CR> System . out . print ( <STRING> ) ; <CR> y 0 = scanner . nextInt ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 6 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 4 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> e 6 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> if ( y 0 == <NUM_INT> ) { <CR> String C 8 , W 8 ; <CR> System . out . print ( <STRING> ) ; <CR> C 8 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 8 = scanner . nextLine ( ) ; <CR> Evaluation u 0 = new Exam ( X 6 , x , x 4 , e 6 , C 8 , W 8 ) ; <CR> } <CR> if ( y 0 == <NUM_INT> ) { <CR> String n 9 , I 9 ; <CR> System . out . print ( <STRING> ) ; <CR> n 9 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 9 = scanner . nextLine ( ) ; <CR> Evaluation u 0 = new Homework ( X 6 , x , x 4 , e 6 , n 9 , I 9 ) ; <CR> } <CR> if ( y 0 == <NUM_INT> ) { <CR> String e 1 , A ; <CR> System . out . print ( <STRING> ) ; <CR> e 1 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A = scanner . nextLine ( ) ; <CR> Evaluation u 0 = new Report ( X 6 , x , x 4 , e 6 , e 1 , A ) ; <CR> } <CR> } <CR> static Scanner scanner = new Scanner ( System . in ) ; <CR> } <CR> <EOC>