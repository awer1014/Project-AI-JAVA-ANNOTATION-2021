 <BOC> import java . util . Scanner ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String title , String receiver , String content , String sender , String date ) {  <CR> super ( title , receiver , content , sender , date ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + " " + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> public EnglishLetter ( String title , String receiver , String content , String sender , String date ) {  <CR> super ( title , receiver , content , sender , date ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + title + " " + receiver + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> protected Letter letter ;  <CR> protected String senderAddr , receiverAddr ;  <CR> public Envelop ( String senderAddr , String receiverAddr , Letter letter ) {  <CR> this . senderAddr = senderAddr ;  <CR> this . receiverAddr = receiverAddr ;  <CR> this . letter = letter ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + "," + letter . getSender ( ) ) ;  <CR> System . out . println ( "To: " + receiverAddr + "," + letter . getReceiver ( ) + " " + letter . getTitle ( ) ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter implements Comparable {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Letter ( String title , String receiver , String content , String sender , String date ) {  <CR> this . title = title ;  <CR> this . receiver = receiver ;  <CR> this . content = content ;  <CR> this . sender = sender ;  <CR> this . date = date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getTitle ( ) {  <CR> return title ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> @ Override ;  <CR> public int compareTo ( Object o ) {  <CR> int ans = 0 ;  <CR> Letter obj = ( Letter ) o ;  <CR> String d1 = this . getDate ( ) ;  <CR> String d2 = obj . getDate ( ) ;  <CR> int n1 = ( int ) ( d1 . charAt ( 2 ) ) * 10 + ( int ) ( d1 . charAt ( 3 ) ) ;  <CR> int n2 = ( int ) ( d2 . charAt ( 2 ) ) * 10 + ( int ) ( d2 . charAt ( 3 ) ) ;  <CR> if ( n1 > n2 ) return 1 ;  <CR> else if ( n1 < n2 ) return - 1 ;  <CR> else {  <CR> n1 = ( int ) ( d1 . charAt ( 5 ) ) * 10 + ( int ) ( d1 . charAt ( 6 ) ) ;  <CR> n2 = ( int ) ( d2 . charAt ( 5 ) ) * 10 + ( int ) ( d2 . charAt ( 6 ) ) ;  <CR> if ( n1 > n2 ) return 1 ;  <CR> else if ( n1 < n2 ) return - 1 ;  <CR> else {  <CR> n1 = ( int ) ( d1 . charAt ( 8 ) ) * 10 + ( int ) ( d1 . charAt ( 9 ) ) ;  <CR> n2 = ( int ) ( d2 . charAt ( 8 ) ) * 10 + ( int ) ( d2 . charAt ( 9 ) ) ;  <CR> if ( n1 > n2 ) return 1 ;  <CR> else if ( n1 < n2 ) return - 1 ;  <CR> else return 0 ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class test {  <CR> public static void main ( String [ ] args ) {  <CR> Letter [ ] list = {  <CR> new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) }  <CR> ;  <CR> Letter tmp ;  <CR> for ( int i = 0 ;  <CR> i < 3 ;  <CR> i ++ )  <CR> {  <CR> for ( int j = 0 ;  <CR> j < 3 ;  <CR> j ++ )  <CR> {  <CR> if ( list [ i ] . compareTo ( list [ j ] ) == - 1 ) {  <CR> tmp = list [ i ] ;  <CR> list [ i ] = list [ j ] ;  <CR> list [ j ] = tmp ;  <CR> }  <CR> }  <CR> }  <CR> for ( int i = 0 ;  <CR> i < 3 ;  <CR> i ++ )  <CR> {  <CR> list [ i ] . display ( ) ;  <CR> System . out . println ( "===========" ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 