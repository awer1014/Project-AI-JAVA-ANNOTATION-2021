 <BOC> public class ChineseLetter extends Letter {  <CR> String getTitle ( ) {  <CR> return title ;  <CR> }  <CR> String getContent ( ) {  <CR> return content ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> ChineseLetter ( String title , String receiver , String content , String sender , String date ) {  <CR> super ( title , receiver , content , sender , date ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + getTitle ( ) + " , 您好" ) ;  <CR> System . out . println ( getContent ( ) ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public static void main ( String [ ] args ) {  <CR> Letter lt = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> lt . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> String getTitle ( ) {  <CR> return title ;  <CR> }  <CR> String getContent ( ) {  <CR> return content ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> EnglishLetter ( String title , String receiver , String content , String sender , String date ) {  <CR> super ( title , receiver , content , sender , date ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + getTitle ( ) + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( getContent ( ) ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public static void main ( String [ ] args ) {  <CR> Letter lt = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> lt . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public abstract class Letter {  <CR> String title , content , sender , receiver , date ;  <CR> Letter ( String title , String receiver , String content , String sender , String date ) {  <CR> this . title = title ;  <CR> this . receiver = receiver ;  <CR> this . content = content ;  <CR> this . sender = sender ;  <CR> this . date = date ;  <CR> }  <CR> void display ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Arrays ;  <CR> public class Sort implements Comparable {  <CR> String date ;  <CR> static Letter [ ] list = {  <CR> new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) }  <CR> ;  <CR> Sort ( String date ) {  <CR> this . date = list [ 0 ] . date ;  <CR> }  <CR> String getDate ( ) {  <CR> return list [ 1 ] . date ;  <CR> }  <CR> @ Override ;  <CR> public int compareTo ( Object o ) {  <CR> Sort obj = ( Sort ) o ;  <CR> if ( this . getDate ( ) . compareTo ( obj . getDate ( ) ) > 0 ) return 1 ;  <CR> else if ( this . getDate ( ) . compareTo ( obj . getDate ( ) ) < 0 ) return - 1 ;  <CR> else return 0 ;  <CR> }  <CR> public static void main ( String [ ] args ) {  <CR> Arrays . sort ( list ) ;  <CR> }  <CR> }  <CR>  <EOC> 