 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y1 , String S1 , String h0 , String d0 , String X ) {  <CR> super ( y1 , S1 , h0 , d0 , X ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String b4 , String l , String T9 , String V7 , String K0 ) {  <CR> super ( b4 , l , T9 , V7 , K0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String B4 , String W7 , Evaluation x7 ) {  <CR> this . senderAddr = B4 ;  <CR> this . receiverAddr = W7 ;  <CR> this . letter = x7 ;  <CR> }  <CR> public static void main ( String [ ] T1 ) {  <CR> Evaluation r3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N9 = new Envelop ( "Taipei" , "Kaohsiung" , r3 ) ;  <CR> N9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String V4 , String i , String X0 , String S7 , String L5 ) {  <CR> this . title = V4 ;  <CR> this . receiver = i ;  <CR> this . content = X0 ;  <CR> this . sender = S7 ;  <CR> this . date = L5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object b4 ) {  <CR> Letter x7 = ( Letter ) b4 ;  <CR> if ( this . x > x7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int F0 ) {  <CR> list [ F0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int j5 ) {  <CR> this . x = j5 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] y2 ) {  <CR> int F0 ;  <CR> for ( F0 = list . length - 1 ; F0 >= 0 ; F0 -- ) {  <CR> int t6 = F0 ;  <CR> Letter V2 = new Letter ( F0 ) ;  <CR> Letter k5 = new Letter ( t6 - 1 ) ;  <CR> if ( V2 . compareTo ( k5 ) == 1 )  <CR> V2 . display ( F0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 