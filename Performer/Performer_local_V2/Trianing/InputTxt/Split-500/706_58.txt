 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String o9 , String M5 ) {  <CR> this . id = o9 ;  <CR> this . tel = M5 ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] a ) {  <CR> String o9 ;  <CR> String M5 ;  <CR> Scanner L0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> o9 = L0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> M5 = L0 . nextLine ( ) ;  <CR> Keeper d0 = new Keeper ( o9 , M5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String name ;  <CR> void Pet ( String T7 , String Y1 , String B0 , Keeper p1 ) {  <CR> count ++ ;  <CR> this . pid = T7 ;  <CR> this . name = Y1 ;  <CR> this . type = B0 ;  <CR> this . keeper = p1 ;  <CR> }  <CR> String type ;  <CR> public static void main ( String [ ] Y ) {  <CR> String T7 ;  <CR> String Y1 ;  <CR> String B0 ;  <CR> String r3 ;  <CR> String R7 ;  <CR> Scanner P8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> r3 = P8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> R7 = P8 . nextLine ( ) ;  <CR> Keeper R0 = new Keeper ( r3 , R7 ) ;  <CR> Scanner P8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> T7 = P8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> B0 = P8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> Y1 = P8 . nextLine ( ) ;  <CR> pet x8 = new pet ( T7 , Y1 , B0 , R0 ) ;  <CR> String G0 = x8 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + G0 ) ;  <CR> }  <CR> String pid ;  <CR> Keeper keeper ;  <CR> static int count ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 