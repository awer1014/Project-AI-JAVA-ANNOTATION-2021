 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String p9 , String R3 , String G3 , String D , String F6 ) {  <CR> super ( p9 , R3 , G3 , D , F6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v2 , String L4 , String L5 , String O9 , String Z3 ) {  <CR> super ( v2 , L4 , L5 , O9 , Z3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String w2 , String y5 , Evaluation V7 ) {  <CR> this . senderAddr = w2 ;  <CR> this . receiverAddr = y5 ;  <CR> this . letter = V7 ;  <CR> }  <CR> public static void main ( String [ ] c1 ) {  <CR> Evaluation B7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g9 = new Envelop ( "Taipei" , "Kaohsiung" , B7 ) ;  <CR> g9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String H5 , String U0 , String K0 , String q0 , String P5 ) {  <CR> this . title = H5 ;  <CR> this . receiver = U0 ;  <CR> this . content = K0 ;  <CR> this . sender = q0 ;  <CR> this . date = P5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int P0 ) {  <CR> list [ P0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] z3 ) {  <CR> int P0 ;  <CR> for ( P0 = list . length - 1 ; P0 >= 0 ; P0 -- ) {  <CR> int C1 = P0 ;  <CR> Letter Z1 = new Letter ( P0 ) ;  <CR> Letter f9 = new Letter ( C1 - 1 ) ;  <CR> if ( Z1 . compareTo ( f9 ) == 1 )  <CR> Z1 . display ( P0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object q9 ) {  <CR> Letter S8 = ( Letter ) q9 ;  <CR> if ( this . x > S8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Y4 ) {  <CR> this . x = Y4 ;  <CR> }  <CR> }  <CR>  <EOC> 