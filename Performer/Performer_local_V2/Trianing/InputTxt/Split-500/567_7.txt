 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String k8 , String u1 , String P9 , String T4 , String x5 ) {  <CR> super ( k8 , u1 , P9 , T4 , x5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String w1 , String B4 , String X7 , String B3 , String a8 ) {  <CR> super ( w1 , B4 , X7 , B3 , a8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String h8 , String I7 , Letter E5 ) {  <CR> this . senderAddr = h8 ;  <CR> this . receiverAddr = I7 ;  <CR> this . letter = E5 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object Y8 ) {  <CR> Letter a4 = ( Letter ) Y8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> int valueOf ( String E0 ) {  <CR> int H7 = 0 ;  <CR> for ( int z = 0 ; z < E0 . length ( ) ; z ++ ) {  <CR> char v = E0 . charAt ( z ) ;  <CR> H7 = H7 * 10 + v - '0' ;  <CR> }  <CR> return H7 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String b3 , String C3 , String T8 , String Y6 , String s4 ) {  <CR> this . title = b3 ;  <CR> this . receiver = C3 ;  <CR> this . content = T8 ;  <CR> this . sender = Y6 ;  <CR> this . date = s4 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g2 ) {  <CR> Letter [ ] o9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o9 ) ;  <CR> for ( int H2 = 0 ; H2 < 3 ; H2 ++ )  <CR> o9 [ H2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 