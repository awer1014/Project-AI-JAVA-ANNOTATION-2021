 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v7 , String m7 , String x3 , String a3 , String R3 ) {  <CR> super ( v7 , m7 , x3 , a3 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I7 , String T1 , String j3 , String O2 , String c5 ) {  <CR> super ( I7 , T1 , j3 , O2 , c5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String L1 , String u1 , Evaluation C1 ) {  <CR> this . senderAddr = L1 ;  <CR> this . receiverAddr = u1 ;  <CR> this . letter = C1 ;  <CR> }  <CR> public static void main ( String [ ] b9 ) {  <CR> Evaluation w8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q9 = new Envelop ( "Taipei" , "Kaohsiung" , w8 ) ;  <CR> Q9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String X4 , String O1 , String z0 , String r0 , String P5 ) {  <CR> this . title = X4 ;  <CR> this . receiver = O1 ;  <CR> this . content = z0 ;  <CR> this . sender = r0 ;  <CR> this . date = P5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int N1 ) {  <CR> list [ N1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object R ) {  <CR> Letter w2 = ( Letter ) R ;  <CR> if ( this . x > w2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int x2 ) {  <CR> this . x = x2 ;  <CR> }  <CR> public static void main ( String [ ] Z6 ) {  <CR> int N1 ;  <CR> for ( N1 = list . length - 1 ; N1 >= 0 ; N1 -- ) {  <CR> int l9 = N1 ;  <CR> Letter j3 = new Letter ( N1 ) ;  <CR> Letter E0 = new Letter ( l9 - 1 ) ;  <CR> if ( j3 . compareTo ( E0 ) == 1 )  <CR> j3 . display ( N1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 