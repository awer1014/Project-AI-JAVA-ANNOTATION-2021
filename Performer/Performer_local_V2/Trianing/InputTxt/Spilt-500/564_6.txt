 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a5 , String D1 , String s4 , String h3 , String W6 ) {  <CR> super ( a5 , D1 , s4 , h3 , W6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w3 , String P , String m7 , String D7 , String h2 ) {  <CR> super ( w3 , P , m7 , D7 , h2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] M3 ) {  <CR> Evaluation X5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q5 = new Envelop ( "Taipei" , "Kaohsiung" , X5 ) ;  <CR> Q5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String B1 , String V2 , Evaluation V5 ) {  <CR> this . senderAddr = B1 ;  <CR> this . receiverAddr = V2 ;  <CR> this . letter = V5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String W2 , String K5 , String t7 , String P8 , String V9 ) {  <CR> this . title = W2 ;  <CR> this . receiver = K5 ;  <CR> this . content = t7 ;  <CR> this . sender = P8 ;  <CR> this . date = V9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int b ) {  <CR> this . x = b ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object c0 ) {  <CR> Letter l4 = ( Letter ) c0 ;  <CR> if ( this . x > l4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int h3 ) {  <CR> list [ h3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] X5 ) {  <CR> int h3 ;  <CR> for ( h3 = list . length - 1 ; h3 >= 0 ; h3 -- ) {  <CR> int U2 = h3 ;  <CR> Letter O1 = new Letter ( h3 ) ;  <CR> Letter B2 = new Letter ( U2 - 1 ) ;  <CR> if ( O1 . compareTo ( B2 ) == 1 )  <CR> O1 . display ( h3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 