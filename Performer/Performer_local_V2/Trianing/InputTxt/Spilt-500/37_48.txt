 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String V6 , String L1 , String Q4 , String D7 , String J2 ) {  <CR> super ( V6 , L1 , Q4 , D7 , J2 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String z , String B7 , String z7 , String y , String u8 ) {  <CR> super ( z , B7 , z7 , y , u8 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> System . out . println ( "信件內容: " ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String p8 , String t6 , Letter t8 ) {  <CR> this . senderAddr = p8 ;  <CR> this . receiverAddr = t6 ;  <CR> this . letter = t8 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> protected String date ;  <CR> protected String receiver ;  <CR> protected String sender ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String content ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Letter ( String H4 , String y0 , String d3 , String J4 , String L2 ) {  <CR> this . title = H4 ;  <CR> this . receiver = y0 ;  <CR> this . content = d3 ;  <CR> this . sender = J4 ;  <CR> this . date = L2 ;  <CR> }  <CR> protected String title ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 