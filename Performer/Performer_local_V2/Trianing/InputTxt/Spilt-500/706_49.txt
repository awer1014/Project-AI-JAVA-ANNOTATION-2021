 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> public static void main ( String [ ] R3 ) {  <CR> String Z8 ;  <CR> String P8 ;  <CR> Scanner V8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> Z8 = V8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> P8 = V8 . nextLine ( ) ;  <CR> Keeper q8 = new Keeper ( Z8 , P8 ) ;  <CR> }  <CR> String tel ;  <CR> void Keeper ( String Z8 , String P8 ) {  <CR> this . id = Z8 ;  <CR> this . tel = P8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> void Pet ( String X1 , String F0 , String Y6 , Keeper c1 ) {  <CR> count ++ ;  <CR> this . pid = X1 ;  <CR> this . name = F0 ;  <CR> this . type = Y6 ;  <CR> this . keeper = c1 ;  <CR> }  <CR> String name ;  <CR> String pid ;  <CR> public static void main ( String [ ] h9 ) {  <CR> String X1 ;  <CR> String F0 ;  <CR> String Y6 ;  <CR> String K8 ;  <CR> String s ;  <CR> Scanner c7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> K8 = c7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> s = c7 . nextLine ( ) ;  <CR> Keeper c8 = new Keeper ( K8 , s ) ;  <CR> Scanner c7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X1 = c7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> Y6 = c7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> F0 = c7 . nextLine ( ) ;  <CR> pet o9 = new pet ( X1 , F0 , Y6 , c8 ) ;  <CR> String h3 = o9 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + h3 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String type ;  <CR> }  <CR>  <EOC> 