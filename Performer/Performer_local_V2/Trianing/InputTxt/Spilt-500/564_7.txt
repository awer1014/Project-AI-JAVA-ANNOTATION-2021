 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i6 , String b0 , String z6 , String L , String U3 ) {  <CR> super ( i6 , b0 , z6 , L , U3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String m0 , String U2 , String N2 , String o0 , String Y5 ) {  <CR> super ( m0 , U2 , N2 , o0 , Y5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] t6 ) {  <CR> Evaluation y8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M1 = new Envelop ( "Taipei" , "Kaohsiung" , y8 ) ;  <CR> M1 . display ( ) ;  <CR> }  <CR> public Envelop ( String E2 , String s9 , Evaluation G0 ) {  <CR> this . senderAddr = E2 ;  <CR> this . receiverAddr = s9 ;  <CR> this . letter = G0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String s2 , String i0 , String c , String Z2 , String K5 ) {  <CR> this . title = s2 ;  <CR> this . receiver = i0 ;  <CR> this . content = c ;  <CR> this . sender = Z2 ;  <CR> this . date = K5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int J3 ) {  <CR> list [ J3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J9 ) {  <CR> int J3 ;  <CR> for ( J3 = list . length - 1 ; J3 >= 0 ; J3 -- ) {  <CR> int w = J3 ;  <CR> Letter F9 = new Letter ( J3 ) ;  <CR> Letter s1 = new Letter ( w - 1 ) ;  <CR> if ( F9 . compareTo ( s1 ) == 1 )  <CR> F9 . display ( J3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object P3 ) {  <CR> Letter X5 = ( Letter ) P3 ;  <CR> if ( this . x > X5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int M ) {  <CR> this . x = M ;  <CR> }  <CR> }  <CR>  <EOC> 