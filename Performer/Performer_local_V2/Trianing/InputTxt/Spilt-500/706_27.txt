 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> public static void main ( String [ ] E2 ) {  <CR> String g8 ;  <CR> String I3 ;  <CR> Scanner J4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> g8 = J4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> I3 = J4 . nextLine ( ) ;  <CR> Keeper t6 = new Keeper ( g8 , I3 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String g8 , String I3 ) {  <CR> this . id = g8 ;  <CR> this . tel = I3 ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String type ;  <CR> void Pet ( String X5 , String z6 , String q8 , Keeper l8 ) {  <CR> count ++ ;  <CR> this . pid = X5 ;  <CR> this . name = z6 ;  <CR> this . type = q8 ;  <CR> this . keeper = l8 ;  <CR> }  <CR> public static void main ( String [ ] o6 ) {  <CR> String X5 ;  <CR> String z6 ;  <CR> String q8 ;  <CR> String e3 ;  <CR> String V1 ;  <CR> Scanner p4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> e3 = p4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> V1 = p4 . nextLine ( ) ;  <CR> Keeper K9 = new Keeper ( e3 , V1 ) ;  <CR> Scanner p4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X5 = p4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> q8 = p4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> z6 = p4 . nextLine ( ) ;  <CR> pet W7 = new pet ( X5 , z6 , q8 , K9 ) ;  <CR> String D = W7 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + D ) ;  <CR> }  <CR> static int count ;  <CR> String name ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> }  <CR>  <EOC> 