 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String title , String receiver , String content , String sender , String date ) {  <CR> super ( title , receiver , content , sender , date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String title , String receiver , String content , String sender , String date ) {  <CR> super ( title , receiver , content , sender , date ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> System . out . println ( c ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> public Envelop ( String senderAddr , String receiverAddr , Letter letter ) {  <CR> this . senderAddr = senderAddr ;  <CR> this . receiverAddr = receiverAddr ;  <CR> this . letter = letter ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . getSender ( ) ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . getReceiver ( ) + " " + letter . getTitle ( ) ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public abstract class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> int c ;  <CR> public Letter ( String title , String receiver , String content , String sender , String date ) {  <CR> c = 0 ;  <CR> this . title = title ;  <CR> this . receiver = receiver ;  <CR> this . content = content ;  <CR> this . sender = sender ;  <CR> this . date = date ;  <CR> for ( int k = 0 ;  <CR> k < this . date . length ( ) ;  <CR> k ++ )  <CR> {  <CR> String i = "" ;  <CR> i += date . charAt ( k ) ;  <CR> if ( i . equals ( "/" ) ) continue ;  <CR> c += i . charAt ( 0 ) - '0' ;  <CR> c *= 10 ;  <CR> }  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> System . out . println ( c ) ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getTitle ( ) {  <CR> return title ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Collections ;  <CR> public class Main {  <CR> public static void main ( String [ ] args ) {  <CR> Vector < Letter > a = new Vector < Letter > ( ) ;  <CR> a . addElement ( new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ) ;  <CR> a . addElement ( new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) ) ;  <CR> a . addElement ( new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) ) ;  <CR> int min , locate ;  <CR> for ( int k = 0 ;  <CR> k < a . size ( ) ;  <CR> k ++ )  <CR> {  <CR> min = a . elementAt ( k ) . c ;  <CR> locate = k ;  <CR> for ( int y = k ;  <CR> y < a . size ( ) ;  <CR> y ++ )  <CR> {  <CR> min = Math . min ( min , a . elementAt ( y ) . c ) ;  <CR> if ( a . elementAt ( k ) . c > a . elementAt ( y ) . c ) locate = y ;  <CR> }  <CR> Collections . swap ( a , k , locate ) ;  <CR> }  <CR> for ( int k = 0 ;  <CR> k < a . size ( ) ;  <CR> k ++ )  <CR> {  <CR> a . elementAt ( k ) . display ( ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 