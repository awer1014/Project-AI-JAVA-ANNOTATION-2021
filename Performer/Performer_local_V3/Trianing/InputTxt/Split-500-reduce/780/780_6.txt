<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sName ; <CR> Evaluation ( String P 7 , String g 3 , double z 6 , double C 4 ) { <CR> this . sNumber = P 7 ; <CR> this . sName = g 3 ; <CR> this . sGrade = z 6 ; <CR> this . sProportion = C 4 ; <CR> } <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String range ; <CR> protected String date ; <CR> public Exam ( String o , String l 0 , double U 8 , double r 0 , String U 4 , String t 9 ) { <CR> super ( o , l 0 , U 8 , r 0 ) ; <CR> this . date = U 4 ; <CR> this . range = t 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String I 4 , String K 2 , double U 0 , double Q 4 , String B , String z 6 ) { <CR> super ( I 4 , K 2 , U 0 , Q 4 ) ; <CR> this . deadline = B ; <CR> this . description = z 6 ; <CR> } <CR> protected String deadline ; <CR> protected String description ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String M 4 , String t 0 , double h 2 , double S 3 , String g 5 , String a 4 ) { <CR> super ( M 4 , t 0 , h 2 , S 3 ) ; <CR> this . content = g 5 ; <CR> this . references = a 4 ; <CR> } <CR> protected String content ; <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int f 2 ) { <CR> switch ( f 2 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int f 2 = <STRING> ; <CR> do <CR> { <CR> f 2 = keyboard . nextInt ( ) ; <CR> } <CR> while ( f 2 > <STRING> || f 2 < <STRING> ) ; <CR> return choice ( f 2 ) ; <CR> } <CR> } <CR> <EOC>