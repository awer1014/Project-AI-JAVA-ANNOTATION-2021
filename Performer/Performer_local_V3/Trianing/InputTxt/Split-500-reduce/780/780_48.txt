<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sProportion ; <CR> protected double sGrade ; <CR> protected String sName ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sNumber ; <CR> Evaluation ( String o 2 , String h 0 , double C 4 , double L 9 ) { <CR> this . sNumber = o 2 ; <CR> this . sName = h 0 ; <CR> this . sGrade = C 4 ; <CR> this . sProportion = L 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> protected String range ; <CR> public Exam ( String u 8 , String S 3 , double Q 0 , double p 7 , String x 7 , String o 6 ) { <CR> super ( u 8 , S 3 , Q 0 , p 7 ) ; <CR> this . date = x 7 ; <CR> this . range = o 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String r 2 , String T 2 , double W 6 , double v 6 , String z 8 , String W 0 ) { <CR> super ( r 2 , T 2 , W 6 , v 6 ) ; <CR> this . deadline = z 8 ; <CR> this . description = W 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> protected String references ; <CR> public Report ( String d 8 , String a 6 , double w 7 , double Q 1 , String N 9 , String u 0 ) { <CR> super ( d 8 , a 6 , w 7 , Q 1 ) ; <CR> this . content = N 9 ; <CR> this . references = u 0 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int k 4 ) { <CR> switch ( k 4 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int k 4 = <STRING> ; <CR> do <CR> { <CR> k 4 = keyboard . nextInt ( ) ; <CR> } <CR> while ( k 4 > <STRING> || k 4 < <STRING> ) ; <CR> return choice ( k 4 ) ; <CR> } <CR> } <CR> <EOC>