<BOC> abstract public class EvalutionE { <CR> protected String sid , name , date , range , deadline , discribe , content , literature , grade , proportion ; <CR> public EvalutionE ( String Y 1 , String M 8 , String F , String j 3 , String L 7 , String S 2 ) { <CR> sid = Y 1 ; <CR> name = M 8 ; <CR> grade = F ; <CR> proportion = j 3 ; <CR> date = L 7 ; <CR> range = S 2 ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class EvalutionH { <CR> public EvalutionH ( String r 3 , String U 1 , String f 2 , String O 3 , String f 7 , String g 7 ) { <CR> sid = r 3 ; <CR> name = U 1 ; <CR> grade = f 2 ; <CR> proportion = O 3 ; <CR> deadline = f 7 ; <CR> discribe = g 7 ; <CR> } <CR> protected String sid , name , date , range , deadline , discribe , content , literature , grade , proportion ; <CR> } <CR> <EOC> <BOC> abstract public class EvalutionR { <CR> protected String sid , name , date , range , deadline , discribe , content , literature , grade , proportion ; <CR> public EvalutionR ( String U 9 , String x 4 , String W 8 , String X 3 , String j 6 , String G 9 ) { <CR> sid = U 9 ; <CR> name = x 4 ; <CR> grade = W 8 ; <CR> proportion = X 3 ; <CR> content = j 6 ; <CR> literature = G 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends EvalutionE { <CR> public Exam ( String V 2 , String X 0 , String M 5 , String L 2 , String L 3 , String Z ) { <CR> super ( V 2 , X 0 , M 5 , L 2 , L 3 , Z ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends EvalutionH { <CR> public Homework ( String b 1 , String D 7 , String c 5 , String D 3 , String b 7 , String q 8 ) { <CR> super ( b 1 , D 7 , c 5 , D 3 , b 7 , q 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends EvalutionR { <CR> public Report ( String O 6 , String b 6 , String D 3 , String m 0 , String s 8 , String O 3 ) { <CR> super ( O 6 , b 6 , D 3 , m 0 , s 8 , O 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] w 6 ) { <CR> Scanner y 1 = new Scanner ( System . in ) ; <CR> boolean l 2 = <STRING> ; <CR> while ( l 2 ) { <CR> System . out . print ( <STRING> ) ; <CR> String J 2 = y 1 . nextLine ( ) ; <CR> if ( J 2 . equals ( <STRING> ) ) { <CR> l 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String G 0 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 4 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String G 9 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 7 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z 6 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 7 = y 1 . nextLine ( ) ; <CR> EvalutionE J 0 ; <CR> System . out . print ( <STRING> ) ; <CR> String T 6 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Q 0 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String W 2 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 7 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String n 8 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 7 = y 1 . nextLine ( ) ; <CR> EvalutionH Z 0 ; <CR> System . out . print ( <STRING> ) ; <CR> String q 4 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String N 9 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 4 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String j 2 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 2 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 4 = y 1 . nextLine ( ) ; <CR> EvalutionR m 5 ; <CR> if ( J 2 . equals ( <STRING> ) ) <CR> J 0 = new Exam ( G 0 , D 4 , z 6 , e 7 , G 9 , h 7 ) ; <CR> else if ( J 2 . equals ( <STRING> ) ) <CR> Z 0 = new Homework ( G 0 , D 4 , G 9 , h 7 , n 8 , V 7 ) ; <CR> else if ( J 2 . equals ( <STRING> ) ) <CR> m 5 = new Report ( G 0 , D 4 , G 9 , h 7 , k 2 , o 4 ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 0 . display ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>