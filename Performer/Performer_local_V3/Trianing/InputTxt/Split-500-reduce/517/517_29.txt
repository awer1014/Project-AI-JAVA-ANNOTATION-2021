<BOC> import java . util . * ; <CR> abstract public class Evaluation { <CR> Scanner n = new Scanner ( System . in ) ; <CR> public Evaluation ( String f 7 , String l 5 , double O 4 , double N 7 ) { <CR> System . out . println ( <STRING> ) ; <CR> type = n . nextInt ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 7 = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 5 = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 4 = n . nextDouble ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 7 = n . nextDouble ( ) ; <CR> if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> protected int type ; <CR> protected String a ; <CR> protected String b ; <CR> public static void main ( String [ ] x ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String h 7 , String E , double V 5 , double v 2 ) { <CR> super ( h 7 , E , V 5 , v 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String T 2 , String o 7 , double J 0 , double C 4 ) { <CR> super ( T 2 , o 7 , J 0 , C 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String x 0 , String q 8 , double V 6 , double z 0 ) { <CR> super ( x 0 , q 8 , V 6 , z 0 ) ; <CR> } <CR> } <CR> <EOC>