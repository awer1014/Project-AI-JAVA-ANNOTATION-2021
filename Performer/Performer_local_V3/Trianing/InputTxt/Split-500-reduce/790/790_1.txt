<BOC> abstract public class Evaluation { <CR> protected double score , rate ; <CR> protected String name ; <CR> protected String stuno ; <CR> public Evaluation ( String W 8 , String T 0 , double U 6 , double l 0 , String C 2 , String e 7 ) { <CR> this . stuno = W 8 ; <CR> this . name = T 0 ; <CR> this . score = U 6 ; <CR> this . rate = l 0 ; <CR> } <CR> double getRate ( ) { <CR> return rate ; <CR> } <CR> double getScore ( ) { <CR> return score ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + stuno ) ; <CR> } <CR> public Exam ( String z , String b 8 , double w 2 , double v , String h 7 , String L 5 ) { <CR> super ( z , b 8 , w 2 , v , h 7 , L 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Homework extends Evaluation { <CR> public Homework ( String y 5 , String d 9 , double o 6 , double H 1 , String Q 7 , String p 6 ) { <CR> super ( y 5 , d 9 , o 6 , H 1 , Q 7 , p 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String r 9 , String G 2 , double B 9 , double U 1 , String B 3 , String l ) { <CR> super ( r 9 , G 2 , B 9 , U 1 , B 3 , l ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] H 5 ) { <CR> int j 0 = <STRING> ; <CR> String n 3 , B 2 ; <CR> double M , k 7 ; <CR> System . out . print ( <STRING> ) ; <CR> j 0 = scanner . nextInt ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B 2 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> n 3 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 7 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> if ( j 0 == <STRING> ) { <CR> String a 7 , e 6 ; <CR> System . out . print ( <STRING> ) ; <CR> a 7 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> e 6 = scanner . nextLine ( ) ; <CR> Evaluation a 3 = new Exam ( B 2 , n 3 , M , k 7 , a 7 , e 6 ) ; <CR> } <CR> if ( j 0 == <STRING> ) { <CR> String i 2 , a 1 ; <CR> System . out . print ( <STRING> ) ; <CR> i 2 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 1 = scanner . nextLine ( ) ; <CR> Evaluation a 3 = new Homework ( B 2 , n 3 , M , k 7 , i 2 , a 1 ) ; <CR> } <CR> if ( j 0 == <STRING> ) { <CR> String G 1 , F ; <CR> System . out . print ( <STRING> ) ; <CR> G 1 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F = scanner . nextLine ( ) ; <CR> Evaluation a 3 = new Report ( B 2 , n 3 , M , k 7 , G 1 , F ) ; <CR> } <CR> } <CR> static Scanner scanner = new Scanner ( System . in ) ; <CR> } <CR> <EOC>