<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> ChineseLetter ( String e 8 , String N 7 , String L 0 , Item [ ] p 0 , int G 9 ) { <CR> id = e 8 ; <CR> date = N 7 ; <CR> num_i = G 9 ; <CR> for ( int K 8 = <STRING> ; K 8 < G 9 ; K 8 ++ ) <CR> it [ K 8 ] = p 0 [ K 8 ] ; <CR> } <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private String id , date , coin ; <CR> private int num_i ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( String S 0 , String P 9 , double E 0 , int J 1 , double S 7 ) { <CR> id = S 0 ; <CR> name = P 9 ; <CR> money = E 0 ; <CR> cnt = J 1 ; <CR> discnt = S 7 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> private String id , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private static double total_money = <STRING> ; <CR> private int cnt ; <CR> private double money , discnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] G 6 ) { <CR> Scanner e 6 = new Scanner ( System . in ) ; <CR> String o 0 , t 9 , U 5 ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = e 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 9 = e 6 . nextLine ( ) ; <CR> U 5 = e 6 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String z 1 , Y 9 , l 9 , Q 5 , P 0 ; <CR> System . out . print ( <STRING> ) ; <CR> z 1 = e 6 . nextLine ( ) ; <CR> if ( z 1 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> Y 9 = e 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 9 = e 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>