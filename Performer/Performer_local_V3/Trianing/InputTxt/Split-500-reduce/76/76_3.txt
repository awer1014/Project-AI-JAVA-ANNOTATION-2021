<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private int num_i ; <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> ChineseLetter ( String Q 4 , String O 5 , String R 7 , Item [ ] C 7 , int x 3 ) { <CR> id = Q 4 ; <CR> date = O 5 ; <CR> num_i = x 3 ; <CR> for ( int P 1 = <STRING> ; P 1 < x 3 ; P 1 ++ ) <CR> it [ P 1 ] = C 7 [ P 1 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> private static double total_money = <STRING> ; <CR> private int cnt ; <CR> private double money , discnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( String L 6 , String Q 1 , double Q 6 , int b 3 , double e 5 ) { <CR> id = L 6 ; <CR> name = Q 1 ; <CR> money = Q 6 ; <CR> cnt = b 3 ; <CR> discnt = e 5 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> private String id , name ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] N 5 ) { <CR> Scanner M 9 = new Scanner ( System . in ) ; <CR> String c 0 , i 7 , O 2 ; <CR> System . out . print ( <STRING> ) ; <CR> c 0 = M 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> i 7 = M 9 . nextLine ( ) ; <CR> O 2 = M 9 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String H 4 , C 8 , p 8 , e 1 , y 7 ; <CR> System . out . print ( <STRING> ) ; <CR> H 4 = M 9 . nextLine ( ) ; <CR> if ( H 4 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> C 8 = M 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 8 = M 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>