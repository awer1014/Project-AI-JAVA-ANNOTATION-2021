<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private int num_i ; <CR> ChineseLetter ( String E 8 , String g 9 , String m 6 , Item [ ] P 0 , int Y 4 ) { <CR> id = E 8 ; <CR> date = g 9 ; <CR> num_i = Y 4 ; <CR> for ( int h 9 = <STRING> ; h 9 < Y 4 ; h 9 ++ ) <CR> it [ h 9 ] = P 0 [ h 9 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( ) { <CR> } <CR> private int cnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private String id , name ; <CR> Item ( String P 6 , String x 6 , double c 8 , int B 8 , double Q 2 ) { <CR> id = P 6 ; <CR> name = x 6 ; <CR> money = c 8 ; <CR> cnt = B 8 ; <CR> discnt = Q 2 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private static double total_money = <STRING> ; <CR> private double money , discnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] v 5 ) { <CR> Scanner T 8 = new Scanner ( System . in ) ; <CR> String c 5 , U 0 , J 9 ; <CR> System . out . print ( <STRING> ) ; <CR> c 5 = T 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 0 = T 8 . nextLine ( ) ; <CR> J 9 = T 8 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String U 5 , g 1 , p 6 , V 4 , i 9 ; <CR> System . out . print ( <STRING> ) ; <CR> U 5 = T 8 . nextLine ( ) ; <CR> if ( U 5 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> g 1 = T 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 6 = T 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>