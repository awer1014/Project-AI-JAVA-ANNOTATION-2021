<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private int num_i ; <CR> ChineseLetter ( String E 8 , String n 0 , String r 2 , Item [ ] H 8 , int P 7 ) { <CR> id = E 8 ; <CR> date = n 0 ; <CR> num_i = P 7 ; <CR> for ( int x 5 = <STRING> ; x 5 < P 7 ; x 5 ++ ) <CR> it [ x 5 ] = H 8 [ x 5 ] ; <CR> } <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private String id , date , coin ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> private static double total_money = <STRING> ; <CR> private String id , name ; <CR> private int cnt ; <CR> Item ( String E 1 , String s 1 , double Z 1 , int Q 2 , double F ) { <CR> id = E 1 ; <CR> name = s 1 ; <CR> money = Z 1 ; <CR> cnt = Q 2 ; <CR> discnt = F ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private double money , discnt ; <CR> Item ( ) { <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static void main ( String [ ] P 0 ) { <CR> Scanner K 1 = new Scanner ( System . in ) ; <CR> String z 4 , k , L 1 ; <CR> System . out . print ( <STRING> ) ; <CR> z 4 = K 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k = K 1 . nextLine ( ) ; <CR> L 1 = K 1 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String A 5 , Y 3 , J 6 , L 8 , Z 2 ; <CR> System . out . print ( <STRING> ) ; <CR> A 5 = K 1 . nextLine ( ) ; <CR> if ( A 5 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> Y 3 = K 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 6 = K 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> } <CR> <EOC>