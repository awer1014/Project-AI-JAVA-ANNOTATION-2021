<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private String id , date , coin ; <CR> ChineseLetter ( String w 4 , String S 4 , String T 8 , Item [ ] J 9 , int B 9 ) { <CR> id = w 4 ; <CR> date = S 4 ; <CR> num_i = B 9 ; <CR> for ( int V 1 = <STRING> ; V 1 < B 9 ; V 1 ++ ) <CR> it [ V 1 ] = J 9 [ V 1 ] ; <CR> } <CR> private int num_i ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> private int cnt ; <CR> Item ( ) { <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private static double total_money = <STRING> ; <CR> private String id , name ; <CR> Item ( String W 6 , String g 4 , double V 2 , int L 8 , double k 0 ) { <CR> id = W 6 ; <CR> name = g 4 ; <CR> money = V 2 ; <CR> cnt = L 8 ; <CR> discnt = k 0 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private double money , discnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static void main ( String [ ] P 8 ) { <CR> Scanner C = new Scanner ( System . in ) ; <CR> String u 0 , I 9 , M 0 ; <CR> System . out . print ( <STRING> ) ; <CR> u 0 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 9 = C . nextLine ( ) ; <CR> M 0 = C . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String l 5 , P 7 , K 9 , S 6 , Z 4 ; <CR> System . out . print ( <STRING> ) ; <CR> l 5 = C . nextLine ( ) ; <CR> if ( l 5 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> P 7 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 9 = C . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> } <CR> <EOC>