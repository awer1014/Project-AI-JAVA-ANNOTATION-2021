<BOC> public class Evaluation { <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String l 5 , String r 8 ) { <CR> day = l 5 ; <CR> cover = r 8 ; <CR> } <CR> protected String day , cover ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String G 7 , String A 4 ) { <CR> super ( G 7 , A 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String v 5 , String e 4 ) { <CR> super ( v 5 , e 4 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String S 2 , String o 9 ) { <CR> super ( S 2 , o 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> Student ( String S 6 , String Y 5 , String j 8 , String l 5 , String v 2 ) { <CR> evaluation = S 6 ; <CR> stid = Y 5 ; <CR> stname = j 8 ; <CR> stnumber = l 5 ; <CR> stnumberc = v 2 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] e 9 ) { <CR> Scanner D 2 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = D 2 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String B 8 , t 4 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> B 8 = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 4 = D 2 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> B 8 = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 4 = D 2 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> B 8 = D 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 4 = D 2 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation W 2 = setEvaluation ( evaluation ) ; <CR> W 2 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String J 9 ) { <CR> Evaluation j 1 = <STRING> ; <CR> switch ( J 9 ) { <CR> case <STRING> : <CR> j 1 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> j 1 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> j 1 = new Report ( day , cover ) ; <CR> } <CR> return j 1 ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> } <CR> <EOC>