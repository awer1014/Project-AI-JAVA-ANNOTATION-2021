<BOC> import java . util . Scanner ; <CR> public class keeper { <CR> public void keeperdisplay ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> String tel ; <CR> public keeper ( String l 6 , String m 8 ) { <CR> this . id = l 6 ; <CR> this . tel = m 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public void petdisplay ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> public void speak ( String C 1 ) { <CR> if ( C 1 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else if ( C 1 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> String pid ; <CR> keeper keep ; <CR> static Scanner sca = new Scanner ( System . in ) ; <CR> static int count = <STRING> ; <CR> String name ; <CR> public static void main ( String [ ] C 4 ) { <CR> int I 0 = <STRING> ; <CR> while ( I 0 ! = <STRING> ) { <CR> System . out . print ( <STRING> ) ; <CR> String O = sca . next ( ) ; <CR> if ( Integer . parseInt ( O ) == <STRING> ) <CR> break ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Q 9 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String f 2 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 5 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 7 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> keeper Y = new keeper ( p 5 , c 7 ) ; <CR> pet K 6 = new pet ( O , Q 9 , f 2 , Y ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 6 . petdisplay ( ) ; <CR> Y . keeperdisplay ( ) ; <CR> K 6 . speak ( K 6 . pid ) ; <CR> System . out . println ( <STRING> ) ; <CR> count ++ ; <CR> } <CR> System . out . println ( <STRING> + count + <STRING> ) ; <CR> } <CR> pet ( String j 5 , String C 1 , String d 6 , keeper H 4 ) { <CR> this . pid = j 5 ; <CR> this . name = C 1 ; <CR> this . type = d 6 ; <CR> this . keep = H 4 ; <CR> count += <STRING> ; <CR> } <CR> String type ; <CR> } <CR> <EOC>