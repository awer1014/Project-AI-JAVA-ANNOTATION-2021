<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String S 5 , String O 4 , String J 2 , String H 4 , String v 0 ) { <CR> super ( S 5 , O 4 , J 2 , H 4 , v 0 ) ; <CR> } <CR> public void display ( ) { <CR> System . out . print ( receiver + title + <STRING> + <STRING> + <STRING> ) ; <CR> System . out . print ( content + <STRING> ) ; <CR> System . out . print ( sender + <STRING> + <STRING> + <STRING> ) ; <CR> System . out . print ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String q 1 , String f 6 , String j 9 , String d 5 , String l 3 ) { <CR> super ( q 1 , f 6 , j 9 , d 5 , l 3 ) ; <CR> } <CR> public void display ( ) { <CR> System . out . print ( <STRING> + <STRING> + title + <STRING> + receiver + <STRING> ) ; <CR> System . out . print ( content + <STRING> ) ; <CR> System . out . print ( <STRING> + <STRING> ) ; <CR> System . out . print ( sender + <STRING> ) ; <CR> System . out . print ( date + <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Envelop { <CR> String receiverAddr ; <CR> void display ( ) { <CR> System . out . print ( <STRING> + senderAddr + <STRING> + <STRING> + letter . sender + <STRING> ) ; <CR> System . out . print ( <STRING> + <STRING> + receiverAddr + <STRING> + letter . receiver + <STRING> + letter . title + <STRING> + <STRING> ) ; <CR> System . out . print ( <STRING> + <STRING> ) ; <CR> letter . display ( ) ; <CR> } <CR> String senderAddr ; <CR> Envelop ( String T 8 , String s 8 , Letter O 3 ) { <CR> this . senderAddr = T 8 ; <CR> this . receiverAddr = s 8 ; <CR> this . letter = O 3 ; <CR> } <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> abstract public class Letter implements Comparable { <CR> Letter ( String S 1 , String T 3 , String H 4 , String j 4 , String a 7 ) { <CR> this . title = S 1 ; <CR> this . receiver = T 3 ; <CR> this . content = H 4 ; <CR> this . sender = j 4 ; <CR> this . date = a 7 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> int valueOf ( String i 7 ) { <CR> int r 0 = <STRING> ; <CR> for ( int P 8 = <STRING> ; P 8 < i 7 . length ( ) ; P 8 ++ ) { <CR> char Y 1 = i 7 . charAt ( P 8 ) ; <CR> r 0 = r 0 * <STRING> + Y 1 - <STRING> ; <CR> } <CR> return r 0 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> boolean same ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract protected void display ( ) ; <CR> public int compareTo ( Object Q ) { <CR> Letter L 1 = ( Letter ) Q ; <CR> same = <STRING> ; <CR> if ( valueOf ( this . date . substring ( <STRING> , <STRING> ) ) > valueOf ( o . date . substring ( <STRING> , <STRING> ) ) ) <CR> return <STRING> ; <CR> else <CR> if ( valueOf ( this . date . substring ( <STRING> , <STRING> ) ) == valueOf ( o . date . substring ( <STRING> , <STRING> ) ) ) { <CR> return <STRING> ; <CR> } <CR> else return - <STRING> ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> import java . util . Arrays ; <CR> public class test { <CR> public static void main ( String [ ] p ) { <CR> Letter [ ] Y 3 = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> Arrays . sort ( Y 3 ) ; <CR> for ( int Q = <STRING> ; Q < <STRING> ; Q ++ ) <CR> Y 3 [ Q ] . display ( ) ; <CR> } <CR> } <CR> <EOC>