<BOC> public class ChineseLetter extends Evaluation { <CR> public ChineseLetter ( String d 4 , String m 6 , String t 4 , String a 0 , String e 3 ) { <CR> super ( d 4 , m 6 , t 4 , a 0 , e 3 ) ; <CR> } <CR> public void Display ( ) { <CR> System . out . println ( getReceiver ( ) + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( getSender ( ) + <STRING> ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Evaluation { <CR> public void Display ( ) { <CR> System . out . println ( <STRING> + title + <STRING> + getReceiver ( ) + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( getSender ( ) ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> public EnglishLetter ( String W 9 , String t 6 , String R 0 , String H 1 , String g ) { <CR> super ( W 9 , t 6 , R 0 , H 1 , g ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> public Envelop ( String M 9 , String f , Evaluation K 8 ) { <CR> this . senderAddr = M 9 ; <CR> this . receiverAddr = f ; <CR> this . letter = K 8 ; <CR> } <CR> Evaluation letter ; <CR> public static void main ( String [ ] E 0 ) { <CR> Evaluation N 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop q 4 = new Envelop ( <STRING> , <STRING> , N 5 ) ; <CR> q 4 . display ( ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr ) ; <CR> System . out . println ( <STRING> + receiverAddr ) ; <CR> letter . Display ( ) ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> public String getSender ( ) { <CR> return sender ; <CR> } <CR> public String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public String getDate ( ) { <CR> return date ; <CR> } <CR> public Evaluation ( String k 1 , String G 8 , String V 6 , String j 8 , String Q ) { <CR> this . title = k 1 ; <CR> this . receiver = G 8 ; <CR> this . content = V 6 ; <CR> this . sender = j 8 ; <CR> this . date = Q ; <CR> } <CR> abstract protected void Display ( ) ; <CR> protected String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> public class Letter implements Comparable { <CR> public int compareTo ( Object J 7 ) { <CR> Letter z 9 = ( Letter ) J 7 ; <CR> if ( this . x > z 9 . x ) <CR> return <STRING> ; <CR> else <CR> return - <STRING> ; <CR> } <CR> public static void main ( String [ ] f 8 ) { <CR> int g 4 ; <CR> for ( g 4 = list . length - <STRING> ; g 4 > = <STRING> ; g 4 -- ) { <CR> int G 8 = g 4 ; <CR> Letter C = new Letter ( g 4 ) ; <CR> Letter a 4 = new Letter ( G 8 - <STRING> ) ; <CR> if ( C . compareTo ( a 4 ) == <STRING> ) <CR> C . display ( g 4 ) ; <CR> } <CR> } <CR> private int x ; <CR> public static Evaluation [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> public void display ( int g 4 ) { <CR> list [ g 4 ] . Display ( ) ; <CR> } <CR> Letter ( int p 9 ) { <CR> this . x = p 9 ; <CR> } <CR> } <CR> <EOC>