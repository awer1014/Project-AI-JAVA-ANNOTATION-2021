<BOC> public class Keeper { <CR> public Keeper ( String G 9 , String g 7 , String B ) { <CR> id = g 7 ; <CR> tel = B ; <CR> name = G 9 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public Pet ( String B 0 , String R 2 , String O 4 , Keeper Y 6 ) { <CR> pid = B 0 ; <CR> name = R 2 ; <CR> type = O 4 ; <CR> count ++ ; <CR> keeper = Y 6 ; <CR> } <CR> private Keeper keeper ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private String pid , name , type ; <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] g 8 ) { <CR> Scanner Z 5 = new Scanner ( System . in ) ; <CR> boolean R 3 = <STRING> ; <CR> while ( R 3 ) { <CR> System . out . print ( <STRING> ) ; <CR> String m = Z 5 . nextLine ( ) ; <CR> if ( m . equals ( <STRING> ) ) { <CR> R 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String z 3 = Z 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 5 = Z 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String S 3 = Z 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 6 = Z 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String E 9 = Z 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper i 8 = new Keeper ( S 3 , h 6 , E 9 ) ; <CR> Pet q = new Pet ( z 3 , e 5 , m , i 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> q . display ( ) ; <CR> i 8 . display ( ) ; <CR> q . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>