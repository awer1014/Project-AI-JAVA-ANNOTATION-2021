<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String g 9 , String t 3 , String O 3 ) { <CR> id = t 3 ; <CR> tel = O 3 ; <CR> name = g 9 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private static int count ; <CR> private String pid , name , type ; <CR> private Keeper keeper ; <CR> public Pet ( String p 7 , String f 7 , String F 3 , Keeper o 3 ) { <CR> pid = p 7 ; <CR> name = f 7 ; <CR> type = F 3 ; <CR> count ++ ; <CR> keeper = o 3 ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] O 9 ) { <CR> Scanner G 5 = new Scanner ( System . in ) ; <CR> boolean r 9 = <STRING> ; <CR> while ( r 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String H 0 = G 5 . nextLine ( ) ; <CR> if ( H 0 . equals ( <STRING> ) ) { <CR> r 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String P 3 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 4 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v 8 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String t 0 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u 4 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper R 9 = new Keeper ( v 8 , t 0 , u 4 ) ; <CR> Pet x 1 = new Pet ( P 3 , p 4 , H 0 , R 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 1 . display ( ) ; <CR> R 9 . display ( ) ; <CR> x 1 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>