<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String i 3 , String H 6 , String z 5 ) { <CR> id = H 6 ; <CR> tel = z 5 ; <CR> name = i 3 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> private static int count ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private Keeper keeper ; <CR> public Pet ( String Z 4 , String l 1 , String G 9 , Keeper Q 6 ) { <CR> pid = Z 4 ; <CR> name = l 1 ; <CR> type = G 9 ; <CR> count ++ ; <CR> keeper = Q 6 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] m 0 ) { <CR> Scanner I 7 = new Scanner ( System . in ) ; <CR> boolean O 1 = <STRING> ; <CR> while ( O 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String z 9 = I 7 . nextLine ( ) ; <CR> if ( z 9 . equals ( <STRING> ) ) { <CR> O 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String C = I 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String A 6 = I 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String a = I 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String a 8 = I 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String L 6 = I 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper T 1 = new Keeper ( a , a 8 , L 6 ) ; <CR> Pet z 0 = new Pet ( C , A 6 , z 9 , T 1 ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 0 . display ( ) ; <CR> T 1 . display ( ) ; <CR> z 0 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>