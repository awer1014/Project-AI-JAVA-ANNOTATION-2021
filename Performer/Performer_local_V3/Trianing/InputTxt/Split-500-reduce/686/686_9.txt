<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + this . id ) ; <CR> System . out . println ( <STRING> + this . tel ) ; <CR> } <CR> private String id ; <CR> public Keeper ( String y 2 , String f 7 ) { <CR> this . id = y 2 ; <CR> this . tel = f 7 ; <CR> } <CR> private String tel ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String keeper ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + this . type ) ; <CR> System . out . println ( <STRING> + this . pid ) ; <CR> System . out . println ( <STRING> + this . name ) ; <CR> } <CR> public void keep ( String V 9 ) { <CR> this . keeper = V 9 ; <CR> } <CR> public void speak ( ) { <CR> if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> private String name ; <CR> private String pid ; <CR> public Pet ( String m 5 , String D , String m 1 ) { <CR> this . pid = m 5 ; <CR> this . name = D ; <CR> this . type = m 1 ; <CR> } <CR> private String type ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test 2 { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> public static void input ( ) { <CR> System . out . println ( <STRING> ) ; <CR> type = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> pid = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> name = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> id = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> tel = keyboard . nextLine ( ) ; <CR> } <CR> public static String type , pid , name , id , tel ; <CR> public static void main ( String [ ] H 9 ) { <CR> input ( ) ; <CR> Pet Z 3 = new Pet ( type , pid , name ) ; <CR> Z 3 . keep ( id ) ; <CR> Keeper F 2 = new Keeper ( id , tel ) ; <CR> System . out . println ( <STRING> ) ; <CR> input ( ) ; <CR> Pet D 4 = new Pet ( type , pid , name ) ; <CR> D 4 . keep ( id ) ; <CR> Keeper z 5 = new Keeper ( id , tel ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 3 . display ( ) ; <CR> F 2 . display ( ) ; <CR> Z 3 . speak ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 4 . display ( ) ; <CR> z 5 . display ( ) ; <CR> D 4 . speak ( ) ; <CR> } <CR> } <CR> <EOC>