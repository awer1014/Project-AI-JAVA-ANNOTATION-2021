<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String e 7 , String X 4 , String R 1 , String Y 6 , String Q ) { <CR> super ( e 7 , X 4 , R 1 , Y 6 , Q ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String f 7 , String S , String Y 0 , String m 2 , String K 1 ) { <CR> super ( f 7 , S , Y 0 , m 2 , K 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object v 9 ) { <CR> Letter G 4 = ( Letter ) v 9 ; <CR> if ( this . getDate ( ) . compareTo ( G 4 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( G 4 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String h , String z 0 , String J 7 , String R 9 , String c 2 ) { <CR> this . title = h ; <CR> this . receiver = z 0 ; <CR> this . content = J 7 ; <CR> this . sender = R 9 ; <CR> this . date = c 2 ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] b 2 ) { <CR> Letter Z 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter t 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter E 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList q 3 = { Z 6 , t 5 , E 9 } ; <CR> for ( Letter g 0 : q 3 ) <CR> g 0 . display ( ) ; <CR> } <CR> } <CR> <EOC>