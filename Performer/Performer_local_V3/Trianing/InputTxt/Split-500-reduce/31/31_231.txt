<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String u 5 , String Q 9 , String R 8 , String j 0 , String l 3 ) { <CR> super ( u 5 , Q 9 , R 8 , j 0 , l 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String M , String e 5 , String S 1 , String R 5 , String Q 3 ) { <CR> super ( M , e 5 , S 1 , R 5 , Q 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object L 4 ) { <CR> Letter d 3 = ( Letter ) L 4 ; <CR> if ( this . getDate ( ) . compareTo ( d 3 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( d 3 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String O 7 , String Z 5 , String e 2 , String l , String N 1 ) { <CR> this . title = O 7 ; <CR> this . receiver = Z 5 ; <CR> this . content = e 2 ; <CR> this . sender = l ; <CR> this . date = N 1 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] s 1 ) { <CR> Letter t 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter J 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList p 2 = { t 1 , k 6 , J 6 } ; <CR> for ( Letter q 6 : p 2 ) <CR> q 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>