<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String u 7 , String q , String q 6 , String t 2 , String q 4 ) { <CR> super ( u 7 , q , q 6 , t 2 , q 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String d 2 , String S 0 , String Q , String M 8 , String F 3 ) { <CR> super ( d 2 , S 0 , Q , M 8 , F 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String K 2 , String v 9 , String D 7 , String b 5 , String s 6 ) { <CR> this . title = K 2 ; <CR> this . receiver = v 9 ; <CR> this . content = D 7 ; <CR> this . sender = b 5 ; <CR> this . date = s 6 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object o 9 ) { <CR> Letter q = ( Letter ) o 9 ; <CR> if ( this . getDate ( ) . compareTo ( q . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( q . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] m ) { <CR> Letter y 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter H 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList z 8 = { y 6 , H 5 , G 0 } ; <CR> for ( Letter K 1 : z 8 ) <CR> K 1 . display ( ) ; <CR> } <CR> } <CR> <EOC>