<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String F 3 , String A 2 , String d 8 , String D 3 , String E 7 ) { <CR> super ( F 3 , A 2 , d 8 , D 3 , E 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String u 8 , String o 2 , String P , String b , String i 4 ) { <CR> super ( u 8 , o 2 , P , b , i 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object Z 8 ) { <CR> Letter t 4 = ( Letter ) Z 8 ; <CR> if ( this . getDate ( ) . compareTo ( t 4 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( t 4 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> Letter ( String c 3 , String J 9 , String z 8 , String f 3 , String H 6 ) { <CR> this . title = c 3 ; <CR> this . receiver = J 9 ; <CR> this . content = z 8 ; <CR> this . sender = f 3 ; <CR> this . date = H 6 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] t 3 ) { <CR> Letter G 0 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter I 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter A 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList P 4 = { G 0 , I 7 , A 5 } ; <CR> for ( Letter J 9 : P 4 ) <CR> J 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>