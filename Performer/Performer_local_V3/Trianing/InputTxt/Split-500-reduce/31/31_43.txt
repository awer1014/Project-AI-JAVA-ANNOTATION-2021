<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String I 8 , String y 3 , String o 3 , String w 0 , String y 2 ) { <CR> super ( I 8 , y 3 , o 3 , w 0 , y 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String g 3 , String T , String e 2 , String z 5 , String h ) { <CR> super ( g 3 , T , e 2 , z 5 , h ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object X 4 ) { <CR> Letter E 2 = ( Letter ) X 4 ; <CR> if ( this . getDate ( ) . compareTo ( E 2 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( E 2 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String s 1 , String H 8 , String k 2 , String D 7 , String j 3 ) { <CR> this . title = s 1 ; <CR> this . receiver = H 8 ; <CR> this . content = k 2 ; <CR> this . sender = D 7 ; <CR> this . date = j 3 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] Z 0 ) { <CR> Letter X 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter g 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter p 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList X 9 = { X 5 , g 1 , p 9 } ; <CR> for ( Letter f 4 : X 9 ) <CR> f 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>