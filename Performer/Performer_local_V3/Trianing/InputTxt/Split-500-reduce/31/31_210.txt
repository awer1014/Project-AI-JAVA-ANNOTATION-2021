<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String o 3 , String D 9 , String K , String j 3 , String g 6 ) { <CR> super ( o 3 , D 9 , K , j 3 , g 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String H 2 , String Z 8 , String t 5 , String A 4 , String o 2 ) { <CR> super ( H 2 , Z 8 , t 5 , A 4 , o 2 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> public int compareTo ( Object c 1 ) { <CR> Letter i 9 = ( Letter ) c 1 ; <CR> if ( this . getDate ( ) . compareTo ( i 9 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( i 9 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> Letter ( String l 1 , String Z 8 , String V 9 , String A 7 , String P 6 ) { <CR> this . title = l 1 ; <CR> this . receiver = Z 8 ; <CR> this . content = V 9 ; <CR> this . sender = A 7 ; <CR> this . date = P 6 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] y 6 ) { <CR> Letter J 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter d 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Y 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList e 8 = { J 9 , d 0 , Y 8 } ; <CR> for ( Letter n 9 : e 8 ) <CR> n 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>