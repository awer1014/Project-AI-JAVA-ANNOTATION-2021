<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String D 7 , String X 3 , String V , String e 7 , String o 7 ) { <CR> super ( D 7 , X 3 , V , e 7 , o 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String h 0 , String E 2 , String d 3 , String Z 4 , String Y 9 ) { <CR> super ( h 0 , E 2 , d 3 , Z 4 , Y 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object n 4 ) { <CR> Letter H 5 = ( Letter ) n 4 ; <CR> if ( this . getDate ( ) . compareTo ( H 5 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( H 5 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String a , String h 8 , String Y 2 , String X 2 , String r 8 ) { <CR> this . title = a ; <CR> this . receiver = h 8 ; <CR> this . content = Y 2 ; <CR> this . sender = X 2 ; <CR> this . date = r 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] c 1 ) { <CR> Letter k 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter g 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter q 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList W 2 = { k 4 , g 1 , q 1 } ; <CR> for ( Letter o 1 : W 2 ) <CR> o 1 . display ( ) ; <CR> } <CR> } <CR> <EOC>