<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String L 5 , String h 6 , String J 5 , String T 9 , String g 9 ) { <CR> super ( L 5 , h 6 , J 5 , T 9 , g 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String x 8 , String y 2 , String i 1 , String d 9 , String S 0 ) { <CR> super ( x 8 , y 2 , i 1 , d 9 , S 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> public int compareTo ( Object h 4 ) { <CR> Letter V 3 = ( Letter ) h 4 ; <CR> if ( this . getDate ( ) . compareTo ( V 3 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( V 3 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String w 0 , String A , String c 7 , String q 5 , String v 2 ) { <CR> this . title = w 0 ; <CR> this . receiver = A ; <CR> this . content = c 7 ; <CR> this . sender = q 5 ; <CR> this . date = v 2 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] M 7 ) { <CR> Letter d 2 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter R 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter M 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList t = { d 2 , R 7 , M 3 } ; <CR> for ( Letter O 1 : t ) <CR> O 1 . display ( ) ; <CR> } <CR> } <CR> <EOC>