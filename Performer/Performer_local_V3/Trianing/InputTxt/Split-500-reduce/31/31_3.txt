<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String q 2 , String u 0 , String V 4 , String s 2 , String x 9 ) { <CR> super ( q 2 , u 0 , V 4 , s 2 , x 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String c , String w 5 , String S 3 , String J 5 , String o 4 ) { <CR> super ( c , w 5 , S 3 , J 5 , o 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String b 4 , String A 0 , String q 9 , String M 2 , String n 6 ) { <CR> this . title = b 4 ; <CR> this . receiver = A 0 ; <CR> this . content = q 9 ; <CR> this . sender = M 2 ; <CR> this . date = n 6 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object A ) { <CR> Letter i 9 = ( Letter ) A ; <CR> if ( this . getDate ( ) . compareTo ( i 9 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( i 9 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] J 6 ) { <CR> Letter W 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter b 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter a 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList Z 0 = { W 5 , b 0 , a 6 } ; <CR> for ( Letter g 9 : Z 0 ) <CR> g 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>