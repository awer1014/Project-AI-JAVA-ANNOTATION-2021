<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String z 4 , String t 1 , String l 7 , String h 7 , String C 5 ) { <CR> super ( z 4 , t 1 , l 7 , h 7 , C 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String E 7 , String A 0 , String d 8 , String v 4 , String T 0 ) { <CR> super ( E 7 , A 0 , d 8 , v 4 , T 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String g 4 , String u 8 , String m 9 , String l , String W 4 ) { <CR> this . title = g 4 ; <CR> this . receiver = u 8 ; <CR> this . content = m 9 ; <CR> this . sender = l ; <CR> this . date = W 4 ; <CR> } <CR> public int compareTo ( Object f ) { <CR> Letter n = ( Letter ) f ; <CR> if ( this . getDate ( ) . compareTo ( n . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( n . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] e 3 ) { <CR> Letter E 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter L = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList E 5 = { E 1 , L , w 5 } ; <CR> for ( Letter v : E 5 ) <CR> v . display ( ) ; <CR> } <CR> } <CR> <EOC>