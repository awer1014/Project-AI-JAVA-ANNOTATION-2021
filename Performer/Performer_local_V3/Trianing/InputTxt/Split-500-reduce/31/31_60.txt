<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String Y 1 , String m 9 , String c 6 , String P , String R 5 ) { <CR> super ( Y 1 , m 9 , c 6 , P , R 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String a 6 , String x 4 , String B 9 , String A 7 , String m 5 ) { <CR> super ( a 6 , x 4 , B 9 , A 7 , m 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object r 3 ) { <CR> Letter t 7 = ( Letter ) r 3 ; <CR> if ( this . getDate ( ) . compareTo ( t 7 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( t 7 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String U 7 , String P 1 , String a 7 , String x 2 , String a ) { <CR> this . title = U 7 ; <CR> this . receiver = P 1 ; <CR> this . content = a 7 ; <CR> this . sender = x 2 ; <CR> this . date = a ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] w 5 ) { <CR> Letter U 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter B 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter s 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList I 3 = { U 1 , B 7 , s 0 } ; <CR> for ( Letter e 9 : I 3 ) <CR> e 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>