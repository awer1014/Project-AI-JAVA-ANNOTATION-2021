<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> Evaluation ( String y 2 , String c 0 , String P 0 , double v 2 , double m 0 ) { <CR> type = y 2 ; <CR> num = c 0 ; <CR> name = P 0 ; <CR> grade = v 2 ; <CR> pgrade = m 0 ; <CR> } <CR> protected String type , num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> public Exam ( String C 3 , String w 9 , String H 1 , double J 2 , double o 5 ) { <CR> super ( C 3 , w 9 , H 1 , J 2 , o 5 ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String odate , des ; <CR> public HomeWork ( String t 4 , String y 2 , String R 7 , double b 3 , double K 5 ) { <CR> super ( t 4 , y 2 , R 7 , b 3 , K 5 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> public Report ( String T 9 , String m 3 , String v 7 , double F 8 , double w 5 ) { <CR> super ( T 9 , m 3 , v 7 , F 8 , w 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] H 8 ) { <CR> Scanner g 2 = new Scanner ( System . in ) ; <CR> String E 5 , N 9 , K 1 ; <CR> double I 9 , A ; <CR> System . out . print ( <STRING> ) ; <CR> E 5 = g 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> N 9 = g 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 1 = g 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 9 = g 2 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A = g 2 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String K 6 , i 2 , E 7 , x 9 , x 0 , w 7 ; <CR> if ( E 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> K 6 = g 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 2 = g 2 . nextLine ( ) ; <CR> } <CR> else if ( E 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> E 7 = g 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 9 = g 2 . nextLine ( ) ; <CR> } <CR> else if ( E 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 0 = g 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> w 7 = g 2 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation Z 8 = <STRING> ; <CR> if ( E 5 . equals ( <STRING> ) ) <CR> Z 8 = new Exam ( E 5 , N 9 , K 1 , I 9 , A ) ; <CR> else if ( E 5 . equals ( <STRING> ) ) <CR> Z 8 = new HomeWork ( E 5 , N 9 , K 1 , I 9 , A ) ; <CR> else if ( E 5 . equals ( <STRING> ) ) <CR> Z 8 = new Report ( E 5 , N 9 , K 1 , I 9 , A ) ; <CR> Z 8 . print ( ) ; <CR> } <CR> } <CR> <EOC>