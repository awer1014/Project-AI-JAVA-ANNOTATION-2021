<BOC> public class Homework extends require { <CR> public Homework ( student c 6 , String J 2 , String D 8 , String O 5 ) { <CR> super ( c 6 , J 2 , D 8 , O 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student F 1 , String j 0 , String A 7 , String E 3 ) { <CR> super ( F 1 , j 0 , A 7 , E 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student X 6 , String O 8 , String B 2 , String o ) { <CR> super ( X 6 , O 8 , B 2 , o ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> private String id , date , type ; <CR> private student student ; <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> public require ( student y 4 , String j 0 , String z , String E 3 ) { <CR> student = y 4 ; <CR> id = j 0 ; <CR> date = z ; <CR> type = E 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class student { <CR> student ( String e 6 , String v 8 , double v 5 , double m ) { <CR> id = e 6 ; <CR> name = v 8 ; <CR> grade = v 5 ; <CR> gradepp = m ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> private String id , name ; <CR> private double grade , gradepp ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] g 5 ) { <CR> Scanner e 8 = new Scanner ( System . in ) ; <CR> boolean l 2 = <STRING> ; <CR> while ( l 2 ) { <CR> System . out . print ( <STRING> ) ; <CR> String U 0 = e 8 . nextLine ( ) ; <CR> if ( U 0 . equals ( <STRING> ) ) { <CR> l 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String T 5 = e 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String E 4 = e 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double n 2 = e 8 . nextDouble ( ) ; <CR> e 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double a 5 = e 8 . nextDouble ( ) ; <CR> e 8 . nextLine ( ) ; <CR> String w 6 , k 0 ; <CR> student d 7 = new student ( T 5 , E 4 , n 2 , a 5 ) ; <CR> require Z = <STRING> ; <CR> if ( U 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> w 6 = e 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 0 = e 8 . nextLine ( ) ; <CR> Z = new Quiz ( d 7 , U 0 , w 6 , k 0 ) ; <CR> } <CR> else if ( U 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> w 6 = e 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 0 = e 8 . nextLine ( ) ; <CR> Z = new Homework ( d 7 , U 0 , w 6 , k 0 ) ; <CR> } <CR> else if ( U 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> w 6 = e 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 0 = e 8 . nextLine ( ) ; <CR> Z = new Report ( d 7 , U 0 , w 6 , k 0 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( Z ! = <STRING> ) { <CR> d 7 . display ( ) ; <CR> Z . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>