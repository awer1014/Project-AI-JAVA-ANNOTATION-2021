<BOC> public class Homework extends require { <CR> public Homework ( student I 7 , String V 3 , String d 0 , String R 8 ) { <CR> super ( I 7 , V 3 , d 0 , R 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student B , String w 8 , String y 9 , String y 5 ) { <CR> super ( B , w 8 , y 9 , y 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student j 9 , String n 9 , String N 6 , String Z ) { <CR> super ( j 9 , n 9 , N 6 , Z ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> private String id , date , type ; <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> public require ( student Q 4 , String a 3 , String P 7 , String C 9 ) { <CR> student = Q 4 ; <CR> id = a 3 ; <CR> date = P 7 ; <CR> type = C 9 ; <CR> } <CR> private student student ; <CR> } <CR> <EOC> <BOC> public class student { <CR> private double grade , gradepp ; <CR> private String id , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> student ( String c 6 , String r 8 , double F 7 , double d ) { <CR> id = c 6 ; <CR> name = r 8 ; <CR> grade = F 7 ; <CR> gradepp = d ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] x 3 ) { <CR> Scanner D 5 = new Scanner ( System . in ) ; <CR> boolean S 2 = <STRING> ; <CR> while ( S 2 ) { <CR> System . out . print ( <STRING> ) ; <CR> String C = D 5 . nextLine ( ) ; <CR> if ( C . equals ( <STRING> ) ) { <CR> S 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String o 7 = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u 2 = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double u 7 = D 5 . nextDouble ( ) ; <CR> D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double J 5 = D 5 . nextDouble ( ) ; <CR> D 5 . nextLine ( ) ; <CR> String U 2 , n 7 ; <CR> student C 7 = new student ( o 7 , u 2 , u 7 , J 5 ) ; <CR> require W = <STRING> ; <CR> if ( C . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> U 2 = D 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 7 = D 5 . nextLine ( ) ; <CR> W = new Quiz ( C 7 , C , U 2 , n 7 ) ; <CR> } <CR> else if ( C . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> U 2 = D 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 7 = D 5 . nextLine ( ) ; <CR> W = new Homework ( C 7 , C , U 2 , n 7 ) ; <CR> } <CR> else if ( C . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> U 2 = D 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 7 = D 5 . nextLine ( ) ; <CR> W = new Report ( C 7 , C , U 2 , n 7 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( W ! = <STRING> ) { <CR> C 7 . display ( ) ; <CR> W . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>