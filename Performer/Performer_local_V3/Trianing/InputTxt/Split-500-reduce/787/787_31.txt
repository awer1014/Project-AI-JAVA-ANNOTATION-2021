<BOC> public class Homework extends require { <CR> public Homework ( student b 1 , String l 8 , String A 6 , String F 0 ) { <CR> super ( b 1 , l 8 , A 6 , F 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student n 3 , String u 1 , String w 1 , String m 3 ) { <CR> super ( n 3 , u 1 , w 1 , m 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student Y 5 , String P 0 , String H 0 , String m 3 ) { <CR> super ( Y 5 , P 0 , H 0 , m 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> private String id , date , type ; <CR> public require ( student R 0 , String o , String K , String M 7 ) { <CR> student = R 0 ; <CR> id = o ; <CR> date = K ; <CR> type = M 7 ; <CR> } <CR> private student student ; <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class student { <CR> private double grade , gradepp ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> student ( String v 2 , String W 1 , double S 4 , double N 7 ) { <CR> id = v 2 ; <CR> name = W 1 ; <CR> grade = S 4 ; <CR> gradepp = N 7 ; <CR> } <CR> private String id , name ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] P 8 ) { <CR> Scanner G 1 = new Scanner ( System . in ) ; <CR> boolean C 8 = <STRING> ; <CR> while ( C 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String W 8 = G 1 . nextLine ( ) ; <CR> if ( W 8 . equals ( <STRING> ) ) { <CR> C 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String n 6 = G 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v = G 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double i = G 1 . nextDouble ( ) ; <CR> G 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double G 0 = G 1 . nextDouble ( ) ; <CR> G 1 . nextLine ( ) ; <CR> String X 5 , Z 9 ; <CR> student B 9 = new student ( n 6 , v , i , G 0 ) ; <CR> require e 2 = <STRING> ; <CR> if ( W 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 5 = G 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 9 = G 1 . nextLine ( ) ; <CR> e 2 = new Quiz ( B 9 , W 8 , X 5 , Z 9 ) ; <CR> } <CR> else if ( W 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 5 = G 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 9 = G 1 . nextLine ( ) ; <CR> e 2 = new Homework ( B 9 , W 8 , X 5 , Z 9 ) ; <CR> } <CR> else if ( W 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 5 = G 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 9 = G 1 . nextLine ( ) ; <CR> e 2 = new Report ( B 9 , W 8 , X 5 , Z 9 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( e 2 ! = <STRING> ) { <CR> B 9 . display ( ) ; <CR> e 2 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>