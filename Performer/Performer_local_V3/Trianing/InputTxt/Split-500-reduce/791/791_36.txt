<BOC> abstract public class Evaluation { <CR> abstract public void printa ( ) ; <CR> public Evaluation ( String A 6 , String X 4 , String j 3 , double j 7 , double C 4 ) { <CR> sid = A 6 ; <CR> name = X 4 ; <CR> type = j 3 ; <CR> this . grade = j 7 ; <CR> this . gradepc = C 4 ; <CR> } <CR> private String sid , name , type ; <CR> protected double grade , gradepc ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date ; <CR> String range ; <CR> public Exam ( String R 1 , String S 6 , String r 7 , double U 5 , double G 1 ) { <CR> super ( R 1 , S 6 , r 7 , U 5 , G 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] j 2 ) { <CR> Scanner X 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int i 4 = <STRING> ; <CR> do <CR> { <CR> i 4 = X 4 . nextInt ( ) ; <CR> } <CR> while ( i 4 > <STRING> || i 4 < <STRING> ) ; <CR> return mapEvaluation ( i 4 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int i 4 ) { <CR> Evaluation Y 7 = <STRING> ; <CR> switch ( i 4 ) { <CR> case <STRING> : <CR> Y 7 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>