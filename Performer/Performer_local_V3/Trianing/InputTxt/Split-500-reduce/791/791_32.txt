<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> abstract public void printa ( ) ; <CR> private String sid , name , type ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> public Evaluation ( String f 2 , String p 3 , String i 1 , double H 7 , double i 5 ) { <CR> sid = f 2 ; <CR> name = p 3 ; <CR> type = i 1 ; <CR> this . grade = H 7 ; <CR> this . gradepc = i 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> String date ; <CR> public Exam ( String i 9 , String Z 0 , String x 0 , double r 2 , double Z 9 ) { <CR> super ( i 9 , Z 0 , x 0 , r 2 , Z 9 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation mapEvaluation ( int G 9 ) { <CR> Evaluation l 9 = <STRING> ; <CR> switch ( G 9 ) { <CR> case <STRING> : <CR> l 9 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> public static void main ( String [ ] f 9 ) { <CR> Scanner t 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int G 9 = <STRING> ; <CR> do <CR> { <CR> G 9 = t 4 . nextInt ( ) ; <CR> } <CR> while ( G 9 > <STRING> || G 9 < <STRING> ) ; <CR> return mapEvaluation ( G 9 ) ; <CR> } <CR> } <CR> <EOC>