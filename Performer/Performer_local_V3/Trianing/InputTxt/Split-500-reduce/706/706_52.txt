<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void Keeper ( String J 5 , String U 9 ) { <CR> this . id = J 5 ; <CR> this . tel = U 9 ; <CR> } <CR> public static void main ( String [ ] C 2 ) { <CR> String J 5 ; <CR> String U 9 ; <CR> Scanner v 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 5 = v 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 9 = v 9 . nextLine ( ) ; <CR> Keeper X 2 = new Keeper ( J 5 , U 9 ) ; <CR> } <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> Keeper keeper ; <CR> void Pet ( String s 0 , String P 0 , String h 0 , Keeper L 3 ) { <CR> count ++ ; <CR> this . pid = s 0 ; <CR> this . name = P 0 ; <CR> this . type = h 0 ; <CR> this . keeper = L 3 ; <CR> } <CR> String name ; <CR> String pid ; <CR> String type ; <CR> public static void main ( String [ ] Y 4 ) { <CR> String s 0 ; <CR> String P 0 ; <CR> String h 0 ; <CR> String e 6 ; <CR> String k 6 ; <CR> Scanner D 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 6 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 6 = D 0 . nextLine ( ) ; <CR> Keeper I 8 = new Keeper ( e 6 , k 6 ) ; <CR> Scanner D 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 0 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 0 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 0 = D 0 . nextLine ( ) ; <CR> pet A 5 = new pet ( s 0 , P 0 , h 0 , I 8 ) ; <CR> String g 4 = A 5 . Speak ( ) ; <CR> System . out . println ( <STRING> + g 4 ) ; <CR> } <CR> static int count ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> } <CR> <EOC>