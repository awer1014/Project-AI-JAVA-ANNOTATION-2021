<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> void Keeper ( String t 9 , String O 0 ) { <CR> this . id = t 9 ; <CR> this . tel = O 0 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> public static void main ( String [ ] D 2 ) { <CR> String t 9 ; <CR> String O 0 ; <CR> Scanner D 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 9 = D 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 0 = D 9 . nextLine ( ) ; <CR> Keeper L 8 = new Keeper ( t 9 , O 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String name ; <CR> void Pet ( String h 0 , String Y 4 , String k , Keeper Z 8 ) { <CR> count ++ ; <CR> this . pid = h 0 ; <CR> this . name = Y 4 ; <CR> this . type = k ; <CR> this . keeper = Z 8 ; <CR> } <CR> Keeper keeper ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String pid ; <CR> String type ; <CR> static int count ; <CR> public static void main ( String [ ] P 6 ) { <CR> String h 0 ; <CR> String Y 4 ; <CR> String k ; <CR> String D 3 ; <CR> String d 3 ; <CR> Scanner z 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 3 = z 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 3 = z 0 . nextLine ( ) ; <CR> Keeper G 4 = new Keeper ( D 3 , d 3 ) ; <CR> Scanner z 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 0 = z 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k = z 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 4 = z 0 . nextLine ( ) ; <CR> pet e 8 = new pet ( h 0 , Y 4 , k , G 4 ) ; <CR> String R 6 = e 8 . Speak ( ) ; <CR> System . out . println ( <STRING> + R 6 ) ; <CR> } <CR> } <CR> <EOC>