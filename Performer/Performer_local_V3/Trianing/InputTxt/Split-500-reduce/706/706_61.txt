<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void Keeper ( String f 5 , String Z 0 ) { <CR> this . id = f 5 ; <CR> this . tel = Z 0 ; <CR> } <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> public static void main ( String [ ] u 4 ) { <CR> String f 5 ; <CR> String Z 0 ; <CR> Scanner f 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 5 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 0 = f 7 . nextLine ( ) ; <CR> Keeper O 1 = new Keeper ( f 5 , Z 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> static int count ; <CR> String pid ; <CR> Keeper keeper ; <CR> String name ; <CR> String type ; <CR> public static void main ( String [ ] f 2 ) { <CR> String C 1 ; <CR> String C 7 ; <CR> String V 0 ; <CR> String X 4 ; <CR> String E 6 ; <CR> Scanner Z 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> X 4 = Z 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 6 = Z 8 . nextLine ( ) ; <CR> Keeper M = new Keeper ( X 4 , E 6 ) ; <CR> Scanner Z 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> C 1 = Z 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 0 = Z 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> C 7 = Z 8 . nextLine ( ) ; <CR> pet f 1 = new pet ( C 1 , C 7 , V 0 , M ) ; <CR> String k = f 1 . Speak ( ) ; <CR> System . out . println ( <STRING> + k ) ; <CR> } <CR> void Pet ( String C 1 , String C 7 , String V 0 , Keeper g 7 ) { <CR> count ++ ; <CR> this . pid = C 1 ; <CR> this . name = C 7 ; <CR> this . type = V 0 ; <CR> this . keeper = g 7 ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC>