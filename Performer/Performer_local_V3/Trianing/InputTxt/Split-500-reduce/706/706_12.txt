<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String tel ; <CR> String id ; <CR> public static void main ( String [ ] f ) { <CR> String S ; <CR> String B 8 ; <CR> Scanner b 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> S = b 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 8 = b 8 . nextLine ( ) ; <CR> Keeper S 4 = new Keeper ( S , B 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> void Keeper ( String S , String B 8 ) { <CR> this . id = S ; <CR> this . tel = B 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String pid ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> Keeper keeper ; <CR> void Pet ( String f 4 , String t 9 , String N 8 , Keeper O 0 ) { <CR> count ++ ; <CR> this . pid = f 4 ; <CR> this . name = t 9 ; <CR> this . type = N 8 ; <CR> this . keeper = O 0 ; <CR> } <CR> static int count ; <CR> public static void main ( String [ ] U 6 ) { <CR> String f 4 ; <CR> String t 9 ; <CR> String N 8 ; <CR> String n 1 ; <CR> String U 2 ; <CR> Scanner m 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 1 = m 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 2 = m 7 . nextLine ( ) ; <CR> Keeper F 0 = new Keeper ( n 1 , U 2 ) ; <CR> Scanner m 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 4 = m 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 8 = m 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 9 = m 7 . nextLine ( ) ; <CR> pet k 6 = new pet ( f 4 , t 9 , N 8 , F 0 ) ; <CR> String R = k 6 . Speak ( ) ; <CR> System . out . println ( <STRING> + R ) ; <CR> } <CR> String type ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String name ; <CR> } <CR> <EOC>