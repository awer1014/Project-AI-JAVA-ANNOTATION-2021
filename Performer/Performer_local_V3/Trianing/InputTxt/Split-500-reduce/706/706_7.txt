<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> public static void main ( String [ ] R 7 ) { <CR> String o 5 ; <CR> String A ; <CR> Scanner J 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 5 = J 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A = J 1 . nextLine ( ) ; <CR> Keeper y 6 = new Keeper ( o 5 , A ) ; <CR> } <CR> String id ; <CR> void Keeper ( String o 5 , String A ) { <CR> this . id = o 5 ; <CR> this . tel = A ; <CR> } <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> static int count ; <CR> Keeper keeper ; <CR> String pid ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] u 6 ) { <CR> String I 1 ; <CR> String P 5 ; <CR> String t 0 ; <CR> String G 8 ; <CR> String E 7 ; <CR> Scanner w 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 8 = w 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 7 = w 9 . nextLine ( ) ; <CR> Keeper Q 4 = new Keeper ( G 8 , E 7 ) ; <CR> Scanner w 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 1 = w 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 0 = w 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 5 = w 9 . nextLine ( ) ; <CR> pet B = new pet ( I 1 , P 5 , t 0 , Q 4 ) ; <CR> String X 4 = B . Speak ( ) ; <CR> System . out . println ( <STRING> + X 4 ) ; <CR> } <CR> String name ; <CR> String type ; <CR> void Pet ( String I 1 , String P 5 , String t 0 , Keeper V ) { <CR> count ++ ; <CR> this . pid = I 1 ; <CR> this . name = P 5 ; <CR> this . type = t 0 ; <CR> this . keeper = V ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> } <CR> <EOC>