<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] t 4 ) { <CR> Scanner c 4 = new Scanner ( System . in ) ; <CR> String M 1 , U 5 , q 4 , n 2 , M 4 , U 9 , C 4 ; <CR> System . out . print ( <STRING> ) ; <CR> M 1 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 5 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 4 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> n 2 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 4 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 9 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 4 = c 4 . nextLine ( ) ; <CR> if ( M 1 . equals ( <STRING> ) ) { <CR> Kindsoftest I = new Test ( q 4 , U 5 , n 2 , U 9 , M 4 , C 4 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( M 1 . equals ( <STRING> ) ) { <CR> Kindsoftest I = new Hwork ( q 4 , U 5 , n 2 , U 9 , M 4 , C 4 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest I = new Mind ( q 4 , U 5 , n 2 , U 9 , M 4 , C 4 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String q 0 , int t 8 , int z 2 , int w 3 , double u 0 , String u 3 ) { <CR> super ( q 0 , t 8 , z 2 , w 3 , u 0 , u 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String u 3 , int A 7 , int G 3 , int S 0 , double S 5 , String p 5 ) { <CR> this . id = A 7 ; <CR> this . name = u 3 ; <CR> this . gread = G 3 ; <CR> this . gp = S 5 ; <CR> this . date = S 0 ; <CR> this . range = p 5 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String f 5 , int T 1 , int Z , int B 1 , double j 4 , String H 0 ) { <CR> super ( f 5 , T 1 , Z , B 1 , j 4 , H 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String z 3 , int S 5 , int Z 9 , int l 7 , double a 9 , String G 6 ) { <CR> super ( z 3 , S 5 , Z 9 , l 7 , a 9 , G 6 ) ; <CR> } <CR> } <CR> <EOC>