<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] I 9 ) { <CR> Scanner L 2 = new Scanner ( System . in ) ; <CR> String m 1 , h 8 , j , s 1 , K 5 , F 4 , l 9 ; <CR> System . out . print ( <STRING> ) ; <CR> m 1 = L 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> h 8 = L 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> j = L 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 1 = L 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 5 = L 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 4 = L 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 9 = L 2 . nextLine ( ) ; <CR> if ( m 1 . equals ( <STRING> ) ) { <CR> Kindsoftest i 5 = new Test ( j , h 8 , s 1 , F 4 , K 5 , l 9 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( m 1 . equals ( <STRING> ) ) { <CR> Kindsoftest i 5 = new Hwork ( j , h 8 , s 1 , F 4 , K 5 , l 9 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest i 5 = new Mind ( j , h 8 , s 1 , F 4 , K 5 , l 9 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String H 4 , int s 2 , int T 0 , int e 8 , double s 5 , String r ) { <CR> super ( H 4 , s 2 , T 0 , e 8 , s 5 , r ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String g 4 , int S 4 , int C 4 , int C 8 , double L 2 , String b 5 ) { <CR> this . id = S 4 ; <CR> this . name = g 4 ; <CR> this . gread = C 4 ; <CR> this . gp = L 2 ; <CR> this . date = C 8 ; <CR> this . range = b 5 ; <CR> } <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String D 7 , int e 4 , int j 1 , int m , double m 8 , String v 2 ) { <CR> super ( D 7 , e 4 , j 1 , m , m 8 , v 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String d 1 , int M 9 , int N 5 , int i 5 , double W 2 , String f 4 ) { <CR> super ( d 1 , M 9 , N 5 , i 5 , W 2 , f 4 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>