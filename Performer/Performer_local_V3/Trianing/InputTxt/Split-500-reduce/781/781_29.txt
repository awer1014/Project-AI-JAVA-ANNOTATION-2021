<BOC> abstract public class Evaluation { <CR> public Evaluation ( String H 2 ) { <CR> kind = H 2 ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public void print ( ) { <CR> String r = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> r += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> r += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> r += <STRING> ; <CR> System . out . println ( <STRING> + r ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String Y 1 , String P 4 ) { <CR> super ( Y 1 , P 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String G 8 , String c 0 ) { <CR> super ( G 8 , c 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String s 4 , String G ) { <CR> super ( s 4 , G ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String w 0 , String O 7 , String b 1 , String K 2 ) { <CR> id = w 0 ; <CR> name = O 7 ; <CR> score = b 1 ; <CR> prop = K 2 ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] e 3 ) { <CR> Scanner b 0 = new Scanner ( System . in ) ; <CR> boolean m 7 = <STRING> ; <CR> while ( m 7 ) { <CR> System . out . println ( <STRING> ) ; <CR> String c 6 = b 0 . nextLine ( ) ; <CR> if ( c 6 . equals ( <STRING> ) ) { <CR> m 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String T 9 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String D 4 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String R 3 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String h 3 = b 0 . nextLine ( ) ; <CR> Student e 5 = new Student ( T 9 , D 4 , R 3 , h 3 ) ; <CR> Evaluation W 8 = new Evaluation ( c 6 ) ; <CR> Evaluation y 8 = <STRING> ; <CR> String H 0 , K 0 ; <CR> if ( c 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 0 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 0 = b 0 . nextLine ( ) ; <CR> y 8 = new Exam ( H 0 , K 0 ) ; <CR> } <CR> else if ( c 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 0 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 0 = b 0 . nextLine ( ) ; <CR> y 8 = new HomeWork ( H 0 , K 0 ) ; <CR> } <CR> else if ( c 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 0 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 0 = b 0 . nextLine ( ) ; <CR> y 8 = new Report ( H 0 , K 0 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( y 8 ! = <STRING> ) { <CR> W 8 . print ( ) ; <CR> e 5 . print ( ) ; <CR> y 8 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>