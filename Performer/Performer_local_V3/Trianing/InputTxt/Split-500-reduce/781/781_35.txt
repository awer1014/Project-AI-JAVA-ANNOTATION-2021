<BOC> abstract public class Evaluation { <CR> public Evaluation ( String w 4 ) { <CR> kind = w 4 ; <CR> } <CR> public void print ( ) { <CR> String I 5 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> I 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> I 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> I 5 += <STRING> ; <CR> System . out . println ( <STRING> + I 5 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String W 0 , String U 2 ) { <CR> super ( W 0 , U 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String F 3 , String q 6 ) { <CR> super ( F 3 , q 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String O 5 , String C 6 ) { <CR> super ( O 5 , C 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String K 1 , String S , String y 2 , String c 6 ) { <CR> id = K 1 ; <CR> name = S ; <CR> score = y 2 ; <CR> prop = c 6 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] A 2 ) { <CR> Scanner b 7 = new Scanner ( System . in ) ; <CR> boolean v 2 = <STRING> ; <CR> while ( v 2 ) { <CR> System . out . println ( <STRING> ) ; <CR> String n 4 = b 7 . nextLine ( ) ; <CR> if ( n 4 . equals ( <STRING> ) ) { <CR> v 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String J 4 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String L 1 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String I 6 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String H 8 = b 7 . nextLine ( ) ; <CR> Student j 2 = new Student ( J 4 , L 1 , I 6 , H 8 ) ; <CR> Evaluation G 0 = new Evaluation ( n 4 ) ; <CR> Evaluation K 6 = <STRING> ; <CR> String F 3 , D 2 ; <CR> if ( n 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 3 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 2 = b 7 . nextLine ( ) ; <CR> K 6 = new Exam ( F 3 , D 2 ) ; <CR> } <CR> else if ( n 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 3 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 2 = b 7 . nextLine ( ) ; <CR> K 6 = new HomeWork ( F 3 , D 2 ) ; <CR> } <CR> else if ( n 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 3 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 2 = b 7 . nextLine ( ) ; <CR> K 6 = new Report ( F 3 , D 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( K 6 ! = <STRING> ) { <CR> G 0 . print ( ) ; <CR> j 2 . print ( ) ; <CR> K 6 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>