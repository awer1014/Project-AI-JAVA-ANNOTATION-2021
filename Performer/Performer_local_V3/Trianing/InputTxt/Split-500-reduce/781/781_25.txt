<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String W 3 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> W 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> W 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> W 3 += <STRING> ; <CR> System . out . println ( <STRING> + W 3 ) ; <CR> } <CR> public Evaluation ( String b 3 ) { <CR> kind = b 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String I 7 , String R 4 ) { <CR> super ( I 7 , R 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String N , String D 6 ) { <CR> super ( N , D 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String W 2 , String b 3 ) { <CR> super ( W 2 , b 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String w 0 , String Y 9 , String e 7 , String S 7 ) { <CR> id = w 0 ; <CR> name = Y 9 ; <CR> score = e 7 ; <CR> prop = S 7 ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] X 3 ) { <CR> Scanner Q 8 = new Scanner ( System . in ) ; <CR> boolean U 0 = <STRING> ; <CR> while ( U 0 ) { <CR> System . out . println ( <STRING> ) ; <CR> String m 9 = Q 8 . nextLine ( ) ; <CR> if ( m 9 . equals ( <STRING> ) ) { <CR> U 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String e = Q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String X 0 = Q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String S 2 = Q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String O 5 = Q 8 . nextLine ( ) ; <CR> Student A = new Student ( e , X 0 , S 2 , O 5 ) ; <CR> Evaluation g 7 = new Evaluation ( m 9 ) ; <CR> Evaluation F 2 = <STRING> ; <CR> String r 5 , Y 9 ; <CR> if ( m 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> r 5 = Q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 9 = Q 8 . nextLine ( ) ; <CR> F 2 = new Exam ( r 5 , Y 9 ) ; <CR> } <CR> else if ( m 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> r 5 = Q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 9 = Q 8 . nextLine ( ) ; <CR> F 2 = new HomeWork ( r 5 , Y 9 ) ; <CR> } <CR> else if ( m 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> r 5 = Q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 9 = Q 8 . nextLine ( ) ; <CR> F 2 = new Report ( r 5 , Y 9 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( F 2 ! = <STRING> ) { <CR> g 7 . print ( ) ; <CR> A . print ( ) ; <CR> F 2 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>