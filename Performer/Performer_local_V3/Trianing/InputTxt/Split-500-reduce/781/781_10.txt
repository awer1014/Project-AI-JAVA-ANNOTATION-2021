<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String J 5 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> J 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> J 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> J 5 += <STRING> ; <CR> System . out . println ( <STRING> + J 5 ) ; <CR> } <CR> private String kind ; <CR> public Evaluation ( String r 3 ) { <CR> kind = r 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String U 8 , String Z 5 ) { <CR> super ( U 8 , Z 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String y , String D 2 ) { <CR> super ( y , D 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String l 3 , String J 0 ) { <CR> super ( l 3 , J 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String u 6 , String H 0 , String M 0 , String O 8 ) { <CR> id = u 6 ; <CR> name = H 0 ; <CR> score = M 0 ; <CR> prop = O 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] B 7 ) { <CR> Scanner K 0 = new Scanner ( System . in ) ; <CR> boolean r = <STRING> ; <CR> while ( r ) { <CR> System . out . println ( <STRING> ) ; <CR> String I 5 = K 0 . nextLine ( ) ; <CR> if ( I 5 . equals ( <STRING> ) ) { <CR> r = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String a = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Q 9 = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String z 4 = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String B 1 = K 0 . nextLine ( ) ; <CR> Student V 4 = new Student ( a , Q 9 , z 4 , B 1 ) ; <CR> Evaluation c 8 = new Evaluation ( I 5 ) ; <CR> Evaluation O 8 = <STRING> ; <CR> String s 6 , s 3 ; <CR> if ( I 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 6 = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 3 = K 0 . nextLine ( ) ; <CR> O 8 = new Exam ( s 6 , s 3 ) ; <CR> } <CR> else if ( I 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 6 = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 3 = K 0 . nextLine ( ) ; <CR> O 8 = new HomeWork ( s 6 , s 3 ) ; <CR> } <CR> else if ( I 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 6 = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 3 = K 0 . nextLine ( ) ; <CR> O 8 = new Report ( s 6 , s 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( O 8 ! = <STRING> ) { <CR> c 8 . print ( ) ; <CR> V 4 . print ( ) ; <CR> O 8 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>