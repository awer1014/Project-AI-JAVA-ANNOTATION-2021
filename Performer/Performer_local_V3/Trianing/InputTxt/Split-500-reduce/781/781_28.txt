<BOC> abstract public class Evaluation { <CR> public Evaluation ( String j 9 ) { <CR> kind = j 9 ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public void print ( ) { <CR> String j 4 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> j 4 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> j 4 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> j 4 += <STRING> ; <CR> System . out . println ( <STRING> + j 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String R 6 , String b 6 ) { <CR> super ( R 6 , b 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String l 6 , String W 6 ) { <CR> super ( l 6 , W 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String c , String t 2 ) { <CR> super ( c , t 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String U 7 , String o , String Z , String x 8 ) { <CR> id = U 7 ; <CR> name = o ; <CR> score = Z ; <CR> prop = x 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] W 6 ) { <CR> Scanner L 2 = new Scanner ( System . in ) ; <CR> boolean r 7 = <STRING> ; <CR> while ( r 7 ) { <CR> System . out . println ( <STRING> ) ; <CR> String g 3 = L 2 . nextLine ( ) ; <CR> if ( g 3 . equals ( <STRING> ) ) { <CR> r 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String E 9 = L 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String V 8 = L 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String w 0 = L 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String i 2 = L 2 . nextLine ( ) ; <CR> Student r 2 = new Student ( E 9 , V 8 , w 0 , i 2 ) ; <CR> Evaluation d 8 = new Evaluation ( g 3 ) ; <CR> Evaluation c 2 = <STRING> ; <CR> String h , Y 7 ; <CR> if ( g 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> h = L 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 7 = L 2 . nextLine ( ) ; <CR> c 2 = new Exam ( h , Y 7 ) ; <CR> } <CR> else if ( g 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> h = L 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 7 = L 2 . nextLine ( ) ; <CR> c 2 = new HomeWork ( h , Y 7 ) ; <CR> } <CR> else if ( g 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> h = L 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 7 = L 2 . nextLine ( ) ; <CR> c 2 = new Report ( h , Y 7 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( c 2 ! = <STRING> ) { <CR> d 8 . print ( ) ; <CR> r 2 . print ( ) ; <CR> c 2 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>