<BOC> abstract public class Evaluation { <CR> public Evaluation ( String c 8 ) { <CR> kind = c 8 ; <CR> } <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String k = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> k += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> k += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> k += <STRING> ; <CR> System . out . println ( <STRING> + k ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String i 5 , String j 4 ) { <CR> super ( i 5 , j 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String Y 8 , String S 4 ) { <CR> super ( Y 8 , S 4 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String H 2 , String L ) { <CR> super ( H 2 , L ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String N 7 , String b 4 , String P 7 , String F 1 ) { <CR> id = N 7 ; <CR> name = b 4 ; <CR> score = P 7 ; <CR> prop = F 1 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] G 3 ) { <CR> Scanner o = new Scanner ( System . in ) ; <CR> boolean W 8 = <STRING> ; <CR> while ( W 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String c 9 = o . nextLine ( ) ; <CR> if ( c 9 . equals ( <STRING> ) ) { <CR> W 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String C 3 = o . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String B 8 = o . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String A 6 = o . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String x 3 = o . nextLine ( ) ; <CR> Student M 5 = new Student ( C 3 , B 8 , A 6 , x 3 ) ; <CR> Evaluation U 8 = new Evaluation ( c 9 ) ; <CR> Evaluation e = <STRING> ; <CR> String s 3 , P 2 ; <CR> if ( c 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 3 = o . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 2 = o . nextLine ( ) ; <CR> e = new Exam ( s 3 , P 2 ) ; <CR> } <CR> else if ( c 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 3 = o . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 2 = o . nextLine ( ) ; <CR> e = new HomeWork ( s 3 , P 2 ) ; <CR> } <CR> else if ( c 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 3 = o . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 2 = o . nextLine ( ) ; <CR> e = new Report ( s 3 , P 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( e ! = <STRING> ) { <CR> U 8 . print ( ) ; <CR> M 5 . print ( ) ; <CR> e . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>