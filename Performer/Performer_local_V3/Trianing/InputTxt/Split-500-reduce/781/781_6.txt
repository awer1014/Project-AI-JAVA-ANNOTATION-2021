<BOC> abstract public class Evaluation { <CR> public Evaluation ( String u ) { <CR> kind = u ; <CR> } <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String H 0 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> H 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> H 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> H 0 += <STRING> ; <CR> System . out . println ( <STRING> + H 0 ) ; <CR> } <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String W 1 , String Z 1 ) { <CR> super ( W 1 , Z 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String u 3 , String I 7 ) { <CR> super ( u 3 , I 7 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String t 5 , String F 8 ) { <CR> super ( t 5 , F 8 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String r , String t 0 , String D , String n 3 ) { <CR> id = r ; <CR> name = t 0 ; <CR> score = D ; <CR> prop = n 3 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] u 5 ) { <CR> Scanner e 0 = new Scanner ( System . in ) ; <CR> boolean h = <STRING> ; <CR> while ( h ) { <CR> System . out . println ( <STRING> ) ; <CR> String C 9 = e 0 . nextLine ( ) ; <CR> if ( C 9 . equals ( <STRING> ) ) { <CR> h = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String q 5 = e 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String P 9 = e 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String I 9 = e 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String d 7 = e 0 . nextLine ( ) ; <CR> Student G 6 = new Student ( q 5 , P 9 , I 9 , d 7 ) ; <CR> Evaluation a 2 = new Evaluation ( C 9 ) ; <CR> Evaluation U 5 = <STRING> ; <CR> String t 6 , F 1 ; <CR> if ( C 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 6 = e 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 1 = e 0 . nextLine ( ) ; <CR> U 5 = new Exam ( t 6 , F 1 ) ; <CR> } <CR> else if ( C 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 6 = e 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 1 = e 0 . nextLine ( ) ; <CR> U 5 = new HomeWork ( t 6 , F 1 ) ; <CR> } <CR> else if ( C 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 6 = e 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 1 = e 0 . nextLine ( ) ; <CR> U 5 = new Report ( t 6 , F 1 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( U 5 ! = <STRING> ) { <CR> a 2 . print ( ) ; <CR> G 6 . print ( ) ; <CR> U 5 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>