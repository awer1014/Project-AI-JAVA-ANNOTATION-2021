<BOC> abstract public class Evaluation { <CR> public Evaluation ( String o 1 ) { <CR> kind = o 1 ; <CR> } <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String A 5 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> A 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> A 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> A 5 += <STRING> ; <CR> System . out . println ( <STRING> + A 5 ) ; <CR> } <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String E 4 , String m 5 ) { <CR> super ( E 4 , m 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String s 6 , String t 5 ) { <CR> super ( s 6 , t 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String I 7 , String I 5 ) { <CR> super ( I 7 , I 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String A 2 , String B 5 , String l 7 , String M 5 ) { <CR> id = A 2 ; <CR> name = B 5 ; <CR> score = l 7 ; <CR> prop = M 5 ; <CR> } <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] U 3 ) { <CR> Scanner G 7 = new Scanner ( System . in ) ; <CR> boolean l 1 = <STRING> ; <CR> while ( l 1 ) { <CR> System . out . println ( <STRING> ) ; <CR> String s 9 = G 7 . nextLine ( ) ; <CR> if ( s 9 . equals ( <STRING> ) ) { <CR> l 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String o 0 = G 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String N 9 = G 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String W 9 = G 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String q = G 7 . nextLine ( ) ; <CR> Student g 4 = new Student ( o 0 , N 9 , W 9 , q ) ; <CR> Evaluation j 3 = new Evaluation ( s 9 ) ; <CR> Evaluation Q 2 = <STRING> ; <CR> String x , v 4 ; <CR> if ( s 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = G 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 4 = G 7 . nextLine ( ) ; <CR> Q 2 = new Exam ( x , v 4 ) ; <CR> } <CR> else if ( s 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = G 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 4 = G 7 . nextLine ( ) ; <CR> Q 2 = new HomeWork ( x , v 4 ) ; <CR> } <CR> else if ( s 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = G 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 4 = G 7 . nextLine ( ) ; <CR> Q 2 = new Report ( x , v 4 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( Q 2 ! = <STRING> ) { <CR> j 3 . print ( ) ; <CR> g 4 . print ( ) ; <CR> Q 2 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>