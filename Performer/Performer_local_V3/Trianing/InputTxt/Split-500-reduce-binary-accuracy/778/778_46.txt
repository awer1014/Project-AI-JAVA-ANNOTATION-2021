<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> Evaluation ( String r 6 , String a 8 , String J 5 , double u 6 , double E 0 ) { <CR> type = r 6 ; <CR> num = a 8 ; <CR> name = J 5 ; <CR> grade = u 6 ; <CR> pgrade = E 0 ; <CR> } <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String v 3 , String J 2 , String S , double Q 9 , double j ) { <CR> super ( v 3 , J 2 , S , Q 9 , j ) ; <CR> } <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String odate , des ; <CR> public HomeWork ( String a 9 , String d 9 , String e , double L 6 , double s 0 ) { <CR> super ( a 9 , d 9 , e , L 6 , s 0 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String Z , String T 4 , String C 6 , double s 0 , double V 7 ) { <CR> super ( Z , T 4 , C 6 , s 0 , V 7 ) ; <CR> } <CR> String rep , bok ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] A ) { <CR> Scanner A 0 = new Scanner ( System . in ) ; <CR> String Q 0 , D 4 , E 0 ; <CR> double L 4 , q 5 ; <CR> System . out . print ( <STRING> ) ; <CR> Q 0 = A 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 4 = A 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> E 0 = A 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> L 4 = A 0 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 5 = A 0 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String l , s 0 , y 2 , d 5 , k 4 , G 6 ; <CR> if ( Q 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> l = A 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 0 = A 0 . nextLine ( ) ; <CR> } <CR> else if ( Q 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> y 2 = A 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 5 = A 0 . nextLine ( ) ; <CR> } <CR> else if ( Q 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> k 4 = A 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 6 = A 0 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation i 6 = <STRING> ; <CR> if ( Q 0 . equals ( <STRING> ) ) <CR> i 6 = new Exam ( Q 0 , D 4 , E 0 , L 4 , q 5 ) ; <CR> else if ( Q 0 . equals ( <STRING> ) ) <CR> i 6 = new HomeWork ( Q 0 , D 4 , E 0 , L 4 , q 5 ) ; <CR> else if ( Q 0 . equals ( <STRING> ) ) <CR> i 6 = new Report ( Q 0 , D 4 , E 0 , L 4 , q 5 ) ; <CR> i 6 . print ( ) ; <CR> } <CR> } <CR> <EOC>