<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public Evaluation ( String m 4 ) { <CR> kind = m 4 ; <CR> } <CR> public void print ( ) { <CR> String l 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> l 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> l 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> l 9 += <STRING> ; <CR> System . out . println ( <STRING> + l 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String w 8 , String m 1 ) { <CR> super ( w 8 , m 1 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String c 8 , String Y 7 ) { <CR> super ( c 8 , Y 7 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String i 8 , String b 5 ) { <CR> super ( i 8 , b 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String Y 1 , String y 3 , String I 2 , String A 3 ) { <CR> id = Y 1 ; <CR> name = y 3 ; <CR> score = I 2 ; <CR> prop = A 3 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] H 2 ) { <CR> Scanner L 9 = new Scanner ( System . in ) ; <CR> boolean w 3 = <STRING> ; <CR> while ( w 3 ) { <CR> System . out . println ( <STRING> ) ; <CR> String t = L 9 . nextLine ( ) ; <CR> if ( t . equals ( <STRING> ) ) { <CR> w 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String c 0 = L 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String D 2 = L 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Y 7 = L 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String j 7 = L 9 . nextLine ( ) ; <CR> Student J 3 = new Student ( c 0 , D 2 , Y 7 , j 7 ) ; <CR> Evaluation G 1 = new Evaluation ( t ) ; <CR> Evaluation V 7 = <STRING> ; <CR> String X 1 , k 7 ; <CR> if ( t . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 1 = L 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 7 = L 9 . nextLine ( ) ; <CR> V 7 = new Exam ( X 1 , k 7 ) ; <CR> } <CR> else if ( t . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 1 = L 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 7 = L 9 . nextLine ( ) ; <CR> V 7 = new HomeWork ( X 1 , k 7 ) ; <CR> } <CR> else if ( t . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 1 = L 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 7 = L 9 . nextLine ( ) ; <CR> V 7 = new Report ( X 1 , k 7 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( V 7 ! = <STRING> ) { <CR> G 1 . print ( ) ; <CR> J 3 . print ( ) ; <CR> V 7 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>