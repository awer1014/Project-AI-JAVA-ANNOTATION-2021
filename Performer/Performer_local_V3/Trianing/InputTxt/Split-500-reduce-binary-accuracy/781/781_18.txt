<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> public void print ( ) { <CR> String J 3 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> J 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> J 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> J 3 += <STRING> ; <CR> System . out . println ( <STRING> + J 3 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String h 5 ) { <CR> kind = h 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String D , String x 1 ) { <CR> super ( D , x 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String D 4 , String h 7 ) { <CR> super ( D 4 , h 7 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String M 2 , String M 4 ) { <CR> super ( M 2 , M 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String O 1 , String L 5 , String O 4 , String g 3 ) { <CR> id = O 1 ; <CR> name = L 5 ; <CR> score = O 4 ; <CR> prop = g 3 ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] N 0 ) { <CR> Scanner j 4 = new Scanner ( System . in ) ; <CR> boolean T 6 = <STRING> ; <CR> while ( T 6 ) { <CR> System . out . println ( <STRING> ) ; <CR> String E 5 = j 4 . nextLine ( ) ; <CR> if ( E 5 . equals ( <STRING> ) ) { <CR> T 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String u 4 = j 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String g 2 = j 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String l 7 = j 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String E 3 = j 4 . nextLine ( ) ; <CR> Student n 0 = new Student ( u 4 , g 2 , l 7 , E 3 ) ; <CR> Evaluation w 8 = new Evaluation ( E 5 ) ; <CR> Evaluation j 5 = <STRING> ; <CR> String P , o 7 ; <CR> if ( E 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> P = j 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 7 = j 4 . nextLine ( ) ; <CR> j 5 = new Exam ( P , o 7 ) ; <CR> } <CR> else if ( E 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> P = j 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 7 = j 4 . nextLine ( ) ; <CR> j 5 = new HomeWork ( P , o 7 ) ; <CR> } <CR> else if ( E 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> P = j 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 7 = j 4 . nextLine ( ) ; <CR> j 5 = new Report ( P , o 7 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( j 5 ! = <STRING> ) { <CR> w 8 . print ( ) ; <CR> n 0 . print ( ) ; <CR> j 5 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>