<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public void print ( ) { <CR> String q 6 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> q 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> q 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> q 6 += <STRING> ; <CR> System . out . println ( <STRING> + q 6 ) ; <CR> } <CR> public Evaluation ( String N ) { <CR> kind = N ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String n 8 , String M 1 ) { <CR> super ( n 8 , M 1 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String A 0 , String l 3 ) { <CR> super ( A 0 , l 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String k 9 , String b ) { <CR> super ( k 9 , b ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String T 1 , String O 2 , String h , String l 9 ) { <CR> id = T 1 ; <CR> name = O 2 ; <CR> score = h ; <CR> prop = l 9 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] c 7 ) { <CR> Scanner l 0 = new Scanner ( System . in ) ; <CR> boolean f 5 = <STRING> ; <CR> while ( f 5 ) { <CR> System . out . println ( <STRING> ) ; <CR> String G 1 = l 0 . nextLine ( ) ; <CR> if ( G 1 . equals ( <STRING> ) ) { <CR> f 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String r 7 = l 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String k 0 = l 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String A 1 = l 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String w 9 = l 0 . nextLine ( ) ; <CR> Student i 6 = new Student ( r 7 , k 0 , A 1 , w 9 ) ; <CR> Evaluation m 7 = new Evaluation ( G 1 ) ; <CR> Evaluation m 4 = <STRING> ; <CR> String v 7 , t 8 ; <CR> if ( G 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 7 = l 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 8 = l 0 . nextLine ( ) ; <CR> m 4 = new Exam ( v 7 , t 8 ) ; <CR> } <CR> else if ( G 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 7 = l 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 8 = l 0 . nextLine ( ) ; <CR> m 4 = new HomeWork ( v 7 , t 8 ) ; <CR> } <CR> else if ( G 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 7 = l 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 8 = l 0 . nextLine ( ) ; <CR> m 4 = new Report ( v 7 , t 8 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( m 4 ! = <STRING> ) { <CR> m 7 . print ( ) ; <CR> i 6 . print ( ) ; <CR> m 4 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>