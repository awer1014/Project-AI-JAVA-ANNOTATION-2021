<BOC> import java . util . Scanner ; <CR> public class Evaluation { <CR> public void namePrint ( ) { <CR> System . out . println ( name ) ; <CR> } <CR> public void gradePrint ( ) { <CR> System . out . println ( grade ) ; <CR> } <CR> double grade , level ; <CR> String num , name ; <CR> public Evaluation ( String W , String e 2 , double x , double m 3 ) { <CR> this . num = W ; <CR> this . name = e 2 ; <CR> this . grade = x ; <CR> this . level = m 3 ; <CR> } <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> public void numPrint ( ) { <CR> System . out . println ( num ) ; <CR> } <CR> public void levelPrint ( ) { <CR> System . out . println ( level ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String Z 8 , String Z 7 , double K 4 , double U 8 , String o 5 , String o 0 ) { <CR> super ( Z 8 , Z 7 , K 4 , U 8 ) ; <CR> this . data = o 5 ; <CR> this . b = o 0 ; <CR> } <CR> String data , b ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String data , a ; <CR> public HomeWork ( String S 8 , String w 6 , double x 7 , double T 6 , String o 1 , String f 4 ) { <CR> super ( S 8 , w 6 , x 7 , T 6 ) ; <CR> this . data = o 1 ; <CR> this . a = f 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String file , f ; <CR> public Report ( String k 3 , String w 6 , double A 4 , double C 0 , String i 4 , String c 0 ) { <CR> super ( k 3 , w 6 , A 4 , C 0 ) ; <CR> this . file = i 4 ; <CR> this . f = c 0 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> static double grade , level ; <CR> static String num , name , eat ; <CR> public static void main ( String [ ] S 2 ) { <CR> int d 0 ; <CR> System . out . print ( <STRING> ) ; <CR> d 0 = cin . nextInt ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> num = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> name = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> grade = cin . nextFloat ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> level = cin . nextFloat ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> switch ( d 0 ) { <CR> case <STRING> : <CR> String a 7 , D 9 ; <CR> System . out . print ( <STRING> ) ; <CR> a 7 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 9 = cin . nextLine ( ) ; <CR> Exam a 8 = new Exam ( num , name , grade , level , a 7 , D 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + a 8 . a 7 ) ; <CR> System . out . println ( <STRING> + a 8 . D 9 ) ; <CR> break ; <CR> case <STRING> : <CR> String C 8 ; <CR> System . out . print ( <STRING> ) ; <CR> a 7 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 8 = cin . nextLine ( ) ; <CR> HomeWork M 5 = new HomeWork ( num , name , grade , level , a 7 , C 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + M 5 . a 7 ) ; <CR> System . out . println ( <STRING> + M 5 . C 8 ) ; <CR> break ; <CR> case <STRING> : <CR> String r , I 2 ; <CR> System . out . print ( <STRING> ) ; <CR> r = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 2 = cin . nextLine ( ) ; <CR> Report l 2 = new Report ( num , name , grade , level , r , I 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 2 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 2 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 2 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 2 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + l 2 . r ) ; <CR> System . out . println ( <STRING> + l 2 . I 2 ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>