<BOC> import java . util . Arrays ; <CR> public class Card { <CR> static Letter [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> public static void main ( String Y ) { <CR> Arrays . sort ( list ) ; <CR> for ( Letter i 3 : list ) <CR> i 3 . display ( ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String y 6 , String b 1 , String X 4 , String F 9 , String l 0 ) { <CR> super ( y 6 , b 1 , X 4 , F 9 , l 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String K 1 , String P 8 , String p 3 , String J 1 , String M 2 ) { <CR> super ( K 1 , P 8 , p 3 , J 1 , M 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String f 2 , String J 5 , String x 2 , String l 5 , String F 7 ) { <CR> this . title = f 2 ; <CR> this . receiver = J 5 ; <CR> this . content = x 2 ; <CR> this . sender = l 5 ; <CR> this . date = F 7 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object m 9 ) { <CR> Letter o 3 = ( Letter ) m 9 ; <CR> if ( Integer . parseInt ( this . getDate ( ) ) < Integer . parseInt ( o 3 . getDate ( ) ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( Integer . parseInt ( this . getDate ( ) ) > Integer . parseInt ( o 3 . getDate ( ) ) ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC>