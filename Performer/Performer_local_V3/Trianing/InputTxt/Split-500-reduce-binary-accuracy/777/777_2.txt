<BOC> abstract public class Evaluation { <CR> public Evaluation ( String f 0 , String M 9 , double q 0 , double B 2 , String B 9 ) { <CR> this . id = f 0 ; <CR> this . name = M 9 ; <CR> this . g = q 0 ; <CR> this . w = B 2 ; <CR> this . type = B 9 ; <CR> } <CR> protected double g ; <CR> abstract public void Dis ( String F 6 , String W 2 ) ; <CR> abstract public void B ( ) ; <CR> protected String type ; <CR> protected String name ; <CR> abstract public void A ( ) ; <CR> protected double w ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> protected String id ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String q 2 , String s , double H 2 , double U , String r 6 ) { <CR> super ( q 2 , s , H 2 , U , r 6 ) ; <CR> } <CR> public void Dis ( String N 8 , String k 6 ) { <CR> System . out . println ( <STRING> + N 8 ) ; <CR> System . out . println ( <STRING> + k 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String f 6 , String X 0 , double T , double c 2 , String k 4 ) { <CR> super ( f 6 , X 0 , T , c 2 , k 4 ) ; <CR> } <CR> public void Dis ( String w 4 , String Z ) { <CR> System . out . println ( <STRING> + w 4 ) ; <CR> System . out . println ( <STRING> + Z ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String M 9 , String T 3 , double G 1 , double V 9 , String B 8 ) { <CR> super ( M 9 , T 3 , G 1 , V 9 , B 8 ) ; <CR> } <CR> public void Dis ( String e 1 , String R 4 ) { <CR> System . out . println ( <STRING> + e 1 ) ; <CR> System . out . println ( <STRING> + R 4 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] V 2 ) { <CR> Scanner b 5 = new Scanner ( System . in ) ; <CR> boolean x 6 = <STRING> ; <CR> while ( x 6 ) { <CR> System . out . print ( <STRING> ) ; <CR> String A 1 = b 5 . nextLine ( ) ; <CR> if ( A 1 . equals ( <STRING> ) ) { <CR> x 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String o 1 = b 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u = b 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double b 6 = b 5 . nextDouble ( ) ; <CR> String F = b 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double R 8 = b 5 . nextDouble ( ) ; <CR> F = b 5 . nextLine ( ) ; <CR> Evaluation e 8 ; <CR> if ( A 1 . equals ( <STRING> ) ) <CR> e 8 = new Exam ( o 1 , u , b 6 , R 8 , A 1 ) ; <CR> else if ( A 1 . equals ( <STRING> ) ) <CR> e 8 = new HomeWork ( o 1 , u , b 6 , R 8 , A 1 ) ; <CR> else <CR> e 8 = new Report ( o 1 , u , b 6 , R 8 , A 1 ) ; <CR> e 8 . A ( ) ; <CR> String s 4 = b 5 . nextLine ( ) ; <CR> e 8 . B ( ) ; <CR> String d 8 = b 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 8 . display ( ) ; <CR> e 8 . Dis ( s 4 , d 8 ) ; <CR> System . out . print ( <STRING> ) ; <CR> F = b 5 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>