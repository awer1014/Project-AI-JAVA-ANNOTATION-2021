<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> protected String sName ; <CR> protected String sNumber ; <CR> Evaluation ( String I , String y , double N , double w 9 ) { <CR> this . sNumber = I ; <CR> this . sName = y ; <CR> this . sGrade = N ; <CR> this . sProportion = w 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String s 1 , String y 7 , double L 2 , double L 4 , String B 0 , String z 7 ) { <CR> super ( s 1 , y 7 , L 2 , L 4 ) ; <CR> this . date = B 0 ; <CR> this . range = z 7 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String v 7 , String R 8 , double i 5 , double O 2 , String B 9 , String m 7 ) { <CR> super ( v 7 , R 8 , i 5 , O 2 ) ; <CR> this . deadline = B 9 ; <CR> this . description = m 7 ; <CR> } <CR> protected String deadline ; <CR> protected String description ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> protected String references ; <CR> public Report ( String H 1 , String S 2 , double H 8 , double n 8 , String r 8 , String P 2 ) { <CR> super ( H 1 , S 2 , H 8 , n 8 ) ; <CR> this . content = r 8 ; <CR> this . references = P 2 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int F 2 = <STRING> ; <CR> do <CR> { <CR> F 2 = keyboard . nextInt ( ) ; <CR> } <CR> while ( F 2 > <STRING> || F 2 < <STRING> ) ; <CR> return choice ( F 2 ) ; <CR> } <CR> static Evaluation choice ( int F 2 ) { <CR> switch ( F 2 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>