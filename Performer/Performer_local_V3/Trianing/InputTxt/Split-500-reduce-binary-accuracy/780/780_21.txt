<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> protected String sName ; <CR> Evaluation ( String t 0 , String d , double k 7 , double g 0 ) { <CR> this . sNumber = t 0 ; <CR> this . sName = d ; <CR> this . sGrade = k 7 ; <CR> this . sProportion = g 0 ; <CR> } <CR> protected double sGrade ; <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> protected String range ; <CR> public Exam ( String X 3 , String K 6 , double c 4 , double r 8 , String s 5 , String s ) { <CR> super ( X 3 , K 6 , c 4 , r 8 ) ; <CR> this . date = s 5 ; <CR> this . range = s ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String r 7 , String j 3 , double D 6 , double O 7 , String g 4 , String J 8 ) { <CR> super ( r 7 , j 3 , D 6 , O 7 ) ; <CR> this . deadline = g 4 ; <CR> this . description = J 8 ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> protected String content ; <CR> public Report ( String r 0 , String Y 2 , double d 2 , double w 2 , String B 1 , String C 2 ) { <CR> super ( r 0 , Y 2 , d 2 , w 2 ) ; <CR> this . content = B 1 ; <CR> this . references = C 2 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int B 4 = <STRING> ; <CR> do <CR> { <CR> B 4 = keyboard . nextInt ( ) ; <CR> } <CR> while ( B 4 > <STRING> || B 4 < <STRING> ) ; <CR> return choice ( B 4 ) ; <CR> } <CR> static Evaluation choice ( int B 4 ) { <CR> switch ( B 4 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>