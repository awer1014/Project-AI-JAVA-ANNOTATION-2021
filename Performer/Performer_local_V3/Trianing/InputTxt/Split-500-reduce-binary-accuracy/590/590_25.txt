<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String e 2 , String p 8 , String b 6 , String E 7 , String p 2 ) { <CR> super ( e 2 , p 8 , b 6 , E 7 , p 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String c , String O 1 , String r 6 , String d 1 , String Z 4 ) { <CR> super ( c , O 1 , r 6 , d 1 , Z 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop extends Letter { <CR> String senderAddr ; <CR> String receiverAddr ; <CR> Letter letter ; <CR> String getletter ( ) { <CR> return letter ; <CR> } <CR> { <CR> return receiverAddr ; <CR> } <CR> String getsenderAddr ( ) { <CR> return senderAddr ; <CR> } <CR> String getreceiverAddr ( ) ; <CR> Envelop ( String g 5 , String r 8 , Letter A 0 ) { <CR> this . senderAddr = g 5 ; <CR> this . receiverAddr = r 8 ; <CR> this . letter = A 0 ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> protected String sender ; <CR> Letter ( String y 2 , String f 7 , String V 9 , String D 1 , String q 8 ) { <CR> this . title = y 2 ; <CR> this . receiver = f 7 ; <CR> this . content = V 9 ; <CR> this . sender = D 1 ; <CR> this . date = q 8 ; <CR> } <CR> protected String receiver ; <CR> protected String title ; <CR> protected String content ; <CR> public void display 2 ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . print ( date ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String date ; <CR> } <CR> <EOC> <BOC> public class non extends Letter { <CR> non ( String i 8 , String a 6 , String k , String o , String p 3 ) { <CR> super ( i 8 , a 6 , k , o , p 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] K 0 ) { <CR> Scanner v 3 = new Scanner ( System . in ) ; <CR> boolean d = <STRING> ; <CR> while ( d ) { <CR> System . out . print ( <STRING> ) ; <CR> String G 6 = v 3 . nextLine ( ) ; <CR> if ( G 6 . equals ( <STRING> ) ) { <CR> d = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String S 7 = v 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 4 = v 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p = v 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g 6 = v 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 9 = v 3 . nextLine ( ) ; <CR> Letter P 4 ; <CR> if ( G 6 . equals ( <STRING> ) ) { <CR> P 4 = new ChineseLetter ( S 7 , c 4 , p , g 6 , C 9 ) ; <CR> Envelop e 1 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> P 4 . display ( ) ; <CR> } <CR> else if ( G 6 . equals ( <STRING> ) ) { <CR> P 4 = new EnglishLetter ( S 7 , c 4 , p , g 6 , C 9 ) ; <CR> Envelop e 1 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> P 4 . display 2 ( ) ; <CR> } <CR> else { <CR> P 4 = new non ( S 7 , c 4 , p , g 6 , C 9 ) ; <CR> Envelop e 1 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>