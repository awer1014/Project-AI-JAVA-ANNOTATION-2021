<BOC> abstract public class Evaluation { <CR> protected String pid , name , type ; <CR> protected Keeper keeper ; <CR> private static int count ; <CR> public Evaluation ( String z 3 , String h 7 , String V 9 , Keeper L 3 ) { <CR> pid = z 3 ; <CR> name = h 7 ; <CR> type = V 9 ; <CR> count ++ ; <CR> keeper = L 3 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String g 4 , String y , String I 6 , Keeper X 0 ) { <CR> super ( g 4 , y , I 6 , X 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String i 6 , String k 7 , String p 2 , Keeper r 6 ) { <CR> super ( i 6 , k 7 , p 2 , r 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public Keeper ( String K 9 , String v 5 , String W 6 ) { <CR> id = v 5 ; <CR> tel = W 6 ; <CR> name = K 9 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String i 5 , String q 2 , String w , Keeper Z 2 ) { <CR> super ( i 5 , q 2 , w , Z 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] w 0 ) { <CR> Scanner L 3 = new Scanner ( System . in ) ; <CR> boolean Z 1 = <STRING> ; <CR> while ( Z 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String F 5 = L 3 . nextLine ( ) ; <CR> if ( F 5 . equals ( <STRING> ) ) { <CR> Z 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String D 6 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 7 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String B 0 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String E 9 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 6 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String q 1 = L 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper O 1 = new Keeper ( B 0 , E 9 , k 6 ) ; <CR> Evaluation c 8 ; <CR> if ( F 5 . equals ( <STRING> ) ) <CR> c 8 = new Exam ( D 6 , J 7 , F 5 , O 1 ) ; <CR> else if ( F 5 . equals ( <STRING> ) ) <CR> c 8 = new HomeWork ( D 6 , J 7 , F 5 , O 1 ) ; <CR> else <CR> c 8 = new Report ( D 6 , J 7 , F 5 , O 1 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>