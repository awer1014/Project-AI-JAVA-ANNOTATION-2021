<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] O 1 ) { <CR> Scanner i 5 = new Scanner ( System . in ) ; <CR> String D 1 , s 4 , o , J , G 1 , G 6 , W 4 ; <CR> System . out . print ( <STRING> ) ; <CR> D 1 = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 4 = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 1 = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 6 = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 4 = i 5 . nextLine ( ) ; <CR> if ( D 1 . equals ( <STRING> ) ) { <CR> Kindsoftest M = new Test ( o , s 4 , J , G 6 , G 1 , W 4 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( D 1 . equals ( <STRING> ) ) { <CR> Kindsoftest M = new Hwork ( o , s 4 , J , G 6 , G 1 , W 4 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest M = new Mind ( o , s 4 , J , G 6 , G 1 , W 4 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String F 9 , int O 6 , int u 7 , int S 2 , double p 7 , String Z 8 ) { <CR> super ( F 9 , O 6 , u 7 , S 2 , p 7 , Z 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> protected double gp ; <CR> public Kindsoftest ( String Y 2 , int U 3 , int t , int M 1 , double s 9 , String d 4 ) { <CR> this . id = U 3 ; <CR> this . name = Y 2 ; <CR> this . gread = t ; <CR> this . gp = s 9 ; <CR> this . date = M 1 ; <CR> this . range = d 4 ; <CR> } <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String K , int G 4 , int F 6 , int L 7 , double j 1 , String l ) { <CR> super ( K , G 4 , F 6 , L 7 , j 1 , l ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String t 0 , int o 4 , int G 9 , int a 6 , double A 2 , String V 6 ) { <CR> super ( t 0 , o 4 , G 9 , a 6 , A 2 , V 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>