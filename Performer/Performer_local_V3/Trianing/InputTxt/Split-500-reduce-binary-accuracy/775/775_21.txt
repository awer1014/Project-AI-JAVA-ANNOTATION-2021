<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] p 4 ) { <CR> Scanner C 8 = new Scanner ( System . in ) ; <CR> String w 0 , F 5 , S 4 , A 7 , K 6 , q 2 , X 7 ; <CR> System . out . print ( <STRING> ) ; <CR> w 0 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 5 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> S 4 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 7 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 6 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 2 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = C 8 . nextLine ( ) ; <CR> if ( w 0 . equals ( <STRING> ) ) { <CR> Kindsoftest V 3 = new Test ( S 4 , F 5 , A 7 , q 2 , K 6 , X 7 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( w 0 . equals ( <STRING> ) ) { <CR> Kindsoftest V 3 = new Hwork ( S 4 , F 5 , A 7 , q 2 , K 6 , X 7 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest V 3 = new Mind ( S 4 , F 5 , A 7 , q 2 , K 6 , X 7 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String T 1 , int K , int i 8 , int c 1 , double m 5 , String W 9 ) { <CR> super ( T 1 , K , i 8 , c 1 , m 5 , W 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> public Kindsoftest ( String m 1 , int R 9 , int e 6 , int z 0 , double m 7 , String y 2 ) { <CR> this . id = R 9 ; <CR> this . name = m 1 ; <CR> this . gread = e 6 ; <CR> this . gp = m 7 ; <CR> this . date = z 0 ; <CR> this . range = y 2 ; <CR> } <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String K 1 , int f 3 , int S 5 , int P , double J 5 , String T 8 ) { <CR> super ( K 1 , f 3 , S 5 , P , J 5 , T 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String k 8 , int Y 7 , int K 6 , int S 0 , double K 8 , String S 9 ) { <CR> super ( k 8 , Y 7 , K 6 , S 0 , K 8 , S 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>