<BOC> public class ChineseLetter extends Evaluation { <CR> public void Display ( ) { <CR> System . out . println ( getReceiver ( ) + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( getSender ( ) + <STRING> ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> public ChineseLetter ( String i 6 , String b 0 , String z 6 , String L , String U 3 ) { <CR> super ( i 6 , b 0 , z 6 , L , U 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Evaluation { <CR> public EnglishLetter ( String m 0 , String U 2 , String N 2 , String o 0 , String Y 5 ) { <CR> super ( m 0 , U 2 , N 2 , o 0 , Y 5 ) ; <CR> } <CR> public void Display ( ) { <CR> System . out . println ( <STRING> + title + <STRING> + getReceiver ( ) + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( getSender ( ) ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> Evaluation letter ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr ) ; <CR> System . out . println ( <STRING> + receiverAddr ) ; <CR> letter . Display ( ) ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> public static void main ( String [ ] t 6 ) { <CR> Evaluation y 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop M 1 = new Envelop ( <STRING> , <STRING> , y 8 ) ; <CR> M 1 . display ( ) ; <CR> } <CR> public Envelop ( String E 2 , String s 9 , Evaluation G 0 ) { <CR> this . senderAddr = E 2 ; <CR> this . receiverAddr = s 9 ; <CR> this . letter = G 0 ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> public String getSender ( ) { <CR> return sender ; <CR> } <CR> public Evaluation ( String s 2 , String i 0 , String c , String Z 2 , String K 5 ) { <CR> this . title = s 2 ; <CR> this . receiver = i 0 ; <CR> this . content = c ; <CR> this . sender = Z 2 ; <CR> this . date = K 5 ; <CR> } <CR> protected String title , receiver , content , sender , date ; <CR> abstract protected void Display ( ) ; <CR> public String getDate ( ) { <CR> return date ; <CR> } <CR> public String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> public class Letter implements Comparable { <CR> private int x ; <CR> public static Evaluation [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> public void display ( int J 3 ) { <CR> list [ J 3 ] . Display ( ) ; <CR> } <CR> public static void main ( String [ ] J 9 ) { <CR> int J 3 ; <CR> for ( J 3 = list . length - <STRING> ; J 3 > = <STRING> ; J 3 -- ) { <CR> int w = J 3 ; <CR> Letter F 9 = new Letter ( J 3 ) ; <CR> Letter s 1 = new Letter ( w - <STRING> ) ; <CR> if ( F 9 . compareTo ( s 1 ) == <STRING> ) <CR> F 9 . display ( J 3 ) ; <CR> } <CR> } <CR> public int compareTo ( Object P 3 ) { <CR> Letter X 5 = ( Letter ) P 3 ; <CR> if ( this . x > X 5 . x ) <CR> return <STRING> ; <CR> else <CR> return - <STRING> ; <CR> } <CR> Letter ( int M ) { <CR> this . x = M ; <CR> } <CR> } <CR> <EOC>