<BOC> public class Keeper { <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> Keeper ( String x 1 , String d ) { <CR> this . id = x 1 ; <CR> this . tel = d ; <CR> } <CR> String id ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> static int count ; <CR> void speak ( ) { <CR> if ( type . equals ( <STRING> ) ) <CR> System . out . println ( <STRING> + <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> + <STRING> ) ; <CR> } <CR> public static void main ( String [ ] t 5 ) { <CR> String Y 7 = t 5 [ <STRING> ] ; <CR> String h 2 = t 5 [ <STRING> ] ; <CR> String S 0 = t 5 [ <STRING> ] ; <CR> String l 9 = t 5 [ <STRING> ] ; <CR> String d 2 = t 5 [ <STRING> ] ; <CR> String M 3 = t 5 [ <STRING> ] ; <CR> Keeper L 8 = new Keeper ( <STRING> , <STRING> ) ; <CR> Pet n 6 = new Pet ( Y 7 , h 2 , S 0 , L 8 ) ; <CR> System . out . println ( <STRING> + S 0 ) ; <CR> System . out . println ( <STRING> + Y 7 ) ; <CR> System . out . println ( <STRING> + h 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + M 3 ) ; <CR> System . out . println ( <STRING> + l 9 ) ; <CR> System . out . println ( <STRING> + d 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 6 . display ( ) ; <CR> L 8 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Keeper q 5 = new Keeper ( <STRING> , <STRING> ) ; <CR> Pet j 1 = new Pet ( l 9 , d 2 , M 3 , q 5 ) ; <CR> j 1 . display ( ) ; <CR> q 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> String type ; <CR> String pid ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String name ; <CR> Keeper keeper ; <CR> Pet ( String Y 7 , String h 2 , String S 0 , Keeper T ) { <CR> this . pid = Y 7 ; <CR> this . name = h 2 ; <CR> this . type = S 0 ; <CR> this . keeper = T ; <CR> count ++ ; <CR> } <CR> } <CR> <EOC>