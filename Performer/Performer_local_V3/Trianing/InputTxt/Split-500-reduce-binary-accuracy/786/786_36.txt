<BOC> public class Exam extends Test { <CR> public Exam ( String H 3 , String I 2 , double E 9 , double o 3 ) { <CR> super ( H 3 , I 2 , E 9 , o 3 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String l 3 , String Q 4 , double d 6 , double L 0 ) { <CR> super ( l 3 , Q 4 , d 6 , L 0 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] e 0 ) { <CR> Scanner E 2 = new Scanner ( System . in ) ; <CR> boolean Y 9 = <STRING> ; <CR> while ( Y 9 ) { <CR> System . out . println ( <STRING> ) ; <CR> String R 7 = E 2 . nextLine ( ) ; <CR> if ( R 7 . equals ( <STRING> ) ) { <CR> Y 9 = <STRING> ; <CR> break ; <CR> } <CR> if ( R 7 . equals ( <STRING> ) || R 7 . equals ( <STRING> ) || R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String N 9 = E 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String B 7 = E 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double J 4 = Double . parseDouble ( E 2 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double b 7 = Double . parseDouble ( E 2 . nextLine ( ) ) ; <CR> String D 3 = <STRING> ; <CR> String s 7 = <STRING> ; <CR> String Q 3 = <STRING> ; <CR> String H 3 = <STRING> ; <CR> String m 6 = <STRING> ; <CR> String P 2 = <STRING> ; <CR> if ( R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q 3 = E 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 3 = E 2 . nextLine ( ) ; <CR> } <CR> if ( R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 3 = E 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 7 = E 2 . nextLine ( ) ; <CR> } <CR> if ( R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> m 6 = E 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 2 = E 2 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test a 4 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( R 7 . equals ( <STRING> ) ) <CR> a 4 = new Exam ( N 9 , B 7 , J 4 , b 7 ) ; <CR> else if ( R 7 . equals ( <STRING> ) ) <CR> a 4 = new HomeWork ( N 9 , B 7 , J 4 , b 7 ) ; <CR> else if ( R 7 . equals ( <STRING> ) ) <CR> a 4 = new Report ( N 9 , B 7 , J 4 , b 7 ) ; <CR> if ( a 4 ! = <STRING> ) { <CR> a 4 . print ( ) ; <CR> if ( R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + Q 3 ) ; <CR> System . out . println ( <STRING> + H 3 ) ; <CR> } <CR> else if ( R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + D 3 ) ; <CR> System . out . println ( <STRING> + s 7 ) ; <CR> } <CR> else if ( R 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + m 6 ) ; <CR> System . out . println ( <STRING> + P 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> a 4 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String V 4 , String Q 0 , double N 6 , double C 8 ) { <CR> super ( V 4 , Q 0 , N 6 , C 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> private String number ; <CR> public Test ( String E 3 , String s 6 , double b 9 , double s 7 ) { <CR> number = E 3 ; <CR> name = s 6 ; <CR> score = b 9 ; <CR> propotation = s 7 ; <CR> } <CR> String info_description ; <CR> private double propotation ; <CR> private String name ; <CR> String info ; <CR> private double score ; <CR> abstract public void print ( ) ; <CR> private String time , range , end_time , description ; <CR> } <CR> <EOC>