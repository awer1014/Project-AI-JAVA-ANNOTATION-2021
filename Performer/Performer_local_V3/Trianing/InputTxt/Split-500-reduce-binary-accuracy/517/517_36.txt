<BOC> import java . util . * ; <CR> abstract public class Evaluation { <CR> protected int type ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> Scanner n = new Scanner ( System . in ) ; <CR> public Evaluation ( String V , String I 2 , double V 1 , double t 6 ) { <CR> System . out . println ( <STRING> ) ; <CR> type = n . nextInt ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 2 = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 1 = n . nextDouble ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 6 = n . nextDouble ( ) ; <CR> if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> } <CR> protected String a ; <CR> public static void main ( String [ ] l 6 ) { <CR> } <CR> protected String b ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String z 8 , String C 4 , double m 8 , double x 4 ) { <CR> super ( z 8 , C 4 , m 8 , x 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String S 6 , String q 5 , double p 3 , double E 7 ) { <CR> super ( S 6 , q 5 , p 3 , E 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String x 8 , String U 8 , double G 8 , double l 0 ) { <CR> super ( x 8 , U 8 , G 8 , l 0 ) ; <CR> } <CR> } <CR> <EOC>