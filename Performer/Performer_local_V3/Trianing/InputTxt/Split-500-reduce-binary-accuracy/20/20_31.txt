<BOC> import java . util . Arrays ; <CR> public class Card implements Comparable { <CR> Card ( Letter E 3 ) { <CR> this . letter = E 3 ; <CR> } <CR> public static String listsAsString ( short w 8 ) { <CR> return list [ w 8 ] ; <CR> } <CR> private short lists ; <CR> Letter letter ; <CR> public int compareTo ( Object d 2 ) { <CR> Card A = ( Card ) d 2 ; <CR> int r 6 = Integer . parseInt ( this . getDate ) ; <CR> int q 2 = Integer . parseInt ( A . getDate ) ; <CR> int i = r 6 - q 2 ; <CR> } <CR> static Letter [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> public String getDate ( ) { <CR> return letter . date ; <CR> } <CR> } <CR> <EOC> <BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String m , String b 5 , String P 5 , String p , String y 2 ) { <CR> super ( m , b 5 , P 5 , p , y 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String l 9 , String M 3 , String L 0 , String S 6 , String F 7 ) { <CR> super ( l 9 , M 3 , L 0 , S 6 , F 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr + <STRING> + letter . sender ) ; <CR> System . out . println ( <STRING> + receiverAddr + <STRING> + letter . receiver + <STRING> + letter . title ) ; <CR> } <CR> Letter letter ; <CR> Envelop ( String l 4 , String s 3 , Letter e 3 ) { <CR> this . senderAddr = l 4 ; <CR> this . receiverAddr = s 3 ; <CR> this . letter = e 3 ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> void display ( int n 3 ) { <CR> if ( n 3 == <STRING> ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String S 4 , String p 1 , String i 3 , String k 2 , String m ) { <CR> this . title = S 4 ; <CR> this . receiver = p 1 ; <CR> this . content = i 3 ; <CR> this . sender = k 2 ; <CR> this . date = m ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test { <CR> public static void main ( String [ ] i 6 ) { <CR> Letter y 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop y = new Envelop ( <STRING> , <STRING> , y 9 ) ; <CR> y . display ( ) ; <CR> y 9 . display ( <STRING> ) ; <CR> } <CR> } <CR> <EOC>