<BOC> import java . util . Arrays ; <CR> public class Card implements Comparable { <CR> public String getDate ( ) { <CR> return letter . date ; <CR> } <CR> Letter letter ; <CR> static Letter [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> private short lists ; <CR> public int compareTo ( Object B 2 ) { <CR> Card a 5 = ( Card ) B 2 ; <CR> int B 6 = Integer . parseInt ( this . getDate ) ; <CR> int d 1 = Integer . parseInt ( a 5 . getDate ) ; <CR> int d 0 = B 6 - d 1 ; <CR> } <CR> Card ( Letter A 0 ) { <CR> this . letter = A 0 ; <CR> } <CR> public static String listsAsString ( short X ) { <CR> return list [ X ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String B 0 , String p 1 , String F 3 , String I 9 , String X 8 ) { <CR> super ( B 0 , p 1 , F 3 , I 9 , X 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String O 3 , String t 1 , String C 4 , String a 3 , String K 5 ) { <CR> super ( O 3 , t 1 , C 4 , a 3 , K 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr + <STRING> + letter . sender ) ; <CR> System . out . println ( <STRING> + receiverAddr + <STRING> + letter . receiver + <STRING> + letter . title ) ; <CR> } <CR> Envelop ( String S 6 , String B 7 , Letter E 0 ) { <CR> this . senderAddr = S 6 ; <CR> this . receiverAddr = B 7 ; <CR> this . letter = E 0 ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> void display ( int E 1 ) { <CR> if ( E 1 == <STRING> ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> Letter ( String K 2 , String V 4 , String U 4 , String j , String O 9 ) { <CR> this . title = K 2 ; <CR> this . receiver = V 4 ; <CR> this . content = U 4 ; <CR> this . sender = j ; <CR> this . date = O 9 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test { <CR> public static void main ( String [ ] S 0 ) { <CR> Letter J 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop w 2 = new Envelop ( <STRING> , <STRING> , J 8 ) ; <CR> w 2 . display ( ) ; <CR> J 8 . display ( <STRING> ) ; <CR> } <CR> } <CR> <EOC>