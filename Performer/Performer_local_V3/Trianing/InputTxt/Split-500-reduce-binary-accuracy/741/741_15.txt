<BOC> import java . util . Scanner ; <CR> import java . util . Random ; <CR> public class input { <CR> static int count = <STRING> ; <CR> public static void main ( String [ ] u ) { <CR> System . out . print ( <STRING> ) ; <CR> String T 6 = keyboard . nextLine ( ) ; <CR> while ( T 6 ! = <STRING> ) { <CR> System . out . print ( <STRING> ) ; <CR> String s 5 = keyboard . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 2 = keyboard . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String I 8 = keyboard . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 3 = keyboard . nextLine ( ) ; <CR> } <CR> if ( T 6 == <STRING> ) { <CR> } <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> public String getTel ( ) { <CR> return tel ; <CR> } <CR> public Keeper ( String V 3 , String D ) { <CR> this . id = V 3 ; <CR> this . tel = D ; <CR> } <CR> static String tel ; <CR> static String id ; <CR> public String getId ( ) { <CR> return id ; <CR> } <CR> public void display ( String V 3 , String D ) { <CR> System . out . println ( <STRING> + V 3 ) ; <CR> System . out . println ( <STRING> + D ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public void speek ( String F 7 ) { <CR> if ( F 7 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> if ( F 7 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> private String name ; <CR> public Pet ( String P 4 , String Y 0 , String F 7 ) { <CR> this . pid = P 4 ; <CR> this . name = Y 0 ; <CR> this . type = F 7 ; <CR> } <CR> private String pid ; <CR> public String getName ( ) { <CR> return name ; <CR> } <CR> public String getPid ( ) { <CR> return pid ; <CR> } <CR> private String type ; <CR> public String getType ( ) { <CR> return type ; <CR> } <CR> } <CR> <EOC>