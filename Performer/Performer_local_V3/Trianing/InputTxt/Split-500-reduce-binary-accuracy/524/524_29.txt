<BOC> public class Exam extends type { <CR> public Exam ( String J 8 , String k 7 ) { <CR> J 8 = this . grade ; <CR> k 7 = this . range ; <CR> } <CR> String grade , range ; <CR> public String getExam ( ) { <CR> return grade ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends type { <CR> public String getHomework ( ) { <CR> return data ; <CR> } <CR> public Homework ( String O 8 , String z 1 ) { <CR> } <CR> String data ; <CR> String discribe ; <CR> } <CR> <EOC> <BOC> public class Student extends type { <CR> public String Sudent ( String G 7 , String G 2 ) { <CR> G 7 = this . name ; <CR> G 2 = this . id ; <CR> } <CR> String name ; <CR> String id ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] W 8 ) { <CR> String X 4 , A , I , d 5 , C 1 , x 3 , H , X 7 ; <CR> Scanner O 0 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> A = O 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I = O 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 5 = O 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 1 = O 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 3 = O 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> H = O 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = O 0 . nextLine ( ) ; <CR> int Y 8 = <STRING> ; <CR> while ( <STRING> ) { <CR> X 4 = O 0 . nextLine ( ) ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + A ) ; <CR> System . out . println ( <STRING> + I ) ; <CR> System . out . println ( <STRING> + d 5 ) ; <CR> System . out . println ( <STRING> + C 1 ) ; <CR> System . out . println ( <STRING> + x 3 ) ; <CR> System . out . println ( <STRING> + H ) ; <CR> System . out . println ( <STRING> + X 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class type { <CR> public type ( ) { <CR> } <CR> } <CR> <EOC>