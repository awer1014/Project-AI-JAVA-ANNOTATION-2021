<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String v 7 , String g 2 , String b 7 ) { <CR> id = g 2 ; <CR> tel = b 7 ; <CR> name = v 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private Keeper keeper ; <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> public Pet ( String H 8 , String L 2 , String H 2 , Keeper i ) { <CR> pid = H 8 ; <CR> name = L 2 ; <CR> type = H 2 ; <CR> count ++ ; <CR> keeper = i ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] s 5 ) { <CR> Scanner x 9 = new Scanner ( System . in ) ; <CR> boolean p 3 = <STRING> ; <CR> while ( p 3 ) { <CR> System . out . print ( <STRING> ) ; <CR> String D 8 = x 9 . nextLine ( ) ; <CR> if ( D 8 . equals ( <STRING> ) ) { <CR> p 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String Z 6 = x 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 6 = x 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 7 = x 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String b = x 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String L 2 = x 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper m 2 = new Keeper ( J 7 , b , L 2 ) ; <CR> Pet K 1 = new Pet ( Z 6 , D 6 , D 8 , m 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 1 . display ( ) ; <CR> m 2 . display ( ) ; <CR> K 1 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>