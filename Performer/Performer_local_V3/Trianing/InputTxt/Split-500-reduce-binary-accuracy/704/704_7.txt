<BOC> public class Keeper { <CR> public static void main ( ) { <CR> } <CR> public String tel ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String l 9 , String P 5 ) { <CR> this . id = l 9 ; <CR> this . tel = P 5 ; <CR> } <CR> public String id ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Pet { <CR> Keeper keeper ; <CR> public static int count ; <CR> public String type ; <CR> public String pid ; <CR> public String name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> public void speak ( ) { <CR> System . out . println ( <STRING> ) ; <CR> if ( type . equals ( <STRING> ) ) <CR> System . out . println ( <STRING> ) ; <CR> else if ( type . equals ( <STRING> ) ) <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public static void main ( ) { <CR> String D 3 , U 5 , j 7 , f 0 , m 3 ; <CR> Scanner D 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 3 = D 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 5 = D 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> j 7 = D 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 0 = D 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 3 = D 4 . nextLine ( ) ; <CR> Keeper X 8 = new Keeper ( f 0 , m 3 ) ; <CR> Pet e = new Pet ( U 5 , j 7 , D 3 , X 8 ) ; <CR> e . display ( ) ; <CR> X 8 . display ( ) ; <CR> e . speak ( ) ; <CR> } <CR> public Pet ( String p 8 , String R 7 , String G 1 , Keeper x 8 ) { <CR> this . pid = p 8 ; <CR> this . name = R 7 ; <CR> this . type = G 1 ; <CR> this . keeper = x 8 ; <CR> count ++ ; <CR> } <CR> } <CR> <EOC>