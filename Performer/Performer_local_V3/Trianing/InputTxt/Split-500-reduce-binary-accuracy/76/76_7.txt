<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private String id , date , coin ; <CR> private int num_i ; <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> ChineseLetter ( String Y 8 , String t 1 , String Z 1 , Item [ ] W 8 , int Y 6 ) { <CR> id = Y 8 ; <CR> date = t 1 ; <CR> num_i = Y 6 ; <CR> for ( int R 3 = <STRING> ; R 3 < Y 6 ; R 3 ++ ) <CR> it [ R 3 ] = W 8 [ R 3 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> private double money , discnt ; <CR> private int cnt ; <CR> Item ( String r 5 , String L 1 , double X 7 , int v 0 , double n 7 ) { <CR> id = r 5 ; <CR> name = L 1 ; <CR> money = X 7 ; <CR> cnt = v 0 ; <CR> discnt = n 7 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private String id , name ; <CR> private static double total_money = <STRING> ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] n 8 ) { <CR> Scanner Z 2 = new Scanner ( System . in ) ; <CR> String U 4 , Z 3 , A 0 ; <CR> System . out . print ( <STRING> ) ; <CR> U 4 = Z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Z 3 = Z 2 . nextLine ( ) ; <CR> A 0 = Z 2 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String G 3 , b 7 , F 6 , R 1 , x 7 ; <CR> System . out . print ( <STRING> ) ; <CR> G 3 = Z 2 . nextLine ( ) ; <CR> if ( G 3 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> b 7 = Z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 6 = Z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>