<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private String id , date , coin ; <CR> private int num_i ; <CR> ChineseLetter ( String v 2 , String Y 8 , String l , Item [ ] G 7 , int Q 7 ) { <CR> id = v 2 ; <CR> date = Y 8 ; <CR> num_i = Q 7 ; <CR> for ( int E 3 = <STRING> ; E 3 < Q 7 ; E 3 ++ ) <CR> it [ E 3 ] = G 7 [ E 3 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> private int cnt ; <CR> Item ( ) { <CR> } <CR> Item ( String q 1 , String W 2 , double i 6 , int c 0 , double i 2 ) { <CR> id = q 1 ; <CR> name = W 2 ; <CR> money = i 6 ; <CR> cnt = c 0 ; <CR> discnt = i 2 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private static double total_money = <STRING> ; <CR> private String id , name ; <CR> private double money , discnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] R 8 ) { <CR> Scanner B 0 = new Scanner ( System . in ) ; <CR> String B 6 , F 8 , b 4 ; <CR> System . out . print ( <STRING> ) ; <CR> B 6 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 8 = B 0 . nextLine ( ) ; <CR> b 4 = B 0 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String P 0 , u 6 , l 8 , r 8 , H 7 ; <CR> System . out . print ( <STRING> ) ; <CR> P 0 = B 0 . nextLine ( ) ; <CR> if ( P 0 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> u 6 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 8 = B 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>