<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private int num_i ; <CR> ChineseLetter ( String W 2 , String r 4 , String I 0 , Item [ ] n 2 , int R 2 ) { <CR> id = W 2 ; <CR> date = r 4 ; <CR> num_i = R 2 ; <CR> for ( int u 7 = <STRING> ; u 7 < R 2 ; u 7 ++ ) <CR> it [ u 7 ] = n 2 [ u 7 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> private double money , discnt ; <CR> private int cnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( String n 9 , String X 2 , double B 6 , int B 3 , double z 1 ) { <CR> id = n 9 ; <CR> name = X 2 ; <CR> money = B 6 ; <CR> cnt = B 3 ; <CR> discnt = z 1 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private String id , name ; <CR> private static double total_money = <STRING> ; <CR> Item ( ) { <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] E 8 ) { <CR> Scanner m 3 = new Scanner ( System . in ) ; <CR> String M 7 , R 1 , x 0 ; <CR> System . out . print ( <STRING> ) ; <CR> M 7 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R 1 = m 3 . nextLine ( ) ; <CR> x 0 = m 3 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String o 7 , A 9 , k 6 , C 0 , w 6 ; <CR> System . out . print ( <STRING> ) ; <CR> o 7 = m 3 . nextLine ( ) ; <CR> if ( o 7 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> A 9 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 6 = m 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>