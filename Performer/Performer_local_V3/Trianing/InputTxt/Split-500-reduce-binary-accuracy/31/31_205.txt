<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String F , String S 1 , String M 4 , String U 9 , String p ) { <CR> super ( F , S 1 , M 4 , U 9 , p ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String i 4 , String W 5 , String c , String A 4 , String z 8 ) { <CR> super ( i 4 , W 5 , c , A 4 , z 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String H 2 , String B 0 , String O 4 , String n 9 , String W 0 ) { <CR> this . title = H 2 ; <CR> this . receiver = B 0 ; <CR> this . content = O 4 ; <CR> this . sender = n 9 ; <CR> this . date = W 0 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object F 5 ) { <CR> Letter p 4 = ( Letter ) F 5 ; <CR> if ( this . getDate ( ) . compareTo ( p 4 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( p 4 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] w 0 ) { <CR> Letter s 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter E 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList N 0 = { s 4 , k , E 4 } ; <CR> for ( Letter M : N 0 ) <CR> M . display ( ) ; <CR> } <CR> } <CR> <EOC>