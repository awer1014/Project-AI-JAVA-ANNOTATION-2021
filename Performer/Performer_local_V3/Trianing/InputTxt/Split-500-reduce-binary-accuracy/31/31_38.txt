<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String b 6 , String G 0 , String G 9 , String S 4 , String U 3 ) { <CR> super ( b 6 , G 0 , G 9 , S 4 , U 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String n 7 , String O 5 , String I 8 , String k , String c 5 ) { <CR> super ( n 7 , O 5 , I 8 , k , c 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object H ) { <CR> Letter h 0 = ( Letter ) H ; <CR> if ( this . getDate ( ) . compareTo ( h 0 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( h 0 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String g 7 , String U 6 , String p 8 , String c 8 , String O 8 ) { <CR> this . title = g 7 ; <CR> this . receiver = U 6 ; <CR> this . content = p 8 ; <CR> this . sender = c 8 ; <CR> this . date = O 8 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] U 7 ) { <CR> Letter T 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Z = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter V 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList h 8 = { T 4 , Z , V 1 } ; <CR> for ( Letter A 7 : h 8 ) <CR> A 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>