<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String w 7 , String D 2 , String m 2 , String b 9 , String p 6 ) { <CR> super ( w 7 , D 2 , m 2 , b 9 , p 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String H 3 , String a 8 , String x 8 , String r , String R 8 ) { <CR> super ( H 3 , a 8 , x 8 , r , R 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String u 5 , String Y 0 , String Q 9 , String E 2 , String x ) { <CR> this . title = u 5 ; <CR> this . receiver = Y 0 ; <CR> this . content = Q 9 ; <CR> this . sender = E 2 ; <CR> this . date = x ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object C 6 ) { <CR> Letter o 6 = ( Letter ) C 6 ; <CR> if ( this . getDate ( ) . compareTo ( o 6 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( o 6 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] O 2 ) { <CR> Letter i 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter b 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter A 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList s 1 = { i 1 , b 4 , A 6 } ; <CR> for ( Letter Y 9 : s 1 ) <CR> Y 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>