<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String A 7 , String Z 8 , String e 7 , String S 7 , String h 3 ) { <CR> super ( A 7 , Z 8 , e 7 , S 7 , h 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String V 9 , String X 4 , String Y 0 , String r 9 , String H 7 ) { <CR> super ( V 9 , X 4 , Y 0 , r 9 , H 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object G ) { <CR> Letter q 4 = ( Letter ) G ; <CR> if ( this . getDate ( ) . compareTo ( q 4 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( q 4 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String W 1 , String e 9 , String E 7 , String L 3 , String Z 3 ) { <CR> this . title = W 1 ; <CR> this . receiver = e 9 ; <CR> this . content = E 7 ; <CR> this . sender = L 3 ; <CR> this . date = Z 3 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] v 6 ) { <CR> Letter e 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter v 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList C 4 = { e 1 , v 2 , G 0 } ; <CR> for ( Letter O 0 : C 4 ) <CR> O 0 . display ( ) ; <CR> } <CR> } <CR> <EOC>