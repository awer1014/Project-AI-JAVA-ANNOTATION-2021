<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String X 9 , String J 5 , String N 4 , String F 8 , String X 0 ) { <CR> super ( X 9 , J 5 , N 4 , F 8 , X 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String F 2 , String d , String r , String c 7 , String w ) { <CR> super ( F 2 , d , r , c 7 , w ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object y 3 ) { <CR> Letter K = ( Letter ) y 3 ; <CR> if ( this . getDate ( ) . compareTo ( K . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( K . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> Letter ( String p 4 , String q 5 , String V 5 , String K 5 , String I 1 ) { <CR> this . title = p 4 ; <CR> this . receiver = q 5 ; <CR> this . content = V 5 ; <CR> this . sender = K 5 ; <CR> this . date = I 1 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] N 9 ) { <CR> Letter t = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter p 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList r 4 = { t , G 8 , p 8 } ; <CR> for ( Letter e 2 : r 4 ) <CR> e 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>