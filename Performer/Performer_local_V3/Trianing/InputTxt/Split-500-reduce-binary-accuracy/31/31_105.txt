<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String E , String r 4 , String G 9 , String J 5 , String T 6 ) { <CR> super ( E , r 4 , G 9 , J 5 , T 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String J 1 , String H 0 , String T 0 , String M 5 , String C 1 ) { <CR> super ( J 1 , H 0 , T 0 , M 5 , C 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String M 8 , String i 3 , String i , String F 0 , String w 6 ) { <CR> this . title = M 8 ; <CR> this . receiver = i 3 ; <CR> this . content = i ; <CR> this . sender = F 0 ; <CR> this . date = w 6 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract void display ( ) ; <CR> public int compareTo ( Object H 8 ) { <CR> Letter t 9 = ( Letter ) H 8 ; <CR> if ( this . getDate ( ) . compareTo ( t 9 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( t 9 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] h 1 ) { <CR> Letter f 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter p 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter H 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList q 5 = { f 3 , p 7 , H 6 } ; <CR> for ( Letter x 2 : q 5 ) <CR> x 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>