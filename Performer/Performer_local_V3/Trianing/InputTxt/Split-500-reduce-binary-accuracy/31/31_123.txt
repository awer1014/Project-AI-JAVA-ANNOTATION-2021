<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String k 4 , String z 9 , String Q 9 , String V 5 , String G 6 ) { <CR> super ( k 4 , z 9 , Q 9 , V 5 , G 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String o 8 , String u 9 , String a , String E 9 , String y 2 ) { <CR> super ( o 8 , u 9 , a , E 9 , y 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String m 7 , String L 6 , String O 3 , String X 1 , String B 2 ) { <CR> this . title = m 7 ; <CR> this . receiver = L 6 ; <CR> this . content = O 3 ; <CR> this . sender = X 1 ; <CR> this . date = B 2 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> public int compareTo ( Object A ) { <CR> Letter h 5 = ( Letter ) A ; <CR> if ( this . getDate ( ) . compareTo ( h 5 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( h 5 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] T ) { <CR> Letter Q 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Q 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList w 2 = { Q 4 , Q 9 , G 5 } ; <CR> for ( Letter m 9 : w 2 ) <CR> m 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>