<BOC> abstract public class Evaluation { <CR> private String sid , name , type ; <CR> abstract public void printa ( ) ; <CR> public Evaluation ( String H 9 , String t 0 , String Q , double a 7 , double V 4 ) { <CR> sid = H 9 ; <CR> name = t 0 ; <CR> type = Q ; <CR> this . grade = a 7 ; <CR> this . gradepc = V 4 ; <CR> } <CR> protected double grade , gradepc ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date ; <CR> public Exam ( String i 1 , String Q 9 , String T 1 , double K 0 , double e 2 ) { <CR> super ( i 1 , Q 9 , T 1 , K 0 , e 2 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String range ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] N ) { <CR> Scanner Y 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int j 9 = <STRING> ; <CR> do <CR> { <CR> j 9 = Y 7 . nextInt ( ) ; <CR> } <CR> while ( j 9 > <STRING> || j 9 < <STRING> ) ; <CR> return mapEvaluation ( j 9 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int j 9 ) { <CR> Evaluation R 0 = <STRING> ; <CR> switch ( j 9 ) { <CR> case <STRING> : <CR> R 0 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>