<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> abstract public void printa ( ) ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> private String sid , name , type ; <CR> public Evaluation ( String h 8 , String P 3 , String w 2 , double A 8 , double P 8 ) { <CR> sid = h 8 ; <CR> name = P 3 ; <CR> type = w 2 ; <CR> this . grade = A 8 ; <CR> this . gradepc = P 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String L 6 , String A 7 , String D 8 , double X 7 , double y 9 ) { <CR> super ( L 6 , A 7 , D 8 , X 7 , y 9 ) ; <CR> } <CR> String range ; <CR> String date ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation mapEvaluation ( int w ) { <CR> Evaluation x 3 = <STRING> ; <CR> switch ( w ) { <CR> case <STRING> : <CR> x 3 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> public static void main ( String [ ] S 8 ) { <CR> Scanner r 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int w = <STRING> ; <CR> do <CR> { <CR> w = r 4 . nextInt ( ) ; <CR> } <CR> while ( w > <STRING> || w < <STRING> ) ; <CR> return mapEvaluation ( w ) ; <CR> } <CR> } <CR> <EOC>