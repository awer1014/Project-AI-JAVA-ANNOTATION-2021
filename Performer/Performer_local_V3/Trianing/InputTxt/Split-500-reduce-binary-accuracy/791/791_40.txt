<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> abstract public void printa ( ) ; <CR> private String sid , name , type ; <CR> public Evaluation ( String Z 4 , String A 7 , String n 0 , double u 7 , double b ) { <CR> sid = Z 4 ; <CR> name = A 7 ; <CR> type = n 0 ; <CR> this . grade = u 7 ; <CR> this . gradepc = b ; <CR> } <CR> protected double grade , gradepc ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Exam ( String y 5 , String Y 7 , String z 9 , double F , double P 3 ) { <CR> super ( y 5 , Y 7 , z 9 , F , P 3 ) ; <CR> } <CR> String range ; <CR> String date ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] K 6 ) { <CR> Scanner B 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int C = <STRING> ; <CR> do <CR> { <CR> C = B 1 . nextInt ( ) ; <CR> } <CR> while ( C > <STRING> || C < <STRING> ) ; <CR> return mapEvaluation ( C ) ; <CR> } <CR> static Evaluation mapEvaluation ( int C ) { <CR> Evaluation Z 8 = <STRING> ; <CR> switch ( C ) { <CR> case <STRING> : <CR> Z 8 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>