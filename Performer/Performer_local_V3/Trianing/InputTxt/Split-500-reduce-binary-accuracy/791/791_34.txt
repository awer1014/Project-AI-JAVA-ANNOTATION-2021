<BOC> abstract public class Evaluation { <CR> private String sid , name , type ; <CR> public Evaluation ( String i 7 , String e 4 , String W 4 , double N 3 , double p 3 ) { <CR> sid = i 7 ; <CR> name = e 4 ; <CR> type = W 4 ; <CR> this . grade = N 3 ; <CR> this . gradepc = p 3 ; <CR> } <CR> abstract public void printa ( ) ; <CR> protected double grade , gradepc ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Exam ( String h 2 , String H 0 , String Q 5 , double U 9 , double N 4 ) { <CR> super ( h 2 , H 0 , Q 5 , U 9 , N 4 ) ; <CR> } <CR> String range ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] a ) { <CR> Scanner h = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int b 6 = <STRING> ; <CR> do <CR> { <CR> b 6 = h . nextInt ( ) ; <CR> } <CR> while ( b 6 > <STRING> || b 6 < <STRING> ) ; <CR> return mapEvaluation ( b 6 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int b 6 ) { <CR> Evaluation O 4 = <STRING> ; <CR> switch ( b 6 ) { <CR> case <STRING> : <CR> O 4 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>