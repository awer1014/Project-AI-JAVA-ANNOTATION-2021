<BOC> public class Evaluation { <CR> protected Double p ; <CR> protected Double score ; <CR> Evaluation ( int G 0 , String k 0 , String c 1 , Double t 8 , Double R 0 , String y 3 , String F 3 ) { <CR> flag = G 0 ; <CR> id = k 0 ; <CR> name = c 1 ; <CR> score = t 8 ; <CR> p = R 0 ; <CR> s 1 = y 3 ; <CR> s 2 = F 3 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + flag ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + p ) ; <CR> if ( flag == <STRING> ) { <CR> System . out . println ( <STRING> + s 1 ) ; <CR> System . out . println ( <STRING> + s 2 ) ; <CR> } <CR> else if ( flag == <STRING> ) { <CR> System . out . println ( <STRING> + s 1 ) ; <CR> System . out . println ( <STRING> + s 2 ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> + s 1 ) ; <CR> System . out . println ( <STRING> + s 2 ) ; <CR> } <CR> } <CR> protected String name ; <CR> protected String s 2 ; <CR> int flag ; <CR> protected String s 1 ; <CR> protected String id ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( int V 3 , String R 1 , String n 4 , Double o 1 , Double x 1 , String L 9 , String p 1 ) { <CR> super ( V 3 , R 1 , n 4 , o 1 , x 1 , L 9 , p 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( int g 3 , String E 7 , String w 3 , Double Y 5 , Double D 0 , String e 4 , String t 5 ) { <CR> super ( g 3 , E 7 , w 3 , Y 5 , D 0 , e 4 , t 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( int I 5 , String E 1 , String s 6 , Double Q 8 , Double d 1 , String q 1 , String U 1 ) { <CR> super ( I 5 , E 1 , s 6 , Q 8 , d 1 , q 1 , U 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] A 8 ) { <CR> Scanner q 8 = new Scanner ( System . in ) ; <CR> while ( <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> int d 0 = q 8 . nextInt ( ) ; <CR> if ( d 0 == <STRING> ) <CR> break ; <CR> q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String I 4 = q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String q 2 = q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Double k 2 = q 8 . nextDouble ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Double u 1 = q 8 . nextDouble ( ) ; <CR> q 8 . nextLine ( ) ; <CR> Evaluation V 5 = <STRING> ; <CR> if ( d 0 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> String k 7 = q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String P 6 = q 8 . nextLine ( ) ; <CR> V 5 = new Exam ( d 0 , I 4 , q 2 , k 2 , u 1 , k 7 , P 6 ) ; <CR> V 5 . print ( ) ; <CR> } <CR> else if ( d 0 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> String k 7 = q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String L = q 8 . nextLine ( ) ; <CR> V 5 = new HomeWork ( d 0 , I 4 , q 2 , k 2 , u 1 , k 7 , L ) ; <CR> V 5 . print ( ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> ) ; <CR> String y 9 = q 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String m 3 = q 8 . nextLine ( ) ; <CR> V 5 = new Report ( d 0 , I 4 , q 2 , k 2 , u 1 , y 9 , m 3 ) ; <CR> V 5 . print ( ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>