<BOC> public class Evaluation { <CR> protected Double score ; <CR> Evaluation ( int c 3 , String H 5 , String q 7 , Double m 5 , Double G 9 , String M 7 , String y 0 ) { <CR> flag = c 3 ; <CR> id = H 5 ; <CR> name = q 7 ; <CR> score = m 5 ; <CR> p = G 9 ; <CR> s 1 = M 7 ; <CR> s 2 = y 0 ; <CR> } <CR> int flag ; <CR> protected String id ; <CR> protected String name ; <CR> protected String s 1 ; <CR> protected String s 2 ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + flag ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + p ) ; <CR> if ( flag == <STRING> ) { <CR> System . out . println ( <STRING> + s 1 ) ; <CR> System . out . println ( <STRING> + s 2 ) ; <CR> } <CR> else if ( flag == <STRING> ) { <CR> System . out . println ( <STRING> + s 1 ) ; <CR> System . out . println ( <STRING> + s 2 ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> + s 1 ) ; <CR> System . out . println ( <STRING> + s 2 ) ; <CR> } <CR> } <CR> protected Double p ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( int B 1 , String W 5 , String W 3 , Double Q 7 , Double s 9 , String t 3 , String C 2 ) { <CR> super ( B 1 , W 5 , W 3 , Q 7 , s 9 , t 3 , C 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( int k 8 , String b 4 , String j 7 , Double H 6 , Double R 1 , String m 5 , String j 0 ) { <CR> super ( k 8 , b 4 , j 7 , H 6 , R 1 , m 5 , j 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( int C 1 , String N 5 , String b 7 , Double J 1 , Double t 1 , String L 2 , String l 5 ) { <CR> super ( C 1 , N 5 , b 7 , J 1 , t 1 , L 2 , l 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] B 5 ) { <CR> Scanner f 3 = new Scanner ( System . in ) ; <CR> while ( <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> int G 6 = f 3 . nextInt ( ) ; <CR> if ( G 6 == <STRING> ) <CR> break ; <CR> f 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String k 8 = f 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String M 4 = f 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Double w 2 = f 3 . nextDouble ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Double j 4 = f 3 . nextDouble ( ) ; <CR> f 3 . nextLine ( ) ; <CR> Evaluation d 8 = <STRING> ; <CR> if ( G 6 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> String c 8 = f 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String p 2 = f 3 . nextLine ( ) ; <CR> d 8 = new Exam ( G 6 , k 8 , M 4 , w 2 , j 4 , c 8 , p 2 ) ; <CR> d 8 . print ( ) ; <CR> } <CR> else if ( G 6 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> String c 8 = f 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String s 4 = f 3 . nextLine ( ) ; <CR> d 8 = new HomeWork ( G 6 , k 8 , M 4 , w 2 , j 4 , c 8 , s 4 ) ; <CR> d 8 . print ( ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> ) ; <CR> String d 2 = f 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String X 0 = f 3 . nextLine ( ) ; <CR> d 8 = new Report ( G 6 , k 8 , M 4 , w 2 , j 4 , d 2 , X 0 ) ; <CR> d 8 . print ( ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>