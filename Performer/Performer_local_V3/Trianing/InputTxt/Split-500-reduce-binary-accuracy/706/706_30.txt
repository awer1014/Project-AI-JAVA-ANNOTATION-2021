<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> public static void main ( String [ ] r 7 ) { <CR> String Y 1 ; <CR> String i 0 ; <CR> Scanner I 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 1 = I 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 0 = I 9 . nextLine ( ) ; <CR> Keeper D 8 = new Keeper ( Y 1 , i 0 ) ; <CR> } <CR> String tel ; <CR> void Keeper ( String Y 1 , String i 0 ) { <CR> this . id = Y 1 ; <CR> this . tel = i 0 ; <CR> } <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String pid ; <CR> Keeper keeper ; <CR> String name ; <CR> void Pet ( String A 7 , String W 2 , String X 9 , Keeper Z 1 ) { <CR> count ++ ; <CR> this . pid = A 7 ; <CR> this . name = W 2 ; <CR> this . type = X 9 ; <CR> this . keeper = Z 1 ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] V 1 ) { <CR> String A 7 ; <CR> String W 2 ; <CR> String X 9 ; <CR> String p 5 ; <CR> String L 3 ; <CR> Scanner Q 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 5 = Q 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> L 3 = Q 7 . nextLine ( ) ; <CR> Keeper i 5 = new Keeper ( p 5 , L 3 ) ; <CR> Scanner Q 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 7 = Q 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> X 9 = Q 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> W 2 = Q 7 . nextLine ( ) ; <CR> pet T = new pet ( A 7 , W 2 , X 9 , i 5 ) ; <CR> String Q 9 = T . Speak ( ) ; <CR> System . out . println ( <STRING> + Q 9 ) ; <CR> } <CR> String type ; <CR> static int count ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> } <CR> <EOC>