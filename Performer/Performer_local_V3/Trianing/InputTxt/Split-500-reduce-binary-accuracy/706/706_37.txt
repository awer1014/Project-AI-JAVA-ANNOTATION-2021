<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> void Keeper ( String M 5 , String m 6 ) { <CR> this . id = M 5 ; <CR> this . tel = m 6 ; <CR> } <CR> public static void main ( String [ ] h ) { <CR> String M 5 ; <CR> String m 6 ; <CR> Scanner y 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> M 5 = y 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 6 = y 5 . nextLine ( ) ; <CR> Keeper p 6 = new Keeper ( M 5 , m 6 ) ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> void Pet ( String l 5 , String l 2 , String k 4 , Keeper A 2 ) { <CR> count ++ ; <CR> this . pid = l 5 ; <CR> this . name = l 2 ; <CR> this . type = k 4 ; <CR> this . keeper = A 2 ; <CR> } <CR> String name ; <CR> static int count ; <CR> String type ; <CR> Keeper keeper ; <CR> public static void main ( String [ ] o ) { <CR> String l 5 ; <CR> String l 2 ; <CR> String k 4 ; <CR> String M 7 ; <CR> String P 5 ; <CR> Scanner n 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> M 7 = n 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 5 = n 8 . nextLine ( ) ; <CR> Keeper b = new Keeper ( M 7 , P 5 ) ; <CR> Scanner n 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 5 = n 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 4 = n 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 2 = n 8 . nextLine ( ) ; <CR> pet W 5 = new pet ( l 5 , l 2 , k 4 , b ) ; <CR> String I 0 = W 5 . Speak ( ) ; <CR> System . out . println ( <STRING> + I 0 ) ; <CR> } <CR> String pid ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC>