 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicChineseLetter(StringG1,Stringv4,Stringt4,StringA,Stringr3){ <CR> super(G1,v4,t4,A,r3); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> publicEnglishLetter(StringK,StringW2,Stringg2,StringM1,StringR){ <CR> super(K,W2,g2,M1,R); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> protectedStringsender; <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> protectedStringtitle; <CR> publicintcompareTo(LetterY6){ <CR> String[]P7=date.split("/"),c9=Y6.getDate().split("/"); <CR> for(into0=0;o0<P7.length;o0++){ <CR> if(Integer.parseInt(P7[o0])>Integer.parseInt(c9[o0]))return1; <CR> elseif(Integer.parseInt(P7[o0])<Integer.parseInt(c9[o0]))return-1; <CR> } <CR> return0; <CR> } <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> protectedStringreceiver; <CR> protectedStringcontent; <CR> abstractpublicvoiddisplay(); <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> protectedStringdate; <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> publicLetter(StringJ1,Stringl5,Stringq7,StringJ3,Stringq2){ <CR> this.title=J1; <CR> this.receiver=l5; <CR> this.content=q7; <CR> this.sender=J3; <CR> this.date=q2; <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]q4){ <CR> Letter[]X={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(X); <CR> for(intX8=0;X8<X.length;X8++){ <CR> if(X8!=0) <CR> System.out.println("==========="); <CR> X[X8].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 