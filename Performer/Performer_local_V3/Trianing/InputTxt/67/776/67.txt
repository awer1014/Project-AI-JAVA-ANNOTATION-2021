 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicChineseLetter(StringY7,StringL7,StringH8,Stringv5,StringL8){ <CR> super(Y7,L7,H8,v5,L8); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> publicEnglishLetter(StringH4,Stringi8,Stringi3,StringU9,Stringh5){ <CR> super(H4,i8,i3,U9,h5); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> protectedStringdate; <CR> protectedStringsender; <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> protectedStringcontent; <CR> publicintcompareTo(LetterW9){ <CR> String[]T4=date.split("/"),T2=W9.getDate().split("/"); <CR> for(intJ1=0;J1<T4.length;J1++){ <CR> if(Integer.parseInt(T4[J1])>Integer.parseInt(T2[J1]))return1; <CR> elseif(Integer.parseInt(T4[J1])<Integer.parseInt(T2[J1]))return-1; <CR> } <CR> return0; <CR> } <CR> abstractpublicvoiddisplay(); <CR> protectedStringreceiver; <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> protectedStringtitle; <CR> publicLetter(Stringd0,StringM8,Stringu2,StringX1,StringO7){ <CR> this.title=d0; <CR> this.receiver=M8; <CR> this.content=u2; <CR> this.sender=X1; <CR> this.date=O7; <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]Q7){ <CR> Letter[]k1={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(k1); <CR> for(intm=0;m<k1.length;m++){ <CR> if(m!=0) <CR> System.out.println("==========="); <CR> k1[m].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 