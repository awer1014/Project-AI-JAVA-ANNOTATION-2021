 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicChineseLetter(StringH6,Stringw7,StringP9,StringM9,Stringv0){ <CR> super(H6,w7,P9,M9,v0); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicEnglishLetter(Stringf3,Stringq5,StringR,StringL8,StringO7){ <CR> super(f3,q5,R,L8,O7); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> protectedStringreceiver; <CR> protectedStringsender; <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> publicLetter(Stringo0,Stringj9,Stringn5,Stringw1,StringG9){ <CR> this.title=o0; <CR> this.receiver=j9; <CR> this.content=n5; <CR> this.sender=w1; <CR> this.date=G9; <CR> } <CR> protectedStringcontent; <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> publicintcompareTo(Letterr0){ <CR> String[]k8=date.split("/"),g5=r0.getDate().split("/"); <CR> for(intK9=0;K9<k8.length;K9++){ <CR> if(Integer.parseInt(k8[K9])>Integer.parseInt(g5[K9]))return1; <CR> elseif(Integer.parseInt(k8[K9])<Integer.parseInt(g5[K9]))return-1; <CR> } <CR> return0; <CR> } <CR> protectedStringtitle; <CR> abstractpublicvoiddisplay(); <CR> protectedStringdate; <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]l2){ <CR> Letter[]x8={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(x8); <CR> for(into=0;o<x8.length;o++){ <CR> if(o!=0) <CR> System.out.println("==========="); <CR> x8[o].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 