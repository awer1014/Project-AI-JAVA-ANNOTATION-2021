 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> publicChineseLetter(Stringv9,Strings1,StringH9,StringY4,Stringj0){ <CR> super(v9,s1,H9,Y4,j0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> publicEnglishLetter(StringC8,StringX2,StringG8,StringF2,Stringz1){ <CR> super(C8,X2,G8,F2,z1); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> protectedStringsender; <CR> publicLetter(Stringm,Stringe9,Stringd2,Stringw,Stringp5){ <CR> this.title=m; <CR> this.receiver=e9; <CR> this.content=d2; <CR> this.sender=w; <CR> this.date=p5; <CR> } <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> protectedStringreceiver; <CR> protectedStringtitle; <CR> abstractpublicvoiddisplay(); <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> publicintcompareTo(Letterq6){ <CR> String[]R7=date.split("/"),Q8=q6.getDate().split("/"); <CR> for(intY3=0;Y3<R7.length;Y3++){ <CR> if(Integer.parseInt(R7[Y3])>Integer.parseInt(Q8[Y3]))return1; <CR> elseif(Integer.parseInt(R7[Y3])<Integer.parseInt(Q8[Y3]))return-1; <CR> } <CR> return0; <CR> } <CR> protectedStringcontent; <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> protectedStringdate; <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]z1){ <CR> Letter[]g8={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(g8); <CR> for(intj8=0;j8<g8.length;j8++){ <CR> if(j8!=0) <CR> System.out.println("==========="); <CR> g8[j8].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 