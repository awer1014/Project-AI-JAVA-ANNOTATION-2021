 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String e , String s7 ) {  <CR> this . id = e ;  <CR> this . tel = s7 ;  <CR> }  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> public static void main ( String [ ] m2 ) {  <CR> String e ;  <CR> String s7 ;  <CR> Scanner f = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> e = f . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> s7 = f . nextLine ( ) ;  <CR> Keeper z8 = new Keeper ( e , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> String name ;  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x8 ) {  <CR> String j0 ;  <CR> String N ;  <CR> String q ;  <CR> String g6 ;  <CR> String u9 ;  <CR> Scanner E3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> g6 = E3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> u9 = E3 . nextLine ( ) ;  <CR> Keeper l5 = new Keeper ( g6 , u9 ) ;  <CR> Scanner E3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> j0 = E3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> q = E3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> N = E3 . nextLine ( ) ;  <CR> pet N3 = new pet ( j0 , N , q , l5 ) ;  <CR> String Y7 = N3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + Y7 ) ;  <CR> }  <CR> void Pet ( String j0 , String N , String q , Keeper X1 ) {  <CR> count ++ ;  <CR> this . pid = j0 ;  <CR> this . name = N ;  <CR> this . type = q ;  <CR> this . keeper = X1 ;  <CR> }  <CR> String type ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 