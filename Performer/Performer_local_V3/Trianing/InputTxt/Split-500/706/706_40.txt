 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String j , String G1 ) {  <CR> this . id = j ;  <CR> this . tel = G1 ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] G2 ) {  <CR> String j ;  <CR> String G1 ;  <CR> Scanner h5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> j = h5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> G1 = h5 . nextLine ( ) ;  <CR> Keeper Z4 = new Keeper ( j , G1 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v2 ) {  <CR> String D2 ;  <CR> String m0 ;  <CR> String N5 ;  <CR> String c4 ;  <CR> String U4 ;  <CR> Scanner O4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> c4 = O4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> U4 = O4 . nextLine ( ) ;  <CR> Keeper V = new Keeper ( c4 , U4 ) ;  <CR> Scanner O4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> D2 = O4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> N5 = O4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> m0 = O4 . nextLine ( ) ;  <CR> pet u1 = new pet ( D2 , m0 , N5 , V ) ;  <CR> String x5 = u1 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + x5 ) ;  <CR> }  <CR> static int count ;  <CR> void Pet ( String D2 , String m0 , String N5 , Keeper g8 ) {  <CR> count ++ ;  <CR> this . pid = D2 ;  <CR> this . name = m0 ;  <CR> this . type = N5 ;  <CR> this . keeper = g8 ;  <CR> }  <CR> String type ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 