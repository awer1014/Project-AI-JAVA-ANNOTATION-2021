 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String D6 , String o9 , double z3 , double h9 ) {  <CR> super ( D6 , o9 , z3 , h9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String N1 , String T3 , double R0 , double R ) {  <CR> super ( N1 , T3 , R0 , R ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] I2 ) {  <CR> Scanner N = new Scanner ( System . in ) ;  <CR> boolean G6 = true ;  <CR> while ( G6 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String J1 = N . nextLine ( ) ;  <CR> if ( J1 . equals ( "0" ) ) {  <CR> G6 = false ;  <CR> break ;  <CR> }  <CR> if ( J1 . equals ( "測驗" ) || J1 . equals ( "作業" ) || J1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String I = N . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String w8 = N . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double o3 = Double . parseDouble ( N . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double L2 = Double . parseDouble ( N . nextLine ( ) ) ;  <CR> String h9 = null ;  <CR> String W8 = null ;  <CR> String P9 = null ;  <CR> String V1 = null ;  <CR> String L6 = null ;  <CR> String J = null ;  <CR> if ( J1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> P9 = N . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> V1 = N . nextLine ( ) ;  <CR> }  <CR> if ( J1 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> h9 = N . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> W8 = N . nextLine ( ) ;  <CR> }  <CR> if ( J1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> L6 = N . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> J = N . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test y7 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( J1 . equals ( "測驗" ) )  <CR> y7 = new Exam ( I , w8 , o3 , L2 ) ;  <CR> else if ( J1 . equals ( "作業" ) )  <CR> y7 = new HomeWork ( I , w8 , o3 , L2 ) ;  <CR> else if ( J1 . equals ( "心得報告" ) )  <CR> y7 = new Report ( I , w8 , o3 , L2 ) ;  <CR> if ( y7 != null ) {  <CR> y7 . print ( ) ;  <CR> if ( J1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + P9 ) ;  <CR> System . out . println ( "考試範圍：" + V1 ) ;  <CR> }  <CR> else if ( J1 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + h9 ) ;  <CR> System . out . println ( "作業描述：" + W8 ) ;  <CR> }  <CR> else if ( J1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + L6 ) ;  <CR> System . out . println ( "參考文獻：" + J ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> y7 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String I8 , String s4 , double n1 , double U2 ) {  <CR> super ( I8 , s4 , n1 , U2 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private double score ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> public Test ( String m3 , String W5 , double Q4 , double t2 ) {  <CR> number = m3 ;  <CR> name = W5 ;  <CR> score = Q4 ;  <CR> propotation = t2 ;  <CR> }  <CR> private String number ;  <CR> String info_description ;  <CR> String info ;  <CR> private String name ;  <CR> abstract public void print ( ) ;  <CR> private String time , range , end_time , description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 