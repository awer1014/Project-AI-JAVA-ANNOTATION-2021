 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter C9 ) {  <CR> this . letter = C9 ;  <CR> }  <CR> public static String listsAsString ( short Y7 ) {  <CR> return list [ Y7 ] ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object g ) {  <CR> Card m9 = ( Card ) g ;  <CR> int b8 = Integer . parseInt ( this . getDate ) ;  <CR> int p2 = Integer . parseInt ( m9 . getDate ) ;  <CR> int d3 = b8 - p2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String a1 , String Y4 , String O8 , String Q5 , String U0 ) {  <CR> super ( a1 , Y4 , O8 , Q5 , U0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String B1 , String b4 , String i6 , String N5 , String R3 ) {  <CR> super ( B1 , b4 , i6 , N5 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String t1 , String m8 , Letter Y4 ) {  <CR> this . senderAddr = t1 ;  <CR> this . receiverAddr = m8 ;  <CR> this . letter = Y4 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String x1 , String q7 , String q2 , String t7 , String f8 ) {  <CR> this . title = x1 ;  <CR> this . receiver = q7 ;  <CR> this . content = q2 ;  <CR> this . sender = t7 ;  <CR> this . date = f8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int I2 ) {  <CR> if ( I2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] H3 ) {  <CR> Letter r5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop M7 = new Envelop ( "Taipei" , "Kaohsiung" , r5 ) ;  <CR> M7 . display ( ) ;  <CR> r5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 