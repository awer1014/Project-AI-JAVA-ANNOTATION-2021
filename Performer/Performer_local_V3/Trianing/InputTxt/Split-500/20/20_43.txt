 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> private short lists ;  <CR> public static String listsAsString ( short i0 ) {  <CR> return list [ i0 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter z ) {  <CR> this . letter = z ;  <CR> }  <CR> public int compareTo ( Object Q4 ) {  <CR> Card A3 = ( Card ) Q4 ;  <CR> int E9 = Integer . parseInt ( this . getDate ) ;  <CR> int c7 = Integer . parseInt ( A3 . getDate ) ;  <CR> int x8 = E9 - c7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String v4 , String r5 , String J6 , String q , String y3 ) {  <CR> super ( v4 , r5 , J6 , q , y3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String w7 , String d5 , String c2 , String V , String K9 ) {  <CR> super ( w7 , d5 , c2 , V , K9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String p2 , String k3 , Letter P9 ) {  <CR> this . senderAddr = p2 ;  <CR> this . receiverAddr = k3 ;  <CR> this . letter = P9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int D5 ) {  <CR> if ( D5 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String v1 , String e3 , String h2 , String Q6 , String w3 ) {  <CR> this . title = v1 ;  <CR> this . receiver = e3 ;  <CR> this . content = h2 ;  <CR> this . sender = Q6 ;  <CR> this . date = w3 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] v ) {  <CR> Letter X = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop a3 = new Envelop ( "Taipei" , "Kaohsiung" , X ) ;  <CR> a3 . display ( ) ;  <CR> X . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 