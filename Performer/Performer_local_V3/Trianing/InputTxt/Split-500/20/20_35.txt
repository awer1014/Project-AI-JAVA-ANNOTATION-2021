 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> Card ( Letter a0 ) {  <CR> this . letter = a0 ;  <CR> }  <CR> public static String listsAsString ( short x8 ) {  <CR> return list [ x8 ] ;  <CR> }  <CR> public int compareTo ( Object E8 ) {  <CR> Card E9 = ( Card ) E8 ;  <CR> int j5 = Integer . parseInt ( this . getDate ) ;  <CR> int o1 = Integer . parseInt ( E9 . getDate ) ;  <CR> int m3 = j5 - o1 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String w6 , String m4 , String r7 , String i2 , String w7 ) {  <CR> super ( w6 , m4 , r7 , i2 , w7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b , String M8 , String n3 , String C2 , String p7 ) {  <CR> super ( b , M8 , n3 , C2 , p7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String e6 , String Z1 , Letter c5 ) {  <CR> this . senderAddr = e6 ;  <CR> this . receiverAddr = Z1 ;  <CR> this . letter = c5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int C7 ) {  <CR> if ( C7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String I8 , String r5 , String C4 , String h6 , String R5 ) {  <CR> this . title = I8 ;  <CR> this . receiver = r5 ;  <CR> this . content = C4 ;  <CR> this . sender = h6 ;  <CR> this . date = R5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] X ) {  <CR> Letter t = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop X3 = new Envelop ( "Taipei" , "Kaohsiung" , t ) ;  <CR> X3 . display ( ) ;  <CR> t . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 