 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short G6 ) {  <CR> return list [ G6 ] ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter W3 ) {  <CR> this . letter = W3 ;  <CR> }  <CR> public int compareTo ( Object w8 ) {  <CR> Card N6 = ( Card ) w8 ;  <CR> int W6 = Integer . parseInt ( this . getDate ) ;  <CR> int H1 = Integer . parseInt ( N6 . getDate ) ;  <CR> int J4 = W6 - H1 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String h2 , String J8 , String j3 , String M7 , String L1 ) {  <CR> super ( h2 , J8 , j3 , M7 , L1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Y0 , String f6 , String Z5 , String J8 , String c1 ) {  <CR> super ( Y0 , f6 , Z5 , J8 , c1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String u7 , String i2 , Letter E7 ) {  <CR> this . senderAddr = u7 ;  <CR> this . receiverAddr = i2 ;  <CR> this . letter = E7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String f6 , String P7 , String D4 , String E4 , String L6 ) {  <CR> this . title = f6 ;  <CR> this . receiver = P7 ;  <CR> this . content = D4 ;  <CR> this . sender = E4 ;  <CR> this . date = L6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int r7 ) {  <CR> if ( r7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] R0 ) {  <CR> Letter K2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop A5 = new Envelop ( "Taipei" , "Kaohsiung" , K2 ) ;  <CR> A5 . display ( ) ;  <CR> K2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 