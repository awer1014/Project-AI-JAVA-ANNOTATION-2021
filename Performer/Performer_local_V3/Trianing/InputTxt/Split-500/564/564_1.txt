 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T9 , String J9 , String s1 , String E6 , String J2 ) {  <CR> super ( T9 , J9 , s1 , E6 , J2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J8 , String s0 , String Z3 , String h4 , String N2 ) {  <CR> super ( J8 , s0 , Z3 , h4 , N2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] C0 ) {  <CR> Evaluation x7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E5 = new Envelop ( "Taipei" , "Kaohsiung" , x7 ) ;  <CR> E5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String h0 , String P , Evaluation n ) {  <CR> this . senderAddr = h0 ;  <CR> this . receiverAddr = P ;  <CR> this . letter = n ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String S2 , String E9 , String S3 , String T7 , String a6 ) {  <CR> this . title = S2 ;  <CR> this . receiver = E9 ;  <CR> this . content = S3 ;  <CR> this . sender = T7 ;  <CR> this . date = a6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z3 ) {  <CR> int y1 ;  <CR> for ( y1 = list . length - 1 ; y1 >= 0 ; y1 -- ) {  <CR> int y4 = y1 ;  <CR> Letter U0 = new Letter ( y1 ) ;  <CR> Letter R0 = new Letter ( y4 - 1 ) ;  <CR> if ( U0 . compareTo ( R0 ) == 1 )  <CR> U0 . display ( y1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object C4 ) {  <CR> Letter f9 = ( Letter ) C4 ;  <CR> if ( this . x > f9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int y1 ) {  <CR> list [ y1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int N2 ) {  <CR> this . x = N2 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 