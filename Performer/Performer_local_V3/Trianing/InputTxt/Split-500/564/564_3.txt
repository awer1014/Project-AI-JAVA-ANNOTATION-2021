 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j4 , String F9 , String q4 , String h8 , String y ) {  <CR> super ( j4 , F9 , q4 , h8 , y ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w9 , String j0 , String U5 , String n3 , String t ) {  <CR> super ( w9 , j0 , U5 , n3 , t ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] x4 ) {  <CR> Evaluation j5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N5 = new Envelop ( "Taipei" , "Kaohsiung" , j5 ) ;  <CR> N5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String C2 , String p6 , Evaluation d1 ) {  <CR> this . senderAddr = C2 ;  <CR> this . receiverAddr = p6 ;  <CR> this . letter = d1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String A8 , String p5 , String x7 , String D8 , String a5 ) {  <CR> this . title = A8 ;  <CR> this . receiver = p5 ;  <CR> this . content = x7 ;  <CR> this . sender = D8 ;  <CR> this . date = a5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int S9 ) {  <CR> this . x = S9 ;  <CR> }  <CR> public void display ( int O6 ) {  <CR> list [ O6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y0 ) {  <CR> int O6 ;  <CR> for ( O6 = list . length - 1 ; O6 >= 0 ; O6 -- ) {  <CR> int v8 = O6 ;  <CR> Letter F8 = new Letter ( O6 ) ;  <CR> Letter e6 = new Letter ( v8 - 1 ) ;  <CR> if ( F8 . compareTo ( e6 ) == 1 )  <CR> F8 . display ( O6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object I4 ) {  <CR> Letter n2 = ( Letter ) I4 ;  <CR> if ( this . x > n2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 