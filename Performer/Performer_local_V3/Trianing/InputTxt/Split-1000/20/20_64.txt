 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter b6 ) {  <CR> this . letter = b6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> public int compareTo ( Object w4 ) {  <CR> Card V5 = ( Card ) w4 ;  <CR> int H4 = Integer . parseInt ( this . getDate ) ;  <CR> int w5 = Integer . parseInt ( V5 . getDate ) ;  <CR> int H2 = H4 - w5 ;  <CR> }  <CR> public static String listsAsString ( short X6 ) {  <CR> return list [ X6 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D5 , String U9 , String b8 , String S0 , String C6 ) {  <CR> super ( D5 , U9 , b8 , S0 , C6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Y1 , String L0 , String K2 , String O2 , String d5 ) {  <CR> super ( Y1 , L0 , K2 , O2 , d5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String q8 , String q7 , Letter w4 ) {  <CR> this . senderAddr = q8 ;  <CR> this . receiverAddr = q7 ;  <CR> this . letter = w4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int m ) {  <CR> if ( m == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String J1 , String w1 , String u8 , String W6 , String B0 ) {  <CR> this . title = J1 ;  <CR> this . receiver = w1 ;  <CR> this . content = u8 ;  <CR> this . sender = W6 ;  <CR> this . date = B0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] r2 ) {  <CR> Letter C6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop t4 = new Envelop ( "Taipei" , "Kaohsiung" , C6 ) ;  <CR> t4 . display ( ) ;  <CR> C6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 