 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public int compareTo ( Object e3 ) {  <CR> Card J6 = ( Card ) e3 ;  <CR> int D8 = Integer . parseInt ( this . getDate ) ;  <CR> int g7 = Integer . parseInt ( J6 . getDate ) ;  <CR> int Z1 = D8 - g7 ;  <CR> }  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short I5 ) {  <CR> return list [ I5 ] ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter t ) {  <CR> this . letter = t ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String X8 , String n2 , String S9 , String D2 , String M7 ) {  <CR> super ( X8 , n2 , S9 , D2 , M7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String I3 , String j2 , String v5 , String V0 , String s7 ) {  <CR> super ( I3 , j2 , v5 , V0 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String G2 , String R4 , Letter t6 ) {  <CR> this . senderAddr = G2 ;  <CR> this . receiverAddr = R4 ;  <CR> this . letter = t6 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int N7 ) {  <CR> if ( N7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String F5 , String v9 , String C2 , String k3 , String h8 ) {  <CR> this . title = F5 ;  <CR> this . receiver = v9 ;  <CR> this . content = C2 ;  <CR> this . sender = k3 ;  <CR> this . date = h8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] w9 ) {  <CR> Letter z = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop N5 = new Envelop ( "Taipei" , "Kaohsiung" , z ) ;  <CR> N5 . display ( ) ;  <CR> z . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 