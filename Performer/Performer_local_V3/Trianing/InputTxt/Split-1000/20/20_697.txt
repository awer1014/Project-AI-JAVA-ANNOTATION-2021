 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> public int compareTo ( Object o2 ) {  <CR> Card r4 = ( Card ) o2 ;  <CR> int G5 = Integer . parseInt ( this . getDate ) ;  <CR> int D = Integer . parseInt ( r4 . getDate ) ;  <CR> int c5 = G5 - D ;  <CR> }  <CR> public static String listsAsString ( short N8 ) {  <CR> return list [ N8 ] ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter V4 ) {  <CR> this . letter = V4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U8 , String H5 , String N3 , String K3 , String T2 ) {  <CR> super ( U8 , H5 , N3 , K3 , T2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String n2 , String Z0 , String O6 , String K7 , String W0 ) {  <CR> super ( n2 , Z0 , O6 , K7 , W0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String h5 , String e5 , Letter l6 ) {  <CR> this . senderAddr = h5 ;  <CR> this . receiverAddr = e5 ;  <CR> this . letter = l6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String d5 , String f5 , String L5 , String i5 , String h2 ) {  <CR> this . title = d5 ;  <CR> this . receiver = f5 ;  <CR> this . content = L5 ;  <CR> this . sender = i5 ;  <CR> this . date = h2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int M7 ) {  <CR> if ( M7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] t9 ) {  <CR> Letter k9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop L6 = new Envelop ( "Taipei" , "Kaohsiung" , k9 ) ;  <CR> L6 . display ( ) ;  <CR> k9 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 