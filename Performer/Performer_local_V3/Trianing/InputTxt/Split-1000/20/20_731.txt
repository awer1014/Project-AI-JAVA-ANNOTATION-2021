 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public static String listsAsString ( short T0 ) {  <CR> return list [ T0 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object c1 ) {  <CR> Card N1 = ( Card ) c1 ;  <CR> int d7 = Integer . parseInt ( this . getDate ) ;  <CR> int d3 = Integer . parseInt ( N1 . getDate ) ;  <CR> int h0 = d7 - d3 ;  <CR> }  <CR> Letter letter ;  <CR> Card ( Letter I5 ) {  <CR> this . letter = I5 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String F6 , String L4 , String g7 , String I3 , String n7 ) {  <CR> super ( F6 , L4 , g7 , I3 , n7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String R4 , String w2 , String r1 , String w4 , String R5 ) {  <CR> super ( R4 , w2 , r1 , w4 , R5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String s6 , String y1 , Letter e0 ) {  <CR> this . senderAddr = s6 ;  <CR> this . receiverAddr = y1 ;  <CR> this . letter = e0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String a2 , String a , String C4 , String Y3 , String O6 ) {  <CR> this . title = a2 ;  <CR> this . receiver = a ;  <CR> this . content = C4 ;  <CR> this . sender = Y3 ;  <CR> this . date = O6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int O ) {  <CR> if ( O == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] Q1 ) {  <CR> Letter T6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o = new Envelop ( "Taipei" , "Kaohsiung" , T6 ) ;  <CR> o . display ( ) ;  <CR> T6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 