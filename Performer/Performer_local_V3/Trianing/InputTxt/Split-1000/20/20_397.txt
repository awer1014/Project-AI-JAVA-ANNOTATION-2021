 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short c2 ) {  <CR> return list [ c2 ] ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter L3 ) {  <CR> this . letter = L3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object B9 ) {  <CR> Card z2 = ( Card ) B9 ;  <CR> int s0 = Integer . parseInt ( this . getDate ) ;  <CR> int A7 = Integer . parseInt ( z2 . getDate ) ;  <CR> int z4 = s0 - A7 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D3 , String F4 , String B9 , String h5 , String g6 ) {  <CR> super ( D3 , F4 , B9 , h5 , g6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String S6 , String y7 , String Q7 , String R5 , String c3 ) {  <CR> super ( S6 , y7 , Q7 , R5 , c3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String j1 , String Q8 , Letter t4 ) {  <CR> this . senderAddr = j1 ;  <CR> this . receiverAddr = Q8 ;  <CR> this . letter = t4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int c9 ) {  <CR> if ( c9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String i6 , String A6 , String o4 , String g , String O1 ) {  <CR> this . title = i6 ;  <CR> this . receiver = A6 ;  <CR> this . content = o4 ;  <CR> this . sender = g ;  <CR> this . date = O1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] t9 ) {  <CR> Letter r = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop V = new Envelop ( "Taipei" , "Kaohsiung" , r ) ;  <CR> V . display ( ) ;  <CR> r . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 