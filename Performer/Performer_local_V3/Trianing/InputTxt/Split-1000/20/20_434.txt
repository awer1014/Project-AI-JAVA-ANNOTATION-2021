 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> Card ( Letter R3 ) {  <CR> this . letter = R3 ;  <CR> }  <CR> public int compareTo ( Object D8 ) {  <CR> Card v7 = ( Card ) D8 ;  <CR> int P7 = Integer . parseInt ( this . getDate ) ;  <CR> int N = Integer . parseInt ( v7 . getDate ) ;  <CR> int U5 = P7 - N ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short G3 ) {  <CR> return list [ G3 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String P3 , String S2 , String J5 , String Z1 , String s6 ) {  <CR> super ( P3 , S2 , J5 , Z1 , s6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String t , String b6 , String g7 , String i , String D8 ) {  <CR> super ( t , b6 , g7 , i , D8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String I9 , String k5 , Letter a7 ) {  <CR> this . senderAddr = I9 ;  <CR> this . receiverAddr = k5 ;  <CR> this . letter = a7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int s4 ) {  <CR> if ( s4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String l1 , String I6 , String t5 , String Y3 , String b2 ) {  <CR> this . title = l1 ;  <CR> this . receiver = I6 ;  <CR> this . content = t5 ;  <CR> this . sender = Y3 ;  <CR> this . date = b2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] Y2 ) {  <CR> Letter K8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop L4 = new Envelop ( "Taipei" , "Kaohsiung" , K8 ) ;  <CR> L4 . display ( ) ;  <CR> K8 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 