 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object g ) {  <CR> Card P6 = ( Card ) g ;  <CR> int b6 = Integer . parseInt ( this . getDate ) ;  <CR> int t4 = Integer . parseInt ( P6 . getDate ) ;  <CR> int K3 = b6 - t4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter N8 ) {  <CR> this . letter = N8 ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short d7 ) {  <CR> return list [ d7 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String g6 , String M2 , String g9 , String u4 , String E0 ) {  <CR> super ( g6 , M2 , g9 , u4 , E0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String P7 , String Z6 , String I0 , String Y4 , String s6 ) {  <CR> super ( P7 , Z6 , I0 , Y4 , s6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String t3 , String L8 , Letter N ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = L8 ;  <CR> this . letter = N ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int p6 ) {  <CR> if ( p6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String B3 , String W8 , String C2 , String z5 , String N8 ) {  <CR> this . title = B3 ;  <CR> this . receiver = W8 ;  <CR> this . content = C2 ;  <CR> this . sender = z5 ;  <CR> this . date = N8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] R7 ) {  <CR> Letter D1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop T3 = new Envelop ( "Taipei" , "Kaohsiung" , D1 ) ;  <CR> T3 . display ( ) ;  <CR> D1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 