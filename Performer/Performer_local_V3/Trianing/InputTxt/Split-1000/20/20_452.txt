 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short h7 ) {  <CR> return list [ h7 ] ;  <CR> }  <CR> public int compareTo ( Object f3 ) {  <CR> Card k3 = ( Card ) f3 ;  <CR> int a2 = Integer . parseInt ( this . getDate ) ;  <CR> int c4 = Integer . parseInt ( k3 . getDate ) ;  <CR> int q2 = a2 - c4 ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter U5 ) {  <CR> this . letter = U5 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e2 , String a1 , String x0 , String I1 , String E0 ) {  <CR> super ( e2 , a1 , x0 , I1 , E0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String f7 , String F9 , String g2 , String q5 , String f9 ) {  <CR> super ( f7 , F9 , g2 , q5 , f9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String b4 , String C8 , Letter S3 ) {  <CR> this . senderAddr = b4 ;  <CR> this . receiverAddr = C8 ;  <CR> this . letter = S3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int D ) {  <CR> if ( D == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String B3 , String i3 , String l6 , String H9 , String X ) {  <CR> this . title = B3 ;  <CR> this . receiver = i3 ;  <CR> this . content = l6 ;  <CR> this . sender = H9 ;  <CR> this . date = X ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] T4 ) {  <CR> Letter X6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop X1 = new Envelop ( "Taipei" , "Kaohsiung" , X6 ) ;  <CR> X1 . display ( ) ;  <CR> X6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 