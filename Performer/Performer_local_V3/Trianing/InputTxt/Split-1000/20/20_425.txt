 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter B8 ) {  <CR> this . letter = B8 ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short z8 ) {  <CR> return list [ z8 ] ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object x9 ) {  <CR> Card N5 = ( Card ) x9 ;  <CR> int C1 = Integer . parseInt ( this . getDate ) ;  <CR> int v8 = Integer . parseInt ( N5 . getDate ) ;  <CR> int D6 = C1 - v8 ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I9 , String K6 , String u4 , String B6 , String I ) {  <CR> super ( I9 , K6 , u4 , B6 , I ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String r5 , String C1 , String C8 , String O0 , String a3 ) {  <CR> super ( r5 , C1 , C8 , O0 , a3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String z2 , String Y3 , Letter N7 ) {  <CR> this . senderAddr = z2 ;  <CR> this . receiverAddr = Y3 ;  <CR> this . letter = N7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String c , String a2 , String P9 , String Q4 , String A4 ) {  <CR> this . title = c ;  <CR> this . receiver = a2 ;  <CR> this . content = P9 ;  <CR> this . sender = Q4 ;  <CR> this . date = A4 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int D2 ) {  <CR> if ( D2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] Y ) {  <CR> Letter C4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop M = new Envelop ( "Taipei" , "Kaohsiung" , C4 ) ;  <CR> M . display ( ) ;  <CR> C4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 