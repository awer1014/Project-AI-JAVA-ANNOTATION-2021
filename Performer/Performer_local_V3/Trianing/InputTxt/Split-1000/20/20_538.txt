 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short H5 ) {  <CR> return list [ H5 ] ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object N1 ) {  <CR> Card E2 = ( Card ) N1 ;  <CR> int v = Integer . parseInt ( this . getDate ) ;  <CR> int W = Integer . parseInt ( E2 . getDate ) ;  <CR> int R3 = v - W ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter v9 ) {  <CR> this . letter = v9 ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L4 , String M2 , String X8 , String P6 , String d8 ) {  <CR> super ( L4 , M2 , X8 , P6 , d8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String M1 , String A4 , String g2 , String V8 , String W9 ) {  <CR> super ( M1 , A4 , g2 , V8 , W9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String T2 , String q8 , Letter n4 ) {  <CR> this . senderAddr = T2 ;  <CR> this . receiverAddr = q8 ;  <CR> this . letter = n4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int V2 ) {  <CR> if ( V2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String l9 , String d6 , String N0 , String t , String z9 ) {  <CR> this . title = l9 ;  <CR> this . receiver = d6 ;  <CR> this . content = N0 ;  <CR> this . sender = t ;  <CR> this . date = z9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] H9 ) {  <CR> Letter e1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y7 = new Envelop ( "Taipei" , "Kaohsiung" , e1 ) ;  <CR> Y7 . display ( ) ;  <CR> e1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 