 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public static String listsAsString ( short z8 ) {  <CR> return list [ z8 ] ;  <CR> }  <CR> public int compareTo ( Object b3 ) {  <CR> Card A5 = ( Card ) b3 ;  <CR> int a3 = Integer . parseInt ( this . getDate ) ;  <CR> int p7 = Integer . parseInt ( A5 . getDate ) ;  <CR> int H7 = a3 - p7 ;  <CR> }  <CR> Letter letter ;  <CR> Card ( Letter E1 ) {  <CR> this . letter = E1 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W9 , String S7 , String a8 , String J5 , String e7 ) {  <CR> super ( W9 , S7 , a8 , J5 , e7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D9 , String G4 , String n0 , String Q2 , String T7 ) {  <CR> super ( D9 , G4 , n0 , Q2 , T7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String z1 , String w6 , Letter W7 ) {  <CR> this . senderAddr = z1 ;  <CR> this . receiverAddr = w6 ;  <CR> this . letter = W7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int J7 ) {  <CR> if ( J7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String S5 , String S0 , String M7 , String G2 , String n1 ) {  <CR> this . title = S5 ;  <CR> this . receiver = S0 ;  <CR> this . content = M7 ;  <CR> this . sender = G2 ;  <CR> this . date = n1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] T7 ) {  <CR> Letter e5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop M6 = new Envelop ( "Taipei" , "Kaohsiung" , e5 ) ;  <CR> M6 . display ( ) ;  <CR> e5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 