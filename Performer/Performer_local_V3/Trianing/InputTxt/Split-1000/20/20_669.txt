 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short A5 ) {  <CR> return list [ A5 ] ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object N3 ) {  <CR> Card S0 = ( Card ) N3 ;  <CR> int d4 = Integer . parseInt ( this . getDate ) ;  <CR> int z1 = Integer . parseInt ( S0 . getDate ) ;  <CR> int h8 = d4 - z1 ;  <CR> }  <CR> Card ( Letter a3 ) {  <CR> this . letter = a3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String E7 , String E2 , String y2 , String v8 , String s8 ) {  <CR> super ( E7 , E2 , y2 , v8 , s8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String T4 , String b9 , String T1 , String f0 , String g2 ) {  <CR> super ( T4 , b9 , T1 , f0 , g2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String I3 , String Y , Letter O6 ) {  <CR> this . senderAddr = I3 ;  <CR> this . receiverAddr = Y ;  <CR> this . letter = O6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int j9 ) {  <CR> if ( j9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String G9 , String u7 , String V6 , String V9 , String a7 ) {  <CR> this . title = G9 ;  <CR> this . receiver = u7 ;  <CR> this . content = V6 ;  <CR> this . sender = V9 ;  <CR> this . date = a7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] K2 ) {  <CR> Letter Y7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop S4 = new Envelop ( "Taipei" , "Kaohsiung" , Y7 ) ;  <CR> S4 . display ( ) ;  <CR> Y7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 