 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short q4 ) {  <CR> return list [ q4 ] ;  <CR> }  <CR> Card ( Letter P8 ) {  <CR> this . letter = P8 ;  <CR> }  <CR> public int compareTo ( Object j3 ) {  <CR> Card E7 = ( Card ) j3 ;  <CR> int q8 = Integer . parseInt ( this . getDate ) ;  <CR> int G = Integer . parseInt ( E7 . getDate ) ;  <CR> int O9 = q8 - G ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Y4 , String h6 , String C9 , String O2 , String n4 ) {  <CR> super ( Y4 , h6 , C9 , O2 , n4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String S2 , String D8 , String j4 , String z0 , String B9 ) {  <CR> super ( S2 , D8 , j4 , z0 , B9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String d , String n9 , Letter B6 ) {  <CR> this . senderAddr = d ;  <CR> this . receiverAddr = n9 ;  <CR> this . letter = B6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int o8 ) {  <CR> if ( o8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String D1 , String J0 , String i8 , String V4 , String Z0 ) {  <CR> this . title = D1 ;  <CR> this . receiver = J0 ;  <CR> this . content = i8 ;  <CR> this . sender = V4 ;  <CR> this . date = Z0 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] H8 ) {  <CR> Letter I5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop D4 = new Envelop ( "Taipei" , "Kaohsiung" , I5 ) ;  <CR> D4 . display ( ) ;  <CR> I5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 