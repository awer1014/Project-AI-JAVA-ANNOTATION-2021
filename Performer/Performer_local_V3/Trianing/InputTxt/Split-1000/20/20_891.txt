 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short k0 ) {  <CR> return list [ k0 ] ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter l9 ) {  <CR> this . letter = l9 ;  <CR> }  <CR> public int compareTo ( Object t1 ) {  <CR> Card R3 = ( Card ) t1 ;  <CR> int w7 = Integer . parseInt ( this . getDate ) ;  <CR> int v3 = Integer . parseInt ( R3 . getDate ) ;  <CR> int x8 = w7 - v3 ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R2 , String K , String m5 , String j2 , String e8 ) {  <CR> super ( R2 , K , m5 , j2 , e8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String x9 , String h1 , String V9 , String z6 , String i0 ) {  <CR> super ( x9 , h1 , V9 , z6 , i0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String m3 , String v5 , Letter x2 ) {  <CR> this . senderAddr = m3 ;  <CR> this . receiverAddr = v5 ;  <CR> this . letter = x2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String k3 , String o6 , String I7 , String O4 , String O1 ) {  <CR> this . title = k3 ;  <CR> this . receiver = o6 ;  <CR> this . content = I7 ;  <CR> this . sender = O4 ;  <CR> this . date = O1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int m8 ) {  <CR> if ( m8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] Y9 ) {  <CR> Letter O8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y1 = new Envelop ( "Taipei" , "Kaohsiung" , O8 ) ;  <CR> Y1 . display ( ) ;  <CR> O8 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 