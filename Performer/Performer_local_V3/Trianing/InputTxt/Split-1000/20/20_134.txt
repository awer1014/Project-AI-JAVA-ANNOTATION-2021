 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short p9 ) {  <CR> return list [ p9 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter H0 ) {  <CR> this . letter = H0 ;  <CR> }  <CR> public int compareTo ( Object d2 ) {  <CR> Card c5 = ( Card ) d2 ;  <CR> int M0 = Integer . parseInt ( this . getDate ) ;  <CR> int g = Integer . parseInt ( c5 . getDate ) ;  <CR> int d0 = M0 - g ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String f4 , String w1 , String M4 , String v3 , String T ) {  <CR> super ( f4 , w1 , M4 , v3 , T ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String z0 , String Z2 , String L1 , String g3 , String Y8 ) {  <CR> super ( z0 , Z2 , L1 , g3 , Y8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String o7 , String A8 , Letter p7 ) {  <CR> this . senderAddr = o7 ;  <CR> this . receiverAddr = A8 ;  <CR> this . letter = p7 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int e8 ) {  <CR> if ( e8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String S7 , String z , String U9 , String x1 , String M6 ) {  <CR> this . title = S7 ;  <CR> this . receiver = z ;  <CR> this . content = U9 ;  <CR> this . sender = x1 ;  <CR> this . date = M6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] m7 ) {  <CR> Letter r7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop l3 = new Envelop ( "Taipei" , "Kaohsiung" , r7 ) ;  <CR> l3 . display ( ) ;  <CR> r7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 