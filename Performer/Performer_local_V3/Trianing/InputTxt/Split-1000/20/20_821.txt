 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public int compareTo ( Object F2 ) {  <CR> Card R9 = ( Card ) F2 ;  <CR> int I6 = Integer . parseInt ( this . getDate ) ;  <CR> int l2 = Integer . parseInt ( R9 . getDate ) ;  <CR> int m1 = I6 - l2 ;  <CR> }  <CR> public static String listsAsString ( short T1 ) {  <CR> return list [ T1 ] ;  <CR> }  <CR> Card ( Letter P5 ) {  <CR> this . letter = P5 ;  <CR> }  <CR> Letter letter ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String p2 , String s9 , String H1 , String k7 , String V2 ) {  <CR> super ( p2 , s9 , H1 , k7 , V2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Q0 , String B3 , String d4 , String X , String W2 ) {  <CR> super ( Q0 , B3 , d4 , X , W2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String E3 , String T1 , Letter d8 ) {  <CR> this . senderAddr = E3 ;  <CR> this . receiverAddr = T1 ;  <CR> this . letter = d8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int y ) {  <CR> if ( y == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String i5 , String i8 , String w2 , String f2 , String y5 ) {  <CR> this . title = i5 ;  <CR> this . receiver = i8 ;  <CR> this . content = w2 ;  <CR> this . sender = f2 ;  <CR> this . date = y5 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] w8 ) {  <CR> Letter m2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x0 = new Envelop ( "Taipei" , "Kaohsiung" , m2 ) ;  <CR> x0 . display ( ) ;  <CR> m2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 