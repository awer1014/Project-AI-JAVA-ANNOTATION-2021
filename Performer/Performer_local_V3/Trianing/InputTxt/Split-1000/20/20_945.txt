 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short i1 ) {  <CR> return list [ i1 ] ;  <CR> }  <CR> public int compareTo ( Object y ) {  <CR> Card U8 = ( Card ) y ;  <CR> int a6 = Integer . parseInt ( this . getDate ) ;  <CR> int O1 = Integer . parseInt ( U8 . getDate ) ;  <CR> int g7 = a6 - O1 ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter w6 ) {  <CR> this . letter = w6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String V4 , String U9 , String Y3 , String F , String t3 ) {  <CR> super ( V4 , U9 , Y3 , F , t3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String R2 , String t3 , String R5 , String s2 , String U5 ) {  <CR> super ( R2 , t3 , R5 , s2 , U5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String I , String T5 , Letter V8 ) {  <CR> this . senderAddr = I ;  <CR> this . receiverAddr = T5 ;  <CR> this . letter = V8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int x7 ) {  <CR> if ( x7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String J6 , String E6 , String b6 , String u2 , String F9 ) {  <CR> this . title = J6 ;  <CR> this . receiver = E6 ;  <CR> this . content = b6 ;  <CR> this . sender = u2 ;  <CR> this . date = F9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] e9 ) {  <CR> Letter W7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop J8 = new Envelop ( "Taipei" , "Kaohsiung" , W7 ) ;  <CR> J8 . display ( ) ;  <CR> W7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 