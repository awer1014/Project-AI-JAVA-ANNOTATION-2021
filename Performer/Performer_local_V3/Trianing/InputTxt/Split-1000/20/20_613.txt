 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short l4 ) {  <CR> return list [ l4 ] ;  <CR> }  <CR> Letter letter ;  <CR> Card ( Letter H1 ) {  <CR> this . letter = H1 ;  <CR> }  <CR> public int compareTo ( Object j5 ) {  <CR> Card e2 = ( Card ) j5 ;  <CR> int s4 = Integer . parseInt ( this . getDate ) ;  <CR> int E4 = Integer . parseInt ( e2 . getDate ) ;  <CR> int c4 = s4 - E4 ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String s1 , String L9 , String g8 , String l4 , String F5 ) {  <CR> super ( s1 , L9 , g8 , l4 , F5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String G3 , String y9 , String g4 , String m3 , String s7 ) {  <CR> super ( G3 , y9 , g4 , m3 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String e2 , String B7 , Letter V1 ) {  <CR> this . senderAddr = e2 ;  <CR> this . receiverAddr = B7 ;  <CR> this . letter = V1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int l5 ) {  <CR> if ( l5 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String S1 , String j8 , String n , String R3 , String w8 ) {  <CR> this . title = S1 ;  <CR> this . receiver = j8 ;  <CR> this . content = n ;  <CR> this . sender = R3 ;  <CR> this . date = w8 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] k1 ) {  <CR> Letter Z1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Z0 = new Envelop ( "Taipei" , "Kaohsiung" , Z1 ) ;  <CR> Z0 . display ( ) ;  <CR> Z1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 