 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter S5 ) {  <CR> this . letter = S5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object p7 ) {  <CR> Card K2 = ( Card ) p7 ;  <CR> int e = Integer . parseInt ( this . getDate ) ;  <CR> int f5 = Integer . parseInt ( K2 . getDate ) ;  <CR> int R4 = e - f5 ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short v ) {  <CR> return list [ v ] ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String m8 , String j0 , String X2 , String p1 , String e4 ) {  <CR> super ( m8 , j0 , X2 , p1 , e4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String q , String P5 , String G5 , String K4 , String K7 ) {  <CR> super ( q , P5 , G5 , K4 , K7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String h1 , String P9 , Letter u0 ) {  <CR> this . senderAddr = h1 ;  <CR> this . receiverAddr = P9 ;  <CR> this . letter = u0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int x7 ) {  <CR> if ( x7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String e2 , String w7 , String j6 , String d2 , String Z7 ) {  <CR> this . title = e2 ;  <CR> this . receiver = w7 ;  <CR> this . content = j6 ;  <CR> this . sender = d2 ;  <CR> this . date = Z7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] C7 ) {  <CR> Letter e3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop E6 = new Envelop ( "Taipei" , "Kaohsiung" , e3 ) ;  <CR> E6 . display ( ) ;  <CR> e3 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 