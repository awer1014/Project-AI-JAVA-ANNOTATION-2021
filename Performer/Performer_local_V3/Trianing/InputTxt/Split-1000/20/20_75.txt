 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> private short lists ;  <CR> Card ( Letter R9 ) {  <CR> this . letter = R9 ;  <CR> }  <CR> public int compareTo ( Object j7 ) {  <CR> Card J9 = ( Card ) j7 ;  <CR> int b2 = Integer . parseInt ( this . getDate ) ;  <CR> int s5 = Integer . parseInt ( J9 . getDate ) ;  <CR> int V1 = b2 - s5 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short X3 ) {  <CR> return list [ X3 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String n6 , String I2 , String Z4 , String w4 , String I4 ) {  <CR> super ( n6 , I2 , Z4 , w4 , I4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String A7 , String k3 , String h8 , String F0 , String D1 ) {  <CR> super ( A7 , k3 , h8 , F0 , D1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String Y0 , String K5 , Letter e4 ) {  <CR> this . senderAddr = Y0 ;  <CR> this . receiverAddr = K5 ;  <CR> this . letter = e4 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String U7 , String G3 , String P , String u9 , String q7 ) {  <CR> this . title = U7 ;  <CR> this . receiver = G3 ;  <CR> this . content = P ;  <CR> this . sender = u9 ;  <CR> this . date = q7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int K2 ) {  <CR> if ( K2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] O1 ) {  <CR> Letter L0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y8 = new Envelop ( "Taipei" , "Kaohsiung" , L0 ) ;  <CR> Y8 . display ( ) ;  <CR> L0 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 