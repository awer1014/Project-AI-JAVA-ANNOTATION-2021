 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short I2 ) {  <CR> return list [ I2 ] ;  <CR> }  <CR> public int compareTo ( Object Y8 ) {  <CR> Card e = ( Card ) Y8 ;  <CR> int j0 = Integer . parseInt ( this . getDate ) ;  <CR> int d1 = Integer . parseInt ( e . getDate ) ;  <CR> int r2 = j0 - d1 ;  <CR> }  <CR> Card ( Letter W2 ) {  <CR> this . letter = W2 ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String C , String y8 , String O , String o0 , String W3 ) {  <CR> super ( C , y8 , O , o0 , W3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String V3 , String Z7 , String o7 , String J7 , String Q7 ) {  <CR> super ( V3 , Z7 , o7 , J7 , Q7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String C2 , String Q7 , Letter I7 ) {  <CR> this . senderAddr = C2 ;  <CR> this . receiverAddr = Q7 ;  <CR> this . letter = I7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int Y2 ) {  <CR> if ( Y2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String R0 , String R8 , String h0 , String L0 , String l9 ) {  <CR> this . title = R0 ;  <CR> this . receiver = R8 ;  <CR> this . content = h0 ;  <CR> this . sender = L0 ;  <CR> this . date = l9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] v6 ) {  <CR> Letter y3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop L0 = new Envelop ( "Taipei" , "Kaohsiung" , y3 ) ;  <CR> L0 . display ( ) ;  <CR> y3 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 