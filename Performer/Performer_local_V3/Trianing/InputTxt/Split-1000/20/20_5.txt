 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public static String listsAsString ( short n4 ) {  <CR> return list [ n4 ] ;  <CR> }  <CR> public int compareTo ( Object q1 ) {  <CR> Card k1 = ( Card ) q1 ;  <CR> int N2 = Integer . parseInt ( this . getDate ) ;  <CR> int i6 = Integer . parseInt ( k1 . getDate ) ;  <CR> int M5 = N2 - i6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter j3 ) {  <CR> this . letter = j3 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U0 , String s2 , String t0 , String N7 , String K5 ) {  <CR> super ( U0 , s2 , t0 , N7 , K5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L8 , String G5 , String x0 , String d4 , String t2 ) {  <CR> super ( L8 , G5 , x0 , d4 , t2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String j5 , String W9 , Letter y8 ) {  <CR> this . senderAddr = j5 ;  <CR> this . receiverAddr = W9 ;  <CR> this . letter = y8 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String R2 , String k , String k5 , String r2 , String k2 ) {  <CR> this . title = R2 ;  <CR> this . receiver = k ;  <CR> this . content = k5 ;  <CR> this . sender = r2 ;  <CR> this . date = k2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int Y7 ) {  <CR> if ( Y7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] K2 ) {  <CR> Letter d8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop D5 = new Envelop ( "Taipei" , "Kaohsiung" , d8 ) ;  <CR> D5 . display ( ) ;  <CR> d8 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 