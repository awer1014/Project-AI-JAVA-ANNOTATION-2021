 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter W3 ) {  <CR> this . letter = W3 ;  <CR> }  <CR> public static String listsAsString ( short P ) {  <CR> return list [ P ] ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object D4 ) {  <CR> Card K3 = ( Card ) D4 ;  <CR> int g4 = Integer . parseInt ( this . getDate ) ;  <CR> int B0 = Integer . parseInt ( K3 . getDate ) ;  <CR> int s3 = g4 - B0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c2 , String c1 , String r3 , String y2 , String k2 ) {  <CR> super ( c2 , c1 , r3 , y2 , k2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String X6 , String v8 , String f3 , String O6 , String E9 ) {  <CR> super ( X6 , v8 , f3 , O6 , E9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String a2 , String T6 , Letter y3 ) {  <CR> this . senderAddr = a2 ;  <CR> this . receiverAddr = T6 ;  <CR> this . letter = y3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String P3 , String F7 , String e7 , String U0 , String E7 ) {  <CR> this . title = P3 ;  <CR> this . receiver = F7 ;  <CR> this . content = e7 ;  <CR> this . sender = U0 ;  <CR> this . date = E7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int O4 ) {  <CR> if ( O4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] z7 ) {  <CR> Letter e0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop v7 = new Envelop ( "Taipei" , "Kaohsiung" , e0 ) ;  <CR> v7 . display ( ) ;  <CR> e0 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 