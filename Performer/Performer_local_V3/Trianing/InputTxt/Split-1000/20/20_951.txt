 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> Card ( Letter P5 ) {  <CR> this . letter = P5 ;  <CR> }  <CR> public static String listsAsString ( short y8 ) {  <CR> return list [ y8 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object v3 ) {  <CR> Card d0 = ( Card ) v3 ;  <CR> int y = Integer . parseInt ( this . getDate ) ;  <CR> int z9 = Integer . parseInt ( d0 . getDate ) ;  <CR> int A3 = y - z9 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e6 , String w , String z5 , String h5 , String t0 ) {  <CR> super ( e6 , w , z5 , h5 , t0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String E4 , String F5 , String w9 , String c9 , String Q9 ) {  <CR> super ( E4 , F5 , w9 , c9 , Q9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String I7 , String d9 , Letter f7 ) {  <CR> this . senderAddr = I7 ;  <CR> this . receiverAddr = d9 ;  <CR> this . letter = f7 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int A6 ) {  <CR> if ( A6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String K4 , String L9 , String T1 , String V2 , String B5 ) {  <CR> this . title = K4 ;  <CR> this . receiver = L9 ;  <CR> this . content = T1 ;  <CR> this . sender = V2 ;  <CR> this . date = B5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] U6 ) {  <CR> Letter a = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop O7 = new Envelop ( "Taipei" , "Kaohsiung" , a ) ;  <CR> O7 . display ( ) ;  <CR> a . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 