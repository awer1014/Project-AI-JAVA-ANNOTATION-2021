 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public static String listsAsString ( short v9 ) {  <CR> return list [ v9 ] ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object f8 ) {  <CR> Card R6 = ( Card ) f8 ;  <CR> int h1 = Integer . parseInt ( this . getDate ) ;  <CR> int X8 = Integer . parseInt ( R6 . getDate ) ;  <CR> int D7 = h1 - X8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter V4 ) {  <CR> this . letter = V4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D0 , String t5 , String K4 , String S3 , String U6 ) {  <CR> super ( D0 , t5 , K4 , S3 , U6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O5 , String r1 , String f3 , String m3 , String Y0 ) {  <CR> super ( O5 , r1 , f3 , m3 , Y0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String K7 , String g5 , Letter B1 ) {  <CR> this . senderAddr = K7 ;  <CR> this . receiverAddr = g5 ;  <CR> this . letter = B1 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int j9 ) {  <CR> if ( j9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String o2 , String i2 , String U9 , String K2 , String S1 ) {  <CR> this . title = o2 ;  <CR> this . receiver = i2 ;  <CR> this . content = U9 ;  <CR> this . sender = K2 ;  <CR> this . date = S1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] y4 ) {  <CR> Letter T1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop y1 = new Envelop ( "Taipei" , "Kaohsiung" , T1 ) ;  <CR> y1 . display ( ) ;  <CR> T1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 