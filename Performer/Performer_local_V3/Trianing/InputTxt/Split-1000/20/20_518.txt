 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short t2 ) {  <CR> return list [ t2 ] ;  <CR> }  <CR> private short lists ;  <CR> public int compareTo ( Object E9 ) {  <CR> Card o2 = ( Card ) E9 ;  <CR> int B = Integer . parseInt ( this . getDate ) ;  <CR> int j7 = Integer . parseInt ( o2 . getDate ) ;  <CR> int H0 = B - j7 ;  <CR> }  <CR> Card ( Letter H ) {  <CR> this . letter = H ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z9 , String l5 , String L6 , String h1 , String a5 ) {  <CR> super ( z9 , l5 , L6 , h1 , a5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String P4 , String b0 , String z1 , String K0 , String J5 ) {  <CR> super ( P4 , b0 , z1 , K0 , J5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String S7 , String U7 , Letter d2 ) {  <CR> this . senderAddr = S7 ;  <CR> this . receiverAddr = U7 ;  <CR> this . letter = d2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int S6 ) {  <CR> if ( S6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String s7 , String e6 , String I2 , String c9 , String j ) {  <CR> this . title = s7 ;  <CR> this . receiver = e6 ;  <CR> this . content = I2 ;  <CR> this . sender = c9 ;  <CR> this . date = j ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] C1 ) {  <CR> Letter h7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop c6 = new Envelop ( "Taipei" , "Kaohsiung" , h7 ) ;  <CR> c6 . display ( ) ;  <CR> h7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 