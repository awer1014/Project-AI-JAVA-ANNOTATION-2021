 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> public int compareTo ( Object V3 ) {  <CR> Card K4 = ( Card ) V3 ;  <CR> int h6 = Integer . parseInt ( this . getDate ) ;  <CR> int K3 = Integer . parseInt ( K4 . getDate ) ;  <CR> int I7 = h6 - K3 ;  <CR> }  <CR> public static String listsAsString ( short J8 ) {  <CR> return list [ J8 ] ;  <CR> }  <CR> Card ( Letter D5 ) {  <CR> this . letter = D5 ;  <CR> }  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String K8 , String R7 , String j , String p5 , String c8 ) {  <CR> super ( K8 , R7 , j , p5 , c8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O4 , String k8 , String I2 , String v2 , String g9 ) {  <CR> super ( O4 , k8 , I2 , v2 , g9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String b1 , String j2 , Letter A7 ) {  <CR> this . senderAddr = b1 ;  <CR> this . receiverAddr = j2 ;  <CR> this . letter = A7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String H8 , String h0 , String v6 , String m1 , String h3 ) {  <CR> this . title = H8 ;  <CR> this . receiver = h0 ;  <CR> this . content = v6 ;  <CR> this . sender = m1 ;  <CR> this . date = h3 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int R0 ) {  <CR> if ( R0 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] n6 ) {  <CR> Letter J6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop i5 = new Envelop ( "Taipei" , "Kaohsiung" , J6 ) ;  <CR> i5 . display ( ) ;  <CR> J6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 