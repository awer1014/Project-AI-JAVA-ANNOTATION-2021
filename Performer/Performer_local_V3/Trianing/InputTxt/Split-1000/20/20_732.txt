 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> public int compareTo ( Object f8 ) {  <CR> Card A3 = ( Card ) f8 ;  <CR> int y1 = Integer . parseInt ( this . getDate ) ;  <CR> int y6 = Integer . parseInt ( A3 . getDate ) ;  <CR> int k8 = y1 - y6 ;  <CR> }  <CR> Card ( Letter G7 ) {  <CR> this . letter = G7 ;  <CR> }  <CR> public static String listsAsString ( short p5 ) {  <CR> return list [ p5 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A8 , String J0 , String W0 , String l5 , String J3 ) {  <CR> super ( A8 , J0 , W0 , l5 , J3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D1 , String B9 , String e6 , String d8 , String J6 ) {  <CR> super ( D1 , B9 , e6 , d8 , J6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String M9 , String e7 , Letter J5 ) {  <CR> this . senderAddr = M9 ;  <CR> this . receiverAddr = e7 ;  <CR> this . letter = J5 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int e2 ) {  <CR> if ( e2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String q4 , String X2 , String p6 , String D6 , String V1 ) {  <CR> this . title = q4 ;  <CR> this . receiver = X2 ;  <CR> this . content = p6 ;  <CR> this . sender = D6 ;  <CR> this . date = V1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] x7 ) {  <CR> Letter D4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop U9 = new Envelop ( "Taipei" , "Kaohsiung" , D4 ) ;  <CR> U9 . display ( ) ;  <CR> D4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 