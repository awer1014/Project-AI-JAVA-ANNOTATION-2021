 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> Card ( Letter J6 ) {  <CR> this . letter = J6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short g9 ) {  <CR> return list [ g9 ] ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object A2 ) {  <CR> Card h8 = ( Card ) A2 ;  <CR> int R9 = Integer . parseInt ( this . getDate ) ;  <CR> int Z4 = Integer . parseInt ( h8 . getDate ) ;  <CR> int H3 = R9 - Z4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o1 , String O , String R4 , String A0 , String D0 ) {  <CR> super ( o1 , O , R4 , A0 , D0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N7 , String c4 , String E3 , String M8 , String B5 ) {  <CR> super ( N7 , c4 , E3 , M8 , B5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String o2 , String r , Letter Q7 ) {  <CR> this . senderAddr = o2 ;  <CR> this . receiverAddr = r ;  <CR> this . letter = Q7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int o5 ) {  <CR> if ( o5 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String s3 , String U4 , String P1 , String C , String i1 ) {  <CR> this . title = s3 ;  <CR> this . receiver = U4 ;  <CR> this . content = P1 ;  <CR> this . sender = C ;  <CR> this . date = i1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] y0 ) {  <CR> Letter J4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Z3 = new Envelop ( "Taipei" , "Kaohsiung" , J4 ) ;  <CR> Z3 . display ( ) ;  <CR> J4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 