 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short g3 ) {  <CR> return list [ g3 ] ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> Card ( Letter o1 ) {  <CR> this . letter = o1 ;  <CR> }  <CR> public int compareTo ( Object p6 ) {  <CR> Card g5 = ( Card ) p6 ;  <CR> int N = Integer . parseInt ( this . getDate ) ;  <CR> int Q3 = Integer . parseInt ( g5 . getDate ) ;  <CR> int H0 = N - Q3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String B9 , String e5 , String y5 , String o7 , String b6 ) {  <CR> super ( B9 , e5 , y5 , o7 , b6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String E , String B1 , String f5 , String y , String q0 ) {  <CR> super ( E , B1 , f5 , y , q0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String f4 , String t2 , Letter H5 ) {  <CR> this . senderAddr = f4 ;  <CR> this . receiverAddr = t2 ;  <CR> this . letter = H5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String k5 , String w1 , String Y , String t , String E2 ) {  <CR> this . title = k5 ;  <CR> this . receiver = w1 ;  <CR> this . content = Y ;  <CR> this . sender = t ;  <CR> this . date = E2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int B6 ) {  <CR> if ( B6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] Q3 ) {  <CR> Letter q5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop v9 = new Envelop ( "Taipei" , "Kaohsiung" , q5 ) ;  <CR> v9 . display ( ) ;  <CR> q5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 