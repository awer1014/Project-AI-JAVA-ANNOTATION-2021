 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object b4 ) {  <CR> Card y7 = ( Card ) b4 ;  <CR> int C3 = Integer . parseInt ( this . getDate ) ;  <CR> int X2 = Integer . parseInt ( y7 . getDate ) ;  <CR> int n1 = C3 - X2 ;  <CR> }  <CR> public static String listsAsString ( short i4 ) {  <CR> return list [ i4 ] ;  <CR> }  <CR> Card ( Letter g1 ) {  <CR> this . letter = g1 ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String s3 , String U0 , String e3 , String l2 , String S9 ) {  <CR> super ( s3 , U0 , e3 , l2 , S9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String V8 , String b2 , String D5 , String B1 , String r9 ) {  <CR> super ( V8 , b2 , D5 , B1 , r9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String U , String T5 , Letter P4 ) {  <CR> this . senderAddr = U ;  <CR> this . receiverAddr = T5 ;  <CR> this . letter = P4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int T9 ) {  <CR> if ( T9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String O9 , String h2 , String s1 , String V2 , String i7 ) {  <CR> this . title = O9 ;  <CR> this . receiver = h2 ;  <CR> this . content = s1 ;  <CR> this . sender = V2 ;  <CR> this . date = i7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] B3 ) {  <CR> Letter f3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop y6 = new Envelop ( "Taipei" , "Kaohsiung" , f3 ) ;  <CR> y6 . display ( ) ;  <CR> f3 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 