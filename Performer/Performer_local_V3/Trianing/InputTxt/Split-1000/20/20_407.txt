 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public static String listsAsString ( short u6 ) {  <CR> return list [ u6 ] ;  <CR> }  <CR> Card ( Letter J9 ) {  <CR> this . letter = J9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object M ) {  <CR> Card J4 = ( Card ) M ;  <CR> int v0 = Integer . parseInt ( this . getDate ) ;  <CR> int x5 = Integer . parseInt ( J4 . getDate ) ;  <CR> int X0 = v0 - x5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String M4 , String n9 , String w2 , String I5 , String r2 ) {  <CR> super ( M4 , n9 , w2 , I5 , r2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String z8 , String a6 , String P , String R4 , String F1 ) {  <CR> super ( z8 , a6 , P , R4 , F1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String C9 , String T4 , Letter r0 ) {  <CR> this . senderAddr = C9 ;  <CR> this . receiverAddr = T4 ;  <CR> this . letter = r0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int f6 ) {  <CR> if ( f6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String x0 , String b , String I4 , String W , String u7 ) {  <CR> this . title = x0 ;  <CR> this . receiver = b ;  <CR> this . content = I4 ;  <CR> this . sender = W ;  <CR> this . date = u7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] d5 ) {  <CR> Letter j5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o2 = new Envelop ( "Taipei" , "Kaohsiung" , j5 ) ;  <CR> o2 . display ( ) ;  <CR> j5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 