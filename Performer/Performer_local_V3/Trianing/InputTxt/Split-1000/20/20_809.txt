 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short q2 ) {  <CR> return list [ q2 ] ;  <CR> }  <CR> public int compareTo ( Object c0 ) {  <CR> Card K9 = ( Card ) c0 ;  <CR> int m4 = Integer . parseInt ( this . getDate ) ;  <CR> int V9 = Integer . parseInt ( K9 . getDate ) ;  <CR> int r9 = m4 - V9 ;  <CR> }  <CR> Card ( Letter i1 ) {  <CR> this . letter = i1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String M9 , String Z , String a0 , String W4 , String H6 ) {  <CR> super ( M9 , Z , a0 , W4 , H6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k5 , String R3 , String u2 , String U1 , String H0 ) {  <CR> super ( k5 , R3 , u2 , U1 , H0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String x6 , String b7 , Letter c9 ) {  <CR> this . senderAddr = x6 ;  <CR> this . receiverAddr = b7 ;  <CR> this . letter = c9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int n0 ) {  <CR> if ( n0 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String k4 , String y9 , String p5 , String D5 , String G9 ) {  <CR> this . title = k4 ;  <CR> this . receiver = y9 ;  <CR> this . content = p5 ;  <CR> this . sender = D5 ;  <CR> this . date = G9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] P3 ) {  <CR> Letter j9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop M5 = new Envelop ( "Taipei" , "Kaohsiung" , j9 ) ;  <CR> M5 . display ( ) ;  <CR> j9 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 