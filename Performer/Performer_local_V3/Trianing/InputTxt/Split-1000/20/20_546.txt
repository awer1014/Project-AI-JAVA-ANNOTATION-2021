 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short Y9 ) {  <CR> return list [ Y9 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object s ) {  <CR> Card K5 = ( Card ) s ;  <CR> int z8 = Integer . parseInt ( this . getDate ) ;  <CR> int e1 = Integer . parseInt ( K5 . getDate ) ;  <CR> int J5 = z8 - e1 ;  <CR> }  <CR> Card ( Letter P6 ) {  <CR> this . letter = P6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U7 , String H0 , String z1 , String n3 , String s5 ) {  <CR> super ( U7 , H0 , z1 , n3 , s5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String B2 , String j0 , String W9 , String k4 , String p1 ) {  <CR> super ( B2 , j0 , W9 , k4 , p1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String p6 , String q9 , Letter s9 ) {  <CR> this . senderAddr = p6 ;  <CR> this . receiverAddr = q9 ;  <CR> this . letter = s9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int u4 ) {  <CR> if ( u4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String x1 , String Z0 , String A5 , String X7 , String Y ) {  <CR> this . title = x1 ;  <CR> this . receiver = Z0 ;  <CR> this . content = A5 ;  <CR> this . sender = X7 ;  <CR> this . date = Y ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] o0 ) {  <CR> Letter v2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop s9 = new Envelop ( "Taipei" , "Kaohsiung" , v2 ) ;  <CR> s9 . display ( ) ;  <CR> v2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 