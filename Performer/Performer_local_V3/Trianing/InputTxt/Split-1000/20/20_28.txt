 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object K ) {  <CR> Card r = ( Card ) K ;  <CR> int j8 = Integer . parseInt ( this . getDate ) ;  <CR> int t8 = Integer . parseInt ( r . getDate ) ;  <CR> int q2 = j8 - t8 ;  <CR> }  <CR> Letter letter ;  <CR> private short lists ;  <CR> Card ( Letter z2 ) {  <CR> this . letter = z2 ;  <CR> }  <CR> public static String listsAsString ( short v1 ) {  <CR> return list [ v1 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W2 , String s8 , String X7 , String F6 , String r1 ) {  <CR> super ( W2 , s8 , X7 , F6 , r1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b3 , String O6 , String z5 , String i4 , String x6 ) {  <CR> super ( b3 , O6 , z5 , i4 , x6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String Y8 , String z2 , Letter e2 ) {  <CR> this . senderAddr = Y8 ;  <CR> this . receiverAddr = z2 ;  <CR> this . letter = e2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int j8 ) {  <CR> if ( j8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String q7 , String W8 , String l4 , String u2 , String O7 ) {  <CR> this . title = q7 ;  <CR> this . receiver = W8 ;  <CR> this . content = l4 ;  <CR> this . sender = u2 ;  <CR> this . date = O7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] I3 ) {  <CR> Letter O6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop A6 = new Envelop ( "Taipei" , "Kaohsiung" , O6 ) ;  <CR> A6 . display ( ) ;  <CR> O6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 