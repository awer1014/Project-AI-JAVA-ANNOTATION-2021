 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> private short lists ;  <CR> public static String listsAsString ( short n9 ) {  <CR> return list [ n9 ] ;  <CR> }  <CR> public int compareTo ( Object F9 ) {  <CR> Card J5 = ( Card ) F9 ;  <CR> int M = Integer . parseInt ( this . getDate ) ;  <CR> int C5 = Integer . parseInt ( J5 . getDate ) ;  <CR> int e2 = M - C5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter X6 ) {  <CR> this . letter = X6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String v1 , String s0 , String c2 , String h4 , String e8 ) {  <CR> super ( v1 , s0 , c2 , h4 , e8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N0 , String o5 , String G6 , String Y6 , String f2 ) {  <CR> super ( N0 , o5 , G6 , Y6 , f2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String P3 , String C , Letter H0 ) {  <CR> this . senderAddr = P3 ;  <CR> this . receiverAddr = C ;  <CR> this . letter = H0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int c1 ) {  <CR> if ( c1 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String h9 , String m4 , String N1 , String X2 , String c7 ) {  <CR> this . title = h9 ;  <CR> this . receiver = m4 ;  <CR> this . content = N1 ;  <CR> this . sender = X2 ;  <CR> this . date = c7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] o1 ) {  <CR> Letter C5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop n1 = new Envelop ( "Taipei" , "Kaohsiung" , C5 ) ;  <CR> n1 . display ( ) ;  <CR> C5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 