 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter m6 ) {  <CR> this . letter = m6 ;  <CR> }  <CR> Letter letter ;  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object g2 ) {  <CR> Card Y1 = ( Card ) g2 ;  <CR> int K = Integer . parseInt ( this . getDate ) ;  <CR> int E4 = Integer . parseInt ( Y1 . getDate ) ;  <CR> int Y0 = K - E4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short L8 ) {  <CR> return list [ L8 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L4 , String B0 , String q4 , String C5 , String C2 ) {  <CR> super ( L4 , B0 , q4 , C5 , C2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String W5 , String K5 , String h4 , String x4 , String e1 ) {  <CR> super ( W5 , K5 , h4 , x4 , e1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String F3 , String a3 , Letter o0 ) {  <CR> this . senderAddr = F3 ;  <CR> this . receiverAddr = a3 ;  <CR> this . letter = o0 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String e1 , String n4 , String b8 , String J0 , String Y1 ) {  <CR> this . title = e1 ;  <CR> this . receiver = n4 ;  <CR> this . content = b8 ;  <CR> this . sender = J0 ;  <CR> this . date = Y1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int r4 ) {  <CR> if ( r4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] S0 ) {  <CR> Letter b4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Z = new Envelop ( "Taipei" , "Kaohsiung" , b4 ) ;  <CR> Z . display ( ) ;  <CR> b4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 