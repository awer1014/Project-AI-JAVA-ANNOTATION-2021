 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter L5 ) {  <CR> this . letter = L5 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public int compareTo ( Object s1 ) {  <CR> Card W1 = ( Card ) s1 ;  <CR> int b9 = Integer . parseInt ( this . getDate ) ;  <CR> int R = Integer . parseInt ( W1 . getDate ) ;  <CR> int j4 = b9 - R ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short p6 ) {  <CR> return list [ p6 ] ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String j1 , String R0 , String l2 , String Z0 , String b4 ) {  <CR> super ( j1 , R0 , l2 , Z0 , b4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String j3 , String a5 , String M9 , String M4 , String J3 ) {  <CR> super ( j3 , a5 , M9 , M4 , J3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String l6 , String H7 , Letter t6 ) {  <CR> this . senderAddr = l6 ;  <CR> this . receiverAddr = H7 ;  <CR> this . letter = t6 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String G9 , String V5 , String C7 , String B0 , String W2 ) {  <CR> this . title = G9 ;  <CR> this . receiver = V5 ;  <CR> this . content = C7 ;  <CR> this . sender = B0 ;  <CR> this . date = W2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int R1 ) {  <CR> if ( R1 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] A4 ) {  <CR> Letter v2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop n3 = new Envelop ( "Taipei" , "Kaohsiung" , v2 ) ;  <CR> n3 . display ( ) ;  <CR> v2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 