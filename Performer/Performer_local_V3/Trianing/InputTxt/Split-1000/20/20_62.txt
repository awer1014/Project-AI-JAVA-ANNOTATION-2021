 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object g3 ) {  <CR> Card Z4 = ( Card ) g3 ;  <CR> int R5 = Integer . parseInt ( this . getDate ) ;  <CR> int A7 = Integer . parseInt ( Z4 . getDate ) ;  <CR> int T = R5 - A7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short l0 ) {  <CR> return list [ l0 ] ;  <CR> }  <CR> Card ( Letter x7 ) {  <CR> this . letter = x7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L1 , String l2 , String F4 , String w7 , String f2 ) {  <CR> super ( L1 , l2 , F4 , w7 , f2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String i3 , String B7 , String E2 , String v , String l0 ) {  <CR> super ( i3 , B7 , E2 , v , l0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String H5 , String a7 , Letter l3 ) {  <CR> this . senderAddr = H5 ;  <CR> this . receiverAddr = a7 ;  <CR> this . letter = l3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int C5 ) {  <CR> if ( C5 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String h3 , String l9 , String k1 , String V9 , String C4 ) {  <CR> this . title = h3 ;  <CR> this . receiver = l9 ;  <CR> this . content = k1 ;  <CR> this . sender = V9 ;  <CR> this . date = C4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] u7 ) {  <CR> Letter F9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop W5 = new Envelop ( "Taipei" , "Kaohsiung" , F9 ) ;  <CR> W5 . display ( ) ;  <CR> F9 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 