 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object w2 ) {  <CR> Card Q3 = ( Card ) w2 ;  <CR> int H3 = Integer . parseInt ( this . getDate ) ;  <CR> int Q8 = Integer . parseInt ( Q3 . getDate ) ;  <CR> int E5 = H3 - Q8 ;  <CR> }  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter g1 ) {  <CR> this . letter = g1 ;  <CR> }  <CR> public static String listsAsString ( short i7 ) {  <CR> return list [ i7 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String B8 , String R4 , String H2 , String Z3 , String X ) {  <CR> super ( B8 , R4 , H2 , Z3 , X ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String a , String P5 , String B6 , String q4 , String y7 ) {  <CR> super ( a , P5 , B6 , q4 , y7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String I4 , String s3 , Letter e5 ) {  <CR> this . senderAddr = I4 ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = e5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int Y ) {  <CR> if ( Y == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String U7 , String i1 , String n4 , String k6 , String x5 ) {  <CR> this . title = U7 ;  <CR> this . receiver = i1 ;  <CR> this . content = n4 ;  <CR> this . sender = k6 ;  <CR> this . date = x5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] H4 ) {  <CR> Letter Y0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop u4 = new Envelop ( "Taipei" , "Kaohsiung" , Y0 ) ;  <CR> u4 . display ( ) ;  <CR> Y0 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 