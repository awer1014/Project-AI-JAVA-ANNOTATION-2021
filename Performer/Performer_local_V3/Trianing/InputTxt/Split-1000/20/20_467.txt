 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter i0 ) {  <CR> this . letter = i0 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short c5 ) {  <CR> return list [ c5 ] ;  <CR> }  <CR> public int compareTo ( Object T2 ) {  <CR> Card s8 = ( Card ) T2 ;  <CR> int x2 = Integer . parseInt ( this . getDate ) ;  <CR> int U2 = Integer . parseInt ( s8 . getDate ) ;  <CR> int g1 = x2 - U2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z1 , String J4 , String T0 , String B , String U1 ) {  <CR> super ( Z1 , J4 , T0 , B , U1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String U3 , String C , String X , String x6 , String I6 ) {  <CR> super ( U3 , C , X , x6 , I6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String q , String w9 , Letter L0 ) {  <CR> this . senderAddr = q ;  <CR> this . receiverAddr = w9 ;  <CR> this . letter = L0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String o9 , String z5 , String y1 , String i7 , String B ) {  <CR> this . title = o9 ;  <CR> this . receiver = z5 ;  <CR> this . content = y1 ;  <CR> this . sender = i7 ;  <CR> this . date = B ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int d7 ) {  <CR> if ( d7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] U4 ) {  <CR> Letter l5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop I5 = new Envelop ( "Taipei" , "Kaohsiung" , l5 ) ;  <CR> I5 . display ( ) ;  <CR> l5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 