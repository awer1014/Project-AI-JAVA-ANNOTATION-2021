 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public int compareTo ( Object T5 ) {  <CR> Card J9 = ( Card ) T5 ;  <CR> int E2 = Integer . parseInt ( this . getDate ) ;  <CR> int g8 = Integer . parseInt ( J9 . getDate ) ;  <CR> int s6 = E2 - g8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> Card ( Letter j9 ) {  <CR> this . letter = j9 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public static String listsAsString ( short r2 ) {  <CR> return list [ r2 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String H0 , String M3 , String t9 , String l6 , String k6 ) {  <CR> super ( H0 , M3 , t9 , l6 , k6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String J7 , String R2 , String i5 , String s7 , String j8 ) {  <CR> super ( J7 , R2 , i5 , s7 , j8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String K3 , String M8 , Letter t7 ) {  <CR> this . senderAddr = K3 ;  <CR> this . receiverAddr = M8 ;  <CR> this . letter = t7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String J4 , String h8 , String R , String c3 , String w8 ) {  <CR> this . title = J4 ;  <CR> this . receiver = h8 ;  <CR> this . content = R ;  <CR> this . sender = c3 ;  <CR> this . date = w8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int G6 ) {  <CR> if ( G6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] H7 ) {  <CR> Letter C3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop f1 = new Envelop ( "Taipei" , "Kaohsiung" , C3 ) ;  <CR> f1 . display ( ) ;  <CR> C3 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 