 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public static String listsAsString ( short n7 ) {  <CR> return list [ n7 ] ;  <CR> }  <CR> public int compareTo ( Object Q8 ) {  <CR> Card N9 = ( Card ) Q8 ;  <CR> int o8 = Integer . parseInt ( this . getDate ) ;  <CR> int g2 = Integer . parseInt ( N9 . getDate ) ;  <CR> int K6 = o8 - g2 ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter g3 ) {  <CR> this . letter = g3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String J3 , String k4 , String Z6 , String L8 , String q8 ) {  <CR> super ( J3 , k4 , Z6 , L8 , q8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String v , String i6 , String K3 , String K6 , String z8 ) {  <CR> super ( v , i6 , K3 , K6 , z8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String H , String X7 , Letter C4 ) {  <CR> this . senderAddr = H ;  <CR> this . receiverAddr = X7 ;  <CR> this . letter = C4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int H9 ) {  <CR> if ( H9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String G1 , String x1 , String t3 , String g , String x3 ) {  <CR> this . title = G1 ;  <CR> this . receiver = x1 ;  <CR> this . content = t3 ;  <CR> this . sender = g ;  <CR> this . date = x3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] O6 ) {  <CR> Letter n1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop y9 = new Envelop ( "Taipei" , "Kaohsiung" , n1 ) ;  <CR> y9 . display ( ) ;  <CR> n1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 