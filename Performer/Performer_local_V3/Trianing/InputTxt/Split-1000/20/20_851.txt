 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short u4 ) {  <CR> return list [ u4 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter V1 ) {  <CR> this . letter = V1 ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object W7 ) {  <CR> Card X4 = ( Card ) W7 ;  <CR> int f8 = Integer . parseInt ( this . getDate ) ;  <CR> int y9 = Integer . parseInt ( X4 . getDate ) ;  <CR> int H0 = f8 - y9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o0 , String t4 , String J1 , String s9 , String K4 ) {  <CR> super ( o0 , t4 , J1 , s9 , K4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Z8 , String J8 , String X5 , String M9 , String U1 ) {  <CR> super ( Z8 , J8 , X5 , M9 , U1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String q , String Q6 , Letter e ) {  <CR> this . senderAddr = q ;  <CR> this . receiverAddr = Q6 ;  <CR> this . letter = e ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String f6 , String Z7 , String Z , String g0 , String A2 ) {  <CR> this . title = f6 ;  <CR> this . receiver = Z7 ;  <CR> this . content = Z ;  <CR> this . sender = g0 ;  <CR> this . date = A2 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int t ) {  <CR> if ( t == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] p4 ) {  <CR> Letter g1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop F1 = new Envelop ( "Taipei" , "Kaohsiung" , g1 ) ;  <CR> F1 . display ( ) ;  <CR> g1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 