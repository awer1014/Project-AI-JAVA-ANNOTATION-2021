 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> private short lists ;  <CR> Card ( Letter f1 ) {  <CR> this . letter = f1 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short A0 ) {  <CR> return list [ A0 ] ;  <CR> }  <CR> public int compareTo ( Object a2 ) {  <CR> Card O6 = ( Card ) a2 ;  <CR> int k1 = Integer . parseInt ( this . getDate ) ;  <CR> int S6 = Integer . parseInt ( O6 . getDate ) ;  <CR> int W8 = k1 - S6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u2 , String R0 , String e9 , String b7 , String K ) {  <CR> super ( u2 , R0 , e9 , b7 , K ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L9 , String B6 , String b0 , String Q , String E4 ) {  <CR> super ( L9 , B6 , b0 , Q , E4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String X0 , String m4 , Letter n9 ) {  <CR> this . senderAddr = X0 ;  <CR> this . receiverAddr = m4 ;  <CR> this . letter = n9 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int Q4 ) {  <CR> if ( Q4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String o2 , String w9 , String s9 , String d4 , String F3 ) {  <CR> this . title = o2 ;  <CR> this . receiver = w9 ;  <CR> this . content = s9 ;  <CR> this . sender = d4 ;  <CR> this . date = F3 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] O2 ) {  <CR> Letter E9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop k9 = new Envelop ( "Taipei" , "Kaohsiung" , E9 ) ;  <CR> k9 . display ( ) ;  <CR> E9 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 