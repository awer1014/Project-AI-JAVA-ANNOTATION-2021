 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object N1 ) {  <CR> Card L2 = ( Card ) N1 ;  <CR> int g3 = Integer . parseInt ( this . getDate ) ;  <CR> int o1 = Integer . parseInt ( L2 . getDate ) ;  <CR> int q = g3 - o1 ;  <CR> }  <CR> public static String listsAsString ( short P9 ) {  <CR> return list [ P9 ] ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter i9 ) {  <CR> this . letter = i9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o4 , String j5 , String D3 , String E5 , String u5 ) {  <CR> super ( o4 , j5 , D3 , E5 , u5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String v1 , String t6 , String t3 , String s7 , String z4 ) {  <CR> super ( v1 , t6 , t3 , s7 , z4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String c9 , String r , Letter C4 ) {  <CR> this . senderAddr = c9 ;  <CR> this . receiverAddr = r ;  <CR> this . letter = C4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int K8 ) {  <CR> if ( K8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String U7 , String U9 , String t1 , String t6 , String x9 ) {  <CR> this . title = U7 ;  <CR> this . receiver = U9 ;  <CR> this . content = t1 ;  <CR> this . sender = t6 ;  <CR> this . date = x9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] G5 ) {  <CR> Letter O8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop f9 = new Envelop ( "Taipei" , "Kaohsiung" , O8 ) ;  <CR> f9 . display ( ) ;  <CR> O8 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 