 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object Q4 ) {  <CR> Card M0 = ( Card ) Q4 ;  <CR> int S8 = Integer . parseInt ( this . getDate ) ;  <CR> int G6 = Integer . parseInt ( M0 . getDate ) ;  <CR> int J4 = S8 - G6 ;  <CR> }  <CR> Card ( Letter J9 ) {  <CR> this . letter = J9 ;  <CR> }  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short G0 ) {  <CR> return list [ G0 ] ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o8 , String Y , String v1 , String B7 , String Z7 ) {  <CR> super ( o8 , Y , v1 , B7 , Z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String c0 , String U4 , String R8 , String X0 , String E3 ) {  <CR> super ( c0 , U4 , R8 , X0 , E3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String H9 , String G0 , Letter J4 ) {  <CR> this . senderAddr = H9 ;  <CR> this . receiverAddr = G0 ;  <CR> this . letter = J4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String c2 , String n1 , String w8 , String g6 , String e3 ) {  <CR> this . title = c2 ;  <CR> this . receiver = n1 ;  <CR> this . content = w8 ;  <CR> this . sender = g6 ;  <CR> this . date = e3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int R9 ) {  <CR> if ( R9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] U8 ) {  <CR> Letter x0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop P8 = new Envelop ( "Taipei" , "Kaohsiung" , x0 ) ;  <CR> P8 . display ( ) ;  <CR> x0 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 