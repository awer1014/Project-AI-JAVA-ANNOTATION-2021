 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> public int compareTo ( Object U6 ) {  <CR> Card y = ( Card ) U6 ;  <CR> int d7 = Integer . parseInt ( this . getDate ) ;  <CR> int M0 = Integer . parseInt ( y . getDate ) ;  <CR> int z2 = d7 - M0 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter b2 ) {  <CR> this . letter = b2 ;  <CR> }  <CR> public static String listsAsString ( short E7 ) {  <CR> return list [ E7 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U1 , String V9 , String A1 , String p7 , String g1 ) {  <CR> super ( U1 , V9 , A1 , p7 , g1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O9 , String r4 , String B2 , String m5 , String l5 ) {  <CR> super ( O9 , r4 , B2 , m5 , l5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String G8 , String l4 , Letter K3 ) {  <CR> this . senderAddr = G8 ;  <CR> this . receiverAddr = l4 ;  <CR> this . letter = K3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String V4 , String C0 , String W , String d8 , String e5 ) {  <CR> this . title = V4 ;  <CR> this . receiver = C0 ;  <CR> this . content = W ;  <CR> this . sender = d8 ;  <CR> this . date = e5 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int B7 ) {  <CR> if ( B7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] F0 ) {  <CR> Letter x1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y6 = new Envelop ( "Taipei" , "Kaohsiung" , x1 ) ;  <CR> Y6 . display ( ) ;  <CR> x1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 