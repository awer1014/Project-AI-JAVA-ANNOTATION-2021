 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object n4 ) {  <CR> Card N9 = ( Card ) n4 ;  <CR> int A = Integer . parseInt ( this . getDate ) ;  <CR> int H6 = Integer . parseInt ( N9 . getDate ) ;  <CR> int q4 = A - H6 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public static String listsAsString ( short B5 ) {  <CR> return list [ B5 ] ;  <CR> }  <CR> Card ( Letter O2 ) {  <CR> this . letter = O2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W2 , String M9 , String Z5 , String d7 , String X8 ) {  <CR> super ( W2 , M9 , Z5 , d7 , X8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k5 , String y3 , String R2 , String P , String u8 ) {  <CR> super ( k5 , y3 , R2 , P , u8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String B4 , String W6 , Letter u4 ) {  <CR> this . senderAddr = B4 ;  <CR> this . receiverAddr = W6 ;  <CR> this . letter = u4 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int X9 ) {  <CR> if ( X9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String t0 , String v3 , String N1 , String h5 , String G1 ) {  <CR> this . title = t0 ;  <CR> this . receiver = v3 ;  <CR> this . content = N1 ;  <CR> this . sender = h5 ;  <CR> this . date = G1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] i7 ) {  <CR> Letter k3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop u = new Envelop ( "Taipei" , "Kaohsiung" , k3 ) ;  <CR> u . display ( ) ;  <CR> k3 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 