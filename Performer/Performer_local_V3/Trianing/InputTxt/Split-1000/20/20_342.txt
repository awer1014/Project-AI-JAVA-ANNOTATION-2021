 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short N4 ) {  <CR> return list [ N4 ] ;  <CR> }  <CR> private short lists ;  <CR> public int compareTo ( Object h8 ) {  <CR> Card d7 = ( Card ) h8 ;  <CR> int a8 = Integer . parseInt ( this . getDate ) ;  <CR> int J6 = Integer . parseInt ( d7 . getDate ) ;  <CR> int l3 = a8 - J6 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter v5 ) {  <CR> this . letter = v5 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l7 , String s3 , String v , String y2 , String T1 ) {  <CR> super ( l7 , s3 , v , y2 , T1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String a9 , String Y2 , String H9 , String k2 , String L8 ) {  <CR> super ( a9 , Y2 , H9 , k2 , L8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String l5 , String T4 , Letter j5 ) {  <CR> this . senderAddr = l5 ;  <CR> this . receiverAddr = T4 ;  <CR> this . letter = j5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String T0 , String b0 , String K2 , String Y6 , String m2 ) {  <CR> this . title = T0 ;  <CR> this . receiver = b0 ;  <CR> this . content = K2 ;  <CR> this . sender = Y6 ;  <CR> this . date = m2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int k1 ) {  <CR> if ( k1 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] m8 ) {  <CR> Letter D = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop g2 = new Envelop ( "Taipei" , "Kaohsiung" , D ) ;  <CR> g2 . display ( ) ;  <CR> D . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 