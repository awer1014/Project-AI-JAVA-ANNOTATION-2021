 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object Y6 ) {  <CR> Card G = ( Card ) Y6 ;  <CR> int O1 = Integer . parseInt ( this . getDate ) ;  <CR> int y2 = Integer . parseInt ( G . getDate ) ;  <CR> int R4 = O1 - y2 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter v4 ) {  <CR> this . letter = v4 ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short z5 ) {  <CR> return list [ z5 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R9 , String K0 , String l3 , String g2 , String y4 ) {  <CR> super ( R9 , K0 , l3 , g2 , y4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k7 , String D3 , String a1 , String L8 , String T3 ) {  <CR> super ( k7 , D3 , a1 , L8 , T3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String J2 , String Y8 , Letter O ) {  <CR> this . senderAddr = J2 ;  <CR> this . receiverAddr = Y8 ;  <CR> this . letter = O ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int i8 ) {  <CR> if ( i8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String A8 , String o7 , String c , String a2 , String E3 ) {  <CR> this . title = A8 ;  <CR> this . receiver = o7 ;  <CR> this . content = c ;  <CR> this . sender = a2 ;  <CR> this . date = E3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] d2 ) {  <CR> Letter m5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Z5 = new Envelop ( "Taipei" , "Kaohsiung" , m5 ) ;  <CR> Z5 . display ( ) ;  <CR> m5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 