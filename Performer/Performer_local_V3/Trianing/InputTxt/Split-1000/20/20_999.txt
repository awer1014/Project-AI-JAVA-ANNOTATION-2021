 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> public static String listsAsString ( short l8 ) {  <CR> return list [ l8 ] ;  <CR> }  <CR> public int compareTo ( Object s6 ) {  <CR> Card E5 = ( Card ) s6 ;  <CR> int B5 = Integer . parseInt ( this . getDate ) ;  <CR> int J0 = Integer . parseInt ( E5 . getDate ) ;  <CR> int e6 = B5 - J0 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> Card ( Letter O7 ) {  <CR> this . letter = O7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String G9 , String u9 , String A , String C7 , String u8 ) {  <CR> super ( G9 , u9 , A , C7 , u8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L5 , String i2 , String q1 , String h2 , String b5 ) {  <CR> super ( L5 , i2 , q1 , h2 , b5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String K3 , String e7 , Letter p9 ) {  <CR> this . senderAddr = K3 ;  <CR> this . receiverAddr = e7 ;  <CR> this . letter = p9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String w2 , String D4 , String i6 , String Y2 , String l2 ) {  <CR> this . title = w2 ;  <CR> this . receiver = D4 ;  <CR> this . content = i6 ;  <CR> this . sender = Y2 ;  <CR> this . date = l2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int M2 ) {  <CR> if ( M2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] k5 ) {  <CR> Letter c4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop a1 = new Envelop ( "Taipei" , "Kaohsiung" , c4 ) ;  <CR> a1 . display ( ) ;  <CR> c4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 