 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object H9 ) {  <CR> Card X1 = ( Card ) H9 ;  <CR> int X5 = Integer . parseInt ( this . getDate ) ;  <CR> int i9 = Integer . parseInt ( X1 . getDate ) ;  <CR> int c1 = X5 - i9 ;  <CR> }  <CR> Card ( Letter O2 ) {  <CR> this . letter = O2 ;  <CR> }  <CR> private short lists ;  <CR> public static String listsAsString ( short h4 ) {  <CR> return list [ h4 ] ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String r5 , String n8 , String h5 , String C6 , String b7 ) {  <CR> super ( r5 , n8 , h5 , C6 , b7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b1 , String z1 , String Y9 , String n , String H0 ) {  <CR> super ( b1 , z1 , Y9 , n , H0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String P3 , String L0 , Letter z7 ) {  <CR> this . senderAddr = P3 ;  <CR> this . receiverAddr = L0 ;  <CR> this . letter = z7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String y0 , String Y9 , String J6 , String j9 , String m0 ) {  <CR> this . title = y0 ;  <CR> this . receiver = Y9 ;  <CR> this . content = J6 ;  <CR> this . sender = j9 ;  <CR> this . date = m0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int T7 ) {  <CR> if ( T7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] X2 ) {  <CR> Letter Z1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop N4 = new Envelop ( "Taipei" , "Kaohsiung" , Z1 ) ;  <CR> N4 . display ( ) ;  <CR> Z1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 