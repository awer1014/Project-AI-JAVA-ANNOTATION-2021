 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object V2 ) {  <CR> Card n2 = ( Card ) V2 ;  <CR> int e7 = Integer . parseInt ( this . getDate ) ;  <CR> int C8 = Integer . parseInt ( n2 . getDate ) ;  <CR> int z7 = e7 - C8 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> Card ( Letter c6 ) {  <CR> this . letter = c6 ;  <CR> }  <CR> public static String listsAsString ( short U2 ) {  <CR> return list [ U2 ] ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String p8 , String U3 , String A4 , String K , String L1 ) {  <CR> super ( p8 , U3 , A4 , K , L1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String M3 , String j0 , String q0 , String Q7 , String b ) {  <CR> super ( M3 , j0 , q0 , Q7 , b ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String a4 , String V0 , Letter P0 ) {  <CR> this . senderAddr = a4 ;  <CR> this . receiverAddr = V0 ;  <CR> this . letter = P0 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int y4 ) {  <CR> if ( y4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String U4 , String R9 , String T2 , String n2 , String U7 ) {  <CR> this . title = U4 ;  <CR> this . receiver = R9 ;  <CR> this . content = T2 ;  <CR> this . sender = n2 ;  <CR> this . date = U7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] c ) {  <CR> Letter u2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop k7 = new Envelop ( "Taipei" , "Kaohsiung" , u2 ) ;  <CR> k7 . display ( ) ;  <CR> u2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 