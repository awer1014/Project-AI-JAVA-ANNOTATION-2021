 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> Card ( Letter J4 ) {  <CR> this . letter = J4 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short j ) {  <CR> return list [ j ] ;  <CR> }  <CR> public int compareTo ( Object i7 ) {  <CR> Card i1 = ( Card ) i7 ;  <CR> int s7 = Integer . parseInt ( this . getDate ) ;  <CR> int S0 = Integer . parseInt ( i1 . getDate ) ;  <CR> int R5 = s7 - S0 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T4 , String M8 , String N0 , String L7 , String Q0 ) {  <CR> super ( T4 , M8 , N0 , L7 , Q0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String n7 , String S0 , String G2 , String x7 , String V2 ) {  <CR> super ( n7 , S0 , G2 , x7 , V2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String F3 , String Y7 , Letter f8 ) {  <CR> this . senderAddr = F3 ;  <CR> this . receiverAddr = Y7 ;  <CR> this . letter = f8 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String H4 , String O5 , String m6 , String t2 , String m3 ) {  <CR> this . title = H4 ;  <CR> this . receiver = O5 ;  <CR> this . content = m6 ;  <CR> this . sender = t2 ;  <CR> this . date = m3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int P8 ) {  <CR> if ( P8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] D3 ) {  <CR> Letter d6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop v4 = new Envelop ( "Taipei" , "Kaohsiung" , d6 ) ;  <CR> v4 . display ( ) ;  <CR> d6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 