 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter M8 ) {  <CR> this . letter = M8 ;  <CR> }  <CR> private short lists ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object J8 ) {  <CR> Card U = ( Card ) J8 ;  <CR> int x = Integer . parseInt ( this . getDate ) ;  <CR> int t8 = Integer . parseInt ( U . getDate ) ;  <CR> int V7 = x - t8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short m3 ) {  <CR> return list [ m3 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W5 , String t9 , String t7 , String G8 , String N3 ) {  <CR> super ( W5 , t9 , t7 , G8 , N3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String A6 , String e3 , String o1 , String G7 , String O3 ) {  <CR> super ( A6 , e3 , o1 , G7 , O3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String N3 , String m , Letter t3 ) {  <CR> this . senderAddr = N3 ;  <CR> this . receiverAddr = m ;  <CR> this . letter = t3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int N8 ) {  <CR> if ( N8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String O4 , String p9 , String S8 , String v6 , String d2 ) {  <CR> this . title = O4 ;  <CR> this . receiver = p9 ;  <CR> this . content = S8 ;  <CR> this . sender = v6 ;  <CR> this . date = d2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] d3 ) {  <CR> Letter S7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop g8 = new Envelop ( "Taipei" , "Kaohsiung" , S7 ) ;  <CR> g8 . display ( ) ;  <CR> S7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 