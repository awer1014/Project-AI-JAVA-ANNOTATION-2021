 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object T6 ) {  <CR> Card S7 = ( Card ) T6 ;  <CR> int E1 = Integer . parseInt ( this . getDate ) ;  <CR> int Y8 = Integer . parseInt ( S7 . getDate ) ;  <CR> int Y2 = E1 - Y8 ;  <CR> }  <CR> Card ( Letter a9 ) {  <CR> this . letter = a9 ;  <CR> }  <CR> public static String listsAsString ( short f6 ) {  <CR> return list [ f6 ] ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String x4 , String V9 , String h1 , String K6 , String M8 ) {  <CR> super ( x4 , V9 , h1 , K6 , M8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g5 , String n1 , String o6 , String S3 , String L5 ) {  <CR> super ( g5 , n1 , o6 , S3 , L5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String O8 , String O5 , Letter C ) {  <CR> this . senderAddr = O8 ;  <CR> this . receiverAddr = O5 ;  <CR> this . letter = C ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int U4 ) {  <CR> if ( U4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String O1 , String u9 , String K3 , String H9 , String a9 ) {  <CR> this . title = O1 ;  <CR> this . receiver = u9 ;  <CR> this . content = K3 ;  <CR> this . sender = H9 ;  <CR> this . date = a9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] R1 ) {  <CR> Letter o5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o6 = new Envelop ( "Taipei" , "Kaohsiung" , o5 ) ;  <CR> o6 . display ( ) ;  <CR> o5 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 