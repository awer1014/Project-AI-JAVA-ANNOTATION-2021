 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short R8 ) {  <CR> return list [ R8 ] ;  <CR> }  <CR> public int compareTo ( Object s2 ) {  <CR> Card p4 = ( Card ) s2 ;  <CR> int F8 = Integer . parseInt ( this . getDate ) ;  <CR> int H9 = Integer . parseInt ( p4 . getDate ) ;  <CR> int y4 = F8 - H9 ;  <CR> }  <CR> Letter letter ;  <CR> Card ( Letter c3 ) {  <CR> this . letter = c3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String t7 , String w5 , String a4 , String q5 , String c ) {  <CR> super ( t7 , w5 , a4 , q5 , c ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String z2 , String O0 , String g , String A1 , String T4 ) {  <CR> super ( z2 , O0 , g , A1 , T4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String r7 , String m , Letter l2 ) {  <CR> this . senderAddr = r7 ;  <CR> this . receiverAddr = m ;  <CR> this . letter = l2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int c9 ) {  <CR> if ( c9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String K6 , String Z3 , String s2 , String d7 , String o1 ) {  <CR> this . title = K6 ;  <CR> this . receiver = Z3 ;  <CR> this . content = s2 ;  <CR> this . sender = d7 ;  <CR> this . date = o1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] K6 ) {  <CR> Letter d4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Q6 = new Envelop ( "Taipei" , "Kaohsiung" , d4 ) ;  <CR> Q6 . display ( ) ;  <CR> d4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 