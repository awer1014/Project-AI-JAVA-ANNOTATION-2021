 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter D9 ) {  <CR> this . letter = D9 ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object f2 ) {  <CR> Card Q8 = ( Card ) f2 ;  <CR> int R4 = Integer . parseInt ( this . getDate ) ;  <CR> int G9 = Integer . parseInt ( Q8 . getDate ) ;  <CR> int l4 = R4 - G9 ;  <CR> }  <CR> public static String listsAsString ( short F2 ) {  <CR> return list [ F2 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String H1 , String J3 , String g8 , String e8 , String K6 ) {  <CR> super ( H1 , J3 , g8 , e8 , K6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String I1 , String M2 , String o5 , String x3 , String a7 ) {  <CR> super ( I1 , M2 , o5 , x3 , a7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String U3 , String W6 , Letter N4 ) {  <CR> this . senderAddr = U3 ;  <CR> this . receiverAddr = W6 ;  <CR> this . letter = N4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String I5 , String y , String k0 , String r8 , String g7 ) {  <CR> this . title = I5 ;  <CR> this . receiver = y ;  <CR> this . content = k0 ;  <CR> this . sender = r8 ;  <CR> this . date = g7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int J2 ) {  <CR> if ( J2 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] q6 ) {  <CR> Letter x2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Q7 = new Envelop ( "Taipei" , "Kaohsiung" , x2 ) ;  <CR> Q7 . display ( ) ;  <CR> x2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 