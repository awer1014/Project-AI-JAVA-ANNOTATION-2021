 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter B9 ) {  <CR> this . letter = B9 ;  <CR> }  <CR> public static String listsAsString ( short v6 ) {  <CR> return list [ v6 ] ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object A0 ) {  <CR> Card T8 = ( Card ) A0 ;  <CR> int R9 = Integer . parseInt ( this . getDate ) ;  <CR> int m2 = Integer . parseInt ( T8 . getDate ) ;  <CR> int W8 = R9 - m2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String G3 , String X3 , String f6 , String k8 , String d5 ) {  <CR> super ( G3 , X3 , f6 , k8 , d5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String a0 , String g2 , String R7 , String j3 , String r6 ) {  <CR> super ( a0 , g2 , R7 , j3 , r6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String g9 , String a0 , Letter O ) {  <CR> this . senderAddr = g9 ;  <CR> this . receiverAddr = a0 ;  <CR> this . letter = O ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String k6 , String V8 , String u6 , String I6 , String j1 ) {  <CR> this . title = k6 ;  <CR> this . receiver = V8 ;  <CR> this . content = u6 ;  <CR> this . sender = I6 ;  <CR> this . date = j1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int m3 ) {  <CR> if ( m3 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] x2 ) {  <CR> Letter S7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop n2 = new Envelop ( "Taipei" , "Kaohsiung" , S7 ) ;  <CR> n2 . display ( ) ;  <CR> S7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 