 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter g4 ) {  <CR> this . letter = g4 ;  <CR> }  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public static String listsAsString ( short T4 ) {  <CR> return list [ T4 ] ;  <CR> }  <CR> public int compareTo ( Object H4 ) {  <CR> Card W2 = ( Card ) H4 ;  <CR> int Y3 = Integer . parseInt ( this . getDate ) ;  <CR> int X1 = Integer . parseInt ( W2 . getDate ) ;  <CR> int t3 = Y3 - X1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z7 , String s5 , String D0 , String a8 , String w1 ) {  <CR> super ( Z7 , s5 , D0 , a8 , w1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N3 , String H3 , String p2 , String W , String V3 ) {  <CR> super ( N3 , H3 , p2 , W , V3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String S7 , String p0 , Letter P ) {  <CR> this . senderAddr = S7 ;  <CR> this . receiverAddr = p0 ;  <CR> this . letter = P ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int b8 ) {  <CR> if ( b8 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String w6 , String m4 , String A5 , String V8 , String i9 ) {  <CR> this . title = w6 ;  <CR> this . receiver = m4 ;  <CR> this . content = A5 ;  <CR> this . sender = V8 ;  <CR> this . date = i9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] S5 ) {  <CR> Letter j6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop C7 = new Envelop ( "Taipei" , "Kaohsiung" , j6 ) ;  <CR> C7 . display ( ) ;  <CR> j6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 