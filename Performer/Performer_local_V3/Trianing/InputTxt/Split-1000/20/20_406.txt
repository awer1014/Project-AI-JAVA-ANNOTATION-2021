 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short T1 ) {  <CR> return list [ T1 ] ;  <CR> }  <CR> public int compareTo ( Object X0 ) {  <CR> Card k2 = ( Card ) X0 ;  <CR> int X = Integer . parseInt ( this . getDate ) ;  <CR> int q8 = Integer . parseInt ( k2 . getDate ) ;  <CR> int Z5 = X - q8 ;  <CR> }  <CR> Letter letter ;  <CR> private short lists ;  <CR> Card ( Letter v4 ) {  <CR> this . letter = v4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String q3 , String r1 , String d7 , String m7 , String S7 ) {  <CR> super ( q3 , r1 , d7 , m7 , S7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String E3 , String J1 , String g6 , String j5 , String l9 ) {  <CR> super ( E3 , J1 , g6 , j5 , l9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String a4 , String S8 , Letter K3 ) {  <CR> this . senderAddr = a4 ;  <CR> this . receiverAddr = S8 ;  <CR> this . letter = K3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> void display ( int p6 ) {  <CR> if ( p6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String x , String n8 , String i6 , String b3 , String B ) {  <CR> this . title = x ;  <CR> this . receiver = n8 ;  <CR> this . content = i6 ;  <CR> this . sender = b3 ;  <CR> this . date = B ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] t7 ) {  <CR> Letter Z = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop a7 = new Envelop ( "Taipei" , "Kaohsiung" , Z ) ;  <CR> a7 . display ( ) ;  <CR> Z . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 