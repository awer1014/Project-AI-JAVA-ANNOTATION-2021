 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short r8 ) {  <CR> return list [ r8 ] ;  <CR> }  <CR> private short lists ;  <CR> Card ( Letter M6 ) {  <CR> this . letter = M6 ;  <CR> }  <CR> public int compareTo ( Object e9 ) {  <CR> Card N6 = ( Card ) e9 ;  <CR> int t9 = Integer . parseInt ( this . getDate ) ;  <CR> int i2 = Integer . parseInt ( N6 . getDate ) ;  <CR> int T8 = t9 - i2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String x9 , String g , String s5 , String L1 , String w ) {  <CR> super ( x9 , g , s5 , L1 , w ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String d8 , String w , String v9 , String Q5 , String V3 ) {  <CR> super ( d8 , w , v9 , Q5 , V3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String H0 , String c0 , Letter n ) {  <CR> this . senderAddr = H0 ;  <CR> this . receiverAddr = c0 ;  <CR> this . letter = n ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String L8 , String O3 , String u6 , String p0 , String I9 ) {  <CR> this . title = L8 ;  <CR> this . receiver = O3 ;  <CR> this . content = u6 ;  <CR> this . sender = p0 ;  <CR> this . date = I9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int W6 ) {  <CR> if ( W6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] Q7 ) {  <CR> Letter Q4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop m9 = new Envelop ( "Taipei" , "Kaohsiung" , Q4 ) ;  <CR> m9 . display ( ) ;  <CR> Q4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 