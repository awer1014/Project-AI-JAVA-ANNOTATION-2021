 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public int compareTo ( Object s4 ) {  <CR> Card b8 = ( Card ) s4 ;  <CR> int b6 = Integer . parseInt ( this . getDate ) ;  <CR> int Z3 = Integer . parseInt ( b8 . getDate ) ;  <CR> int e8 = b6 - Z3 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> private short lists ;  <CR> public static String listsAsString ( short c4 ) {  <CR> return list [ c4 ] ;  <CR> }  <CR> Card ( Letter P0 ) {  <CR> this . letter = P0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String m6 , String q5 , String z9 , String x4 , String K9 ) {  <CR> super ( m6 , q5 , z9 , x4 , K9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String u6 , String G4 , String O5 , String Y8 , String q4 ) {  <CR> super ( u6 , G4 , O5 , Y8 , q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String f6 , String E , Letter H2 ) {  <CR> this . senderAddr = f6 ;  <CR> this . receiverAddr = E ;  <CR> this . letter = H2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String T8 , String e9 , String y8 , String e2 , String g2 ) {  <CR> this . title = T8 ;  <CR> this . receiver = e9 ;  <CR> this . content = y8 ;  <CR> this . sender = e2 ;  <CR> this . date = g2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int b9 ) {  <CR> if ( b9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] J9 ) {  <CR> Letter B6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop C0 = new Envelop ( "Taipei" , "Kaohsiung" , B6 ) ;  <CR> C0 . display ( ) ;  <CR> B6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 