 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public static String listsAsString ( short V8 ) {  <CR> return list [ V8 ] ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object A4 ) {  <CR> Card E4 = ( Card ) A4 ;  <CR> int P0 = Integer . parseInt ( this . getDate ) ;  <CR> int r8 = Integer . parseInt ( E4 . getDate ) ;  <CR> int z2 = P0 - r8 ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter j9 ) {  <CR> this . letter = j9 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String f0 , String h4 , String l , String E9 , String t2 ) {  <CR> super ( f0 , h4 , l , E9 , t2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String t6 , String J3 , String s1 , String q4 , String e2 ) {  <CR> super ( t6 , J3 , s1 , q4 , e2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String V4 , String m6 , Letter P3 ) {  <CR> this . senderAddr = V4 ;  <CR> this . receiverAddr = m6 ;  <CR> this . letter = P3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String v7 , String y7 , String E5 , String k6 , String O6 ) {  <CR> this . title = v7 ;  <CR> this . receiver = y7 ;  <CR> this . content = E5 ;  <CR> this . sender = k6 ;  <CR> this . date = O6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int p3 ) {  <CR> if ( p3 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] f4 ) {  <CR> Letter P2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop f9 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> f9 . display ( ) ;  <CR> P2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 