 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public static String listsAsString ( short r1 ) {  <CR> return list [ r1 ] ;  <CR> }  <CR> public int compareTo ( Object m3 ) {  <CR> Card z0 = ( Card ) m3 ;  <CR> int J1 = Integer . parseInt ( this . getDate ) ;  <CR> int d1 = Integer . parseInt ( z0 . getDate ) ;  <CR> int G7 = J1 - d1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter p1 ) {  <CR> this . letter = p1 ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String S6 , String b4 , String L8 , String U5 , String X7 ) {  <CR> super ( S6 , b4 , L8 , U5 , X7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s6 , String L2 , String h1 , String D2 , String T ) {  <CR> super ( s6 , L2 , h1 , D2 , T ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String o9 , String D6 , Letter O ) {  <CR> this . senderAddr = o9 ;  <CR> this . receiverAddr = D6 ;  <CR> this . letter = O ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int l7 ) {  <CR> if ( l7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String X2 , String s7 , String k9 , String a6 , String I0 ) {  <CR> this . title = X2 ;  <CR> this . receiver = s7 ;  <CR> this . content = k9 ;  <CR> this . sender = a6 ;  <CR> this . date = I0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] t8 ) {  <CR> Letter S6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Z8 = new Envelop ( "Taipei" , "Kaohsiung" , S6 ) ;  <CR> Z8 . display ( ) ;  <CR> S6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 