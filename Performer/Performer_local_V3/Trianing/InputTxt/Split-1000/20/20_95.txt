 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Card ( Letter H8 ) {  <CR> this . letter = H8 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object X1 ) {  <CR> Card e4 = ( Card ) X1 ;  <CR> int t8 = Integer . parseInt ( this . getDate ) ;  <CR> int o4 = Integer . parseInt ( e4 . getDate ) ;  <CR> int a9 = t8 - o4 ;  <CR> }  <CR> private short lists ;  <CR> public static String listsAsString ( short F7 ) {  <CR> return list [ F7 ] ;  <CR> }  <CR> Letter letter ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R2 , String w4 , String A8 , String D9 , String R4 ) {  <CR> super ( R2 , w4 , A8 , D9 , R4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String C9 , String S2 , String v6 , String U , String n7 ) {  <CR> super ( C9 , S2 , v6 , U , n7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String B5 , String c7 , Letter c0 ) {  <CR> this . senderAddr = B5 ;  <CR> this . receiverAddr = c7 ;  <CR> this . letter = c0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int z6 ) {  <CR> if ( z6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String S5 , String J1 , String A2 , String M3 , String i0 ) {  <CR> this . title = S5 ;  <CR> this . receiver = J1 ;  <CR> this . content = A2 ;  <CR> this . sender = M3 ;  <CR> this . date = i0 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] A0 ) {  <CR> Letter M2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop H6 = new Envelop ( "Taipei" , "Kaohsiung" , M2 ) ;  <CR> H6 . display ( ) ;  <CR> M2 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 