 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> Card ( Letter P7 ) {  <CR> this . letter = P7 ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short t7 ) {  <CR> return list [ t7 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object C1 ) {  <CR> Card S = ( Card ) C1 ;  <CR> int A3 = Integer . parseInt ( this . getDate ) ;  <CR> int k6 = Integer . parseInt ( S . getDate ) ;  <CR> int j0 = A3 - k6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String w7 , String C3 , String i6 , String y2 , String b ) {  <CR> super ( w7 , C3 , i6 , y2 , b ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s5 , String R1 , String y2 , String j , String t9 ) {  <CR> super ( s5 , R1 , y2 , j , t9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String N , String o1 , Letter Q7 ) {  <CR> this . senderAddr = N ;  <CR> this . receiverAddr = o1 ;  <CR> this . letter = Q7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int L4 ) {  <CR> if ( L4 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String K9 , String E8 , String d4 , String J0 , String C4 ) {  <CR> this . title = K9 ;  <CR> this . receiver = E8 ;  <CR> this . content = d4 ;  <CR> this . sender = J0 ;  <CR> this . date = C4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] B4 ) {  <CR> Letter W7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Z = new Envelop ( "Taipei" , "Kaohsiung" , W7 ) ;  <CR> Z . display ( ) ;  <CR> W7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 