 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> Card ( Letter b7 ) {  <CR> this . letter = b7 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object B6 ) {  <CR> Card L2 = ( Card ) B6 ;  <CR> int v3 = Integer . parseInt ( this . getDate ) ;  <CR> int f5 = Integer . parseInt ( L2 . getDate ) ;  <CR> int k3 = v3 - f5 ;  <CR> }  <CR> public static String listsAsString ( short q ) {  <CR> return list [ q ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String w6 , String K4 , String h1 , String m4 , String J0 ) {  <CR> super ( w6 , K4 , h1 , m4 , J0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b6 , String W8 , String E1 , String Z6 , String Q9 ) {  <CR> super ( b6 , W8 , E1 , Z6 , Q9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String t7 , String E7 , Letter Y7 ) {  <CR> this . senderAddr = t7 ;  <CR> this . receiverAddr = E7 ;  <CR> this . letter = Y7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int l9 ) {  <CR> if ( l9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String d0 , String K6 , String u5 , String Q5 , String Y8 ) {  <CR> this . title = d0 ;  <CR> this . receiver = K6 ;  <CR> this . content = u5 ;  <CR> this . sender = Q5 ;  <CR> this . date = Y8 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] w9 ) {  <CR> Letter X6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop u6 = new Envelop ( "Taipei" , "Kaohsiung" , X6 ) ;  <CR> u6 . display ( ) ;  <CR> X6 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 