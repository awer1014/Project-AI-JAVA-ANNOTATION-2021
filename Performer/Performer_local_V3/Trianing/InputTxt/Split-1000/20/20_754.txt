 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Card ( Letter P6 ) {  <CR> this . letter = P6 ;  <CR> }  <CR> public static String listsAsString ( short g ) {  <CR> return list [ g ] ;  <CR> }  <CR> public int compareTo ( Object D3 ) {  <CR> Card H5 = ( Card ) D3 ;  <CR> int z7 = Integer . parseInt ( this . getDate ) ;  <CR> int F3 = Integer . parseInt ( H5 . getDate ) ;  <CR> int U4 = z7 - F3 ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String i5 , String O0 , String X , String w6 , String D3 ) {  <CR> super ( i5 , O0 , X , w6 , D3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k5 , String O2 , String q5 , String Q8 , String z3 ) {  <CR> super ( k5 , O2 , q5 , Q8 , z3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String A4 , String k8 , Letter T9 ) {  <CR> this . senderAddr = A4 ;  <CR> this . receiverAddr = k8 ;  <CR> this . letter = T9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int L7 ) {  <CR> if ( L7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> Letter ( String g7 , String A1 , String e3 , String a1 , String D0 ) {  <CR> this . title = g7 ;  <CR> this . receiver = A1 ;  <CR> this . content = e3 ;  <CR> this . sender = a1 ;  <CR> this . date = D0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] t1 ) {  <CR> Letter k8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Q7 = new Envelop ( "Taipei" , "Kaohsiung" , k8 ) ;  <CR> Q7 . display ( ) ;  <CR> k8 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 