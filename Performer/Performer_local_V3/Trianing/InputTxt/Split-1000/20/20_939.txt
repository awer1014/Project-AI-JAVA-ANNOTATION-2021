 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> public int compareTo ( Object s9 ) {  <CR> Card a3 = ( Card ) s9 ;  <CR> int f7 = Integer . parseInt ( this . getDate ) ;  <CR> int t7 = Integer . parseInt ( a3 . getDate ) ;  <CR> int a8 = f7 - t7 ;  <CR> }  <CR> Card ( Letter r5 ) {  <CR> this . letter = r5 ;  <CR> }  <CR> public static String listsAsString ( short S5 ) {  <CR> return list [ S5 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String s5 , String z0 , String i7 , String S8 , String o7 ) {  <CR> super ( s5 , z0 , i7 , S8 , o7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String T9 , String Y0 , String F2 , String Y6 , String M8 ) {  <CR> super ( T9 , Y0 , F2 , Y6 , M8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String P0 , String O2 , Letter U2 ) {  <CR> this . senderAddr = P0 ;  <CR> this . receiverAddr = O2 ;  <CR> this . letter = U2 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int F3 ) {  <CR> if ( F3 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String R9 , String E0 , String X9 , String A3 , String o3 ) {  <CR> this . title = R9 ;  <CR> this . receiver = E0 ;  <CR> this . content = X9 ;  <CR> this . sender = A3 ;  <CR> this . date = o3 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] C5 ) {  <CR> Letter y4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop z2 = new Envelop ( "Taipei" , "Kaohsiung" , y4 ) ;  <CR> z2 . display ( ) ;  <CR> y4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 