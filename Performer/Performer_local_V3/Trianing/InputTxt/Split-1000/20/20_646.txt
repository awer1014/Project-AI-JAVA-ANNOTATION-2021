 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> private short lists ;  <CR> Card ( Letter m7 ) {  <CR> this . letter = m7 ;  <CR> }  <CR> public static String listsAsString ( short f6 ) {  <CR> return list [ f6 ] ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Letter letter ;  <CR> public int compareTo ( Object Z9 ) {  <CR> Card G1 = ( Card ) Z9 ;  <CR> int Y0 = Integer . parseInt ( this . getDate ) ;  <CR> int Z = Integer . parseInt ( G1 . getDate ) ;  <CR> int D3 = Y0 - Z ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String P3 , String d0 , String q4 , String a5 , String H8 ) {  <CR> super ( P3 , d0 , q4 , a5 , H8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String f8 , String y5 , String X1 , String S1 , String O9 ) {  <CR> super ( f8 , y5 , X1 , S1 , O9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Envelop ( String k1 , String L5 , Letter L2 ) {  <CR> this . senderAddr = k1 ;  <CR> this . receiverAddr = L5 ;  <CR> this . letter = L2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String h1 , String d9 , String o5 , String W1 , String y6 ) {  <CR> this . title = h1 ;  <CR> this . receiver = d9 ;  <CR> this . content = o5 ;  <CR> this . sender = W1 ;  <CR> this . date = y6 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int I6 ) {  <CR> if ( I6 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] z8 ) {  <CR> Letter D9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x0 = new Envelop ( "Taipei" , "Kaohsiung" , D9 ) ;  <CR> x0 . display ( ) ;  <CR> D9 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 