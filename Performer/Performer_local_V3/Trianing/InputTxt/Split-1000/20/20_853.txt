 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object W2 ) {  <CR> Card R = ( Card ) W2 ;  <CR> int a7 = Integer . parseInt ( this . getDate ) ;  <CR> int w2 = Integer . parseInt ( R . getDate ) ;  <CR> int T3 = a7 - w2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> Card ( Letter g2 ) {  <CR> this . letter = g2 ;  <CR> }  <CR> public static String listsAsString ( short u6 ) {  <CR> return list [ u6 ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l , String d8 , String u1 , String n0 , String a3 ) {  <CR> super ( l , d8 , u1 , n0 , a3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String h2 , String D0 , String V9 , String M0 , String n2 ) {  <CR> super ( h2 , D0 , V9 , M0 , n2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String O4 , String s5 , Letter b6 ) {  <CR> this . senderAddr = O4 ;  <CR> this . receiverAddr = s5 ;  <CR> this . letter = b6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int G ) {  <CR> if ( G == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String i1 , String i7 , String a9 , String E8 , String d7 ) {  <CR> this . title = i1 ;  <CR> this . receiver = i7 ;  <CR> this . content = a9 ;  <CR> this . sender = E8 ;  <CR> this . date = d7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] m9 ) {  <CR> Letter F4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop X4 = new Envelop ( "Taipei" , "Kaohsiung" , F4 ) ;  <CR> X4 . display ( ) ;  <CR> F4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 