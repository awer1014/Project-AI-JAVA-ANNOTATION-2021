 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short M9 ) {  <CR> return list [ M9 ] ;  <CR> }  <CR> Card ( Letter f1 ) {  <CR> this . letter = f1 ;  <CR> }  <CR> private short lists ;  <CR> Letter letter ;  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public int compareTo ( Object j3 ) {  <CR> Card g2 = ( Card ) j3 ;  <CR> int d6 = Integer . parseInt ( this . getDate ) ;  <CR> int k1 = Integer . parseInt ( g2 . getDate ) ;  <CR> int r6 = d6 - k1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Y1 , String E3 , String D9 , String w1 , String p7 ) {  <CR> super ( Y1 , E3 , D9 , w1 , p7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O5 , String g0 , String F , String n , String e7 ) {  <CR> super ( O5 , g0 , F , n , e7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String k5 , String Q4 , Letter t6 ) {  <CR> this . senderAddr = k5 ;  <CR> this . receiverAddr = Q4 ;  <CR> this . letter = t6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String title , receiver , content , sender , date ;  <CR> void display ( int g9 ) {  <CR> if ( g9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String b5 , String m1 , String v1 , String B1 , String a5 ) {  <CR> this . title = b5 ;  <CR> this . receiver = m1 ;  <CR> this . content = v1 ;  <CR> this . sender = B1 ;  <CR> this . date = a5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] K0 ) {  <CR> Letter n7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop s7 = new Envelop ( "Taipei" , "Kaohsiung" , n7 ) ;  <CR> s7 . display ( ) ;  <CR> n7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 