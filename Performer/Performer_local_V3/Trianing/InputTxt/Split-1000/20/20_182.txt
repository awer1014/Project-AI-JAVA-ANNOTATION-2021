 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> Letter letter ;  <CR> public int compareTo ( Object w7 ) {  <CR> Card c6 = ( Card ) w7 ;  <CR> int u1 = Integer . parseInt ( this . getDate ) ;  <CR> int v6 = Integer . parseInt ( c6 . getDate ) ;  <CR> int j9 = u1 - v6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> public static String listsAsString ( short f5 ) {  <CR> return list [ f5 ] ;  <CR> }  <CR> Card ( Letter O5 ) {  <CR> this . letter = O5 ;  <CR> }  <CR> private short lists ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String q0 , String P1 , String x4 , String r5 , String f7 ) {  <CR> super ( q0 , P1 , x4 , r5 , f7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D9 , String y3 , String q9 , String F9 , String A7 ) {  <CR> super ( D9 , y3 , q9 , F9 , A7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> Envelop ( String R , String b2 , Letter g1 ) {  <CR> this . senderAddr = R ;  <CR> this . receiverAddr = b2 ;  <CR> this . letter = g1 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String o1 , String E4 , String m9 , String Q8 , String x7 ) {  <CR> this . title = o1 ;  <CR> this . receiver = E4 ;  <CR> this . content = m9 ;  <CR> this . sender = Q8 ;  <CR> this . date = x7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> void display ( int x1 ) {  <CR> if ( x1 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] G6 ) {  <CR> Letter x4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop s8 = new Envelop ( "Taipei" , "Kaohsiung" , x4 ) ;  <CR> s8 . display ( ) ;  <CR> x4 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 