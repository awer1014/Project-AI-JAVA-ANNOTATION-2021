 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> Letter letter ;  <CR> public int compareTo ( Object A1 ) {  <CR> Card Z8 = ( Card ) A1 ;  <CR> int P2 = Integer . parseInt ( this . getDate ) ;  <CR> int b5 = Integer . parseInt ( Z8 . getDate ) ;  <CR> int a6 = P2 - b5 ;  <CR> }  <CR> private short lists ;  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> Card ( Letter m8 ) {  <CR> this . letter = m8 ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static String listsAsString ( short Q ) {  <CR> return list [ Q ] ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String S5 , String X7 , String p7 , String z8 , String v7 ) {  <CR> super ( S5 , X7 , p7 , z8 , v7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Z0 , String F3 , String Z5 , String u1 , String v7 ) {  <CR> super ( Z0 , F3 , Z5 , u1 , v7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String r1 , String J5 , Letter F6 ) {  <CR> this . senderAddr = r1 ;  <CR> this . receiverAddr = J5 ;  <CR> this . letter = F6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> Letter ( String q5 , String w7 , String Y6 , String h7 , String W8 ) {  <CR> this . title = q5 ;  <CR> this . receiver = w7 ;  <CR> this . content = Y6 ;  <CR> this . sender = h7 ;  <CR> this . date = W8 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> void display ( int d9 ) {  <CR> if ( d9 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] A2 ) {  <CR> Letter C1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o0 = new Envelop ( "Taipei" , "Kaohsiung" , C1 ) ;  <CR> o0 . display ( ) ;  <CR> C1 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 