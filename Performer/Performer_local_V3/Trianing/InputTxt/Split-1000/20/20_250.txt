 <BOC> import java . util . Arrays ;  <CR> public class Card implements Comparable {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> private short lists ;  <CR> public int compareTo ( Object p9 ) {  <CR> Card H3 = ( Card ) p9 ;  <CR> int G1 = Integer . parseInt ( this . getDate ) ;  <CR> int r8 = Integer . parseInt ( H3 . getDate ) ;  <CR> int e7 = G1 - r8 ;  <CR> }  <CR> Letter letter ;  <CR> public static String listsAsString ( short c8 ) {  <CR> return list [ c8 ] ;  <CR> }  <CR> Card ( Letter r2 ) {  <CR> this . letter = r2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return letter . date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D4 , String z1 , String L5 , String O7 , String x7 ) {  <CR> super ( D4 , z1 , L5 , O7 , x7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String T4 , String D0 , String j8 , String H6 , String X3 ) {  <CR> super ( T4 , D0 , j8 , H6 , X3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String o0 , String T5 , Letter J7 ) {  <CR> this . senderAddr = o0 ;  <CR> this . receiverAddr = T5 ;  <CR> this . letter = J7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> void display ( int a7 ) {  <CR> if ( a7 == 1 ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> else {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String u3 , String J8 , String k8 , String q9 , String o3 ) {  <CR> this . title = u3 ;  <CR> this . receiver = J8 ;  <CR> this . content = k8 ;  <CR> this . sender = q9 ;  <CR> this . date = o3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Test {  <CR> public static void main ( String [ ] k7 ) {  <CR> Letter E7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop L = new Envelop ( "Taipei" , "Kaohsiung" , E7 ) ;  <CR> L . display ( ) ;  <CR> E7 . display ( 1 ) ;  <CR> }  <CR> }  <CR>  <EOC> 