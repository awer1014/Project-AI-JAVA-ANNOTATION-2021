 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o1 , String K6 , String F7 , String E2 , String x5 ) {  <CR> super ( o1 , K6 , F7 , E2 , x5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String I9 , String D6 , String p5 , String p1 , String j8 ) {  <CR> super ( I9 , D6 , p5 , p1 , j8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String Y4 , String E3 , Letter J ) {  <CR> this . senderAddr = Y4 ;  <CR> this . receiverAddr = E3 ;  <CR> this . letter = J ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String r4 ) {  <CR> int c8 = 0 ;  <CR> for ( int t6 = 0 ; t6 < r4 . length ( ) ; t6 ++ ) {  <CR> char T8 = r4 . charAt ( t6 ) ;  <CR> c8 = c8 * 10 + T8 - '0' ;  <CR> }  <CR> return c8 ;  <CR> }  <CR> public int compareTo ( Object q ) {  <CR> Letter f7 = ( Letter ) q ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String L1 , String i5 , String P9 , String U5 , String g6 ) {  <CR> this . title = L1 ;  <CR> this . receiver = i5 ;  <CR> this . content = P9 ;  <CR> this . sender = U5 ;  <CR> this . date = g6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Z6 ) {  <CR> Letter [ ] M1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( M1 ) ;  <CR> for ( int j0 = 0 ; j0 < 3 ; j0 ++ )  <CR> M1 [ j0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 