 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String X , String P2 , String c4 , String P6 , String f0 ) {  <CR> super ( X , P2 , c4 , P6 , f0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String L0 , String y9 , String j7 , String Y2 , String P9 ) {  <CR> super ( L0 , y9 , j7 , Y2 , P9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String o5 , String h6 , Letter X0 ) {  <CR> this . senderAddr = o5 ;  <CR> this . receiverAddr = h6 ;  <CR> this . letter = X0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String N3 , String X0 , String a1 , String a4 , String h7 ) {  <CR> this . title = N3 ;  <CR> this . receiver = X0 ;  <CR> this . content = a1 ;  <CR> this . sender = a4 ;  <CR> this . date = h7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object N1 ) {  <CR> Letter W4 = ( Letter ) N1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String x6 ) {  <CR> int b5 = 0 ;  <CR> for ( int V8 = 0 ; V8 < x6 . length ( ) ; V8 ++ ) {  <CR> char L = x6 . charAt ( V8 ) ;  <CR> b5 = b5 * 10 + L - '0' ;  <CR> }  <CR> return b5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B0 ) {  <CR> Letter [ ] P6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P6 ) ;  <CR> for ( int t2 = 0 ; t2 < 3 ; t2 ++ )  <CR> P6 [ t2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 