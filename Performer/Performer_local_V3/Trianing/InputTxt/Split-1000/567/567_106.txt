 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W7 , String k9 , String Y8 , String n0 , String u1 ) {  <CR> super ( W7 , k9 , Y8 , n0 , u1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String u6 , String z3 , String W3 , String v0 , String d0 ) {  <CR> super ( u6 , z3 , W3 , v0 , d0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String g4 , String f2 , Letter z8 ) {  <CR> this . senderAddr = g4 ;  <CR> this . receiverAddr = f2 ;  <CR> this . letter = z8 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String j9 ) {  <CR> int R = 0 ;  <CR> for ( int Q4 = 0 ; Q4 < j9 . length ( ) ; Q4 ++ ) {  <CR> char P1 = j9 . charAt ( Q4 ) ;  <CR> R = R * 10 + P1 - '0' ;  <CR> }  <CR> return R ;  <CR> }  <CR> public int compareTo ( Object x0 ) {  <CR> Letter z5 = ( Letter ) x0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String D8 , String s8 , String t7 , String F2 , String r7 ) {  <CR> this . title = D8 ;  <CR> this . receiver = s8 ;  <CR> this . content = t7 ;  <CR> this . sender = F2 ;  <CR> this . date = r7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] I6 ) {  <CR> Letter [ ] P6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P6 ) ;  <CR> for ( int z = 0 ; z < 3 ; z ++ )  <CR> P6 [ z ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 