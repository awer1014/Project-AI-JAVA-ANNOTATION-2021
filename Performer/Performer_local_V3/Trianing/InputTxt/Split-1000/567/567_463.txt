 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String a3 , String w5 , String B2 , String p8 , String y ) {  <CR> super ( a3 , w5 , B2 , p8 , y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String V6 , String X7 , String B5 , String P1 , String D1 ) {  <CR> super ( V6 , X7 , B5 , P1 , D1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String N5 , String U7 , Letter b2 ) {  <CR> this . senderAddr = N5 ;  <CR> this . receiverAddr = U7 ;  <CR> this . letter = b2 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String N2 , String c , String o8 , String j0 , String l2 ) {  <CR> this . title = N2 ;  <CR> this . receiver = c ;  <CR> this . content = o8 ;  <CR> this . sender = j0 ;  <CR> this . date = l2 ;  <CR> }  <CR> public int compareTo ( Object B0 ) {  <CR> Letter C4 = ( Letter ) B0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String D8 ) {  <CR> int U5 = 0 ;  <CR> for ( int e5 = 0 ; e5 < D8 . length ( ) ; e5 ++ ) {  <CR> char l = D8 . charAt ( e5 ) ;  <CR> U5 = U5 * 10 + l - '0' ;  <CR> }  <CR> return U5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] r6 ) {  <CR> Letter [ ] W3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( W3 ) ;  <CR> for ( int F7 = 0 ; F7 < 3 ; F7 ++ )  <CR> W3 [ F7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 