 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z4 , String x7 , String p5 , String B1 , String V ) {  <CR> super ( z4 , x7 , p5 , B1 , V ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String a5 , String i , String e , String a8 , String I5 ) {  <CR> super ( a5 , i , e , a8 , I5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String S5 , String C9 , Letter B4 ) {  <CR> this . senderAddr = S5 ;  <CR> this . receiverAddr = C9 ;  <CR> this . letter = B4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object S0 ) {  <CR> Letter Q0 = ( Letter ) S0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String f8 , String n4 , String p , String T0 , String O7 ) {  <CR> this . title = f8 ;  <CR> this . receiver = n4 ;  <CR> this . content = p ;  <CR> this . sender = T0 ;  <CR> this . date = O7 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String k0 ) {  <CR> int Q4 = 0 ;  <CR> for ( int F2 = 0 ; F2 < k0 . length ( ) ; F2 ++ ) {  <CR> char g0 = k0 . charAt ( F2 ) ;  <CR> Q4 = Q4 * 10 + g0 - '0' ;  <CR> }  <CR> return Q4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n0 ) {  <CR> Letter [ ] d3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( d3 ) ;  <CR> for ( int n2 = 0 ; n2 < 3 ; n2 ++ )  <CR> d3 [ n2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 