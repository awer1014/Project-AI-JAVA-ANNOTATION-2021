 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U9 , String T0 , String V2 , String d2 , String Q6 ) {  <CR> super ( U9 , T0 , V2 , d2 , Q6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String t3 , String X7 , String b6 , String e , String H7 ) {  <CR> super ( t3 , X7 , b6 , e , H7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String n3 , String v6 , Letter u8 ) {  <CR> this . senderAddr = n3 ;  <CR> this . receiverAddr = v6 ;  <CR> this . letter = u8 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> Letter ( String O2 , String o9 , String r2 , String c6 , String e ) {  <CR> this . title = O2 ;  <CR> this . receiver = o9 ;  <CR> this . content = r2 ;  <CR> this . sender = c6 ;  <CR> this . date = e ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String a7 ) {  <CR> int a6 = 0 ;  <CR> for ( int g0 = 0 ; g0 < a7 . length ( ) ; g0 ++ ) {  <CR> char W5 = a7 . charAt ( g0 ) ;  <CR> a6 = a6 * 10 + W5 - '0' ;  <CR> }  <CR> return a6 ;  <CR> }  <CR> public int compareTo ( Object B ) {  <CR> Letter n0 = ( Letter ) B ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] v4 ) {  <CR> Letter [ ] v5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( v5 ) ;  <CR> for ( int i3 = 0 ; i3 < 3 ; i3 ++ )  <CR> v5 [ i3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 