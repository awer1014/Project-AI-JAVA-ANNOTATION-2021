 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String M6 , String Z8 , String T3 , String j4 , String z9 ) {  <CR> super ( M6 , Z8 , T3 , j4 , z9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String J , String u8 , String r7 , String j2 , String x ) {  <CR> super ( J , u8 , r7 , j2 , x ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String Z , String N5 , Letter p6 ) {  <CR> this . senderAddr = Z ;  <CR> this . receiverAddr = N5 ;  <CR> this . letter = p6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String e6 , String f3 , String d2 , String v4 , String C1 ) {  <CR> this . title = e6 ;  <CR> this . receiver = f3 ;  <CR> this . content = d2 ;  <CR> this . sender = v4 ;  <CR> this . date = C1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String w5 ) {  <CR> int E4 = 0 ;  <CR> for ( int h3 = 0 ; h3 < w5 . length ( ) ; h3 ++ ) {  <CR> char T6 = w5 . charAt ( h3 ) ;  <CR> E4 = E4 * 10 + T6 - '0' ;  <CR> }  <CR> return E4 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object r9 ) {  <CR> Letter E3 = ( Letter ) r9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] f6 ) {  <CR> Letter [ ] S8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S8 ) ;  <CR> for ( int P7 = 0 ; P7 < 3 ; P7 ++ )  <CR> S8 [ P7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 