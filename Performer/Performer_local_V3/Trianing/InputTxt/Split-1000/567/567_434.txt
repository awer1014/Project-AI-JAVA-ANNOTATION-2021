 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String r4 , String m3 , String o7 , String m7 , String z8 ) {  <CR> super ( r4 , m3 , o7 , m7 , z8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b9 , String L5 , String x , String n , String A3 ) {  <CR> super ( b9 , L5 , x , n , A3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String D7 , String N1 , Letter G0 ) {  <CR> this . senderAddr = D7 ;  <CR> this . receiverAddr = N1 ;  <CR> this . letter = G0 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object t6 ) {  <CR> Letter G7 = ( Letter ) t6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String Z9 , String z2 , String Z1 , String r4 , String N9 ) {  <CR> this . title = Z9 ;  <CR> this . receiver = z2 ;  <CR> this . content = Z1 ;  <CR> this . sender = r4 ;  <CR> this . date = N9 ;  <CR> }  <CR> int valueOf ( String x ) {  <CR> int d1 = 0 ;  <CR> for ( int c = 0 ; c < x . length ( ) ; c ++ ) {  <CR> char X7 = t6 . charAt ( c ) ;  <CR> d1 = d1 * 10 + X7 - '0' ;  <CR> }  <CR> return d1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] S9 ) {  <CR> Letter [ ] I8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I8 ) ;  <CR> for ( int S5 = 0 ; S5 < 3 ; S5 ++ )  <CR> I8 [ S5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 