 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String f3 , String P5 , String M5 , String t6 , String H ) {  <CR> super ( f3 , P5 , M5 , t6 , H ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k9 , String u , String l5 , String m3 , String D2 ) {  <CR> super ( k9 , u , l5 , m3 , D2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String d9 , String Y9 , Letter v5 ) {  <CR> this . senderAddr = d9 ;  <CR> this . receiverAddr = Y9 ;  <CR> this . letter = v5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String U7 ) {  <CR> int u2 = 0 ;  <CR> for ( int B9 = 0 ; B9 < U7 . length ( ) ; B9 ++ ) {  <CR> char d1 = U7 . charAt ( B9 ) ;  <CR> u2 = u2 * 10 + d1 - '0' ;  <CR> }  <CR> return u2 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String R6 , String h8 , String r3 , String K3 , String x4 ) {  <CR> this . title = R6 ;  <CR> this . receiver = h8 ;  <CR> this . content = r3 ;  <CR> this . sender = K3 ;  <CR> this . date = x4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object G5 ) {  <CR> Letter h2 = ( Letter ) G5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] O7 ) {  <CR> Letter [ ] c8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( c8 ) ;  <CR> for ( int f4 = 0 ; f4 < 3 ; f4 ++ )  <CR> c8 [ f4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 