 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c1 , String K , String A0 , String C5 , String X1 ) {  <CR> super ( c1 , K , A0 , C5 , X1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String l4 , String k0 , String O3 , String b8 , String l8 ) {  <CR> super ( l4 , k0 , O3 , b8 , l8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String h6 , String x2 , Letter q0 ) {  <CR> this . senderAddr = h6 ;  <CR> this . receiverAddr = x2 ;  <CR> this . letter = q0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object C2 ) {  <CR> Letter j1 = ( Letter ) C2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String y3 ) {  <CR> int a4 = 0 ;  <CR> for ( int c7 = 0 ; c7 < y3 . length ( ) ; c7 ++ ) {  <CR> char R1 = y3 . charAt ( c7 ) ;  <CR> a4 = a4 * 10 + R1 - '0' ;  <CR> }  <CR> return a4 ;  <CR> }  <CR> Letter ( String I8 , String H4 , String X9 , String x9 , String c5 ) {  <CR> this . title = I8 ;  <CR> this . receiver = H4 ;  <CR> this . content = X9 ;  <CR> this . sender = x9 ;  <CR> this . date = c5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T3 ) {  <CR> Letter [ ] Q2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q2 ) ;  <CR> for ( int P3 = 0 ; P3 < 3 ; P3 ++ )  <CR> Q2 [ P3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 