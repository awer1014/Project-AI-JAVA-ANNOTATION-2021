 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Y2 , String r3 , String S1 , String f2 , String w ) {  <CR> super ( Y2 , r3 , S1 , f2 , w ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String F1 , String C0 , String X1 , String j8 , String H4 ) {  <CR> super ( F1 , C0 , X1 , j8 , H4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String L2 , String i8 , Letter G9 ) {  <CR> this . senderAddr = L2 ;  <CR> this . receiverAddr = i8 ;  <CR> this . letter = G9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object v3 ) {  <CR> Letter P0 = ( Letter ) v3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String Z0 , String w7 , String L0 , String P6 , String b0 ) {  <CR> this . title = Z0 ;  <CR> this . receiver = w7 ;  <CR> this . content = L0 ;  <CR> this . sender = P6 ;  <CR> this . date = b0 ;  <CR> }  <CR> int valueOf ( String q1 ) {  <CR> int W4 = 0 ;  <CR> for ( int q0 = 0 ; q0 < q1 . length ( ) ; q0 ++ ) {  <CR> char K5 = q1 . charAt ( q0 ) ;  <CR> W4 = W4 * 10 + K5 - '0' ;  <CR> }  <CR> return W4 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Z3 ) {  <CR> Letter [ ] h6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h6 ) ;  <CR> for ( int P9 = 0 ; P9 < 3 ; P9 ++ )  <CR> h6 [ P9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 