 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c1 , String S1 , String f5 , String A7 , String o2 ) {  <CR> super ( c1 , S1 , f5 , A7 , o2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String E9 , String T2 , String l6 , String g8 , String Q4 ) {  <CR> super ( E9 , T2 , l6 , g8 , Q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String i0 , String L9 , Letter v5 ) {  <CR> this . senderAddr = i0 ;  <CR> this . receiverAddr = L9 ;  <CR> this . letter = v5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object r7 ) {  <CR> Letter d9 = ( Letter ) r7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String B1 ) {  <CR> int c5 = 0 ;  <CR> for ( int Z7 = 0 ; Z7 < B1 . length ( ) ; Z7 ++ ) {  <CR> char t6 = B1 . charAt ( Z7 ) ;  <CR> c5 = c5 * 10 + t6 - '0' ;  <CR> }  <CR> return c5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String W3 , String h2 , String A4 , String Q7 , String D4 ) {  <CR> this . title = W3 ;  <CR> this . receiver = h2 ;  <CR> this . content = A4 ;  <CR> this . sender = Q7 ;  <CR> this . date = D4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] C9 ) {  <CR> Letter [ ] f = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( f ) ;  <CR> for ( int Z5 = 0 ; Z5 < 3 ; Z5 ++ )  <CR> f [ Z5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 