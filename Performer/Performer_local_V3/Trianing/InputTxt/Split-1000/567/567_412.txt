 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String N4 , String E9 , String C4 , String S3 , String p7 ) {  <CR> super ( N4 , E9 , C4 , S3 , p7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String N8 , String A , String P2 , String S8 , String w9 ) {  <CR> super ( N8 , A , P2 , S8 , w9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String O0 , String d3 , Letter h3 ) {  <CR> this . senderAddr = O0 ;  <CR> this . receiverAddr = d3 ;  <CR> this . letter = h3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object f4 ) {  <CR> Letter L5 = ( Letter ) f4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String M4 , String l3 , String X7 , String q4 , String e3 ) {  <CR> this . title = M4 ;  <CR> this . receiver = l3 ;  <CR> this . content = X7 ;  <CR> this . sender = q4 ;  <CR> this . date = e3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String l4 ) {  <CR> int G3 = 0 ;  <CR> for ( int p1 = 0 ; p1 < l4 . length ( ) ; p1 ++ ) {  <CR> char H6 = l4 . charAt ( p1 ) ;  <CR> G3 = G3 * 10 + H6 - '0' ;  <CR> }  <CR> return G3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d7 ) {  <CR> Letter [ ] L4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L4 ) ;  <CR> for ( int s5 = 0 ; s5 < 3 ; s5 ++ )  <CR> L4 [ s5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 