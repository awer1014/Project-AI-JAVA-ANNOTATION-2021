 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W8 , String N1 , String x1 , String h0 , String t6 ) {  <CR> super ( W8 , N1 , x1 , h0 , t6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String e4 , String y7 , String F3 , String B3 , String R3 ) {  <CR> super ( e4 , y7 , F3 , B3 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String W1 , String p6 , Letter x8 ) {  <CR> this . senderAddr = W1 ;  <CR> this . receiverAddr = p6 ;  <CR> this . letter = x8 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> Letter ( String R9 , String n2 , String B9 , String A8 , String t6 ) {  <CR> this . title = R9 ;  <CR> this . receiver = n2 ;  <CR> this . content = B9 ;  <CR> this . sender = A8 ;  <CR> this . date = t6 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object H6 ) {  <CR> Letter Z2 = ( Letter ) H6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String F5 ) {  <CR> int R4 = 0 ;  <CR> for ( int v4 = 0 ; v4 < F5 . length ( ) ; v4 ++ ) {  <CR> char A0 = F5 . charAt ( v4 ) ;  <CR> R4 = R4 * 10 + A0 - '0' ;  <CR> }  <CR> return R4 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] V4 ) {  <CR> Letter [ ] z9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( z9 ) ;  <CR> for ( int Y9 = 0 ; Y9 < 3 ; Y9 ++ )  <CR> z9 [ Y9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 