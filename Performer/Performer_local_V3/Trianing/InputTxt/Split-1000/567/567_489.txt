 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String n9 , String B0 , String E , String T0 , String o1 ) {  <CR> super ( n9 , B0 , E , T0 , o1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String a7 , String T2 , String l4 , String w0 , String Y8 ) {  <CR> super ( a7 , T2 , l4 , w0 , Y8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String s5 , String D5 , Letter A0 ) {  <CR> this . senderAddr = s5 ;  <CR> this . receiverAddr = D5 ;  <CR> this . letter = A0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> public int compareTo ( Object a3 ) {  <CR> Letter Q6 = ( Letter ) a3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String F1 , String K3 , String q8 , String U0 , String V4 ) {  <CR> this . title = F1 ;  <CR> this . receiver = K3 ;  <CR> this . content = q8 ;  <CR> this . sender = U0 ;  <CR> this . date = V4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String E0 ) {  <CR> int m8 = 0 ;  <CR> for ( int h3 = 0 ; h3 < E0 . length ( ) ; h3 ++ ) {  <CR> char o5 = E0 . charAt ( h3 ) ;  <CR> m8 = m8 * 10 + o5 - '0' ;  <CR> }  <CR> return m8 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] E9 ) {  <CR> Letter [ ] a5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a5 ) ;  <CR> for ( int w3 = 0 ; w3 < 3 ; w3 ++ )  <CR> a5 [ w3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 