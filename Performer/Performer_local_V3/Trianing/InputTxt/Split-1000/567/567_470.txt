 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String k3 , String p9 , String Q2 , String j7 , String m2 ) {  <CR> super ( k3 , p9 , Q2 , j7 , m2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String X9 , String k8 , String X6 , String T2 , String t ) {  <CR> super ( X9 , k8 , X6 , T2 , t ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String y0 , String l3 , Letter b2 ) {  <CR> this . senderAddr = y0 ;  <CR> this . receiverAddr = l3 ;  <CR> this . letter = b2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> Letter ( String Z3 , String M , String C7 , String M5 , String d4 ) {  <CR> this . title = Z3 ;  <CR> this . receiver = M ;  <CR> this . content = C7 ;  <CR> this . sender = M5 ;  <CR> this . date = d4 ;  <CR> }  <CR> int valueOf ( String N9 ) {  <CR> int V9 = 0 ;  <CR> for ( int K4 = 0 ; K4 < N9 . length ( ) ; K4 ++ ) {  <CR> char Q9 = N9 . charAt ( K4 ) ;  <CR> V9 = V9 * 10 + Q9 - '0' ;  <CR> }  <CR> return V9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> public int compareTo ( Object v4 ) {  <CR> Letter N3 = ( Letter ) v4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b0 ) {  <CR> Letter [ ] Z0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z0 ) ;  <CR> for ( int P6 = 0 ; P6 < 3 ; P6 ++ )  <CR> Z0 [ P6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 