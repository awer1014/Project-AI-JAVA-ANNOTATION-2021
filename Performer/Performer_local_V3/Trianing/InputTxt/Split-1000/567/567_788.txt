 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q6 , String H1 , String u , String Y9 , String W3 ) {  <CR> super ( Q6 , H1 , u , Y9 , W3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String K8 , String W4 , String X5 , String T9 , String Q3 ) {  <CR> super ( K8 , W4 , X5 , T9 , Q3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String u8 , String i , Letter s7 ) {  <CR> this . senderAddr = u8 ;  <CR> this . receiverAddr = i ;  <CR> this . letter = s7 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String W1 ) {  <CR> int M0 = 0 ;  <CR> for ( int C5 = 0 ; C5 < W1 . length ( ) ; C5 ++ ) {  <CR> char n8 = W1 . charAt ( C5 ) ;  <CR> M0 = M0 * 10 + n8 - '0' ;  <CR> }  <CR> return M0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String A7 , String u5 , String x , String L3 , String f4 ) {  <CR> this . title = A7 ;  <CR> this . receiver = u5 ;  <CR> this . content = x ;  <CR> this . sender = L3 ;  <CR> this . date = f4 ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object U0 ) {  <CR> Letter D4 = ( Letter ) U0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] h5 ) {  <CR> Letter [ ] c = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( c ) ;  <CR> for ( int K = 0 ; K < 3 ; K ++ )  <CR> c [ K ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 