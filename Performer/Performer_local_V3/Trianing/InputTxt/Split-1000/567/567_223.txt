 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T5 , String Q5 , String d7 , String B0 , String S7 ) {  <CR> super ( T5 , Q5 , d7 , B0 , S7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String q8 , String X0 , String R1 , String M3 , String T1 ) {  <CR> super ( q8 , X0 , R1 , M3 , T1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String q1 , String h1 , Letter x5 ) {  <CR> this . senderAddr = q1 ;  <CR> this . receiverAddr = h1 ;  <CR> this . letter = x5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String s3 , String l4 , String v0 , String J4 , String f8 ) {  <CR> this . title = s3 ;  <CR> this . receiver = l4 ;  <CR> this . content = v0 ;  <CR> this . sender = J4 ;  <CR> this . date = f8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object H2 ) {  <CR> Letter b = ( Letter ) H2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String i4 ) {  <CR> int o = 0 ;  <CR> for ( int X2 = 0 ; X2 < i4 . length ( ) ; X2 ++ ) {  <CR> char k2 = i4 . charAt ( X2 ) ;  <CR> o = o * 10 + k2 - '0' ;  <CR> }  <CR> return o ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] H0 ) {  <CR> Letter [ ] l0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l0 ) ;  <CR> for ( int s5 = 0 ; s5 < 3 ; s5 ++ )  <CR> l0 [ s5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 