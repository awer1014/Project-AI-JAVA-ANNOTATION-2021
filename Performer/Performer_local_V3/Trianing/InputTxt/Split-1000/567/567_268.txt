 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e4 , String W9 , String d9 , String O1 , String v ) {  <CR> super ( e4 , W9 , d9 , O1 , v ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String J8 , String w , String t0 , String i8 , String P5 ) {  <CR> super ( J8 , w , t0 , i8 , P5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String M9 , String e5 , Letter q4 ) {  <CR> this . senderAddr = M9 ;  <CR> this . receiverAddr = e5 ;  <CR> this . letter = q4 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String P7 ) {  <CR> int S6 = 0 ;  <CR> for ( int z7 = 0 ; z7 < P7 . length ( ) ; z7 ++ ) {  <CR> char a8 = P7 . charAt ( z7 ) ;  <CR> S6 = S6 * 10 + a8 - '0' ;  <CR> }  <CR> return S6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String k4 , String I3 , String z8 , String t8 , String E ) {  <CR> this . title = k4 ;  <CR> this . receiver = I3 ;  <CR> this . content = z8 ;  <CR> this . sender = t8 ;  <CR> this . date = E ;  <CR> }  <CR> public int compareTo ( Object s7 ) {  <CR> Letter o6 = ( Letter ) s7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] q2 ) {  <CR> Letter [ ] e2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( e2 ) ;  <CR> for ( int I4 = 0 ; I4 < 3 ; I4 ++ )  <CR> e2 [ I4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 