 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String k5 , String e6 , String f2 , String m3 , String k7 ) {  <CR> super ( k5 , e6 , f2 , m3 , k7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String W2 , String G1 , String E8 , String b7 , String Y2 ) {  <CR> super ( W2 , G1 , E8 , b7 , Y2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String x9 , String X1 , Letter Y8 ) {  <CR> this . senderAddr = x9 ;  <CR> this . receiverAddr = X1 ;  <CR> this . letter = Y8 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object D5 ) {  <CR> Letter O7 = ( Letter ) D5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String n4 , String f7 , String e , String d1 , String B ) {  <CR> this . title = n4 ;  <CR> this . receiver = f7 ;  <CR> this . content = e ;  <CR> this . sender = d1 ;  <CR> this . date = B ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String n2 ) {  <CR> int N9 = 0 ;  <CR> for ( int T9 = 0 ; T9 < n2 . length ( ) ; T9 ++ ) {  <CR> char l6 = n2 . charAt ( T9 ) ;  <CR> N9 = N9 * 10 + l6 - '0' ;  <CR> }  <CR> return N9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W1 ) {  <CR> Letter [ ] b7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b7 ) ;  <CR> for ( int V7 = 0 ; V7 < 3 ; V7 ++ )  <CR> b7 [ V7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 