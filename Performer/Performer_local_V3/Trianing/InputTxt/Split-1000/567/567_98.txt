 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String T3 , String K0 , String E8 , String G1 , String N9 ) {  <CR> super ( T3 , K0 , E8 , G1 , N9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String A7 , String I7 , String B8 , String f7 , String L8 ) {  <CR> super ( A7 , I7 , B8 , f7 , L8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String A4 , String X5 , Letter g8 ) {  <CR> this . senderAddr = A4 ;  <CR> this . receiverAddr = X5 ;  <CR> this . letter = g8 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object n7 ) {  <CR> Letter R1 = ( Letter ) n7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String O8 ) {  <CR> int c4 = 0 ;  <CR> for ( int y3 = 0 ; y3 < O8 . length ( ) ; y3 ++ ) {  <CR> char G7 = O8 . charAt ( y3 ) ;  <CR> c4 = c4 * 10 + G7 - '0' ;  <CR> }  <CR> return c4 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String X0 , String P1 , String A6 , String H7 , String u0 ) {  <CR> this . title = X0 ;  <CR> this . receiver = P1 ;  <CR> this . content = A6 ;  <CR> this . sender = H7 ;  <CR> this . date = u0 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W0 ) {  <CR> Letter [ ] U7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( U7 ) ;  <CR> for ( int E = 0 ; E < 3 ; E ++ )  <CR> U7 [ E ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 