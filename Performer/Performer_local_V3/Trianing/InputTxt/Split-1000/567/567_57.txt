 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c , String P7 , String t2 , String Y0 , String S8 ) {  <CR> super ( c , P7 , t2 , Y0 , S8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D1 , String F , String c0 , String y7 , String h4 ) {  <CR> super ( D1 , F , c0 , y7 , h4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String C6 , String c0 , Letter x4 ) {  <CR> this . senderAddr = C6 ;  <CR> this . receiverAddr = c0 ;  <CR> this . letter = x4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object P0 ) {  <CR> Letter U1 = ( Letter ) P0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String a1 ) {  <CR> int A5 = 0 ;  <CR> for ( int q0 = 0 ; q0 < a1 . length ( ) ; q0 ++ ) {  <CR> char t9 = a1 . charAt ( q0 ) ;  <CR> A5 = A5 * 10 + t9 - '0' ;  <CR> }  <CR> return A5 ;  <CR> }  <CR> Letter ( String I8 , String N8 , String Z3 , String s4 , String V4 ) {  <CR> this . title = I8 ;  <CR> this . receiver = N8 ;  <CR> this . content = Z3 ;  <CR> this . sender = s4 ;  <CR> this . date = V4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] I1 ) {  <CR> Letter [ ] Q1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q1 ) ;  <CR> for ( int S4 = 0 ; S4 < 3 ; S4 ++ )  <CR> Q1 [ S4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 