 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T6 , String Q7 , String o6 , String R9 , String z2 ) {  <CR> super ( T6 , Q7 , o6 , R9 , z2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String R2 , String m5 , String l2 , String w9 , String N9 ) {  <CR> super ( R2 , m5 , l2 , w9 , N9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String K9 , String i9 , Letter y4 ) {  <CR> this . senderAddr = K9 ;  <CR> this . receiverAddr = i9 ;  <CR> this . letter = y4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object h3 ) {  <CR> Letter w6 = ( Letter ) h3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String d8 ) {  <CR> int J5 = 0 ;  <CR> for ( int U1 = 0 ; U1 < d8 . length ( ) ; U1 ++ ) {  <CR> char f4 = d8 . charAt ( U1 ) ;  <CR> J5 = J5 * 10 + f4 - '0' ;  <CR> }  <CR> return J5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String A1 , String m0 , String c9 , String s2 , String L2 ) {  <CR> this . title = A1 ;  <CR> this . receiver = m0 ;  <CR> this . content = c9 ;  <CR> this . sender = s2 ;  <CR> this . date = L2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Y7 ) {  <CR> Letter [ ] S1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S1 ) ;  <CR> for ( int B3 = 0 ; B3 < 3 ; B3 ++ )  <CR> S1 [ B3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 