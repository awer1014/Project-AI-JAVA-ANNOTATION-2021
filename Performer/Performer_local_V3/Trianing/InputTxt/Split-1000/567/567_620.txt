 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String t5 , String o9 , String O1 , String R2 , String a8 ) {  <CR> super ( t5 , o9 , O1 , R2 , a8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o5 , String W3 , String M6 , String Z7 , String A4 ) {  <CR> super ( o5 , W3 , M6 , Z7 , A4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String o4 , String e4 , Letter c8 ) {  <CR> this . senderAddr = o4 ;  <CR> this . receiverAddr = e4 ;  <CR> this . letter = c8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object K6 ) {  <CR> Letter C7 = ( Letter ) K6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String m7 , String x0 , String C , String W , String r0 ) {  <CR> this . title = m7 ;  <CR> this . receiver = x0 ;  <CR> this . content = C ;  <CR> this . sender = W ;  <CR> this . date = r0 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> int valueOf ( String M3 ) {  <CR> int E2 = 0 ;  <CR> for ( int U2 = 0 ; U2 < M3 . length ( ) ; U2 ++ ) {  <CR> char j4 = M3 . charAt ( U2 ) ;  <CR> E2 = E2 * 10 + j4 - '0' ;  <CR> }  <CR> return E2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g4 ) {  <CR> Letter [ ] k4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( k4 ) ;  <CR> for ( int G9 = 0 ; G9 < 3 ; G9 ++ )  <CR> k4 [ G9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 