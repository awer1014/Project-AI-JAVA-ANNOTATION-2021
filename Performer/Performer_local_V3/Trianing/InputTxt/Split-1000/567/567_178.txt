 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String x0 , String x9 , String N , String V0 , String o9 ) {  <CR> super ( x0 , x9 , N , V0 , o9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k5 , String z8 , String U8 , String P3 , String u3 ) {  <CR> super ( k5 , z8 , U8 , P3 , u3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String W3 , String b1 , Letter W0 ) {  <CR> this . senderAddr = W3 ;  <CR> this . receiverAddr = b1 ;  <CR> this . letter = W0 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String c9 , String c3 , String H , String B5 , String T3 ) {  <CR> this . title = c9 ;  <CR> this . receiver = c3 ;  <CR> this . content = H ;  <CR> this . sender = B5 ;  <CR> this . date = T3 ;  <CR> }  <CR> int valueOf ( String G5 ) {  <CR> int J8 = 0 ;  <CR> for ( int r3 = 0 ; r3 < G5 . length ( ) ; r3 ++ ) {  <CR> char M7 = G5 . charAt ( r3 ) ;  <CR> J8 = J8 * 10 + M7 - '0' ;  <CR> }  <CR> return J8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object g5 ) {  <CR> Letter w8 = ( Letter ) g5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] l5 ) {  <CR> Letter [ ] G = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( G ) ;  <CR> for ( int M8 = 0 ; M8 < 3 ; M8 ++ )  <CR> G [ M8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 