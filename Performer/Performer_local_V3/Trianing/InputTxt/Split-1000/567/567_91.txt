 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u4 , String E1 , String T0 , String X8 , String z5 ) {  <CR> super ( u4 , E1 , T0 , X8 , z5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O3 , String y , String h0 , String N6 , String Y0 ) {  <CR> super ( O3 , y , h0 , N6 , Y0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String f8 , String e0 , Letter h3 ) {  <CR> this . senderAddr = f8 ;  <CR> this . receiverAddr = e0 ;  <CR> this . letter = h3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String r8 , String N6 , String j2 , String p8 , String Q3 ) {  <CR> this . title = r8 ;  <CR> this . receiver = N6 ;  <CR> this . content = j2 ;  <CR> this . sender = p8 ;  <CR> this . date = Q3 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String S2 ) {  <CR> int u1 = 0 ;  <CR> for ( int p4 = 0 ; p4 < S2 . length ( ) ; p4 ++ ) {  <CR> char M1 = S2 . charAt ( p4 ) ;  <CR> u1 = u1 * 10 + M1 - '0' ;  <CR> }  <CR> return u1 ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object h8 ) {  <CR> Letter Y8 = ( Letter ) h8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] a0 ) {  <CR> Letter [ ] g = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( g ) ;  <CR> for ( int a7 = 0 ; a7 < 3 ; a7 ++ )  <CR> g [ a7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 