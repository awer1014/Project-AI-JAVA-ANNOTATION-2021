 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T3 , String Y3 , String B8 , String F3 , String X0 ) {  <CR> super ( T3 , Y3 , B8 , F3 , X0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String w7 , String Q , String m1 , String T1 , String Y5 ) {  <CR> super ( w7 , Q , m1 , T1 , Y5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String e0 , String B3 , Letter D2 ) {  <CR> this . senderAddr = e0 ;  <CR> this . receiverAddr = B3 ;  <CR> this . letter = D2 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String s5 ) {  <CR> int L2 = 0 ;  <CR> for ( int W2 = 0 ; W2 < s5 . length ( ) ; W2 ++ ) {  <CR> char H9 = s5 . charAt ( W2 ) ;  <CR> L2 = L2 * 10 + H9 - '0' ;  <CR> }  <CR> return L2 ;  <CR> }  <CR> public int compareTo ( Object g1 ) {  <CR> Letter c = ( Letter ) g1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String U2 , String l8 , String V2 , String Q , String o ) {  <CR> this . title = U2 ;  <CR> this . receiver = l8 ;  <CR> this . content = V2 ;  <CR> this . sender = Q ;  <CR> this . date = o ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] t3 ) {  <CR> Letter [ ] w4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( w4 ) ;  <CR> for ( int V0 = 0 ; V0 < 3 ; V0 ++ )  <CR> w4 [ V0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 