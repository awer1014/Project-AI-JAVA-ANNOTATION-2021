 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A7 , String e8 , String I8 , String c3 , String w9 ) {  <CR> super ( A7 , e8 , I8 , c3 , w9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String P9 , String l4 , String A8 , String d , String c9 ) {  <CR> super ( P9 , l4 , A8 , d , c9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String J6 , String j3 , Letter J8 ) {  <CR> this . senderAddr = J6 ;  <CR> this . receiverAddr = j3 ;  <CR> this . letter = J8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String q ) {  <CR> int M = 0 ;  <CR> for ( int J7 = 0 ; J7 < q . length ( ) ; J7 ++ ) {  <CR> char m2 = q . charAt ( J7 ) ;  <CR> M = M * 10 + m2 - '0' ;  <CR> }  <CR> return M ;  <CR> }  <CR> Letter ( String R3 , String C4 , String B6 , String F5 , String L1 ) {  <CR> this . title = R3 ;  <CR> this . receiver = C4 ;  <CR> this . content = B6 ;  <CR> this . sender = F5 ;  <CR> this . date = L1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object e0 ) {  <CR> Letter v1 = ( Letter ) e0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d4 ) {  <CR> Letter [ ] u2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u2 ) ;  <CR> for ( int l4 = 0 ; l4 < 3 ; l4 ++ )  <CR> u2 [ l4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 