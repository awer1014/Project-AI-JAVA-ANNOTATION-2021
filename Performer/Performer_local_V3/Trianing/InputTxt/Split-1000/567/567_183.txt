 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String C0 , String M7 , String E9 , String h3 , String X5 ) {  <CR> super ( C0 , M7 , E9 , h3 , X5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String I7 , String i1 , String I0 , String B9 , String Q6 ) {  <CR> super ( I7 , i1 , I0 , B9 , Q6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String G2 , String J , Letter n6 ) {  <CR> this . senderAddr = G2 ;  <CR> this . receiverAddr = J ;  <CR> this . letter = n6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object f3 ) {  <CR> Letter A7 = ( Letter ) f3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String v5 , String V3 , String o1 , String M5 , String L4 ) {  <CR> this . title = v5 ;  <CR> this . receiver = V3 ;  <CR> this . content = o1 ;  <CR> this . sender = M5 ;  <CR> this . date = L4 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String R3 ) {  <CR> int P3 = 0 ;  <CR> for ( int l = 0 ; l < R3 . length ( ) ; l ++ ) {  <CR> char U = R3 . charAt ( l ) ;  <CR> P3 = P3 * 10 + U - '0' ;  <CR> }  <CR> return P3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] X ) {  <CR> Letter [ ] v3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( v3 ) ;  <CR> for ( int l5 = 0 ; l5 < 3 ; l5 ++ )  <CR> v3 [ l5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 