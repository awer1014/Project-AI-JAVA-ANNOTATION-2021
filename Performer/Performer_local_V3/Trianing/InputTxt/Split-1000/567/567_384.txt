 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W2 , String i7 , String X0 , String A2 , String A0 ) {  <CR> super ( W2 , i7 , X0 , A2 , A0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String s8 , String u2 , String f , String N7 , String g1 ) {  <CR> super ( s8 , u2 , f , N7 , g1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String d1 , String P6 , Letter U8 ) {  <CR> this . senderAddr = d1 ;  <CR> this . receiverAddr = P6 ;  <CR> this . letter = U8 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String n , String L9 , String x9 , String O1 , String E8 ) {  <CR> this . title = n ;  <CR> this . receiver = L9 ;  <CR> this . content = x9 ;  <CR> this . sender = O1 ;  <CR> this . date = E8 ;  <CR> }  <CR> int valueOf ( String j0 ) {  <CR> int H9 = 0 ;  <CR> for ( int L1 = 0 ; L1 < j0 . length ( ) ; L1 ++ ) {  <CR> char K3 = j0 . charAt ( L1 ) ;  <CR> H9 = H9 * 10 + K3 - '0' ;  <CR> }  <CR> return H9 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object t5 ) {  <CR> Letter c = ( Letter ) t5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] t0 ) {  <CR> Letter [ ] r3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( r3 ) ;  <CR> for ( int r5 = 0 ; r5 < 3 ; r5 ++ )  <CR> r3 [ r5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 