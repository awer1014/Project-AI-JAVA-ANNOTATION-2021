 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String g9 , String z2 , String j7 , String X , String Y3 ) {  <CR> super ( g9 , z2 , j7 , X , Y3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String u9 , String L8 , String U1 , String X0 , String D3 ) {  <CR> super ( u9 , L8 , U1 , X0 , D3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String h7 , String g1 , Letter J7 ) {  <CR> this . senderAddr = h7 ;  <CR> this . receiverAddr = g1 ;  <CR> this . letter = J7 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object Z5 ) {  <CR> Letter H6 = ( Letter ) Z5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String x4 , String t1 , String c8 , String y6 , String H4 ) {  <CR> this . title = x4 ;  <CR> this . receiver = t1 ;  <CR> this . content = c8 ;  <CR> this . sender = y6 ;  <CR> this . date = H4 ;  <CR> }  <CR> int valueOf ( String e8 ) {  <CR> int T2 = 0 ;  <CR> for ( int A1 = 0 ; A1 < e8 . length ( ) ; A1 ++ ) {  <CR> char W1 = e8 . charAt ( A1 ) ;  <CR> T2 = T2 * 10 + W1 - '0' ;  <CR> }  <CR> return T2 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] L3 ) {  <CR> Letter [ ] r3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( r3 ) ;  <CR> for ( int E9 = 0 ; E9 < 3 ; E9 ++ )  <CR> r3 [ E9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 