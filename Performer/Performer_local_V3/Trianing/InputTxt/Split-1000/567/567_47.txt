 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String S6 , String H6 , String E5 , String g5 , String Z7 ) {  <CR> super ( S6 , H6 , E5 , g5 , Z7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String v7 , String q1 , String o7 , String Y9 , String I3 ) {  <CR> super ( v7 , q1 , o7 , Y9 , I3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String w1 , String t2 , Letter b0 ) {  <CR> this . senderAddr = w1 ;  <CR> this . receiverAddr = t2 ;  <CR> this . letter = b0 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object a0 ) {  <CR> Letter c5 = ( Letter ) a0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String Q ) {  <CR> int l7 = 0 ;  <CR> for ( int b3 = 0 ; b3 < Q . length ( ) ; b3 ++ ) {  <CR> char u1 = Q . charAt ( b3 ) ;  <CR> l7 = l7 * 10 + u1 - '0' ;  <CR> }  <CR> return l7 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String x , String o7 , String u3 , String E , String l1 ) {  <CR> this . title = x ;  <CR> this . receiver = o7 ;  <CR> this . content = u3 ;  <CR> this . sender = E ;  <CR> this . date = l1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] k3 ) {  <CR> Letter [ ] T4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( T4 ) ;  <CR> for ( int q7 = 0 ; q7 < 3 ; q7 ++ )  <CR> T4 [ q7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 