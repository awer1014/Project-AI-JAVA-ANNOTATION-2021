 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l8 , String F2 , String X3 , String V2 , String A5 ) {  <CR> super ( l8 , F2 , X3 , V2 , A5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String i9 , String Y9 , String r3 , String M1 , String v0 ) {  <CR> super ( i9 , Y9 , r3 , M1 , v0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String M7 , String Y6 , Letter O2 ) {  <CR> this . senderAddr = M7 ;  <CR> this . receiverAddr = Y6 ;  <CR> this . letter = O2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String X ) {  <CR> int R6 = 0 ;  <CR> for ( int T9 = 0 ; T9 < X . length ( ) ; T9 ++ ) {  <CR> char Q8 = X . charAt ( T9 ) ;  <CR> R6 = R6 * 10 + Q8 - '0' ;  <CR> }  <CR> return R6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String a0 , String S1 , String a4 , String s5 , String E1 ) {  <CR> this . title = a0 ;  <CR> this . receiver = S1 ;  <CR> this . content = a4 ;  <CR> this . sender = s5 ;  <CR> this . date = E1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object J6 ) {  <CR> Letter i = ( Letter ) J6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] z2 ) {  <CR> Letter [ ] b0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b0 ) ;  <CR> for ( int P9 = 0 ; P9 < 3 ; P9 ++ )  <CR> b0 [ P9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 