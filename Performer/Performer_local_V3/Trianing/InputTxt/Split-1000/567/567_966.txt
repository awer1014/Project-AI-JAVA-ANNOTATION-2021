 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String i0 , String r7 , String R6 , String b1 , String V7 ) {  <CR> super ( i0 , r7 , R6 , b1 , V7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String c8 , String n4 , String e3 , String a4 , String U2 ) {  <CR> super ( c8 , n4 , e3 , a4 , U2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String t3 , String V1 , Letter z1 ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = V1 ;  <CR> this . letter = z1 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String Q1 ) {  <CR> int X2 = 0 ;  <CR> for ( int y8 = 0 ; y8 < Q1 . length ( ) ; y8 ++ ) {  <CR> char E7 = Q1 . charAt ( y8 ) ;  <CR> X2 = X2 * 10 + E7 - '0' ;  <CR> }  <CR> return X2 ;  <CR> }  <CR> public int compareTo ( Object v9 ) {  <CR> Letter M2 = ( Letter ) v9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String k5 , String R1 , String R2 , String M5 , String S9 ) {  <CR> this . title = k5 ;  <CR> this . receiver = R1 ;  <CR> this . content = R2 ;  <CR> this . sender = M5 ;  <CR> this . date = S9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] X ) {  <CR> Letter [ ] H0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( H0 ) ;  <CR> for ( int B4 = 0 ; B4 < 3 ; B4 ++ )  <CR> H0 [ B4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 