 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String k9 , String G2 , String B1 , String V8 , String e6 ) {  <CR> super ( k9 , G2 , B1 , V8 , e6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String k1 , String v5 , String z1 , String Y0 , String H9 ) {  <CR> super ( k1 , v5 , z1 , Y0 , H9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String a9 , String K4 , Letter a7 ) {  <CR> this . senderAddr = a9 ;  <CR> this . receiverAddr = K4 ;  <CR> this . letter = a7 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String J7 ) {  <CR> int T7 = 0 ;  <CR> for ( int M5 = 0 ; M5 < J7 . length ( ) ; M5 ++ ) {  <CR> char q = J7 . charAt ( M5 ) ;  <CR> T7 = T7 * 10 + q - '0' ;  <CR> }  <CR> return T7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String Q8 , String r7 , String M9 , String A5 , String A7 ) {  <CR> this . title = Q8 ;  <CR> this . receiver = r7 ;  <CR> this . content = M9 ;  <CR> this . sender = A5 ;  <CR> this . date = A7 ;  <CR> }  <CR> public int compareTo ( Object H5 ) {  <CR> Letter s3 = ( Letter ) H5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] G8 ) {  <CR> Letter [ ] o8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o8 ) ;  <CR> for ( int y9 = 0 ; y9 < 3 ; y9 ++ )  <CR> o8 [ y9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 