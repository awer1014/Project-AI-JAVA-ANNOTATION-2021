 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q0 , String e2 , String X7 , String d5 , String y1 ) {  <CR> super ( Q0 , e2 , X7 , d5 , y1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String H5 , String m5 , String v0 , String n9 , String F8 ) {  <CR> super ( H5 , m5 , v0 , n9 , F8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String c2 , String E1 , Letter h5 ) {  <CR> this . senderAddr = c2 ;  <CR> this . receiverAddr = E1 ;  <CR> this . letter = h5 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String f ) {  <CR> int M5 = 0 ;  <CR> for ( int F4 = 0 ; F4 < f . length ( ) ; F4 ++ ) {  <CR> char U5 = f . charAt ( F4 ) ;  <CR> M5 = M5 * 10 + U5 - '0' ;  <CR> }  <CR> return M5 ;  <CR> }  <CR> public int compareTo ( Object l7 ) {  <CR> Letter g0 = ( Letter ) l7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String T5 , String C2 , String a9 , String f7 , String M9 ) {  <CR> this . title = T5 ;  <CR> this . receiver = C2 ;  <CR> this . content = a9 ;  <CR> this . sender = f7 ;  <CR> this . date = M9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o8 ) {  <CR> Letter [ ] B1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( B1 ) ;  <CR> for ( int v5 = 0 ; v5 < 3 ; v5 ++ )  <CR> B1 [ v5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 