 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A0 , String C0 , String S2 , String n4 , String C4 ) {  <CR> super ( A0 , C0 , S2 , n4 , C4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String r2 , String q7 , String R9 , String R6 , String b7 ) {  <CR> super ( r2 , q7 , R9 , R6 , b7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String J8 , String B9 , Letter l9 ) {  <CR> this . senderAddr = J8 ;  <CR> this . receiverAddr = B9 ;  <CR> this . letter = l9 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object t2 ) {  <CR> Letter O5 = ( Letter ) t2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String a8 ) {  <CR> int U = 0 ;  <CR> for ( int G3 = 0 ; G3 < a8 . length ( ) ; G3 ++ ) {  <CR> char f0 = a8 . charAt ( G3 ) ;  <CR> U = U * 10 + f0 - '0' ;  <CR> }  <CR> return U ;  <CR> }  <CR> Letter ( String p0 , String d1 , String x7 , String J9 , String w7 ) {  <CR> this . title = p0 ;  <CR> this . receiver = d1 ;  <CR> this . content = x7 ;  <CR> this . sender = J9 ;  <CR> this . date = w7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] C1 ) {  <CR> Letter [ ] O2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( O2 ) ;  <CR> for ( int I3 = 0 ; I3 < 3 ; I3 ++ )  <CR> O2 [ I3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 