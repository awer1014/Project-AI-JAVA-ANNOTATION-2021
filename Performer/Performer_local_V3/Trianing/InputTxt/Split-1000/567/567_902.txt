 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U6 , String v2 , String X5 , String o5 , String b ) {  <CR> super ( U6 , v2 , X5 , o5 , b ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String P6 , String a7 , String y0 , String c4 , String R3 ) {  <CR> super ( P6 , a7 , y0 , c4 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String Y1 , String s6 , Letter g7 ) {  <CR> this . senderAddr = Y1 ;  <CR> this . receiverAddr = s6 ;  <CR> this . letter = g7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object K0 ) {  <CR> Letter I4 = ( Letter ) K0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String t8 ) {  <CR> int M7 = 0 ;  <CR> for ( int Z7 = 0 ; Z7 < t8 . length ( ) ; Z7 ++ ) {  <CR> char Q2 = t8 . charAt ( Z7 ) ;  <CR> M7 = M7 * 10 + Q2 - '0' ;  <CR> }  <CR> return M7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String a7 , String V4 , String a1 , String p7 , String X6 ) {  <CR> this . title = a7 ;  <CR> this . receiver = V4 ;  <CR> this . content = a1 ;  <CR> this . sender = p7 ;  <CR> this . date = X6 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n6 ) {  <CR> Letter [ ] q6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q6 ) ;  <CR> for ( int h2 = 0 ; h2 < 3 ; h2 ++ )  <CR> q6 [ h2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 