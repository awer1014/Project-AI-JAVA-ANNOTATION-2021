 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String f1 , String X3 , String t7 , String j9 , String r5 ) {  <CR> super ( f1 , X3 , t7 , j9 , r5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String e6 , String y4 , String i0 , String r0 , String O3 ) {  <CR> super ( e6 , y4 , i0 , r0 , O3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String B1 , String v , Letter y8 ) {  <CR> this . senderAddr = B1 ;  <CR> this . receiverAddr = v ;  <CR> this . letter = y8 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String I6 , String a2 , String v0 , String v3 , String G6 ) {  <CR> this . title = I6 ;  <CR> this . receiver = a2 ;  <CR> this . content = v0 ;  <CR> this . sender = v3 ;  <CR> this . date = G6 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object D6 ) {  <CR> Letter v7 = ( Letter ) D6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String b0 ) {  <CR> int W4 = 0 ;  <CR> for ( int J4 = 0 ; J4 < b0 . length ( ) ; J4 ++ ) {  <CR> char T = b0 . charAt ( J4 ) ;  <CR> W4 = W4 * 10 + T - '0' ;  <CR> }  <CR> return W4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] L2 ) {  <CR> Letter [ ] Z9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z9 ) ;  <CR> for ( int L = 0 ; L < 3 ; L ++ )  <CR> Z9 [ L ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 