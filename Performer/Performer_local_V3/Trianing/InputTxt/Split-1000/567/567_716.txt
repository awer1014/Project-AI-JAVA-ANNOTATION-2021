 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u8 , String W5 , String j5 , String k3 , String A0 ) {  <CR> super ( u8 , W5 , j5 , k3 , A0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String W4 , String u8 , String M0 , String W8 , String v4 ) {  <CR> super ( W4 , u8 , M0 , W8 , v4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String x0 , String C9 , Letter s9 ) {  <CR> this . senderAddr = x0 ;  <CR> this . receiverAddr = C9 ;  <CR> this . letter = s9 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String X6 , String L9 , String O6 , String M8 , String f ) {  <CR> this . title = X6 ;  <CR> this . receiver = L9 ;  <CR> this . content = O6 ;  <CR> this . sender = M8 ;  <CR> this . date = f ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String L0 ) {  <CR> int q7 = 0 ;  <CR> for ( int Z3 = 0 ; Z3 < L0 . length ( ) ; Z3 ++ ) {  <CR> char D = L0 . charAt ( Z3 ) ;  <CR> q7 = q7 * 10 + D - '0' ;  <CR> }  <CR> return q7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object Q4 ) {  <CR> Letter y5 = ( Letter ) Q4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] P7 ) {  <CR> Letter [ ] l4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l4 ) ;  <CR> for ( int Z5 = 0 ; Z5 < 3 ; Z5 ++ )  <CR> l4 [ Z5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 