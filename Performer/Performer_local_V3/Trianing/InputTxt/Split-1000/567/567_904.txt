 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String S0 , String w5 , String i5 , String B4 , String V3 ) {  <CR> super ( S0 , w5 , i5 , B4 , V3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String J1 , String H8 , String x4 , String T7 , String j2 ) {  <CR> super ( J1 , H8 , x4 , T7 , j2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String O2 , String t7 , Letter r5 ) {  <CR> this . senderAddr = O2 ;  <CR> this . receiverAddr = t7 ;  <CR> this . letter = r5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String l , String a , String T5 , String A3 , String x8 ) {  <CR> this . title = l ;  <CR> this . receiver = a ;  <CR> this . content = T5 ;  <CR> this . sender = A3 ;  <CR> this . date = x8 ;  <CR> }  <CR> int valueOf ( String T1 ) {  <CR> int R8 = 0 ;  <CR> for ( int w8 = 0 ; w8 < T1 . length ( ) ; w8 ++ ) {  <CR> char E9 = T1 . charAt ( w8 ) ;  <CR> R8 = R8 * 10 + E9 - '0' ;  <CR> }  <CR> return R8 ;  <CR> }  <CR> public int compareTo ( Object J6 ) {  <CR> Letter B1 = ( Letter ) J6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] q ) {  <CR> Letter [ ] C4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C4 ) ;  <CR> for ( int t4 = 0 ; t4 < 3 ; t4 ++ )  <CR> C4 [ t4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 