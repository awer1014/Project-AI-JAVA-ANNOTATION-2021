 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L3 , String I7 , String W9 , String W2 , String a9 ) {  <CR> super ( L3 , I7 , W9 , W2 , a9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String F0 , String s9 , String P1 , String z4 , String V3 ) {  <CR> super ( F0 , s9 , P1 , z4 , V3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String v7 , String h2 , Letter v2 ) {  <CR> this . senderAddr = v7 ;  <CR> this . receiverAddr = h2 ;  <CR> this . letter = v2 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String s2 , String F7 , String Q , String d7 , String d5 ) {  <CR> this . title = s2 ;  <CR> this . receiver = F7 ;  <CR> this . content = Q ;  <CR> this . sender = d7 ;  <CR> this . date = d5 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String j4 ) {  <CR> int h9 = 0 ;  <CR> for ( int e = 0 ; e < j4 . length ( ) ; e ++ ) {  <CR> char B0 = j4 . charAt ( e ) ;  <CR> h9 = h9 * 10 + B0 - '0' ;  <CR> }  <CR> return h9 ;  <CR> }  <CR> public int compareTo ( Object B9 ) {  <CR> Letter s8 = ( Letter ) B9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] O4 ) {  <CR> Letter [ ] Y6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y6 ) ;  <CR> for ( int x7 = 0 ; x7 < 3 ; x7 ++ )  <CR> Y6 [ x7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 