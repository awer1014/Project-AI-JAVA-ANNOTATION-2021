 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String r7 , String u , String F5 , String Z6 , String M ) {  <CR> super ( r7 , u , F5 , Z6 , M ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L9 , String S6 , String B3 , String R8 , String i6 ) {  <CR> super ( L9 , S6 , B3 , R8 , i6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String p7 , String Z4 , Letter N3 ) {  <CR> this . senderAddr = p7 ;  <CR> this . receiverAddr = Z4 ;  <CR> this . letter = N3 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String B8 ) {  <CR> int I6 = 0 ;  <CR> for ( int U7 = 0 ; U7 < B8 . length ( ) ; U7 ++ ) {  <CR> char R4 = B8 . charAt ( U7 ) ;  <CR> I6 = I6 * 10 + R4 - '0' ;  <CR> }  <CR> return I6 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object x9 ) {  <CR> Letter G2 = ( Letter ) x9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String N0 , String Z1 , String A6 , String A9 , String e5 ) {  <CR> this . title = N0 ;  <CR> this . receiver = Z1 ;  <CR> this . content = A6 ;  <CR> this . sender = A9 ;  <CR> this . date = e5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] v6 ) {  <CR> Letter [ ] o5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o5 ) ;  <CR> for ( int b8 = 0 ; b8 < 3 ; b8 ++ )  <CR> o5 [ b8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 