 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T3 , String v8 , String m7 , String j5 , String y ) {  <CR> super ( T3 , v8 , m7 , j5 , y ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s , String B8 , String x3 , String j8 , String N ) {  <CR> super ( s , B8 , x3 , j8 , N ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String S5 , String f7 , Letter g1 ) {  <CR> this . senderAddr = S5 ;  <CR> this . receiverAddr = f7 ;  <CR> this . letter = g1 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String t7 ) {  <CR> int H7 = 0 ;  <CR> for ( int Z9 = 0 ; Z9 < t7 . length ( ) ; Z9 ++ ) {  <CR> char W2 = t7 . charAt ( Z9 ) ;  <CR> H7 = H7 * 10 + W2 - '0' ;  <CR> }  <CR> return H7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String O , String Y , String z1 , String i6 , String o ) {  <CR> this . title = O ;  <CR> this . receiver = Y ;  <CR> this . content = z1 ;  <CR> this . sender = i6 ;  <CR> this . date = o ;  <CR> }  <CR> public int compareTo ( Object l0 ) {  <CR> Letter N = ( Letter ) l0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] G8 ) {  <CR> Letter [ ] b1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b1 ) ;  <CR> for ( int V8 = 0 ; V8 < 3 ; V8 ++ )  <CR> b1 [ V8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 