 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String l , String j7 , String g3 , String Q , String F1 ) {  <CR> super ( l , j7 , g3 , Q , F1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String h , String Z9 , String Q9 , String S2 , String N4 ) {  <CR> super ( h , Z9 , Q9 , S2 , N4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String q3 , String o2 , Letter z4 ) {  <CR> this . senderAddr = q3 ;  <CR> this . receiverAddr = o2 ;  <CR> this . letter = z4 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String K4 , String K7 , String a7 , String t2 , String S1 ) {  <CR> this . title = K4 ;  <CR> this . receiver = K7 ;  <CR> this . content = a7 ;  <CR> this . sender = t2 ;  <CR> this . date = S1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String d2 ) {  <CR> int h7 = 0 ;  <CR> for ( int y9 = 0 ; y9 < d2 . length ( ) ; y9 ++ ) {  <CR> char F3 = d2 . charAt ( y9 ) ;  <CR> h7 = h7 * 10 + F3 - '0' ;  <CR> }  <CR> return h7 ;  <CR> }  <CR> public int compareTo ( Object Y3 ) {  <CR> Letter d0 = ( Letter ) Y3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Q5 ) {  <CR> Letter [ ] D0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( D0 ) ;  <CR> for ( int j8 = 0 ; j8 < 3 ; j8 ++ )  <CR> D0 [ j8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 