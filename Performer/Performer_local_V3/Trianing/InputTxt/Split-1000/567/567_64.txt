 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String Q4 , String Y1 , String n6 , String M7 , String W ) {  <CR> super ( Q4 , Y1 , n6 , M7 , W ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String r3 , String p2 , String T7 , String I1 , String I7 ) {  <CR> super ( r3 , p2 , T7 , I1 , I7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String e7 , String f2 , Letter j2 ) {  <CR> this . senderAddr = e7 ;  <CR> this . receiverAddr = f2 ;  <CR> this . letter = j2 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String D7 ) {  <CR> int Z2 = 0 ;  <CR> for ( int Q = 0 ; Q < D7 . length ( ) ; Q ++ ) {  <CR> char A = D7 . charAt ( Q ) ;  <CR> Z2 = Z2 * 10 + A - '0' ;  <CR> }  <CR> return Z2 ;  <CR> }  <CR> Letter ( String a5 , String f8 , String W5 , String a6 , String R8 ) {  <CR> this . title = a5 ;  <CR> this . receiver = f8 ;  <CR> this . content = W5 ;  <CR> this . sender = a6 ;  <CR> this . date = R8 ;  <CR> }  <CR> public int compareTo ( Object p7 ) {  <CR> Letter Q5 = ( Letter ) p7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] f9 ) {  <CR> Letter [ ] f8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( f8 ) ;  <CR> for ( int s = 0 ; s < 3 ; s ++ )  <CR> f8 [ s ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 