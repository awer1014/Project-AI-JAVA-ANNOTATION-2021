 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l3 , String G9 , String X0 , String C1 , String E8 ) {  <CR> super ( l3 , G9 , X0 , C1 , E8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L2 , String v1 , String r , String J6 , String w7 ) {  <CR> super ( L2 , v1 , r , J6 , w7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String c0 , String F1 , Letter y9 ) {  <CR> this . senderAddr = c0 ;  <CR> this . receiverAddr = F1 ;  <CR> this . letter = y9 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object w1 ) {  <CR> Letter D = ( Letter ) w1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String H2 ) {  <CR> int y7 = 0 ;  <CR> for ( int X3 = 0 ; X3 < H2 . length ( ) ; X3 ++ ) {  <CR> char u4 = H2 . charAt ( X3 ) ;  <CR> y7 = y7 * 10 + u4 - '0' ;  <CR> }  <CR> return y7 ;  <CR> }  <CR> Letter ( String J4 , String v , String t5 , String i4 , String k5 ) {  <CR> this . title = J4 ;  <CR> this . receiver = v ;  <CR> this . content = t5 ;  <CR> this . sender = i4 ;  <CR> this . date = k5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] y ) {  <CR> Letter [ ] a8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a8 ) ;  <CR> for ( int b1 = 0 ; b1 < 3 ; b1 ++ )  <CR> a8 [ b1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 