 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y1 , String A1 , String p8 , String H5 , String o9 ) {  <CR> super ( y1 , A1 , p8 , H5 , o9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String D , String a6 , String H2 , String O3 , String n7 ) {  <CR> super ( D , a6 , H2 , O3 , n7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String P0 , String T6 , Letter c7 ) {  <CR> this . senderAddr = P0 ;  <CR> this . receiverAddr = T6 ;  <CR> this . letter = c7 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String Z4 ) {  <CR> int J9 = 0 ;  <CR> for ( int o6 = 0 ; o6 < Z4 . length ( ) ; o6 ++ ) {  <CR> char r2 = Z4 . charAt ( o6 ) ;  <CR> J9 = J9 * 10 + r2 - '0' ;  <CR> }  <CR> return J9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String U6 , String F6 , String g1 , String H9 , String i6 ) {  <CR> this . title = U6 ;  <CR> this . receiver = F6 ;  <CR> this . content = g1 ;  <CR> this . sender = H9 ;  <CR> this . date = i6 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object N0 ) {  <CR> Letter j8 = ( Letter ) N0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x0 ) {  <CR> Letter [ ] Z7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z7 ) ;  <CR> for ( int H0 = 0 ; H0 < 3 ; H0 ++ )  <CR> Z7 [ H0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 