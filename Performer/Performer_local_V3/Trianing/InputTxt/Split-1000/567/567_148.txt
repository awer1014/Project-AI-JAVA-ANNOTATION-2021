 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D1 , String R5 , String A8 , String p7 , String c8 ) {  <CR> super ( D1 , R5 , A8 , p7 , c8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String S3 , String R7 , String q5 , String Q9 , String X1 ) {  <CR> super ( S3 , R7 , q5 , Q9 , X1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String e6 , String r2 , Letter K8 ) {  <CR> this . senderAddr = e6 ;  <CR> this . receiverAddr = r2 ;  <CR> this . letter = K8 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String A5 , String x1 , String g9 , String q2 , String m ) {  <CR> this . title = A5 ;  <CR> this . receiver = x1 ;  <CR> this . content = g9 ;  <CR> this . sender = q2 ;  <CR> this . date = m ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String z8 ) {  <CR> int t9 = 0 ;  <CR> for ( int t0 = 0 ; t0 < z8 . length ( ) ; t0 ++ ) {  <CR> char q3 = z8 . charAt ( t0 ) ;  <CR> t9 = t9 * 10 + q3 - '0' ;  <CR> }  <CR> return t9 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object b4 ) {  <CR> Letter u6 = ( Letter ) b4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] u3 ) {  <CR> Letter [ ] m1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( m1 ) ;  <CR> for ( int L5 = 0 ; L5 < 3 ; L5 ++ )  <CR> m1 [ L5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 