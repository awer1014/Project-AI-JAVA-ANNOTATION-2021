 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String B1 , String T1 , String U2 , String g7 , String U9 ) {  <CR> super ( B1 , T1 , U2 , g7 , U9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String c3 , String s5 , String b3 , String W5 , String M7 ) {  <CR> super ( c3 , s5 , b3 , W5 , M7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String f4 , String u0 , Letter p8 ) {  <CR> this . senderAddr = f4 ;  <CR> this . receiverAddr = u0 ;  <CR> this . letter = p8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String M6 , String G3 , String Q0 , String k2 , String P4 ) {  <CR> this . title = M6 ;  <CR> this . receiver = G3 ;  <CR> this . content = Q0 ;  <CR> this . sender = k2 ;  <CR> this . date = P4 ;  <CR> }  <CR> public int compareTo ( Object v6 ) {  <CR> Letter V8 = ( Letter ) v6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String q5 ) {  <CR> int u6 = 0 ;  <CR> for ( int H8 = 0 ; H8 < q5 . length ( ) ; H8 ++ ) {  <CR> char s = q5 . charAt ( H8 ) ;  <CR> u6 = u6 * 10 + s - '0' ;  <CR> }  <CR> return u6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w1 ) {  <CR> Letter [ ] g6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( g6 ) ;  <CR> for ( int R8 = 0 ; R8 < 3 ; R8 ++ )  <CR> g6 [ R8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 