 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String k7 , String l2 , String u8 , String c , String H4 ) {  <CR> super ( k7 , l2 , u8 , c , H4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String M8 , String F8 , String E2 , String W9 , String T7 ) {  <CR> super ( M8 , F8 , E2 , W9 , T7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String U0 , String A9 , Letter x6 ) {  <CR> this . senderAddr = U0 ;  <CR> this . receiverAddr = A9 ;  <CR> this . letter = x6 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String p6 , String o , String q9 , String C5 , String X0 ) {  <CR> this . title = p6 ;  <CR> this . receiver = o ;  <CR> this . content = q9 ;  <CR> this . sender = C5 ;  <CR> this . date = X0 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object g6 ) {  <CR> Letter H8 = ( Letter ) g6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String N7 ) {  <CR> int N1 = 0 ;  <CR> for ( int J4 = 0 ; J4 < N7 . length ( ) ; J4 ++ ) {  <CR> char n6 = N7 . charAt ( J4 ) ;  <CR> N1 = N1 * 10 + n6 - '0' ;  <CR> }  <CR> return N1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] z2 ) {  <CR> Letter [ ] s4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s4 ) ;  <CR> for ( int P8 = 0 ; P8 < 3 ; P8 ++ )  <CR> s4 [ P8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 