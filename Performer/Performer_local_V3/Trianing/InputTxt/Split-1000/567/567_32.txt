 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String E8 , String y7 , String V7 , String c4 , String R5 ) {  <CR> super ( E8 , y7 , V7 , c4 , R5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String l2 , String C9 , String q0 , String e , String G0 ) {  <CR> super ( l2 , C9 , q0 , e , G0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String g6 , String h2 , Letter k6 ) {  <CR> this . senderAddr = g6 ;  <CR> this . receiverAddr = h2 ;  <CR> this . letter = k6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object P9 ) {  <CR> Letter t8 = ( Letter ) P9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String e2 ) {  <CR> int U8 = 0 ;  <CR> for ( int X2 = 0 ; X2 < e2 . length ( ) ; X2 ++ ) {  <CR> char B7 = e2 . charAt ( X2 ) ;  <CR> U8 = U8 * 10 + B7 - '0' ;  <CR> }  <CR> return U8 ;  <CR> }  <CR> Letter ( String z4 , String T3 , String d3 , String L6 , String g7 ) {  <CR> this . title = z4 ;  <CR> this . receiver = T3 ;  <CR> this . content = d3 ;  <CR> this . sender = L6 ;  <CR> this . date = g7 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K3 ) {  <CR> Letter [ ] d6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( d6 ) ;  <CR> for ( int k8 = 0 ; k8 < 3 ; k8 ++ )  <CR> d6 [ k8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 