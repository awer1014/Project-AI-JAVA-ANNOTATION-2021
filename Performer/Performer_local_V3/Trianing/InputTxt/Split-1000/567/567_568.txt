 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String H3 , String J2 , String M2 , String g7 , String B9 ) {  <CR> super ( H3 , J2 , M2 , g7 , B9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String B , String x , String h1 , String E4 , String S8 ) {  <CR> super ( B , x , h1 , E4 , S8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String b , String D7 , Letter L9 ) {  <CR> this . senderAddr = b ;  <CR> this . receiverAddr = D7 ;  <CR> this . letter = L9 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String h2 , String X6 , String a4 , String q , String A8 ) {  <CR> this . title = h2 ;  <CR> this . receiver = X6 ;  <CR> this . content = a4 ;  <CR> this . sender = q ;  <CR> this . date = A8 ;  <CR> }  <CR> int valueOf ( String k4 ) {  <CR> int R5 = 0 ;  <CR> for ( int k8 = 0 ; k8 < k4 . length ( ) ; k8 ++ ) {  <CR> char A9 = k4 . charAt ( k8 ) ;  <CR> R5 = R5 * 10 + A9 - '0' ;  <CR> }  <CR> return R5 ;  <CR> }  <CR> public int compareTo ( Object r7 ) {  <CR> Letter L1 = ( Letter ) r7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] P7 ) {  <CR> Letter [ ] a8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a8 ) ;  <CR> for ( int F4 = 0 ; F4 < 3 ; F4 ++ )  <CR> a8 [ F4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 