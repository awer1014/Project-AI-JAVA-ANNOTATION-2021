 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String t , String l9 , String Q0 , String q7 , String h1 ) {  <CR> super ( t , l9 , Q0 , q7 , h1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String j2 , String V6 , String c3 , String v1 , String F9 ) {  <CR> super ( j2 , V6 , c3 , v1 , F9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String L1 , String j9 , Letter b6 ) {  <CR> this . senderAddr = L1 ;  <CR> this . receiverAddr = j9 ;  <CR> this . letter = b6 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String V2 ) {  <CR> int o7 = 0 ;  <CR> for ( int u1 = 0 ; u1 < V2 . length ( ) ; u1 ++ ) {  <CR> char q2 = V2 . charAt ( u1 ) ;  <CR> o7 = o7 * 10 + q2 - '0' ;  <CR> }  <CR> return o7 ;  <CR> }  <CR> Letter ( String h2 , String c5 , String K0 , String l7 , String k ) {  <CR> this . title = h2 ;  <CR> this . receiver = c5 ;  <CR> this . content = K0 ;  <CR> this . sender = l7 ;  <CR> this . date = k ;  <CR> }  <CR> public int compareTo ( Object S7 ) {  <CR> Letter b1 = ( Letter ) S7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o2 ) {  <CR> Letter [ ] s2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s2 ) ;  <CR> for ( int y0 = 0 ; y0 < 3 ; y0 ++ )  <CR> s2 [ y0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 