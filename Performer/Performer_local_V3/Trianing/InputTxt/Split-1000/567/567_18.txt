 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String q8 , String Z3 , String J3 , String X8 , String f1 ) {  <CR> super ( q8 , Z3 , J3 , X8 , f1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k1 , String B2 , String l1 , String g4 , String W9 ) {  <CR> super ( k1 , B2 , l1 , g4 , W9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String I6 , String z9 , Letter A1 ) {  <CR> this . senderAddr = I6 ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = A1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String u4 ) {  <CR> int k0 = 0 ;  <CR> for ( int r5 = 0 ; r5 < u4 . length ( ) ; r5 ++ ) {  <CR> char s3 = u4 . charAt ( r5 ) ;  <CR> k0 = k0 * 10 + s3 - '0' ;  <CR> }  <CR> return k0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String M5 , String O , String k6 , String z1 , String x6 ) {  <CR> this . title = M5 ;  <CR> this . receiver = O ;  <CR> this . content = k6 ;  <CR> this . sender = z1 ;  <CR> this . date = x6 ;  <CR> }  <CR> public int compareTo ( Object r6 ) {  <CR> Letter b5 = ( Letter ) r6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] H3 ) {  <CR> Letter [ ] A6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( A6 ) ;  <CR> for ( int C6 = 0 ; C6 < 3 ; C6 ++ )  <CR> A6 [ C6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 