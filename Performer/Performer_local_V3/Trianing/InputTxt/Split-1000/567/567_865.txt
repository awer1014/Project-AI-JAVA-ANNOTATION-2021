 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String p5 , String X3 , String g7 , String v1 , String M4 ) {  <CR> super ( p5 , X3 , g7 , v1 , M4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String K0 , String Q7 , String T2 , String H9 , String c8 ) {  <CR> super ( K0 , Q7 , T2 , H9 , c8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String A4 , String Y1 , Letter a ) {  <CR> this . senderAddr = A4 ;  <CR> this . receiverAddr = Y1 ;  <CR> this . letter = a ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String c7 ) {  <CR> int y9 = 0 ;  <CR> for ( int D = 0 ; D < c7 . length ( ) ; D ++ ) {  <CR> char P0 = c7 . charAt ( D ) ;  <CR> y9 = y9 * 10 + P0 - '0' ;  <CR> }  <CR> return y9 ;  <CR> }  <CR> Letter ( String l6 , String v0 , String d3 , String F0 , String D9 ) {  <CR> this . title = l6 ;  <CR> this . receiver = v0 ;  <CR> this . content = d3 ;  <CR> this . sender = F0 ;  <CR> this . date = D9 ;  <CR> }  <CR> public int compareTo ( Object Q1 ) {  <CR> Letter Z1 = ( Letter ) Q1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] l3 ) {  <CR> Letter [ ] r2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( r2 ) ;  <CR> for ( int K6 = 0 ; K6 < 3 ; K6 ++ )  <CR> r2 [ K6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 