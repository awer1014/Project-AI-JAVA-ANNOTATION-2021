 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U1 , String e5 , String k0 , String d1 , String j6 ) {  <CR> super ( U1 , e5 , k0 , d1 , j6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String a6 , String t1 , String k6 , String s4 , String s2 ) {  <CR> super ( a6 , t1 , k6 , s4 , s2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String h6 , String v , Letter b ) {  <CR> this . senderAddr = h6 ;  <CR> this . receiverAddr = v ;  <CR> this . letter = b ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String a6 , String L0 , String K2 , String T4 , String V2 ) {  <CR> this . title = a6 ;  <CR> this . receiver = L0 ;  <CR> this . content = K2 ;  <CR> this . sender = T4 ;  <CR> this . date = V2 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object I9 ) {  <CR> Letter Z8 = ( Letter ) I9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String G1 ) {  <CR> int P8 = 0 ;  <CR> for ( int z1 = 0 ; z1 < G1 . length ( ) ; z1 ++ ) {  <CR> char P5 = G1 . charAt ( z1 ) ;  <CR> P8 = P8 * 10 + P5 - '0' ;  <CR> }  <CR> return P8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] a2 ) {  <CR> Letter [ ] q5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q5 ) ;  <CR> for ( int n = 0 ; n < 3 ; n ++ )  <CR> q5 [ n ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 