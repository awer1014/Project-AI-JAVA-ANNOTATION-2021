 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String S9 , String T4 , String h1 , String v9 , String O ) {  <CR> super ( S9 , T4 , h1 , v9 , O ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String X , String q5 , String p3 , String B4 , String o6 ) {  <CR> super ( X , q5 , p3 , B4 , o6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String U4 , String A9 , Letter a5 ) {  <CR> this . senderAddr = U4 ;  <CR> this . receiverAddr = A9 ;  <CR> this . letter = a5 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object E3 ) {  <CR> Letter S5 = ( Letter ) E3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String w9 , String J9 , String R9 , String P8 , String S3 ) {  <CR> this . title = w9 ;  <CR> this . receiver = J9 ;  <CR> this . content = R9 ;  <CR> this . sender = P8 ;  <CR> this . date = S3 ;  <CR> }  <CR> int valueOf ( String Y8 ) {  <CR> int M5 = 0 ;  <CR> for ( int l1 = 0 ; l1 < Y8 . length ( ) ; l1 ++ ) {  <CR> char U8 = Y8 . charAt ( l1 ) ;  <CR> M5 = M5 * 10 + U8 - '0' ;  <CR> }  <CR> return M5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] h0 ) {  <CR> Letter [ ] k5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( k5 ) ;  <CR> for ( int s9 = 0 ; s9 < 3 ; s9 ++ )  <CR> k5 [ s9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 