 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String i8 , String o7 , String Q8 , String t8 , String j ) {  <CR> super ( i8 , o7 , Q8 , t8 , j ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String U5 , String B6 , String s , String P1 , String i6 ) {  <CR> super ( U5 , B6 , s , P1 , i6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String p2 , String i6 , Letter S8 ) {  <CR> this . senderAddr = p2 ;  <CR> this . receiverAddr = i6 ;  <CR> this . letter = S8 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object K7 ) {  <CR> Letter I1 = ( Letter ) K7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String Z2 ) {  <CR> int d8 = 0 ;  <CR> for ( int U6 = 0 ; U6 < Z2 . length ( ) ; U6 ++ ) {  <CR> char Y1 = Z2 . charAt ( U6 ) ;  <CR> d8 = d8 * 10 + Y1 - '0' ;  <CR> }  <CR> return d8 ;  <CR> }  <CR> Letter ( String n4 , String D8 , String P0 , String A9 , String D2 ) {  <CR> this . title = n4 ;  <CR> this . receiver = D8 ;  <CR> this . content = P0 ;  <CR> this . sender = A9 ;  <CR> this . date = D2 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B3 ) {  <CR> Letter [ ] w2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( w2 ) ;  <CR> for ( int h0 = 0 ; h0 < 3 ; h0 ++ )  <CR> w2 [ h0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 