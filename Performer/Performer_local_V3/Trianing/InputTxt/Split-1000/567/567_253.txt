 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z2 , String b6 , String N7 , String O , String T5 ) {  <CR> super ( z2 , b6 , N7 , O , T5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String q1 , String r3 , String P6 , String e0 , String m ) {  <CR> super ( q1 , r3 , P6 , e0 , m ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String t5 , String l3 , Letter L1 ) {  <CR> this . senderAddr = t5 ;  <CR> this . receiverAddr = l3 ;  <CR> this . letter = L1 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String L0 ) {  <CR> int G6 = 0 ;  <CR> for ( int E6 = 0 ; E6 < L0 . length ( ) ; E6 ++ ) {  <CR> char t9 = L0 . charAt ( E6 ) ;  <CR> G6 = G6 * 10 + t9 - '0' ;  <CR> }  <CR> return G6 ;  <CR> }  <CR> Letter ( String k3 , String F4 , String x6 , String i2 , String A3 ) {  <CR> this . title = k3 ;  <CR> this . receiver = F4 ;  <CR> this . content = x6 ;  <CR> this . sender = i2 ;  <CR> this . date = A3 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object e3 ) {  <CR> Letter s1 = ( Letter ) e3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n7 ) {  <CR> Letter [ ] V = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( V ) ;  <CR> for ( int s1 = 0 ; s1 < 3 ; s1 ++ )  <CR> V [ s1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 