 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String o2 , String l5 , String j4 , String c9 , String s3 ) {  <CR> super ( o2 , l5 , j4 , c9 , s3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String I1 , String n3 , String j2 , String m8 , String H4 ) {  <CR> super ( I1 , n3 , j2 , m8 , H4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String v2 , String c6 , Letter a3 ) {  <CR> this . senderAddr = v2 ;  <CR> this . receiverAddr = c6 ;  <CR> this . letter = a3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String q9 ) {  <CR> int n9 = 0 ;  <CR> for ( int j9 = 0 ; j9 < q9 . length ( ) ; j9 ++ ) {  <CR> char N4 = q9 . charAt ( j9 ) ;  <CR> n9 = n9 * 10 + N4 - '0' ;  <CR> }  <CR> return n9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String X6 , String U9 , String D8 , String t9 , String D3 ) {  <CR> this . title = X6 ;  <CR> this . receiver = U9 ;  <CR> this . content = D8 ;  <CR> this . sender = t9 ;  <CR> this . date = D3 ;  <CR> }  <CR> public int compareTo ( Object m8 ) {  <CR> Letter x5 = ( Letter ) m8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n4 ) {  <CR> Letter [ ] O5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( O5 ) ;  <CR> for ( int h8 = 0 ; h8 < 3 ; h8 ++ )  <CR> O5 [ h8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 