 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String J4 , String g7 , String l2 , String y4 , String L4 ) {  <CR> super ( J4 , g7 , l2 , y4 , L4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String Y5 , String U9 , String e3 , String L6 , String z7 ) {  <CR> super ( Y5 , U9 , e3 , L6 , z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String I2 , String y , Letter q3 ) {  <CR> this . senderAddr = I2 ;  <CR> this . receiverAddr = y ;  <CR> this . letter = q3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String t8 ) {  <CR> int S6 = 0 ;  <CR> for ( int i = 0 ; i < t8 . length ( ) ; i ++ ) {  <CR> char P9 = t8 . charAt ( i ) ;  <CR> S6 = S6 * 10 + P9 - '0' ;  <CR> }  <CR> return S6 ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object Y7 ) {  <CR> Letter c6 = ( Letter ) Y7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String Z4 , String r , String Y1 , String Q0 , String U0 ) {  <CR> this . title = Z4 ;  <CR> this . receiver = r ;  <CR> this . content = Y1 ;  <CR> this . sender = Q0 ;  <CR> this . date = U0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] r5 ) {  <CR> Letter [ ] o3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o3 ) ;  <CR> for ( int p7 = 0 ; p7 < 3 ; p7 ++ )  <CR> o3 [ p7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 