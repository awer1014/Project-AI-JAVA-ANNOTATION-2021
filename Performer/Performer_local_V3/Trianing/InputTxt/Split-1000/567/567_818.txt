 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T9 , String N8 , String m , String H6 , String V3 ) {  <CR> super ( T9 , N8 , m , H6 , V3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String a5 , String x2 , String m4 , String B0 , String J2 ) {  <CR> super ( a5 , x2 , m4 , B0 , J2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String s7 , String F4 , Letter U2 ) {  <CR> this . senderAddr = s7 ;  <CR> this . receiverAddr = F4 ;  <CR> this . letter = U2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String r6 ) {  <CR> int l7 = 0 ;  <CR> for ( int t5 = 0 ; t5 < r6 . length ( ) ; t5 ++ ) {  <CR> char s2 = r6 . charAt ( t5 ) ;  <CR> l7 = l7 * 10 + s2 - '0' ;  <CR> }  <CR> return l7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String a2 , String b6 , String L4 , String h4 , String j3 ) {  <CR> this . title = a2 ;  <CR> this . receiver = b6 ;  <CR> this . content = L4 ;  <CR> this . sender = h4 ;  <CR> this . date = j3 ;  <CR> }  <CR> public int compareTo ( Object v5 ) {  <CR> Letter b = ( Letter ) v5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] R4 ) {  <CR> Letter [ ] Z1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z1 ) ;  <CR> for ( int S6 = 0 ; S6 < 3 ; S6 ++ )  <CR> Z1 [ S6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 