 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y5 , String n7 , String U3 , String S5 , String e1 ) {  <CR> super ( y5 , n7 , U3 , S5 , e1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String B9 , String c3 , String W1 , String S7 , String M5 ) {  <CR> super ( B9 , c3 , W1 , S7 , M5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String z8 , String I2 , Letter r5 ) {  <CR> this . senderAddr = z8 ;  <CR> this . receiverAddr = I2 ;  <CR> this . letter = r5 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String B7 , String d0 , String A5 , String q0 , String K2 ) {  <CR> this . title = B7 ;  <CR> this . receiver = d0 ;  <CR> this . content = A5 ;  <CR> this . sender = q0 ;  <CR> this . date = K2 ;  <CR> }  <CR> int valueOf ( String O ) {  <CR> int j9 = 0 ;  <CR> for ( int R = 0 ; R < O . length ( ) ; R ++ ) {  <CR> char c5 = O . charAt ( R ) ;  <CR> j9 = j9 * 10 + c5 - '0' ;  <CR> }  <CR> return j9 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object v6 ) {  <CR> Letter m4 = ( Letter ) v6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] F9 ) {  <CR> Letter [ ] l9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l9 ) ;  <CR> for ( int R4 = 0 ; R4 < 3 ; R4 ++ )  <CR> l9 [ R4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 