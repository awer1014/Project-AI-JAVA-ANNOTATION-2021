 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String f9 , String E8 , String Z6 , String k6 , String D7 ) {  <CR> super ( f9 , E8 , Z6 , k6 , D7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s3 , String h2 , String o1 , String w5 , String I5 ) {  <CR> super ( s3 , h2 , o1 , w5 , I5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String M9 , String E6 , Letter Z5 ) {  <CR> this . senderAddr = M9 ;  <CR> this . receiverAddr = E6 ;  <CR> this . letter = Z5 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object j5 ) {  <CR> Letter o = ( Letter ) j5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String M0 ) {  <CR> int l9 = 0 ;  <CR> for ( int V9 = 0 ; V9 < M0 . length ( ) ; V9 ++ ) {  <CR> char V1 = M0 . charAt ( V9 ) ;  <CR> l9 = l9 * 10 + V1 - '0' ;  <CR> }  <CR> return l9 ;  <CR> }  <CR> Letter ( String u9 , String J7 , String S2 , String Z1 , String H8 ) {  <CR> this . title = u9 ;  <CR> this . receiver = J7 ;  <CR> this . content = S2 ;  <CR> this . sender = Z1 ;  <CR> this . date = H8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Q9 ) {  <CR> Letter [ ] s7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s7 ) ;  <CR> for ( int h = 0 ; h < 3 ; h ++ )  <CR> s7 [ h ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 