 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String J0 , String t3 , String i8 , String E9 , String i4 ) {  <CR> super ( J0 , t3 , i8 , E9 , i4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s0 , String g0 , String H5 , String m7 , String k2 ) {  <CR> super ( s0 , g0 , H5 , m7 , k2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String X0 , String X8 , Letter y1 ) {  <CR> this . senderAddr = X0 ;  <CR> this . receiverAddr = X8 ;  <CR> this . letter = y1 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String L4 ) {  <CR> int U6 = 0 ;  <CR> for ( int H7 = 0 ; H7 < L4 . length ( ) ; H7 ++ ) {  <CR> char R1 = L4 . charAt ( H7 ) ;  <CR> U6 = U6 * 10 + R1 - '0' ;  <CR> }  <CR> return U6 ;  <CR> }  <CR> public int compareTo ( Object q5 ) {  <CR> Letter Q1 = ( Letter ) q5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String p1 , String C6 , String H8 , String J5 , String H6 ) {  <CR> this . title = p1 ;  <CR> this . receiver = C6 ;  <CR> this . content = H8 ;  <CR> this . sender = J5 ;  <CR> this . date = H6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w8 ) {  <CR> Letter [ ] I = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I ) ;  <CR> for ( int p6 = 0 ; p6 < 3 ; p6 ++ )  <CR> I [ p6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 