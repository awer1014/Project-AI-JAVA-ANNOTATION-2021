 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T5 , String F2 , String A7 , String h1 , String X6 ) {  <CR> super ( T5 , F2 , A7 , h1 , X6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String T6 , String O6 , String D1 , String b , String u3 ) {  <CR> super ( T6 , O6 , D1 , b , u3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String U3 , String Y8 , Letter K2 ) {  <CR> this . senderAddr = U3 ;  <CR> this . receiverAddr = Y8 ;  <CR> this . letter = K2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String i5 , String e5 , String t9 , String c1 , String J4 ) {  <CR> this . title = i5 ;  <CR> this . receiver = e5 ;  <CR> this . content = t9 ;  <CR> this . sender = c1 ;  <CR> this . date = J4 ;  <CR> }  <CR> public int compareTo ( Object y7 ) {  <CR> Letter R5 = ( Letter ) y7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String V6 ) {  <CR> int K0 = 0 ;  <CR> for ( int r = 0 ; r < V6 . length ( ) ; r ++ ) {  <CR> char k7 = V6 . charAt ( r ) ;  <CR> K0 = K0 * 10 + k7 - '0' ;  <CR> }  <CR> return K0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] D0 ) {  <CR> Letter [ ] U8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( U8 ) ;  <CR> for ( int Q6 = 0 ; Q6 < 3 ; Q6 ++ )  <CR> U8 [ Q6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 