 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q0 , String b0 , String r3 , String D0 , String o3 ) {  <CR> super ( Q0 , b0 , r3 , D0 , o3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String J1 , String i4 , String p1 , String u9 , String b0 ) {  <CR> super ( J1 , i4 , p1 , u9 , b0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String Q , String l2 , Letter U ) {  <CR> this . senderAddr = Q ;  <CR> this . receiverAddr = l2 ;  <CR> this . letter = U ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String W2 , String q5 , String Y , String p5 , String L6 ) {  <CR> this . title = W2 ;  <CR> this . receiver = q5 ;  <CR> this . content = Y ;  <CR> this . sender = p5 ;  <CR> this . date = L6 ;  <CR> }  <CR> int valueOf ( String i3 ) {  <CR> int z9 = 0 ;  <CR> for ( int g = 0 ; g < i3 . length ( ) ; g ++ ) {  <CR> char y1 = i3 . charAt ( g ) ;  <CR> z9 = z9 * 10 + y1 - '0' ;  <CR> }  <CR> return z9 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object J8 ) {  <CR> Letter Q8 = ( Letter ) J8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] H6 ) {  <CR> Letter [ ] T = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( T ) ;  <CR> for ( int A4 = 0 ; A4 < 3 ; A4 ++ )  <CR> T [ A4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 