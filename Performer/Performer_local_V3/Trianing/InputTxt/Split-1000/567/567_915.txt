 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A5 , String T3 , String F0 , String h0 , String m5 ) {  <CR> super ( A5 , T3 , F0 , h0 , m5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String A8 , String X4 , String u6 , String s1 , String d1 ) {  <CR> super ( A8 , X4 , u6 , s1 , d1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String o , String g9 , Letter l5 ) {  <CR> this . senderAddr = o ;  <CR> this . receiverAddr = g9 ;  <CR> this . letter = l5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object Q8 ) {  <CR> Letter I4 = ( Letter ) Q8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String E6 ) {  <CR> int p9 = 0 ;  <CR> for ( int Z9 = 0 ; Z9 < E6 . length ( ) ; Z9 ++ ) {  <CR> char y5 = E6 . charAt ( Z9 ) ;  <CR> p9 = p9 * 10 + y5 - '0' ;  <CR> }  <CR> return p9 ;  <CR> }  <CR> Letter ( String S3 , String O , String f , String G9 , String a0 ) {  <CR> this . title = S3 ;  <CR> this . receiver = O ;  <CR> this . content = f ;  <CR> this . sender = G9 ;  <CR> this . date = a0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x2 ) {  <CR> Letter [ ] n = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( n ) ;  <CR> for ( int L6 = 0 ; L6 < 3 ; L6 ++ )  <CR> n [ L6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 