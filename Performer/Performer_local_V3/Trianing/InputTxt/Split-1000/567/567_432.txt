 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c7 , String y0 , String J1 , String p7 , String h0 ) {  <CR> super ( c7 , y0 , J1 , p7 , h0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L4 , String o4 , String g9 , String k1 , String J6 ) {  <CR> super ( L4 , o4 , g9 , k1 , J6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String W0 , String R5 , Letter n1 ) {  <CR> this . senderAddr = W0 ;  <CR> this . receiverAddr = R5 ;  <CR> this . letter = n1 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String J ) {  <CR> int K6 = 0 ;  <CR> for ( int K0 = 0 ; K0 < J . length ( ) ; K0 ++ ) {  <CR> char f2 = J . charAt ( K0 ) ;  <CR> K6 = K6 * 10 + f2 - '0' ;  <CR> }  <CR> return K6 ;  <CR> }  <CR> Letter ( String Q7 , String a4 , String o6 , String o2 , String M9 ) {  <CR> this . title = Q7 ;  <CR> this . receiver = a4 ;  <CR> this . content = o6 ;  <CR> this . sender = o2 ;  <CR> this . date = M9 ;  <CR> }  <CR> public int compareTo ( Object L1 ) {  <CR> Letter Y6 = ( Letter ) L1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] m7 ) {  <CR> Letter [ ] u8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u8 ) ;  <CR> for ( int x4 = 0 ; x4 < 3 ; x4 ++ )  <CR> u8 [ x4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 