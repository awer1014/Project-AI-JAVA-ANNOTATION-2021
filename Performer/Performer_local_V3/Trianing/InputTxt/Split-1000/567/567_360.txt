 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R1 , String t1 , String z3 , String u0 , String F5 ) {  <CR> super ( R1 , t1 , z3 , u0 , F5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String v9 , String d4 , String m3 , String n7 , String k9 ) {  <CR> super ( v9 , d4 , m3 , n7 , k9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String j6 , String i7 , Letter L4 ) {  <CR> this . senderAddr = j6 ;  <CR> this . receiverAddr = i7 ;  <CR> this . letter = L4 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object f7 ) {  <CR> Letter o0 = ( Letter ) f7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String x5 , String a9 , String O7 , String y4 , String p7 ) {  <CR> this . title = x5 ;  <CR> this . receiver = a9 ;  <CR> this . content = O7 ;  <CR> this . sender = y4 ;  <CR> this . date = p7 ;  <CR> }  <CR> int valueOf ( String z2 ) {  <CR> int H1 = 0 ;  <CR> for ( int z4 = 0 ; z4 < z2 . length ( ) ; z4 ++ ) {  <CR> char w6 = z2 . charAt ( z4 ) ;  <CR> H1 = H1 * 10 + w6 - '0' ;  <CR> }  <CR> return H1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] O4 ) {  <CR> Letter [ ] k3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( k3 ) ;  <CR> for ( int G1 = 0 ; G1 < 3 ; G1 ++ )  <CR> k3 [ G1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 