 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u1 , String I2 , String T9 , String Y7 , String X6 ) {  <CR> super ( u1 , I2 , T9 , Y7 , X6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String I1 , String s8 , String t4 , String p0 , String a5 ) {  <CR> super ( I1 , s8 , t4 , p0 , a5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String c7 , String e3 , Letter M9 ) {  <CR> this . senderAddr = c7 ;  <CR> this . receiverAddr = e3 ;  <CR> this . letter = M9 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> public int compareTo ( Object s7 ) {  <CR> Letter V2 = ( Letter ) s7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String p7 , String T6 , String c4 , String K3 , String Y6 ) {  <CR> this . title = p7 ;  <CR> this . receiver = T6 ;  <CR> this . content = c4 ;  <CR> this . sender = K3 ;  <CR> this . date = Y6 ;  <CR> }  <CR> int valueOf ( String x8 ) {  <CR> int A4 = 0 ;  <CR> for ( int s8 = 0 ; s8 < x8 . length ( ) ; s8 ++ ) {  <CR> char s2 = x8 . charAt ( s8 ) ;  <CR> A4 = A4 * 10 + s2 - '0' ;  <CR> }  <CR> return A4 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B0 ) {  <CR> Letter [ ] e7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( e7 ) ;  <CR> for ( int R7 = 0 ; R7 < 3 ; R7 ++ )  <CR> e7 [ R7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 