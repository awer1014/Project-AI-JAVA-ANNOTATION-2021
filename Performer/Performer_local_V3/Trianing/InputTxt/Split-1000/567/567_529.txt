 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q7 , String z4 , String v8 , String S6 , String Z8 ) {  <CR> super ( Q7 , z4 , v8 , S6 , Z8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String U5 , String k , String B9 , String g2 , String f6 ) {  <CR> super ( U5 , k , B9 , g2 , f6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String a1 , String P1 , Letter u5 ) {  <CR> this . senderAddr = a1 ;  <CR> this . receiverAddr = P1 ;  <CR> this . letter = u5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String H1 ) {  <CR> int u3 = 0 ;  <CR> for ( int X5 = 0 ; X5 < H1 . length ( ) ; X5 ++ ) {  <CR> char Q5 = H1 . charAt ( X5 ) ;  <CR> u3 = u3 * 10 + Q5 - '0' ;  <CR> }  <CR> return u3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String K9 , String Z7 , String K , String C5 , String F ) {  <CR> this . title = K9 ;  <CR> this . receiver = Z7 ;  <CR> this . content = K ;  <CR> this . sender = C5 ;  <CR> this . date = F ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object p4 ) {  <CR> Letter c9 = ( Letter ) p4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] G2 ) {  <CR> Letter [ ] q2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q2 ) ;  <CR> for ( int k5 = 0 ; k5 < 3 ; k5 ++ )  <CR> q2 [ k5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 