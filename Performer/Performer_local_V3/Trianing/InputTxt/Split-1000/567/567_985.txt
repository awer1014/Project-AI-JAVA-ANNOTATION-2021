 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I2 , String t0 , String Q2 , String Z5 , String x4 ) {  <CR> super ( I2 , t0 , Q2 , Z5 , x4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Q9 , String s2 , String k8 , String H6 , String y9 ) {  <CR> super ( Q9 , s2 , k8 , H6 , y9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String g3 , String i7 , Letter C7 ) {  <CR> this . senderAddr = g3 ;  <CR> this . receiverAddr = i7 ;  <CR> this . letter = C7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String R2 , String s8 , String L8 , String W5 , String g2 ) {  <CR> this . title = R2 ;  <CR> this . receiver = s8 ;  <CR> this . content = L8 ;  <CR> this . sender = W5 ;  <CR> this . date = g2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String r1 ) {  <CR> int h7 = 0 ;  <CR> for ( int P7 = 0 ; P7 < r1 . length ( ) ; P7 ++ ) {  <CR> char r5 = r1 . charAt ( P7 ) ;  <CR> h7 = h7 * 10 + r5 - '0' ;  <CR> }  <CR> return h7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object Y3 ) {  <CR> Letter V1 = ( Letter ) Y3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x3 ) {  <CR> Letter [ ] F8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( F8 ) ;  <CR> for ( int S3 = 0 ; S3 < 3 ; S3 ++ )  <CR> F8 [ S3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 