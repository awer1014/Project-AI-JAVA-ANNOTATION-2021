 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String y6 , String m5 , String J8 , String i7 , String e7 ) {  <CR> super ( y6 , m5 , J8 , i7 , e7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String g6 , String u1 , String L1 , String Z8 , String U4 ) {  <CR> super ( g6 , u1 , L1 , Z8 , U4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String d1 , String U3 , Letter C0 ) {  <CR> this . senderAddr = d1 ;  <CR> this . receiverAddr = U3 ;  <CR> this . letter = C0 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object K5 ) {  <CR> Letter L1 = ( Letter ) K5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String e6 ) {  <CR> int e8 = 0 ;  <CR> for ( int C0 = 0 ; C0 < e6 . length ( ) ; C0 ++ ) {  <CR> char Q6 = e6 . charAt ( C0 ) ;  <CR> e8 = e8 * 10 + Q6 - '0' ;  <CR> }  <CR> return e8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String L5 , String g0 , String W7 , String H8 , String F1 ) {  <CR> this . title = L5 ;  <CR> this . receiver = g0 ;  <CR> this . content = W7 ;  <CR> this . sender = H8 ;  <CR> this . date = F1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n1 ) {  <CR> Letter [ ] I6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I6 ) ;  <CR> for ( int O3 = 0 ; O3 < 3 ; O3 ++ )  <CR> I6 [ O3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 