 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String a6 , String k3 , String h6 , String p1 , String E3 ) {  <CR> super ( a6 , k3 , h6 , p1 , E3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String T7 , String f7 , String z3 , String j , String A ) {  <CR> super ( T7 , f7 , z3 , j , A ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String j3 , String U2 , Letter I0 ) {  <CR> this . senderAddr = j3 ;  <CR> this . receiverAddr = U2 ;  <CR> this . letter = I0 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String K5 , String W5 , String C9 , String q5 , String N1 ) {  <CR> this . title = K5 ;  <CR> this . receiver = W5 ;  <CR> this . content = C9 ;  <CR> this . sender = q5 ;  <CR> this . date = N1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String c9 ) {  <CR> int S4 = 0 ;  <CR> for ( int Y = 0 ; Y < c9 . length ( ) ; Y ++ ) {  <CR> char t6 = c9 . charAt ( Y ) ;  <CR> S4 = S4 * 10 + t6 - '0' ;  <CR> }  <CR> return S4 ;  <CR> }  <CR> public int compareTo ( Object u ) {  <CR> Letter J5 = ( Letter ) u ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d ) {  <CR> Letter [ ] S2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S2 ) ;  <CR> for ( int S6 = 0 ; S6 < 3 ; S6 ++ )  <CR> S2 [ S6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 