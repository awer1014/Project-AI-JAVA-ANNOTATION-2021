 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String n0 , String a9 , String w8 , String u9 , String J2 ) {  <CR> super ( n0 , a9 , w8 , u9 , J2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String D6 , String A4 , String n2 , String M4 , String d2 ) {  <CR> super ( D6 , A4 , n2 , M4 , d2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String N8 , String C0 , Letter Z9 ) {  <CR> this . senderAddr = N8 ;  <CR> this . receiverAddr = C0 ;  <CR> this . letter = Z9 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String L1 ) {  <CR> int y2 = 0 ;  <CR> for ( int z3 = 0 ; z3 < L1 . length ( ) ; z3 ++ ) {  <CR> char A2 = L1 . charAt ( z3 ) ;  <CR> y2 = y2 * 10 + A2 - '0' ;  <CR> }  <CR> return y2 ;  <CR> }  <CR> public int compareTo ( Object R2 ) {  <CR> Letter N3 = ( Letter ) R2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String x2 , String q4 , String L0 , String n4 , String O3 ) {  <CR> this . title = x2 ;  <CR> this . receiver = q4 ;  <CR> this . content = L0 ;  <CR> this . sender = n4 ;  <CR> this . date = O3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w0 ) {  <CR> Letter [ ] C1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C1 ) ;  <CR> for ( int L1 = 0 ; L1 < 3 ; L1 ++ )  <CR> C1 [ L1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 