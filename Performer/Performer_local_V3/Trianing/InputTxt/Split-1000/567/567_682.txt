 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q6 , String d8 , String G3 , String A0 , String c3 ) {  <CR> super ( Q6 , d8 , G3 , A0 , c3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String g7 , String m0 , String D9 , String b9 , String q4 ) {  <CR> super ( g7 , m0 , D9 , b9 , q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String e1 , String U9 , Letter M5 ) {  <CR> this . senderAddr = e1 ;  <CR> this . receiverAddr = U9 ;  <CR> this . letter = M5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String X0 ) {  <CR> int I1 = 0 ;  <CR> for ( int e2 = 0 ; e2 < X0 . length ( ) ; e2 ++ ) {  <CR> char d8 = X0 . charAt ( e2 ) ;  <CR> I1 = I1 * 10 + d8 - '0' ;  <CR> }  <CR> return I1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String c1 , String U7 , String f , String T3 , String v9 ) {  <CR> this . title = c1 ;  <CR> this . receiver = U7 ;  <CR> this . content = f ;  <CR> this . sender = T3 ;  <CR> this . date = v9 ;  <CR> }  <CR> public int compareTo ( Object G8 ) {  <CR> Letter T8 = ( Letter ) G8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U1 ) {  <CR> Letter [ ] d5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( d5 ) ;  <CR> for ( int v2 = 0 ; v2 < 3 ; v2 ++ )  <CR> d5 [ v2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 