 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String b6 , String M1 , String c6 , String c , String E0 ) {  <CR> super ( b6 , M1 , c6 , c , E0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String E5 , String n6 , String q9 , String B4 , String s6 ) {  <CR> super ( E5 , n6 , q9 , B4 , s6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String A2 , String Q1 , Letter y9 ) {  <CR> this . senderAddr = A2 ;  <CR> this . receiverAddr = Q1 ;  <CR> this . letter = y9 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String F8 ) {  <CR> int f = 0 ;  <CR> for ( int v9 = 0 ; v9 < F8 . length ( ) ; v9 ++ ) {  <CR> char X4 = F8 . charAt ( v9 ) ;  <CR> f = f * 10 + X4 - '0' ;  <CR> }  <CR> return f ;  <CR> }  <CR> Letter ( String F4 , String X2 , String j , String s5 , String b6 ) {  <CR> this . title = F4 ;  <CR> this . receiver = X2 ;  <CR> this . content = j ;  <CR> this . sender = s5 ;  <CR> this . date = b6 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object N2 ) {  <CR> Letter o2 = ( Letter ) N2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] i6 ) {  <CR> Letter [ ] S5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S5 ) ;  <CR> for ( int H = 0 ; H < 3 ; H ++ )  <CR> S5 [ H ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 