 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String y1 , String A8 , String l1 , String z8 , String o9 ) {  <CR> super ( y1 , A8 , l1 , z8 , o9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String U , String H , String G9 , String H7 , String I9 ) {  <CR> super ( U , H , G9 , H7 , I9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String p9 , String b9 , Letter t0 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = b9 ;  <CR> this . letter = t0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String t , String X0 , String k2 , String X9 , String q4 ) {  <CR> this . title = t ;  <CR> this . receiver = X0 ;  <CR> this . content = k2 ;  <CR> this . sender = X9 ;  <CR> this . date = q4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String V9 ) {  <CR> int X7 = 0 ;  <CR> for ( int Y2 = 0 ; Y2 < V9 . length ( ) ; Y2 ++ ) {  <CR> char f4 = V9 . charAt ( Y2 ) ;  <CR> X7 = X7 * 10 + f4 - '0' ;  <CR> }  <CR> return X7 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object y3 ) {  <CR> Letter m7 = ( Letter ) y3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] O6 ) {  <CR> Letter [ ] D9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( D9 ) ;  <CR> for ( int i1 = 0 ; i1 < 3 ; i1 ++ )  <CR> D9 [ i1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 