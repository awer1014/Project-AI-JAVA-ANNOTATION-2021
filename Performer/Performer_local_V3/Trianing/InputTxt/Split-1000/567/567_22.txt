 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L2 , String W2 , String F3 , String W9 , String e5 ) {  <CR> super ( L2 , W2 , F3 , W9 , e5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Q6 , String R6 , String x8 , String Y9 , String X1 ) {  <CR> super ( Q6 , R6 , x8 , Y9 , X1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String Q5 , String d3 , Letter I0 ) {  <CR> this . senderAddr = Q5 ;  <CR> this . receiverAddr = d3 ;  <CR> this . letter = I0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object w4 ) {  <CR> Letter D9 = ( Letter ) w4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String O8 , String k7 , String N , String Z5 , String h8 ) {  <CR> this . title = O8 ;  <CR> this . receiver = k7 ;  <CR> this . content = N ;  <CR> this . sender = Z5 ;  <CR> this . date = h8 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String U3 ) {  <CR> int r = 0 ;  <CR> for ( int I8 = 0 ; I8 < U3 . length ( ) ; I8 ++ ) {  <CR> char c3 = U3 . charAt ( I8 ) ;  <CR> r = r * 10 + c3 - '0' ;  <CR> }  <CR> return r ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] e6 ) {  <CR> Letter [ ] B0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( B0 ) ;  <CR> for ( int X7 = 0 ; X7 < 3 ; X7 ++ )  <CR> B0 [ X7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 