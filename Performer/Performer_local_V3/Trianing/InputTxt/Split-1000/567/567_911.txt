 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String H0 , String w , String x4 , String T1 , String p5 ) {  <CR> super ( H0 , w , x4 , T1 , p5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String d8 , String y3 , String V3 , String I7 , String g ) {  <CR> super ( d8 , y3 , V3 , I7 , g ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String p8 , String R5 , Letter p7 ) {  <CR> this . senderAddr = p8 ;  <CR> this . receiverAddr = R5 ;  <CR> this . letter = p7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String o3 , String h6 , String C2 , String G6 , String F2 ) {  <CR> this . title = o3 ;  <CR> this . receiver = h6 ;  <CR> this . content = C2 ;  <CR> this . sender = G6 ;  <CR> this . date = F2 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object a9 ) {  <CR> Letter s4 = ( Letter ) a9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String C4 ) {  <CR> int r3 = 0 ;  <CR> for ( int F6 = 0 ; F6 < C4 . length ( ) ; F6 ++ ) {  <CR> char T2 = C4 . charAt ( F6 ) ;  <CR> r3 = r3 * 10 + T2 - '0' ;  <CR> }  <CR> return r3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] P8 ) {  <CR> Letter [ ] s = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s ) ;  <CR> for ( int c5 = 0 ; c5 < 3 ; c5 ++ )  <CR> s [ c5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 