 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String e , String R5 , String O9 , String F5 , String X9 ) {  <CR> super ( e , R5 , O9 , F5 , X9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String d9 , String U3 , String G7 , String y6 , String H7 ) {  <CR> super ( d9 , U3 , G7 , y6 , H7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String M1 , String P5 , Letter e0 ) {  <CR> this . senderAddr = M1 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = e0 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String O5 ) {  <CR> int j0 = 0 ;  <CR> for ( int H7 = 0 ; H7 < O5 . length ( ) ; H7 ++ ) {  <CR> char c0 = O5 . charAt ( H7 ) ;  <CR> j0 = j0 * 10 + c0 - '0' ;  <CR> }  <CR> return j0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object Y6 ) {  <CR> Letter Y3 = ( Letter ) Y6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String n2 , String P6 , String e8 , String l9 , String u5 ) {  <CR> this . title = n2 ;  <CR> this . receiver = P6 ;  <CR> this . content = e8 ;  <CR> this . sender = l9 ;  <CR> this . date = u5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U ) {  <CR> Letter [ ] X0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( X0 ) ;  <CR> for ( int x7 = 0 ; x7 < 3 ; x7 ++ )  <CR> X0 [ x7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 