 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String Q9 , String I1 , String O , String m0 , String Q7 ) {  <CR> super ( Q9 , I1 , O , m0 , Q7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String w6 , String A8 , String p0 , String L4 , String Z3 ) {  <CR> super ( w6 , A8 , p0 , L4 , Z3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String N0 , String B6 , Letter u8 ) {  <CR> this . senderAddr = N0 ;  <CR> this . receiverAddr = B6 ;  <CR> this . letter = u8 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object l3 ) {  <CR> Letter j7 = ( Letter ) l3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String r4 , String H9 , String R7 , String T9 , String r9 ) {  <CR> this . title = r4 ;  <CR> this . receiver = H9 ;  <CR> this . content = R7 ;  <CR> this . sender = T9 ;  <CR> this . date = r9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String N5 ) {  <CR> int T4 = 0 ;  <CR> for ( int h1 = 0 ; h1 < N5 . length ( ) ; h1 ++ ) {  <CR> char r5 = N5 . charAt ( h1 ) ;  <CR> T4 = T4 * 10 + r5 - '0' ;  <CR> }  <CR> return T4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] R0 ) {  <CR> Letter [ ] t0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( t0 ) ;  <CR> for ( int B9 = 0 ; B9 < 3 ; B9 ++ )  <CR> t0 [ B9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 