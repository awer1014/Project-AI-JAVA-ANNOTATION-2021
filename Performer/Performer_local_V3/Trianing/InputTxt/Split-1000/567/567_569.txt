 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e4 , String b1 , String K1 , String h4 , String q6 ) {  <CR> super ( e4 , b1 , K1 , h4 , q6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N , String h , String H9 , String V5 , String J7 ) {  <CR> super ( N , h , H9 , V5 , J7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String F , String Z2 , Letter v5 ) {  <CR> this . senderAddr = F ;  <CR> this . receiverAddr = Z2 ;  <CR> this . letter = v5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String k4 , String S0 , String V6 , String l9 , String c8 ) {  <CR> this . title = k4 ;  <CR> this . receiver = S0 ;  <CR> this . content = V6 ;  <CR> this . sender = l9 ;  <CR> this . date = c8 ;  <CR> }  <CR> int valueOf ( String a9 ) {  <CR> int v2 = 0 ;  <CR> for ( int M6 = 0 ; M6 < a9 . length ( ) ; M6 ++ ) {  <CR> char H9 = a9 . charAt ( M6 ) ;  <CR> v2 = v2 * 10 + H9 - '0' ;  <CR> }  <CR> return v2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object L0 ) {  <CR> Letter E9 = ( Letter ) L0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K8 ) {  <CR> Letter [ ] d = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( d ) ;  <CR> for ( int F2 = 0 ; F2 < 3 ; F2 ++ )  <CR> d [ F2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 