 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String w2 , String l1 , String P2 , String V2 , String g1 ) {  <CR> super ( w2 , l1 , P2 , V2 , g1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String a , String m7 , String V3 , String G3 , String x9 ) {  <CR> super ( a , m7 , V3 , G3 , x9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String C1 , String n2 , Letter W5 ) {  <CR> this . senderAddr = C1 ;  <CR> this . receiverAddr = n2 ;  <CR> this . letter = W5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String P2 , String x3 , String c0 , String A2 , String u3 ) {  <CR> this . title = P2 ;  <CR> this . receiver = x3 ;  <CR> this . content = c0 ;  <CR> this . sender = A2 ;  <CR> this . date = u3 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String f2 ) {  <CR> int g3 = 0 ;  <CR> for ( int U9 = 0 ; U9 < f2 . length ( ) ; U9 ++ ) {  <CR> char v8 = f2 . charAt ( U9 ) ;  <CR> g3 = g3 * 10 + v8 - '0' ;  <CR> }  <CR> return g3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object J7 ) {  <CR> Letter c6 = ( Letter ) J7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b9 ) {  <CR> Letter [ ] s9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s9 ) ;  <CR> for ( int T1 = 0 ; T1 < 3 ; T1 ++ )  <CR> s9 [ T1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 