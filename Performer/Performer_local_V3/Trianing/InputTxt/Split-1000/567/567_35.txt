 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z3 , String E0 , String X2 , String g0 , String N0 ) {  <CR> super ( z3 , E0 , X2 , g0 , N0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String A6 , String A0 , String B , String y3 , String f1 ) {  <CR> super ( A6 , A0 , B , y3 , f1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String K7 , String N , Letter n8 ) {  <CR> this . senderAddr = K7 ;  <CR> this . receiverAddr = N ;  <CR> this . letter = n8 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object X8 ) {  <CR> Letter e6 = ( Letter ) X8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String I5 ) {  <CR> int k8 = 0 ;  <CR> for ( int v6 = 0 ; v6 < I5 . length ( ) ; v6 ++ ) {  <CR> char B1 = I5 . charAt ( v6 ) ;  <CR> k8 = k8 * 10 + B1 - '0' ;  <CR> }  <CR> return k8 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String K4 , String A9 , String I0 , String l7 , String p3 ) {  <CR> this . title = K4 ;  <CR> this . receiver = A9 ;  <CR> this . content = I0 ;  <CR> this . sender = l7 ;  <CR> this . date = p3 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] C1 ) {  <CR> Letter [ ] a8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a8 ) ;  <CR> for ( int V7 = 0 ; V7 < 3 ; V7 ++ )  <CR> a8 [ V7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 