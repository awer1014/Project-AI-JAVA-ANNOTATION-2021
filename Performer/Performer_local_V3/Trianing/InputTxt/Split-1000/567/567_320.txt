 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String Q8 , String m6 , String R7 , String e2 , String y0 ) {  <CR> super ( Q8 , m6 , R7 , e2 , y0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String t4 , String n , String e6 , String h5 , String g ) {  <CR> super ( t4 , n , e6 , h5 , g ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String k , String j6 , Letter p4 ) {  <CR> this . senderAddr = k ;  <CR> this . receiverAddr = j6 ;  <CR> this . letter = p4 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object X5 ) {  <CR> Letter c0 = ( Letter ) X5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String i ) {  <CR> int G9 = 0 ;  <CR> for ( int Y6 = 0 ; Y6 < i . length ( ) ; Y6 ++ ) {  <CR> char b6 = Y6 . charAt ( Y6 ) ;  <CR> G9 = G9 * 10 + b6 - '0' ;  <CR> }  <CR> return G9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String n7 , String z6 , String M9 , String D4 , String d8 ) {  <CR> this . title = n7 ;  <CR> this . receiver = z6 ;  <CR> this . content = M9 ;  <CR> this . sender = D4 ;  <CR> this . date = d8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] i7 ) {  <CR> Letter [ ] P5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P5 ) ;  <CR> for ( int z1 = 0 ; z1 < 3 ; z1 ++ )  <CR> P5 [ z1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 