 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String V6 , String l1 , String J1 , String l9 , String n5 ) {  <CR> super ( V6 , l1 , J1 , l9 , n5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String p9 , String O4 , String Q4 , String Z7 , String S ) {  <CR> super ( p9 , O4 , Q4 , Z7 , S ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String c4 , String v6 , Letter o1 ) {  <CR> this . senderAddr = c4 ;  <CR> this . receiverAddr = v6 ;  <CR> this . letter = o1 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String o1 , String k9 , String z0 , String E0 , String Z ) {  <CR> this . title = o1 ;  <CR> this . receiver = k9 ;  <CR> this . content = z0 ;  <CR> this . sender = E0 ;  <CR> this . date = Z ;  <CR> }  <CR> int valueOf ( String J1 ) {  <CR> int g1 = 0 ;  <CR> for ( int F = 0 ; F < J1 . length ( ) ; F ++ ) {  <CR> char K9 = J1 . charAt ( F ) ;  <CR> g1 = g1 * 10 + K9 - '0' ;  <CR> }  <CR> return g1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object U5 ) {  <CR> Letter i5 = ( Letter ) U5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] L9 ) {  <CR> Letter [ ] E6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( E6 ) ;  <CR> for ( int x2 = 0 ; x2 < 3 ; x2 ++ )  <CR> E6 [ x2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 