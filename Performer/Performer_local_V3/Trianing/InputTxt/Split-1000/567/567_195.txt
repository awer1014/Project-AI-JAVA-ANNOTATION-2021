 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String G0 , String w0 , String Y9 , String V0 , String Y8 ) {  <CR> super ( G0 , w0 , Y9 , V0 , Y8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String I3 , String m , String w9 , String B4 , String C9 ) {  <CR> super ( I3 , m , w9 , B4 , C9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String w2 , String o8 , Letter O7 ) {  <CR> this . senderAddr = w2 ;  <CR> this . receiverAddr = o8 ;  <CR> this . letter = O7 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String k7 , String i3 , String J6 , String D , String m1 ) {  <CR> this . title = k7 ;  <CR> this . receiver = i3 ;  <CR> this . content = J6 ;  <CR> this . sender = D ;  <CR> this . date = m1 ;  <CR> }  <CR> int valueOf ( String x9 ) {  <CR> int i7 = 0 ;  <CR> for ( int V7 = 0 ; V7 < x9 . length ( ) ; V7 ++ ) {  <CR> char y1 = x9 . charAt ( V7 ) ;  <CR> i7 = i7 * 10 + y1 - '0' ;  <CR> }  <CR> return i7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object u5 ) {  <CR> Letter F9 = ( Letter ) u5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] c5 ) {  <CR> Letter [ ] g5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( g5 ) ;  <CR> for ( int j2 = 0 ; j2 < 3 ; j2 ++ )  <CR> g5 [ j2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 