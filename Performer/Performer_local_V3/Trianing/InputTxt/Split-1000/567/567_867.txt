 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u6 , String L , String G4 , String b0 , String G7 ) {  <CR> super ( u6 , L , G4 , b0 , G7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String M5 , String S3 , String g3 , String H0 , String P6 ) {  <CR> super ( M5 , S3 , g3 , H0 , P6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String S1 , String R4 , Letter b ) {  <CR> this . senderAddr = S1 ;  <CR> this . receiverAddr = R4 ;  <CR> this . letter = b ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object W6 ) {  <CR> Letter f9 = ( Letter ) W6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String b6 , String r1 , String A0 , String U , String y0 ) {  <CR> this . title = b6 ;  <CR> this . receiver = r1 ;  <CR> this . content = A0 ;  <CR> this . sender = U ;  <CR> this . date = y0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String T1 ) {  <CR> int w7 = 0 ;  <CR> for ( int r4 = 0 ; r4 < T1 . length ( ) ; r4 ++ ) {  <CR> char w6 = T1 . charAt ( r4 ) ;  <CR> w7 = w7 * 10 + w6 - '0' ;  <CR> }  <CR> return w7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] S4 ) {  <CR> Letter [ ] a3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a3 ) ;  <CR> for ( int A0 = 0 ; A0 < 3 ; A0 ++ )  <CR> a3 [ A0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 