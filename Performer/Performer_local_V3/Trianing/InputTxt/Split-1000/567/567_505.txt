 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String H , String z , String j5 , String Q8 , String R5 ) {  <CR> super ( H , z , j5 , Q8 , R5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String f0 , String W1 , String z , String d8 , String a3 ) {  <CR> super ( f0 , W1 , z , d8 , a3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String d , String O9 , Letter h5 ) {  <CR> this . senderAddr = d ;  <CR> this . receiverAddr = O9 ;  <CR> this . letter = h5 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object e ) {  <CR> Letter Q0 = ( Letter ) e ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String b1 ) {  <CR> int V3 = 0 ;  <CR> for ( int j0 = 0 ; j0 < b1 . length ( ) ; j0 ++ ) {  <CR> char N8 = b1 . charAt ( j0 ) ;  <CR> V3 = V3 * 10 + N8 - '0' ;  <CR> }  <CR> return V3 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String i3 , String I8 , String J0 , String e0 , String t4 ) {  <CR> this . title = i3 ;  <CR> this . receiver = I8 ;  <CR> this . content = J0 ;  <CR> this . sender = e0 ;  <CR> this . date = t4 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] V2 ) {  <CR> Letter [ ] l3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l3 ) ;  <CR> for ( int R9 = 0 ; R9 < 3 ; R9 ++ )  <CR> l3 [ R9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 