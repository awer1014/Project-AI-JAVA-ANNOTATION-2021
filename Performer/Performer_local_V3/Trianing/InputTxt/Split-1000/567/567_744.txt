 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D8 , String w0 , String F5 , String R5 , String V1 ) {  <CR> super ( D8 , w0 , F5 , R5 , V1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String j4 , String S8 , String t4 , String G5 , String W7 ) {  <CR> super ( j4 , S8 , t4 , G5 , W7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String A4 , String y9 , Letter r7 ) {  <CR> this . senderAddr = A4 ;  <CR> this . receiverAddr = y9 ;  <CR> this . letter = r7 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String c , String O4 , String o0 , String B0 , String R6 ) {  <CR> this . title = c ;  <CR> this . receiver = O4 ;  <CR> this . content = o0 ;  <CR> this . sender = B0 ;  <CR> this . date = R6 ;  <CR> }  <CR> public int compareTo ( Object G9 ) {  <CR> Letter m0 = ( Letter ) G9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String Y7 ) {  <CR> int F4 = 0 ;  <CR> for ( int n8 = 0 ; n8 < Y7 . length ( ) ; n8 ++ ) {  <CR> char u8 = Y7 . charAt ( n8 ) ;  <CR> F4 = F4 * 10 + u8 - '0' ;  <CR> }  <CR> return F4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Z5 ) {  <CR> Letter [ ] W3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( W3 ) ;  <CR> for ( int v2 = 0 ; v2 < 3 ; v2 ++ )  <CR> W3 [ v2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 