 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String K3 , String X0 , String I8 , String N9 , String e6 ) {  <CR> super ( K3 , X0 , I8 , N9 , e6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String z4 , String b9 , String u8 , String g8 , String V4 ) {  <CR> super ( z4 , b9 , u8 , g8 , V4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String i1 , String M0 , Letter K9 ) {  <CR> this . senderAddr = i1 ;  <CR> this . receiverAddr = M0 ;  <CR> this . letter = K9 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String l9 , String F , String O4 , String q0 , String r9 ) {  <CR> this . title = l9 ;  <CR> this . receiver = F ;  <CR> this . content = O4 ;  <CR> this . sender = q0 ;  <CR> this . date = r9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String Z6 ) {  <CR> int r3 = 0 ;  <CR> for ( int h2 = 0 ; h2 < Z6 . length ( ) ; h2 ++ ) {  <CR> char f7 = Z6 . charAt ( h2 ) ;  <CR> r3 = r3 * 10 + f7 - '0' ;  <CR> }  <CR> return r3 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object p1 ) {  <CR> Letter T8 = ( Letter ) p1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U4 ) {  <CR> Letter [ ] w4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( w4 ) ;  <CR> for ( int A2 = 0 ; A2 < 3 ; A2 ++ )  <CR> w4 [ A2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 