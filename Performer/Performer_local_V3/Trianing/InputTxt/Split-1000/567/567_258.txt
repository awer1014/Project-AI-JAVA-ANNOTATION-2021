 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L4 , String g3 , String m5 , String W2 , String j5 ) {  <CR> super ( L4 , g3 , m5 , W2 , j5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String m5 , String M , String C9 , String I1 , String K7 ) {  <CR> super ( m5 , M , C9 , I1 , K7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String N7 , String k3 , Letter Y2 ) {  <CR> this . senderAddr = N7 ;  <CR> this . receiverAddr = k3 ;  <CR> this . letter = Y2 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object G3 ) {  <CR> Letter s0 = ( Letter ) G3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String g2 ) {  <CR> int H6 = 0 ;  <CR> for ( int k5 = 0 ; k5 < g2 . length ( ) ; k5 ++ ) {  <CR> char J9 = g2 . charAt ( k5 ) ;  <CR> H6 = H6 * 10 + J9 - '0' ;  <CR> }  <CR> return H6 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String q7 , String C3 , String x1 , String y , String V9 ) {  <CR> this . title = q7 ;  <CR> this . receiver = C3 ;  <CR> this . content = x1 ;  <CR> this . sender = y ;  <CR> this . date = V9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] q5 ) {  <CR> Letter [ ] e9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( e9 ) ;  <CR> for ( int u5 = 0 ; u5 < 3 ; u5 ++ )  <CR> e9 [ u5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 