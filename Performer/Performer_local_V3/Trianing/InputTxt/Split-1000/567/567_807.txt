 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String j2 , String j3 , String Y0 , String m8 , String o ) {  <CR> super ( j2 , j3 , Y0 , m8 , o ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String m5 , String e4 , String Z8 , String M0 , String Z2 ) {  <CR> super ( m5 , e4 , Z8 , M0 , Z2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String q6 , String W6 , Letter A6 ) {  <CR> this . senderAddr = q6 ;  <CR> this . receiverAddr = W6 ;  <CR> this . letter = A6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object B2 ) {  <CR> Letter P = ( Letter ) B2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String l7 ) {  <CR> int F0 = 0 ;  <CR> for ( int k1 = 0 ; k1 < l7 . length ( ) ; k1 ++ ) {  <CR> char A = l7 . charAt ( k1 ) ;  <CR> F0 = F0 * 10 + A - '0' ;  <CR> }  <CR> return F0 ;  <CR> }  <CR> Letter ( String V0 , String Z1 , String G7 , String i5 , String d5 ) {  <CR> this . title = V0 ;  <CR> this . receiver = Z1 ;  <CR> this . content = G7 ;  <CR> this . sender = i5 ;  <CR> this . date = d5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] t5 ) {  <CR> Letter [ ] l0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l0 ) ;  <CR> for ( int n8 = 0 ; n8 < 3 ; n8 ++ )  <CR> l0 [ n8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 