 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String K8 , String z7 , String I5 , String g2 , String u ) {  <CR> super ( K8 , z7 , I5 , g2 , u ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String h6 , String a2 , String L3 , String p4 , String V ) {  <CR> super ( h6 , a2 , L3 , p4 , V ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String b2 , String l6 , Letter k2 ) {  <CR> this . senderAddr = b2 ;  <CR> this . receiverAddr = l6 ;  <CR> this . letter = k2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String q8 , String q , String b3 , String s0 , String U7 ) {  <CR> this . title = q8 ;  <CR> this . receiver = q ;  <CR> this . content = b3 ;  <CR> this . sender = s0 ;  <CR> this . date = U7 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String K ) {  <CR> int s9 = 0 ;  <CR> for ( int D6 = 0 ; D6 < K . length ( ) ; D6 ++ ) {  <CR> char Y3 = K . charAt ( D6 ) ;  <CR> s9 = s9 * 10 + Y3 - '0' ;  <CR> }  <CR> return s9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object W4 ) {  <CR> Letter f4 = ( Letter ) W4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Q2 ) {  <CR> Letter [ ] U6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( U6 ) ;  <CR> for ( int X9 = 0 ; X9 < 3 ; X9 ++ )  <CR> U6 [ X9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 