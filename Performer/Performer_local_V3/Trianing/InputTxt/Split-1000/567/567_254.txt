 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u7 , String F8 , String B6 , String S4 , String y1 ) {  <CR> super ( u7 , F8 , B6 , S4 , y1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String M4 , String A0 , String r9 , String H , String O2 ) {  <CR> super ( M4 , A0 , r9 , H , O2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String X2 , String a6 , Letter o9 ) {  <CR> this . senderAddr = X2 ;  <CR> this . receiverAddr = a6 ;  <CR> this . letter = o9 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String Q4 , String O7 , String I1 , String O , String G6 ) {  <CR> this . title = Q4 ;  <CR> this . receiver = O7 ;  <CR> this . content = I1 ;  <CR> this . sender = O ;  <CR> this . date = G6 ;  <CR> }  <CR> public int compareTo ( Object K1 ) {  <CR> Letter k3 = ( Letter ) K1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String a6 ) {  <CR> int h0 = 0 ;  <CR> for ( int N9 = 0 ; N9 < a6 . length ( ) ; N9 ++ ) {  <CR> char j = a6 . charAt ( N9 ) ;  <CR> h0 = h0 * 10 + j - '0' ;  <CR> }  <CR> return h0 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B7 ) {  <CR> Letter [ ] n7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( n7 ) ;  <CR> for ( int y5 = 0 ; y5 < 3 ; y5 ++ )  <CR> n7 [ y5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 