 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y8 , String P8 , String U3 , String t3 , String J6 ) {  <CR> super ( y8 , P8 , U3 , t3 , J6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String Z9 , String a5 , String p1 , String c8 , String R1 ) {  <CR> super ( Z9 , a5 , p1 , c8 , R1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String o6 , String v , Letter m0 ) {  <CR> this . senderAddr = o6 ;  <CR> this . receiverAddr = v ;  <CR> this . letter = m0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String D ) {  <CR> int g6 = 0 ;  <CR> for ( int e3 = 0 ; e3 < D . length ( ) ; e3 ++ ) {  <CR> char X7 = D . charAt ( e3 ) ;  <CR> g6 = g6 * 10 + X7 - '0' ;  <CR> }  <CR> return g6 ;  <CR> }  <CR> public int compareTo ( Object G3 ) {  <CR> Letter l = ( Letter ) G3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String P9 , String I0 , String Z2 , String U2 , String n6 ) {  <CR> this . title = P9 ;  <CR> this . receiver = I0 ;  <CR> this . content = Z2 ;  <CR> this . sender = U2 ;  <CR> this . date = n6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] e7 ) {  <CR> Letter [ ] P6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P6 ) ;  <CR> for ( int c3 = 0 ; c3 < 3 ; c3 ++ )  <CR> P6 [ c3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 