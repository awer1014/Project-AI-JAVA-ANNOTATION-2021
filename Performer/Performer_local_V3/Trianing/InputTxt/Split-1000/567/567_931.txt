 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String t5 , String H7 , String X4 , String l7 , String K6 ) {  <CR> super ( t5 , H7 , X4 , l7 , K6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String F4 , String M7 , String j4 , String O0 , String M8 ) {  <CR> super ( F4 , M7 , j4 , O0 , M8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String E2 , String d6 , Letter O5 ) {  <CR> this . senderAddr = E2 ;  <CR> this . receiverAddr = d6 ;  <CR> this . letter = O5 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object R9 ) {  <CR> Letter p5 = ( Letter ) R9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String F7 ) {  <CR> int u2 = 0 ;  <CR> for ( int n0 = 0 ; n0 < F7 . length ( ) ; n0 ++ ) {  <CR> char K9 = F7 . charAt ( n0 ) ;  <CR> u2 = u2 * 10 + K9 - '0' ;  <CR> }  <CR> return u2 ;  <CR> }  <CR> Letter ( String u7 , String L9 , String P5 , String f0 , String S9 ) {  <CR> this . title = u7 ;  <CR> this . receiver = L9 ;  <CR> this . content = P5 ;  <CR> this . sender = f0 ;  <CR> this . date = S9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] p3 ) {  <CR> Letter [ ] S8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S8 ) ;  <CR> for ( int q4 = 0 ; q4 < 3 ; q4 ++ )  <CR> S8 [ q4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 