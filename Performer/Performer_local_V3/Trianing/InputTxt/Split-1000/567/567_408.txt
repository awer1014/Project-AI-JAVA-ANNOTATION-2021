 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String d2 , String w3 , String l3 , String r3 , String G5 ) {  <CR> super ( d2 , w3 , l3 , r3 , G5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String K5 , String Q4 , String G , String Z4 , String b3 ) {  <CR> super ( K5 , Q4 , G , Z4 , b3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String U9 , String f0 , Letter M1 ) {  <CR> this . senderAddr = U9 ;  <CR> this . receiverAddr = f0 ;  <CR> this . letter = M1 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object l8 ) {  <CR> Letter w3 = ( Letter ) l8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String e1 ) {  <CR> int E5 = 0 ;  <CR> for ( int a4 = 0 ; a4 < e1 . length ( ) ; a4 ++ ) {  <CR> char F2 = e1 . charAt ( a4 ) ;  <CR> E5 = E5 * 10 + F2 - '0' ;  <CR> }  <CR> return E5 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String B2 , String t5 , String C5 , String h7 , String s4 ) {  <CR> this . title = B2 ;  <CR> this . receiver = t5 ;  <CR> this . content = C5 ;  <CR> this . sender = h7 ;  <CR> this . date = s4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T8 ) {  <CR> Letter [ ] L1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L1 ) ;  <CR> for ( int P9 = 0 ; P9 < 3 ; P9 ++ )  <CR> L1 [ P9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 