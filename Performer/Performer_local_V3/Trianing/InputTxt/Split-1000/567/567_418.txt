 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o1 , String H6 , String l3 , String k2 , String b1 ) {  <CR> super ( o1 , H6 , l3 , k2 , b1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O9 , String Y5 , String s5 , String D9 , String m7 ) {  <CR> super ( O9 , Y5 , s5 , D9 , m7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String B9 , String W9 , Letter P8 ) {  <CR> this . senderAddr = B9 ;  <CR> this . receiverAddr = W9 ;  <CR> this . letter = P8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String H0 , String a1 , String s1 , String R8 , String O0 ) {  <CR> this . title = H0 ;  <CR> this . receiver = a1 ;  <CR> this . content = s1 ;  <CR> this . sender = R8 ;  <CR> this . date = O0 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String i4 ) {  <CR> int A6 = 0 ;  <CR> for ( int w1 = 0 ; w1 < i4 . length ( ) ; w1 ++ ) {  <CR> char O8 = i4 . charAt ( w1 ) ;  <CR> A6 = A6 * 10 + O8 - '0' ;  <CR> }  <CR> return A6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object X3 ) {  <CR> Letter j1 = ( Letter ) X3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b4 ) {  <CR> Letter [ ] c6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( c6 ) ;  <CR> for ( int R6 = 0 ; R6 < 3 ; R6 ++ )  <CR> c6 [ R6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 