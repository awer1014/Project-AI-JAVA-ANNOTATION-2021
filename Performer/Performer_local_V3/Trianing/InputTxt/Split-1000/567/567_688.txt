 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String g5 , String e6 , String u1 , String v4 , String R0 ) {  <CR> super ( g5 , e6 , u1 , v4 , R0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Z1 , String N4 , String z4 , String J0 , String I0 ) {  <CR> super ( Z1 , N4 , z4 , J0 , I0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String t9 , String D0 , Letter o3 ) {  <CR> this . senderAddr = t9 ;  <CR> this . receiverAddr = D0 ;  <CR> this . letter = o3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String f7 , String Z8 , String E5 , String C3 , String Q3 ) {  <CR> this . title = f7 ;  <CR> this . receiver = Z8 ;  <CR> this . content = E5 ;  <CR> this . sender = C3 ;  <CR> this . date = Q3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String u5 ) {  <CR> int L8 = 0 ;  <CR> for ( int e7 = 0 ; e7 < u5 . length ( ) ; e7 ++ ) {  <CR> char C2 = u5 . charAt ( e7 ) ;  <CR> L8 = L8 * 10 + C2 - '0' ;  <CR> }  <CR> return L8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object M3 ) {  <CR> Letter A5 = ( Letter ) M3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] D7 ) {  <CR> Letter [ ] x5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( x5 ) ;  <CR> for ( int y5 = 0 ; y5 < 3 ; y5 ++ )  <CR> x5 [ y5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 