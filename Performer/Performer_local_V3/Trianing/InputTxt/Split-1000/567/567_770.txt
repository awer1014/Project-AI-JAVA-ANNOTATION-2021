 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e0 , String E5 , String m7 , String S0 , String d8 ) {  <CR> super ( e0 , E5 , m7 , S0 , d8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String n4 , String Y1 , String c9 , String H0 , String W0 ) {  <CR> super ( n4 , Y1 , c9 , H0 , W0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String L4 , String y3 , Letter P1 ) {  <CR> this . senderAddr = L4 ;  <CR> this . receiverAddr = y3 ;  <CR> this . letter = P1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String m9 , String W1 , String Q3 , String S0 , String H5 ) {  <CR> this . title = m9 ;  <CR> this . receiver = W1 ;  <CR> this . content = Q3 ;  <CR> this . sender = S0 ;  <CR> this . date = H5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object f8 ) {  <CR> Letter r4 = ( Letter ) f8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String B2 ) {  <CR> int K4 = 0 ;  <CR> for ( int D8 = 0 ; D8 < B2 . length ( ) ; D8 ++ ) {  <CR> char C8 = B2 . charAt ( D8 ) ;  <CR> K4 = K4 * 10 + C8 - '0' ;  <CR> }  <CR> return K4 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] e5 ) {  <CR> Letter [ ] H2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( H2 ) ;  <CR> for ( int C9 = 0 ; C9 < 3 ; C9 ++ )  <CR> H2 [ C9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 