 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String j7 , String a7 , String j8 , String Z8 , String n8 ) {  <CR> super ( j7 , a7 , j8 , Z8 , n8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N4 , String Y8 , String D0 , String O5 , String n0 ) {  <CR> super ( N4 , Y8 , D0 , O5 , n0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String y , String D9 , Letter G4 ) {  <CR> this . senderAddr = y ;  <CR> this . receiverAddr = D9 ;  <CR> this . letter = G4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object M ) {  <CR> Letter X7 = ( Letter ) M ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String w0 , String u0 , String q7 , String C0 , String e2 ) {  <CR> this . title = w0 ;  <CR> this . receiver = u0 ;  <CR> this . content = q7 ;  <CR> this . sender = C0 ;  <CR> this . date = e2 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String x2 ) {  <CR> int S4 = 0 ;  <CR> for ( int p1 = 0 ; p1 < x2 . length ( ) ; p1 ++ ) {  <CR> char C3 = x2 . charAt ( p1 ) ;  <CR> S4 = S4 * 10 + C3 - '0' ;  <CR> }  <CR> return S4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] t5 ) {  <CR> Letter [ ] o0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o0 ) ;  <CR> for ( int r7 = 0 ; r7 < 3 ; r7 ++ )  <CR> o0 [ r7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 