 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l7 , String l2 , String m , String c9 , String m4 ) {  <CR> super ( l7 , l2 , m , c9 , m4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b3 , String C1 , String y0 , String s8 , String u6 ) {  <CR> super ( b3 , C1 , y0 , s8 , u6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String J8 , String J7 , Letter T5 ) {  <CR> this . senderAddr = J8 ;  <CR> this . receiverAddr = J7 ;  <CR> this . letter = T5 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String Y9 , String S1 , String X8 , String Q3 , String O5 ) {  <CR> this . title = Y9 ;  <CR> this . receiver = S1 ;  <CR> this . content = X8 ;  <CR> this . sender = Q3 ;  <CR> this . date = O5 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String p9 ) {  <CR> int W9 = 0 ;  <CR> for ( int o = 0 ; o < p9 . length ( ) ; o ++ ) {  <CR> char C3 = p9 . charAt ( o ) ;  <CR> W9 = W9 * 10 + C3 - '0' ;  <CR> }  <CR> return W9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object k2 ) {  <CR> Letter U7 = ( Letter ) k2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] z9 ) {  <CR> Letter [ ] J0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( J0 ) ;  <CR> for ( int m2 = 0 ; m2 < 3 ; m2 ++ )  <CR> J0 [ m2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 