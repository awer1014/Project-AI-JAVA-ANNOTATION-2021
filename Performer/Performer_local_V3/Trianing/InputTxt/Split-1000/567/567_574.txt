 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String X2 , String f6 , String y9 , String H , String E9 ) {  <CR> super ( X2 , f6 , y9 , H , E9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String n5 , String e1 , String B1 , String E9 , String W6 ) {  <CR> super ( n5 , e1 , B1 , E9 , W6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String C0 , String i3 , Letter V3 ) {  <CR> this . senderAddr = C0 ;  <CR> this . receiverAddr = i3 ;  <CR> this . letter = V3 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String s5 , String D5 , String R2 , String h2 , String L4 ) {  <CR> this . title = s5 ;  <CR> this . receiver = D5 ;  <CR> this . content = R2 ;  <CR> this . sender = h2 ;  <CR> this . date = L4 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String S6 ) {  <CR> int D1 = 0 ;  <CR> for ( int f8 = 0 ; f8 < S6 . length ( ) ; f8 ++ ) {  <CR> char O9 = S6 . charAt ( f8 ) ;  <CR> D1 = D1 * 10 + O9 - '0' ;  <CR> }  <CR> return D1 ;  <CR> }  <CR> public int compareTo ( Object D2 ) {  <CR> Letter x2 = ( Letter ) D2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] M3 ) {  <CR> Letter [ ] P5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P5 ) ;  <CR> for ( int F1 = 0 ; F1 < 3 ; F1 ++ )  <CR> P5 [ F1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 