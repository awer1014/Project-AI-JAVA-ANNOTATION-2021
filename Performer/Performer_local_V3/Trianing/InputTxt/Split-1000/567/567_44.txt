 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q , String J2 , String f8 , String f9 , String q2 ) {  <CR> super ( Q , J2 , f8 , f9 , q2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String I9 , String p2 , String R2 , String O9 , String N7 ) {  <CR> super ( I9 , p2 , R2 , O9 , N7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String k9 , String u5 , Letter W1 ) {  <CR> this . senderAddr = k9 ;  <CR> this . receiverAddr = u5 ;  <CR> this . letter = W1 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object l5 ) {  <CR> Letter L = ( Letter ) l5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String F2 ) {  <CR> int A1 = 0 ;  <CR> for ( int V1 = 0 ; V1 < F2 . length ( ) ; V1 ++ ) {  <CR> char j4 = F2 . charAt ( V1 ) ;  <CR> A1 = A1 * 10 + j4 - '0' ;  <CR> }  <CR> return A1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String a8 , String T0 , String N8 , String X8 , String A5 ) {  <CR> this . title = a8 ;  <CR> this . receiver = T0 ;  <CR> this . content = N8 ;  <CR> this . sender = X8 ;  <CR> this . date = A5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] u1 ) {  <CR> Letter [ ] Y3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y3 ) ;  <CR> for ( int x4 = 0 ; x4 < 3 ; x4 ++ )  <CR> Y3 [ x4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 