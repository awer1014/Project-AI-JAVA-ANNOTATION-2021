 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String w3 , String v8 , String Q9 , String J6 , String M7 ) {  <CR> super ( w3 , v8 , Q9 , J6 , M7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String B2 , String q4 , String p1 , String g6 , String b ) {  <CR> super ( B2 , q4 , p1 , g6 , b ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String M0 , String x0 , Letter V5 ) {  <CR> this . senderAddr = M0 ;  <CR> this . receiverAddr = x0 ;  <CR> this . letter = V5 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String x2 ) {  <CR> int a4 = 0 ;  <CR> for ( int D8 = 0 ; D8 < x2 . length ( ) ; D8 ++ ) {  <CR> char D0 = x2 . charAt ( D8 ) ;  <CR> a4 = a4 * 10 + D0 - '0' ;  <CR> }  <CR> return a4 ;  <CR> }  <CR> public int compareTo ( Object t5 ) {  <CR> Letter L8 = ( Letter ) t5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String t2 , String h9 , String v5 , String P1 , String I1 ) {  <CR> this . title = t2 ;  <CR> this . receiver = h9 ;  <CR> this . content = v5 ;  <CR> this . sender = P1 ;  <CR> this . date = I1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] c4 ) {  <CR> Letter [ ] I4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I4 ) ;  <CR> for ( int T8 = 0 ; T8 < 3 ; T8 ++ )  <CR> I4 [ T8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 