 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String y3 , String N4 , String X9 , String H5 , String j1 ) {  <CR> super ( y3 , N4 , X9 , H5 , j1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String J1 , String b0 , String H6 , String B2 , String d7 ) {  <CR> super ( J1 , b0 , H6 , B2 , d7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String s4 , String T9 , Letter f4 ) {  <CR> this . senderAddr = s4 ;  <CR> this . receiverAddr = T9 ;  <CR> this . letter = f4 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object u9 ) {  <CR> Letter v9 = ( Letter ) u9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String J3 , String N8 , String j3 , String G1 , String n5 ) {  <CR> this . title = J3 ;  <CR> this . receiver = N8 ;  <CR> this . content = j3 ;  <CR> this . sender = G1 ;  <CR> this . date = n5 ;  <CR> }  <CR> int valueOf ( String u4 ) {  <CR> int V9 = 0 ;  <CR> for ( int l6 = 0 ; l6 < u4 . length ( ) ; l6 ++ ) {  <CR> char w = u4 . charAt ( l6 ) ;  <CR> V9 = V9 * 10 + w - '0' ;  <CR> }  <CR> return V9 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] c8 ) {  <CR> Letter [ ] v2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( v2 ) ;  <CR> for ( int W1 = 0 ; W1 < 3 ; W1 ++ )  <CR> v2 [ W1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 