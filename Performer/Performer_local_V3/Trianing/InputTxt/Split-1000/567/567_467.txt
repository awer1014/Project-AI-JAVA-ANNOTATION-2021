 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String k8 , String H0 , String Z1 , String e3 , String a0 ) {  <CR> super ( k8 , H0 , Z1 , e3 , a0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o1 , String T7 , String y5 , String x1 , String a0 ) {  <CR> super ( o1 , T7 , y5 , x1 , a0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String H4 , String O3 , Letter T5 ) {  <CR> this . senderAddr = H4 ;  <CR> this . receiverAddr = O3 ;  <CR> this . letter = T5 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String F1 , String O1 , String n0 , String L0 , String B5 ) {  <CR> this . title = F1 ;  <CR> this . receiver = O1 ;  <CR> this . content = n0 ;  <CR> this . sender = L0 ;  <CR> this . date = B5 ;  <CR> }  <CR> public int compareTo ( Object W6 ) {  <CR> Letter i8 = ( Letter ) W6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String M2 ) {  <CR> int o8 = 0 ;  <CR> for ( int F4 = 0 ; F4 < M2 . length ( ) ; F4 ++ ) {  <CR> char U6 = M2 . charAt ( F4 ) ;  <CR> o8 = o8 * 10 + U6 - '0' ;  <CR> }  <CR> return o8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] A7 ) {  <CR> Letter [ ] C0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C0 ) ;  <CR> for ( int Z3 = 0 ; Z3 < 3 ; Z3 ++ )  <CR> C0 [ Z3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 