 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D2 , String B4 , String w7 , String w2 , String W3 ) {  <CR> super ( D2 , B4 , w7 , w2 , W3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String x7 , String k6 , String R4 , String P8 , String e9 ) {  <CR> super ( x7 , k6 , R4 , P8 , e9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String E9 , String r2 , Letter S2 ) {  <CR> this . senderAddr = E9 ;  <CR> this . receiverAddr = r2 ;  <CR> this . letter = S2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> public int compareTo ( Object p2 ) {  <CR> Letter x4 = ( Letter ) p2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String D7 , String p1 , String v8 , String b1 , String w5 ) {  <CR> this . title = D7 ;  <CR> this . receiver = p1 ;  <CR> this . content = v8 ;  <CR> this . sender = b1 ;  <CR> this . date = w5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String N2 ) {  <CR> int B1 = 0 ;  <CR> for ( int g5 = 0 ; g5 < N2 . length ( ) ; g5 ++ ) {  <CR> char N8 = N2 . charAt ( g5 ) ;  <CR> B1 = B1 * 10 + N8 - '0' ;  <CR> }  <CR> return B1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] y0 ) {  <CR> Letter [ ] v7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( v7 ) ;  <CR> for ( int g1 = 0 ; g1 < 3 ; g1 ++ )  <CR> v7 [ g1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 