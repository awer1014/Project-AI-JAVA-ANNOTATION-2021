 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Y2 , String O6 , String u8 , String l9 , String z4 ) {  <CR> super ( Y2 , O6 , u8 , l9 , z4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String H5 , String m0 , String w1 , String A7 , String J5 ) {  <CR> super ( H5 , m0 , w1 , A7 , J5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String b6 , String I , Letter m9 ) {  <CR> this . senderAddr = b6 ;  <CR> this . receiverAddr = I ;  <CR> this . letter = m9 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String W7 , String S8 , String l4 , String b1 , String l9 ) {  <CR> this . title = W7 ;  <CR> this . receiver = S8 ;  <CR> this . content = l4 ;  <CR> this . sender = b1 ;  <CR> this . date = l9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String F9 ) {  <CR> int j6 = 0 ;  <CR> for ( int w8 = 0 ; w8 < F9 . length ( ) ; w8 ++ ) {  <CR> char z4 = F9 . charAt ( w8 ) ;  <CR> j6 = j6 * 10 + z4 - '0' ;  <CR> }  <CR> return j6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object C0 ) {  <CR> Letter p9 = ( Letter ) C0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] H3 ) {  <CR> Letter [ ] K5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( K5 ) ;  <CR> for ( int n7 = 0 ; n7 < 3 ; n7 ++ )  <CR> K5 [ n7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 