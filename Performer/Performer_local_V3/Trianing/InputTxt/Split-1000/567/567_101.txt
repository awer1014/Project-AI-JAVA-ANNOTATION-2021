 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String P , String N9 , String I0 , String y6 , String N4 ) {  <CR> super ( P , N9 , I0 , y6 , N4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String U6 , String D5 , String o0 , String a , String s7 ) {  <CR> super ( U6 , D5 , o0 , a , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String m4 , String E1 , Letter U8 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = E1 ;  <CR> this . letter = U8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String t1 ) {  <CR> int l0 = 0 ;  <CR> for ( int U3 = 0 ; U3 < t1 . length ( ) ; U3 ++ ) {  <CR> char G = t1 . charAt ( U3 ) ;  <CR> l0 = l0 * 10 + G - '0' ;  <CR> }  <CR> return l0 ;  <CR> }  <CR> public int compareTo ( Object w8 ) {  <CR> Letter f3 = ( Letter ) w8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String P0 , String j7 , String j1 , String M9 , String U0 ) {  <CR> this . title = P0 ;  <CR> this . receiver = j7 ;  <CR> this . content = j1 ;  <CR> this . sender = M9 ;  <CR> this . date = U0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B4 ) {  <CR> Letter [ ] L2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L2 ) ;  <CR> for ( int E = 0 ; E < 3 ; E ++ )  <CR> L2 [ E ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 