 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String b9 , String W4 , String g5 , String D2 , String F5 ) {  <CR> super ( b9 , W4 , g5 , D2 , F5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String v6 , String c5 , String a2 , String c , String o4 ) {  <CR> super ( v6 , c5 , a2 , c , o4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String K6 , String u0 , Letter P1 ) {  <CR> this . senderAddr = K6 ;  <CR> this . receiverAddr = u0 ;  <CR> this . letter = P1 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String B5 , String x , String S7 , String f9 , String K5 ) {  <CR> this . title = B5 ;  <CR> this . receiver = x ;  <CR> this . content = S7 ;  <CR> this . sender = f9 ;  <CR> this . date = K5 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String g9 ) {  <CR> int P1 = 0 ;  <CR> for ( int z8 = 0 ; z8 < g9 . length ( ) ; z8 ++ ) {  <CR> char C1 = g9 . charAt ( z8 ) ;  <CR> P1 = P1 * 10 + C1 - '0' ;  <CR> }  <CR> return P1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object r4 ) {  <CR> Letter Z3 = ( Letter ) r4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] v1 ) {  <CR> Letter [ ] V = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( V ) ;  <CR> for ( int P = 0 ; P < 3 ; P ++ )  <CR> V [ P ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 