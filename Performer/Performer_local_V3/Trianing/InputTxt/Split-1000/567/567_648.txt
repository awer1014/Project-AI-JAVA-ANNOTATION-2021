 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String d9 , String n4 , String f9 , String y4 , String a2 ) {  <CR> super ( d9 , n4 , f9 , y4 , a2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String X1 , String q1 , String j2 , String a3 , String g9 ) {  <CR> super ( X1 , q1 , j2 , a3 , g9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String w6 , String U9 , Letter N4 ) {  <CR> this . senderAddr = w6 ;  <CR> this . receiverAddr = U9 ;  <CR> this . letter = N4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String r6 , String S1 , String h6 , String u3 , String C9 ) {  <CR> this . title = r6 ;  <CR> this . receiver = S1 ;  <CR> this . content = h6 ;  <CR> this . sender = u3 ;  <CR> this . date = C9 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String W7 ) {  <CR> int q0 = 0 ;  <CR> for ( int u2 = 0 ; u2 < W7 . length ( ) ; u2 ++ ) {  <CR> char e0 = W7 . charAt ( u2 ) ;  <CR> q0 = q0 * 10 + e0 - '0' ;  <CR> }  <CR> return q0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object W4 ) {  <CR> Letter O8 = ( Letter ) W4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] E6 ) {  <CR> Letter [ ] x5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( x5 ) ;  <CR> for ( int B1 = 0 ; B1 < 3 ; B1 ++ )  <CR> x5 [ B1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 