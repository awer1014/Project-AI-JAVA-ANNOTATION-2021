 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String h2 , String O3 , String k5 , String O4 , String X8 ) {  <CR> super ( h2 , O3 , k5 , O4 , X8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String I0 , String N6 , String D6 , String b8 , String v4 ) {  <CR> super ( I0 , N6 , D6 , b8 , v4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String g6 , String C5 , Letter T5 ) {  <CR> this . senderAddr = g6 ;  <CR> this . receiverAddr = C5 ;  <CR> this . letter = T5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String O5 ) {  <CR> int B = 0 ;  <CR> for ( int a2 = 0 ; a2 < O5 . length ( ) ; a2 ++ ) {  <CR> char D2 = O5 . charAt ( a2 ) ;  <CR> B = B * 10 + D2 - '0' ;  <CR> }  <CR> return B ;  <CR> }  <CR> Letter ( String h9 , String c3 , String S0 , String K8 , String J2 ) {  <CR> this . title = h9 ;  <CR> this . receiver = c3 ;  <CR> this . content = S0 ;  <CR> this . sender = K8 ;  <CR> this . date = J2 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object y8 ) {  <CR> Letter C4 = ( Letter ) y8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] s4 ) {  <CR> Letter [ ] E3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( E3 ) ;  <CR> for ( int V1 = 0 ; V1 < 3 ; V1 ++ )  <CR> E3 [ V1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 