 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String x8 , String a2 , String B8 , String E , String z1 ) {  <CR> super ( x8 , a2 , B8 , E , z1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String R0 , String i2 , String k0 , String s0 , String r5 ) {  <CR> super ( R0 , i2 , k0 , s0 , r5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String K8 , String P5 , Letter Y2 ) {  <CR> this . senderAddr = K8 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = Y2 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String U9 , String I4 , String f7 , String F , String S ) {  <CR> this . title = U9 ;  <CR> this . receiver = I4 ;  <CR> this . content = f7 ;  <CR> this . sender = F ;  <CR> this . date = S ;  <CR> }  <CR> int valueOf ( String S4 ) {  <CR> int J1 = 0 ;  <CR> for ( int I2 = 0 ; I2 < S4 . length ( ) ; I2 ++ ) {  <CR> char n = S4 . charAt ( I2 ) ;  <CR> J1 = J1 * 10 + n - '0' ;  <CR> }  <CR> return J1 ;  <CR> }  <CR> public int compareTo ( Object n5 ) {  <CR> Letter v = ( Letter ) n5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] e5 ) {  <CR> Letter [ ] s4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s4 ) ;  <CR> for ( int c8 = 0 ; c8 < 3 ; c8 ++ )  <CR> s4 [ c8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 