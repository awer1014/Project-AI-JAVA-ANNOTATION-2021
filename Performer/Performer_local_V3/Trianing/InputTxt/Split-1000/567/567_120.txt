 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String T8 , String t4 , String u8 , String D1 , String X6 ) {  <CR> super ( T8 , t4 , u8 , D1 , X6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String E5 , String Q3 , String f3 , String a7 , String k1 ) {  <CR> super ( E5 , Q3 , f3 , a7 , k1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String a8 , String B1 , Letter c4 ) {  <CR> this . senderAddr = a8 ;  <CR> this . receiverAddr = B1 ;  <CR> this . letter = c4 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String n5 ) {  <CR> int K9 = 0 ;  <CR> for ( int Z8 = 0 ; Z8 < n5 . length ( ) ; Z8 ++ ) {  <CR> char D4 = n5 . charAt ( Z8 ) ;  <CR> K9 = K9 * 10 + D4 - '0' ;  <CR> }  <CR> return K9 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String r7 , String Z3 , String s9 , String a6 , String L9 ) {  <CR> this . title = r7 ;  <CR> this . receiver = Z3 ;  <CR> this . content = s9 ;  <CR> this . sender = a6 ;  <CR> this . date = L9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object o8 ) {  <CR> Letter Y0 = ( Letter ) o8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b5 ) {  <CR> Letter [ ] i7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( i7 ) ;  <CR> for ( int x6 = 0 ; x6 < 3 ; x6 ++ )  <CR> i7 [ x6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 