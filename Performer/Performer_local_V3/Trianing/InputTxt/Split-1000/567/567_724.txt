 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String J0 , String l9 , String S1 , String H0 , String G3 ) {  <CR> super ( J0 , l9 , S1 , H0 , G3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D5 , String y7 , String a0 , String b9 , String x7 ) {  <CR> super ( D5 , y7 , a0 , b9 , x7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String H9 , String H , Letter j2 ) {  <CR> this . senderAddr = H9 ;  <CR> this . receiverAddr = H ;  <CR> this . letter = j2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String C1 ) {  <CR> int f4 = 0 ;  <CR> for ( int i2 = 0 ; i2 < C1 . length ( ) ; i2 ++ ) {  <CR> char a4 = C1 . charAt ( i2 ) ;  <CR> f4 = f4 * 10 + a4 - '0' ;  <CR> }  <CR> return f4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String I0 , String r1 , String P , String O6 , String y5 ) {  <CR> this . title = I0 ;  <CR> this . receiver = r1 ;  <CR> this . content = P ;  <CR> this . sender = O6 ;  <CR> this . date = y5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object M9 ) {  <CR> Letter b4 = ( Letter ) M9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] l1 ) {  <CR> Letter [ ] t2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( t2 ) ;  <CR> for ( int m2 = 0 ; m2 < 3 ; m2 ++ )  <CR> t2 [ m2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 