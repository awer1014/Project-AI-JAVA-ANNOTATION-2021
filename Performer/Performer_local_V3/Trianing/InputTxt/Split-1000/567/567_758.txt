 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String E0 , String g5 , String r4 , String i7 , String H1 ) {  <CR> super ( E0 , g5 , r4 , i7 , H1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String E4 , String b4 , String q6 , String v , String J ) {  <CR> super ( E4 , b4 , q6 , v , J ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String b9 , String I , Letter D3 ) {  <CR> this . senderAddr = b9 ;  <CR> this . receiverAddr = I ;  <CR> this . letter = D3 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object y2 ) {  <CR> Letter S0 = ( Letter ) y2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String G7 , String Z0 , String j7 , String U7 , String F8 ) {  <CR> this . title = G7 ;  <CR> this . receiver = Z0 ;  <CR> this . content = j7 ;  <CR> this . sender = U7 ;  <CR> this . date = F8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String p2 ) {  <CR> int Z9 = 0 ;  <CR> for ( int b0 = 0 ; b0 < p2 . length ( ) ; b0 ++ ) {  <CR> char t6 = p2 . charAt ( b0 ) ;  <CR> Z9 = Z9 * 10 + t6 - '0' ;  <CR> }  <CR> return Z9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] q5 ) {  <CR> Letter [ ] p1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( p1 ) ;  <CR> for ( int f1 = 0 ; f1 < 3 ; f1 ++ )  <CR> p1 [ f1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 