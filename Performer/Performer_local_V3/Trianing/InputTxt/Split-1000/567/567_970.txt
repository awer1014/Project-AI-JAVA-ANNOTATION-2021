 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z5 , String C9 , String S0 , String A8 , String Z9 ) {  <CR> super ( z5 , C9 , S0 , A8 , Z9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String B5 , String O3 , String H4 , String A3 , String b6 ) {  <CR> super ( B5 , O3 , H4 , A3 , b6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String f7 , String s1 , Letter D9 ) {  <CR> this . senderAddr = f7 ;  <CR> this . receiverAddr = s1 ;  <CR> this . letter = D9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object i8 ) {  <CR> Letter R9 = ( Letter ) i8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String o5 , String J , String H5 , String M8 , String Z5 ) {  <CR> this . title = o5 ;  <CR> this . receiver = J ;  <CR> this . content = H5 ;  <CR> this . sender = M8 ;  <CR> this . date = Z5 ;  <CR> }  <CR> int valueOf ( String A9 ) {  <CR> int r8 = 0 ;  <CR> for ( int l3 = 0 ; l3 < A9 . length ( ) ; l3 ++ ) {  <CR> char m7 = A9 . charAt ( l3 ) ;  <CR> r8 = r8 * 10 + m7 - '0' ;  <CR> }  <CR> return r8 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] p2 ) {  <CR> Letter [ ] T0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( T0 ) ;  <CR> for ( int o5 = 0 ; o5 < 3 ; o5 ++ )  <CR> T0 [ o5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 