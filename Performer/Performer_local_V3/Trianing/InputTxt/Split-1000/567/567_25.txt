 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String X8 , String L , String h3 , String I , String v9 ) {  <CR> super ( X8 , L , h3 , I , v9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String n5 , String z7 , String N8 , String l2 , String h0 ) {  <CR> super ( n5 , z7 , N8 , l2 , h0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String l4 , String Y0 , Letter g6 ) {  <CR> this . senderAddr = l4 ;  <CR> this . receiverAddr = Y0 ;  <CR> this . letter = g6 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String d4 , String K0 , String I7 , String x4 , String Y ) {  <CR> this . title = d4 ;  <CR> this . receiver = K0 ;  <CR> this . content = I7 ;  <CR> this . sender = x4 ;  <CR> this . date = Y ;  <CR> }  <CR> public int compareTo ( Object V3 ) {  <CR> Letter s = ( Letter ) V3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String Z9 ) {  <CR> int I2 = 0 ;  <CR> for ( int U2 = 0 ; U2 < Z9 . length ( ) ; U2 ++ ) {  <CR> char v1 = Z9 . charAt ( U2 ) ;  <CR> I2 = I2 * 10 + v1 - '0' ;  <CR> }  <CR> return I2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] y4 ) {  <CR> Letter [ ] x2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( x2 ) ;  <CR> for ( int A7 = 0 ; A7 < 3 ; A7 ++ )  <CR> x2 [ A7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 