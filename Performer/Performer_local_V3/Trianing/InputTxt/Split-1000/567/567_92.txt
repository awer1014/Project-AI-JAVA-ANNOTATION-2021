 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L3 , String v6 , String D1 , String J3 , String a0 ) {  <CR> super ( L3 , v6 , D1 , J3 , a0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g8 , String i3 , String X6 , String m7 , String L2 ) {  <CR> super ( g8 , i3 , X6 , m7 , L2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String X6 , String a6 , Letter A2 ) {  <CR> this . senderAddr = X6 ;  <CR> this . receiverAddr = a6 ;  <CR> this . letter = A2 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String Y3 , String U4 , String j4 , String V1 , String K5 ) {  <CR> this . title = Y3 ;  <CR> this . receiver = U4 ;  <CR> this . content = j4 ;  <CR> this . sender = V1 ;  <CR> this . date = K5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object V8 ) {  <CR> Letter R8 = ( Letter ) V8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String H9 ) {  <CR> int I9 = 0 ;  <CR> for ( int j0 = 0 ; j0 < H9 . length ( ) ; j0 ++ ) {  <CR> char i3 = H9 . charAt ( j0 ) ;  <CR> I9 = I9 * 10 + i3 - '0' ;  <CR> }  <CR> return I9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Q5 ) {  <CR> Letter [ ] G8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( G8 ) ;  <CR> for ( int R8 = 0 ; R8 < 3 ; R8 ++ )  <CR> G8 [ R8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 