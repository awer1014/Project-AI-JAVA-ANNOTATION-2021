 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String s7 , String j3 , String D4 , String e6 , String U5 ) {  <CR> super ( s7 , j3 , D4 , e6 , U5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k8 , String k , String k4 , String R5 , String T9 ) {  <CR> super ( k8 , k , k4 , R5 , T9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String q4 , String L5 , Letter K1 ) {  <CR> this . senderAddr = q4 ;  <CR> this . receiverAddr = L5 ;  <CR> this . letter = K1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object V5 ) {  <CR> Letter G0 = ( Letter ) V5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String y6 ) {  <CR> int Q4 = 0 ;  <CR> for ( int D6 = 0 ; D6 < y6 . length ( ) ; D6 ++ ) {  <CR> char v9 = y6 . charAt ( D6 ) ;  <CR> Q4 = Q4 * 10 + v9 - '0' ;  <CR> }  <CR> return Q4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String B4 , String C0 , String R8 , String n4 , String q0 ) {  <CR> this . title = B4 ;  <CR> this . receiver = C0 ;  <CR> this . content = R8 ;  <CR> this . sender = n4 ;  <CR> this . date = q0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K0 ) {  <CR> Letter [ ] f0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( f0 ) ;  <CR> for ( int B8 = 0 ; B8 < 3 ; B8 ++ )  <CR> f0 [ B8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 