 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z7 , String Q4 , String Q , String a4 , String F3 ) {  <CR> super ( z7 , Q4 , Q , a4 , F3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g6 , String c1 , String T , String x1 , String X3 ) {  <CR> super ( g6 , c1 , T , x1 , X3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String p9 , String C0 , Letter i6 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = C0 ;  <CR> this . letter = i6 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object g8 ) {  <CR> Letter Q4 = ( Letter ) g8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String z5 ) {  <CR> int Y = 0 ;  <CR> for ( int J = 0 ; J < z5 . length ( ) ; J ++ ) {  <CR> char P4 = z5 . charAt ( J ) ;  <CR> Y = Y * 10 + P4 - '0' ;  <CR> }  <CR> return Y ;  <CR> }  <CR> Letter ( String L9 , String A3 , String e1 , String K3 , String G9 ) {  <CR> this . title = L9 ;  <CR> this . receiver = A3 ;  <CR> this . content = e1 ;  <CR> this . sender = K3 ;  <CR> this . date = G9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Q2 ) {  <CR> Letter [ ] c4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( c4 ) ;  <CR> for ( int G = 0 ; G < 3 ; G ++ )  <CR> c4 [ G ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 