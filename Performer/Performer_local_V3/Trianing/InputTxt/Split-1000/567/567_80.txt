 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y , String k4 , String t4 , String N6 , String f1 ) {  <CR> super ( y , k4 , t4 , N6 , f1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o0 , String D6 , String I0 , String o2 , String a2 ) {  <CR> super ( o0 , D6 , I0 , o2 , a2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String h3 , String U4 , Letter Y1 ) {  <CR> this . senderAddr = h3 ;  <CR> this . receiverAddr = U4 ;  <CR> this . letter = Y1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String p7 , String Q0 , String F8 , String A , String x6 ) {  <CR> this . title = p7 ;  <CR> this . receiver = Q0 ;  <CR> this . content = F8 ;  <CR> this . sender = A ;  <CR> this . date = x6 ;  <CR> }  <CR> public int compareTo ( Object t4 ) {  <CR> Letter J0 = ( Letter ) t4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String V6 ) {  <CR> int Q7 = 0 ;  <CR> for ( int f3 = 0 ; f3 < V6 . length ( ) ; f3 ++ ) {  <CR> char Z4 = V6 . charAt ( f3 ) ;  <CR> Q7 = Q7 * 10 + Z4 - '0' ;  <CR> }  <CR> return Q7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W6 ) {  <CR> Letter [ ] j9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( j9 ) ;  <CR> for ( int P2 = 0 ; P2 < 3 ; P2 ++ )  <CR> j9 [ P2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 