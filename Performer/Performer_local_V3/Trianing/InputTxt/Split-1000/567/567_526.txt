 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z1 , String k5 , String S8 , String M5 , String X5 ) {  <CR> super ( Z1 , k5 , S8 , M5 , X5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String V , String m9 , String h , String X , String d ) {  <CR> super ( V , m9 , h , X , d ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String L3 , String n3 , Letter m2 ) {  <CR> this . senderAddr = L3 ;  <CR> this . receiverAddr = n3 ;  <CR> this . letter = m2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> Letter ( String i , String X0 , String o0 , String G4 , String B2 ) {  <CR> this . title = i ;  <CR> this . receiver = X0 ;  <CR> this . content = o0 ;  <CR> this . sender = G4 ;  <CR> this . date = B2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String R9 ) {  <CR> int r2 = 0 ;  <CR> for ( int A7 = 0 ; A7 < R9 . length ( ) ; A7 ++ ) {  <CR> char B0 = R9 . charAt ( A7 ) ;  <CR> r2 = r2 * 10 + B0 - '0' ;  <CR> }  <CR> return r2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object K2 ) {  <CR> Letter V8 = ( Letter ) K2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] A3 ) {  <CR> Letter [ ] h6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h6 ) ;  <CR> for ( int O = 0 ; O < 3 ; O ++ )  <CR> h6 [ O ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 