 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A1 , String s9 , String I9 , String S8 , String i1 ) {  <CR> super ( A1 , s9 , I9 , S8 , i1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String m3 , String k4 , String X9 , String Y , String s5 ) {  <CR> super ( m3 , k4 , X9 , Y , s5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String A1 , String l , Letter z9 ) {  <CR> this . senderAddr = A1 ;  <CR> this . receiverAddr = l ;  <CR> this . letter = z9 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object O2 ) {  <CR> Letter F7 = ( Letter ) O2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String N2 ) {  <CR> int b = 0 ;  <CR> for ( int K6 = 0 ; K6 < N2 . length ( ) ; K6 ++ ) {  <CR> char s9 = N2 . charAt ( K6 ) ;  <CR> b = b * 10 + s9 - '0' ;  <CR> }  <CR> return b ;  <CR> }  <CR> Letter ( String N6 , String R2 , String P , String x1 , String D0 ) {  <CR> this . title = N6 ;  <CR> this . receiver = R2 ;  <CR> this . content = P ;  <CR> this . sender = x1 ;  <CR> this . date = D0 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U2 ) {  <CR> Letter [ ] Q2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q2 ) ;  <CR> for ( int a3 = 0 ; a3 < 3 ; a3 ++ )  <CR> Q2 [ a3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 