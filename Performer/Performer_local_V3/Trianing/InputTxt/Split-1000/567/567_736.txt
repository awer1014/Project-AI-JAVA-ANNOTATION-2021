 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String E3 , String i , String h3 , String G9 , String s ) {  <CR> super ( E3 , i , h3 , G9 , s ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String i2 , String K0 , String P0 , String I , String Y1 ) {  <CR> super ( i2 , K0 , P0 , I , Y1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String M0 , String l3 , Letter h3 ) {  <CR> this . senderAddr = M0 ;  <CR> this . receiverAddr = l3 ;  <CR> this . letter = h3 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String T3 ) {  <CR> int L2 = 0 ;  <CR> for ( int c = 0 ; c < T3 . length ( ) ; c ++ ) {  <CR> char T5 = T3 . charAt ( c ) ;  <CR> L2 = L2 * 10 + T5 - '0' ;  <CR> }  <CR> return L2 ;  <CR> }  <CR> public int compareTo ( Object h1 ) {  <CR> Letter U5 = ( Letter ) h1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String a1 , String T7 , String A7 , String R2 , String m6 ) {  <CR> this . title = a1 ;  <CR> this . receiver = T7 ;  <CR> this . content = A7 ;  <CR> this . sender = R2 ;  <CR> this . date = m6 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] l7 ) {  <CR> Letter [ ] Y9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y9 ) ;  <CR> for ( int a2 = 0 ; a2 < 3 ; a2 ++ )  <CR> Y9 [ a2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 