 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String O2 , String S4 , String n4 , String z , String h8 ) {  <CR> super ( O2 , S4 , n4 , z , h8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String A8 , String r0 , String u , String J6 , String M5 ) {  <CR> super ( A8 , r0 , u , J6 , M5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String U7 , String N1 , Letter j1 ) {  <CR> this . senderAddr = U7 ;  <CR> this . receiverAddr = N1 ;  <CR> this . letter = j1 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String d2 , String B , String G5 , String q2 , String Z8 ) {  <CR> this . title = d2 ;  <CR> this . receiver = B ;  <CR> this . content = G5 ;  <CR> this . sender = q2 ;  <CR> this . date = Z8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object e8 ) {  <CR> Letter V2 = ( Letter ) e8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String h4 ) {  <CR> int D7 = 0 ;  <CR> for ( int E5 = 0 ; E5 < h4 . length ( ) ; E5 ++ ) {  <CR> char y5 = h4 . charAt ( E5 ) ;  <CR> D7 = D7 * 10 + y5 - '0' ;  <CR> }  <CR> return D7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] P7 ) {  <CR> Letter [ ] Q3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q3 ) ;  <CR> for ( int S6 = 0 ; S6 < 3 ; S6 ++ )  <CR> Q3 [ S6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 