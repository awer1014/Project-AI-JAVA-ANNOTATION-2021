 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T3 , String Z4 , String z9 , String o8 , String U4 ) {  <CR> super ( T3 , Z4 , z9 , o8 , U4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String C6 , String j7 , String q8 , String S3 , String k2 ) {  <CR> super ( C6 , j7 , q8 , S3 , k2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String u6 , String b5 , Letter V8 ) {  <CR> this . senderAddr = u6 ;  <CR> this . receiverAddr = b5 ;  <CR> this . letter = V8 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object y2 ) {  <CR> Letter N7 = ( Letter ) y2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String N4 , String x0 , String y5 , String m0 , String c2 ) {  <CR> this . title = N4 ;  <CR> this . receiver = x0 ;  <CR> this . content = y5 ;  <CR> this . sender = m0 ;  <CR> this . date = c2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String Q7 ) {  <CR> int E1 = 0 ;  <CR> for ( int J7 = 0 ; J7 < Q7 . length ( ) ; J7 ++ ) {  <CR> char F4 = Q7 . charAt ( J7 ) ;  <CR> E1 = E1 * 10 + F4 - '0' ;  <CR> }  <CR> return E1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T0 ) {  <CR> Letter [ ] q4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q4 ) ;  <CR> for ( int D3 = 0 ; D3 < 3 ; D3 ++ )  <CR> q4 [ D3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 