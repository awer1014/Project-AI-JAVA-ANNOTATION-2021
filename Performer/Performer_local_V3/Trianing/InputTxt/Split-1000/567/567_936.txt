 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D1 , String e2 , String W1 , String q9 , String z4 ) {  <CR> super ( D1 , e2 , W1 , q9 , z4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s0 , String O6 , String V9 , String R8 , String o1 ) {  <CR> super ( s0 , O6 , V9 , R8 , o1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String V0 , String r8 , Letter k9 ) {  <CR> this . senderAddr = V0 ;  <CR> this . receiverAddr = r8 ;  <CR> this . letter = k9 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String L5 , String N , String c3 , String z7 , String t0 ) {  <CR> this . title = L5 ;  <CR> this . receiver = N ;  <CR> this . content = c3 ;  <CR> this . sender = z7 ;  <CR> this . date = t0 ;  <CR> }  <CR> int valueOf ( String U4 ) {  <CR> int g = 0 ;  <CR> for ( int m3 = 0 ; m3 < U4 . length ( ) ; m3 ++ ) {  <CR> char J2 = U4 . charAt ( m3 ) ;  <CR> g = g * 10 + J2 - '0' ;  <CR> }  <CR> return g ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object S8 ) {  <CR> Letter S1 = ( Letter ) S8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] f7 ) {  <CR> Letter [ ] W6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( W6 ) ;  <CR> for ( int Y3 = 0 ; Y3 < 3 ; Y3 ++ )  <CR> W6 [ Y3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 