 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Q3 , String r1 , String i4 , String h1 , String Z3 ) {  <CR> super ( Q3 , r1 , i4 , h1 , Z3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String E , String z5 , String u3 , String I7 , String O4 ) {  <CR> super ( E , z5 , u3 , I7 , O4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String M6 , String t1 , Letter K1 ) {  <CR> this . senderAddr = M6 ;  <CR> this . receiverAddr = t1 ;  <CR> this . letter = K1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object z6 ) {  <CR> Letter P = ( Letter ) z6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String a1 , String U6 , String L1 , String g3 , String l7 ) {  <CR> this . title = a1 ;  <CR> this . receiver = U6 ;  <CR> this . content = L1 ;  <CR> this . sender = g3 ;  <CR> this . date = l7 ;  <CR> }  <CR> int valueOf ( String f8 ) {  <CR> int s8 = 0 ;  <CR> for ( int A = 0 ; A < f8 . length ( ) ; A ++ ) {  <CR> char H0 = f8 . charAt ( A ) ;  <CR> s8 = s8 * 10 + H0 - '0' ;  <CR> }  <CR> return s8 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] X6 ) {  <CR> Letter [ ] Y8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y8 ) ;  <CR> for ( int Y4 = 0 ; Y4 < 3 ; Y4 ++ )  <CR> Y8 [ Y4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 