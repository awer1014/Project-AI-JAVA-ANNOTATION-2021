 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o2 , String n9 , String v4 , String O2 , String C4 ) {  <CR> super ( o2 , n9 , v4 , O2 , C4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String F , String V6 , String q0 , String f6 , String C ) {  <CR> super ( F , V6 , q0 , f6 , C ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String V9 , String M5 , Letter M3 ) {  <CR> this . senderAddr = V9 ;  <CR> this . receiverAddr = M5 ;  <CR> this . letter = M3 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String w0 , String c1 , String A9 , String K5 , String Y5 ) {  <CR> this . title = w0 ;  <CR> this . receiver = c1 ;  <CR> this . content = A9 ;  <CR> this . sender = K5 ;  <CR> this . date = Y5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> public int compareTo ( Object h3 ) {  <CR> Letter r5 = ( Letter ) h3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String O3 ) {  <CR> int q = 0 ;  <CR> for ( int P4 = 0 ; P4 < O3 . length ( ) ; P4 ++ ) {  <CR> char Z6 = O3 . charAt ( P4 ) ;  <CR> q = q * 10 + Z6 - '0' ;  <CR> }  <CR> return q ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o2 ) {  <CR> Letter [ ] K6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( K6 ) ;  <CR> for ( int r3 = 0 ; r3 < 3 ; r3 ++ )  <CR> K6 [ r3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 