 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String J4 , String G9 , String q , String R1 , String f0 ) {  <CR> super ( J4 , G9 , q , R1 , f0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O0 , String m9 , String H5 , String a8 , String l0 ) {  <CR> super ( O0 , m9 , H5 , a8 , l0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String P1 , String w , Letter B9 ) {  <CR> this . senderAddr = P1 ;  <CR> this . receiverAddr = w ;  <CR> this . letter = B9 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String P2 ) {  <CR> int w6 = 0 ;  <CR> for ( int X3 = 0 ; X3 < P2 . length ( ) ; X3 ++ ) {  <CR> char F2 = P2 . charAt ( X3 ) ;  <CR> w6 = w6 * 10 + F2 - '0' ;  <CR> }  <CR> return w6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String i0 , String V , String D , String n6 , String l3 ) {  <CR> this . title = i0 ;  <CR> this . receiver = V ;  <CR> this . content = D ;  <CR> this . sender = n6 ;  <CR> this . date = l3 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object S5 ) {  <CR> Letter S4 = ( Letter ) S5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] P0 ) {  <CR> Letter [ ] C5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C5 ) ;  <CR> for ( int C2 = 0 ; C2 < 3 ; C2 ++ )  <CR> C5 [ C2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 