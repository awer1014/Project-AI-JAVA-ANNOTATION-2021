 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String z7 , String z8 , String j3 , String D5 , String f5 ) {  <CR> super ( z7 , z8 , j3 , D5 , f5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D7 , String T8 , String d2 , String L8 , String h2 ) {  <CR> super ( D7 , T8 , d2 , L8 , h2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String R4 , String Y9 , Letter I2 ) {  <CR> this . senderAddr = R4 ;  <CR> this . receiverAddr = Y9 ;  <CR> this . letter = I2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object u7 ) {  <CR> Letter y0 = ( Letter ) u7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String v5 ) {  <CR> int c1 = 0 ;  <CR> for ( int W8 = 0 ; W8 < v5 . length ( ) ; W8 ++ ) {  <CR> char d9 = v5 . charAt ( W8 ) ;  <CR> c1 = c1 * 10 + d9 - '0' ;  <CR> }  <CR> return c1 ;  <CR> }  <CR> Letter ( String t8 , String e9 , String k9 , String b8 , String q5 ) {  <CR> this . title = t8 ;  <CR> this . receiver = e9 ;  <CR> this . content = k9 ;  <CR> this . sender = b8 ;  <CR> this . date = q5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] I1 ) {  <CR> Letter [ ] l = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l ) ;  <CR> for ( int p = 0 ; p < 3 ; p ++ )  <CR> l [ p ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 