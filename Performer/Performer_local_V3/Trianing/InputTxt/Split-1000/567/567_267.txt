 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String p6 , String T9 , String I , String G3 , String f5 ) {  <CR> super ( p6 , T9 , I , G3 , f5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String B4 , String e3 , String Z5 , String T3 , String S4 ) {  <CR> super ( B4 , e3 , Z5 , T3 , S4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String g7 , String Y4 , Letter h9 ) {  <CR> this . senderAddr = g7 ;  <CR> this . receiverAddr = Y4 ;  <CR> this . letter = h9 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String x2 ) {  <CR> int i1 = 0 ;  <CR> for ( int Z2 = 0 ; Z2 < x2 . length ( ) ; Z2 ++ ) {  <CR> char r7 = x2 . charAt ( Z2 ) ;  <CR> i1 = i1 * 10 + r7 - '0' ;  <CR> }  <CR> return i1 ;  <CR> }  <CR> Letter ( String W9 , String l5 , String f3 , String z9 , String F5 ) {  <CR> this . title = W9 ;  <CR> this . receiver = l5 ;  <CR> this . content = f3 ;  <CR> this . sender = z9 ;  <CR> this . date = F5 ;  <CR> }  <CR> public int compareTo ( Object M5 ) {  <CR> Letter F = ( Letter ) M5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Y3 ) {  <CR> Letter [ ] b7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b7 ) ;  <CR> for ( int h5 = 0 ; h5 < 3 ; h5 ++ )  <CR> b7 [ h5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 