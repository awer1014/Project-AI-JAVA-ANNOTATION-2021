 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String O , String s4 , String l1 , String Y , String I7 ) {  <CR> super ( O , s4 , l1 , Y , I7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String k , String Q2 , String P4 , String G8 , String Y ) {  <CR> super ( k , Q2 , P4 , G8 , Y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String L8 , String L6 , Letter Z5 ) {  <CR> this . senderAddr = L8 ;  <CR> this . receiverAddr = L6 ;  <CR> this . letter = Z5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String g7 , String W9 , String G5 , String K6 , String Q0 ) {  <CR> this . title = g7 ;  <CR> this . receiver = W9 ;  <CR> this . content = G5 ;  <CR> this . sender = K6 ;  <CR> this . date = Q0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String D7 ) {  <CR> int a4 = 0 ;  <CR> for ( int F6 = 0 ; F6 < D7 . length ( ) ; F6 ++ ) {  <CR> char k8 = D7 . charAt ( F6 ) ;  <CR> a4 = a4 * 10 + k8 - '0' ;  <CR> }  <CR> return a4 ;  <CR> }  <CR> public int compareTo ( Object z8 ) {  <CR> Letter r0 = ( Letter ) z8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W2 ) {  <CR> Letter [ ] Z4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z4 ) ;  <CR> for ( int f8 = 0 ; f8 < 3 ; f8 ++ )  <CR> Z4 [ f8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 