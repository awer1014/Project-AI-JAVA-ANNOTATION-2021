 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String r9 , String c4 , String F5 , String h1 , String z8 ) {  <CR> super ( r9 , c4 , F5 , h1 , z8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String i7 , String B2 , String a , String e8 , String N4 ) {  <CR> super ( i7 , B2 , a , e8 , N4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String v4 , String O3 , Letter A5 ) {  <CR> this . senderAddr = v4 ;  <CR> this . receiverAddr = O3 ;  <CR> this . letter = A5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String g5 ) {  <CR> int W9 = 0 ;  <CR> for ( int M = 0 ; M < g5 . length ( ) ; M ++ ) {  <CR> char U4 = g5 . charAt ( M ) ;  <CR> W9 = W9 * 10 + U4 - '0' ;  <CR> }  <CR> return W9 ;  <CR> }  <CR> Letter ( String i3 , String b1 , String j8 , String L5 , String j1 ) {  <CR> this . title = i3 ;  <CR> this . receiver = b1 ;  <CR> this . content = j8 ;  <CR> this . sender = L5 ;  <CR> this . date = j1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object z9 ) {  <CR> Letter s8 = ( Letter ) z9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] F7 ) {  <CR> Letter [ ] L0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L0 ) ;  <CR> for ( int r1 = 0 ; r1 < 3 ; r1 ++ )  <CR> L0 [ r1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 