 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String b0 , String m2 , String G2 , String j , String v0 ) {  <CR> super ( b0 , m2 , G2 , j , v0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String R8 , String v1 , String t , String b1 , String q2 ) {  <CR> super ( R8 , v1 , t , b1 , q2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String t1 , String Q9 , Letter F7 ) {  <CR> this . senderAddr = t1 ;  <CR> this . receiverAddr = Q9 ;  <CR> this . letter = F7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object t0 ) {  <CR> Letter R = ( Letter ) t0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String g6 , String r9 , String z9 , String L0 , String W ) {  <CR> this . title = g6 ;  <CR> this . receiver = r9 ;  <CR> this . content = z9 ;  <CR> this . sender = L0 ;  <CR> this . date = W ;  <CR> }  <CR> int valueOf ( String L6 ) {  <CR> int G2 = 0 ;  <CR> for ( int s9 = 0 ; s9 < L6 . length ( ) ; s9 ++ ) {  <CR> char V2 = L6 . charAt ( s9 ) ;  <CR> G2 = G2 * 10 + V2 - '0' ;  <CR> }  <CR> return G2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n ) {  <CR> Letter [ ] R3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( R3 ) ;  <CR> for ( int h7 = 0 ; h7 < 3 ; h7 ++ )  <CR> R3 [ h7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 