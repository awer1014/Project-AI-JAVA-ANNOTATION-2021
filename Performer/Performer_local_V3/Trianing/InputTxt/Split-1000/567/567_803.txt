 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String P9 , String w9 , String j1 , String R1 , String v0 ) {  <CR> super ( P9 , w9 , j1 , R1 , v0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String c6 , String s7 , String J8 , String E7 , String h8 ) {  <CR> super ( c6 , s7 , J8 , E7 , h8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String f7 , String i0 , Letter H6 ) {  <CR> this . senderAddr = f7 ;  <CR> this . receiverAddr = i0 ;  <CR> this . letter = H6 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String B2 , String F1 , String l9 , String X7 , String r7 ) {  <CR> this . title = B2 ;  <CR> this . receiver = F1 ;  <CR> this . content = l9 ;  <CR> this . sender = X7 ;  <CR> this . date = r7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String w5 ) {  <CR> int G0 = 0 ;  <CR> for ( int w6 = 0 ; w6 < w5 . length ( ) ; w6 ++ ) {  <CR> char u5 = w5 . charAt ( w6 ) ;  <CR> G0 = G0 * 10 + u5 - '0' ;  <CR> }  <CR> return G0 ;  <CR> }  <CR> public int compareTo ( Object o0 ) {  <CR> Letter F8 = ( Letter ) o0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B3 ) {  <CR> Letter [ ] U6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( U6 ) ;  <CR> for ( int I6 = 0 ; I6 < 3 ; I6 ++ )  <CR> U6 [ I6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 