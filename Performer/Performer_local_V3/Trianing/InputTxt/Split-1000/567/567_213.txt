 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String h , String F0 , String H0 , String b2 , String k1 ) {  <CR> super ( h , F0 , H0 , b2 , k1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String d0 , String B7 , String A , String B0 , String U9 ) {  <CR> super ( d0 , B7 , A , B0 , U9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String n2 , String R4 , Letter B1 ) {  <CR> this . senderAddr = n2 ;  <CR> this . receiverAddr = R4 ;  <CR> this . letter = B1 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String R ) {  <CR> int p4 = 0 ;  <CR> for ( int W3 = 0 ; W3 < R . length ( ) ; W3 ++ ) {  <CR> char c7 = R . charAt ( W3 ) ;  <CR> p4 = p4 * 10 + c7 - '0' ;  <CR> }  <CR> return p4 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String s8 , String J4 , String i7 , String D8 , String M8 ) {  <CR> this . title = s8 ;  <CR> this . receiver = J4 ;  <CR> this . content = i7 ;  <CR> this . sender = D8 ;  <CR> this . date = M8 ;  <CR> }  <CR> public int compareTo ( Object N6 ) {  <CR> Letter T1 = ( Letter ) N6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w4 ) {  <CR> Letter [ ] T6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( T6 ) ;  <CR> for ( int u8 = 0 ; u8 < 3 ; u8 ++ )  <CR> T6 [ u8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 