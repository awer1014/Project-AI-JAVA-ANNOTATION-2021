 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String g0 , String N0 , String U5 , String t7 , String k1 ) {  <CR> super ( g0 , N0 , U5 , t7 , k1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g0 , String b0 , String o4 , String N0 , String W ) {  <CR> super ( g0 , b0 , o4 , N0 , W ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String C9 , String N4 , Letter P6 ) {  <CR> this . senderAddr = C9 ;  <CR> this . receiverAddr = N4 ;  <CR> this . letter = P6 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String d2 ) {  <CR> int D3 = 0 ;  <CR> for ( int S3 = 0 ; S3 < d2 . length ( ) ; S3 ++ ) {  <CR> char z1 = d2 . charAt ( S3 ) ;  <CR> D3 = D3 * 10 + z1 - '0' ;  <CR> }  <CR> return D3 ;  <CR> }  <CR> public int compareTo ( Object s9 ) {  <CR> Letter J4 = ( Letter ) s9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String J9 , String w4 , String I0 , String k0 , String G9 ) {  <CR> this . title = J9 ;  <CR> this . receiver = w4 ;  <CR> this . content = I0 ;  <CR> this . sender = k0 ;  <CR> this . date = G9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g2 ) {  <CR> Letter [ ] Y7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y7 ) ;  <CR> for ( int B4 = 0 ; B4 < 3 ; B4 ++ )  <CR> Y7 [ B4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 