 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A , String h1 , String x9 , String s3 , String D8 ) {  <CR> super ( A , h1 , x9 , s3 , D8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String W9 , String P8 , String z4 , String R6 , String g1 ) {  <CR> super ( W9 , P8 , z4 , R6 , g1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String H1 , String F1 , Letter x ) {  <CR> this . senderAddr = H1 ;  <CR> this . receiverAddr = F1 ;  <CR> this . letter = x ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String u0 , String a8 , String z9 , String j8 , String t4 ) {  <CR> this . title = u0 ;  <CR> this . receiver = a8 ;  <CR> this . content = z9 ;  <CR> this . sender = j8 ;  <CR> this . date = t4 ;  <CR> }  <CR> public int compareTo ( Object q7 ) {  <CR> Letter I7 = ( Letter ) q7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String f3 ) {  <CR> int o9 = 0 ;  <CR> for ( int b = 0 ; b < f3 . length ( ) ; b ++ ) {  <CR> char q0 = f3 . charAt ( b ) ;  <CR> o9 = o9 * 10 + q0 - '0' ;  <CR> }  <CR> return o9 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] v1 ) {  <CR> Letter [ ] P9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P9 ) ;  <CR> for ( int M8 = 0 ; M8 < 3 ; M8 ++ )  <CR> P9 [ M8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 