 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I5 , String y8 , String m6 , String Z5 , String f8 ) {  <CR> super ( I5 , y8 , m6 , Z5 , f8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String u7 , String C5 , String R3 , String O1 , String P0 ) {  <CR> super ( u7 , C5 , R3 , O1 , P0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String o8 , String R3 , Letter r0 ) {  <CR> this . senderAddr = o8 ;  <CR> this . receiverAddr = R3 ;  <CR> this . letter = r0 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String H0 ) {  <CR> int u = 0 ;  <CR> for ( int Q6 = 0 ; Q6 < H0 . length ( ) ; Q6 ++ ) {  <CR> char h6 = H0 . charAt ( Q6 ) ;  <CR> u = u * 10 + h6 - '0' ;  <CR> }  <CR> return u ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object L9 ) {  <CR> Letter w7 = ( Letter ) L9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String b8 , String y6 , String U5 , String O1 , String e5 ) {  <CR> this . title = b8 ;  <CR> this . receiver = y6 ;  <CR> this . content = U5 ;  <CR> this . sender = O1 ;  <CR> this . date = e5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] e8 ) {  <CR> Letter [ ] y5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( y5 ) ;  <CR> for ( int q1 = 0 ; q1 < 3 ; q1 ++ )  <CR> y5 [ q1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 