 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String r , String Z8 , String L8 , String T0 , String L9 ) {  <CR> super ( r , Z8 , L8 , T0 , L9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String E9 , String J0 , String X0 , String G9 , String a1 ) {  <CR> super ( E9 , J0 , X0 , G9 , a1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String Q0 , String x4 , Letter D0 ) {  <CR> this . senderAddr = Q0 ;  <CR> this . receiverAddr = x4 ;  <CR> this . letter = D0 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> public int compareTo ( Object D0 ) {  <CR> Letter m4 = ( Letter ) D0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String i ) {  <CR> int g2 = 0 ;  <CR> for ( int b1 = 0 ; b1 < i . length ( ) ; b1 ++ ) {  <CR> char h = b1 . charAt ( b1 ) ;  <CR> g2 = g2 * 10 + h - '0' ;  <CR> }  <CR> return g2 ;  <CR> }  <CR> Letter ( String P0 , String d6 , String N9 , String S4 , String A ) {  <CR> this . title = P0 ;  <CR> this . receiver = d6 ;  <CR> this . content = N9 ;  <CR> this . sender = S4 ;  <CR> this . date = A ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x0 ) {  <CR> Letter [ ] Q0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q0 ) ;  <CR> for ( int e5 = 0 ; e5 < 3 ; e5 ++ )  <CR> Q0 [ e5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 