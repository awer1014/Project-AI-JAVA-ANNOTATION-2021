 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String C2 , String W4 , String Q3 , String Y5 , String v2 ) {  <CR> super ( C2 , W4 , Q3 , Y5 , v2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String v9 , String C0 , String l5 , String y1 , String A6 ) {  <CR> super ( v9 , C0 , l5 , y1 , A6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String a7 , String F4 , Letter g0 ) {  <CR> this . senderAddr = a7 ;  <CR> this . receiverAddr = F4 ;  <CR> this . letter = g0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String O6 ) {  <CR> int Y1 = 0 ;  <CR> for ( int m3 = 0 ; m3 < O6 . length ( ) ; m3 ++ ) {  <CR> char P3 = O6 . charAt ( m3 ) ;  <CR> Y1 = Y1 * 10 + P3 - '0' ;  <CR> }  <CR> return Y1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String p3 , String v6 , String l5 , String N9 , String F ) {  <CR> this . title = p3 ;  <CR> this . receiver = v6 ;  <CR> this . content = l5 ;  <CR> this . sender = N9 ;  <CR> this . date = F ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object W4 ) {  <CR> Letter M8 = ( Letter ) W4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] y4 ) {  <CR> Letter [ ] k2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( k2 ) ;  <CR> for ( int T9 = 0 ; T9 < 3 ; T9 ++ )  <CR> k2 [ T9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 