 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U9 , String k0 , String K4 , String a8 , String i8 ) {  <CR> super ( U9 , k0 , K4 , a8 , i8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String d4 , String G6 , String x6 , String r0 , String s ) {  <CR> super ( d4 , G6 , x6 , r0 , s ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String p5 , String X3 , Letter x ) {  <CR> this . senderAddr = p5 ;  <CR> this . receiverAddr = X3 ;  <CR> this . letter = x ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String Y ) {  <CR> int N2 = 0 ;  <CR> for ( int o5 = 0 ; o5 < Y . length ( ) ; o5 ++ ) {  <CR> char w6 = Y . charAt ( o5 ) ;  <CR> N2 = N2 * 10 + w6 - '0' ;  <CR> }  <CR> return N2 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String b7 , String O4 , String G3 , String c1 , String N3 ) {  <CR> this . title = b7 ;  <CR> this . receiver = O4 ;  <CR> this . content = G3 ;  <CR> this . sender = c1 ;  <CR> this . date = N3 ;  <CR> }  <CR> public int compareTo ( Object A3 ) {  <CR> Letter W0 = ( Letter ) A3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g8 ) {  <CR> Letter [ ] x3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( x3 ) ;  <CR> for ( int j = 0 ; j < 3 ; j ++ )  <CR> x3 [ j ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 