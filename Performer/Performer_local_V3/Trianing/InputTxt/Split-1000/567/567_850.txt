 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T , String S , String I3 , String U3 , String f ) {  <CR> super ( T , S , I3 , U3 , f ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String x6 , String C , String J2 , String h1 , String f ) {  <CR> super ( x6 , C , J2 , h1 , f ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String T5 , String N4 , Letter v1 ) {  <CR> this . senderAddr = T5 ;  <CR> this . receiverAddr = N4 ;  <CR> this . letter = v1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object w8 ) {  <CR> Letter N8 = ( Letter ) w8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String f0 , String b9 , String B7 , String Q4 , String V5 ) {  <CR> this . title = f0 ;  <CR> this . receiver = b9 ;  <CR> this . content = B7 ;  <CR> this . sender = Q4 ;  <CR> this . date = V5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String n3 ) {  <CR> int Q5 = 0 ;  <CR> for ( int y6 = 0 ; y6 < n3 . length ( ) ; y6 ++ ) {  <CR> char L = n3 . charAt ( y6 ) ;  <CR> Q5 = Q5 * 10 + L - '0' ;  <CR> }  <CR> return Q5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] a3 ) {  <CR> Letter [ ] M0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( M0 ) ;  <CR> for ( int L9 = 0 ; L9 < 3 ; L9 ++ )  <CR> M0 [ L9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 