 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String S2 , String k5 , String p6 , String y1 , String Z7 ) {  <CR> super ( S2 , k5 , p6 , y1 , Z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g0 , String n1 , String d5 , String q , String U ) {  <CR> super ( g0 , n1 , d5 , q , U ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String r4 , String I6 , Letter I2 ) {  <CR> this . senderAddr = r4 ;  <CR> this . receiverAddr = I6 ;  <CR> this . letter = I2 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String D7 ) {  <CR> int a6 = 0 ;  <CR> for ( int i6 = 0 ; i6 < D7 . length ( ) ; i6 ++ ) {  <CR> char p1 = D7 . charAt ( i6 ) ;  <CR> a6 = a6 * 10 + p1 - '0' ;  <CR> }  <CR> return a6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String l9 , String S1 , String D6 , String r5 , String C1 ) {  <CR> this . title = l9 ;  <CR> this . receiver = S1 ;  <CR> this . content = D6 ;  <CR> this . sender = r5 ;  <CR> this . date = C1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object T9 ) {  <CR> Letter f = ( Letter ) T9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Z9 ) {  <CR> Letter [ ] o5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o5 ) ;  <CR> for ( int g4 = 0 ; g4 < 3 ; g4 ++ )  <CR> o5 [ g4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 