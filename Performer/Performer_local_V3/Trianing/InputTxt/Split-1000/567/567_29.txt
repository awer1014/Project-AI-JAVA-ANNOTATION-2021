 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String Y2 , String R1 , String S6 , String i0 , String s2 ) {  <CR> super ( Y2 , R1 , S6 , i0 , s2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String q4 , String W4 , String q6 , String V8 , String Q5 ) {  <CR> super ( q4 , W4 , q6 , V8 , Q5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String T6 , String k8 , Letter c4 ) {  <CR> this . senderAddr = T6 ;  <CR> this . receiverAddr = k8 ;  <CR> this . letter = c4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String K9 ) {  <CR> int s1 = 0 ;  <CR> for ( int Y6 = 0 ; Y6 < K9 . length ( ) ; Y6 ++ ) {  <CR> char v9 = K9 . charAt ( Y6 ) ;  <CR> s1 = s1 * 10 + v9 - '0' ;  <CR> }  <CR> return s1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object e4 ) {  <CR> Letter B5 = ( Letter ) e4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String j2 , String w8 , String Q9 , String G5 , String k2 ) {  <CR> this . title = j2 ;  <CR> this . receiver = w8 ;  <CR> this . content = Q9 ;  <CR> this . sender = G5 ;  <CR> this . date = k2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] y0 ) {  <CR> Letter [ ] b4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b4 ) ;  <CR> for ( int z5 = 0 ; z5 < 3 ; z5 ++ )  <CR> b4 [ z5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 