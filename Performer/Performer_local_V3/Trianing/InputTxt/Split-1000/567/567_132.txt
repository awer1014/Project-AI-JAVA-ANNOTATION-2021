 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String i7 , String c2 , String f3 , String t0 , String Q1 ) {  <CR> super ( i7 , c2 , f3 , t0 , Q1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String e5 , String p6 , String r9 , String F , String V4 ) {  <CR> super ( e5 , p6 , r9 , F , V4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String W , String T7 , Letter x5 ) {  <CR> this . senderAddr = W ;  <CR> this . receiverAddr = T7 ;  <CR> this . letter = x5 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object c7 ) {  <CR> Letter Q1 = ( Letter ) c7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String K4 ) {  <CR> int E0 = 0 ;  <CR> for ( int A9 = 0 ; A9 < K4 . length ( ) ; A9 ++ ) {  <CR> char o2 = K4 . charAt ( A9 ) ;  <CR> E0 = E0 * 10 + o2 - '0' ;  <CR> }  <CR> return E0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String p7 , String y8 , String b1 , String R0 , String E1 ) {  <CR> this . title = p7 ;  <CR> this . receiver = y8 ;  <CR> this . content = b1 ;  <CR> this . sender = R0 ;  <CR> this . date = E1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] F4 ) {  <CR> Letter [ ] y2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( y2 ) ;  <CR> for ( int n9 = 0 ; n9 < 3 ; n9 ++ )  <CR> y2 [ n9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 