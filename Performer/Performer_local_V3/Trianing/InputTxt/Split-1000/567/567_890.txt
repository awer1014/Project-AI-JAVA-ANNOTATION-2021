 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W2 , String j3 , String l4 , String F0 , String s1 ) {  <CR> super ( W2 , j3 , l4 , F0 , s1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String f8 , String R , String H9 , String H2 , String w0 ) {  <CR> super ( f8 , R , H9 , H2 , w0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String z5 , String k7 , Letter U6 ) {  <CR> this . senderAddr = z5 ;  <CR> this . receiverAddr = k7 ;  <CR> this . letter = U6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object w9 ) {  <CR> Letter n3 = ( Letter ) w9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String w7 ) {  <CR> int h3 = 0 ;  <CR> for ( int Y2 = 0 ; Y2 < w7 . length ( ) ; Y2 ++ ) {  <CR> char P8 = w7 . charAt ( Y2 ) ;  <CR> h3 = h3 * 10 + P8 - '0' ;  <CR> }  <CR> return h3 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String D0 , String X7 , String O9 , String H , String p8 ) {  <CR> this . title = D0 ;  <CR> this . receiver = X7 ;  <CR> this . content = O9 ;  <CR> this . sender = H ;  <CR> this . date = p8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] i4 ) {  <CR> Letter [ ] A0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( A0 ) ;  <CR> for ( int Q6 = 0 ; Q6 < 3 ; Q6 ++ )  <CR> A0 [ Q6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 