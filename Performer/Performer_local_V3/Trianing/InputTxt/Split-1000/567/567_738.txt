 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c1 , String a4 , String u5 , String a7 , String K7 ) {  <CR> super ( c1 , a4 , u5 , a7 , K7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String B7 , String h , String i4 , String h7 , String H1 ) {  <CR> super ( B7 , h , i4 , h7 , H1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String K , String I0 , Letter s6 ) {  <CR> this . senderAddr = K ;  <CR> this . receiverAddr = I0 ;  <CR> this . letter = s6 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String W8 , String J2 , String R4 , String J0 , String X ) {  <CR> this . title = W8 ;  <CR> this . receiver = J2 ;  <CR> this . content = R4 ;  <CR> this . sender = J0 ;  <CR> this . date = X ;  <CR> }  <CR> int valueOf ( String Y4 ) {  <CR> int X2 = 0 ;  <CR> for ( int T1 = 0 ; T1 < Y4 . length ( ) ; T1 ++ ) {  <CR> char d5 = Y4 . charAt ( T1 ) ;  <CR> X2 = X2 * 10 + d5 - '0' ;  <CR> }  <CR> return X2 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object m2 ) {  <CR> Letter K3 = ( Letter ) m2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K9 ) {  <CR> Letter [ ] V = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( V ) ;  <CR> for ( int k1 = 0 ; k1 < 3 ; k1 ++ )  <CR> V [ k1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 