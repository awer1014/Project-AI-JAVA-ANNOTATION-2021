 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String M4 , String p1 , String D3 , String l1 , String m3 ) {  <CR> super ( M4 , p1 , D3 , l1 , m3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String p2 , String o6 , String Z2 , String e , String e5 ) {  <CR> super ( p2 , o6 , Z2 , e , e5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String D4 , String F0 , Letter G4 ) {  <CR> this . senderAddr = D4 ;  <CR> this . receiverAddr = F0 ;  <CR> this . letter = G4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String U6 ) {  <CR> int Y = 0 ;  <CR> for ( int P9 = 0 ; P9 < U6 . length ( ) ; P9 ++ ) {  <CR> char L9 = U6 . charAt ( P9 ) ;  <CR> Y = Y * 10 + L9 - '0' ;  <CR> }  <CR> return Y ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String f1 , String u8 , String l9 , String s8 , String E3 ) {  <CR> this . title = f1 ;  <CR> this . receiver = u8 ;  <CR> this . content = l9 ;  <CR> this . sender = s8 ;  <CR> this . date = E3 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object z3 ) {  <CR> Letter o5 = ( Letter ) z3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T6 ) {  <CR> Letter [ ] h3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h3 ) ;  <CR> for ( int t9 = 0 ; t9 < 3 ; t9 ++ )  <CR> h3 [ t9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 