 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W3 , String G8 , String c0 , String w4 , String x0 ) {  <CR> super ( W3 , G8 , c0 , w4 , x0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String d , String c6 , String S4 , String y6 , String v4 ) {  <CR> super ( d , c6 , S4 , y6 , v4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String v1 , String l1 , Letter w9 ) {  <CR> this . senderAddr = v1 ;  <CR> this . receiverAddr = l1 ;  <CR> this . letter = w9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object C9 ) {  <CR> Letter q1 = ( Letter ) C9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String W1 , String R6 , String J7 , String h5 , String j1 ) {  <CR> this . title = W1 ;  <CR> this . receiver = R6 ;  <CR> this . content = J7 ;  <CR> this . sender = h5 ;  <CR> this . date = j1 ;  <CR> }  <CR> int valueOf ( String m ) {  <CR> int I7 = 0 ;  <CR> for ( int t4 = 0 ; t4 < m . length ( ) ; t4 ++ ) {  <CR> char h1 = m . charAt ( t4 ) ;  <CR> I7 = I7 * 10 + h1 - '0' ;  <CR> }  <CR> return I7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] t2 ) {  <CR> Letter [ ] g2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( g2 ) ;  <CR> for ( int h1 = 0 ; h1 < 3 ; h1 ++ )  <CR> g2 [ h1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 