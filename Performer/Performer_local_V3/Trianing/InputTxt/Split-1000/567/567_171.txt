 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D2 , String s7 , String l2 , String K5 , String x0 ) {  <CR> super ( D2 , s7 , l2 , K5 , x0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String g4 , String u1 , String g , String R5 , String P5 ) {  <CR> super ( g4 , u1 , g , R5 , P5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String n4 , String t8 , Letter U0 ) {  <CR> this . senderAddr = n4 ;  <CR> this . receiverAddr = t8 ;  <CR> this . letter = U0 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String U ) {  <CR> int N9 = 0 ;  <CR> for ( int Z = 0 ; Z < U . length ( ) ; Z ++ ) {  <CR> char o5 = U . charAt ( Z ) ;  <CR> N9 = N9 * 10 + o5 - '0' ;  <CR> }  <CR> return N9 ;  <CR> }  <CR> Letter ( String O4 , String J3 , String s9 , String z , String j4 ) {  <CR> this . title = O4 ;  <CR> this . receiver = J3 ;  <CR> this . content = s9 ;  <CR> this . sender = z ;  <CR> this . date = j4 ;  <CR> }  <CR> public int compareTo ( Object m8 ) {  <CR> Letter Z5 = ( Letter ) m8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] F ) {  <CR> Letter [ ] A0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( A0 ) ;  <CR> for ( int A = 0 ; A < 3 ; A ++ )  <CR> A0 [ A ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 