 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String C6 , String p , String H , String h4 , String d6 ) {  <CR> super ( C6 , p , H , h4 , d6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String t2 , String a1 , String f7 , String i , String a0 ) {  <CR> super ( t2 , a1 , f7 , i , a0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String z7 , String C1 , Letter E ) {  <CR> this . senderAddr = z7 ;  <CR> this . receiverAddr = C1 ;  <CR> this . letter = E ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> int valueOf ( String L6 ) {  <CR> int Z9 = 0 ;  <CR> for ( int x1 = 0 ; x1 < L6 . length ( ) ; x1 ++ ) {  <CR> char s1 = L6 . charAt ( x1 ) ;  <CR> Z9 = Z9 * 10 + s1 - '0' ;  <CR> }  <CR> return Z9 ;  <CR> }  <CR> Letter ( String I9 , String J5 , String C0 , String v0 , String g4 ) {  <CR> this . title = I9 ;  <CR> this . receiver = J5 ;  <CR> this . content = C0 ;  <CR> this . sender = v0 ;  <CR> this . date = g4 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object H6 ) {  <CR> Letter d5 = ( Letter ) H6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] E3 ) {  <CR> Letter [ ] S = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S ) ;  <CR> for ( int N6 = 0 ; N6 < 3 ; N6 ++ )  <CR> S [ N6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 