 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String p , String N5 , String g3 , String E , String X4 ) {  <CR> super ( p , N5 , g3 , E , X4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String E0 , String l4 , String Z2 , String D3 , String E8 ) {  <CR> super ( E0 , l4 , Z2 , D3 , E8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String z , String R9 , Letter f7 ) {  <CR> this . senderAddr = z ;  <CR> this . receiverAddr = R9 ;  <CR> this . letter = f7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> Letter ( String c3 , String u4 , String I9 , String x0 , String K0 ) {  <CR> this . title = c3 ;  <CR> this . receiver = u4 ;  <CR> this . content = I9 ;  <CR> this . sender = x0 ;  <CR> this . date = K0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String z6 ) {  <CR> int g3 = 0 ;  <CR> for ( int X1 = 0 ; X1 < z6 . length ( ) ; X1 ++ ) {  <CR> char q4 = z6 . charAt ( X1 ) ;  <CR> g3 = g3 * 10 + q4 - '0' ;  <CR> }  <CR> return g3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object b7 ) {  <CR> Letter i1 = ( Letter ) b7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] E5 ) {  <CR> Letter [ ] Y0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y0 ) ;  <CR> for ( int O6 = 0 ; O6 < 3 ; O6 ++ )  <CR> Y0 [ O6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 