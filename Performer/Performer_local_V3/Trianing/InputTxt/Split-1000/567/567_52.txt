 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String q5 , String H4 , String U3 , String c4 , String u6 ) {  <CR> super ( q5 , H4 , U3 , c4 , u6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String k8 , String w1 , String q6 , String N3 , String K2 ) {  <CR> super ( k8 , w1 , q6 , N3 , K2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String t5 , String A0 , Letter l7 ) {  <CR> this . senderAddr = t5 ;  <CR> this . receiverAddr = A0 ;  <CR> this . letter = l7 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> public int compareTo ( Object l7 ) {  <CR> Letter p = ( Letter ) l7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String v7 ) {  <CR> int q2 = 0 ;  <CR> for ( int W4 = 0 ; W4 < v7 . length ( ) ; W4 ++ ) {  <CR> char y2 = v7 . charAt ( W4 ) ;  <CR> q2 = q2 * 10 + y2 - '0' ;  <CR> }  <CR> return q2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String Y5 , String m0 , String j2 , String Y4 , String C4 ) {  <CR> this . title = Y5 ;  <CR> this . receiver = m0 ;  <CR> this . content = j2 ;  <CR> this . sender = Y4 ;  <CR> this . date = C4 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] v2 ) {  <CR> Letter [ ] u8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u8 ) ;  <CR> for ( int Z4 = 0 ; Z4 < 3 ; Z4 ++ )  <CR> u8 [ Z4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 