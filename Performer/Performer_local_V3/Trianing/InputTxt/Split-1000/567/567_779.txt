 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I7 , String b2 , String W0 , String w2 , String y6 ) {  <CR> super ( I7 , b2 , W0 , w2 , y6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String C8 , String R5 , String C6 , String G0 , String u3 ) {  <CR> super ( C8 , R5 , C6 , G0 , u3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String e5 , String M7 , Letter b2 ) {  <CR> this . senderAddr = e5 ;  <CR> this . receiverAddr = M7 ;  <CR> this . letter = b2 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String T9 , String Z7 , String F9 , String w , String G7 ) {  <CR> this . title = T9 ;  <CR> this . receiver = Z7 ;  <CR> this . content = F9 ;  <CR> this . sender = w ;  <CR> this . date = G7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String O2 ) {  <CR> int C3 = 0 ;  <CR> for ( int B4 = 0 ; B4 < O2 . length ( ) ; B4 ++ ) {  <CR> char e5 = O2 . charAt ( B4 ) ;  <CR> C3 = C3 * 10 + e5 - '0' ;  <CR> }  <CR> return C3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object e7 ) {  <CR> Letter a8 = ( Letter ) e7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] m1 ) {  <CR> Letter [ ] m6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( m6 ) ;  <CR> for ( int q = 0 ; q < 3 ; q ++ )  <CR> m6 [ q ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 