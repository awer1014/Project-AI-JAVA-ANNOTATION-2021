 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c3 , String e8 , String H8 , String C6 , String W2 ) {  <CR> super ( c3 , e8 , H8 , C6 , W2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String C9 , String t5 , String p , String f9 , String y1 ) {  <CR> super ( C9 , t5 , p , f9 , y1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String D5 , String B4 , Letter U ) {  <CR> this . senderAddr = D5 ;  <CR> this . receiverAddr = B4 ;  <CR> this . letter = U ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object H8 ) {  <CR> Letter H5 = ( Letter ) H8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String U3 , String p3 , String c7 , String T , String e0 ) {  <CR> this . title = U3 ;  <CR> this . receiver = p3 ;  <CR> this . content = c7 ;  <CR> this . sender = T ;  <CR> this . date = e0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String i4 ) {  <CR> int u4 = 0 ;  <CR> for ( int T6 = 0 ; T6 < i4 . length ( ) ; T6 ++ ) {  <CR> char F = i4 . charAt ( T6 ) ;  <CR> u4 = u4 * 10 + F - '0' ;  <CR> }  <CR> return u4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] l9 ) {  <CR> Letter [ ] b8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b8 ) ;  <CR> for ( int H0 = 0 ; H0 < 3 ; H0 ++ )  <CR> b8 [ H0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 