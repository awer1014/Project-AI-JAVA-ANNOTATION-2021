 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y9 , String U8 , String Q0 , String o6 , String D5 ) {  <CR> super ( y9 , U8 , Q0 , o6 , D5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String x2 , String U , String b2 , String v4 , String L3 ) {  <CR> super ( x2 , U , b2 , v4 , L3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String n4 , String M , Letter M9 ) {  <CR> this . senderAddr = n4 ;  <CR> this . receiverAddr = M ;  <CR> this . letter = M9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String q3 ) {  <CR> int Z5 = 0 ;  <CR> for ( int l6 = 0 ; l6 < q3 . length ( ) ; l6 ++ ) {  <CR> char r0 = q3 . charAt ( l6 ) ;  <CR> Z5 = Z5 * 10 + r0 - '0' ;  <CR> }  <CR> return Z5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> Letter ( String O8 , String U7 , String a4 , String H2 , String S9 ) {  <CR> this . title = O8 ;  <CR> this . receiver = U7 ;  <CR> this . content = a4 ;  <CR> this . sender = H2 ;  <CR> this . date = S9 ;  <CR> }  <CR> public int compareTo ( Object H5 ) {  <CR> Letter N6 = ( Letter ) H5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] N6 ) {  <CR> Letter [ ] l3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( l3 ) ;  <CR> for ( int h4 = 0 ; h4 < 3 ; h4 ++ )  <CR> l3 [ h4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 