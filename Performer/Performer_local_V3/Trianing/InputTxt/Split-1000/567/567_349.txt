 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String n6 , String l9 , String d , String m1 , String p3 ) {  <CR> super ( n6 , l9 , d , m1 , p3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String t3 , String C1 , String d4 , String C6 , String u6 ) {  <CR> super ( t3 , C1 , d4 , C6 , u6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String K4 , String J , Letter c ) {  <CR> this . senderAddr = K4 ;  <CR> this . receiverAddr = J ;  <CR> this . letter = c ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String C5 , String d8 , String b7 , String o1 , String M6 ) {  <CR> this . title = C5 ;  <CR> this . receiver = d8 ;  <CR> this . content = b7 ;  <CR> this . sender = o1 ;  <CR> this . date = M6 ;  <CR> }  <CR> public int compareTo ( Object O0 ) {  <CR> Letter F = ( Letter ) O0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String p6 ) {  <CR> int A9 = 0 ;  <CR> for ( int Q1 = 0 ; Q1 < p6 . length ( ) ; Q1 ++ ) {  <CR> char q3 = p6 . charAt ( Q1 ) ;  <CR> A9 = A9 * 10 + q3 - '0' ;  <CR> }  <CR> return A9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o6 ) {  <CR> Letter [ ] t0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( t0 ) ;  <CR> for ( int o2 = 0 ; o2 < 3 ; o2 ++ )  <CR> t0 [ o2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 