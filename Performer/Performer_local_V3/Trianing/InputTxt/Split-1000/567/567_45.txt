 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U7 , String M , String c , String j5 , String E5 ) {  <CR> super ( U7 , M , c , j5 , E5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String n4 , String m0 , String H3 , String h , String w6 ) {  <CR> super ( n4 , m0 , H3 , h , w6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String P5 , String T , Letter L4 ) {  <CR> this . senderAddr = P5 ;  <CR> this . receiverAddr = T ;  <CR> this . letter = L4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object k8 ) {  <CR> Letter G4 = ( Letter ) k8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String u6 ) {  <CR> int e = 0 ;  <CR> for ( int y9 = 0 ; y9 < u6 . length ( ) ; y9 ++ ) {  <CR> char f2 = u6 . charAt ( y9 ) ;  <CR> e = e * 10 + f2 - '0' ;  <CR> }  <CR> return e ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String s0 , String N9 , String S0 , String w5 , String J5 ) {  <CR> this . title = s0 ;  <CR> this . receiver = N9 ;  <CR> this . content = S0 ;  <CR> this . sender = w5 ;  <CR> this . date = J5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d5 ) {  <CR> Letter [ ] z = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( z ) ;  <CR> for ( int y8 = 0 ; y8 < 3 ; y8 ++ )  <CR> z [ y8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 