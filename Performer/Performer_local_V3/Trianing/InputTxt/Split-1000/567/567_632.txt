 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T , String U , String l1 , String J9 , String W3 ) {  <CR> super ( T , U , l1 , J9 , W3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o4 , String g , String K0 , String k3 , String W7 ) {  <CR> super ( o4 , g , K0 , k3 , W7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String Y2 , String U6 , Letter n ) {  <CR> this . senderAddr = Y2 ;  <CR> this . receiverAddr = U6 ;  <CR> this . letter = n ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String h1 , String C0 , String P0 , String l9 , String r3 ) {  <CR> this . title = h1 ;  <CR> this . receiver = C0 ;  <CR> this . content = P0 ;  <CR> this . sender = l9 ;  <CR> this . date = r3 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String s2 ) {  <CR> int e1 = 0 ;  <CR> for ( int Z5 = 0 ; Z5 < s2 . length ( ) ; Z5 ++ ) {  <CR> char B0 = s2 . charAt ( Z5 ) ;  <CR> e1 = e1 * 10 + B0 - '0' ;  <CR> }  <CR> return e1 ;  <CR> }  <CR> public int compareTo ( Object S9 ) {  <CR> Letter e4 = ( Letter ) S9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d7 ) {  <CR> Letter [ ] Z7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z7 ) ;  <CR> for ( int Q7 = 0 ; Q7 < 3 ; Q7 ++ )  <CR> Z7 [ Q7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 