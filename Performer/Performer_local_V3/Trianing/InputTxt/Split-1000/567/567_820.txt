 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String J6 , String T3 , String L8 , String d9 , String o9 ) {  <CR> super ( J6 , T3 , L8 , d9 , o9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String X4 , String r4 , String I0 , String B , String Y5 ) {  <CR> super ( X4 , r4 , I0 , B , Y5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String R6 , String z0 , Letter r3 ) {  <CR> this . senderAddr = R6 ;  <CR> this . receiverAddr = z0 ;  <CR> this . letter = r3 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String J4 ) {  <CR> int H4 = 0 ;  <CR> for ( int U3 = 0 ; U3 < J4 . length ( ) ; U3 ++ ) {  <CR> char b8 = J4 . charAt ( U3 ) ;  <CR> H4 = H4 * 10 + b8 - '0' ;  <CR> }  <CR> return H4 ;  <CR> }  <CR> Letter ( String x8 , String W6 , String u4 , String j9 , String b5 ) {  <CR> this . title = x8 ;  <CR> this . receiver = W6 ;  <CR> this . content = u4 ;  <CR> this . sender = j9 ;  <CR> this . date = b5 ;  <CR> }  <CR> public int compareTo ( Object H ) {  <CR> Letter H8 = ( Letter ) H ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] J7 ) {  <CR> Letter [ ] Y7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y7 ) ;  <CR> for ( int t5 = 0 ; t5 < 3 ; t5 ++ )  <CR> Y7 [ t5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 