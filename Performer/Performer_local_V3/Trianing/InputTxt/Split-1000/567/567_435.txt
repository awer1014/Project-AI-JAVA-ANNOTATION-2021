 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String X3 , String b7 , String C , String B8 , String g3 ) {  <CR> super ( X3 , b7 , C , B8 , g3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String A5 , String R4 , String d5 , String e1 , String n8 ) {  <CR> super ( A5 , R4 , d5 , e1 , n8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String a0 , String s2 , Letter P ) {  <CR> this . senderAddr = a0 ;  <CR> this . receiverAddr = s2 ;  <CR> this . letter = P ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object j9 ) {  <CR> Letter I1 = ( Letter ) j9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String U ) {  <CR> int U3 = 0 ;  <CR> for ( int M0 = 0 ; M0 < U . length ( ) ; M0 ++ ) {  <CR> char f2 = U . charAt ( M0 ) ;  <CR> U3 = U3 * 10 + f2 - '0' ;  <CR> }  <CR> return U3 ;  <CR> }  <CR> Letter ( String f3 , String F4 , String t1 , String V3 , String i4 ) {  <CR> this . title = f3 ;  <CR> this . receiver = F4 ;  <CR> this . content = t1 ;  <CR> this . sender = V3 ;  <CR> this . date = i4 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K0 ) {  <CR> Letter [ ] A4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( A4 ) ;  <CR> for ( int u2 = 0 ; u2 < 3 ; u2 ++ )  <CR> A4 [ u2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 