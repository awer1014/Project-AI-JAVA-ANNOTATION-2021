 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u , String a4 , String Y6 , String l3 , String P6 ) {  <CR> super ( u , a4 , Y6 , l3 , P6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String q0 , String r , String A8 , String M3 , String l2 ) {  <CR> super ( q0 , r , A8 , M3 , l2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String n6 , String p1 , Letter B3 ) {  <CR> this . senderAddr = n6 ;  <CR> this . receiverAddr = p1 ;  <CR> this . letter = B3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object u4 ) {  <CR> Letter G4 = ( Letter ) u4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String Z0 ) {  <CR> int Q7 = 0 ;  <CR> for ( int Z1 = 0 ; Z1 < Z0 . length ( ) ; Z1 ++ ) {  <CR> char m9 = Z0 . charAt ( Z1 ) ;  <CR> Q7 = Q7 * 10 + m9 - '0' ;  <CR> }  <CR> return Q7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String U7 , String A7 , String a7 , String q8 , String T5 ) {  <CR> this . title = U7 ;  <CR> this . receiver = A7 ;  <CR> this . content = a7 ;  <CR> this . sender = q8 ;  <CR> this . date = T5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b6 ) {  <CR> Letter [ ] W7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( W7 ) ;  <CR> for ( int N2 = 0 ; N2 < 3 ; N2 ++ )  <CR> W7 [ N2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 