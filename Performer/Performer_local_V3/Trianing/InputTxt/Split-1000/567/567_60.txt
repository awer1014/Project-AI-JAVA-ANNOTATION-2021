 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String a8 , String Q0 , String k , String I9 , String C8 ) {  <CR> super ( a8 , Q0 , k , I9 , C8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String x6 , String w8 , String y , String C9 , String t7 ) {  <CR> super ( x6 , w8 , y , C9 , t7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String a1 , String X0 , Letter T1 ) {  <CR> this . senderAddr = a1 ;  <CR> this . receiverAddr = X0 ;  <CR> this . letter = T1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> public int compareTo ( Object X0 ) {  <CR> Letter M2 = ( Letter ) X0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String I2 ) {  <CR> int J8 = 0 ;  <CR> for ( int i4 = 0 ; i4 < I2 . length ( ) ; i4 ++ ) {  <CR> char C9 = I2 . charAt ( i4 ) ;  <CR> J8 = J8 * 10 + C9 - '0' ;  <CR> }  <CR> return J8 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String F1 , String E8 , String j8 , String U4 , String L5 ) {  <CR> this . title = F1 ;  <CR> this . receiver = E8 ;  <CR> this . content = j8 ;  <CR> this . sender = U4 ;  <CR> this . date = L5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] m5 ) {  <CR> Letter [ ] A5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( A5 ) ;  <CR> for ( int D3 = 0 ; D3 < 3 ; D3 ++ )  <CR> A5 [ D3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 