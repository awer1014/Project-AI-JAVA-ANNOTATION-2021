 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String L9 , String b2 , String f5 , String W6 , String m3 ) {  <CR> super ( L9 , b2 , f5 , W6 , m3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String w9 , String y3 , String M2 , String H1 , String n2 ) {  <CR> super ( w9 , y3 , M2 , H1 , n2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String C , String w9 , Letter l1 ) {  <CR> this . senderAddr = C ;  <CR> this . receiverAddr = w9 ;  <CR> this . letter = l1 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String P , String D2 , String t2 , String r8 , String Q2 ) {  <CR> this . title = P ;  <CR> this . receiver = D2 ;  <CR> this . content = t2 ;  <CR> this . sender = r8 ;  <CR> this . date = Q2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object q1 ) {  <CR> Letter d6 = ( Letter ) q1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String U0 ) {  <CR> int h = 0 ;  <CR> for ( int R4 = 0 ; R4 < U0 . length ( ) ; R4 ++ ) {  <CR> char R = U0 . charAt ( R4 ) ;  <CR> h = h * 10 + R - '0' ;  <CR> }  <CR> return h ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U5 ) {  <CR> Letter [ ] i7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( i7 ) ;  <CR> for ( int W6 = 0 ; W6 < 3 ; W6 ++ )  <CR> i7 [ W6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 