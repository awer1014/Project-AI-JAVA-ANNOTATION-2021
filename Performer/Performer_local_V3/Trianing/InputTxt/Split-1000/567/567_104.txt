 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String j5 , String H0 , String W6 , String V6 , String y2 ) {  <CR> super ( j5 , H0 , W6 , V6 , y2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String t5 , String e8 , String y , String d3 , String G7 ) {  <CR> super ( t5 , e8 , y , d3 , G7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String O8 , String E , Letter C6 ) {  <CR> this . senderAddr = O8 ;  <CR> this . receiverAddr = E ;  <CR> this . letter = C6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String y ) {  <CR> int k0 = 0 ;  <CR> for ( int d6 = 0 ; d6 < y . length ( ) ; d6 ++ ) {  <CR> char W0 = y . charAt ( d6 ) ;  <CR> k0 = k0 * 10 + W0 - '0' ;  <CR> }  <CR> return k0 ;  <CR> }  <CR> public int compareTo ( Object W6 ) {  <CR> Letter j8 = ( Letter ) W6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String S3 , String P7 , String p5 , String k6 , String s ) {  <CR> this . title = S3 ;  <CR> this . receiver = P7 ;  <CR> this . content = p5 ;  <CR> this . sender = k6 ;  <CR> this . date = s ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B1 ) {  <CR> Letter [ ] G3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( G3 ) ;  <CR> for ( int z1 = 0 ; z1 < 3 ; z1 ++ )  <CR> G3 [ z1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 