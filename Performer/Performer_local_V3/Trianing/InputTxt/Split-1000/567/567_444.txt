 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String N6 , String k8 , String h1 , String z0 , String N1 ) {  <CR> super ( N6 , k8 , h1 , z0 , N1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String H5 , String m0 , String c7 , String E1 , String l6 ) {  <CR> super ( H5 , m0 , c7 , E1 , l6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String R2 , String I5 , Letter b6 ) {  <CR> this . senderAddr = R2 ;  <CR> this . receiverAddr = I5 ;  <CR> this . letter = b6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object l0 ) {  <CR> Letter H3 = ( Letter ) l0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String P5 , String C4 , String S9 , String L3 , String D5 ) {  <CR> this . title = P5 ;  <CR> this . receiver = C4 ;  <CR> this . content = S9 ;  <CR> this . sender = L3 ;  <CR> this . date = D5 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String G1 ) {  <CR> int q4 = 0 ;  <CR> for ( int Y0 = 0 ; Y0 < G1 . length ( ) ; Y0 ++ ) {  <CR> char D8 = G1 . charAt ( Y0 ) ;  <CR> q4 = q4 * 10 + D8 - '0' ;  <CR> }  <CR> return q4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w6 ) {  <CR> Letter [ ] q7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q7 ) ;  <CR> for ( int b2 = 0 ; b2 < 3 ; b2 ++ )  <CR> q7 [ b2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 