 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y7 , String l8 , String b0 , String N2 , String S4 ) {  <CR> super ( y7 , l8 , b0 , N2 , S4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String v5 , String F5 , String d7 , String f0 , String V1 ) {  <CR> super ( v5 , F5 , d7 , f0 , V1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String G5 , String d9 , Letter q3 ) {  <CR> this . senderAddr = G5 ;  <CR> this . receiverAddr = d9 ;  <CR> this . letter = q3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> Letter ( String g2 , String X , String V9 , String z , String v5 ) {  <CR> this . title = g2 ;  <CR> this . receiver = X ;  <CR> this . content = V9 ;  <CR> this . sender = z ;  <CR> this . date = v5 ;  <CR> }  <CR> int valueOf ( String K6 ) {  <CR> int r7 = 0 ;  <CR> for ( int P7 = 0 ; P7 < K6 . length ( ) ; P7 ++ ) {  <CR> char Z7 = K6 . charAt ( P7 ) ;  <CR> r7 = r7 * 10 + Z7 - '0' ;  <CR> }  <CR> return r7 ;  <CR> }  <CR> public int compareTo ( Object k7 ) {  <CR> Letter W3 = ( Letter ) k7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] O0 ) {  <CR> Letter [ ] j5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( j5 ) ;  <CR> for ( int V7 = 0 ; V7 < 3 ; V7 ++ )  <CR> j5 [ V7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 