 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String z1 , String b0 , String v3 , String J3 , String V3 ) {  <CR> super ( z1 , b0 , v3 , J3 , V3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String v , String O , String U , String k7 , String L4 ) {  <CR> super ( v , O , U , k7 , L4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String U3 , String S2 , Letter z3 ) {  <CR> this . senderAddr = U3 ;  <CR> this . receiverAddr = S2 ;  <CR> this . letter = z3 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object V2 ) {  <CR> Letter A8 = ( Letter ) V2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String U5 , String y5 , String B0 , String G5 , String E3 ) {  <CR> this . title = U5 ;  <CR> this . receiver = y5 ;  <CR> this . content = B0 ;  <CR> this . sender = G5 ;  <CR> this . date = E3 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String B6 ) {  <CR> int e8 = 0 ;  <CR> for ( int r = 0 ; r < B6 . length ( ) ; r ++ ) {  <CR> char P5 = B6 . charAt ( r ) ;  <CR> e8 = e8 * 10 + P5 - '0' ;  <CR> }  <CR> return e8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n1 ) {  <CR> Letter [ ] I4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I4 ) ;  <CR> for ( int i8 = 0 ; i8 < 3 ; i8 ++ )  <CR> I4 [ i8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 