 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y3 , String s6 , String D1 , String I0 , String m7 ) {  <CR> super ( y3 , s6 , D1 , I0 , m7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String C1 , String y5 , String R7 , String s2 , String D4 ) {  <CR> super ( C1 , y5 , R7 , s2 , D4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String V2 , String I2 , Letter N0 ) {  <CR> this . senderAddr = V2 ;  <CR> this . receiverAddr = I2 ;  <CR> this . letter = N0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String d8 ) {  <CR> int g6 = 0 ;  <CR> for ( int S8 = 0 ; S8 < d8 . length ( ) ; S8 ++ ) {  <CR> char u8 = d8 . charAt ( S8 ) ;  <CR> g6 = g6 * 10 + u8 - '0' ;  <CR> }  <CR> return g6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String K3 , String z0 , String T1 , String q2 , String M1 ) {  <CR> this . title = K3 ;  <CR> this . receiver = z0 ;  <CR> this . content = T1 ;  <CR> this . sender = q2 ;  <CR> this . date = M1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object J2 ) {  <CR> Letter v6 = ( Letter ) J2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] h1 ) {  <CR> Letter [ ] v2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( v2 ) ;  <CR> for ( int u6 = 0 ; u6 < 3 ; u6 ++ )  <CR> v2 [ u6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 