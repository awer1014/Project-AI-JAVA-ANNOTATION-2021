 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String C7 , String x9 , String V9 , String L5 , String a6 ) {  <CR> super ( C7 , x9 , V9 , L5 , a6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String f6 , String X6 , String P7 , String K8 , String N1 ) {  <CR> super ( f6 , X6 , P7 , K8 , N1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String z9 , String s3 , Letter W2 ) {  <CR> this . senderAddr = z9 ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = W2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String J9 ) {  <CR> int T2 = 0 ;  <CR> for ( int u = 0 ; u < J9 . length ( ) ; u ++ ) {  <CR> char n2 = J9 . charAt ( u ) ;  <CR> T2 = T2 * 10 + n2 - '0' ;  <CR> }  <CR> return T2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String m6 , String S3 , String U3 , String g7 , String d0 ) {  <CR> this . title = m6 ;  <CR> this . receiver = S3 ;  <CR> this . content = U3 ;  <CR> this . sender = g7 ;  <CR> this . date = d0 ;  <CR> }  <CR> public int compareTo ( Object B9 ) {  <CR> Letter N3 = ( Letter ) B9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] i1 ) {  <CR> Letter [ ] s9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s9 ) ;  <CR> for ( int t7 = 0 ; t7 < 3 ; t7 ++ )  <CR> s9 [ t7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 