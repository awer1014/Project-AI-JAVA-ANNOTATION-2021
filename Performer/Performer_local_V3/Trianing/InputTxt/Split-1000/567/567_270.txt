 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String m8 , String Q2 , String H0 , String g0 , String x ) {  <CR> super ( m8 , Q2 , H0 , g0 , x ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String Y , String C9 , String P5 , String V3 , String i9 ) {  <CR> super ( Y , C9 , P5 , V3 , i9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String S4 , String U8 , Letter s0 ) {  <CR> this . senderAddr = S4 ;  <CR> this . receiverAddr = U8 ;  <CR> this . letter = s0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String g5 , String w7 , String d , String O4 , String N1 ) {  <CR> this . title = g5 ;  <CR> this . receiver = w7 ;  <CR> this . content = d ;  <CR> this . sender = O4 ;  <CR> this . date = N1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String P4 ) {  <CR> int p = 0 ;  <CR> for ( int p7 = 0 ; p7 < P4 . length ( ) ; p7 ++ ) {  <CR> char K2 = P4 . charAt ( p7 ) ;  <CR> p = p * 10 + K2 - '0' ;  <CR> }  <CR> return p ;  <CR> }  <CR> public int compareTo ( Object F1 ) {  <CR> Letter Q3 = ( Letter ) F1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] u8 ) {  <CR> Letter [ ] w0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( w0 ) ;  <CR> for ( int S7 = 0 ; S7 < 3 ; S7 ++ )  <CR> w0 [ S7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 