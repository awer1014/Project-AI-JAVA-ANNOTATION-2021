 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D0 , String l8 , String A3 , String g8 , String R8 ) {  <CR> super ( D0 , l8 , A3 , g8 , R8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String r2 , String n2 , String D4 , String a0 , String W ) {  <CR> super ( r2 , n2 , D4 , a0 , W ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String f4 , String b8 , Letter N4 ) {  <CR> this . senderAddr = f4 ;  <CR> this . receiverAddr = b8 ;  <CR> this . letter = N4 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object n4 ) {  <CR> Letter t4 = ( Letter ) n4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String d4 ) {  <CR> int J1 = 0 ;  <CR> for ( int h6 = 0 ; h6 < d4 . length ( ) ; h6 ++ ) {  <CR> char D7 = d4 . charAt ( h6 ) ;  <CR> J1 = J1 * 10 + D7 - '0' ;  <CR> }  <CR> return J1 ;  <CR> }  <CR> Letter ( String O0 , String Z2 , String P7 , String e1 , String B5 ) {  <CR> this . title = O0 ;  <CR> this . receiver = Z2 ;  <CR> this . content = P7 ;  <CR> this . sender = e1 ;  <CR> this . date = B5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] G1 ) {  <CR> Letter [ ] u = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u ) ;  <CR> for ( int P8 = 0 ; P8 < 3 ; P8 ++ )  <CR> u [ P8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 