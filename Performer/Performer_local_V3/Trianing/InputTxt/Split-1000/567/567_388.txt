 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W3 , String z3 , String t5 , String m6 , String h2 ) {  <CR> super ( W3 , z3 , t5 , m6 , h2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String R2 , String F4 , String V6 , String V5 , String S0 ) {  <CR> super ( R2 , F4 , V6 , V5 , S0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String m6 , String p5 , Letter g0 ) {  <CR> this . senderAddr = m6 ;  <CR> this . receiverAddr = p5 ;  <CR> this . letter = g0 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String d3 , String h7 , String q4 , String v1 , String u4 ) {  <CR> this . title = d3 ;  <CR> this . receiver = h7 ;  <CR> this . content = q4 ;  <CR> this . sender = v1 ;  <CR> this . date = u4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String P0 ) {  <CR> int j3 = 0 ;  <CR> for ( int g1 = 0 ; g1 < P0 . length ( ) ; g1 ++ ) {  <CR> char Y = P0 . charAt ( g1 ) ;  <CR> j3 = j3 * 10 + Y - '0' ;  <CR> }  <CR> return j3 ;  <CR> }  <CR> public int compareTo ( Object k9 ) {  <CR> Letter L9 = ( Letter ) k9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T3 ) {  <CR> Letter [ ] h9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h9 ) ;  <CR> for ( int E4 = 0 ; E4 < 3 ; E4 ++ )  <CR> h9 [ E4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 