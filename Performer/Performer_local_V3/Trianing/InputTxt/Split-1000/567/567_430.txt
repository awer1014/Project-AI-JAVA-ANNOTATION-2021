 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String s1 , String f , String c , String r9 , String D6 ) {  <CR> super ( s1 , f , c , r9 , D6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String v7 , String m7 , String T8 , String g5 , String t ) {  <CR> super ( v7 , m7 , T8 , g5 , t ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String R8 , String U8 , Letter E ) {  <CR> this . senderAddr = R8 ;  <CR> this . receiverAddr = U8 ;  <CR> this . letter = E ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String i5 ) {  <CR> int D4 = 0 ;  <CR> for ( int z7 = 0 ; z7 < i5 . length ( ) ; z7 ++ ) {  <CR> char O5 = i5 . charAt ( z7 ) ;  <CR> D4 = D4 * 10 + O5 - '0' ;  <CR> }  <CR> return D4 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String u8 , String V0 , String L9 , String r6 , String e1 ) {  <CR> this . title = u8 ;  <CR> this . receiver = V0 ;  <CR> this . content = L9 ;  <CR> this . sender = r6 ;  <CR> this . date = e1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object a0 ) {  <CR> Letter i6 = ( Letter ) a0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Q4 ) {  <CR> Letter [ ] u2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u2 ) ;  <CR> for ( int t6 = 0 ; t6 < 3 ; t6 ++ )  <CR> u2 [ t6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 