 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String B3 , String f3 , String m8 , String q , String D4 ) {  <CR> super ( B3 , f3 , m8 , q , D4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String H4 , String E7 , String a1 , String O5 , String G5 ) {  <CR> super ( H4 , E7 , a1 , O5 , G5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String R1 , String D1 , Letter j6 ) {  <CR> this . senderAddr = R1 ;  <CR> this . receiverAddr = D1 ;  <CR> this . letter = j6 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String W2 , String k6 , String A7 , String f6 , String v5 ) {  <CR> this . title = W2 ;  <CR> this . receiver = k6 ;  <CR> this . content = A7 ;  <CR> this . sender = f6 ;  <CR> this . date = v5 ;  <CR> }  <CR> int valueOf ( String h1 ) {  <CR> int j3 = 0 ;  <CR> for ( int Y4 = 0 ; Y4 < h1 . length ( ) ; Y4 ++ ) {  <CR> char b7 = h1 . charAt ( Y4 ) ;  <CR> j3 = j3 * 10 + b7 - '0' ;  <CR> }  <CR> return j3 ;  <CR> }  <CR> public int compareTo ( Object P0 ) {  <CR> Letter R5 = ( Letter ) P0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T3 ) {  <CR> Letter [ ] n5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( n5 ) ;  <CR> for ( int b3 = 0 ; b3 < 3 ; b3 ++ )  <CR> n5 [ b3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 