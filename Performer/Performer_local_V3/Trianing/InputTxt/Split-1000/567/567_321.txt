 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String p3 , String I3 , String b , String J3 , String W8 ) {  <CR> super ( p3 , I3 , b , J3 , W8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String d2 , String P3 , String p1 , String F4 , String z8 ) {  <CR> super ( d2 , P3 , p1 , F4 , z8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String X8 , String j5 , Letter j6 ) {  <CR> this . senderAddr = X8 ;  <CR> this . receiverAddr = j5 ;  <CR> this . letter = j6 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object T4 ) {  <CR> Letter z2 = ( Letter ) T4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> int valueOf ( String b7 ) {  <CR> int b1 = 0 ;  <CR> for ( int Y3 = 0 ; Y3 < b7 . length ( ) ; Y3 ++ ) {  <CR> char r2 = b7 . charAt ( Y3 ) ;  <CR> b1 = b1 * 10 + r2 - '0' ;  <CR> }  <CR> return b1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String T2 , String l8 , String B7 , String h , String Z0 ) {  <CR> this . title = T2 ;  <CR> this . receiver = l8 ;  <CR> this . content = B7 ;  <CR> this . sender = h ;  <CR> this . date = Z0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w4 ) {  <CR> Letter [ ] N9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( N9 ) ;  <CR> for ( int I1 = 0 ; I1 < 3 ; I1 ++ )  <CR> N9 [ I1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 