 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z2 , String v8 , String J , String U1 , String o7 ) {  <CR> super ( Z2 , v8 , J , U1 , o7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String O9 , String Q2 , String T0 , String x1 , String r7 ) {  <CR> super ( O9 , Q2 , T0 , x1 , r7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String e8 , String c9 , Letter J5 ) {  <CR> this . senderAddr = e8 ;  <CR> this . receiverAddr = c9 ;  <CR> this . letter = J5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object s1 ) {  <CR> Letter B9 = ( Letter ) s1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String b0 , String L2 , String u1 , String x1 , String D0 ) {  <CR> this . title = b0 ;  <CR> this . receiver = L2 ;  <CR> this . content = u1 ;  <CR> this . sender = x1 ;  <CR> this . date = D0 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String F ) {  <CR> int Z1 = 0 ;  <CR> for ( int b3 = 0 ; b3 < F . length ( ) ; b3 ++ ) {  <CR> char U6 = F . charAt ( b3 ) ;  <CR> Z1 = Z1 * 10 + U6 - '0' ;  <CR> }  <CR> return Z1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W7 ) {  <CR> Letter [ ] t9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( t9 ) ;  <CR> for ( int s1 = 0 ; s1 < 3 ; s1 ++ )  <CR> t9 [ s1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 