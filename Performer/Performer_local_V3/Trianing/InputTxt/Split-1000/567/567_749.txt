 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A4 , String E4 , String Z1 , String t9 , String s1 ) {  <CR> super ( A4 , E4 , Z1 , t9 , s1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String c9 , String B6 , String a7 , String w7 , String e ) {  <CR> super ( c9 , B6 , a7 , w7 , e ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String i9 , String g0 , Letter T1 ) {  <CR> this . senderAddr = i9 ;  <CR> this . receiverAddr = g0 ;  <CR> this . letter = T1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String d1 ) {  <CR> int T3 = 0 ;  <CR> for ( int u8 = 0 ; u8 < d1 . length ( ) ; u8 ++ ) {  <CR> char t2 = d1 . charAt ( u8 ) ;  <CR> T3 = T3 * 10 + t2 - '0' ;  <CR> }  <CR> return T3 ;  <CR> }  <CR> Letter ( String L9 , String F6 , String W4 , String i3 , String t9 ) {  <CR> this . title = L9 ;  <CR> this . receiver = F6 ;  <CR> this . content = W4 ;  <CR> this . sender = i3 ;  <CR> this . date = t9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object e2 ) {  <CR> Letter J0 = ( Letter ) e2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] F ) {  <CR> Letter [ ] g3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( g3 ) ;  <CR> for ( int h5 = 0 ; h5 < 3 ; h5 ++ )  <CR> g3 [ h5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 