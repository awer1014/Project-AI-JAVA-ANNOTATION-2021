 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String s5 , String z2 , String n2 , String t0 , String v5 ) {  <CR> super ( s5 , z2 , n2 , t0 , v5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String G , String e6 , String C4 , String X3 , String H ) {  <CR> super ( G , e6 , C4 , X3 , H ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String y7 , String P3 , Letter w5 ) {  <CR> this . senderAddr = y7 ;  <CR> this . receiverAddr = P3 ;  <CR> this . letter = w5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String B5 , String h9 , String I1 , String u , String F7 ) {  <CR> this . title = B5 ;  <CR> this . receiver = h9 ;  <CR> this . content = I1 ;  <CR> this . sender = u ;  <CR> this . date = F7 ;  <CR> }  <CR> public int compareTo ( Object V9 ) {  <CR> Letter M8 = ( Letter ) V9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String L8 ) {  <CR> int k = 0 ;  <CR> for ( int V7 = 0 ; V7 < L8 . length ( ) ; V7 ++ ) {  <CR> char R1 = L8 . charAt ( V7 ) ;  <CR> k = k * 10 + R1 - '0' ;  <CR> }  <CR> return k ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W8 ) {  <CR> Letter [ ] x9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( x9 ) ;  <CR> for ( int f8 = 0 ; f8 < 3 ; f8 ++ )  <CR> x9 [ f8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 