 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String W1 , String k , String k7 , String l9 , String F8 ) {  <CR> super ( W1 , k , k7 , l9 , F8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String k1 , String T9 , String u9 , String f7 , String T8 ) {  <CR> super ( k1 , T9 , u9 , f7 , T8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String N8 , String C8 , Letter o8 ) {  <CR> this . senderAddr = N8 ;  <CR> this . receiverAddr = C8 ;  <CR> this . letter = o8 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String q5 , String C0 , String f6 , String I , String P3 ) {  <CR> this . title = q5 ;  <CR> this . receiver = C0 ;  <CR> this . content = f6 ;  <CR> this . sender = I ;  <CR> this . date = P3 ;  <CR> }  <CR> int valueOf ( String r0 ) {  <CR> int x = 0 ;  <CR> for ( int h7 = 0 ; h7 < r0 . length ( ) ; h7 ++ ) {  <CR> char b5 = r0 . charAt ( h7 ) ;  <CR> x = x * 10 + b5 - '0' ;  <CR> }  <CR> return x ;  <CR> }  <CR> public int compareTo ( Object E1 ) {  <CR> Letter c1 = ( Letter ) E1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] f0 ) {  <CR> Letter [ ] X = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( X ) ;  <CR> for ( int C2 = 0 ; C2 < 3 ; C2 ++ )  <CR> X [ C2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 