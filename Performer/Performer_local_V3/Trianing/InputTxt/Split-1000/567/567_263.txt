 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e0 , String P6 , String I1 , String C8 , String r7 ) {  <CR> super ( e0 , P6 , I1 , C8 , r7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String N0 , String k5 , String B4 , String f9 , String l6 ) {  <CR> super ( N0 , k5 , B4 , f9 , l6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String T0 , String G2 , Letter L5 ) {  <CR> this . senderAddr = T0 ;  <CR> this . receiverAddr = G2 ;  <CR> this . letter = L5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String H0 ) {  <CR> int Q = 0 ;  <CR> for ( int p2 = 0 ; p2 < H0 . length ( ) ; p2 ++ ) {  <CR> char I6 = H0 . charAt ( p2 ) ;  <CR> Q = Q * 10 + I6 - '0' ;  <CR> }  <CR> return Q ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String b7 , String u4 , String R0 , String r9 , String I ) {  <CR> this . title = b7 ;  <CR> this . receiver = u4 ;  <CR> this . content = R0 ;  <CR> this . sender = r9 ;  <CR> this . date = I ;  <CR> }  <CR> public int compareTo ( Object A9 ) {  <CR> Letter u5 = ( Letter ) A9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] k1 ) {  <CR> Letter [ ] L6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L6 ) ;  <CR> for ( int F1 = 0 ; F1 < 3 ; F1 ++ )  <CR> L6 [ F1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 