 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String a1 , String v7 , String s , String H9 , String x4 ) {  <CR> super ( a1 , v7 , s , H9 , x4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String S4 , String K1 , String B1 , String m2 , String s2 ) {  <CR> super ( S4 , K1 , B1 , m2 , s2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String L4 , String V2 , Letter J3 ) {  <CR> this . senderAddr = L4 ;  <CR> this . receiverAddr = V2 ;  <CR> this . letter = J3 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String u3 ) {  <CR> int D6 = 0 ;  <CR> for ( int g6 = 0 ; g6 < u3 . length ( ) ; g6 ++ ) {  <CR> char d1 = u3 . charAt ( g6 ) ;  <CR> D6 = D6 * 10 + d1 - '0' ;  <CR> }  <CR> return D6 ;  <CR> }  <CR> Letter ( String S5 , String a6 , String E4 , String a8 , String b7 ) {  <CR> this . title = S5 ;  <CR> this . receiver = a6 ;  <CR> this . content = E4 ;  <CR> this . sender = a8 ;  <CR> this . date = b7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object N7 ) {  <CR> Letter R = ( Letter ) N7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Y4 ) {  <CR> Letter [ ] B5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( B5 ) ;  <CR> for ( int a5 = 0 ; a5 < 3 ; a5 ++ )  <CR> B5 [ a5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 