 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e9 , String y3 , String T6 , String k7 , String o2 ) {  <CR> super ( e9 , y3 , T6 , k7 , o2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String F3 , String n1 , String W4 , String G6 , String R9 ) {  <CR> super ( F3 , n1 , W4 , G6 , R9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String d5 , String z9 , Letter E8 ) {  <CR> this . senderAddr = d5 ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = E8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object U3 ) {  <CR> Letter p0 = ( Letter ) U3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String N2 ) {  <CR> int H1 = 0 ;  <CR> for ( int z = 0 ; z < N2 . length ( ) ; z ++ ) {  <CR> char j6 = N2 . charAt ( z ) ;  <CR> H1 = H1 * 10 + j6 - '0' ;  <CR> }  <CR> return H1 ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String w5 , String e8 , String n8 , String r2 , String x6 ) {  <CR> this . title = w5 ;  <CR> this . receiver = e8 ;  <CR> this . content = n8 ;  <CR> this . sender = r2 ;  <CR> this . date = x6 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W7 ) {  <CR> Letter [ ] i7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( i7 ) ;  <CR> for ( int r1 = 0 ; r1 < 3 ; r1 ++ )  <CR> i7 [ r1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 