 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W9 , String h8 , String p3 , String X9 , String s3 ) {  <CR> super ( W9 , h8 , p3 , X9 , s3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O2 , String a3 , String J3 , String D5 , String G8 ) {  <CR> super ( O2 , a3 , J3 , D5 , G8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String K9 , String y , Letter l2 ) {  <CR> this . senderAddr = K9 ;  <CR> this . receiverAddr = y ;  <CR> this . letter = l2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String R1 ) {  <CR> int T0 = 0 ;  <CR> for ( int U3 = 0 ; U3 < R1 . length ( ) ; U3 ++ ) {  <CR> char x9 = R1 . charAt ( U3 ) ;  <CR> T0 = T0 * 10 + x9 - '0' ;  <CR> }  <CR> return T0 ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String D6 , String P5 , String S4 , String e4 , String I2 ) {  <CR> this . title = D6 ;  <CR> this . receiver = P5 ;  <CR> this . content = S4 ;  <CR> this . sender = e4 ;  <CR> this . date = I2 ;  <CR> }  <CR> public int compareTo ( Object N3 ) {  <CR> Letter L9 = ( Letter ) N3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] C ) {  <CR> Letter [ ] C0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C0 ) ;  <CR> for ( int F2 = 0 ; F2 < 3 ; F2 ++ )  <CR> C0 [ F2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 