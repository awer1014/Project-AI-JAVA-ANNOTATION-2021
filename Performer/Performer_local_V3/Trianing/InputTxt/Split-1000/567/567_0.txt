 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String N2 , String c8 , String X6 , String G7 , String E6 ) {  <CR> super ( N2 , c8 , X6 , G7 , E6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String b1 , String y5 , String e3 , String n0 , String b6 ) {  <CR> super ( b1 , y5 , e3 , n0 , b6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String p3 , String B0 , Letter c3 ) {  <CR> this . senderAddr = p3 ;  <CR> this . receiverAddr = B0 ;  <CR> this . letter = c3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object b3 ) {  <CR> Letter l9 = ( Letter ) b3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String J2 , String W4 , String d3 , String o2 , String g1 ) {  <CR> this . title = J2 ;  <CR> this . receiver = W4 ;  <CR> this . content = d3 ;  <CR> this . sender = o2 ;  <CR> this . date = g1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> int valueOf ( String g7 ) {  <CR> int E3 = 0 ;  <CR> for ( int F1 = 0 ; F1 < g7 . length ( ) ; F1 ++ ) {  <CR> char O7 = g7 . charAt ( F1 ) ;  <CR> E3 = E3 * 10 + O7 - '0' ;  <CR> }  <CR> return E3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] E0 ) {  <CR> Letter [ ] L = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L ) ;  <CR> for ( int K8 = 0 ; K8 < 3 ; K8 ++ )  <CR> L [ K8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 