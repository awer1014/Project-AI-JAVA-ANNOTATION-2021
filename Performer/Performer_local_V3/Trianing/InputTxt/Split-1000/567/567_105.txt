 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String L7 , String q4 , String w3 , String Q4 , String M7 ) {  <CR> super ( L7 , q4 , w3 , Q4 , M7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String J0 , String H5 , String s9 , String x2 , String x9 ) {  <CR> super ( J0 , H5 , s9 , x2 , x9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String Y4 , String C7 , Letter G9 ) {  <CR> this . senderAddr = Y4 ;  <CR> this . receiverAddr = C7 ;  <CR> this . letter = G9 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object C5 ) {  <CR> Letter m5 = ( Letter ) C5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String v2 ) {  <CR> int B2 = 0 ;  <CR> for ( int T6 = 0 ; T6 < v2 . length ( ) ; T6 ++ ) {  <CR> char W3 = v2 . charAt ( T6 ) ;  <CR> B2 = B2 * 10 + W3 - '0' ;  <CR> }  <CR> return B2 ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String I4 , String l6 , String u0 , String o6 , String P5 ) {  <CR> this . title = I4 ;  <CR> this . receiver = l6 ;  <CR> this . content = u0 ;  <CR> this . sender = o6 ;  <CR> this . date = P5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] V7 ) {  <CR> Letter [ ] L3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L3 ) ;  <CR> for ( int i8 = 0 ; i8 < 3 ; i8 ++ )  <CR> L3 [ i8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 