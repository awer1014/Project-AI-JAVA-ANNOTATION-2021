 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String V2 , String J0 , String s2 , String q7 , String S2 ) {  <CR> super ( V2 , J0 , s2 , q7 , S2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String R , String Z3 , String m1 , String O , String k8 ) {  <CR> super ( R , Z3 , m1 , O , k8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String I3 , String i2 , Letter B8 ) {  <CR> this . senderAddr = I3 ;  <CR> this . receiverAddr = i2 ;  <CR> this . letter = B8 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String U2 ) {  <CR> int J4 = 0 ;  <CR> for ( int e7 = 0 ; e7 < U2 . length ( ) ; e7 ++ ) {  <CR> char u5 = U2 . charAt ( e7 ) ;  <CR> J4 = J4 * 10 + u5 - '0' ;  <CR> }  <CR> return J4 ;  <CR> }  <CR> Letter ( String D , String H0 , String n4 , String T7 , String V1 ) {  <CR> this . title = D ;  <CR> this . receiver = H0 ;  <CR> this . content = n4 ;  <CR> this . sender = T7 ;  <CR> this . date = V1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object v9 ) {  <CR> Letter Q6 = ( Letter ) v9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] i7 ) {  <CR> Letter [ ] H2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( H2 ) ;  <CR> for ( int h5 = 0 ; h5 < 3 ; h5 ++ )  <CR> H2 [ h5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 