 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String i , String e9 , String I8 , String Q3 , String D ) {  <CR> super ( i , e9 , I8 , Q3 , D ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String U2 , String l9 , String O8 , String S6 , String s0 ) {  <CR> super ( U2 , l9 , O8 , S6 , s0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String K5 , String T7 , Letter I0 ) {  <CR> this . senderAddr = K5 ;  <CR> this . receiverAddr = T7 ;  <CR> this . letter = I0 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String T7 ) {  <CR> int e9 = 0 ;  <CR> for ( int o5 = 0 ; o5 < T7 . length ( ) ; o5 ++ ) {  <CR> char P2 = T7 . charAt ( o5 ) ;  <CR> e9 = e9 * 10 + P2 - '0' ;  <CR> }  <CR> return e9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object A1 ) {  <CR> Letter V0 = ( Letter ) A1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String u , String m3 , String a0 , String j9 , String B2 ) {  <CR> this . title = u ;  <CR> this . receiver = m3 ;  <CR> this . content = a0 ;  <CR> this . sender = j9 ;  <CR> this . date = B2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W9 ) {  <CR> Letter [ ] p1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( p1 ) ;  <CR> for ( int l5 = 0 ; l5 < 3 ; l5 ++ )  <CR> p1 [ l5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 