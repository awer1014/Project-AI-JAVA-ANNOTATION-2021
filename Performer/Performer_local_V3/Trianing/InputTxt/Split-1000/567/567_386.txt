 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String m4 , String F2 , String m9 , String J2 , String x6 ) {  <CR> super ( m4 , F2 , m9 , J2 , x6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String P6 , String U6 , String h8 , String B6 , String N3 ) {  <CR> super ( P6 , U6 , h8 , B6 , N3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String k , String X9 , Letter s3 ) {  <CR> this . senderAddr = k ;  <CR> this . receiverAddr = X9 ;  <CR> this . letter = s3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String G7 , String F2 , String g8 , String H5 , String o ) {  <CR> this . title = G7 ;  <CR> this . receiver = F2 ;  <CR> this . content = g8 ;  <CR> this . sender = H5 ;  <CR> this . date = o ;  <CR> }  <CR> public int compareTo ( Object T1 ) {  <CR> Letter T5 = ( Letter ) T1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String L0 ) {  <CR> int n0 = 0 ;  <CR> for ( int S6 = 0 ; S6 < L0 . length ( ) ; S6 ++ ) {  <CR> char o9 = L0 . charAt ( S6 ) ;  <CR> n0 = n0 * 10 + o9 - '0' ;  <CR> }  <CR> return n0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] a3 ) {  <CR> Letter [ ] w1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( w1 ) ;  <CR> for ( int P9 = 0 ; P9 < 3 ; P9 ++ )  <CR> w1 [ P9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 