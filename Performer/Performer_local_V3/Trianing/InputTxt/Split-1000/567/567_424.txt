 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e7 , String S3 , String k6 , String L5 , String w7 ) {  <CR> super ( e7 , S3 , k6 , L5 , w7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String P6 , String y3 , String G9 , String R2 , String O4 ) {  <CR> super ( P6 , y3 , G9 , R2 , O4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String k , String C4 , Letter v ) {  <CR> this . senderAddr = k ;  <CR> this . receiverAddr = C4 ;  <CR> this . letter = v ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object t4 ) {  <CR> Letter k0 = ( Letter ) t4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> int valueOf ( String C3 ) {  <CR> int p = 0 ;  <CR> for ( int e7 = 0 ; e7 < C3 . length ( ) ; e7 ++ ) {  <CR> char S9 = C3 . charAt ( e7 ) ;  <CR> p = p * 10 + S9 - '0' ;  <CR> }  <CR> return p ;  <CR> }  <CR> Letter ( String O1 , String j0 , String n2 , String g9 , String p2 ) {  <CR> this . title = O1 ;  <CR> this . receiver = j0 ;  <CR> this . content = n2 ;  <CR> this . sender = g9 ;  <CR> this . date = p2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d1 ) {  <CR> Letter [ ] u6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u6 ) ;  <CR> for ( int y7 = 0 ; y7 < 3 ; y7 ++ )  <CR> u6 [ y7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 