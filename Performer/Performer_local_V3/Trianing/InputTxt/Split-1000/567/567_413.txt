 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String j7 , String e5 , String T0 , String A8 , String C6 ) {  <CR> super ( j7 , e5 , T0 , A8 , C6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String l2 , String Q0 , String N3 , String s , String R5 ) {  <CR> super ( l2 , Q0 , N3 , s , R5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String j5 , String N2 , Letter y3 ) {  <CR> this . senderAddr = j5 ;  <CR> this . receiverAddr = N2 ;  <CR> this . letter = y3 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String L8 , String x0 , String j3 , String V5 , String V6 ) {  <CR> this . title = L8 ;  <CR> this . receiver = x0 ;  <CR> this . content = j3 ;  <CR> this . sender = V5 ;  <CR> this . date = V6 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String j2 ) {  <CR> int Q3 = 0 ;  <CR> for ( int l9 = 0 ; l9 < j2 . length ( ) ; l9 ++ ) {  <CR> char E6 = j2 . charAt ( l9 ) ;  <CR> Q3 = Q3 * 10 + E6 - '0' ;  <CR> }  <CR> return Q3 ;  <CR> }  <CR> public int compareTo ( Object P ) {  <CR> Letter x = ( Letter ) P ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] f2 ) {  <CR> Letter [ ] w8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( w8 ) ;  <CR> for ( int A0 = 0 ; A0 < 3 ; A0 ++ )  <CR> w8 [ A0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 