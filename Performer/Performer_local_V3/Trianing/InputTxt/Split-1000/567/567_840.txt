 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R2 , String V3 , String i3 , String i4 , String k9 ) {  <CR> super ( R2 , V3 , i3 , i4 , k9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String t2 , String l8 , String I7 , String f3 , String D6 ) {  <CR> super ( t2 , l8 , I7 , f3 , D6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String a9 , String k9 , Letter k2 ) {  <CR> this . senderAddr = a9 ;  <CR> this . receiverAddr = k9 ;  <CR> this . letter = k2 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String a2 ) {  <CR> int Q3 = 0 ;  <CR> for ( int P4 = 0 ; P4 < a2 . length ( ) ; P4 ++ ) {  <CR> char q2 = a2 . charAt ( P4 ) ;  <CR> Q3 = Q3 * 10 + q2 - '0' ;  <CR> }  <CR> return Q3 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String t0 , String m7 , String B6 , String G4 , String V8 ) {  <CR> this . title = t0 ;  <CR> this . receiver = m7 ;  <CR> this . content = B6 ;  <CR> this . sender = G4 ;  <CR> this . date = V8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object c5 ) {  <CR> Letter n5 = ( Letter ) c5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o9 ) {  <CR> Letter [ ] Z2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z2 ) ;  <CR> for ( int p = 0 ; p < 3 ; p ++ )  <CR> Z2 [ p ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 