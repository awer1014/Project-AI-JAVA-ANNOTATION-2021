 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String s7 , String B2 , String c2 , String r , String n4 ) {  <CR> super ( s7 , B2 , c2 , r , n4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String j4 , String F8 , String p6 , String i8 , String S1 ) {  <CR> super ( j4 , F8 , p6 , i8 , S1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String Q5 , String J6 , Letter i5 ) {  <CR> this . senderAddr = Q5 ;  <CR> this . receiverAddr = J6 ;  <CR> this . letter = i5 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String M6 ) {  <CR> int Y2 = 0 ;  <CR> for ( int a4 = 0 ; a4 < M6 . length ( ) ; a4 ++ ) {  <CR> char C4 = M6 . charAt ( a4 ) ;  <CR> Y2 = Y2 * 10 + C4 - '0' ;  <CR> }  <CR> return Y2 ;  <CR> }  <CR> public int compareTo ( Object Q0 ) {  <CR> Letter V4 = ( Letter ) Q0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String G2 , String R3 , String R1 , String r8 , String C5 ) {  <CR> this . title = G2 ;  <CR> this . receiver = R3 ;  <CR> this . content = R1 ;  <CR> this . sender = r8 ;  <CR> this . date = C5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] N2 ) {  <CR> Letter [ ] a4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a4 ) ;  <CR> for ( int N5 = 0 ; N5 < 3 ; N5 ++ )  <CR> a4 [ N5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 