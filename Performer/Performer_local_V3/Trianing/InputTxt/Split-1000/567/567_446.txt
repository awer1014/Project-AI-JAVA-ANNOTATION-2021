 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I7 , String R2 , String L4 , String x5 , String l7 ) {  <CR> super ( I7 , R2 , L4 , x5 , l7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Y , String B , String l5 , String U2 , String W0 ) {  <CR> super ( Y , B , l5 , U2 , W0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String w0 , String L1 , Letter m1 ) {  <CR> this . senderAddr = w0 ;  <CR> this . receiverAddr = L1 ;  <CR> this . letter = m1 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object z9 ) {  <CR> Letter V5 = ( Letter ) z9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String e3 ) {  <CR> int C8 = 0 ;  <CR> for ( int w3 = 0 ; w3 < e3 . length ( ) ; w3 ++ ) {  <CR> char b8 = e3 . charAt ( w3 ) ;  <CR> C8 = C8 * 10 + b8 - '0' ;  <CR> }  <CR> return C8 ;  <CR> }  <CR> Letter ( String c0 , String r9 , String g5 , String h4 , String D2 ) {  <CR> this . title = c0 ;  <CR> this . receiver = r9 ;  <CR> this . content = g5 ;  <CR> this . sender = h4 ;  <CR> this . date = D2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] j7 ) {  <CR> Letter [ ] f5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( f5 ) ;  <CR> for ( int k7 = 0 ; k7 < 3 ; k7 ++ )  <CR> f5 [ k7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 