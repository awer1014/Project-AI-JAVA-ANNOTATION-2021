 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I5 , String T0 , String O9 , String W3 , String B4 ) {  <CR> super ( I5 , T0 , O9 , W3 , B4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Q0 , String D5 , String S0 , String e5 , String f4 ) {  <CR> super ( Q0 , D5 , S0 , e5 , f4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String k , String x0 , Letter V ) {  <CR> this . senderAddr = k ;  <CR> this . receiverAddr = x0 ;  <CR> this . letter = V ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String l6 ) {  <CR> int c7 = 0 ;  <CR> for ( int L8 = 0 ; L8 < l6 . length ( ) ; L8 ++ ) {  <CR> char f8 = l6 . charAt ( L8 ) ;  <CR> c7 = c7 * 10 + f8 - '0' ;  <CR> }  <CR> return c7 ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String F9 , String w7 , String z8 , String M9 , String F8 ) {  <CR> this . title = F9 ;  <CR> this . receiver = w7 ;  <CR> this . content = z8 ;  <CR> this . sender = M9 ;  <CR> this . date = F8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object S1 ) {  <CR> Letter h4 = ( Letter ) S1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] V2 ) {  <CR> Letter [ ] A5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( A5 ) ;  <CR> for ( int r0 = 0 ; r0 < 3 ; r0 ++ )  <CR> A5 [ r0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 