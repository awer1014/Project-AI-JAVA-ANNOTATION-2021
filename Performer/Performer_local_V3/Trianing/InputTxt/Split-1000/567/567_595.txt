 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l0 , String U8 , String w3 , String j1 , String S8 ) {  <CR> super ( l0 , U8 , w3 , j1 , S8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String J9 , String n5 , String c4 , String S0 , String e6 ) {  <CR> super ( J9 , n5 , c4 , S0 , e6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String v2 , String w3 , Letter L4 ) {  <CR> this . senderAddr = v2 ;  <CR> this . receiverAddr = w3 ;  <CR> this . letter = L4 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String A9 ) {  <CR> int w1 = 0 ;  <CR> for ( int r6 = 0 ; r6 < A9 . length ( ) ; r6 ++ ) {  <CR> char c7 = A9 . charAt ( r6 ) ;  <CR> w1 = w1 * 10 + c7 - '0' ;  <CR> }  <CR> return w1 ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object X0 ) {  <CR> Letter O4 = ( Letter ) X0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String y0 , String W4 , String C3 , String e8 , String g6 ) {  <CR> this . title = y0 ;  <CR> this . receiver = W4 ;  <CR> this . content = C3 ;  <CR> this . sender = e8 ;  <CR> this . date = g6 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b6 ) {  <CR> Letter [ ] Y1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y1 ) ;  <CR> for ( int K7 = 0 ; K7 < 3 ; K7 ++ )  <CR> Y1 [ K7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 