 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u , String h0 , String q2 , String D0 , String y9 ) {  <CR> super ( u , h0 , q2 , D0 , y9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String A2 , String b0 , String A , String S2 , String v9 ) {  <CR> super ( A2 , b0 , A , S2 , v9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String A , String w2 , Letter s1 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = w2 ;  <CR> this . letter = s1 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object o9 ) {  <CR> Letter U2 = ( Letter ) o9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String W0 ) {  <CR> int Q1 = 0 ;  <CR> for ( int y8 = 0 ; y8 < W0 . length ( ) ; y8 ++ ) {  <CR> char u5 = W0 . charAt ( y8 ) ;  <CR> Q1 = Q1 * 10 + u5 - '0' ;  <CR> }  <CR> return Q1 ;  <CR> }  <CR> Letter ( String b1 , String G2 , String W9 , String d6 , String A3 ) {  <CR> this . title = b1 ;  <CR> this . receiver = G2 ;  <CR> this . content = W9 ;  <CR> this . sender = d6 ;  <CR> this . date = A3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] y5 ) {  <CR> Letter [ ] I3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I3 ) ;  <CR> for ( int d7 = 0 ; d7 < 3 ; d7 ++ )  <CR> I3 [ d7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 