 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z0 , String k3 , String g6 , String v3 , String Y7 ) {  <CR> super ( Z0 , k3 , g6 , v3 , Y7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String y7 , String V1 , String T5 , String M , String J4 ) {  <CR> super ( y7 , V1 , T5 , M , J4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String D7 , String H2 , Letter h5 ) {  <CR> this . senderAddr = D7 ;  <CR> this . receiverAddr = H2 ;  <CR> this . letter = h5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String x7 , String v2 , String k5 , String u5 , String l5 ) {  <CR> this . title = x7 ;  <CR> this . receiver = v2 ;  <CR> this . content = k5 ;  <CR> this . sender = u5 ;  <CR> this . date = l5 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String h2 ) {  <CR> int c2 = 0 ;  <CR> for ( int P2 = 0 ; P2 < h2 . length ( ) ; P2 ++ ) {  <CR> char y0 = h2 . charAt ( P2 ) ;  <CR> c2 = c2 * 10 + y0 - '0' ;  <CR> }  <CR> return c2 ;  <CR> }  <CR> public int compareTo ( Object U0 ) {  <CR> Letter b5 = ( Letter ) U0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] q3 ) {  <CR> Letter [ ] h0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h0 ) ;  <CR> for ( int G7 = 0 ; G7 < 3 ; G7 ++ )  <CR> h0 [ G7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 