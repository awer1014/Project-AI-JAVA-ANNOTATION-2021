 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String g8 , String c9 , String c7 , String K7 , String f7 ) {  <CR> super ( g8 , c9 , c7 , K7 , f7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String J3 , String T4 , String U5 , String g5 , String S9 ) {  <CR> super ( J3 , T4 , U5 , g5 , S9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String y0 , String u6 , Letter d1 ) {  <CR> this . senderAddr = y0 ;  <CR> this . receiverAddr = u6 ;  <CR> this . letter = d1 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String T8 , String E2 , String K4 , String G5 , String F0 ) {  <CR> this . title = T8 ;  <CR> this . receiver = E2 ;  <CR> this . content = K4 ;  <CR> this . sender = G5 ;  <CR> this . date = F0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String J5 ) {  <CR> int j9 = 0 ;  <CR> for ( int q3 = 0 ; q3 < J5 . length ( ) ; q3 ++ ) {  <CR> char X4 = J5 . charAt ( q3 ) ;  <CR> j9 = j9 * 10 + X4 - '0' ;  <CR> }  <CR> return j9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object o4 ) {  <CR> Letter V4 = ( Letter ) o4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] m7 ) {  <CR> Letter [ ] d1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( d1 ) ;  <CR> for ( int P9 = 0 ; P9 < 3 ; P9 ++ )  <CR> d1 [ P9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 