 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String R1 , String u6 , String W0 , String L6 , String d1 ) {  <CR> super ( R1 , u6 , W0 , L6 , d1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String q4 , String c8 , String d1 , String n6 , String z5 ) {  <CR> super ( q4 , c8 , d1 , n6 , z5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String b3 , String b1 , Letter j5 ) {  <CR> this . senderAddr = b3 ;  <CR> this . receiverAddr = b1 ;  <CR> this . letter = j5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String b6 ) {  <CR> int p7 = 0 ;  <CR> for ( int u8 = 0 ; u8 < b6 . length ( ) ; u8 ++ ) {  <CR> char s2 = b6 . charAt ( u8 ) ;  <CR> p7 = p7 * 10 + s2 - '0' ;  <CR> }  <CR> return p7 ;  <CR> }  <CR> public int compareTo ( Object O0 ) {  <CR> Letter k5 = ( Letter ) O0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String Q2 , String v7 , String S0 , String X4 , String k8 ) {  <CR> this . title = Q2 ;  <CR> this . receiver = v7 ;  <CR> this . content = S0 ;  <CR> this . sender = X4 ;  <CR> this . date = k8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] p5 ) {  <CR> Letter [ ] T7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( T7 ) ;  <CR> for ( int K6 = 0 ; K6 < 3 ; K6 ++ )  <CR> T7 [ K6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 