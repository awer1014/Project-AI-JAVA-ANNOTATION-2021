 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u3 , String C1 , String w5 , String H3 , String Z0 ) {  <CR> super ( u3 , C1 , w5 , H3 , Z0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String O7 , String Q , String e8 , String o3 , String N1 ) {  <CR> super ( O7 , Q , e8 , o3 , N1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String p3 , String b4 , Letter N5 ) {  <CR> this . senderAddr = p3 ;  <CR> this . receiverAddr = b4 ;  <CR> this . letter = N5 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String P1 , String B2 , String H0 , String d8 , String g4 ) {  <CR> this . title = P1 ;  <CR> this . receiver = B2 ;  <CR> this . content = H0 ;  <CR> this . sender = d8 ;  <CR> this . date = g4 ;  <CR> }  <CR> public int compareTo ( Object h1 ) {  <CR> Letter W5 = ( Letter ) h1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String y9 ) {  <CR> int Z8 = 0 ;  <CR> for ( int N0 = 0 ; N0 < y9 . length ( ) ; N0 ++ ) {  <CR> char J = y9 . charAt ( N0 ) ;  <CR> Z8 = Z8 * 10 + J - '0' ;  <CR> }  <CR> return Z8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] u6 ) {  <CR> Letter [ ] R0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( R0 ) ;  <CR> for ( int q6 = 0 ; q6 < 3 ; q6 ++ )  <CR> R0 [ q6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 