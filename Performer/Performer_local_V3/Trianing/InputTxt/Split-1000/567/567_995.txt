 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String O1 , String i2 , String l3 , String s6 , String V3 ) {  <CR> super ( O1 , i2 , l3 , s6 , V3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String P4 , String e3 , String m9 , String S4 , String J9 ) {  <CR> super ( P4 , e3 , m9 , S4 , J9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String A3 , String s5 , Letter h8 ) {  <CR> this . senderAddr = A3 ;  <CR> this . receiverAddr = s5 ;  <CR> this . letter = h8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object w8 ) {  <CR> Letter h9 = ( Letter ) w8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String k7 , String L9 , String M4 , String o5 , String T3 ) {  <CR> this . title = k7 ;  <CR> this . receiver = L9 ;  <CR> this . content = M4 ;  <CR> this . sender = o5 ;  <CR> this . date = T3 ;  <CR> }  <CR> int valueOf ( String p1 ) {  <CR> int H1 = 0 ;  <CR> for ( int m8 = 0 ; m8 < p1 . length ( ) ; m8 ++ ) {  <CR> char c9 = p1 . charAt ( m8 ) ;  <CR> H1 = H1 * 10 + c9 - '0' ;  <CR> }  <CR> return H1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n ) {  <CR> Letter [ ] Q5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q5 ) ;  <CR> for ( int Z6 = 0 ; Z6 < 3 ; Z6 ++ )  <CR> Q5 [ Z6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 