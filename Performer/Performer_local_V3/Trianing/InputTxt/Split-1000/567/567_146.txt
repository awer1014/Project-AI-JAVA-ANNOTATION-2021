 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o0 , String N0 , String l5 , String U7 , String m3 ) {  <CR> super ( o0 , N0 , l5 , U7 , m3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String w3 , String F5 , String P3 , String y2 , String q5 ) {  <CR> super ( w3 , F5 , P3 , y2 , q5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String u8 , String C0 , Letter p5 ) {  <CR> this . senderAddr = u8 ;  <CR> this . receiverAddr = C0 ;  <CR> this . letter = p5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String V8 ) {  <CR> int e2 = 0 ;  <CR> for ( int L4 = 0 ; L4 < V8 . length ( ) ; L4 ++ ) {  <CR> char d0 = V8 . charAt ( L4 ) ;  <CR> e2 = e2 * 10 + d0 - '0' ;  <CR> }  <CR> return e2 ;  <CR> }  <CR> Letter ( String T , String Y3 , String l7 , String J9 , String l1 ) {  <CR> this . title = T ;  <CR> this . receiver = Y3 ;  <CR> this . content = l7 ;  <CR> this . sender = J9 ;  <CR> this . date = l1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object K0 ) {  <CR> Letter E8 = ( Letter ) K0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] O4 ) {  <CR> Letter [ ] J6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( J6 ) ;  <CR> for ( int H0 = 0 ; H0 < 3 ; H0 ++ )  <CR> J6 [ H0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 