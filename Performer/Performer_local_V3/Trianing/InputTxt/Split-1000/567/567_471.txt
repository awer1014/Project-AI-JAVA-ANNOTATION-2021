 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String T4 , String u3 , String A0 , String A4 , String k2 ) {  <CR> super ( T4 , u3 , A0 , A4 , k2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String x , String X2 , String q5 , String J7 , String X ) {  <CR> super ( x , X2 , q5 , J7 , X ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String c8 , String q3 , Letter m8 ) {  <CR> this . senderAddr = c8 ;  <CR> this . receiverAddr = q3 ;  <CR> this . letter = m8 ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String Y7 ) {  <CR> int k6 = 0 ;  <CR> for ( int B7 = 0 ; B7 < Y7 . length ( ) ; B7 ++ ) {  <CR> char m6 = Y7 . charAt ( B7 ) ;  <CR> k6 = k6 * 10 + m6 - '0' ;  <CR> }  <CR> return k6 ;  <CR> }  <CR> Letter ( String X6 , String r0 , String q3 , String S7 , String k0 ) {  <CR> this . title = X6 ;  <CR> this . receiver = r0 ;  <CR> this . content = q3 ;  <CR> this . sender = S7 ;  <CR> this . date = k0 ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object H8 ) {  <CR> Letter o3 = ( Letter ) H8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Y6 ) {  <CR> Letter [ ] P7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P7 ) ;  <CR> for ( int y3 = 0 ; y3 < 3 ; y3 ++ )  <CR> P7 [ y3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 