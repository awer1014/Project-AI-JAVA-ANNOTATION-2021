 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String D4 , String h1 , String y0 , String n1 , String R1 ) {  <CR> super ( D4 , h1 , y0 , n1 , R1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String w5 , String y6 , String B , String x7 , String S7 ) {  <CR> super ( w5 , y6 , B , x7 , S7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String l2 , String u9 , Letter d5 ) {  <CR> this . senderAddr = l2 ;  <CR> this . receiverAddr = u9 ;  <CR> this . letter = d5 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String Y3 , String R , String K8 , String u0 , String E4 ) {  <CR> this . title = Y3 ;  <CR> this . receiver = R ;  <CR> this . content = K8 ;  <CR> this . sender = u0 ;  <CR> this . date = E4 ;  <CR> }  <CR> int valueOf ( String X3 ) {  <CR> int G8 = 0 ;  <CR> for ( int T8 = 0 ; T8 < X3 . length ( ) ; T8 ++ ) {  <CR> char I2 = X3 . charAt ( T8 ) ;  <CR> G8 = G8 * 10 + I2 - '0' ;  <CR> }  <CR> return G8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object H6 ) {  <CR> Letter a9 = ( Letter ) H6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] N6 ) {  <CR> Letter [ ] p3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( p3 ) ;  <CR> for ( int t9 = 0 ; t9 < 3 ; t9 ++ )  <CR> p3 [ t9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 