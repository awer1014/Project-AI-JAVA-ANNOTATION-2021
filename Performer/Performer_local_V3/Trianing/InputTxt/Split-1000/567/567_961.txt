 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String U1 , String D3 , String b5 , String V9 , String H2 ) {  <CR> super ( U1 , D3 , b5 , V9 , H2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String F1 , String A8 , String e3 , String k9 , String J7 ) {  <CR> super ( F1 , A8 , e3 , k9 , J7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String n1 , String D5 , Letter S3 ) {  <CR> this . senderAddr = n1 ;  <CR> this . receiverAddr = D5 ;  <CR> this . letter = S3 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object t5 ) {  <CR> Letter c9 = ( Letter ) t5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String p5 , String N0 , String Z0 , String j1 , String V0 ) {  <CR> this . title = p5 ;  <CR> this . receiver = N0 ;  <CR> this . content = Z0 ;  <CR> this . sender = j1 ;  <CR> this . date = V0 ;  <CR> }  <CR> int valueOf ( String b8 ) {  <CR> int l5 = 0 ;  <CR> for ( int U4 = 0 ; U4 < b8 . length ( ) ; U4 ++ ) {  <CR> char n5 = b8 . charAt ( U4 ) ;  <CR> l5 = l5 * 10 + n5 - '0' ;  <CR> }  <CR> return l5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g3 ) {  <CR> Letter [ ] W1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( W1 ) ;  <CR> for ( int t = 0 ; t < 3 ; t ++ )  <CR> W1 [ t ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 