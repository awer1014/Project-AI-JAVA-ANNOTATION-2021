 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I0 , String m4 , String w4 , String D9 , String H3 ) {  <CR> super ( I0 , m4 , w4 , D9 , H3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o7 , String i2 , String U1 , String v6 , String r9 ) {  <CR> super ( o7 , i2 , U1 , v6 , r9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String K0 , String B1 , Letter H1 ) {  <CR> this . senderAddr = K0 ;  <CR> this . receiverAddr = B1 ;  <CR> this . letter = H1 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String f6 ) {  <CR> int H2 = 0 ;  <CR> for ( int H9 = 0 ; H9 < f6 . length ( ) ; H9 ++ ) {  <CR> char K9 = f6 . charAt ( H9 ) ;  <CR> H2 = H2 * 10 + K9 - '0' ;  <CR> }  <CR> return H2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String w0 , String S2 , String S8 , String u6 , String j9 ) {  <CR> this . title = w0 ;  <CR> this . receiver = S2 ;  <CR> this . content = S8 ;  <CR> this . sender = u6 ;  <CR> this . date = j9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object n1 ) {  <CR> Letter B3 = ( Letter ) n1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d1 ) {  <CR> Letter [ ] r9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( r9 ) ;  <CR> for ( int T4 = 0 ; T4 < 3 ; T4 ++ )  <CR> r9 [ T4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 