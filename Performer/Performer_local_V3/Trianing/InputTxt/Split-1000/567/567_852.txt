 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String k4 , String Z2 , String d4 , String g2 , String r4 ) {  <CR> super ( k4 , Z2 , d4 , g2 , r4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L9 , String Q0 , String L4 , String m , String i ) {  <CR> super ( L9 , Q0 , L4 , m , i ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String x5 , String q0 , Letter w0 ) {  <CR> this . senderAddr = x5 ;  <CR> this . receiverAddr = q0 ;  <CR> this . letter = w0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object F8 ) {  <CR> Letter p5 = ( Letter ) F8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String Q4 ) {  <CR> int K2 = 0 ;  <CR> for ( int i8 = 0 ; i8 < Q4 . length ( ) ; i8 ++ ) {  <CR> char y0 = Q4 . charAt ( i8 ) ;  <CR> K2 = K2 * 10 + y0 - '0' ;  <CR> }  <CR> return K2 ;  <CR> }  <CR> Letter ( String H7 , String N7 , String n4 , String X1 , String P7 ) {  <CR> this . title = H7 ;  <CR> this . receiver = N7 ;  <CR> this . content = n4 ;  <CR> this . sender = X1 ;  <CR> this . date = P7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] z1 ) {  <CR> Letter [ ] o4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o4 ) ;  <CR> for ( int F5 = 0 ; F5 < 3 ; F5 ++ )  <CR> o4 [ F5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 