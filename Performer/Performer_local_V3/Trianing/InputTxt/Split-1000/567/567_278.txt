 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String t4 , String O2 , String J , String b6 , String Q9 ) {  <CR> super ( t4 , O2 , J , b6 , Q9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String u4 , String f , String e3 , String Q , String w3 ) {  <CR> super ( u4 , f , e3 , Q , w3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String I0 , String L8 , Letter Q3 ) {  <CR> this . senderAddr = I0 ;  <CR> this . receiverAddr = L8 ;  <CR> this . letter = Q3 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String W2 ) {  <CR> int k3 = 0 ;  <CR> for ( int I6 = 0 ; I6 < W2 . length ( ) ; I6 ++ ) {  <CR> char H0 = W2 . charAt ( I6 ) ;  <CR> k3 = k3 * 10 + H0 - '0' ;  <CR> }  <CR> return k3 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String e6 , String b1 , String H8 , String f9 , String x7 ) {  <CR> this . title = e6 ;  <CR> this . receiver = b1 ;  <CR> this . content = H8 ;  <CR> this . sender = f9 ;  <CR> this . date = x7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object G4 ) {  <CR> Letter z6 = ( Letter ) G4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] r ) {  <CR> Letter [ ] Z = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z ) ;  <CR> for ( int d = 0 ; d < 3 ; d ++ )  <CR> Z [ d ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 