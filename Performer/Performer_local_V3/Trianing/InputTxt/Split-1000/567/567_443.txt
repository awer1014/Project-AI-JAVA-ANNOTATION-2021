 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String s1 , String d4 , String U1 , String T8 , String m8 ) {  <CR> super ( s1 , d4 , U1 , T8 , m8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String O4 , String M1 , String Q4 , String Z6 , String q7 ) {  <CR> super ( O4 , M1 , Q4 , Z6 , q7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String s9 , String l , Letter M6 ) {  <CR> this . senderAddr = s9 ;  <CR> this . receiverAddr = l ;  <CR> this . letter = M6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String D4 ) {  <CR> int D8 = 0 ;  <CR> for ( int G = 0 ; G < D4 . length ( ) ; G ++ ) {  <CR> char B5 = D4 . charAt ( G ) ;  <CR> D8 = D8 * 10 + B5 - '0' ;  <CR> }  <CR> return D8 ;  <CR> }  <CR> public int compareTo ( Object f2 ) {  <CR> Letter D = ( Letter ) f2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String F7 , String N1 , String i3 , String z9 , String g1 ) {  <CR> this . title = F7 ;  <CR> this . receiver = N1 ;  <CR> this . content = i3 ;  <CR> this . sender = z9 ;  <CR> this . date = g1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K ) {  <CR> Letter [ ] I7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I7 ) ;  <CR> for ( int S6 = 0 ; S6 < 3 ; S6 ++ )  <CR> I7 [ S6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 