 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String D5 , String f1 , String o1 , String M3 , String l4 ) {  <CR> super ( D5 , f1 , o1 , M3 , l4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Z5 , String j7 , String U5 , String N5 , String y1 ) {  <CR> super ( Z5 , j7 , U5 , N5 , y1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String V7 , String j7 , Letter h0 ) {  <CR> this . senderAddr = V7 ;  <CR> this . receiverAddr = j7 ;  <CR> this . letter = h0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String T1 , String i4 , String v , String X , String J9 ) {  <CR> this . title = T1 ;  <CR> this . receiver = i4 ;  <CR> this . content = v ;  <CR> this . sender = X ;  <CR> this . date = J9 ;  <CR> }  <CR> int valueOf ( String Y8 ) {  <CR> int a0 = 0 ;  <CR> for ( int m = 0 ; m < Y8 . length ( ) ; m ++ ) {  <CR> char z2 = Y8 . charAt ( m ) ;  <CR> a0 = a0 * 10 + z2 - '0' ;  <CR> }  <CR> return a0 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object e7 ) {  <CR> Letter c4 = ( Letter ) e7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] m3 ) {  <CR> Letter [ ] E8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( E8 ) ;  <CR> for ( int G1 = 0 ; G1 < 3 ; G1 ++ )  <CR> E8 [ G1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 