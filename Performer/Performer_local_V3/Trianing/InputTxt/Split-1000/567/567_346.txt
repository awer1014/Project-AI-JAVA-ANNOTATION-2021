 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String d7 , String v1 , String o1 , String X7 , String K7 ) {  <CR> super ( d7 , v1 , o1 , X7 , K7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String Q4 , String P , String U3 , String u5 , String W0 ) {  <CR> super ( Q4 , P , U3 , u5 , W0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String B8 , String T7 , Letter m5 ) {  <CR> this . senderAddr = B8 ;  <CR> this . receiverAddr = T7 ;  <CR> this . letter = m5 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String F5 ) {  <CR> int p5 = 0 ;  <CR> for ( int M = 0 ; M < F5 . length ( ) ; M ++ ) {  <CR> char f1 = F5 . charAt ( M ) ;  <CR> p5 = p5 * 10 + f1 - '0' ;  <CR> }  <CR> return p5 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object P9 ) {  <CR> Letter j1 = ( Letter ) P9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String R7 , String x5 , String k8 , String U6 , String Y6 ) {  <CR> this . title = R7 ;  <CR> this . receiver = x5 ;  <CR> this . content = k8 ;  <CR> this . sender = U6 ;  <CR> this . date = Y6 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] C1 ) {  <CR> Letter [ ] Q4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q4 ) ;  <CR> for ( int j = 0 ; j < 3 ; j ++ )  <CR> Q4 [ j ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 