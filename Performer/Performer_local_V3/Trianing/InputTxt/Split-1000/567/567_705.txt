 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e3 , String b0 , String B1 , String W2 , String q9 ) {  <CR> super ( e3 , b0 , B1 , W2 , q9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String l6 , String d8 , String m0 , String R3 , String I3 ) {  <CR> super ( l6 , d8 , m0 , R3 , I3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String p , String K5 , Letter F ) {  <CR> this . senderAddr = p ;  <CR> this . receiverAddr = K5 ;  <CR> this . letter = F ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String U9 ) {  <CR> int L1 = 0 ;  <CR> for ( int g1 = 0 ; g1 < U9 . length ( ) ; g1 ++ ) {  <CR> char U2 = U9 . charAt ( g1 ) ;  <CR> L1 = L1 * 10 + U2 - '0' ;  <CR> }  <CR> return L1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String O9 , String a3 , String h5 , String V1 , String F7 ) {  <CR> this . title = O9 ;  <CR> this . receiver = a3 ;  <CR> this . content = h5 ;  <CR> this . sender = V1 ;  <CR> this . date = F7 ;  <CR> }  <CR> public int compareTo ( Object N8 ) {  <CR> Letter E0 = ( Letter ) N8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] W0 ) {  <CR> Letter [ ] h1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h1 ) ;  <CR> for ( int w4 = 0 ; w4 < 3 ; w4 ++ )  <CR> h1 [ w4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 