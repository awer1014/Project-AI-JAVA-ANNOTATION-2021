 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String H9 , String O2 , String f5 , String n0 , String K2 ) {  <CR> super ( H9 , O2 , f5 , n0 , K2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String X5 , String C3 , String Y , String r2 , String A9 ) {  <CR> super ( X5 , C3 , Y , r2 , A9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String e7 , String T6 , Letter b0 ) {  <CR> this . senderAddr = e7 ;  <CR> this . receiverAddr = T6 ;  <CR> this . letter = b0 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String I4 ) {  <CR> int e4 = 0 ;  <CR> for ( int t2 = 0 ; t2 < I4 . length ( ) ; t2 ++ ) {  <CR> char V6 = I4 . charAt ( t2 ) ;  <CR> e4 = e4 * 10 + V6 - '0' ;  <CR> }  <CR> return e4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String e3 , String p0 , String Z8 , String g7 , String i ) {  <CR> this . title = e3 ;  <CR> this . receiver = p0 ;  <CR> this . content = Z8 ;  <CR> this . sender = g7 ;  <CR> this . date = i ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object p7 ) {  <CR> Letter d1 = ( Letter ) p7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] u3 ) {  <CR> Letter [ ] i9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( i9 ) ;  <CR> for ( int u0 = 0 ; u0 < 3 ; u0 ++ )  <CR> i9 [ u0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 