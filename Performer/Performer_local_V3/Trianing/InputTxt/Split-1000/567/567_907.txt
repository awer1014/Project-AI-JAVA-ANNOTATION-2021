 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String y3 , String F1 , String T5 , String H3 , String d5 ) {  <CR> super ( y3 , F1 , T5 , H3 , d5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String l8 , String i3 , String F3 , String e6 , String D1 ) {  <CR> super ( l8 , i3 , F3 , e6 , D1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String Q3 , String K6 , Letter E2 ) {  <CR> this . senderAddr = Q3 ;  <CR> this . receiverAddr = K6 ;  <CR> this . letter = E2 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String S6 ) {  <CR> int e3 = 0 ;  <CR> for ( int H = 0 ; H < S6 . length ( ) ; H ++ ) {  <CR> char o1 = S6 . charAt ( H ) ;  <CR> e3 = e3 * 10 + o1 - '0' ;  <CR> }  <CR> return e3 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String t , String S5 , String x7 , String b1 , String K7 ) {  <CR> this . title = t ;  <CR> this . receiver = S5 ;  <CR> this . content = x7 ;  <CR> this . sender = b1 ;  <CR> this . date = K7 ;  <CR> }  <CR> public int compareTo ( Object Z4 ) {  <CR> Letter P2 = ( Letter ) Z4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] p2 ) {  <CR> Letter [ ] Y4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y4 ) ;  <CR> for ( int w7 = 0 ; w7 < 3 ; w7 ++ )  <CR> Y4 [ w7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 