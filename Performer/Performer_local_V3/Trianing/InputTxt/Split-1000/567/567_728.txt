 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String t3 , String L2 , String R8 , String Z4 , String q8 ) {  <CR> super ( t3 , L2 , R8 , Z4 , q8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String c9 , String E6 , String J7 , String w4 , String Z7 ) {  <CR> super ( c9 , E6 , J7 , w4 , Z7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String Q0 , String l , Letter r6 ) {  <CR> this . senderAddr = Q0 ;  <CR> this . receiverAddr = l ;  <CR> this . letter = r6 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object f1 ) {  <CR> Letter n = ( Letter ) f1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String Y7 , String X6 , String F1 , String I0 , String I9 ) {  <CR> this . title = Y7 ;  <CR> this . receiver = X6 ;  <CR> this . content = F1 ;  <CR> this . sender = I0 ;  <CR> this . date = I9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String i3 ) {  <CR> int c0 = 0 ;  <CR> for ( int e = 0 ; e < i3 . length ( ) ; e ++ ) {  <CR> char u9 = i3 . charAt ( e ) ;  <CR> c0 = c0 * 10 + u9 - '0' ;  <CR> }  <CR> return c0 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] p2 ) {  <CR> Letter [ ] Z1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z1 ) ;  <CR> for ( int R6 = 0 ; R6 < 3 ; R6 ++ )  <CR> Z1 [ R6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 