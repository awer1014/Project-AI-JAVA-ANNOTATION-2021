 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String K4 , String F1 , String u , String l9 , String d2 ) {  <CR> super ( K4 , F1 , u , l9 , d2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String y5 , String D7 , String V4 , String N3 , String C1 ) {  <CR> super ( y5 , D7 , V4 , N3 , C1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String K9 , String z5 , Letter w ) {  <CR> this . senderAddr = K9 ;  <CR> this . receiverAddr = z5 ;  <CR> this . letter = w ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String t7 , String s4 , String b9 , String z9 , String w4 ) {  <CR> this . title = t7 ;  <CR> this . receiver = s4 ;  <CR> this . content = b9 ;  <CR> this . sender = z9 ;  <CR> this . date = w4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String e8 ) {  <CR> int I9 = 0 ;  <CR> for ( int A0 = 0 ; A0 < e8 . length ( ) ; A0 ++ ) {  <CR> char O7 = e8 . charAt ( A0 ) ;  <CR> I9 = I9 * 10 + O7 - '0' ;  <CR> }  <CR> return I9 ;  <CR> }  <CR> public int compareTo ( Object v9 ) {  <CR> Letter V3 = ( Letter ) v9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b3 ) {  <CR> Letter [ ] Q1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Q1 ) ;  <CR> for ( int K0 = 0 ; K0 < 3 ; K0 ++ )  <CR> Q1 [ K0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 