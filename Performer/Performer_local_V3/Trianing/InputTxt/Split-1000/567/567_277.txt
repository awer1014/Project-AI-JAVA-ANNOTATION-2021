 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String B2 , String H7 , String Z3 , String C , String b8 ) {  <CR> super ( B2 , H7 , Z3 , C , b8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String v7 , String v0 , String d1 , String S5 , String U2 ) {  <CR> super ( v7 , v0 , d1 , S5 , U2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String J5 , String Y1 , Letter T2 ) {  <CR> this . senderAddr = J5 ;  <CR> this . receiverAddr = Y1 ;  <CR> this . letter = T2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String j7 , String F5 , String X0 , String u6 , String R9 ) {  <CR> this . title = j7 ;  <CR> this . receiver = F5 ;  <CR> this . content = X0 ;  <CR> this . sender = u6 ;  <CR> this . date = R9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object P2 ) {  <CR> Letter T5 = ( Letter ) P2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String T6 ) {  <CR> int a1 = 0 ;  <CR> for ( int m8 = 0 ; m8 < T6 . length ( ) ; m8 ++ ) {  <CR> char t = T6 . charAt ( m8 ) ;  <CR> a1 = a1 * 10 + t - '0' ;  <CR> }  <CR> return a1 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g1 ) {  <CR> Letter [ ] j1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( j1 ) ;  <CR> for ( int J9 = 0 ; J9 < 3 ; J9 ++ )  <CR> j1 [ J9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 