 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String C9 , String J9 , String s3 , String n1 , String A ) {  <CR> super ( C9 , J9 , s3 , n1 , A ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String r3 , String h , String W1 , String U7 , String V7 ) {  <CR> super ( r3 , h , W1 , U7 , V7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String L5 , String Y , Letter D0 ) {  <CR> this . senderAddr = L5 ;  <CR> this . receiverAddr = Y ;  <CR> this . letter = D0 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> public int compareTo ( Object n0 ) {  <CR> Letter E5 = ( Letter ) n0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String v7 , String u2 , String y2 , String M4 , String Y1 ) {  <CR> this . title = v7 ;  <CR> this . receiver = u2 ;  <CR> this . content = y2 ;  <CR> this . sender = M4 ;  <CR> this . date = Y1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String I3 ) {  <CR> int C3 = 0 ;  <CR> for ( int J = 0 ; J < I3 . length ( ) ; J ++ ) {  <CR> char K7 = I3 . charAt ( J ) ;  <CR> C3 = C3 * 10 + K7 - '0' ;  <CR> }  <CR> return C3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Y6 ) {  <CR> Letter [ ] C8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C8 ) ;  <CR> for ( int X8 = 0 ; X8 < 3 ; X8 ++ )  <CR> C8 [ X8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 