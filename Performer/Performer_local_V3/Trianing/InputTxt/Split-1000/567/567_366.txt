 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String D , String v8 , String L2 , String p8 , String c3 ) {  <CR> super ( D , v8 , L2 , p8 , c3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String R , String a2 , String k0 , String M8 , String k9 ) {  <CR> super ( R , a2 , k0 , M8 , k9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String e0 , String K6 , Letter l4 ) {  <CR> this . senderAddr = e0 ;  <CR> this . receiverAddr = K6 ;  <CR> this . letter = l4 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String I7 ) {  <CR> int X2 = 0 ;  <CR> for ( int I3 = 0 ; I3 < I7 . length ( ) ; I3 ++ ) {  <CR> char J0 = I7 . charAt ( I3 ) ;  <CR> X2 = X2 * 10 + J0 - '0' ;  <CR> }  <CR> return X2 ;  <CR> }  <CR> public int compareTo ( Object m6 ) {  <CR> Letter B = ( Letter ) m6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String Q0 , String F9 , String b5 , String F3 , String J5 ) {  <CR> this . title = Q0 ;  <CR> this . receiver = F9 ;  <CR> this . content = b5 ;  <CR> this . sender = F3 ;  <CR> this . date = J5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n3 ) {  <CR> Letter [ ] e4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( e4 ) ;  <CR> for ( int P2 = 0 ; P2 < 3 ; P2 ++ )  <CR> e4 [ P2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 