 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String I5 , String h5 , String i8 , String O7 , String T2 ) {  <CR> super ( I5 , h5 , i8 , O7 , T2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String D9 , String R4 , String a7 , String R2 , String c3 ) {  <CR> super ( D9 , R4 , a7 , R2 , c3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String H7 , String z6 , Letter Z ) {  <CR> this . senderAddr = H7 ;  <CR> this . receiverAddr = z6 ;  <CR> this . letter = Z ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String I2 ) {  <CR> int J2 = 0 ;  <CR> for ( int u3 = 0 ; u3 < I2 . length ( ) ; u3 ++ ) {  <CR> char Q4 = I2 . charAt ( u3 ) ;  <CR> J2 = J2 * 10 + Q4 - '0' ;  <CR> }  <CR> return J2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String a4 , String m8 , String X9 , String S6 , String p ) {  <CR> this . title = a4 ;  <CR> this . receiver = m8 ;  <CR> this . content = X9 ;  <CR> this . sender = S6 ;  <CR> this . date = p ;  <CR> }  <CR> public int compareTo ( Object o7 ) {  <CR> Letter e9 = ( Letter ) o7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B8 ) {  <CR> Letter [ ] q8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q8 ) ;  <CR> for ( int B3 = 0 ; B3 < 3 ; B3 ++ )  <CR> q8 [ B3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 