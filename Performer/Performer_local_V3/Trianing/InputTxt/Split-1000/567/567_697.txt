 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R , String L2 , String q3 , String G4 , String A2 ) {  <CR> super ( R , L2 , q3 , G4 , A2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String h3 , String T8 , String M9 , String O0 , String O6 ) {  <CR> super ( h3 , T8 , M9 , O0 , O6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String H9 , String F9 , Letter C9 ) {  <CR> this . senderAddr = H9 ;  <CR> this . receiverAddr = F9 ;  <CR> this . letter = C9 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> Letter ( String K , String E2 , String M0 , String v1 , String E9 ) {  <CR> this . title = K ;  <CR> this . receiver = E2 ;  <CR> this . content = M0 ;  <CR> this . sender = v1 ;  <CR> this . date = E9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String U3 ) {  <CR> int j0 = 0 ;  <CR> for ( int q1 = 0 ; q1 < U3 . length ( ) ; q1 ++ ) {  <CR> char G = U3 . charAt ( q1 ) ;  <CR> j0 = j0 * 10 + G - '0' ;  <CR> }  <CR> return j0 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object Q2 ) {  <CR> Letter o = ( Letter ) Q2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] K4 ) {  <CR> Letter [ ] g1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( g1 ) ;  <CR> for ( int p5 = 0 ; p5 < 3 ; p5 ++ )  <CR> g1 [ p5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 