 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String n3 , String O8 , String N5 , String c8 , String U ) {  <CR> super ( n3 , O8 , N5 , c8 , U ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g5 , String v8 , String l8 , String N5 , String M4 ) {  <CR> super ( g5 , v8 , l8 , N5 , M4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String J4 , String G0 , Letter H3 ) {  <CR> this . senderAddr = J4 ;  <CR> this . receiverAddr = G0 ;  <CR> this . letter = H3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> Letter ( String Q0 , String B3 , String H9 , String n3 , String R5 ) {  <CR> this . title = Q0 ;  <CR> this . receiver = B3 ;  <CR> this . content = H9 ;  <CR> this . sender = n3 ;  <CR> this . date = R5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String X0 ) {  <CR> int m2 = 0 ;  <CR> for ( int j5 = 0 ; j5 < X0 . length ( ) ; j5 ++ ) {  <CR> char K6 = X0 . charAt ( j5 ) ;  <CR> m2 = m2 * 10 + K6 - '0' ;  <CR> }  <CR> return m2 ;  <CR> }  <CR> public int compareTo ( Object m0 ) {  <CR> Letter N7 = ( Letter ) m0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Z3 ) {  <CR> Letter [ ] U5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( U5 ) ;  <CR> for ( int X6 = 0 ; X6 < 3 ; X6 ++ )  <CR> U5 [ X6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 