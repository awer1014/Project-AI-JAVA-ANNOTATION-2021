 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o6 , String B3 , String m8 , String x4 , String z8 ) {  <CR> super ( o6 , B3 , m8 , x4 , z8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String X7 , String t6 , String Z2 , String z7 , String I5 ) {  <CR> super ( X7 , t6 , Z2 , z7 , I5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String l , String s3 , Letter N3 ) {  <CR> this . senderAddr = l ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = N3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String d5 , String P1 , String J9 , String v4 , String Q2 ) {  <CR> this . title = d5 ;  <CR> this . receiver = P1 ;  <CR> this . content = J9 ;  <CR> this . sender = v4 ;  <CR> this . date = Q2 ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String h4 ) {  <CR> int i7 = 0 ;  <CR> for ( int R9 = 0 ; R9 < h4 . length ( ) ; R9 ++ ) {  <CR> char A0 = h4 . charAt ( R9 ) ;  <CR> i7 = i7 * 10 + A0 - '0' ;  <CR> }  <CR> return i7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object F7 ) {  <CR> Letter s5 = ( Letter ) F7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] A2 ) {  <CR> Letter [ ] S0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S0 ) ;  <CR> for ( int D7 = 0 ; D7 < 3 ; D7 ++ )  <CR> S0 [ D7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 