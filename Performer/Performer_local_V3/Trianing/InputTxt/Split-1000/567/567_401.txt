 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e5 , String a5 , String S7 , String o5 , String W4 ) {  <CR> super ( e5 , a5 , S7 , o5 , W4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Y3 , String q4 , String G8 , String u6 , String i7 ) {  <CR> super ( Y3 , q4 , G8 , u6 , i7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String Z2 , String N6 , Letter n0 ) {  <CR> this . senderAddr = Z2 ;  <CR> this . receiverAddr = N6 ;  <CR> this . letter = n0 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object S4 ) {  <CR> Letter y = ( Letter ) S4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String j2 ) {  <CR> int k9 = 0 ;  <CR> for ( int E3 = 0 ; E3 < j2 . length ( ) ; E3 ++ ) {  <CR> char G5 = j2 . charAt ( E3 ) ;  <CR> k9 = k9 * 10 + G5 - '0' ;  <CR> }  <CR> return k9 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String Q5 , String v0 , String J2 , String M6 , String R ) {  <CR> this . title = Q5 ;  <CR> this . receiver = v0 ;  <CR> this . content = J2 ;  <CR> this . sender = M6 ;  <CR> this . date = R ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] s0 ) {  <CR> Letter [ ] m = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( m ) ;  <CR> for ( int d9 = 0 ; d9 < 3 ; d9 ++ )  <CR> m [ d9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 