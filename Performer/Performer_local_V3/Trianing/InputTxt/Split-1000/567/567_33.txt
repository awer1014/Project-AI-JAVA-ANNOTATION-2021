 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z4 , String O9 , String H5 , String d4 , String w5 ) {  <CR> super ( Z4 , O9 , H5 , d4 , w5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String F3 , String L0 , String s6 , String S6 , String f3 ) {  <CR> super ( F3 , L0 , s6 , S6 , f3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String S7 , String q1 , Letter y7 ) {  <CR> this . senderAddr = S7 ;  <CR> this . receiverAddr = q1 ;  <CR> this . letter = y7 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> Letter ( String Y7 , String Z1 , String O8 , String S , String v5 ) {  <CR> this . title = Y7 ;  <CR> this . receiver = Z1 ;  <CR> this . content = O8 ;  <CR> this . sender = S ;  <CR> this . date = v5 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String h6 ) {  <CR> int i9 = 0 ;  <CR> for ( int L5 = 0 ; L5 < h6 . length ( ) ; L5 ++ ) {  <CR> char c3 = h6 . charAt ( L5 ) ;  <CR> i9 = i9 * 10 + c3 - '0' ;  <CR> }  <CR> return i9 ;  <CR> }  <CR> public int compareTo ( Object y9 ) {  <CR> Letter Q7 = ( Letter ) y9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] F3 ) {  <CR> Letter [ ] a4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a4 ) ;  <CR> for ( int z7 = 0 ; z7 < 3 ; z7 ++ )  <CR> a4 [ z7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 