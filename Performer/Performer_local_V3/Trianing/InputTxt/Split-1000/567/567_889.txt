 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String B6 , String B1 , String C3 , String t2 , String k6 ) {  <CR> super ( B6 , B1 , C3 , t2 , k6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o8 , String Q1 , String x1 , String d2 , String T9 ) {  <CR> super ( o8 , Q1 , x1 , d2 , T9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String J2 , String W5 , Letter P9 ) {  <CR> this . senderAddr = J2 ;  <CR> this . receiverAddr = W5 ;  <CR> this . letter = P9 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String U ) {  <CR> int l5 = 0 ;  <CR> for ( int g8 = 0 ; g8 < U . length ( ) ; g8 ++ ) {  <CR> char s0 = U . charAt ( g8 ) ;  <CR> l5 = l5 * 10 + s0 - '0' ;  <CR> }  <CR> return l5 ;  <CR> }  <CR> Letter ( String C6 , String L9 , String d0 , String g , String q8 ) {  <CR> this . title = C6 ;  <CR> this . receiver = L9 ;  <CR> this . content = d0 ;  <CR> this . sender = g ;  <CR> this . date = q8 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object x0 ) {  <CR> Letter O5 = ( Letter ) x0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x7 ) {  <CR> Letter [ ] M3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( M3 ) ;  <CR> for ( int c6 = 0 ; c6 < 3 ; c6 ++ )  <CR> M3 [ c6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 