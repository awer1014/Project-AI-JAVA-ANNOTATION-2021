 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z8 , String h8 , String o0 , String s , String o7 ) {  <CR> super ( Z8 , h8 , o0 , s , o7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String P , String n0 , String J , String V , String s4 ) {  <CR> super ( P , n0 , J , V , s4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String x1 , String S6 , Letter N1 ) {  <CR> this . senderAddr = x1 ;  <CR> this . receiverAddr = S6 ;  <CR> this . letter = N1 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String O ) {  <CR> int D9 = 0 ;  <CR> for ( int I8 = 0 ; I8 < O . length ( ) ; I8 ++ ) {  <CR> char K5 = O . charAt ( I8 ) ;  <CR> D9 = D9 * 10 + K5 - '0' ;  <CR> }  <CR> return D9 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String e9 , String s6 , String R , String G1 , String h8 ) {  <CR> this . title = e9 ;  <CR> this . receiver = s6 ;  <CR> this . content = R ;  <CR> this . sender = G1 ;  <CR> this . date = h8 ;  <CR> }  <CR> boolean same ;  <CR> public int compareTo ( Object W5 ) {  <CR> Letter n0 = ( Letter ) W5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o5 ) {  <CR> Letter [ ] K1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( K1 ) ;  <CR> for ( int N5 = 0 ; N5 < 3 ; N5 ++ )  <CR> K1 [ N5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 