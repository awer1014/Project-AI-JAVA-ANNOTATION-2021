 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z7 , String Q5 , String h8 , String t6 , String U7 ) {  <CR> super ( Z7 , Q5 , h8 , t6 , U7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String W5 , String A8 , String A4 , String u5 , String b6 ) {  <CR> super ( W5 , A8 , A4 , u5 , b6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String F8 , String T1 , Letter x8 ) {  <CR> this . senderAddr = F8 ;  <CR> this . receiverAddr = T1 ;  <CR> this . letter = x8 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String W8 ) {  <CR> int N6 = 0 ;  <CR> for ( int Y7 = 0 ; Y7 < W8 . length ( ) ; Y7 ++ ) {  <CR> char T9 = W8 . charAt ( Y7 ) ;  <CR> N6 = N6 * 10 + T9 - '0' ;  <CR> }  <CR> return N6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object R5 ) {  <CR> Letter Z7 = ( Letter ) R5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String W0 , String S2 , String w , String F2 , String j6 ) {  <CR> this . title = W0 ;  <CR> this . receiver = S2 ;  <CR> this . content = w ;  <CR> this . sender = F2 ;  <CR> this . date = j6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] j9 ) {  <CR> Letter [ ] Y0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y0 ) ;  <CR> for ( int w6 = 0 ; w6 < 3 ; w6 ++ )  <CR> Y0 [ w6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 