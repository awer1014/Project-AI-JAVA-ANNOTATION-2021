 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A4 , String N1 , String y5 , String T3 , String o6 ) {  <CR> super ( A4 , N1 , y5 , T3 , o6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String T , String t7 , String E7 , String s0 , String T4 ) {  <CR> super ( T , t7 , E7 , s0 , T4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String O9 , String T1 , Letter G2 ) {  <CR> this . senderAddr = O9 ;  <CR> this . receiverAddr = T1 ;  <CR> this . letter = G2 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> public int compareTo ( Object e8 ) {  <CR> Letter g1 = ( Letter ) e8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String O7 ) {  <CR> int V3 = 0 ;  <CR> for ( int s = 0 ; s < O7 . length ( ) ; s ++ ) {  <CR> char F5 = O7 . charAt ( s ) ;  <CR> V3 = V3 * 10 + F5 - '0' ;  <CR> }  <CR> return V3 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String U1 , String V2 , String k9 , String B7 , String c6 ) {  <CR> this . title = U1 ;  <CR> this . receiver = V2 ;  <CR> this . content = k9 ;  <CR> this . sender = B7 ;  <CR> this . date = c6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g ) {  <CR> Letter [ ] r4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( r4 ) ;  <CR> for ( int f6 = 0 ; f6 < 3 ; f6 ++ )  <CR> r4 [ f6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 