 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String V5 , String J , String N4 , String o , String l7 ) {  <CR> super ( V5 , J , N4 , o , l7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String b7 , String b4 , String w1 , String B9 , String P2 ) {  <CR> super ( b7 , b4 , w1 , B9 , P2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Envelop ( String u3 , String v9 , Letter C9 ) {  <CR> this . senderAddr = u3 ;  <CR> this . receiverAddr = v9 ;  <CR> this . letter = C9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String r2 , String R6 , String P0 , String x9 , String k7 ) {  <CR> this . title = r2 ;  <CR> this . receiver = R6 ;  <CR> this . content = P0 ;  <CR> this . sender = x9 ;  <CR> this . date = k7 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object c8 ) {  <CR> Letter D = ( Letter ) c8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String f7 ) {  <CR> int e6 = 0 ;  <CR> for ( int f = 0 ; f < f7 . length ( ) ; f ++ ) {  <CR> char K5 = f7 . charAt ( f ) ;  <CR> e6 = e6 * 10 + K5 - '0' ;  <CR> }  <CR> return e6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] J1 ) {  <CR> Letter [ ] P4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( P4 ) ;  <CR> for ( int P8 = 0 ; P8 < 3 ; P8 ++ )  <CR> P4 [ P8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 