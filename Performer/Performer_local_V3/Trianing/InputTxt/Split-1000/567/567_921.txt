 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e8 , String D3 , String Y9 , String M4 , String K ) {  <CR> super ( e8 , D3 , Y9 , M4 , K ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String g8 , String v4 , String w , String T8 , String R5 ) {  <CR> super ( g8 , v4 , w , T8 , R5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String c2 , String P4 , Letter S0 ) {  <CR> this . senderAddr = c2 ;  <CR> this . receiverAddr = P4 ;  <CR> this . letter = S0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> Letter ( String R2 , String s1 , String A6 , String k5 , String n ) {  <CR> this . title = R2 ;  <CR> this . receiver = s1 ;  <CR> this . content = A6 ;  <CR> this . sender = k5 ;  <CR> this . date = n ;  <CR> }  <CR> public int compareTo ( Object f2 ) {  <CR> Letter w = ( Letter ) f2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String Z1 ) {  <CR> int t6 = 0 ;  <CR> for ( int n6 = 0 ; n6 < Z1 . length ( ) ; n6 ++ ) {  <CR> char s7 = Z1 . charAt ( n6 ) ;  <CR> t6 = t6 * 10 + s7 - '0' ;  <CR> }  <CR> return t6 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x0 ) {  <CR> Letter [ ] q9 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( q9 ) ;  <CR> for ( int V3 = 0 ; V3 < 3 ; V3 ++ )  <CR> q9 [ V3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 