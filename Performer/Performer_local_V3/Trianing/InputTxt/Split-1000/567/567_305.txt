 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String j5 , String A0 , String s6 , String o6 , String w0 ) {  <CR> super ( j5 , A0 , s6 , o6 , w0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String U5 , String l2 , String u9 , String d9 , String j5 ) {  <CR> super ( U5 , l2 , u9 , d9 , j5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String T , String V6 , Letter m8 ) {  <CR> this . senderAddr = T ;  <CR> this . receiverAddr = V6 ;  <CR> this . letter = m8 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String J7 ) {  <CR> int W5 = 0 ;  <CR> for ( int y1 = 0 ; y1 < J7 . length ( ) ; y1 ++ ) {  <CR> char u1 = J7 . charAt ( y1 ) ;  <CR> W5 = W5 * 10 + u1 - '0' ;  <CR> }  <CR> return W5 ;  <CR> }  <CR> public int compareTo ( Object r9 ) {  <CR> Letter I7 = ( Letter ) r9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String g8 , String W , String t9 , String g7 , String H1 ) {  <CR> this . title = g8 ;  <CR> this . receiver = W ;  <CR> this . content = t9 ;  <CR> this . sender = g7 ;  <CR> this . date = H1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] n1 ) {  <CR> Letter [ ] N4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( N4 ) ;  <CR> for ( int P0 = 0 ; P0 < 3 ; P0 ++ )  <CR> N4 [ P0 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 