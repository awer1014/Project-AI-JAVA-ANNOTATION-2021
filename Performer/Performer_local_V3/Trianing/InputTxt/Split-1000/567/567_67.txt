 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String h6 , String k2 , String G6 , String S9 , String g9 ) {  <CR> super ( h6 , k2 , G6 , S9 , g9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String I5 , String z , String j4 , String f7 , String m6 ) {  <CR> super ( I5 , z , j4 , f7 , m6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String x8 , String B2 , Letter a0 ) {  <CR> this . senderAddr = x8 ;  <CR> this . receiverAddr = B2 ;  <CR> this . letter = a0 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String z2 ) {  <CR> int b0 = 0 ;  <CR> for ( int l = 0 ; l < z2 . length ( ) ; l ++ ) {  <CR> char p9 = z2 . charAt ( l ) ;  <CR> b0 = b0 * 10 + p9 - '0' ;  <CR> }  <CR> return b0 ;  <CR> }  <CR> Letter ( String B1 , String r9 , String Z8 , String u9 , String k8 ) {  <CR> this . title = B1 ;  <CR> this . receiver = r9 ;  <CR> this . content = Z8 ;  <CR> this . sender = u9 ;  <CR> this . date = k8 ;  <CR> }  <CR> public int compareTo ( Object A6 ) {  <CR> Letter w2 = ( Letter ) A6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w2 ) {  <CR> Letter [ ] a3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( a3 ) ;  <CR> for ( int N2 = 0 ; N2 < 3 ; N2 ++ )  <CR> a3 [ N2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 