 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String A7 , String A5 , String d5 , String r5 , String P5 ) {  <CR> super ( A7 , A5 , d5 , r5 , P5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String C8 , String x9 , String r3 , String l8 , String S3 ) {  <CR> super ( C8 , x9 , r3 , l8 , S3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String K , String C8 , Letter d4 ) {  <CR> this . senderAddr = K ;  <CR> this . receiverAddr = C8 ;  <CR> this . letter = d4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String X0 , String e5 , String K6 , String l , String B9 ) {  <CR> this . title = X0 ;  <CR> this . receiver = e5 ;  <CR> this . content = K6 ;  <CR> this . sender = l ;  <CR> this . date = B9 ;  <CR> }  <CR> public int compareTo ( Object e6 ) {  <CR> Letter o2 = ( Letter ) e6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String I9 ) {  <CR> int C7 = 0 ;  <CR> for ( int k1 = 0 ; k1 < I9 . length ( ) ; k1 ++ ) {  <CR> char R8 = I9 . charAt ( k1 ) ;  <CR> C7 = C7 * 10 + R8 - '0' ;  <CR> }  <CR> return C7 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] R8 ) {  <CR> Letter [ ] s7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s7 ) ;  <CR> for ( int j5 = 0 ; j5 < 3 ; j5 ++ )  <CR> s7 [ j5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 