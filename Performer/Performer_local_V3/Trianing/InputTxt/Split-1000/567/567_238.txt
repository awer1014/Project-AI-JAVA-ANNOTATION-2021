 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String X0 , String P1 , String h4 , String R0 , String M9 ) {  <CR> super ( X0 , P1 , h4 , R0 , M9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L8 , String M1 , String a7 , String F4 , String u5 ) {  <CR> super ( L8 , M1 , a7 , F4 , u5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String I7 , String P5 , Letter p7 ) {  <CR> this . senderAddr = I7 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = p7 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String d7 ) {  <CR> int b7 = 0 ;  <CR> for ( int f2 = 0 ; f2 < d7 . length ( ) ; f2 ++ ) {  <CR> char a = d7 . charAt ( f2 ) ;  <CR> b7 = b7 * 10 + a - '0' ;  <CR> }  <CR> return b7 ;  <CR> }  <CR> Letter ( String U4 , String k8 , String F1 , String o1 , String l5 ) {  <CR> this . title = U4 ;  <CR> this . receiver = k8 ;  <CR> this . content = F1 ;  <CR> this . sender = o1 ;  <CR> this . date = l5 ;  <CR> }  <CR> public int compareTo ( Object Q6 ) {  <CR> Letter B3 = ( Letter ) Q6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] b2 ) {  <CR> Letter [ ] I2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( I2 ) ;  <CR> for ( int w8 = 0 ; w8 < 3 ; w8 ++ )  <CR> I2 [ w8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 