 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String P2 , String D9 , String L3 , String h0 , String c5 ) {  <CR> super ( P2 , D9 , L3 , h0 , c5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N5 , String A6 , String a0 , String t2 , String g4 ) {  <CR> super ( N5 , A6 , a0 , t2 , g4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String u1 , String q2 , Letter o7 ) {  <CR> this . senderAddr = u1 ;  <CR> this . receiverAddr = q2 ;  <CR> this . letter = o7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object F2 ) {  <CR> Letter p4 = ( Letter ) F2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String p1 ) {  <CR> int v6 = 0 ;  <CR> for ( int W8 = 0 ; W8 < p1 . length ( ) ; W8 ++ ) {  <CR> char C4 = p1 . charAt ( W8 ) ;  <CR> v6 = v6 * 10 + C4 - '0' ;  <CR> }  <CR> return v6 ;  <CR> }  <CR> Letter ( String z5 , String n7 , String H3 , String R8 , String V9 ) {  <CR> this . title = z5 ;  <CR> this . receiver = n7 ;  <CR> this . content = H3 ;  <CR> this . sender = R8 ;  <CR> this . date = V9 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] d9 ) {  <CR> Letter [ ] r8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( r8 ) ;  <CR> for ( int N7 = 0 ; N7 < 3 ; N7 ++ )  <CR> r8 [ N7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 