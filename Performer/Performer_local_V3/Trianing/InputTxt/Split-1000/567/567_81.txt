 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e5 , String N1 , String U , String V1 , String H8 ) {  <CR> super ( e5 , N1 , U , V1 , H8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String u3 , String I1 , String d6 , String N7 , String w1 ) {  <CR> super ( u3 , I1 , d6 , N7 , w1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String X4 , String I7 , Letter G8 ) {  <CR> this . senderAddr = X4 ;  <CR> this . receiverAddr = I7 ;  <CR> this . letter = G8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String u ) {  <CR> int d8 = 0 ;  <CR> for ( int d0 = 0 ; d0 < u . length ( ) ; d0 ++ ) {  <CR> char U8 = u . charAt ( d0 ) ;  <CR> d8 = d8 * 10 + U8 - '0' ;  <CR> }  <CR> return d8 ;  <CR> }  <CR> public int compareTo ( Object S9 ) {  <CR> Letter N1 = ( Letter ) S9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String e3 , String q , String M1 , String B4 , String w0 ) {  <CR> this . title = e3 ;  <CR> this . receiver = q ;  <CR> this . content = M1 ;  <CR> this . sender = B4 ;  <CR> this . date = w0 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] D2 ) {  <CR> Letter [ ] i4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( i4 ) ;  <CR> for ( int U7 = 0 ; U7 < 3 ; U7 ++ )  <CR> i4 [ U7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 