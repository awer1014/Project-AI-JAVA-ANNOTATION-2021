 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String f4 , String y8 , String F8 , String u0 , String p3 ) {  <CR> super ( f4 , y8 , F8 , u0 , p3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String W7 , String g1 , String l3 , String x9 , String H4 ) {  <CR> super ( W7 , g1 , l3 , x9 , H4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String s4 , String L , Letter L1 ) {  <CR> this . senderAddr = s4 ;  <CR> this . receiverAddr = L ;  <CR> this . letter = L1 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String g0 ) {  <CR> int E0 = 0 ;  <CR> for ( int y8 = 0 ; y8 < g0 . length ( ) ; y8 ++ ) {  <CR> char O6 = g0 . charAt ( y8 ) ;  <CR> E0 = E0 * 10 + O6 - '0' ;  <CR> }  <CR> return E0 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String W2 , String d3 , String R , String M8 , String y7 ) {  <CR> this . title = W2 ;  <CR> this . receiver = d3 ;  <CR> this . content = R ;  <CR> this . sender = M8 ;  <CR> this . date = y7 ;  <CR> }  <CR> public int compareTo ( Object Y1 ) {  <CR> Letter D0 = ( Letter ) Y1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] S9 ) {  <CR> Letter [ ] y0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( y0 ) ;  <CR> for ( int a7 = 0 ; a7 < 3 ; a7 ++ )  <CR> y0 [ a7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 