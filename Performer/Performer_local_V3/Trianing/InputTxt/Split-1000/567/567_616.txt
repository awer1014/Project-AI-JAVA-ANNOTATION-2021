 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String a3 , String m8 , String G4 , String k0 , String l6 ) {  <CR> super ( a3 , m8 , G4 , k0 , l6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String D0 , String I5 , String K2 , String g8 , String J2 ) {  <CR> super ( D0 , I5 , K2 , g8 , J2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String r8 , String i5 , Letter i4 ) {  <CR> this . senderAddr = r8 ;  <CR> this . receiverAddr = i5 ;  <CR> this . letter = i4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String o9 , String F1 , String U , String G4 , String S2 ) {  <CR> this . title = o9 ;  <CR> this . receiver = F1 ;  <CR> this . content = U ;  <CR> this . sender = G4 ;  <CR> this . date = S2 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object d0 ) {  <CR> Letter W0 = ( Letter ) d0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String D8 ) {  <CR> int O9 = 0 ;  <CR> for ( int H5 = 0 ; H5 < D8 . length ( ) ; H5 ++ ) {  <CR> char g8 = D8 . charAt ( H5 ) ;  <CR> O9 = O9 * 10 + g8 - '0' ;  <CR> }  <CR> return O9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U2 ) {  <CR> Letter [ ] N5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( N5 ) ;  <CR> for ( int m = 0 ; m < 3 ; m ++ )  <CR> N5 [ m ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 