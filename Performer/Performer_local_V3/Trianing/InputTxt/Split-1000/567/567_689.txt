 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u4 , String D2 , String Q9 , String L7 , String K9 ) {  <CR> super ( u4 , D2 , Q9 , L7 , K9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String I2 , String V0 , String f3 , String Z8 , String o7 ) {  <CR> super ( I2 , V0 , f3 , Z8 , o7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Envelop ( String z1 , String L8 , Letter Q6 ) {  <CR> this . senderAddr = z1 ;  <CR> this . receiverAddr = L8 ;  <CR> this . letter = Q6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String g5 ) {  <CR> int q3 = 0 ;  <CR> for ( int r5 = 0 ; r5 < g5 . length ( ) ; r5 ++ ) {  <CR> char g3 = g5 . charAt ( r5 ) ;  <CR> q3 = q3 * 10 + g3 - '0' ;  <CR> }  <CR> return q3 ;  <CR> }  <CR> public int compareTo ( Object H5 ) {  <CR> Letter L = ( Letter ) H5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String u7 , String M9 , String L0 , String U3 , String u6 ) {  <CR> this . title = u7 ;  <CR> this . receiver = M9 ;  <CR> this . content = L0 ;  <CR> this . sender = U3 ;  <CR> this . date = u6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] x3 ) {  <CR> Letter [ ] Z6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Z6 ) ;  <CR> for ( int D7 = 0 ; D7 < 3 ; D7 ++ )  <CR> Z6 [ D7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 