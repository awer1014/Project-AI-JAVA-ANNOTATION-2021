 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String k7 , String u1 , String J5 , String A1 , String z9 ) {  <CR> super ( k7 , u1 , J5 , A1 , z9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String V , String j , String S5 , String E6 , String F5 ) {  <CR> super ( V , j , S5 , E6 , F5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String H0 , String L3 , Letter e4 ) {  <CR> this . senderAddr = H0 ;  <CR> this . receiverAddr = L3 ;  <CR> this . letter = e4 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String p6 , String o9 , String l3 , String X3 , String q ) {  <CR> this . title = p6 ;  <CR> this . receiver = o9 ;  <CR> this . content = l3 ;  <CR> this . sender = X3 ;  <CR> this . date = q ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object T9 ) {  <CR> Letter S0 = ( Letter ) T9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String b1 ) {  <CR> int c7 = 0 ;  <CR> for ( int n5 = 0 ; n5 < b1 . length ( ) ; n5 ++ ) {  <CR> char S7 = b1 . charAt ( n5 ) ;  <CR> c7 = c7 * 10 + S7 - '0' ;  <CR> }  <CR> return c7 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] M9 ) {  <CR> Letter [ ] L6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L6 ) ;  <CR> for ( int k9 = 0 ; k9 < 3 ; k9 ++ )  <CR> L6 [ k9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 