 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String p , String R , String j9 , String v2 , String Y8 ) {  <CR> super ( p , R , j9 , v2 , Y8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String q2 , String A8 , String H5 , String w4 , String n2 ) {  <CR> super ( q2 , A8 , H5 , w4 , n2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String N4 , String e9 , Letter h4 ) {  <CR> this . senderAddr = N4 ;  <CR> this . receiverAddr = e9 ;  <CR> this . letter = h4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String E7 , String S , String i3 , String j9 , String P ) {  <CR> this . title = E7 ;  <CR> this . receiver = S ;  <CR> this . content = i3 ;  <CR> this . sender = j9 ;  <CR> this . date = P ;  <CR> }  <CR> public int compareTo ( Object N6 ) {  <CR> Letter t5 = ( Letter ) N6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String d ) {  <CR> int g = 0 ;  <CR> for ( int R8 = 0 ; R8 < d . length ( ) ; R8 ++ ) {  <CR> char I4 = d . charAt ( R8 ) ;  <CR> g = g * 10 + I4 - '0' ;  <CR> }  <CR> return g ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] D3 ) {  <CR> Letter [ ] F3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( F3 ) ;  <CR> for ( int s8 = 0 ; s8 < 3 ; s8 ++ )  <CR> F3 [ s8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 