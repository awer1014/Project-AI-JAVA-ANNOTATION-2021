 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String u0 , String K0 , String o6 , String b7 , String k5 ) {  <CR> super ( u0 , K0 , o6 , b7 , k5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String j0 , String M3 , String c3 , String x0 , String y6 ) {  <CR> super ( j0 , M3 , c3 , x0 , y6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String K0 , String G0 , Letter J9 ) {  <CR> this . senderAddr = K0 ;  <CR> this . receiverAddr = G0 ;  <CR> this . letter = J9 ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String e8 , String P9 , String T3 , String J , String Z3 ) {  <CR> this . title = e8 ;  <CR> this . receiver = P9 ;  <CR> this . content = T3 ;  <CR> this . sender = J ;  <CR> this . date = Z3 ;  <CR> }  <CR> public int compareTo ( Object g ) {  <CR> Letter N5 = ( Letter ) g ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> int valueOf ( String g8 ) {  <CR> int B2 = 0 ;  <CR> for ( int b8 = 0 ; b8 < g8 . length ( ) ; b8 ++ ) {  <CR> char Y = g8 . charAt ( b8 ) ;  <CR> B2 = B2 * 10 + Y - '0' ;  <CR> }  <CR> return B2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] Y8 ) {  <CR> Letter [ ] p6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( p6 ) ;  <CR> for ( int x1 = 0 ; x1 < 3 ; x1 ++ )  <CR> p6 [ x1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 