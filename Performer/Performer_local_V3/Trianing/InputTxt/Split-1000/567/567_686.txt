 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l3 , String F9 , String m8 , String e4 , String V9 ) {  <CR> super ( l3 , F9 , m8 , e4 , V9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String j6 , String r9 , String f6 , String C6 , String S ) {  <CR> super ( j6 , r9 , f6 , C6 , S ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> Envelop ( String Z9 , String q4 , Letter w ) {  <CR> this . senderAddr = Z9 ;  <CR> this . receiverAddr = q4 ;  <CR> this . letter = w ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String b6 ) {  <CR> int N6 = 0 ;  <CR> for ( int k6 = 0 ; k6 < b6 . length ( ) ; k6 ++ ) {  <CR> char f0 = b6 . charAt ( k6 ) ;  <CR> N6 = N6 * 10 + f0 - '0' ;  <CR> }  <CR> return N6 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String y3 , String C7 , String s7 , String x2 , String I7 ) {  <CR> this . title = y3 ;  <CR> this . receiver = C7 ;  <CR> this . content = s7 ;  <CR> this . sender = x2 ;  <CR> this . date = I7 ;  <CR> }  <CR> public int compareTo ( Object H0 ) {  <CR> Letter T = ( Letter ) H0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] C4 ) {  <CR> Letter [ ] S0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S0 ) ;  <CR> for ( int p = 0 ; p < 3 ; p ++ )  <CR> S0 [ p ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 