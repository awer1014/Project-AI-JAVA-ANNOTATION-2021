 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String N5 , String X0 , String I4 , String f2 , String x2 ) {  <CR> super ( N5 , X0 , I4 , f2 , x2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String K9 , String P5 , String L1 , String L4 , String z0 ) {  <CR> super ( K9 , P5 , L1 , L4 , z0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String I0 , String u7 , Letter n2 ) {  <CR> this . senderAddr = I0 ;  <CR> this . receiverAddr = u7 ;  <CR> this . letter = n2 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object y9 ) {  <CR> Letter W1 = ( Letter ) y9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String z9 , String b8 , String o4 , String b7 , String g3 ) {  <CR> this . title = z9 ;  <CR> this . receiver = b8 ;  <CR> this . content = o4 ;  <CR> this . sender = b7 ;  <CR> this . date = g3 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String K ) {  <CR> int l2 = 0 ;  <CR> for ( int b = 0 ; b < K . length ( ) ; b ++ ) {  <CR> char b5 = K . charAt ( b ) ;  <CR> l2 = l2 * 10 + b5 - '0' ;  <CR> }  <CR> return l2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] X8 ) {  <CR> Letter [ ] L8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( L8 ) ;  <CR> for ( int Y7 = 0 ; Y7 < 3 ; Y7 ++ )  <CR> L8 [ Y7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 