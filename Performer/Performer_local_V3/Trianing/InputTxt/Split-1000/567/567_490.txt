 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String I8 , String E9 , String Y , String g , String t7 ) {  <CR> super ( I8 , E9 , Y , g , t7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String L8 , String W8 , String z5 , String s6 , String H ) {  <CR> super ( L8 , W8 , z5 , s6 , H ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String H5 , String s , Letter r ) {  <CR> this . senderAddr = H5 ;  <CR> this . receiverAddr = s ;  <CR> this . letter = r ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String I7 ) {  <CR> int j8 = 0 ;  <CR> for ( int B8 = 0 ; B8 < I7 . length ( ) ; B8 ++ ) {  <CR> char X3 = I7 . charAt ( B8 ) ;  <CR> j8 = j8 * 10 + X3 - '0' ;  <CR> }  <CR> return j8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object m8 ) {  <CR> Letter X5 = ( Letter ) m8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String G5 , String I6 , String q , String b6 , String R8 ) {  <CR> this . title = G5 ;  <CR> this . receiver = I6 ;  <CR> this . content = q ;  <CR> this . sender = b6 ;  <CR> this . date = R8 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] T0 ) {  <CR> Letter [ ] s0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s0 ) ;  <CR> for ( int k2 = 0 ; k2 < 3 ; k2 ++ )  <CR> s0 [ k2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 