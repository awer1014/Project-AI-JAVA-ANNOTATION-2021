 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Z , String D2 , String i1 , String h3 , String C2 ) {  <CR> super ( Z , D2 , i1 , h3 , C2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String X8 , String U2 , String g6 , String n0 , String s3 ) {  <CR> super ( X8 , U2 , g6 , n0 , s3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String D5 , String y6 , Letter s7 ) {  <CR> this . senderAddr = D5 ;  <CR> this . receiverAddr = y6 ;  <CR> this . letter = s7 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String i5 , String S5 , String f , String G9 , String a0 ) {  <CR> this . title = i5 ;  <CR> this . receiver = S5 ;  <CR> this . content = f ;  <CR> this . sender = G9 ;  <CR> this . date = a0 ;  <CR> }  <CR> public int compareTo ( Object J3 ) {  <CR> Letter v8 = ( Letter ) J3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String k8 ) {  <CR> int K9 = 0 ;  <CR> for ( int k7 = 0 ; k7 < k8 . length ( ) ; k7 ++ ) {  <CR> char B3 = k8 . charAt ( k7 ) ;  <CR> K9 = K9 * 10 + B3 - '0' ;  <CR> }  <CR> return K9 ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] c0 ) {  <CR> Letter [ ] e4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( e4 ) ;  <CR> for ( int S3 = 0 ; S3 < 3 ; S3 ++ )  <CR> e4 [ S3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 