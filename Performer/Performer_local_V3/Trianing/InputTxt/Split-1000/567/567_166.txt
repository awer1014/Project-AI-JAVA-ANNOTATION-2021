 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R9 , String F0 , String m1 , String w3 , String G8 ) {  <CR> super ( R9 , F0 , m1 , w3 , G8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String p2 , String M5 , String l7 , String g , String s1 ) {  <CR> super ( p2 , M5 , l7 , g , s1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String Q , String I0 , Letter n2 ) {  <CR> this . senderAddr = Q ;  <CR> this . receiverAddr = I0 ;  <CR> this . letter = n2 ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object V0 ) {  <CR> Letter w2 = ( Letter ) V0 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String a ) {  <CR> int I3 = 0 ;  <CR> for ( int n3 = 0 ; n3 < a . length ( ) ; n3 ++ ) {  <CR> char F9 = a . charAt ( n3 ) ;  <CR> I3 = I3 * 10 + F9 - '0' ;  <CR> }  <CR> return I3 ;  <CR> }  <CR> Letter ( String b9 , String C7 , String C0 , String r7 , String d8 ) {  <CR> this . title = b9 ;  <CR> this . receiver = C7 ;  <CR> this . content = C0 ;  <CR> this . sender = r7 ;  <CR> this . date = d8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] j8 ) {  <CR> Letter [ ] M1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( M1 ) ;  <CR> for ( int w5 = 0 ; w5 < 3 ; w5 ++ )  <CR> M1 [ w5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 