 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e5 , String K7 , String A6 , String r7 , String k0 ) {  <CR> super ( e5 , K7 , A6 , r7 , k0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String a0 , String G0 , String r , String D3 , String j ) {  <CR> super ( a0 , G0 , r , D3 , j ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String i2 , String p7 , Letter m4 ) {  <CR> this . senderAddr = i2 ;  <CR> this . receiverAddr = p7 ;  <CR> this . letter = m4 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String P3 , String O1 , String E0 , String q9 , String o6 ) {  <CR> this . title = P3 ;  <CR> this . receiver = O1 ;  <CR> this . content = E0 ;  <CR> this . sender = q9 ;  <CR> this . date = o6 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object L5 ) {  <CR> Letter b3 = ( Letter ) L5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String m3 ) {  <CR> int N4 = 0 ;  <CR> for ( int g9 = 0 ; g9 < m3 . length ( ) ; g9 ++ ) {  <CR> char c9 = m3 . charAt ( g9 ) ;  <CR> N4 = N4 * 10 + c9 - '0' ;  <CR> }  <CR> return N4 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] A2 ) {  <CR> Letter [ ] X1 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( X1 ) ;  <CR> for ( int x5 = 0 ; x5 < 3 ; x5 ++ )  <CR> X1 [ x5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 