 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String n , String e1 , String i9 , String N8 , String T1 ) {  <CR> super ( n , e1 , i9 , N8 , T1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String j0 , String H8 , String A3 , String K6 , String a3 ) {  <CR> super ( j0 , H8 , A3 , K6 , a3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Envelop ( String b , String j0 , Letter R9 ) {  <CR> this . senderAddr = b ;  <CR> this . receiverAddr = j0 ;  <CR> this . letter = R9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> public int compareTo ( Object t3 ) {  <CR> Letter e = ( Letter ) t3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String a6 , String f5 , String X7 , String p4 , String q5 ) {  <CR> this . title = a6 ;  <CR> this . receiver = f5 ;  <CR> this . content = X7 ;  <CR> this . sender = p4 ;  <CR> this . date = q5 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String Y2 ) {  <CR> int M3 = 0 ;  <CR> for ( int w = 0 ; w < Y2 . length ( ) ; w ++ ) {  <CR> char A1 = Y2 . charAt ( w ) ;  <CR> M3 = M3 * 10 + A1 - '0' ;  <CR> }  <CR> return M3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] A8 ) {  <CR> Letter [ ] t0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( t0 ) ;  <CR> for ( int Y8 = 0 ; Y8 < 3 ; Y8 ++ )  <CR> t0 [ Y8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 