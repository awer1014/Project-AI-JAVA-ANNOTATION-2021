 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String G9 , String q4 , String e2 , String H9 , String W5 ) {  <CR> super ( G9 , q4 , e2 , H9 , W5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String p7 , String Z7 , String A6 , String O0 , String F2 ) {  <CR> super ( p7 , Z7 , A6 , O0 , F2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String i1 , String f5 , Letter N7 ) {  <CR> this . senderAddr = i1 ;  <CR> this . receiverAddr = f5 ;  <CR> this . letter = N7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String u7 ) {  <CR> int x8 = 0 ;  <CR> for ( int O2 = 0 ; O2 < u7 . length ( ) ; O2 ++ ) {  <CR> char C9 = u7 . charAt ( O2 ) ;  <CR> x8 = x8 * 10 + C9 - '0' ;  <CR> }  <CR> return x8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object O6 ) {  <CR> Letter X2 = ( Letter ) O6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String q3 , String p4 , String s7 , String R3 , String Q7 ) {  <CR> this . title = q3 ;  <CR> this . receiver = p4 ;  <CR> this . content = s7 ;  <CR> this . sender = R3 ;  <CR> this . date = Q7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] L6 ) {  <CR> Letter [ ] m6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( m6 ) ;  <CR> for ( int X9 = 0 ; X9 < 3 ; X9 ++ )  <CR> m6 [ X9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 