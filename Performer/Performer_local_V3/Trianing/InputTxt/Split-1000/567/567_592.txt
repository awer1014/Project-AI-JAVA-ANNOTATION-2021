 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String z2 , String X8 , String Y9 , String s1 , String s9 ) {  <CR> super ( z2 , X8 , Y9 , s1 , s9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String b1 , String x7 , String Z0 , String O2 , String J1 ) {  <CR> super ( b1 , x7 , Z0 , O2 , J1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String G9 , String Z5 , Letter C2 ) {  <CR> this . senderAddr = G9 ;  <CR> this . receiverAddr = Z5 ;  <CR> this . letter = C2 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> int valueOf ( String e9 ) {  <CR> int P8 = 0 ;  <CR> for ( int q3 = 0 ; q3 < e9 . length ( ) ; q3 ++ ) {  <CR> char p4 = e9 . charAt ( q3 ) ;  <CR> P8 = P8 * 10 + p4 - '0' ;  <CR> }  <CR> return P8 ;  <CR> }  <CR> Letter ( String E3 , String C8 , String M1 , String a , String E4 ) {  <CR> this . title = E3 ;  <CR> this . receiver = C8 ;  <CR> this . content = M1 ;  <CR> this . sender = a ;  <CR> this . date = E4 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object h ) {  <CR> Letter W8 = ( Letter ) h ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] t9 ) {  <CR> Letter [ ] C7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( C7 ) ;  <CR> for ( int l6 = 0 ; l6 < 3 ; l6 ++ )  <CR> C7 [ l6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 