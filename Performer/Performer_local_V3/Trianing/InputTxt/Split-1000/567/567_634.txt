 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String k7 , String S2 , String y6 , String M1 , String o8 ) {  <CR> super ( k7 , S2 , y6 , M1 , o8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String z3 , String t4 , String p2 , String H5 , String O3 ) {  <CR> super ( z3 , t4 , p2 , H5 , O3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String H8 , String C0 , Letter F9 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = C0 ;  <CR> this . letter = F9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> Letter ( String D7 , String r6 , String P3 , String s6 , String a5 ) {  <CR> this . title = D7 ;  <CR> this . receiver = r6 ;  <CR> this . content = P3 ;  <CR> this . sender = s6 ;  <CR> this . date = a5 ;  <CR> }  <CR> public int compareTo ( Object Z1 ) {  <CR> Letter d3 = ( Letter ) Z1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String K8 ) {  <CR> int U9 = 0 ;  <CR> for ( int D8 = 0 ; D8 < K8 . length ( ) ; D8 ++ ) {  <CR> char P1 = K8 . charAt ( D8 ) ;  <CR> U9 = U9 * 10 + P1 - '0' ;  <CR> }  <CR> return U9 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] J2 ) {  <CR> Letter [ ] H6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( H6 ) ;  <CR> for ( int L7 = 0 ; L7 < 3 ; L7 ++ )  <CR> H6 [ L7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 