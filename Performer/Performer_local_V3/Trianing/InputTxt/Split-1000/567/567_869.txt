 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String h9 , String g2 , String m6 , String a4 , String G2 ) {  <CR> super ( h9 , g2 , m6 , a4 , G2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String K0 , String b9 , String F4 , String E5 , String l9 ) {  <CR> super ( K0 , b9 , F4 , E5 , l9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String r , String b8 , Letter Y1 ) {  <CR> this . senderAddr = r ;  <CR> this . receiverAddr = b8 ;  <CR> this . letter = Y1 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object a9 ) {  <CR> Letter W6 = ( Letter ) a9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String i5 , String q3 , String j6 , String q5 , String Z1 ) {  <CR> this . title = i5 ;  <CR> this . receiver = q3 ;  <CR> this . content = j6 ;  <CR> this . sender = q5 ;  <CR> this . date = Z1 ;  <CR> }  <CR> int valueOf ( String X0 ) {  <CR> int v9 = 0 ;  <CR> for ( int U6 = 0 ; U6 < X0 . length ( ) ; U6 ++ ) {  <CR> char C5 = X0 . charAt ( U6 ) ;  <CR> v9 = v9 * 10 + C5 - '0' ;  <CR> }  <CR> return v9 ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] a3 ) {  <CR> Letter [ ] n0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( n0 ) ;  <CR> for ( int H2 = 0 ; H2 < 3 ; H2 ++ )  <CR> n0 [ H2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 