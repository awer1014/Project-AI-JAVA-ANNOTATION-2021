 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String W1 , String x5 , String J1 , String N9 , String L6 ) {  <CR> super ( W1 , x5 , J1 , N9 , L6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String s3 , String G7 , String K4 , String W4 , String r8 ) {  <CR> super ( s3 , G7 , K4 , W4 , r8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String g , String Q3 , Letter E4 ) {  <CR> this . senderAddr = g ;  <CR> this . receiverAddr = Q3 ;  <CR> this . letter = E4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> public int compareTo ( Object M8 ) {  <CR> Letter v3 = ( Letter ) M8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String H7 , String m , String O7 , String t5 , String e2 ) {  <CR> this . title = H7 ;  <CR> this . receiver = m ;  <CR> this . content = O7 ;  <CR> this . sender = t5 ;  <CR> this . date = e2 ;  <CR> }  <CR> int valueOf ( String l4 ) {  <CR> int H2 = 0 ;  <CR> for ( int g6 = 0 ; g6 < l4 . length ( ) ; g6 ++ ) {  <CR> char v7 = l4 . charAt ( g6 ) ;  <CR> H2 = H2 * 10 + v7 - '0' ;  <CR> }  <CR> return H2 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] g3 ) {  <CR> Letter [ ] Y7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( Y7 ) ;  <CR> for ( int t6 = 0 ; t6 < 3 ; t6 ++ )  <CR> Y7 [ t6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 