 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String G6 , String N8 , String l7 , String C9 , String x ) {  <CR> super ( G6 , N8 , l7 , C9 , x ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String A7 , String b4 , String r3 , String v7 , String q1 ) {  <CR> super ( A7 , b4 , r3 , v7 , q1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String s6 , String i5 , Letter s1 ) {  <CR> this . senderAddr = s6 ;  <CR> this . receiverAddr = i5 ;  <CR> this . letter = s1 ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String A1 , String s , String Y2 , String e0 , String P9 ) {  <CR> this . title = A1 ;  <CR> this . receiver = s ;  <CR> this . content = Y2 ;  <CR> this . sender = e0 ;  <CR> this . date = P9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> public int compareTo ( Object W1 ) {  <CR> Letter V5 = ( Letter ) W1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String v0 ) {  <CR> int l2 = 0 ;  <CR> for ( int S0 = 0 ; S0 < v0 . length ( ) ; S0 ++ ) {  <CR> char u3 = v0 . charAt ( S0 ) ;  <CR> l2 = l2 * 10 + u3 - '0' ;  <CR> }  <CR> return l2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] A7 ) {  <CR> Letter [ ] s3 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( s3 ) ;  <CR> for ( int F9 = 0 ; F9 < 3 ; F9 ++ )  <CR> s3 [ F9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 