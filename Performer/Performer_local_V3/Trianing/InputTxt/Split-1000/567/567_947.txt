 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e , String N2 , String a2 , String v2 , String g9 ) {  <CR> super ( e , N2 , a2 , v2 , g9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String X , String V9 , String s9 , String U9 , String o3 ) {  <CR> super ( X , V9 , s9 , U9 , o3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String c2 , String U1 , Letter a8 ) {  <CR> this . senderAddr = c2 ;  <CR> this . receiverAddr = U1 ;  <CR> this . letter = a8 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object e4 ) {  <CR> Letter a7 = ( Letter ) e4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> int valueOf ( String w2 ) {  <CR> int b9 = 0 ;  <CR> for ( int I9 = 0 ; I9 < w2 . length ( ) ; I9 ++ ) {  <CR> char n1 = w2 . charAt ( I9 ) ;  <CR> b9 = b9 * 10 + n1 - '0' ;  <CR> }  <CR> return b9 ;  <CR> }  <CR> Letter ( String n9 , String R , String d5 , String G7 , String w9 ) {  <CR> this . title = n9 ;  <CR> this . receiver = R ;  <CR> this . content = d5 ;  <CR> this . sender = G7 ;  <CR> this . date = w9 ;  <CR> }  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] h7 ) {  <CR> Letter [ ] h5 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( h5 ) ;  <CR> for ( int U1 = 0 ; U1 < 3 ; U1 ++ )  <CR> h5 [ U1 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 