 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String d1 , String I5 , String b1 , String O2 , String l8 ) {  <CR> super ( d1 , I5 , b1 , O2 , l8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Y6 , String Y1 , String O9 , String z3 , String a5 ) {  <CR> super ( Y6 , Y1 , O9 , z3 , a5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String d4 , String K1 , Letter R6 ) {  <CR> this . senderAddr = d4 ;  <CR> this . receiverAddr = K1 ;  <CR> this . letter = R6 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> Letter ( String n0 , String y6 , String E2 , String S0 , String Z1 ) {  <CR> this . title = n0 ;  <CR> this . receiver = y6 ;  <CR> this . content = E2 ;  <CR> this . sender = S0 ;  <CR> this . date = Z1 ;  <CR> }  <CR> int valueOf ( String J0 ) {  <CR> int D5 = 0 ;  <CR> for ( int U3 = 0 ; U3 < J0 . length ( ) ; U3 ++ ) {  <CR> char E = J0 . charAt ( U3 ) ;  <CR> D5 = D5 * 10 + E - '0' ;  <CR> }  <CR> return D5 ;  <CR> }  <CR> public int compareTo ( Object u9 ) {  <CR> Letter t9 = ( Letter ) u9 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] U1 ) {  <CR> Letter [ ] e7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( e7 ) ;  <CR> for ( int b4 = 0 ; b4 < 3 ; b4 ++ )  <CR> e7 [ b4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 