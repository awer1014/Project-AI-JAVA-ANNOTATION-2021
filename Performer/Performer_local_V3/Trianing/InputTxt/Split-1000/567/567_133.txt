 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o2 , String v8 , String a9 , String N8 , String h3 ) {  <CR> super ( o2 , v8 , a9 , N8 , h3 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String U , String p0 , String P6 , String W5 , String M5 ) {  <CR> super ( U , p0 , P6 , W5 , M5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String p8 , String M7 , Letter r8 ) {  <CR> this . senderAddr = p8 ;  <CR> this . receiverAddr = M7 ;  <CR> this . letter = r8 ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String f3 ) {  <CR> int P6 = 0 ;  <CR> for ( int N5 = 0 ; N5 < f3 . length ( ) ; N5 ++ ) {  <CR> char u5 = f3 . charAt ( N5 ) ;  <CR> P6 = P6 * 10 + u5 - '0' ;  <CR> }  <CR> return P6 ;  <CR> }  <CR> Letter ( String F6 , String m2 , String Z3 , String W5 , String L5 ) {  <CR> this . title = F6 ;  <CR> this . receiver = m2 ;  <CR> this . content = Z3 ;  <CR> this . sender = W5 ;  <CR> this . date = L5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> boolean same ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object p4 ) {  <CR> Letter D3 = ( Letter ) p4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] c6 ) {  <CR> Letter [ ] z0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( z0 ) ;  <CR> for ( int X = 0 ; X < 3 ; X ++ )  <CR> z0 [ X ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 