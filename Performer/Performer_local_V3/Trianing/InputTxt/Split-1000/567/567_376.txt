 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String J1 , String Y0 , String k5 , String I0 , String D1 ) {  <CR> super ( J1 , Y0 , k5 , I0 , D1 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String V , String W1 , String A7 , String C8 , String Y ) {  <CR> super ( V , W1 , A7 , C8 , Y ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String p6 , String e0 , Letter L1 ) {  <CR> this . senderAddr = p6 ;  <CR> this . receiverAddr = e0 ;  <CR> this . letter = L1 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String d , String d7 , String U1 , String R0 , String m ) {  <CR> this . title = d ;  <CR> this . receiver = d7 ;  <CR> this . content = U1 ;  <CR> this . sender = R0 ;  <CR> this . date = m ;  <CR> }  <CR> public int compareTo ( Object R8 ) {  <CR> Letter t6 = ( Letter ) R8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String G7 ) {  <CR> int Z5 = 0 ;  <CR> for ( int q3 = 0 ; q3 < G7 . length ( ) ; q3 ++ ) {  <CR> char W9 = G7 . charAt ( q3 ) ;  <CR> Z5 = Z5 * 10 + W9 - '0' ;  <CR> }  <CR> return Z5 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] H5 ) {  <CR> Letter [ ] p2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( p2 ) ;  <CR> for ( int P = 0 ; P < 3 ; P ++ )  <CR> p2 [ P ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 