 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String u , String M1 , String f7 , String H9 , String i1 ) {  <CR> super ( u , M1 , f7 , H9 , i1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String d2 , String v , String g1 , String O , String R9 ) {  <CR> super ( d2 , v , g1 , O , R9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String d3 , String k7 , Letter v8 ) {  <CR> this . senderAddr = d3 ;  <CR> this . receiverAddr = k7 ;  <CR> this . letter = v8 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String o8 ) {  <CR> int r5 = 0 ;  <CR> for ( int W8 = 0 ; W8 < o8 . length ( ) ; W8 ++ ) {  <CR> char U5 = o8 . charAt ( W8 ) ;  <CR> r5 = r5 * 10 + U5 - '0' ;  <CR> }  <CR> return r5 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> Letter ( String y6 , String V , String d3 , String h9 , String T4 ) {  <CR> this . title = y6 ;  <CR> this . receiver = V ;  <CR> this . content = d3 ;  <CR> this . sender = h9 ;  <CR> this . date = T4 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object o7 ) {  <CR> Letter F1 = ( Letter ) o7 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] I ) {  <CR> Letter [ ] u0 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( u0 ) ;  <CR> for ( int T6 = 0 ; T6 < 3 ; T6 ++ )  <CR> u0 [ T6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 