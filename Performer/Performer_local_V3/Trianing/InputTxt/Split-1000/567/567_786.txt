 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String R6 , String U , String W1 , String k8 , String A0 ) {  <CR> super ( R6 , U , W1 , k8 , A0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String Z5 , String U0 , String W6 , String A2 , String o ) {  <CR> super ( Z5 , U0 , W6 , A2 , o ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String r7 , String E2 , Letter u4 ) {  <CR> this . senderAddr = r7 ;  <CR> this . receiverAddr = E2 ;  <CR> this . letter = u4 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> public int compareTo ( Object n4 ) {  <CR> Letter w = ( Letter ) n4 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String J9 ) {  <CR> int q7 = 0 ;  <CR> for ( int x3 = 0 ; x3 < J9 . length ( ) ; x3 ++ ) {  <CR> char v2 = J9 . charAt ( x3 ) ;  <CR> q7 = q7 * 10 + v2 - '0' ;  <CR> }  <CR> return q7 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> Letter ( String T1 , String v8 , String L2 , String s7 , String Q9 ) {  <CR> this . title = T1 ;  <CR> this . receiver = v8 ;  <CR> this . content = L2 ;  <CR> this . sender = s7 ;  <CR> this . date = Q9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B4 ) {  <CR> Letter [ ] F7 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( F7 ) ;  <CR> for ( int T8 = 0 ; T8 < 3 ; T8 ++ )  <CR> F7 [ T8 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 