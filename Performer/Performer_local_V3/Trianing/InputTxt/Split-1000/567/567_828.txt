 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String l3 , String D6 , String w3 , String X1 , String N4 ) {  <CR> super ( l3 , D6 , w3 , X1 , N4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String n2 , String z , String E7 , String Q4 , String a7 ) {  <CR> super ( n2 , z , E7 , Q4 , a7 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> Envelop ( String d5 , String b6 , Letter M8 ) {  <CR> this . senderAddr = d5 ;  <CR> this . receiverAddr = b6 ;  <CR> this . letter = M8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> int valueOf ( String q ) {  <CR> int C4 = 0 ;  <CR> for ( int p0 = 0 ; p0 < q . length ( ) ; p0 ++ ) {  <CR> char R9 = q . charAt ( p0 ) ;  <CR> C4 = C4 * 10 + R9 - '0' ;  <CR> }  <CR> return C4 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String o1 , String A , String o0 , String t6 , String p9 ) {  <CR> this . title = o1 ;  <CR> this . receiver = A ;  <CR> this . content = o0 ;  <CR> this . sender = t6 ;  <CR> this . date = p9 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object R8 ) {  <CR> Letter b2 = ( Letter ) R8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o0 ) {  <CR> Letter [ ] n4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( n4 ) ;  <CR> for ( int f9 = 0 ; f9 < 3 ; f9 ++ )  <CR> n4 [ f9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 