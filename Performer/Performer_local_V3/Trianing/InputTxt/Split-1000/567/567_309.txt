 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String Y , String o4 , String a3 , String p9 , String v9 ) {  <CR> super ( Y , o4 , a3 , p9 , v9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String Z2 , String k9 , String G6 , String D5 , String W1 ) {  <CR> super ( Z2 , k9 , G6 , D5 , W1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String I , String r1 , Letter G5 ) {  <CR> this . senderAddr = I ;  <CR> this . receiverAddr = r1 ;  <CR> this . letter = G5 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String C6 , String V0 , String k4 , String p5 , String c2 ) {  <CR> this . title = C6 ;  <CR> this . receiver = V0 ;  <CR> this . content = k4 ;  <CR> this . sender = p5 ;  <CR> this . date = c2 ;  <CR> }  <CR> int valueOf ( String O6 ) {  <CR> int u5 = 0 ;  <CR> for ( int r1 = 0 ; r1 < O6 . length ( ) ; r1 ++ ) {  <CR> char Q4 = O6 . charAt ( r1 ) ;  <CR> u5 = u5 * 10 + Q4 - '0' ;  <CR> }  <CR> return u5 ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object x6 ) {  <CR> Letter T6 = ( Letter ) x6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] u3 ) {  <CR> Letter [ ] v2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( v2 ) ;  <CR> for ( int m5 = 0 ; m5 < 3 ; m5 ++ )  <CR> v2 [ m5 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 