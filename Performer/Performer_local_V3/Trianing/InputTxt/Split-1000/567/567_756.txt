 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String M6 , String y6 , String C7 , String t8 , String r2 ) {  <CR> super ( M6 , y6 , C7 , t8 , r2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String V0 , String q3 , String P , String w9 , String H5 ) {  <CR> super ( V0 , q3 , P , w9 , H5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String f9 , String T , Letter b0 ) {  <CR> this . senderAddr = f9 ;  <CR> this . receiverAddr = T ;  <CR> this . letter = b0 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> Letter ( String Y0 , String a3 , String M2 , String R , String a5 ) {  <CR> this . title = Y0 ;  <CR> this . receiver = a3 ;  <CR> this . content = M2 ;  <CR> this . sender = R ;  <CR> this . date = a5 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object E8 ) {  <CR> Letter o2 = ( Letter ) E8 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String G0 ) {  <CR> int T3 = 0 ;  <CR> for ( int K9 = 0 ; K9 < G0 . length ( ) ; K9 ++ ) {  <CR> char S9 = G0 . charAt ( K9 ) ;  <CR> T3 = T3 * 10 + S9 - '0' ;  <CR> }  <CR> return T3 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] c8 ) {  <CR> Letter [ ] n8 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( n8 ) ;  <CR> for ( int A6 = 0 ; A6 < 3 ; A6 ++ )  <CR> n8 [ A6 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 