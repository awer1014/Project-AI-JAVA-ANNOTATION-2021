 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String o1 , String v4 , String e7 , String K8 , String I5 ) {  <CR> super ( o1 , v4 , e7 , K8 , I5 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String j8 , String s1 , String i1 , String E6 , String V8 ) {  <CR> super ( j8 , s1 , i1 , E6 , V8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String q2 , String h8 , Letter W5 ) {  <CR> this . senderAddr = q2 ;  <CR> this . receiverAddr = h8 ;  <CR> this . letter = W5 ;  <CR> }  <CR> String receiverAddr ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> int valueOf ( String w6 ) {  <CR> int s7 = 0 ;  <CR> for ( int R5 = 0 ; R5 < w6 . length ( ) ; R5 ++ ) {  <CR> char S3 = w6 . charAt ( R5 ) ;  <CR> s7 = s7 * 10 + S3 - '0' ;  <CR> }  <CR> return s7 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object b3 ) {  <CR> Letter N1 = ( Letter ) b3 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> boolean same ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String S4 , String N8 , String u5 , String D8 , String r3 ) {  <CR> this . title = S4 ;  <CR> this . receiver = N8 ;  <CR> this . content = u5 ;  <CR> this . sender = D8 ;  <CR> this . date = r3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] J5 ) {  <CR> Letter [ ] b = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b ) ;  <CR> for ( int v2 = 0 ; v2 < 3 ; v2 ++ )  <CR> b [ v2 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 