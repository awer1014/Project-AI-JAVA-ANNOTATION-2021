 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String H3 , String v7 , String y4 , String Q1 , String A9 ) {  <CR> super ( H3 , v7 , y4 , Q1 , A9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String C6 , String e6 , String C0 , String q0 , String u0 ) {  <CR> super ( C6 , e6 , C0 , q0 , u0 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Envelop ( String y1 , String u7 , Letter j2 ) {  <CR> this . senderAddr = y1 ;  <CR> this . receiverAddr = u7 ;  <CR> this . letter = j2 ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> Letter ( String I3 , String l3 , String j0 , String Z1 , String Q3 ) {  <CR> this . title = I3 ;  <CR> this . receiver = l3 ;  <CR> this . content = j0 ;  <CR> this . sender = Z1 ;  <CR> this . date = Q3 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String I ) {  <CR> int n5 = 0 ;  <CR> for ( int f = 0 ; f < I . length ( ) ; f ++ ) {  <CR> char n3 = I . charAt ( f ) ;  <CR> n5 = n5 * 10 + n3 - '0' ;  <CR> }  <CR> return n5 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object V1 ) {  <CR> Letter f0 = ( Letter ) V1 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] k6 ) {  <CR> Letter [ ] o2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( o2 ) ;  <CR> for ( int f = 0 ; f < 3 ; f ++ )  <CR> o2 [ f ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 