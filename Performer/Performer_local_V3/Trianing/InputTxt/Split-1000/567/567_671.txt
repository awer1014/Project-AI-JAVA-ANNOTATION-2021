 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String E1 , String D6 , String x7 , String k1 , String h ) {  <CR> super ( E1 , D6 , x7 , k1 , h ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String b8 , String r4 , String G3 , String a7 , String M9 ) {  <CR> super ( b8 , r4 , G3 , a7 , M9 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> Envelop ( String k , String b2 , Letter U1 ) {  <CR> this . senderAddr = k ;  <CR> this . receiverAddr = b2 ;  <CR> this . letter = U1 ;  <CR> }  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> int valueOf ( String c ) {  <CR> int g2 = 0 ;  <CR> for ( int c5 = 0 ; c5 < c . length ( ) ; c5 ++ ) {  <CR> char N8 = c . charAt ( c5 ) ;  <CR> g2 = g2 * 10 + N8 - '0' ;  <CR> }  <CR> return g2 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> Letter ( String V5 , String R0 , String o6 , String l , String p7 ) {  <CR> this . title = V5 ;  <CR> this . receiver = R0 ;  <CR> this . content = o6 ;  <CR> this . sender = l ;  <CR> this . date = p7 ;  <CR> }  <CR> public int compareTo ( Object v6 ) {  <CR> Letter x = ( Letter ) v6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] e9 ) {  <CR> Letter [ ] M6 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( M6 ) ;  <CR> for ( int l9 = 0 ; l9 < 3 ; l9 ++ )  <CR> M6 [ l9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 