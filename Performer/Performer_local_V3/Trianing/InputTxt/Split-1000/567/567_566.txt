 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String c0 , String a5 , String D5 , String O , String J4 ) {  <CR> super ( c0 , a5 , D5 , O , J4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String h1 , String u1 , String d9 , String w2 , String n8 ) {  <CR> super ( h1 , u1 , d9 , w2 , n8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String h1 , String O9 , Letter s2 ) {  <CR> this . senderAddr = h1 ;  <CR> this . receiverAddr = O9 ;  <CR> this . letter = s2 ;  <CR> }  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public int compareTo ( Object J5 ) {  <CR> Letter C = ( Letter ) J5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String k3 , String k1 , String D4 , String N2 , String Y0 ) {  <CR> this . title = k3 ;  <CR> this . receiver = k1 ;  <CR> this . content = D4 ;  <CR> this . sender = N2 ;  <CR> this . date = Y0 ;  <CR> }  <CR> boolean same ;  <CR> int valueOf ( String D2 ) {  <CR> int c4 = 0 ;  <CR> for ( int y3 = 0 ; y3 < D2 . length ( ) ; y3 ++ ) {  <CR> char J0 = D2 . charAt ( y3 ) ;  <CR> c4 = c4 * 10 + J0 - '0' ;  <CR> }  <CR> return c4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] B8 ) {  <CR> Letter [ ] z4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( z4 ) ;  <CR> for ( int s3 = 0 ; s3 < 3 ; s3 ++ )  <CR> z4 [ s3 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 