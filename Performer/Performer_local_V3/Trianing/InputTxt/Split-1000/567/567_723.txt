 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String P , String c1 , String B2 , String b0 , String k8 ) {  <CR> super ( P , c1 , B2 , b0 , k8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> EnglishLetter ( String q1 , String y0 , String v3 , String o4 , String U5 ) {  <CR> super ( q1 , y0 , v3 , o4 , U5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Envelop ( String A7 , String C4 , Letter b0 ) {  <CR> this . senderAddr = A7 ;  <CR> this . receiverAddr = C4 ;  <CR> this . letter = b0 ;  <CR> }  <CR> String senderAddr ;  <CR> Letter letter ;  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> boolean same ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String Q4 , String C3 , String N8 , String o6 , String P8 ) {  <CR> this . title = Q4 ;  <CR> this . receiver = C3 ;  <CR> this . content = N8 ;  <CR> this . sender = o6 ;  <CR> this . date = P8 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> int valueOf ( String K9 ) {  <CR> int l9 = 0 ;  <CR> for ( int H2 = 0 ; H2 < K9 . length ( ) ; H2 ++ ) {  <CR> char M3 = K9 . charAt ( H2 ) ;  <CR> l9 = l9 * 10 + M3 - '0' ;  <CR> }  <CR> return l9 ;  <CR> }  <CR> public int compareTo ( Object L6 ) {  <CR> Letter G4 = ( Letter ) L6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] k2 ) {  <CR> Letter [ ] D = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( D ) ;  <CR> for ( int I9 = 0 ; I9 < 3 ; I9 ++ )  <CR> D [ I9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 