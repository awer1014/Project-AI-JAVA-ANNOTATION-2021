 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l6 , String y4 , String H1 , String W , String t2 ) {  <CR> super ( l6 , y4 , H1 , W , t2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String q3 , String t1 , String m3 , String S5 , String w2 ) {  <CR> super ( q3 , t1 , m3 , S5 , w2 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String receiverAddr ;  <CR> Envelop ( String Z7 , String M2 , Letter S ) {  <CR> this . senderAddr = Z7 ;  <CR> this . receiverAddr = M2 ;  <CR> this . letter = S ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> int valueOf ( String F7 ) {  <CR> int o6 = 0 ;  <CR> for ( int j5 = 0 ; j5 < F7 . length ( ) ; j5 ++ ) {  <CR> char L0 = F7 . charAt ( j5 ) ;  <CR> o6 = o6 * 10 + L0 - '0' ;  <CR> }  <CR> return o6 ;  <CR> }  <CR> public int compareTo ( Object X2 ) {  <CR> Letter y2 = ( Letter ) X2 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> Letter ( String r7 , String v7 , String j , String r1 , String A6 ) {  <CR> this . title = r7 ;  <CR> this . receiver = v7 ;  <CR> this . content = j ;  <CR> this . sender = r1 ;  <CR> this . date = A6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] p7 ) {  <CR> Letter [ ] b = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( b ) ;  <CR> for ( int F7 = 0 ; F7 < 3 ; F7 ++ )  <CR> b [ F7 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 