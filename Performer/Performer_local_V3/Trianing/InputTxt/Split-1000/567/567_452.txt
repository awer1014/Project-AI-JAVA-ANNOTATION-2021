 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String l9 , String K6 , String h6 , String t2 , String E6 ) {  <CR> super ( l9 , K6 , h6 , t2 , E6 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String y5 , String c , String X , String d6 , String B8 ) {  <CR> super ( y5 , c , X , d6 , B8 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> String senderAddr ;  <CR> Envelop ( String a4 , String i2 , Letter B ) {  <CR> this . senderAddr = a4 ;  <CR> this . receiverAddr = i2 ;  <CR> this . letter = B ;  <CR> }  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> int valueOf ( String I5 ) {  <CR> int N3 = 0 ;  <CR> for ( int D8 = 0 ; D8 < I5 . length ( ) ; D8 ++ ) {  <CR> char a7 = I5 . charAt ( D8 ) ;  <CR> N3 = N3 * 10 + a7 - '0' ;  <CR> }  <CR> return N3 ;  <CR> }  <CR> Letter ( String P1 , String j1 , String e4 , String R2 , String j4 ) {  <CR> this . title = P1 ;  <CR> this . receiver = j1 ;  <CR> this . content = e4 ;  <CR> this . sender = R2 ;  <CR> this . date = j4 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object u5 ) {  <CR> Letter l5 = ( Letter ) u5 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> boolean same ;  <CR> String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] w7 ) {  <CR> Letter [ ] S4 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( S4 ) ;  <CR> for ( int w4 = 0 ; w4 < 3 ; w4 ++ )  <CR> S4 [ w4 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 