 <BOC> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . print ( receiver + title + " " + "您好" + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( sender + " " + "敬上" + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> ChineseLetter ( String z7 , String e8 , String H8 , String y2 , String D5 ) {  <CR> super ( z7 , e8 , H8 , y2 , D5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String Q3 , String l3 , String L4 , String f3 , String I4 ) {  <CR> super ( Q3 , l3 , L4 , f3 , I4 ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . print ( "Dear" + " " + title + " " + receiver + "\r\n" ) ;  <CR> System . out . print ( content + "\r\n" ) ;  <CR> System . out . print ( "Sincerely" + "\r\n" ) ;  <CR> System . out . print ( sender + "\r\n" ) ;  <CR> System . out . print ( date + "\r\n" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String Z9 , String w9 , Letter x2 ) {  <CR> this . senderAddr = Z9 ;  <CR> this . receiverAddr = w9 ;  <CR> this . letter = x2 ;  <CR> }  <CR> String receiverAddr ;  <CR> void display ( ) {  <CR> System . out . print ( "From:" + senderAddr + "," + " " + letter . sender + "\r\n" ) ;  <CR> System . out . print ( "To:" + " " + receiverAddr + " " + letter . receiver + " " + letter . title + " " + "\r\n" ) ;  <CR> System . out . print ( "信件內容:" + "\r\n" ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> Letter ( String G8 , String C2 , String C4 , String e6 , String j1 ) {  <CR> this . title = G8 ;  <CR> this . receiver = C2 ;  <CR> this . content = C4 ;  <CR> this . sender = e6 ;  <CR> this . date = j1 ;  <CR> }  <CR> public int compareTo ( Object A6 ) {  <CR> Letter I4 = ( Letter ) A6 ;  <CR> same = false ;  <CR> if ( valueOf ( this . date . substring ( 0 , 10 ) ) > valueOf ( o . date . substring ( 0 , 10 ) ) ) return 1 ;  <CR> else if ( valueOf ( this . date . substring ( 0 , 10 ) ) == valueOf ( o . date . substring ( 0 , 10 ) ) ) {  <CR> return 0 ;  <CR> }  <CR> else return - 1 ;  <CR> }  <CR> abstract protected void display ( ) ;  <CR> int valueOf ( String L4 ) {  <CR> int Q4 = 0 ;  <CR> for ( int C6 = 0 ; C6 < L4 . length ( ) ; C6 ++ ) {  <CR> char g9 = L4 . charAt ( C6 ) ;  <CR> Q4 = Q4 * 10 + g9 - '0' ;  <CR> }  <CR> return Q4 ;  <CR> }  <CR> boolean same ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> import java . util . Arrays ;  <CR> public class test {  <CR> public static void main ( String [ ] o1 ) {  <CR> Letter [ ] j2 = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2018/11/01" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Arrays . sort ( j2 ) ;  <CR> for ( int X9 = 0 ; X9 < 3 ; X9 ++ )  <CR> j2 [ X9 ] . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 