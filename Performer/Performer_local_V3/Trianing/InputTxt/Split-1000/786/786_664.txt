 <BOC> public class Exam extends Test {  <CR> public Exam ( String j1 , String f6 , double b5 , double W9 ) {  <CR> super ( j1 , f6 , b5 , W9 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String K0 , String M5 , double d5 , double A7 ) {  <CR> super ( K0 , M5 , d5 , A7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] h2 ) {  <CR> Scanner x = new Scanner ( System . in ) ;  <CR> boolean o8 = true ;  <CR> while ( o8 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String q7 = x . nextLine ( ) ;  <CR> if ( q7 . equals ( "0" ) ) {  <CR> o8 = false ;  <CR> break ;  <CR> }  <CR> if ( q7 . equals ( "測驗" ) || q7 . equals ( "作業" ) || q7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String o2 = x . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String S0 = x . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double T = Double . parseDouble ( x . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double I2 = Double . parseDouble ( x . nextLine ( ) ) ;  <CR> String P5 = null ;  <CR> String u2 = null ;  <CR> String W9 = null ;  <CR> String e0 = null ;  <CR> String u9 = null ;  <CR> String l6 = null ;  <CR> if ( q7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> W9 = x . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> e0 = x . nextLine ( ) ;  <CR> }  <CR> if ( q7 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> P5 = x . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> u2 = x . nextLine ( ) ;  <CR> }  <CR> if ( q7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> u9 = x . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> l6 = x . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test Q9 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( q7 . equals ( "測驗" ) )  <CR> Q9 = new Exam ( o2 , S0 , T , I2 ) ;  <CR> else if ( q7 . equals ( "作業" ) )  <CR> Q9 = new HomeWork ( o2 , S0 , T , I2 ) ;  <CR> else if ( q7 . equals ( "心得報告" ) )  <CR> Q9 = new Report ( o2 , S0 , T , I2 ) ;  <CR> if ( Q9 != null ) {  <CR> Q9 . print ( ) ;  <CR> if ( q7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + W9 ) ;  <CR> System . out . println ( "考試範圍：" + e0 ) ;  <CR> }  <CR> else if ( q7 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + P5 ) ;  <CR> System . out . println ( "作業描述：" + u2 ) ;  <CR> }  <CR> else if ( q7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + u9 ) ;  <CR> System . out . println ( "參考文獻：" + l6 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> Q9 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String d9 , String A5 , double Z6 , double e ) {  <CR> super ( d9 , A5 , Z6 , e ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String number ;  <CR> String info ;  <CR> abstract public void print ( ) ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private String time , range , end_time , description ;  <CR> public Test ( String D , String w3 , double v0 , double H7 ) {  <CR> number = D ;  <CR> name = w3 ;  <CR> score = v0 ;  <CR> propotation = H7 ;  <CR> }  <CR> private String name ;  <CR> private double score ;  <CR> String info_description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 