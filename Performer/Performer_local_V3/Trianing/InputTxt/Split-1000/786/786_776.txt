 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String U9 , String F7 , double l , double b5 ) {  <CR> super ( U9 , F7 , l , b5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String r4 , String C6 , double S1 , double k2 ) {  <CR> super ( r4 , C6 , S1 , k2 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] W ) {  <CR> Scanner L = new Scanner ( System . in ) ;  <CR> boolean Z4 = true ;  <CR> while ( Z4 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String B7 = L . nextLine ( ) ;  <CR> if ( B7 . equals ( "0" ) ) {  <CR> Z4 = false ;  <CR> break ;  <CR> }  <CR> if ( B7 . equals ( "測驗" ) || B7 . equals ( "作業" ) || B7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String g5 = L . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String m5 = L . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double k3 = Double . parseDouble ( L . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double x7 = Double . parseDouble ( L . nextLine ( ) ) ;  <CR> String o7 = null ;  <CR> String R4 = null ;  <CR> String y3 = null ;  <CR> String Q9 = null ;  <CR> String X9 = null ;  <CR> String l7 = null ;  <CR> if ( B7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> y3 = L . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> Q9 = L . nextLine ( ) ;  <CR> }  <CR> if ( B7 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> o7 = L . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> R4 = L . nextLine ( ) ;  <CR> }  <CR> if ( B7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> X9 = L . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> l7 = L . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test x6 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( B7 . equals ( "測驗" ) )  <CR> x6 = new Exam ( g5 , m5 , k3 , x7 ) ;  <CR> else if ( B7 . equals ( "作業" ) )  <CR> x6 = new HomeWork ( g5 , m5 , k3 , x7 ) ;  <CR> else if ( B7 . equals ( "心得報告" ) )  <CR> x6 = new Report ( g5 , m5 , k3 , x7 ) ;  <CR> if ( x6 != null ) {  <CR> x6 . print ( ) ;  <CR> if ( B7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + y3 ) ;  <CR> System . out . println ( "考試範圍：" + Q9 ) ;  <CR> }  <CR> else if ( B7 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + o7 ) ;  <CR> System . out . println ( "作業描述：" + R4 ) ;  <CR> }  <CR> else if ( B7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + X9 ) ;  <CR> System . out . println ( "參考文獻：" + l7 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> x6 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String D6 , String A , double U8 , double M5 ) {  <CR> super ( D6 , A , U8 , M5 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private double score ;  <CR> private String time , range , end_time , description ;  <CR> String info ;  <CR> private String number ;  <CR> private String name ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> public Test ( String s1 , String l8 , double V7 , double E8 ) {  <CR> number = s1 ;  <CR> name = l8 ;  <CR> score = V7 ;  <CR> propotation = E8 ;  <CR> }  <CR> abstract public void print ( ) ;  <CR> String info_description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 