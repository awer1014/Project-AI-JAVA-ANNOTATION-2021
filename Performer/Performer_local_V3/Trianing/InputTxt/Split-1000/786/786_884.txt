 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String S1 , String x9 , double k7 , double E9 ) {  <CR> super ( S1 , x9 , k7 , E9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String q4 , String p9 , double v0 , double N2 ) {  <CR> super ( q4 , p9 , v0 , N2 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] f9 ) {  <CR> Scanner Y9 = new Scanner ( System . in ) ;  <CR> boolean b5 = true ;  <CR> while ( b5 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String t3 = Y9 . nextLine ( ) ;  <CR> if ( t3 . equals ( "0" ) ) {  <CR> b5 = false ;  <CR> break ;  <CR> }  <CR> if ( t3 . equals ( "測驗" ) || t3 . equals ( "作業" ) || t3 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String P = Y9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String T2 = Y9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double N5 = Double . parseDouble ( Y9 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double H2 = Double . parseDouble ( Y9 . nextLine ( ) ) ;  <CR> String n2 = null ;  <CR> String j0 = null ;  <CR> String d1 = null ;  <CR> String Y2 = null ;  <CR> String x6 = null ;  <CR> String l5 = null ;  <CR> if ( t3 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> d1 = Y9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> Y2 = Y9 . nextLine ( ) ;  <CR> }  <CR> if ( t3 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> n2 = Y9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> j0 = Y9 . nextLine ( ) ;  <CR> }  <CR> if ( t3 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> x6 = Y9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> l5 = Y9 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test d9 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( t3 . equals ( "測驗" ) )  <CR> d9 = new Exam ( P , T2 , N5 , H2 ) ;  <CR> else if ( t3 . equals ( "作業" ) )  <CR> d9 = new HomeWork ( P , T2 , N5 , H2 ) ;  <CR> else if ( t3 . equals ( "心得報告" ) )  <CR> d9 = new Report ( P , T2 , N5 , H2 ) ;  <CR> if ( d9 != null ) {  <CR> d9 . print ( ) ;  <CR> if ( t3 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + d1 ) ;  <CR> System . out . println ( "考試範圍：" + Y2 ) ;  <CR> }  <CR> else if ( t3 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + n2 ) ;  <CR> System . out . println ( "作業描述：" + j0 ) ;  <CR> }  <CR> else if ( t3 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + x6 ) ;  <CR> System . out . println ( "參考文獻：" + l5 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> d9 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String I3 , String B2 , double B9 , double u9 ) {  <CR> super ( I3 , B2 , B9 , u9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String number ;  <CR> public Test ( String k1 , String C4 , double w4 , double U6 ) {  <CR> number = k1 ;  <CR> name = C4 ;  <CR> score = w4 ;  <CR> propotation = U6 ;  <CR> }  <CR> private String name ;  <CR> abstract public void print ( ) ;  <CR> String info ;  <CR> private String time , range , end_time , description ;  <CR> private double score ;  <CR> String info_description ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 