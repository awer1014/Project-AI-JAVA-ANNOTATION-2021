 <BOC> public class Exam extends Test {  <CR> public Exam ( String U3 , String i9 , double w6 , double m7 ) {  <CR> super ( U3 , i9 , w6 , m7 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String D2 , String T4 , double e4 , double g4 ) {  <CR> super ( D2 , T4 , e4 , g4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] B6 ) {  <CR> Scanner d3 = new Scanner ( System . in ) ;  <CR> boolean U0 = true ;  <CR> while ( U0 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String x1 = d3 . nextLine ( ) ;  <CR> if ( x1 . equals ( "0" ) ) {  <CR> U0 = false ;  <CR> break ;  <CR> }  <CR> if ( x1 . equals ( "測驗" ) || x1 . equals ( "作業" ) || x1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String n0 = d3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String M3 = d3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double T0 = Double . parseDouble ( d3 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double n2 = Double . parseDouble ( d3 . nextLine ( ) ) ;  <CR> String x3 = null ;  <CR> String x2 = null ;  <CR> String f1 = null ;  <CR> String l1 = null ;  <CR> String b9 = null ;  <CR> String P = null ;  <CR> if ( x1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> f1 = d3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> l1 = d3 . nextLine ( ) ;  <CR> }  <CR> if ( x1 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> x3 = d3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> x2 = d3 . nextLine ( ) ;  <CR> }  <CR> if ( x1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> b9 = d3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> P = d3 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test d = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( x1 . equals ( "測驗" ) )  <CR> d = new Exam ( n0 , M3 , T0 , n2 ) ;  <CR> else if ( x1 . equals ( "作業" ) )  <CR> d = new HomeWork ( n0 , M3 , T0 , n2 ) ;  <CR> else if ( x1 . equals ( "心得報告" ) )  <CR> d = new Report ( n0 , M3 , T0 , n2 ) ;  <CR> if ( d != null ) {  <CR> d . print ( ) ;  <CR> if ( x1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + f1 ) ;  <CR> System . out . println ( "考試範圍：" + l1 ) ;  <CR> }  <CR> else if ( x1 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + x3 ) ;  <CR> System . out . println ( "作業描述：" + x2 ) ;  <CR> }  <CR> else if ( x1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + b9 ) ;  <CR> System . out . println ( "參考文獻：" + P ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> d . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String V2 , String P6 , double i4 , double J8 ) {  <CR> super ( V2 , P6 , i4 , J8 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String number ;  <CR> public Test ( String T1 , String z3 , double p7 , double u4 ) {  <CR> number = T1 ;  <CR> name = z3 ;  <CR> score = p7 ;  <CR> propotation = u4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> String info ;  <CR> abstract public void print ( ) ;  <CR> private double score ;  <CR> private String name ;  <CR> String info_description ;  <CR> private String time , range , end_time , description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 