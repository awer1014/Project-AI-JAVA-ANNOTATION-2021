 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String F7 , String J0 , double N7 , double j7 ) {  <CR> super ( F7 , J0 , N7 , j7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String U2 , String j7 , double B7 , double s9 ) {  <CR> super ( U2 , j7 , B7 , s9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] d3 ) {  <CR> Scanner q1 = new Scanner ( System . in ) ;  <CR> boolean j2 = true ;  <CR> while ( j2 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String Y = q1 . nextLine ( ) ;  <CR> if ( Y . equals ( "0" ) ) {  <CR> j2 = false ;  <CR> break ;  <CR> }  <CR> if ( Y . equals ( "測驗" ) || Y . equals ( "作業" ) || Y . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String A3 = q1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String X = q1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double B5 = Double . parseDouble ( q1 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double V7 = Double . parseDouble ( q1 . nextLine ( ) ) ;  <CR> String m7 = null ;  <CR> String x = null ;  <CR> String b4 = null ;  <CR> String z3 = null ;  <CR> String H1 = null ;  <CR> String V5 = null ;  <CR> if ( Y . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> b4 = q1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> z3 = q1 . nextLine ( ) ;  <CR> }  <CR> if ( Y . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> m7 = q1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> x = q1 . nextLine ( ) ;  <CR> }  <CR> if ( Y . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> H1 = q1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> V5 = q1 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test C1 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( Y . equals ( "測驗" ) )  <CR> C1 = new Exam ( A3 , X , B5 , V7 ) ;  <CR> else if ( Y . equals ( "作業" ) )  <CR> C1 = new HomeWork ( A3 , X , B5 , V7 ) ;  <CR> else if ( Y . equals ( "心得報告" ) )  <CR> C1 = new Report ( A3 , X , B5 , V7 ) ;  <CR> if ( C1 != null ) {  <CR> C1 . print ( ) ;  <CR> if ( Y . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + b4 ) ;  <CR> System . out . println ( "考試範圍：" + z3 ) ;  <CR> }  <CR> else if ( Y . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + m7 ) ;  <CR> System . out . println ( "作業描述：" + x ) ;  <CR> }  <CR> else if ( Y . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + H1 ) ;  <CR> System . out . println ( "參考文獻：" + V5 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> C1 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String U3 , String R4 , double n , double E7 ) {  <CR> super ( U3 , R4 , n , E7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String time , range , end_time , description ;  <CR> abstract public void print ( ) ;  <CR> private String number ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private double score ;  <CR> private String name ;  <CR> public Test ( String W5 , String Q4 , double E4 , double j8 ) {  <CR> number = W5 ;  <CR> name = Q4 ;  <CR> score = E4 ;  <CR> propotation = j8 ;  <CR> }  <CR> String info ;  <CR> String info_description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 