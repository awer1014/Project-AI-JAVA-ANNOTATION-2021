 <BOC> public class Exam extends Test {  <CR> public Exam ( String Y , String d6 , double Z4 , double L2 ) {  <CR> super ( Y , d6 , Z4 , L2 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String Z8 , String W3 , double E3 , double Z0 ) {  <CR> super ( Z8 , W3 , E3 , Z0 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] P7 ) {  <CR> Scanner G7 = new Scanner ( System . in ) ;  <CR> boolean y1 = true ;  <CR> while ( y1 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String I = G7 . nextLine ( ) ;  <CR> if ( I . equals ( "0" ) ) {  <CR> y1 = false ;  <CR> break ;  <CR> }  <CR> if ( I . equals ( "測驗" ) || I . equals ( "作業" ) || I . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String n5 = G7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String s9 = G7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double e8 = Double . parseDouble ( G7 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double b8 = Double . parseDouble ( G7 . nextLine ( ) ) ;  <CR> String v7 = null ;  <CR> String u1 = null ;  <CR> String m6 = null ;  <CR> String I1 = null ;  <CR> String B0 = null ;  <CR> String v4 = null ;  <CR> if ( I . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> m6 = G7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> I1 = G7 . nextLine ( ) ;  <CR> }  <CR> if ( I . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> v7 = G7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> u1 = G7 . nextLine ( ) ;  <CR> }  <CR> if ( I . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> B0 = G7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> v4 = G7 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test Q9 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( I . equals ( "測驗" ) )  <CR> Q9 = new Exam ( n5 , s9 , e8 , b8 ) ;  <CR> else if ( I . equals ( "作業" ) )  <CR> Q9 = new HomeWork ( n5 , s9 , e8 , b8 ) ;  <CR> else if ( I . equals ( "心得報告" ) )  <CR> Q9 = new Report ( n5 , s9 , e8 , b8 ) ;  <CR> if ( Q9 != null ) {  <CR> Q9 . print ( ) ;  <CR> if ( I . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + m6 ) ;  <CR> System . out . println ( "考試範圍：" + I1 ) ;  <CR> }  <CR> else if ( I . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + v7 ) ;  <CR> System . out . println ( "作業描述：" + u1 ) ;  <CR> }  <CR> else if ( I . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + B0 ) ;  <CR> System . out . println ( "參考文獻：" + v4 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> Q9 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String h1 , String Q1 , double c7 , double n7 ) {  <CR> super ( h1 , Q1 , c7 , n7 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> String info ;  <CR> String info_description ;  <CR> private String number ;  <CR> private double score ;  <CR> abstract public void print ( ) ;  <CR> public Test ( String T5 , String S6 , double r1 , double t9 ) {  <CR> number = T5 ;  <CR> name = S6 ;  <CR> score = r1 ;  <CR> propotation = t9 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private String name ;  <CR> private String time , range , end_time , description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 