 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String X9 , String c8 , double Y , double T6 ) {  <CR> super ( X9 , c8 , Y , T6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String F , String z3 , double p5 , double D7 ) {  <CR> super ( F , z3 , p5 , D7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] n2 ) {  <CR> Scanner A = new Scanner ( System . in ) ;  <CR> boolean W6 = true ;  <CR> while ( W6 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String f7 = A . nextLine ( ) ;  <CR> if ( f7 . equals ( "0" ) ) {  <CR> W6 = false ;  <CR> break ;  <CR> }  <CR> if ( f7 . equals ( "測驗" ) || f7 . equals ( "作業" ) || f7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String f2 = A . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String l4 = A . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double B4 = Double . parseDouble ( A . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double N0 = Double . parseDouble ( A . nextLine ( ) ) ;  <CR> String k7 = null ;  <CR> String A3 = null ;  <CR> String b6 = null ;  <CR> String h7 = null ;  <CR> String X1 = null ;  <CR> String N7 = null ;  <CR> if ( f7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> b6 = A . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> h7 = A . nextLine ( ) ;  <CR> }  <CR> if ( f7 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> k7 = A . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> A3 = A . nextLine ( ) ;  <CR> }  <CR> if ( f7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> X1 = A . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> N7 = A . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test h2 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( f7 . equals ( "測驗" ) )  <CR> h2 = new Exam ( f2 , l4 , B4 , N0 ) ;  <CR> else if ( f7 . equals ( "作業" ) )  <CR> h2 = new HomeWork ( f2 , l4 , B4 , N0 ) ;  <CR> else if ( f7 . equals ( "心得報告" ) )  <CR> h2 = new Report ( f2 , l4 , B4 , N0 ) ;  <CR> if ( h2 != null ) {  <CR> h2 . print ( ) ;  <CR> if ( f7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + b6 ) ;  <CR> System . out . println ( "考試範圍：" + h7 ) ;  <CR> }  <CR> else if ( f7 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + k7 ) ;  <CR> System . out . println ( "作業描述：" + A3 ) ;  <CR> }  <CR> else if ( f7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + X1 ) ;  <CR> System . out . println ( "參考文獻：" + N7 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> h2 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String s4 , String m , double Y7 , double g7 ) {  <CR> super ( s4 , m , Y7 , g7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> abstract public void print ( ) ;  <CR> String info ;  <CR> public Test ( String D3 , String u3 , double s8 , double w0 ) {  <CR> number = D3 ;  <CR> name = u3 ;  <CR> score = s8 ;  <CR> propotation = w0 ;  <CR> }  <CR> private String name ;  <CR> String info_description ;  <CR> private double score ;  <CR> private String time , range , end_time , description ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private String number ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 