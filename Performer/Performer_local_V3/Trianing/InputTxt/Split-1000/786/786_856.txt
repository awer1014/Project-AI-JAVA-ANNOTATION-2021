 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String M5 , String o7 , double R9 , double a2 ) {  <CR> super ( M5 , o7 , R9 , a2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String G4 , String m1 , double w6 , double O0 ) {  <CR> super ( G4 , m1 , w6 , O0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] y ) {  <CR> Scanner t8 = new Scanner ( System . in ) ;  <CR> boolean x2 = true ;  <CR> while ( x2 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String B7 = t8 . nextLine ( ) ;  <CR> if ( B7 . equals ( "0" ) ) {  <CR> x2 = false ;  <CR> break ;  <CR> }  <CR> if ( B7 . equals ( "測驗" ) || B7 . equals ( "作業" ) || B7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String V0 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String W4 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double o1 = Double . parseDouble ( t8 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double q2 = Double . parseDouble ( t8 . nextLine ( ) ) ;  <CR> String Q6 = null ;  <CR> String U = null ;  <CR> String G8 = null ;  <CR> String L1 = null ;  <CR> String D6 = null ;  <CR> String w1 = null ;  <CR> if ( B7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> G8 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> L1 = t8 . nextLine ( ) ;  <CR> }  <CR> if ( B7 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> Q6 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> U = t8 . nextLine ( ) ;  <CR> }  <CR> if ( B7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> D6 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> w1 = t8 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test N = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( B7 . equals ( "測驗" ) )  <CR> N = new Exam ( V0 , W4 , o1 , q2 ) ;  <CR> else if ( B7 . equals ( "作業" ) )  <CR> N = new HomeWork ( V0 , W4 , o1 , q2 ) ;  <CR> else if ( B7 . equals ( "心得報告" ) )  <CR> N = new Report ( V0 , W4 , o1 , q2 ) ;  <CR> if ( N != null ) {  <CR> N . print ( ) ;  <CR> if ( B7 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + G8 ) ;  <CR> System . out . println ( "考試範圍：" + L1 ) ;  <CR> }  <CR> else if ( B7 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + Q6 ) ;  <CR> System . out . println ( "作業描述：" + U ) ;  <CR> }  <CR> else if ( B7 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + D6 ) ;  <CR> System . out . println ( "參考文獻：" + w1 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> N . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String Y3 , String l4 , double m2 , double z7 ) {  <CR> super ( Y3 , l4 , m2 , z7 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> public Test ( String N6 , String L0 , double y3 , double K7 ) {  <CR> number = N6 ;  <CR> name = L0 ;  <CR> score = y3 ;  <CR> propotation = K7 ;  <CR> }  <CR> private String number ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> abstract public void print ( ) ;  <CR> private String time , range , end_time , description ;  <CR> private String name ;  <CR> private double score ;  <CR> String info ;  <CR> String info_description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 