 <BOC> public class Exam extends Test {  <CR> public Exam ( String w , String a2 , double z7 , double A3 ) {  <CR> super ( w , a2 , z7 , A3 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String R4 , String g0 , double D2 , double O7 ) {  <CR> super ( R4 , g0 , D2 , O7 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] o7 ) {  <CR> Scanner G = new Scanner ( System . in ) ;  <CR> boolean l2 = true ;  <CR> while ( l2 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String I3 = G . nextLine ( ) ;  <CR> if ( I3 . equals ( "0" ) ) {  <CR> l2 = false ;  <CR> break ;  <CR> }  <CR> if ( I3 . equals ( "測驗" ) || I3 . equals ( "作業" ) || I3 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String V3 = G . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String o5 = G . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double p = Double . parseDouble ( G . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double A5 = Double . parseDouble ( G . nextLine ( ) ) ;  <CR> String p7 = null ;  <CR> String y8 = null ;  <CR> String X6 = null ;  <CR> String g1 = null ;  <CR> String I8 = null ;  <CR> String w4 = null ;  <CR> if ( I3 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> X6 = G . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> g1 = G . nextLine ( ) ;  <CR> }  <CR> if ( I3 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> p7 = G . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> y8 = G . nextLine ( ) ;  <CR> }  <CR> if ( I3 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> I8 = G . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> w4 = G . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test p9 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( I3 . equals ( "測驗" ) )  <CR> p9 = new Exam ( V3 , o5 , p , A5 ) ;  <CR> else if ( I3 . equals ( "作業" ) )  <CR> p9 = new HomeWork ( V3 , o5 , p , A5 ) ;  <CR> else if ( I3 . equals ( "心得報告" ) )  <CR> p9 = new Report ( V3 , o5 , p , A5 ) ;  <CR> if ( p9 != null ) {  <CR> p9 . print ( ) ;  <CR> if ( I3 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + X6 ) ;  <CR> System . out . println ( "考試範圍：" + g1 ) ;  <CR> }  <CR> else if ( I3 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + p7 ) ;  <CR> System . out . println ( "作業描述：" + y8 ) ;  <CR> }  <CR> else if ( I3 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + I8 ) ;  <CR> System . out . println ( "參考文獻：" + w4 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> p9 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String b8 , String l8 , double g4 , double o8 ) {  <CR> super ( b8 , l8 , g4 , o8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> abstract public void print ( ) ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private double score ;  <CR> private String name ;  <CR> String info_description ;  <CR> String info ;  <CR> private String time , range , end_time , description ;  <CR> public Test ( String E2 , String G2 , double g7 , double x0 ) {  <CR> number = E2 ;  <CR> name = G2 ;  <CR> score = g7 ;  <CR> propotation = x0 ;  <CR> }  <CR> private String number ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 