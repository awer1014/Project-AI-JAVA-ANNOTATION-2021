 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String z3 , String c3 , double d4 , double W3 ) {  <CR> super ( z3 , c3 , d4 , W3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String R , String D5 , double b6 , double O6 ) {  <CR> super ( R , D5 , b6 , O6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] Y2 ) {  <CR> Scanner A0 = new Scanner ( System . in ) ;  <CR> boolean S3 = true ;  <CR> while ( S3 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String a = A0 . nextLine ( ) ;  <CR> if ( a . equals ( "0" ) ) {  <CR> S3 = false ;  <CR> break ;  <CR> }  <CR> if ( a . equals ( "測驗" ) || a . equals ( "作業" ) || a . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String j6 = A0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String G5 = A0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double t4 = Double . parseDouble ( A0 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double l = Double . parseDouble ( A0 . nextLine ( ) ) ;  <CR> String o4 = null ;  <CR> String n4 = null ;  <CR> String w8 = null ;  <CR> String z2 = null ;  <CR> String j2 = null ;  <CR> String c6 = null ;  <CR> if ( a . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> w8 = A0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> z2 = A0 . nextLine ( ) ;  <CR> }  <CR> if ( a . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> o4 = A0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> n4 = A0 . nextLine ( ) ;  <CR> }  <CR> if ( a . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> j2 = A0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> c6 = A0 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test E4 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( a . equals ( "測驗" ) )  <CR> E4 = new Exam ( j6 , G5 , t4 , l ) ;  <CR> else if ( a . equals ( "作業" ) )  <CR> E4 = new HomeWork ( j6 , G5 , t4 , l ) ;  <CR> else if ( a . equals ( "心得報告" ) )  <CR> E4 = new Report ( j6 , G5 , t4 , l ) ;  <CR> if ( E4 != null ) {  <CR> E4 . print ( ) ;  <CR> if ( a . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + w8 ) ;  <CR> System . out . println ( "考試範圍：" + z2 ) ;  <CR> }  <CR> else if ( a . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + o4 ) ;  <CR> System . out . println ( "作業描述：" + n4 ) ;  <CR> }  <CR> else if ( a . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + j2 ) ;  <CR> System . out . println ( "參考文獻：" + c6 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> E4 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String d4 , String b , double J2 , double I3 ) {  <CR> super ( d4 , b , J2 , I3 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> String info ;  <CR> private String number ;  <CR> private String time , range , end_time , description ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> String info_description ;  <CR> abstract public void print ( ) ;  <CR> private double score ;  <CR> private String name ;  <CR> public Test ( String D1 , String t9 , double T4 , double s5 ) {  <CR> number = D1 ;  <CR> name = t9 ;  <CR> score = T4 ;  <CR> propotation = s5 ;  <CR> }  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 