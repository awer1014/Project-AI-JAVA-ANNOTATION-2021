 <BOC> public class Exam extends Test {  <CR> public Exam ( String n1 , String w5 , double O6 , double M7 ) {  <CR> super ( n1 , w5 , O6 , M7 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String j2 , String n6 , double C9 , double i7 ) {  <CR> super ( j2 , n6 , C9 , i7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] l9 ) {  <CR> Scanner P = new Scanner ( System . in ) ;  <CR> boolean H4 = true ;  <CR> while ( H4 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String V1 = P . nextLine ( ) ;  <CR> if ( V1 . equals ( "0" ) ) {  <CR> H4 = false ;  <CR> break ;  <CR> }  <CR> if ( V1 . equals ( "測驗" ) || V1 . equals ( "作業" ) || V1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String R2 = P . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String v2 = P . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double k5 = Double . parseDouble ( P . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double e5 = Double . parseDouble ( P . nextLine ( ) ) ;  <CR> String V0 = null ;  <CR> String o = null ;  <CR> String r3 = null ;  <CR> String O6 = null ;  <CR> String i4 = null ;  <CR> String Y = null ;  <CR> if ( V1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> r3 = P . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> O6 = P . nextLine ( ) ;  <CR> }  <CR> if ( V1 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> V0 = P . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> o = P . nextLine ( ) ;  <CR> }  <CR> if ( V1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> i4 = P . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> Y = P . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test x5 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( V1 . equals ( "測驗" ) )  <CR> x5 = new Exam ( R2 , v2 , k5 , e5 ) ;  <CR> else if ( V1 . equals ( "作業" ) )  <CR> x5 = new HomeWork ( R2 , v2 , k5 , e5 ) ;  <CR> else if ( V1 . equals ( "心得報告" ) )  <CR> x5 = new Report ( R2 , v2 , k5 , e5 ) ;  <CR> if ( x5 != null ) {  <CR> x5 . print ( ) ;  <CR> if ( V1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + r3 ) ;  <CR> System . out . println ( "考試範圍：" + O6 ) ;  <CR> }  <CR> else if ( V1 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + V0 ) ;  <CR> System . out . println ( "作業描述：" + o ) ;  <CR> }  <CR> else if ( V1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + i4 ) ;  <CR> System . out . println ( "參考文獻：" + Y ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> x5 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String R8 , String C0 , double S2 , double A0 ) {  <CR> super ( R8 , C0 , S2 , A0 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> String info_description ;  <CR> public Test ( String q , String G1 , double y3 , double n ) {  <CR> number = q ;  <CR> name = G1 ;  <CR> score = y3 ;  <CR> propotation = n ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> String info ;  <CR> abstract public void print ( ) ;  <CR> private String number ;  <CR> private double score ;  <CR> private String name ;  <CR> private String time , range , end_time , description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 