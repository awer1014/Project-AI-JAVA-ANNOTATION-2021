 <BOC> public class Exam extends Test {  <CR> public Exam ( String o8 , String Z9 , double G4 , double h ) {  <CR> super ( o8 , Z9 , G4 , h ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String v8 , String P3 , double D6 , double e7 ) {  <CR> super ( v8 , P3 , D6 , e7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] U3 ) {  <CR> Scanner b7 = new Scanner ( System . in ) ;  <CR> boolean W2 = true ;  <CR> while ( W2 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String A = b7 . nextLine ( ) ;  <CR> if ( A . equals ( "0" ) ) {  <CR> W2 = false ;  <CR> break ;  <CR> }  <CR> if ( A . equals ( "測驗" ) || A . equals ( "作業" ) || A . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String R9 = b7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String o0 = b7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double k4 = Double . parseDouble ( b7 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double Q4 = Double . parseDouble ( b7 . nextLine ( ) ) ;  <CR> String c6 = null ;  <CR> String Z6 = null ;  <CR> String K6 = null ;  <CR> String o1 = null ;  <CR> String k6 = null ;  <CR> String Z4 = null ;  <CR> if ( A . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> K6 = b7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> o1 = b7 . nextLine ( ) ;  <CR> }  <CR> if ( A . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> c6 = b7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> Z6 = b7 . nextLine ( ) ;  <CR> }  <CR> if ( A . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> k6 = b7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> Z4 = b7 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test h8 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( A . equals ( "測驗" ) )  <CR> h8 = new Exam ( R9 , o0 , k4 , Q4 ) ;  <CR> else if ( A . equals ( "作業" ) )  <CR> h8 = new HomeWork ( R9 , o0 , k4 , Q4 ) ;  <CR> else if ( A . equals ( "心得報告" ) )  <CR> h8 = new Report ( R9 , o0 , k4 , Q4 ) ;  <CR> if ( h8 != null ) {  <CR> h8 . print ( ) ;  <CR> if ( A . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + K6 ) ;  <CR> System . out . println ( "考試範圍：" + o1 ) ;  <CR> }  <CR> else if ( A . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + c6 ) ;  <CR> System . out . println ( "作業描述：" + Z6 ) ;  <CR> }  <CR> else if ( A . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + k6 ) ;  <CR> System . out . println ( "參考文獻：" + Z4 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> h8 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String N6 , String Y5 , double a9 , double i5 ) {  <CR> super ( N6 , Y5 , a9 , i5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String name ;  <CR> private double score ;  <CR> String info ;  <CR> private String time , range , end_time , description ;  <CR> private String number ;  <CR> abstract public void print ( ) ;  <CR> public Test ( String z4 , String F9 , double d2 , double V4 ) {  <CR> number = z4 ;  <CR> name = F9 ;  <CR> score = d2 ;  <CR> propotation = V4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> String info_description ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 