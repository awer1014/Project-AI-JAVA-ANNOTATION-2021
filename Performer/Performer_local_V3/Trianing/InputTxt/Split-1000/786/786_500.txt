 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String i5 , String l , double G7 , double m3 ) {  <CR> super ( i5 , l , G7 , m3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String B5 , String p8 , double w6 , double S3 ) {  <CR> super ( B5 , p8 , w6 , S3 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] N5 ) {  <CR> Scanner X1 = new Scanner ( System . in ) ;  <CR> boolean I4 = true ;  <CR> while ( I4 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String N2 = X1 . nextLine ( ) ;  <CR> if ( N2 . equals ( "0" ) ) {  <CR> I4 = false ;  <CR> break ;  <CR> }  <CR> if ( N2 . equals ( "測驗" ) || N2 . equals ( "作業" ) || N2 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String b1 = X1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String l7 = X1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double Y3 = Double . parseDouble ( X1 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double E0 = Double . parseDouble ( X1 . nextLine ( ) ) ;  <CR> String X7 = null ;  <CR> String E1 = null ;  <CR> String e2 = null ;  <CR> String n9 = null ;  <CR> String S1 = null ;  <CR> String i = null ;  <CR> if ( N2 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> e2 = X1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> n9 = X1 . nextLine ( ) ;  <CR> }  <CR> if ( N2 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> X7 = X1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> E1 = X1 . nextLine ( ) ;  <CR> }  <CR> if ( N2 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> S1 = X1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> i = X1 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test m3 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( N2 . equals ( "測驗" ) )  <CR> m3 = new Exam ( b1 , l7 , Y3 , E0 ) ;  <CR> else if ( N2 . equals ( "作業" ) )  <CR> m3 = new HomeWork ( b1 , l7 , Y3 , E0 ) ;  <CR> else if ( N2 . equals ( "心得報告" ) )  <CR> m3 = new Report ( b1 , l7 , Y3 , E0 ) ;  <CR> if ( m3 != null ) {  <CR> m3 . print ( ) ;  <CR> if ( N2 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + e2 ) ;  <CR> System . out . println ( "考試範圍：" + n9 ) ;  <CR> }  <CR> else if ( N2 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + X7 ) ;  <CR> System . out . println ( "作業描述：" + E1 ) ;  <CR> }  <CR> else if ( N2 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + S1 ) ;  <CR> System . out . println ( "參考文獻：" + i ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> m3 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String I3 , String I9 , double U8 , double L8 ) {  <CR> super ( I3 , I9 , U8 , L8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private double score ;  <CR> String info_description ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> String info ;  <CR> private String number ;  <CR> private String time , range , end_time , description ;  <CR> public Test ( String j7 , String U3 , double w6 , double u4 ) {  <CR> number = j7 ;  <CR> name = U3 ;  <CR> score = w6 ;  <CR> propotation = u4 ;  <CR> }  <CR> private String name ;  <CR> abstract public void print ( ) ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 