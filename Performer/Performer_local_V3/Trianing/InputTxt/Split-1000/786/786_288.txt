 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String H3 , String f6 , double c1 , double h3 ) {  <CR> super ( H3 , f6 , c1 , h3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String X9 , String D8 , double l8 , double m6 ) {  <CR> super ( X9 , D8 , l8 , m6 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] S0 ) {  <CR> Scanner B7 = new Scanner ( System . in ) ;  <CR> boolean b5 = true ;  <CR> while ( b5 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String G4 = B7 . nextLine ( ) ;  <CR> if ( G4 . equals ( "0" ) ) {  <CR> b5 = false ;  <CR> break ;  <CR> }  <CR> if ( G4 . equals ( "測驗" ) || G4 . equals ( "作業" ) || G4 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String i6 = B7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String E5 = B7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double W8 = Double . parseDouble ( B7 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double T = Double . parseDouble ( B7 . nextLine ( ) ) ;  <CR> String S3 = null ;  <CR> String N8 = null ;  <CR> String B9 = null ;  <CR> String S5 = null ;  <CR> String M3 = null ;  <CR> String s4 = null ;  <CR> if ( G4 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> B9 = B7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> S5 = B7 . nextLine ( ) ;  <CR> }  <CR> if ( G4 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> S3 = B7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> N8 = B7 . nextLine ( ) ;  <CR> }  <CR> if ( G4 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> M3 = B7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> s4 = B7 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test W = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( G4 . equals ( "測驗" ) )  <CR> W = new Exam ( i6 , E5 , W8 , T ) ;  <CR> else if ( G4 . equals ( "作業" ) )  <CR> W = new HomeWork ( i6 , E5 , W8 , T ) ;  <CR> else if ( G4 . equals ( "心得報告" ) )  <CR> W = new Report ( i6 , E5 , W8 , T ) ;  <CR> if ( W != null ) {  <CR> W . print ( ) ;  <CR> if ( G4 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + B9 ) ;  <CR> System . out . println ( "考試範圍：" + S5 ) ;  <CR> }  <CR> else if ( G4 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + S3 ) ;  <CR> System . out . println ( "作業描述：" + N8 ) ;  <CR> }  <CR> else if ( G4 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + M3 ) ;  <CR> System . out . println ( "參考文獻：" + s4 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> W . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String v8 , String U , double W6 , double J8 ) {  <CR> super ( v8 , U , W6 , J8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String time , range , end_time , description ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private String number ;  <CR> String info ;  <CR> private double score ;  <CR> private String name ;  <CR> String info_description ;  <CR> abstract public void print ( ) ;  <CR> public Test ( String v7 , String U7 , double h4 , double N9 ) {  <CR> number = v7 ;  <CR> name = U7 ;  <CR> score = h4 ;  <CR> propotation = N9 ;  <CR> }  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 