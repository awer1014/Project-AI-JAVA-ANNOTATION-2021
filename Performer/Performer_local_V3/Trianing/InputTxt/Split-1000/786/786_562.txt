 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String o0 , String K2 , double c0 , double T8 ) {  <CR> super ( o0 , K2 , c0 , T8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> public HomeWork ( String w9 , String f4 , double B5 , double O4 ) {  <CR> super ( w9 , f4 , B5 , O4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] p5 ) {  <CR> Scanner E = new Scanner ( System . in ) ;  <CR> boolean I = true ;  <CR> while ( I ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String U1 = E . nextLine ( ) ;  <CR> if ( U1 . equals ( "0" ) ) {  <CR> I = false ;  <CR> break ;  <CR> }  <CR> if ( U1 . equals ( "測驗" ) || U1 . equals ( "作業" ) || U1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String E7 = E . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String D0 = E . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double x1 = Double . parseDouble ( E . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double U8 = Double . parseDouble ( E . nextLine ( ) ) ;  <CR> String Y1 = null ;  <CR> String t8 = null ;  <CR> String g4 = null ;  <CR> String U7 = null ;  <CR> String v7 = null ;  <CR> String u3 = null ;  <CR> if ( U1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> g4 = E . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> U7 = E . nextLine ( ) ;  <CR> }  <CR> if ( U1 . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> Y1 = E . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> t8 = E . nextLine ( ) ;  <CR> }  <CR> if ( U1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> v7 = E . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> u3 = E . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test b1 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( U1 . equals ( "測驗" ) )  <CR> b1 = new Exam ( E7 , D0 , x1 , U8 ) ;  <CR> else if ( U1 . equals ( "作業" ) )  <CR> b1 = new HomeWork ( E7 , D0 , x1 , U8 ) ;  <CR> else if ( U1 . equals ( "心得報告" ) )  <CR> b1 = new Report ( E7 , D0 , x1 , U8 ) ;  <CR> if ( b1 != null ) {  <CR> b1 . print ( ) ;  <CR> if ( U1 . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + g4 ) ;  <CR> System . out . println ( "考試範圍：" + U7 ) ;  <CR> }  <CR> else if ( U1 . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + Y1 ) ;  <CR> System . out . println ( "作業描述：" + t8 ) ;  <CR> }  <CR> else if ( U1 . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + v7 ) ;  <CR> System . out . println ( "參考文獻：" + u3 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> b1 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public Report ( String k4 , String E1 , double P1 , double n8 ) {  <CR> super ( k4 , E1 , P1 , n8 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> private String time , range , end_time , description ;  <CR> public Test ( String o1 , String b9 , double p0 , double n7 ) {  <CR> number = o1 ;  <CR> name = b9 ;  <CR> score = p0 ;  <CR> propotation = n7 ;  <CR> }  <CR> private String number ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private String name ;  <CR> String info ;  <CR> private double propotation ;  <CR> String info_description ;  <CR> private double score ;  <CR> abstract public void print ( ) ;  <CR> }  <CR>  <EOC> 