 <BOC> public class Exam extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：測驗" ) ;  <CR> }  <CR> public Exam ( String d , String N6 , double U5 , double w7 ) {  <CR> super ( d , N6 , U5 , w7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class HomeWork extends Test {  <CR> public HomeWork ( String d9 , String O4 , double D2 , double I8 ) {  <CR> super ( d9 , O4 , D2 , I8 ) ;  <CR> }  <CR> public void print ( ) {  <CR> System . out . println ( "種類：作業" ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class Main {  <CR> public static void main ( String [ ] y5 ) {  <CR> Scanner B2 = new Scanner ( System . in ) ;  <CR> boolean A0 = true ;  <CR> while ( A0 ) {  <CR> System . out . println ( "請輸入種類,0為結束(測驗、作業、心得報告)：" ) ;  <CR> String m = B2 . nextLine ( ) ;  <CR> if ( m . equals ( "0" ) ) {  <CR> A0 = false ;  <CR> break ;  <CR> }  <CR> if ( m . equals ( "測驗" ) || m . equals ( "作業" ) || m . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入學生學號：" ) ;  <CR> String I8 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入學生姓名：" ) ;  <CR> String K6 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入成績：" ) ;  <CR> double r4 = Double . parseDouble ( B2 . nextLine ( ) ) ;  <CR> System . out . println ( "請輸入成績比重：" ) ;  <CR> double C = Double . parseDouble ( B2 . nextLine ( ) ) ;  <CR> String m9 = null ;  <CR> String u0 = null ;  <CR> String a3 = null ;  <CR> String w8 = null ;  <CR> String t9 = null ;  <CR> String P4 = null ;  <CR> if ( m . equals ( "測驗" ) ) {  <CR> System . out . println ( "請輸入考試日期：" ) ;  <CR> a3 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入考試範圍：" ) ;  <CR> w8 = B2 . nextLine ( ) ;  <CR> }  <CR> if ( m . equals ( "作業" ) ) {  <CR> System . out . println ( "請輸入截止日期：" ) ;  <CR> m9 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入作業描述：" ) ;  <CR> u0 = B2 . nextLine ( ) ;  <CR> }  <CR> if ( m . equals ( "心得報告" ) ) {  <CR> System . out . println ( "請輸入報告內容：" ) ;  <CR> t9 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入參考文獻：" ) ;  <CR> P4 = B2 . nextLine ( ) ;  <CR> }  <CR> System . out . println ( "=============" ) ;  <CR> Test L9 = null ;  <CR> System . out . println ( "" ) ;  <CR> System . out . println ( "您輸入的是：" ) ;  <CR> if ( m . equals ( "測驗" ) )  <CR> L9 = new Exam ( I8 , K6 , r4 , C ) ;  <CR> else if ( m . equals ( "作業" ) )  <CR> L9 = new HomeWork ( I8 , K6 , r4 , C ) ;  <CR> else if ( m . equals ( "心得報告" ) )  <CR> L9 = new Report ( I8 , K6 , r4 , C ) ;  <CR> if ( L9 != null ) {  <CR> L9 . print ( ) ;  <CR> if ( m . equals ( "測驗" ) ) {  <CR> System . out . println ( "考試日期：" + a3 ) ;  <CR> System . out . println ( "考試範圍：" + w8 ) ;  <CR> }  <CR> else if ( m . equals ( "作業" ) ) {  <CR> System . out . println ( "截止日期：" + m9 ) ;  <CR> System . out . println ( "作業描述：" + u0 ) ;  <CR> }  <CR> else if ( m . equals ( "心得報告" ) ) {  <CR> System . out . println ( "報告內容：" + t9 ) ;  <CR> System . out . println ( "參考文獻：" + P4 ) ;  <CR> }  <CR> System . out . println ( "" ) ;  <CR> L9 . display ( ) ;  <CR> System . out . println ( "=============" ) ;  <CR> }  <CR> }  <CR> }  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Report extends Test {  <CR> public void print ( ) {  <CR> System . out . println ( "種類：心得報告" ) ;  <CR> }  <CR> public Report ( String d4 , String M4 , double r6 , double Q1 ) {  <CR> super ( d4 , M4 , r6 , Q1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Test {  <CR> abstract public void print ( ) ;  <CR> String info ;  <CR> public Test ( String j3 , String s3 , double P5 , double c9 ) {  <CR> number = j3 ;  <CR> name = s3 ;  <CR> score = P5 ;  <CR> propotation = c9 ;  <CR> }  <CR> String info_description ;  <CR> private String number ;  <CR> public void display ( ) {  <CR> System . out . println ( "學生學號：" + number ) ;  <CR> System . out . println ( "學生姓名：" + name ) ;  <CR> System . out . println ( "成績：" + score ) ;  <CR> System . out . println ( "成績比重：" + propotation ) ;  <CR> }  <CR> private String time , range , end_time , description ;  <CR> private String name ;  <CR> private double score ;  <CR> private double propotation ;  <CR> }  <CR>  <EOC> 