 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public ChineseLetter ( String X9 , String P5 , String X0 , String P4 , String s4 ) {  <CR> this . title = X9 ;  <CR> this . receiver = P5 ;  <CR> this . content = X0 ;  <CR> this . sender = P4 ;  <CR> this . data = s4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] u ) {  <CR> ChineseLetter l9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> l9 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] A5 ) {  <CR> ChineseLetter c5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> c5 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String content ;  <CR> String receiver ;  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String X , String C3 , String n6 , String l1 , String I6 ) {  <CR> this . title = X ;  <CR> this . receiver = C3 ;  <CR> this . content = n6 ;  <CR> this . sender = l1 ;  <CR> this . data = I6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] L2 ) {  <CR> EnglishLetter G7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> G7 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> String title ;  <CR> public EnglishLetter ( String q8 , String R7 , String S6 , String b9 , String p7 ) {  <CR> this . title = q8 ;  <CR> this . receiver = R7 ;  <CR> this . content = S6 ;  <CR> this . sender = b9 ;  <CR> this . data = p7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] p8 ) {  <CR> EnglishLetter r5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> r5 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String N2 , String F8 , String r6 , String s8 , String F5 ) {  <CR> this . title = N2 ;  <CR> this . receiver = F8 ;  <CR> this . content = r6 ;  <CR> this . sender = s8 ;  <CR> this . data = F5 ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> public static void main ( String [ ] j2 ) {  <CR> Letter M5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop i9 = new Envelop ( "Taipei" , "Kaohsiung" , M5 ) ;  <CR> i9 . display ( ) ;  <CR> M5 . display ( ) ;  <CR> }  <CR> Envelop ( String U7 , String L4 , Letter C8 ) {  <CR> this . senderAddr = U7 ;  <CR> this . receiverAddr = L4 ;  <CR> this . letter = C8 ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( String B8 , String f8 , Letter z4 ) {  <CR> this . senderAddr = B8 ;  <CR> this . receiverAddr = f8 ;  <CR> this . letter = z4 ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] L4 ) {  <CR> Letter M9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop F6 = new Envelop ( "Taipei" , "Kaohsiung" , M9 ) ;  <CR> F6 . display ( ) ;  <CR> M9 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 