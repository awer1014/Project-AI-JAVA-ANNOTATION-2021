 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> String content ;  <CR> String data ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] E6 ) {  <CR> ChineseLetter a1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> a1 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String e7 , String o , String P6 , String q1 , String d2 ) {  <CR> this . title = e7 ;  <CR> this . receiver = o ;  <CR> this . content = P6 ;  <CR> this . sender = q1 ;  <CR> this . data = d2 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> String receiver ;  <CR> String title ;  <CR> String content ;  <CR> public ChineseLetter ( String o , String i2 , String N6 , String S1 , String D5 ) {  <CR> this . title = o ;  <CR> this . receiver = i2 ;  <CR> this . content = N6 ;  <CR> this . sender = S1 ;  <CR> this . data = D5 ;  <CR> }  <CR> public static void main ( String [ ] k0 ) {  <CR> ChineseLetter c1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> c1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> String sender ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> EnglishLetter C = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> C . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public EnglishLetter ( String L , String Q9 , String H8 , String y8 , String Z1 ) {  <CR> this . title = L ;  <CR> this . receiver = Q9 ;  <CR> this . content = H8 ;  <CR> this . sender = y8 ;  <CR> this . data = Z1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public EnglishLetter ( String Z0 , String f8 , String h0 , String k3 , String n1 ) {  <CR> this . title = Z0 ;  <CR> this . receiver = f8 ;  <CR> this . content = h0 ;  <CR> this . sender = k3 ;  <CR> this . data = n1 ;  <CR> }  <CR> public static void main ( String [ ] I5 ) {  <CR> EnglishLetter g3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> g3 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String A9 , String T8 , Letter S4 ) {  <CR> this . senderAddr = A9 ;  <CR> this . receiverAddr = T8 ;  <CR> this . letter = S4 ;  <CR> }  <CR> public static void main ( String [ ] X6 ) {  <CR> Letter Y8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop n9 = new Envelop ( "Taipei" , "Kaohsiung" , Y8 ) ;  <CR> n9 . display ( ) ;  <CR> Y8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( String q3 , String Q9 , Letter h1 ) {  <CR> this . senderAddr = q3 ;  <CR> this . receiverAddr = Q9 ;  <CR> this . letter = h1 ;  <CR> }  <CR> public static void main ( String [ ] Y4 ) {  <CR> Letter D2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop f1 = new Envelop ( "Taipei" , "Kaohsiung" , D2 ) ;  <CR> f1 . display ( ) ;  <CR> D2 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 