 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] G7 ) {  <CR> ChineseLetter i6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> i6 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public ChineseLetter ( String B , String z6 , String C7 , String O2 , String H9 ) {  <CR> this . title = B ;  <CR> this . receiver = z6 ;  <CR> this . content = C7 ;  <CR> this . sender = O2 ;  <CR> this . data = H9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String W3 , String s3 , String c8 , String m5 , String a ) {  <CR> this . title = W3 ;  <CR> this . receiver = s3 ;  <CR> this . content = c8 ;  <CR> this . sender = m5 ;  <CR> this . data = a ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] W ) {  <CR> ChineseLetter I0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> I0 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public EnglishLetter ( String M1 , String a9 , String V3 , String q3 , String x2 ) {  <CR> this . title = M1 ;  <CR> this . receiver = a9 ;  <CR> this . content = V3 ;  <CR> this . sender = q3 ;  <CR> this . data = x2 ;  <CR> }  <CR> public static void main ( String [ ] W8 ) {  <CR> EnglishLetter L1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> L1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public EnglishLetter ( String w9 , String U7 , String W4 , String h3 , String K4 ) {  <CR> this . title = w9 ;  <CR> this . receiver = U7 ;  <CR> this . content = W4 ;  <CR> this . sender = h3 ;  <CR> this . data = K4 ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public static void main ( String [ ] Q9 ) {  <CR> EnglishLetter s9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> s9 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] x2 ) {  <CR> Letter r2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop E9 = new Envelop ( "Taipei" , "Kaohsiung" , r2 ) ;  <CR> E9 . display ( ) ;  <CR> r2 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String y3 , String k1 , Letter d2 ) {  <CR> this . senderAddr = y3 ;  <CR> this . receiverAddr = k1 ;  <CR> this . letter = d2 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( String i2 , String o8 , Letter N4 ) {  <CR> this . senderAddr = i2 ;  <CR> this . receiverAddr = o8 ;  <CR> this . letter = N4 ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] Y6 ) {  <CR> Letter A0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop N1 = new Envelop ( "Taipei" , "Kaohsiung" , A0 ) ;  <CR> N1 . display ( ) ;  <CR> A0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 