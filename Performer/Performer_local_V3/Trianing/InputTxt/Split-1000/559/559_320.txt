 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String Y , String y3 , String t1 , String U4 , String G9 ) {  <CR> this . title = Y ;  <CR> this . receiver = y3 ;  <CR> this . content = t1 ;  <CR> this . sender = U4 ;  <CR> this . data = G9 ;  <CR> }  <CR> public static void main ( String [ ] C7 ) {  <CR> ChineseLetter H1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> H1 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] g8 ) {  <CR> ChineseLetter c7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> c7 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String L1 , String g5 , String o , String D3 , String G4 ) {  <CR> this . title = L1 ;  <CR> this . receiver = g5 ;  <CR> this . content = o ;  <CR> this . sender = D3 ;  <CR> this . data = G4 ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public static void main ( String [ ] m1 ) {  <CR> EnglishLetter a3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> a3 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String W4 , String x1 , String X9 , String h6 , String H6 ) {  <CR> this . title = W4 ;  <CR> this . receiver = x1 ;  <CR> this . content = X9 ;  <CR> this . sender = h6 ;  <CR> this . data = H6 ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String I7 , String d1 , String P3 , String v2 , String Q2 ) {  <CR> this . title = I7 ;  <CR> this . receiver = d1 ;  <CR> this . content = P3 ;  <CR> this . sender = v2 ;  <CR> this . data = Q2 ;  <CR> }  <CR> public static void main ( String [ ] H6 ) {  <CR> EnglishLetter n0 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> n0 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String x4 , String p1 , Letter X4 ) {  <CR> this . senderAddr = x4 ;  <CR> this . receiverAddr = p1 ;  <CR> this . letter = X4 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] X2 ) {  <CR> Letter v4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R4 = new Envelop ( "Taipei" , "Kaohsiung" , v4 ) ;  <CR> R4 . display ( ) ;  <CR> v4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] o8 ) {  <CR> Letter f4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R1 = new Envelop ( "Taipei" , "Kaohsiung" , f4 ) ;  <CR> R1 . display ( ) ;  <CR> f4 . display ( ) ;  <CR> }  <CR> Envelop ( String Y1 , String r0 , Letter E ) {  <CR> this . senderAddr = Y1 ;  <CR> this . receiverAddr = r0 ;  <CR> this . letter = E ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 