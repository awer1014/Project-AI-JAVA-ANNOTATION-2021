 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> String title ;  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String f3 , String y8 , String A6 , String k8 , String A5 ) {  <CR> this . title = f3 ;  <CR> this . receiver = y8 ;  <CR> this . content = A6 ;  <CR> this . sender = k8 ;  <CR> this . data = A5 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] v2 ) {  <CR> ChineseLetter P = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> P . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String g , String r8 , String B8 , String Y2 , String y8 ) {  <CR> this . title = g ;  <CR> this . receiver = r8 ;  <CR> this . content = B8 ;  <CR> this . sender = Y2 ;  <CR> this . data = y8 ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] W1 ) {  <CR> ChineseLetter k5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> k5 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> String sender ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] A1 ) {  <CR> EnglishLetter p2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> p2 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public EnglishLetter ( String G7 , String w1 , String S6 , String d8 , String C8 ) {  <CR> this . title = G7 ;  <CR> this . receiver = w1 ;  <CR> this . content = S6 ;  <CR> this . sender = d8 ;  <CR> this . data = C8 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] G6 ) {  <CR> EnglishLetter h9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> h9 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> String sender ;  <CR> public EnglishLetter ( String p5 , String U9 , String F1 , String j8 , String T9 ) {  <CR> this . title = p5 ;  <CR> this . receiver = U9 ;  <CR> this . content = F1 ;  <CR> this . sender = j8 ;  <CR> this . data = T9 ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] c2 ) {  <CR> Letter P2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Q6 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> Q6 . display ( ) ;  <CR> P2 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String a , String U0 , Letter W5 ) {  <CR> this . senderAddr = a ;  <CR> this . receiverAddr = U0 ;  <CR> this . letter = W5 ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] L ) {  <CR> Letter W = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop v2 = new Envelop ( "Taipei" , "Kaohsiung" , W ) ;  <CR> v2 . display ( ) ;  <CR> W . display ( ) ;  <CR> }  <CR> Envelop ( String N6 , String F7 , Letter O5 ) {  <CR> this . senderAddr = N6 ;  <CR> this . receiverAddr = F7 ;  <CR> this . letter = O5 ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 