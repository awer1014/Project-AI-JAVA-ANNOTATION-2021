 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> public ChineseLetter ( String s3 , String n8 , String I0 , String I6 , String s1 ) {  <CR> this . title = s3 ;  <CR> this . receiver = n8 ;  <CR> this . content = I0 ;  <CR> this . sender = I6 ;  <CR> this . data = s1 ;  <CR> }  <CR> public static void main ( String [ ] k8 ) {  <CR> ChineseLetter w4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> w4 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> String receiver ;  <CR> public static void main ( String [ ] l0 ) {  <CR> ChineseLetter k5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> k5 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String l9 , String b1 , String w5 , String R8 , String f6 ) {  <CR> this . title = l9 ;  <CR> this . receiver = b1 ;  <CR> this . content = w5 ;  <CR> this . sender = R8 ;  <CR> this . data = f6 ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] o ) {  <CR> EnglishLetter W7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> W7 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String k1 , String n1 , String Z4 , String y0 , String k2 ) {  <CR> this . title = k1 ;  <CR> this . receiver = n1 ;  <CR> this . content = Z4 ;  <CR> this . sender = y0 ;  <CR> this . data = k2 ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public EnglishLetter ( String T1 , String w1 , String f2 , String X0 , String e9 ) {  <CR> this . title = T1 ;  <CR> this . receiver = w1 ;  <CR> this . content = f2 ;  <CR> this . sender = X0 ;  <CR> this . data = e9 ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> String receiver ;  <CR> String sender ;  <CR> public static void main ( String [ ] y1 ) {  <CR> EnglishLetter m4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> m4 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( String l5 , String H9 , Letter h1 ) {  <CR> this . senderAddr = l5 ;  <CR> this . receiverAddr = H9 ;  <CR> this . letter = h1 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] r5 ) {  <CR> Letter t7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x9 = new Envelop ( "Taipei" , "Kaohsiung" , t7 ) ;  <CR> x9 . display ( ) ;  <CR> t7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String l7 , String c6 , Letter c3 ) {  <CR> this . senderAddr = l7 ;  <CR> this . receiverAddr = c6 ;  <CR> this . letter = c3 ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] N ) {  <CR> Letter f5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop I0 = new Envelop ( "Taipei" , "Kaohsiung" , f5 ) ;  <CR> I0 . display ( ) ;  <CR> f5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 