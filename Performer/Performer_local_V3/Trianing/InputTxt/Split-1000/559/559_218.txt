 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> String content ;  <CR> public static void main ( String [ ] l0 ) {  <CR> ChineseLetter z3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> z3 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public ChineseLetter ( String h8 , String w , String d8 , String v3 , String V7 ) {  <CR> this . title = h8 ;  <CR> this . receiver = w ;  <CR> this . content = d8 ;  <CR> this . sender = v3 ;  <CR> this . data = V7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] o3 ) {  <CR> ChineseLetter K8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> K8 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> String content ;  <CR> public ChineseLetter ( String c1 , String D , String R5 , String l7 , String w8 ) {  <CR> this . title = c1 ;  <CR> this . receiver = D ;  <CR> this . content = R5 ;  <CR> this . sender = l7 ;  <CR> this . data = w8 ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public static void main ( String [ ] X ) {  <CR> EnglishLetter H = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> H . display ( ) ;  <CR> }  <CR> String content ;  <CR> public EnglishLetter ( String H3 , String J2 , String e1 , String a7 , String l0 ) {  <CR> this . title = H3 ;  <CR> this . receiver = J2 ;  <CR> this . content = e1 ;  <CR> this . sender = a7 ;  <CR> this . data = l0 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public EnglishLetter ( String j0 , String J9 , String M5 , String u8 , String Y7 ) {  <CR> this . title = j0 ;  <CR> this . receiver = J9 ;  <CR> this . content = M5 ;  <CR> this . sender = u8 ;  <CR> this . data = Y7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] S8 ) {  <CR> EnglishLetter j4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> j4 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String C5 , String d1 , Letter q2 ) {  <CR> this . senderAddr = C5 ;  <CR> this . receiverAddr = d1 ;  <CR> this . letter = q2 ;  <CR> }  <CR> public static void main ( String [ ] e4 ) {  <CR> Letter g6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop G8 = new Envelop ( "Taipei" , "Kaohsiung" , g6 ) ;  <CR> G8 . display ( ) ;  <CR> g6 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String P4 , String Y0 , Letter W9 ) {  <CR> this . senderAddr = P4 ;  <CR> this . receiverAddr = Y0 ;  <CR> this . letter = W9 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] i5 ) {  <CR> Letter J9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop l4 = new Envelop ( "Taipei" , "Kaohsiung" , J9 ) ;  <CR> l4 . display ( ) ;  <CR> J9 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 