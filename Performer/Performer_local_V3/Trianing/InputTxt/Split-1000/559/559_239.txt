 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] l5 ) {  <CR> ChineseLetter Z3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Z3 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public ChineseLetter ( String K3 , String R4 , String s2 , String D0 , String z0 ) {  <CR> this . title = K3 ;  <CR> this . receiver = R4 ;  <CR> this . content = s2 ;  <CR> this . sender = D0 ;  <CR> this . data = z0 ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> public ChineseLetter ( String E6 , String N6 , String d2 , String q8 , String r6 ) {  <CR> this . title = E6 ;  <CR> this . receiver = N6 ;  <CR> this . content = d2 ;  <CR> this . sender = q8 ;  <CR> this . data = r6 ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] w1 ) {  <CR> ChineseLetter Y6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Y6 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> public static void main ( String [ ] l6 ) {  <CR> EnglishLetter P6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> P6 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String D7 , String t2 , String E8 , String z2 , String C3 ) {  <CR> this . title = D7 ;  <CR> this . receiver = t2 ;  <CR> this . content = E8 ;  <CR> this . sender = z2 ;  <CR> this . data = C3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] I0 ) {  <CR> EnglishLetter q3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> q3 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String h , String f5 , String v7 , String m5 , String d2 ) {  <CR> this . title = h ;  <CR> this . receiver = f5 ;  <CR> this . content = v7 ;  <CR> this . sender = m5 ;  <CR> this . data = d2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String j7 , String U6 , Letter e1 ) {  <CR> this . senderAddr = j7 ;  <CR> this . receiverAddr = U6 ;  <CR> this . letter = e1 ;  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] S3 ) {  <CR> Letter x0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop M2 = new Envelop ( "Taipei" , "Kaohsiung" , x0 ) ;  <CR> M2 . display ( ) ;  <CR> x0 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String p2 , String T8 , Letter n9 ) {  <CR> this . senderAddr = p2 ;  <CR> this . receiverAddr = T8 ;  <CR> this . letter = n9 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] r5 ) {  <CR> Letter Z8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop H1 = new Envelop ( "Taipei" , "Kaohsiung" , Z8 ) ;  <CR> H1 . display ( ) ;  <CR> Z8 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 