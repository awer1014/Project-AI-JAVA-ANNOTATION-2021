 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String g8 , String y8 , String t , String y4 , String H3 ) {  <CR> this . title = g8 ;  <CR> this . receiver = y8 ;  <CR> this . content = t ;  <CR> this . sender = y4 ;  <CR> this . data = H3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] k1 ) {  <CR> ChineseLetter i5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> i5 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> String data ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] b5 ) {  <CR> ChineseLetter n = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> n . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> String title ;  <CR> public ChineseLetter ( String S3 , String B , String I1 , String t6 , String a8 ) {  <CR> this . title = S3 ;  <CR> this . receiver = B ;  <CR> this . content = I1 ;  <CR> this . sender = t6 ;  <CR> this . data = a8 ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] X2 ) {  <CR> EnglishLetter y0 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> y0 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String content ;  <CR> public EnglishLetter ( String f9 , String n2 , String D4 , String L7 , String H5 ) {  <CR> this . title = f9 ;  <CR> this . receiver = n2 ;  <CR> this . content = D4 ;  <CR> this . sender = L7 ;  <CR> this . data = H5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public EnglishLetter ( String t0 , String W4 , String j0 , String h6 , String Z ) {  <CR> this . title = t0 ;  <CR> this . receiver = W4 ;  <CR> this . content = j0 ;  <CR> this . sender = h6 ;  <CR> this . data = Z ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] S3 ) {  <CR> EnglishLetter B8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> B8 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String L6 , String H3 , Letter D8 ) {  <CR> this . senderAddr = L6 ;  <CR> this . receiverAddr = H3 ;  <CR> this . letter = D8 ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> public static void main ( String [ ] V4 ) {  <CR> Letter L0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R3 = new Envelop ( "Taipei" , "Kaohsiung" , L0 ) ;  <CR> R3 . display ( ) ;  <CR> L0 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( String E1 , String n2 , Letter A6 ) {  <CR> this . senderAddr = E1 ;  <CR> this . receiverAddr = n2 ;  <CR> this . letter = A6 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] k0 ) {  <CR> Letter h6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop k6 = new Envelop ( "Taipei" , "Kaohsiung" , h6 ) ;  <CR> k6 . display ( ) ;  <CR> h6 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 