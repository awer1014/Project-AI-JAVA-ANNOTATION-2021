 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> String receiver ;  <CR> String content ;  <CR> String title ;  <CR> public ChineseLetter ( String f7 , String x4 , String u9 , String N3 , String X4 ) {  <CR> this . title = f7 ;  <CR> this . receiver = x4 ;  <CR> this . content = u9 ;  <CR> this . sender = N3 ;  <CR> this . data = X4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] t1 ) {  <CR> ChineseLetter m = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> m . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] m2 ) {  <CR> ChineseLetter T1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> T1 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public ChineseLetter ( String Z2 , String Q6 , String z0 , String J0 , String F3 ) {  <CR> this . title = Z2 ;  <CR> this . receiver = Q6 ;  <CR> this . content = z0 ;  <CR> this . sender = J0 ;  <CR> this . data = F3 ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> String data ;  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] B7 ) {  <CR> EnglishLetter S7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> S7 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public EnglishLetter ( String o2 , String Z , String z5 , String q , String S5 ) {  <CR> this . title = o2 ;  <CR> this . receiver = Z ;  <CR> this . content = z5 ;  <CR> this . sender = q ;  <CR> this . data = S5 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public EnglishLetter ( String y , String h2 , String k8 , String d1 , String X3 ) {  <CR> this . title = y ;  <CR> this . receiver = h2 ;  <CR> this . content = k8 ;  <CR> this . sender = d1 ;  <CR> this . data = X3 ;  <CR> }  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> public static void main ( String [ ] a3 ) {  <CR> EnglishLetter e1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> e1 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String N , String i1 , Letter U5 ) {  <CR> this . senderAddr = N ;  <CR> this . receiverAddr = i1 ;  <CR> this . letter = U5 ;  <CR> }  <CR> public static void main ( String [ ] p9 ) {  <CR> Letter s9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop s7 = new Envelop ( "Taipei" , "Kaohsiung" , s9 ) ;  <CR> s7 . display ( ) ;  <CR> s9 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] v3 ) {  <CR> Letter z2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop V5 = new Envelop ( "Taipei" , "Kaohsiung" , z2 ) ;  <CR> V5 . display ( ) ;  <CR> z2 . display ( ) ;  <CR> }  <CR> Envelop ( String a5 , String i7 , Letter J6 ) {  <CR> this . senderAddr = a5 ;  <CR> this . receiverAddr = i7 ;  <CR> this . letter = J6 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 