 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] w5 ) {  <CR> ChineseLetter F2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> F2 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public ChineseLetter ( String d5 , String o2 , String y5 , String T1 , String p1 ) {  <CR> this . title = d5 ;  <CR> this . receiver = o2 ;  <CR> this . content = y5 ;  <CR> this . sender = T1 ;  <CR> this . data = p1 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] u9 ) {  <CR> ChineseLetter P3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> P3 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public ChineseLetter ( String z4 , String O6 , String w2 , String R1 , String q7 ) {  <CR> this . title = z4 ;  <CR> this . receiver = O6 ;  <CR> this . content = w2 ;  <CR> this . sender = R1 ;  <CR> this . data = q7 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] L8 ) {  <CR> EnglishLetter A9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> A9 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String H9 , String h2 , String z4 , String G4 , String L2 ) {  <CR> this . title = H9 ;  <CR> this . receiver = h2 ;  <CR> this . content = z4 ;  <CR> this . sender = G4 ;  <CR> this . data = L2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] n4 ) {  <CR> EnglishLetter a9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> a9 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String B9 , String U2 , String f3 , String y8 , String V7 ) {  <CR> this . title = B9 ;  <CR> this . receiver = U2 ;  <CR> this . content = f3 ;  <CR> this . sender = y8 ;  <CR> this . data = V7 ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] K6 ) {  <CR> Letter H8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop W8 = new Envelop ( "Taipei" , "Kaohsiung" , H8 ) ;  <CR> W8 . display ( ) ;  <CR> H8 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String X6 , String h , Letter H ) {  <CR> this . senderAddr = X6 ;  <CR> this . receiverAddr = h ;  <CR> this . letter = H ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String W4 , String D3 , Letter O8 ) {  <CR> this . senderAddr = W4 ;  <CR> this . receiverAddr = D3 ;  <CR> this . letter = O8 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] p4 ) {  <CR> Letter L4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop r0 = new Envelop ( "Taipei" , "Kaohsiung" , L4 ) ;  <CR> r0 . display ( ) ;  <CR> L4 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 