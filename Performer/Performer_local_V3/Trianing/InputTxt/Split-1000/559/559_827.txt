 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public static void main ( String [ ] T8 ) {  <CR> ChineseLetter j = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> j . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String m3 , String Q1 , String E5 , String g7 , String p ) {  <CR> this . title = m3 ;  <CR> this . receiver = Q1 ;  <CR> this . content = E5 ;  <CR> this . sender = g7 ;  <CR> this . data = p ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] D6 ) {  <CR> ChineseLetter A = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> A . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String W0 , String K7 , String N4 , String m , String C6 ) {  <CR> this . title = W0 ;  <CR> this . receiver = K7 ;  <CR> this . content = N4 ;  <CR> this . sender = m ;  <CR> this . data = C6 ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> String receiver ;  <CR> public static void main ( String [ ] M5 ) {  <CR> EnglishLetter B4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> B4 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String I5 , String o6 , String B5 , String k6 , String P ) {  <CR> this . title = I5 ;  <CR> this . receiver = o6 ;  <CR> this . content = B5 ;  <CR> this . sender = k6 ;  <CR> this . data = P ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] G7 ) {  <CR> EnglishLetter P4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> P4 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> String title ;  <CR> public EnglishLetter ( String y1 , String n3 , String t9 , String H1 , String T9 ) {  <CR> this . title = y1 ;  <CR> this . receiver = n3 ;  <CR> this . content = t9 ;  <CR> this . sender = H1 ;  <CR> this . data = T9 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( String s4 , String X7 , Letter r1 ) {  <CR> this . senderAddr = s4 ;  <CR> this . receiverAddr = X7 ;  <CR> this . letter = r1 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] J2 ) {  <CR> Letter l8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y = new Envelop ( "Taipei" , "Kaohsiung" , l8 ) ;  <CR> Y . display ( ) ;  <CR> l8 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String b1 , String z3 , Letter R1 ) {  <CR> this . senderAddr = b1 ;  <CR> this . receiverAddr = z3 ;  <CR> this . letter = R1 ;  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] E8 ) {  <CR> Letter v5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R5 = new Envelop ( "Taipei" , "Kaohsiung" , v5 ) ;  <CR> R5 . display ( ) ;  <CR> v5 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 