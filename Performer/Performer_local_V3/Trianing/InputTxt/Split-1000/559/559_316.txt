 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> public static void main ( String [ ] v4 ) {  <CR> ChineseLetter i6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> i6 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String T0 , String S8 , String E0 , String u0 , String K9 ) {  <CR> this . title = T0 ;  <CR> this . receiver = S8 ;  <CR> this . content = E0 ;  <CR> this . sender = u0 ;  <CR> this . data = K9 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] l1 ) {  <CR> ChineseLetter q1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> q1 . display ( ) ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public ChineseLetter ( String x2 , String N4 , String W6 , String J , String t2 ) {  <CR> this . title = x2 ;  <CR> this . receiver = N4 ;  <CR> this . content = W6 ;  <CR> this . sender = J ;  <CR> this . data = t2 ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public EnglishLetter ( String j0 , String J9 , String U7 , String N9 , String P4 ) {  <CR> this . title = j0 ;  <CR> this . receiver = J9 ;  <CR> this . content = U7 ;  <CR> this . sender = N9 ;  <CR> this . data = P4 ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] c4 ) {  <CR> EnglishLetter J = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> J . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String G , String A2 , String l1 , String E7 , String D9 ) {  <CR> this . title = G ;  <CR> this . receiver = A2 ;  <CR> this . content = l1 ;  <CR> this . sender = E7 ;  <CR> this . data = D9 ;  <CR> }  <CR> public static void main ( String [ ] d8 ) {  <CR> EnglishLetter l2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> l2 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String receiver ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String P4 , String X6 , Letter p0 ) {  <CR> this . senderAddr = P4 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = p0 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] e5 ) {  <CR> Letter G1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop f = new Envelop ( "Taipei" , "Kaohsiung" , G1 ) ;  <CR> f . display ( ) ;  <CR> G1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String K , String H0 , Letter Z1 ) {  <CR> this . senderAddr = K ;  <CR> this . receiverAddr = H0 ;  <CR> this . letter = Z1 ;  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] A2 ) {  <CR> Letter B7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop J6 = new Envelop ( "Taipei" , "Kaohsiung" , B7 ) ;  <CR> J6 . display ( ) ;  <CR> B7 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 