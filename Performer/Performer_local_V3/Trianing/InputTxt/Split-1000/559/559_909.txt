 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String E3 , String M , String h8 , String i7 , String E6 ) {  <CR> this . title = E3 ;  <CR> this . receiver = M ;  <CR> this . content = h8 ;  <CR> this . sender = i7 ;  <CR> this . data = E6 ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> public static void main ( String [ ] n3 ) {  <CR> ChineseLetter N3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> N3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String m8 , String b3 , String W7 , String V8 , String C5 ) {  <CR> this . title = m8 ;  <CR> this . receiver = b3 ;  <CR> this . content = W7 ;  <CR> this . sender = V8 ;  <CR> this . data = C5 ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] m4 ) {  <CR> ChineseLetter G0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> G0 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] J6 ) {  <CR> EnglishLetter s5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> s5 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> String data ;  <CR> public EnglishLetter ( String O8 , String H8 , String m4 , String t7 , String l5 ) {  <CR> this . title = O8 ;  <CR> this . receiver = H8 ;  <CR> this . content = m4 ;  <CR> this . sender = t7 ;  <CR> this . data = l5 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> String content ;  <CR> public EnglishLetter ( String j8 , String p7 , String q4 , String s9 , String I ) {  <CR> this . title = j8 ;  <CR> this . receiver = p7 ;  <CR> this . content = q4 ;  <CR> this . sender = s9 ;  <CR> this . data = I ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] G0 ) {  <CR> EnglishLetter V0 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> V0 . display ( ) ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> public static void main ( String [ ] T1 ) {  <CR> Letter c = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop e2 = new Envelop ( "Taipei" , "Kaohsiung" , c ) ;  <CR> e2 . display ( ) ;  <CR> c . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String J2 , String U4 , Letter R ) {  <CR> this . senderAddr = J2 ;  <CR> this . receiverAddr = U4 ;  <CR> this . letter = R ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] Z1 ) {  <CR> Letter f5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop W0 = new Envelop ( "Taipei" , "Kaohsiung" , f5 ) ;  <CR> W0 . display ( ) ;  <CR> f5 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( String Z5 , String V5 , Letter P2 ) {  <CR> this . senderAddr = Z5 ;  <CR> this . receiverAddr = V5 ;  <CR> this . letter = P2 ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 