 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> public static void main ( String [ ] F4 ) {  <CR> ChineseLetter x6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> x6 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> public ChineseLetter ( String G1 , String i , String d8 , String w1 , String C5 ) {  <CR> this . title = G1 ;  <CR> this . receiver = i ;  <CR> this . content = d8 ;  <CR> this . sender = w1 ;  <CR> this . data = C5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String g1 , String w9 , String J4 , String A1 , String u ) {  <CR> this . title = g1 ;  <CR> this . receiver = w9 ;  <CR> this . content = J4 ;  <CR> this . sender = A1 ;  <CR> this . data = u ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> String data ;  <CR> public static void main ( String [ ] N4 ) {  <CR> ChineseLetter m0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> m0 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] K5 ) {  <CR> EnglishLetter a = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> a . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String I2 , String i8 , String X7 , String c1 , String v2 ) {  <CR> this . title = I2 ;  <CR> this . receiver = i8 ;  <CR> this . content = X7 ;  <CR> this . sender = c1 ;  <CR> this . data = v2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] a8 ) {  <CR> EnglishLetter B9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> B9 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public EnglishLetter ( String k2 , String k0 , String I9 , String c7 , String g2 ) {  <CR> this . title = k2 ;  <CR> this . receiver = k0 ;  <CR> this . content = I9 ;  <CR> this . sender = c7 ;  <CR> this . data = g2 ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String Q5 , String l9 , Letter P4 ) {  <CR> this . senderAddr = Q5 ;  <CR> this . receiverAddr = l9 ;  <CR> this . letter = P4 ;  <CR> }  <CR> public static void main ( String [ ] K ) {  <CR> Letter E0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop p0 = new Envelop ( "Taipei" , "Kaohsiung" , E0 ) ;  <CR> p0 . display ( ) ;  <CR> E0 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String Z7 , String F1 , Letter g2 ) {  <CR> this . senderAddr = Z7 ;  <CR> this . receiverAddr = F1 ;  <CR> this . letter = g2 ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] o0 ) {  <CR> Letter e = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop c0 = new Envelop ( "Taipei" , "Kaohsiung" , e ) ;  <CR> c0 . display ( ) ;  <CR> e . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 