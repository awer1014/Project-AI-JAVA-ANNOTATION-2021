 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String T9 , String c3 , String q , String P1 , String u5 ) {  <CR> this . title = T9 ;  <CR> this . receiver = c3 ;  <CR> this . content = q ;  <CR> this . sender = P1 ;  <CR> this . data = u5 ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] R8 ) {  <CR> ChineseLetter S = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> S . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] S6 ) {  <CR> ChineseLetter W = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> W . display ( ) ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String data ;  <CR> public ChineseLetter ( String t1 , String X4 , String y9 , String l5 , String S ) {  <CR> this . title = t1 ;  <CR> this . receiver = X4 ;  <CR> this . content = y9 ;  <CR> this . sender = l5 ;  <CR> this . data = S ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> String receiver ;  <CR> public static void main ( String [ ] F6 ) {  <CR> EnglishLetter T7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> T7 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String W6 , String T , String Q4 , String q9 , String g6 ) {  <CR> this . title = W6 ;  <CR> this . receiver = T ;  <CR> this . content = Q4 ;  <CR> this . sender = q9 ;  <CR> this . data = g6 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> String content ;  <CR> String data ;  <CR> String receiver ;  <CR> public EnglishLetter ( String Q9 , String O9 , String W2 , String m0 , String G9 ) {  <CR> this . title = Q9 ;  <CR> this . receiver = O9 ;  <CR> this . content = W2 ;  <CR> this . sender = m0 ;  <CR> this . data = G9 ;  <CR> }  <CR> String sender ;  <CR> public static void main ( String [ ] p4 ) {  <CR> EnglishLetter c6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> c6 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] h1 ) {  <CR> Letter h3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop t = new Envelop ( "Taipei" , "Kaohsiung" , h3 ) ;  <CR> t . display ( ) ;  <CR> h3 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String Y1 , String d6 , Letter a ) {  <CR> this . senderAddr = Y1 ;  <CR> this . receiverAddr = d6 ;  <CR> this . letter = a ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String z , String N4 , Letter n6 ) {  <CR> this . senderAddr = z ;  <CR> this . receiverAddr = N4 ;  <CR> this . letter = n6 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] k ) {  <CR> Letter n8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R1 = new Envelop ( "Taipei" , "Kaohsiung" , n8 ) ;  <CR> R1 . display ( ) ;  <CR> n8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 