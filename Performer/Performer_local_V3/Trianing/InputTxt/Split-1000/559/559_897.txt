 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public static void main ( String [ ] B8 ) {  <CR> ChineseLetter n3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> n3 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public ChineseLetter ( String g4 , String H9 , String T6 , String Z2 , String W0 ) {  <CR> this . title = g4 ;  <CR> this . receiver = H9 ;  <CR> this . content = T6 ;  <CR> this . sender = Z2 ;  <CR> this . data = W0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String s , String z6 , String c1 , String H6 , String d4 ) {  <CR> this . title = s ;  <CR> this . receiver = z6 ;  <CR> this . content = c1 ;  <CR> this . sender = H6 ;  <CR> this . data = d4 ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] K5 ) {  <CR> ChineseLetter g7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> g7 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] I6 ) {  <CR> EnglishLetter R1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> R1 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String m7 , String W8 , String X7 , String j0 , String s6 ) {  <CR> this . title = m7 ;  <CR> this . receiver = W8 ;  <CR> this . content = X7 ;  <CR> this . sender = j0 ;  <CR> this . data = s6 ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String G , String z5 , String p4 , String C0 , String P4 ) {  <CR> this . title = G ;  <CR> this . receiver = z5 ;  <CR> this . content = p4 ;  <CR> this . sender = C0 ;  <CR> this . data = P4 ;  <CR> }  <CR> public static void main ( String [ ] P2 ) {  <CR> EnglishLetter H6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> H6 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( String b6 , String o7 , Letter q3 ) {  <CR> this . senderAddr = b6 ;  <CR> this . receiverAddr = o7 ;  <CR> this . letter = q3 ;  <CR> }  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] L7 ) {  <CR> Letter O1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop t7 = new Envelop ( "Taipei" , "Kaohsiung" , O1 ) ;  <CR> t7 . display ( ) ;  <CR> O1 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String l4 , String c , Letter c1 ) {  <CR> this . senderAddr = l4 ;  <CR> this . receiverAddr = c ;  <CR> this . letter = c1 ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] C2 ) {  <CR> Letter h = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop a3 = new Envelop ( "Taipei" , "Kaohsiung" , h ) ;  <CR> a3 . display ( ) ;  <CR> h . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 