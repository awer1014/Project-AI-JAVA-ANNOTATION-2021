 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String s1 , String d4 , String r1 , String n3 , String n6 ) {  <CR> this . title = s1 ;  <CR> this . receiver = d4 ;  <CR> this . content = r1 ;  <CR> this . sender = n3 ;  <CR> this . data = n6 ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] i5 ) {  <CR> ChineseLetter l9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> l9 . display ( ) ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String B , String C4 , String A , String O , String c6 ) {  <CR> this . title = B ;  <CR> this . receiver = C4 ;  <CR> this . content = A ;  <CR> this . sender = O ;  <CR> this . data = c6 ;  <CR> }  <CR> public static void main ( String [ ] d5 ) {  <CR> ChineseLetter O7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> O7 . display ( ) ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> String receiver ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public static void main ( String [ ] e9 ) {  <CR> EnglishLetter i5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> i5 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String W4 , String Q2 , String g4 , String H0 , String u0 ) {  <CR> this . title = W4 ;  <CR> this . receiver = Q2 ;  <CR> this . content = g4 ;  <CR> this . sender = H0 ;  <CR> this . data = u0 ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String Z2 , String A8 , String Q , String Z8 , String h6 ) {  <CR> this . title = Z2 ;  <CR> this . receiver = A8 ;  <CR> this . content = Q ;  <CR> this . sender = Z8 ;  <CR> this . data = h6 ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] h5 ) {  <CR> EnglishLetter G5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> G5 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String D1 , String q4 , Letter G9 ) {  <CR> this . senderAddr = D1 ;  <CR> this . receiverAddr = q4 ;  <CR> this . letter = G9 ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] S1 ) {  <CR> Letter f2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop S4 = new Envelop ( "Taipei" , "Kaohsiung" , f2 ) ;  <CR> S4 . display ( ) ;  <CR> f2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] H4 ) {  <CR> Letter C6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x9 = new Envelop ( "Taipei" , "Kaohsiung" , C6 ) ;  <CR> x9 . display ( ) ;  <CR> C6 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String h5 , String w4 , Letter v4 ) {  <CR> this . senderAddr = h5 ;  <CR> this . receiverAddr = w4 ;  <CR> this . letter = v4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 