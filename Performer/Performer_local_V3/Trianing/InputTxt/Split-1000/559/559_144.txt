 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public ChineseLetter ( String C9 , String o , String B2 , String K3 , String u7 ) {  <CR> this . title = C9 ;  <CR> this . receiver = o ;  <CR> this . content = B2 ;  <CR> this . sender = K3 ;  <CR> this . data = u7 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> String content ;  <CR> String sender ;  <CR> public static void main ( String [ ] d2 ) {  <CR> ChineseLetter M8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> M8 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] G3 ) {  <CR> ChineseLetter N8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> N8 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public ChineseLetter ( String C8 , String V1 , String O9 , String h4 , String R7 ) {  <CR> this . title = C8 ;  <CR> this . receiver = V1 ;  <CR> this . content = O9 ;  <CR> this . sender = h4 ;  <CR> this . data = R7 ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] Z5 ) {  <CR> EnglishLetter U6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> U6 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String X8 , String R , String P7 , String I2 , String I0 ) {  <CR> this . title = X8 ;  <CR> this . receiver = R ;  <CR> this . content = P7 ;  <CR> this . sender = I2 ;  <CR> this . data = I0 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String U0 , String n , String R3 , String x8 , String w3 ) {  <CR> this . title = U0 ;  <CR> this . receiver = n ;  <CR> this . content = R3 ;  <CR> this . sender = x8 ;  <CR> this . data = w3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] R6 ) {  <CR> EnglishLetter M0 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> M0 . display ( ) ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] A3 ) {  <CR> Letter A7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R4 = new Envelop ( "Taipei" , "Kaohsiung" , A7 ) ;  <CR> R4 . display ( ) ;  <CR> A7 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( String J , String o6 , Letter d7 ) {  <CR> this . senderAddr = J ;  <CR> this . receiverAddr = o6 ;  <CR> this . letter = d7 ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] q5 ) {  <CR> Letter Z2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop a8 = new Envelop ( "Taipei" , "Kaohsiung" , Z2 ) ;  <CR> a8 . display ( ) ;  <CR> Z2 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( String J , String n8 , Letter O7 ) {  <CR> this . senderAddr = J ;  <CR> this . receiverAddr = n8 ;  <CR> this . letter = O7 ;  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 