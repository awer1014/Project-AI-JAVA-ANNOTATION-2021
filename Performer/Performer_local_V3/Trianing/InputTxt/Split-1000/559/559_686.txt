 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String sender ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] T7 ) {  <CR> ChineseLetter V2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> V2 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String t1 , String r9 , String u4 , String g7 , String t5 ) {  <CR> this . title = t1 ;  <CR> this . receiver = r9 ;  <CR> this . content = u4 ;  <CR> this . sender = g7 ;  <CR> this . data = t5 ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String sender ;  <CR> String title ;  <CR> public ChineseLetter ( String z7 , String G5 , String A0 , String o1 , String h2 ) {  <CR> this . title = z7 ;  <CR> this . receiver = G5 ;  <CR> this . content = A0 ;  <CR> this . sender = o1 ;  <CR> this . data = h2 ;  <CR> }  <CR> public static void main ( String [ ] z8 ) {  <CR> ChineseLetter s0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> s0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] g9 ) {  <CR> EnglishLetter d1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> d1 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> public EnglishLetter ( String U5 , String x5 , String z , String Y9 , String e1 ) {  <CR> this . title = U5 ;  <CR> this . receiver = x5 ;  <CR> this . content = z ;  <CR> this . sender = Y9 ;  <CR> this . data = e1 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> String receiver ;  <CR> String title ;  <CR> public EnglishLetter ( String P4 , String H3 , String s , String V , String Y6 ) {  <CR> this . title = P4 ;  <CR> this . receiver = H3 ;  <CR> this . content = s ;  <CR> this . sender = V ;  <CR> this . data = Y6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> EnglishLetter Y8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> Y8 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] P8 ) {  <CR> Letter z1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop G2 = new Envelop ( "Taipei" , "Kaohsiung" , z1 ) ;  <CR> G2 . display ( ) ;  <CR> z1 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String F5 , String E3 , Letter C0 ) {  <CR> this . senderAddr = F5 ;  <CR> this . receiverAddr = E3 ;  <CR> this . letter = C0 ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> public static void main ( String [ ] E2 ) {  <CR> Letter M1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop i7 = new Envelop ( "Taipei" , "Kaohsiung" , M1 ) ;  <CR> i7 . display ( ) ;  <CR> M1 . display ( ) ;  <CR> }  <CR> Envelop ( String K1 , String f1 , Letter h1 ) {  <CR> this . senderAddr = K1 ;  <CR> this . receiverAddr = f1 ;  <CR> this . letter = h1 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 