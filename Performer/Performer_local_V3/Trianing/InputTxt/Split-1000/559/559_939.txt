 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] U2 ) {  <CR> ChineseLetter v5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> v5 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String a1 , String w6 , String f1 , String m , String L3 ) {  <CR> this . title = a1 ;  <CR> this . receiver = w6 ;  <CR> this . content = f1 ;  <CR> this . sender = m ;  <CR> this . data = L3 ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String Q0 , String o9 , String H6 , String w1 , String i2 ) {  <CR> this . title = Q0 ;  <CR> this . receiver = o9 ;  <CR> this . content = H6 ;  <CR> this . sender = w1 ;  <CR> this . data = i2 ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] u1 ) {  <CR> ChineseLetter H = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> H . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] D4 ) {  <CR> EnglishLetter i8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> i8 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String I , String r0 , String H2 , String U7 , String i6 ) {  <CR> this . title = I ;  <CR> this . receiver = r0 ;  <CR> this . content = H2 ;  <CR> this . sender = U7 ;  <CR> this . data = i6 ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String content ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String h1 , String q1 , String M4 , String s1 , String T ) {  <CR> this . title = h1 ;  <CR> this . receiver = q1 ;  <CR> this . content = M4 ;  <CR> this . sender = s1 ;  <CR> this . data = T ;  <CR> }  <CR> public static void main ( String [ ] k5 ) {  <CR> EnglishLetter D4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> D4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> Envelop ( String X5 , String B5 , Letter o9 ) {  <CR> this . senderAddr = X5 ;  <CR> this . receiverAddr = B5 ;  <CR> this . letter = o9 ;  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] S6 ) {  <CR> Letter g2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop K3 = new Envelop ( "Taipei" , "Kaohsiung" , g2 ) ;  <CR> K3 . display ( ) ;  <CR> g2 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String q0 , String Q0 , Letter A1 ) {  <CR> this . senderAddr = q0 ;  <CR> this . receiverAddr = Q0 ;  <CR> this . letter = A1 ;  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] I ) {  <CR> Letter J9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop V8 = new Envelop ( "Taipei" , "Kaohsiung" , J9 ) ;  <CR> V8 . display ( ) ;  <CR> J9 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 