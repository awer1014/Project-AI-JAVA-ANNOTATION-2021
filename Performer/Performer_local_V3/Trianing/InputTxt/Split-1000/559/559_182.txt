 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] w3 ) {  <CR> ChineseLetter a1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> a1 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String content ;  <CR> String sender ;  <CR> public ChineseLetter ( String V1 , String o5 , String o7 , String r , String r6 ) {  <CR> this . title = V1 ;  <CR> this . receiver = o5 ;  <CR> this . content = o7 ;  <CR> this . sender = r ;  <CR> this . data = r6 ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] s3 ) {  <CR> ChineseLetter b2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> b2 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String K7 , String c5 , String t1 , String p4 , String X4 ) {  <CR> this . title = K7 ;  <CR> this . receiver = c5 ;  <CR> this . content = t1 ;  <CR> this . sender = p4 ;  <CR> this . data = X4 ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public EnglishLetter ( String G2 , String L1 , String p , String W2 , String z3 ) {  <CR> this . title = G2 ;  <CR> this . receiver = L1 ;  <CR> this . content = p ;  <CR> this . sender = W2 ;  <CR> this . data = z3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] a3 ) {  <CR> EnglishLetter L6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> L6 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> public EnglishLetter ( String x2 , String f8 , String f , String C4 , String N3 ) {  <CR> this . title = x2 ;  <CR> this . receiver = f8 ;  <CR> this . content = f ;  <CR> this . sender = C4 ;  <CR> this . data = N3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] P2 ) {  <CR> EnglishLetter p5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> p5 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] c ) {  <CR> Letter a8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x0 = new Envelop ( "Taipei" , "Kaohsiung" , a8 ) ;  <CR> x0 . display ( ) ;  <CR> a8 . display ( ) ;  <CR> }  <CR> Envelop ( String n6 , String F5 , Letter Y9 ) {  <CR> this . senderAddr = n6 ;  <CR> this . receiverAddr = F5 ;  <CR> this . letter = Y9 ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> Envelop ( String W5 , String Z8 , Letter E0 ) {  <CR> this . senderAddr = W5 ;  <CR> this . receiverAddr = Z8 ;  <CR> this . letter = E0 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] U4 ) {  <CR> Letter S6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop w5 = new Envelop ( "Taipei" , "Kaohsiung" , S6 ) ;  <CR> w5 . display ( ) ;  <CR> S6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 