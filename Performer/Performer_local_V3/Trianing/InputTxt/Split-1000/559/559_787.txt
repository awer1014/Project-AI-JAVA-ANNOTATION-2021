 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> public ChineseLetter ( String I , String k , String l5 , String E0 , String B3 ) {  <CR> this . title = I ;  <CR> this . receiver = k ;  <CR> this . content = l5 ;  <CR> this . sender = E0 ;  <CR> this . data = B3 ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] S6 ) {  <CR> ChineseLetter Y0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Y0 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] i7 ) {  <CR> ChineseLetter m7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> m7 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String V6 , String s0 , String I5 , String f9 , String h1 ) {  <CR> this . title = V6 ;  <CR> this . receiver = s0 ;  <CR> this . content = I5 ;  <CR> this . sender = f9 ;  <CR> this . data = h1 ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String L8 , String y1 , String S6 , String L3 , String T ) {  <CR> this . title = L8 ;  <CR> this . receiver = y1 ;  <CR> this . content = S6 ;  <CR> this . sender = L3 ;  <CR> this . data = T ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] b9 ) {  <CR> EnglishLetter e7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> e7 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] g2 ) {  <CR> EnglishLetter i4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> i4 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public EnglishLetter ( String p0 , String N8 , String P4 , String L6 , String B8 ) {  <CR> this . title = p0 ;  <CR> this . receiver = N8 ;  <CR> this . content = P4 ;  <CR> this . sender = L6 ;  <CR> this . data = B8 ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] Y1 ) {  <CR> Letter Y2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop f3 = new Envelop ( "Taipei" , "Kaohsiung" , Y2 ) ;  <CR> f3 . display ( ) ;  <CR> Y2 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String R6 , String s1 , Letter H1 ) {  <CR> this . senderAddr = R6 ;  <CR> this . receiverAddr = s1 ;  <CR> this . letter = H1 ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> Envelop ( String J5 , String A , Letter z4 ) {  <CR> this . senderAddr = J5 ;  <CR> this . receiverAddr = A ;  <CR> this . letter = z4 ;  <CR> }  <CR> public static void main ( String [ ] M3 ) {  <CR> Letter h9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop P2 = new Envelop ( "Taipei" , "Kaohsiung" , h9 ) ;  <CR> P2 . display ( ) ;  <CR> h9 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 