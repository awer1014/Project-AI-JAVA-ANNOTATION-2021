 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] a ) {  <CR> ChineseLetter c8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> c8 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String y5 , String c4 , String n6 , String l2 , String X2 ) {  <CR> this . title = y5 ;  <CR> this . receiver = c4 ;  <CR> this . content = n6 ;  <CR> this . sender = l2 ;  <CR> this . data = X2 ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String C5 , String K1 , String b2 , String a5 , String l6 ) {  <CR> this . title = C5 ;  <CR> this . receiver = K1 ;  <CR> this . content = b2 ;  <CR> this . sender = a5 ;  <CR> this . data = l6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> public static void main ( String [ ] z8 ) {  <CR> ChineseLetter q6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> q6 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> String title ;  <CR> String sender ;  <CR> public EnglishLetter ( String Q2 , String U0 , String y8 , String E4 , String U8 ) {  <CR> this . title = Q2 ;  <CR> this . receiver = U0 ;  <CR> this . content = y8 ;  <CR> this . sender = E4 ;  <CR> this . data = U8 ;  <CR> }  <CR> public static void main ( String [ ] q2 ) {  <CR> EnglishLetter z9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> z9 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String K , String s9 , String H9 , String k9 , String r0 ) {  <CR> this . title = K ;  <CR> this . receiver = s9 ;  <CR> this . content = H9 ;  <CR> this . sender = k9 ;  <CR> this . data = r0 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public static void main ( String [ ] k ) {  <CR> EnglishLetter z = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> z . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] t5 ) {  <CR> Letter T9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop n7 = new Envelop ( "Taipei" , "Kaohsiung" , T9 ) ;  <CR> n7 . display ( ) ;  <CR> T9 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( String u3 , String T2 , Letter v4 ) {  <CR> this . senderAddr = u3 ;  <CR> this . receiverAddr = T2 ;  <CR> this . letter = v4 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String T0 , String E3 , Letter H8 ) {  <CR> this . senderAddr = T0 ;  <CR> this . receiverAddr = E3 ;  <CR> this . letter = H8 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] X7 ) {  <CR> Letter g1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop v5 = new Envelop ( "Taipei" , "Kaohsiung" , g1 ) ;  <CR> v5 . display ( ) ;  <CR> g1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 