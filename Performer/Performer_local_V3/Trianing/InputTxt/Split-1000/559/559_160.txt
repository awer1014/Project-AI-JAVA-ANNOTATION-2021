 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String sender ;  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public ChineseLetter ( String P2 , String B0 , String x2 , String M5 , String V ) {  <CR> this . title = P2 ;  <CR> this . receiver = B0 ;  <CR> this . content = x2 ;  <CR> this . sender = M5 ;  <CR> this . data = V ;  <CR> }  <CR> public static void main ( String [ ] y8 ) {  <CR> ChineseLetter n2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> n2 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] A5 ) {  <CR> ChineseLetter m = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> m . display ( ) ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> String data ;  <CR> public ChineseLetter ( String h0 , String e1 , String C2 , String F0 , String E7 ) {  <CR> this . title = h0 ;  <CR> this . receiver = e1 ;  <CR> this . content = C2 ;  <CR> this . sender = F0 ;  <CR> this . data = E7 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] p7 ) {  <CR> EnglishLetter g8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> g8 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public EnglishLetter ( String C9 , String Y , String q3 , String X1 , String C5 ) {  <CR> this . title = C9 ;  <CR> this . receiver = Y ;  <CR> this . content = q3 ;  <CR> this . sender = X1 ;  <CR> this . data = C5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public EnglishLetter ( String Z1 , String G9 , String H5 , String F9 , String P2 ) {  <CR> this . title = Z1 ;  <CR> this . receiver = G9 ;  <CR> this . content = H5 ;  <CR> this . sender = F9 ;  <CR> this . data = P2 ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] p7 ) {  <CR> EnglishLetter E4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> E4 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] c8 ) {  <CR> Letter e2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop m0 = new Envelop ( "Taipei" , "Kaohsiung" , e2 ) ;  <CR> m0 . display ( ) ;  <CR> e2 . display ( ) ;  <CR> }  <CR> Envelop ( String z7 , String D3 , Letter r ) {  <CR> this . senderAddr = z7 ;  <CR> this . receiverAddr = D3 ;  <CR> this . letter = r ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] O9 ) {  <CR> Letter S0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R3 = new Envelop ( "Taipei" , "Kaohsiung" , S0 ) ;  <CR> R3 . display ( ) ;  <CR> S0 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> Envelop ( String F , String J4 , Letter s3 ) {  <CR> this . senderAddr = F ;  <CR> this . receiverAddr = J4 ;  <CR> this . letter = s3 ;  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 