 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] R5 ) {  <CR> ChineseLetter Z8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Z8 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public ChineseLetter ( String i9 , String l5 , String u0 , String E2 , String S3 ) {  <CR> this . title = i9 ;  <CR> this . receiver = l5 ;  <CR> this . content = u0 ;  <CR> this . sender = E2 ;  <CR> this . data = S3 ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> String title ;  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] k8 ) {  <CR> ChineseLetter y7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> y7 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public ChineseLetter ( String Z5 , String N0 , String l7 , String d4 , String a4 ) {  <CR> this . title = Z5 ;  <CR> this . receiver = N0 ;  <CR> this . content = l7 ;  <CR> this . sender = d4 ;  <CR> this . data = a4 ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] E5 ) {  <CR> EnglishLetter S = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> S . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> String title ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String O1 , String Y2 , String d1 , String R8 , String Q4 ) {  <CR> this . title = O1 ;  <CR> this . receiver = Y2 ;  <CR> this . content = d1 ;  <CR> this . sender = R8 ;  <CR> this . data = Q4 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> String title ;  <CR> public EnglishLetter ( String t5 , String g0 , String c3 , String m , String u0 ) {  <CR> this . title = t5 ;  <CR> this . receiver = g0 ;  <CR> this . content = c3 ;  <CR> this . sender = m ;  <CR> this . data = u0 ;  <CR> }  <CR> public static void main ( String [ ] T2 ) {  <CR> EnglishLetter N3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> N3 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] Q ) {  <CR> Letter w3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop U4 = new Envelop ( "Taipei" , "Kaohsiung" , w3 ) ;  <CR> U4 . display ( ) ;  <CR> w3 . display ( ) ;  <CR> }  <CR> Envelop ( String y3 , String P5 , Letter m4 ) {  <CR> this . senderAddr = y3 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = m4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] F9 ) {  <CR> Letter h9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop K9 = new Envelop ( "Taipei" , "Kaohsiung" , h9 ) ;  <CR> K9 . display ( ) ;  <CR> h9 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String P2 , String Y2 , Letter i3 ) {  <CR> this . senderAddr = P2 ;  <CR> this . receiverAddr = Y2 ;  <CR> this . letter = i3 ;  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 