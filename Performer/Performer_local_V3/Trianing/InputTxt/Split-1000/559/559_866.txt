 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] v ) {  <CR> ChineseLetter n0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> n0 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> String content ;  <CR> String sender ;  <CR> public ChineseLetter ( String V4 , String O1 , String m4 , String S5 , String b5 ) {  <CR> this . title = V4 ;  <CR> this . receiver = O1 ;  <CR> this . content = m4 ;  <CR> this . sender = S5 ;  <CR> this . data = b5 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String i3 , String o0 , String X0 , String X1 , String c ) {  <CR> this . title = i3 ;  <CR> this . receiver = o0 ;  <CR> this . content = X0 ;  <CR> this . sender = X1 ;  <CR> this . data = c ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> String data ;  <CR> public static void main ( String [ ] e8 ) {  <CR> ChineseLetter f7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> f7 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] j9 ) {  <CR> EnglishLetter A7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> A7 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public EnglishLetter ( String r1 , String w6 , String C7 , String a6 , String T5 ) {  <CR> this . title = r1 ;  <CR> this . receiver = w6 ;  <CR> this . content = C7 ;  <CR> this . sender = a6 ;  <CR> this . data = T5 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] O2 ) {  <CR> EnglishLetter f2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> f2 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> String content ;  <CR> String sender ;  <CR> public EnglishLetter ( String M , String r0 , String F3 , String s2 , String p8 ) {  <CR> this . title = M ;  <CR> this . receiver = r0 ;  <CR> this . content = F3 ;  <CR> this . sender = s2 ;  <CR> this . data = p8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] T6 ) {  <CR> Letter H5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Q6 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> Q6 . display ( ) ;  <CR> H5 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String F8 , String B8 , Letter o7 ) {  <CR> this . senderAddr = F8 ;  <CR> this . receiverAddr = B8 ;  <CR> this . letter = o7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String T2 , String E6 , Letter h6 ) {  <CR> this . senderAddr = T2 ;  <CR> this . receiverAddr = E6 ;  <CR> this . letter = h6 ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] Y1 ) {  <CR> Letter Z3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop N8 = new Envelop ( "Taipei" , "Kaohsiung" , Z3 ) ;  <CR> N8 . display ( ) ;  <CR> Z3 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 