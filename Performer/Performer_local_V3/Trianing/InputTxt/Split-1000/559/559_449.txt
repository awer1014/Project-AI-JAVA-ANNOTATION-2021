 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] q5 ) {  <CR> ChineseLetter p = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> p . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> public ChineseLetter ( String N , String H1 , String K , String d0 , String R5 ) {  <CR> this . title = N ;  <CR> this . receiver = H1 ;  <CR> this . content = K ;  <CR> this . sender = d0 ;  <CR> this . data = R5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String sender ;  <CR> String title ;  <CR> public static void main ( String [ ] N9 ) {  <CR> ChineseLetter A6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> A6 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String c9 , String D5 , String A8 , String E3 , String D ) {  <CR> this . title = c9 ;  <CR> this . receiver = D5 ;  <CR> this . content = A8 ;  <CR> this . sender = E3 ;  <CR> this . data = D ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> String content ;  <CR> public static void main ( String [ ] T4 ) {  <CR> EnglishLetter R9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> R9 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String d2 , String Z , String H3 , String q , String c4 ) {  <CR> this . title = d2 ;  <CR> this . receiver = Z ;  <CR> this . content = H3 ;  <CR> this . sender = q ;  <CR> this . data = c4 ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] V1 ) {  <CR> EnglishLetter p7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> p7 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public EnglishLetter ( String A1 , String d0 , String o2 , String X6 , String g6 ) {  <CR> this . title = A1 ;  <CR> this . receiver = d0 ;  <CR> this . content = o2 ;  <CR> this . sender = X6 ;  <CR> this . data = g6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] U6 ) {  <CR> Letter Y5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop S5 = new Envelop ( "Taipei" , "Kaohsiung" , Y5 ) ;  <CR> S5 . display ( ) ;  <CR> Y5 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String n7 , String y1 , Letter x9 ) {  <CR> this . senderAddr = n7 ;  <CR> this . receiverAddr = y1 ;  <CR> this . letter = x9 ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] v4 ) {  <CR> Letter k1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop c4 = new Envelop ( "Taipei" , "Kaohsiung" , k1 ) ;  <CR> c4 . display ( ) ;  <CR> k1 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String x6 , String i8 , Letter x4 ) {  <CR> this . senderAddr = x6 ;  <CR> this . receiverAddr = i8 ;  <CR> this . letter = x4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 