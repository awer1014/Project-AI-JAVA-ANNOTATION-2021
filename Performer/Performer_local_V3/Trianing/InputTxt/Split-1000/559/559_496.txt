 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String Q6 , String C1 , String O0 , String x8 , String e7 ) {  <CR> this . title = Q6 ;  <CR> this . receiver = C1 ;  <CR> this . content = O0 ;  <CR> this . sender = x8 ;  <CR> this . data = e7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] W3 ) {  <CR> ChineseLetter f8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> f8 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] a0 ) {  <CR> ChineseLetter c8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> c8 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String x9 , String U0 , String v9 , String p2 , String k ) {  <CR> this . title = x9 ;  <CR> this . receiver = U0 ;  <CR> this . content = v9 ;  <CR> this . sender = p2 ;  <CR> this . data = k ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public EnglishLetter ( String I3 , String Z2 , String s2 , String A8 , String Q7 ) {  <CR> this . title = I3 ;  <CR> this . receiver = Z2 ;  <CR> this . content = s2 ;  <CR> this . sender = A8 ;  <CR> this . data = Q7 ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] j1 ) {  <CR> EnglishLetter g2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> g2 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String y , String N2 , String y1 , String F5 , String x3 ) {  <CR> this . title = y ;  <CR> this . receiver = N2 ;  <CR> this . content = y1 ;  <CR> this . sender = F5 ;  <CR> this . data = x3 ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public static void main ( String [ ] Z ) {  <CR> EnglishLetter Y7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> Y7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] M7 ) {  <CR> Letter L0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop m7 = new Envelop ( "Taipei" , "Kaohsiung" , L0 ) ;  <CR> m7 . display ( ) ;  <CR> L0 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String H8 , String o , Letter u9 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = o ;  <CR> this . letter = u9 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> public static void main ( String [ ] K1 ) {  <CR> Letter L8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y4 = new Envelop ( "Taipei" , "Kaohsiung" , L8 ) ;  <CR> Y4 . display ( ) ;  <CR> L8 . display ( ) ;  <CR> }  <CR> Envelop ( String A4 , String q2 , Letter k6 ) {  <CR> this . senderAddr = A4 ;  <CR> this . receiverAddr = q2 ;  <CR> this . letter = k6 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 