 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public static void main ( String [ ] S7 ) {  <CR> ChineseLetter t7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> t7 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public ChineseLetter ( String j6 , String a , String v7 , String f5 , String n6 ) {  <CR> this . title = j6 ;  <CR> this . receiver = a ;  <CR> this . content = v7 ;  <CR> this . sender = f5 ;  <CR> this . data = n6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] F0 ) {  <CR> ChineseLetter t2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> t2 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String n5 , String Z2 , String K7 , String N3 , String C0 ) {  <CR> this . title = n5 ;  <CR> this . receiver = Z2 ;  <CR> this . content = K7 ;  <CR> this . sender = N3 ;  <CR> this . data = C0 ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] B9 ) {  <CR> EnglishLetter h4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> h4 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String T , String D0 , String N6 , String H8 , String V6 ) {  <CR> this . title = T ;  <CR> this . receiver = D0 ;  <CR> this . content = N6 ;  <CR> this . sender = H8 ;  <CR> this . data = V6 ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] l5 ) {  <CR> EnglishLetter A2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> A2 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String U0 , String X5 , String t6 , String o2 , String P3 ) {  <CR> this . title = U0 ;  <CR> this . receiver = X5 ;  <CR> this . content = t6 ;  <CR> this . sender = o2 ;  <CR> this . data = P3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String D3 , String H , Letter M ) {  <CR> this . senderAddr = D3 ;  <CR> this . receiverAddr = H ;  <CR> this . letter = M ;  <CR> }  <CR> public static void main ( String [ ] X0 ) {  <CR> Letter e9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop D2 = new Envelop ( "Taipei" , "Kaohsiung" , e9 ) ;  <CR> D2 . display ( ) ;  <CR> e9 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] W7 ) {  <CR> Letter d3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Q4 = new Envelop ( "Taipei" , "Kaohsiung" , d3 ) ;  <CR> Q4 . display ( ) ;  <CR> d3 . display ( ) ;  <CR> }  <CR> Envelop ( String O7 , String x0 , Letter G4 ) {  <CR> this . senderAddr = O7 ;  <CR> this . receiverAddr = x0 ;  <CR> this . letter = G4 ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 