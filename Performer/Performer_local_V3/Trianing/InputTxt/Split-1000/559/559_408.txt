 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] n5 ) {  <CR> ChineseLetter w8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> w8 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public ChineseLetter ( String c2 , String I6 , String N7 , String V , String H8 ) {  <CR> this . title = c2 ;  <CR> this . receiver = I6 ;  <CR> this . content = N7 ;  <CR> this . sender = V ;  <CR> this . data = H8 ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> String content ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public ChineseLetter ( String W9 , String c0 , String y5 , String P9 , String o0 ) {  <CR> this . title = W9 ;  <CR> this . receiver = c0 ;  <CR> this . content = y5 ;  <CR> this . sender = P9 ;  <CR> this . data = o0 ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] C1 ) {  <CR> ChineseLetter q4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> q4 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public static void main ( String [ ] J9 ) {  <CR> EnglishLetter A2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> A2 . display ( ) ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public EnglishLetter ( String n9 , String I3 , String U , String E , String h7 ) {  <CR> this . title = n9 ;  <CR> this . receiver = I3 ;  <CR> this . content = U ;  <CR> this . sender = E ;  <CR> this . data = h7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] T9 ) {  <CR> EnglishLetter l6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> l6 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public EnglishLetter ( String c2 , String A3 , String S1 , String v2 , String R1 ) {  <CR> this . title = c2 ;  <CR> this . receiver = A3 ;  <CR> this . content = S1 ;  <CR> this . sender = v2 ;  <CR> this . data = R1 ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] b1 ) {  <CR> Letter Z7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop l8 = new Envelop ( "Taipei" , "Kaohsiung" , Z7 ) ;  <CR> l8 . display ( ) ;  <CR> Z7 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String Q1 , String R0 , Letter s7 ) {  <CR> this . senderAddr = Q1 ;  <CR> this . receiverAddr = R0 ;  <CR> this . letter = s7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] M5 ) {  <CR> Letter i4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop C0 = new Envelop ( "Taipei" , "Kaohsiung" , i4 ) ;  <CR> C0 . display ( ) ;  <CR> i4 . display ( ) ;  <CR> }  <CR> Envelop ( String B , String Z9 , Letter V8 ) {  <CR> this . senderAddr = B ;  <CR> this . receiverAddr = Z9 ;  <CR> this . letter = V8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 