 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String P7 , String k7 , String m3 , String H7 , String y8 ) {  <CR> this . title = P7 ;  <CR> this . receiver = k7 ;  <CR> this . content = m3 ;  <CR> this . sender = H7 ;  <CR> this . data = y8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] F ) {  <CR> ChineseLetter k1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> k1 . display ( ) ;  <CR> }  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String V1 , String i9 , String j , String C3 , String b9 ) {  <CR> this . title = V1 ;  <CR> this . receiver = i9 ;  <CR> this . content = j ;  <CR> this . sender = C3 ;  <CR> this . data = b9 ;  <CR> }  <CR> public static void main ( String [ ] z8 ) {  <CR> ChineseLetter p6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> p6 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> String content ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public EnglishLetter ( String j7 , String h3 , String G7 , String g , String s4 ) {  <CR> this . title = j7 ;  <CR> this . receiver = h3 ;  <CR> this . content = G7 ;  <CR> this . sender = g ;  <CR> this . data = s4 ;  <CR> }  <CR> public static void main ( String [ ] q0 ) {  <CR> EnglishLetter a7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> a7 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public static void main ( String [ ] D ) {  <CR> EnglishLetter D8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> D8 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String e2 , String O3 , String U1 , String y6 , String o2 ) {  <CR> this . title = e2 ;  <CR> this . receiver = O3 ;  <CR> this . content = U1 ;  <CR> this . sender = y6 ;  <CR> this . data = o2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] K2 ) {  <CR> Letter R3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop m6 = new Envelop ( "Taipei" , "Kaohsiung" , R3 ) ;  <CR> m6 . display ( ) ;  <CR> R3 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( String m4 , String o2 , Letter a6 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = o2 ;  <CR> this . letter = a6 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String P4 , String e6 , Letter X1 ) {  <CR> this . senderAddr = P4 ;  <CR> this . receiverAddr = e6 ;  <CR> this . letter = X1 ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> public static void main ( String [ ] L4 ) {  <CR> Letter L5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R9 = new Envelop ( "Taipei" , "Kaohsiung" , L5 ) ;  <CR> R9 . display ( ) ;  <CR> L5 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 