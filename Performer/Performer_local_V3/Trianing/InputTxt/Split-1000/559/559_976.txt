 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String P2 , String W3 , String E6 , String m0 , String K2 ) {  <CR> this . title = P2 ;  <CR> this . receiver = W3 ;  <CR> this . content = E6 ;  <CR> this . sender = m0 ;  <CR> this . data = K2 ;  <CR> }  <CR> public static void main ( String [ ] C4 ) {  <CR> ChineseLetter r6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> r6 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> String data ;  <CR> public ChineseLetter ( String v1 , String n2 , String S9 , String y7 , String q6 ) {  <CR> this . title = v1 ;  <CR> this . receiver = n2 ;  <CR> this . content = S9 ;  <CR> this . sender = y7 ;  <CR> this . data = q6 ;  <CR> }  <CR> public static void main ( String [ ] l7 ) {  <CR> ChineseLetter P2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> P2 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String title ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] I8 ) {  <CR> EnglishLetter Q9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> Q9 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String j8 , String Q0 , String j0 , String F0 , String R4 ) {  <CR> this . title = j8 ;  <CR> this . receiver = Q0 ;  <CR> this . content = j0 ;  <CR> this . sender = F0 ;  <CR> this . data = R4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> public static void main ( String [ ] T ) {  <CR> EnglishLetter A5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> A5 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public EnglishLetter ( String k4 , String P7 , String V1 , String q , String w9 ) {  <CR> this . title = k4 ;  <CR> this . receiver = P7 ;  <CR> this . content = V1 ;  <CR> this . sender = q ;  <CR> this . data = w9 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String g8 , String P9 , Letter Q2 ) {  <CR> this . senderAddr = g8 ;  <CR> this . receiverAddr = P9 ;  <CR> this . letter = Q2 ;  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] R ) {  <CR> Letter t0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop j4 = new Envelop ( "Taipei" , "Kaohsiung" , t0 ) ;  <CR> j4 . display ( ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String E9 , String Q8 , Letter x1 ) {  <CR> this . senderAddr = E9 ;  <CR> this . receiverAddr = Q8 ;  <CR> this . letter = x1 ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> public static void main ( String [ ] X6 ) {  <CR> Letter B0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop r6 = new Envelop ( "Taipei" , "Kaohsiung" , B0 ) ;  <CR> r6 . display ( ) ;  <CR> B0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 