 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> String sender ;  <CR> public ChineseLetter ( String J9 , String C , String l , String U7 , String F7 ) {  <CR> this . title = J9 ;  <CR> this . receiver = C ;  <CR> this . content = l ;  <CR> this . sender = U7 ;  <CR> this . data = F7 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] R2 ) {  <CR> ChineseLetter g7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> g7 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String s4 , String h3 , String I , String Y3 , String I1 ) {  <CR> this . title = s4 ;  <CR> this . receiver = h3 ;  <CR> this . content = I ;  <CR> this . sender = Y3 ;  <CR> this . data = I1 ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] f ) {  <CR> ChineseLetter v2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> v2 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public EnglishLetter ( String a7 , String r3 , String Q0 , String D7 , String A0 ) {  <CR> this . title = a7 ;  <CR> this . receiver = r3 ;  <CR> this . content = Q0 ;  <CR> this . sender = D7 ;  <CR> this . data = A0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> public static void main ( String [ ] t5 ) {  <CR> EnglishLetter v1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> v1 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String J4 , String D1 , String z2 , String Q2 , String K4 ) {  <CR> this . title = J4 ;  <CR> this . receiver = D1 ;  <CR> this . content = z2 ;  <CR> this . sender = Q2 ;  <CR> this . data = K4 ;  <CR> }  <CR> public static void main ( String [ ] R9 ) {  <CR> EnglishLetter w4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> w4 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B9 ) {  <CR> Letter t5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop X5 = new Envelop ( "Taipei" , "Kaohsiung" , t5 ) ;  <CR> X5 . display ( ) ;  <CR> t5 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String O5 , String K7 , Letter Q ) {  <CR> this . senderAddr = O5 ;  <CR> this . receiverAddr = K7 ;  <CR> this . letter = Q ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] M6 ) {  <CR> Letter D7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop u5 = new Envelop ( "Taipei" , "Kaohsiung" , D7 ) ;  <CR> u5 . display ( ) ;  <CR> D7 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> Envelop ( String y9 , String x4 , Letter k0 ) {  <CR> this . senderAddr = y9 ;  <CR> this . receiverAddr = x4 ;  <CR> this . letter = k0 ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 