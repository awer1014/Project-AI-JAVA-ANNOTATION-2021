 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] m1 ) {  <CR> ChineseLetter V5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> V5 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String S4 , String p3 , String i1 , String P , String f2 ) {  <CR> this . title = S4 ;  <CR> this . receiver = p3 ;  <CR> this . content = i1 ;  <CR> this . sender = P ;  <CR> this . data = f2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String w8 , String A0 , String t3 , String u8 , String H ) {  <CR> this . title = w8 ;  <CR> this . receiver = A0 ;  <CR> this . content = t3 ;  <CR> this . sender = u8 ;  <CR> this . data = H ;  <CR> }  <CR> public static void main ( String [ ] Z9 ) {  <CR> ChineseLetter G4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> G4 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] V4 ) {  <CR> EnglishLetter Y9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> Y9 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public EnglishLetter ( String M4 , String P6 , String O5 , String D9 , String J7 ) {  <CR> this . title = M4 ;  <CR> this . receiver = P6 ;  <CR> this . content = O5 ;  <CR> this . sender = D9 ;  <CR> this . data = J7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] B8 ) {  <CR> EnglishLetter D4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> D4 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String q9 , String D6 , String X2 , String l5 , String e2 ) {  <CR> this . title = q9 ;  <CR> this . receiver = D6 ;  <CR> this . content = X2 ;  <CR> this . sender = l5 ;  <CR> this . data = e2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] M2 ) {  <CR> Letter M0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop a6 = new Envelop ( "Taipei" , "Kaohsiung" , M0 ) ;  <CR> a6 . display ( ) ;  <CR> M0 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> Envelop ( String d4 , String O8 , Letter D ) {  <CR> this . senderAddr = d4 ;  <CR> this . receiverAddr = O8 ;  <CR> this . letter = D ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] M1 ) {  <CR> Letter p1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop n5 = new Envelop ( "Taipei" , "Kaohsiung" , p1 ) ;  <CR> n5 . display ( ) ;  <CR> p1 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String a0 , String z4 , Letter x4 ) {  <CR> this . senderAddr = a0 ;  <CR> this . receiverAddr = z4 ;  <CR> this . letter = x4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 