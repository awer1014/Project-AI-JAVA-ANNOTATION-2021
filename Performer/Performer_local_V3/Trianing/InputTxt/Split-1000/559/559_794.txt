 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public ChineseLetter ( String a1 , String c0 , String K4 , String I9 , String U2 ) {  <CR> this . title = a1 ;  <CR> this . receiver = c0 ;  <CR> this . content = K4 ;  <CR> this . sender = I9 ;  <CR> this . data = U2 ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> public static void main ( String [ ] Y2 ) {  <CR> ChineseLetter O3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> O3 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public static void main ( String [ ] p6 ) {  <CR> ChineseLetter X3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> X3 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public ChineseLetter ( String M , String a9 , String B3 , String q8 , String s5 ) {  <CR> this . title = M ;  <CR> this . receiver = a9 ;  <CR> this . content = B3 ;  <CR> this . sender = q8 ;  <CR> this . data = s5 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] Y9 ) {  <CR> EnglishLetter z6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> z6 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String V6 , String p0 , String u2 , String Q9 , String j ) {  <CR> this . title = V6 ;  <CR> this . receiver = p0 ;  <CR> this . content = u2 ;  <CR> this . sender = Q9 ;  <CR> this . data = j ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> String title ;  <CR> String content ;  <CR> String receiver ;  <CR> String data ;  <CR> public static void main ( String [ ] e6 ) {  <CR> EnglishLetter M6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> M6 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String X , String z5 , String j4 , String o7 , String O2 ) {  <CR> this . title = X ;  <CR> this . receiver = z5 ;  <CR> this . content = j4 ;  <CR> this . sender = o7 ;  <CR> this . data = O2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] L8 ) {  <CR> Letter x4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop Y8 = new Envelop ( "Taipei" , "Kaohsiung" , x4 ) ;  <CR> Y8 . display ( ) ;  <CR> x4 . display ( ) ;  <CR> }  <CR> Envelop ( String B , String s5 , Letter c8 ) {  <CR> this . senderAddr = B ;  <CR> this . receiverAddr = s5 ;  <CR> this . letter = c8 ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] A5 ) {  <CR> Letter n1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop l0 = new Envelop ( "Taipei" , "Kaohsiung" , n1 ) ;  <CR> l0 . display ( ) ;  <CR> n1 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> Envelop ( String R , String c0 , Letter V9 ) {  <CR> this . senderAddr = R ;  <CR> this . receiverAddr = c0 ;  <CR> this . letter = V9 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 