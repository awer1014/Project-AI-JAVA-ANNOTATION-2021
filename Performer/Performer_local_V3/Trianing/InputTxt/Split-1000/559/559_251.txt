 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> public static void main ( String [ ] i2 ) {  <CR> ChineseLetter N4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> N4 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String L8 , String V1 , String y2 , String A4 , String B4 ) {  <CR> this . title = L8 ;  <CR> this . receiver = V1 ;  <CR> this . content = y2 ;  <CR> this . sender = A4 ;  <CR> this . data = B4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String sender ;  <CR> String title ;  <CR> public static void main ( String [ ] V3 ) {  <CR> ChineseLetter E = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> E . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String Q4 , String M6 , String T , String v0 , String H6 ) {  <CR> this . title = Q4 ;  <CR> this . receiver = M6 ;  <CR> this . content = T ;  <CR> this . sender = v0 ;  <CR> this . data = H6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] a9 ) {  <CR> EnglishLetter f5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> f5 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String r6 , String M1 , String I5 , String U , String W9 ) {  <CR> this . title = r6 ;  <CR> this . receiver = M1 ;  <CR> this . content = I5 ;  <CR> this . sender = U ;  <CR> this . data = W9 ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] P8 ) {  <CR> EnglishLetter j1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> j1 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public EnglishLetter ( String k6 , String K1 , String Y3 , String j8 , String x7 ) {  <CR> this . title = k6 ;  <CR> this . receiver = K1 ;  <CR> this . content = Y3 ;  <CR> this . sender = j8 ;  <CR> this . data = x7 ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> Envelop ( String C0 , String R2 , Letter p5 ) {  <CR> this . senderAddr = C0 ;  <CR> this . receiverAddr = R2 ;  <CR> this . letter = p5 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] L7 ) {  <CR> Letter Z2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop A4 = new Envelop ( "Taipei" , "Kaohsiung" , Z2 ) ;  <CR> A4 . display ( ) ;  <CR> Z2 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] H3 ) {  <CR> Letter b = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop k1 = new Envelop ( "Taipei" , "Kaohsiung" , b ) ;  <CR> k1 . display ( ) ;  <CR> b . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( String a3 , String r0 , Letter Y7 ) {  <CR> this . senderAddr = a3 ;  <CR> this . receiverAddr = r0 ;  <CR> this . letter = Y7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 