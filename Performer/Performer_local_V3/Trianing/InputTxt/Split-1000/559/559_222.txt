 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String n1 , String M7 , String T4 , String t0 , String P4 ) {  <CR> this . title = n1 ;  <CR> this . receiver = M7 ;  <CR> this . content = T4 ;  <CR> this . sender = t0 ;  <CR> this . data = P4 ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String title ;  <CR> String sender ;  <CR> String receiver ;  <CR> public static void main ( String [ ] C3 ) {  <CR> ChineseLetter r5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> r5 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> public static void main ( String [ ] K4 ) {  <CR> ChineseLetter t0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String A1 , String d5 , String s8 , String O8 , String H6 ) {  <CR> this . title = A1 ;  <CR> this . receiver = d5 ;  <CR> this . content = s8 ;  <CR> this . sender = O8 ;  <CR> this . data = H6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] z4 ) {  <CR> EnglishLetter a5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> a5 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String c1 , String K3 , String q4 , String C2 , String z ) {  <CR> this . title = c1 ;  <CR> this . receiver = K3 ;  <CR> this . content = q4 ;  <CR> this . sender = C2 ;  <CR> this . data = z ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] a ) {  <CR> EnglishLetter D = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> D . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String t4 , String r6 , String x4 , String W4 , String n4 ) {  <CR> this . title = t4 ;  <CR> this . receiver = r6 ;  <CR> this . content = x4 ;  <CR> this . sender = W4 ;  <CR> this . data = n4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d5 ) {  <CR> Letter g = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop M6 = new Envelop ( "Taipei" , "Kaohsiung" , g ) ;  <CR> M6 . display ( ) ;  <CR> g . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String Z , String l8 , Letter l4 ) {  <CR> this . senderAddr = Z ;  <CR> this . receiverAddr = l8 ;  <CR> this . letter = l4 ;  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> Envelop ( String T4 , String r1 , Letter X1 ) {  <CR> this . senderAddr = T4 ;  <CR> this . receiverAddr = r1 ;  <CR> this . letter = X1 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] E2 ) {  <CR> Letter c3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop m3 = new Envelop ( "Taipei" , "Kaohsiung" , c3 ) ;  <CR> m3 . display ( ) ;  <CR> c3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 