 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String H4 , String e8 , String f , String f7 , String o4 ) {  <CR> this . title = H4 ;  <CR> this . receiver = e8 ;  <CR> this . content = f ;  <CR> this . sender = f7 ;  <CR> this . data = o4 ;  <CR> }  <CR> String title ;  <CR> String content ;  <CR> public static void main ( String [ ] R3 ) {  <CR> ChineseLetter m5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> m5 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> String sender ;  <CR> String data ;  <CR> public static void main ( String [ ] q0 ) {  <CR> ChineseLetter H6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> H6 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String n7 , String z5 , String A , String H2 , String N ) {  <CR> this . title = n7 ;  <CR> this . receiver = z5 ;  <CR> this . content = A ;  <CR> this . sender = H2 ;  <CR> this . data = N ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] N6 ) {  <CR> EnglishLetter J4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> J4 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String i3 , String s8 , String A3 , String q9 , String y5 ) {  <CR> this . title = i3 ;  <CR> this . receiver = s8 ;  <CR> this . content = A3 ;  <CR> this . sender = q9 ;  <CR> this . data = y5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public EnglishLetter ( String s4 , String c6 , String r3 , String R8 , String b7 ) {  <CR> this . title = s4 ;  <CR> this . receiver = c6 ;  <CR> this . content = r3 ;  <CR> this . sender = R8 ;  <CR> this . data = b7 ;  <CR> }  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] p1 ) {  <CR> EnglishLetter K = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> K . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] w2 ) {  <CR> Letter d1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop F0 = new Envelop ( "Taipei" , "Kaohsiung" , d1 ) ;  <CR> F0 . display ( ) ;  <CR> d1 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String L4 , String D9 , Letter D2 ) {  <CR> this . senderAddr = L4 ;  <CR> this . receiverAddr = D9 ;  <CR> this . letter = D2 ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String N , String o4 , Letter Q7 ) {  <CR> this . senderAddr = N ;  <CR> this . receiverAddr = o4 ;  <CR> this . letter = Q7 ;  <CR> }  <CR> public static void main ( String [ ] E5 ) {  <CR> Letter r1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop W1 = new Envelop ( "Taipei" , "Kaohsiung" , r1 ) ;  <CR> W1 . display ( ) ;  <CR> r1 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 