 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public ChineseLetter ( String G9 , String a4 , String V8 , String T1 , String k4 ) {  <CR> this . title = G9 ;  <CR> this . receiver = a4 ;  <CR> this . content = V8 ;  <CR> this . sender = T1 ;  <CR> this . data = k4 ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> String sender ;  <CR> public static void main ( String [ ] M6 ) {  <CR> ChineseLetter F5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> F5 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public static void main ( String [ ] x8 ) {  <CR> ChineseLetter g9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> g9 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String z3 , String D6 , String y9 , String e7 , String t7 ) {  <CR> this . title = z3 ;  <CR> this . receiver = D6 ;  <CR> this . content = y9 ;  <CR> this . sender = e7 ;  <CR> this . data = t7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public EnglishLetter ( String M , String l5 , String o6 , String h9 , String l ) {  <CR> this . title = M ;  <CR> this . receiver = l5 ;  <CR> this . content = o6 ;  <CR> this . sender = h9 ;  <CR> this . data = l ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public static void main ( String [ ] X0 ) {  <CR> EnglishLetter z3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> z3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String g3 , String C6 , String M1 , String k , String y1 ) {  <CR> this . title = g3 ;  <CR> this . receiver = C6 ;  <CR> this . content = M1 ;  <CR> this . sender = k ;  <CR> this . data = y1 ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> EnglishLetter S7 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> S7 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> public static void main ( String [ ] j3 ) {  <CR> Letter P1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop X2 = new Envelop ( "Taipei" , "Kaohsiung" , P1 ) ;  <CR> X2 . display ( ) ;  <CR> P1 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String U4 , String V5 , Letter f4 ) {  <CR> this . senderAddr = U4 ;  <CR> this . receiverAddr = V5 ;  <CR> this . letter = f4 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String J7 , String K0 , Letter V4 ) {  <CR> this . senderAddr = J7 ;  <CR> this . receiverAddr = K0 ;  <CR> this . letter = V4 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] p5 ) {  <CR> Letter q0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop b1 = new Envelop ( "Taipei" , "Kaohsiung" , q0 ) ;  <CR> b1 . display ( ) ;  <CR> q0 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 