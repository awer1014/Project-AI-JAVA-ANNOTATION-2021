 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] n1 ) {  <CR> ChineseLetter K6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> K6 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public ChineseLetter ( String j6 , String l3 , String w3 , String f1 , String n0 ) {  <CR> this . title = j6 ;  <CR> this . receiver = l3 ;  <CR> this . content = w3 ;  <CR> this . sender = f1 ;  <CR> this . data = n0 ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String O2 , String G1 , String o3 , String g5 , String p4 ) {  <CR> this . title = O2 ;  <CR> this . receiver = G1 ;  <CR> this . content = o3 ;  <CR> this . sender = g5 ;  <CR> this . data = p4 ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> public static void main ( String [ ] A ) {  <CR> ChineseLetter Z5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Z5 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] G3 ) {  <CR> EnglishLetter W9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> W9 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String o7 , String h1 , String A6 , String C3 , String c4 ) {  <CR> this . title = o7 ;  <CR> this . receiver = h1 ;  <CR> this . content = A6 ;  <CR> this . sender = C3 ;  <CR> this . data = c4 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public EnglishLetter ( String A , String q5 , String S6 , String V6 , String Q9 ) {  <CR> this . title = A ;  <CR> this . receiver = q5 ;  <CR> this . content = S6 ;  <CR> this . sender = V6 ;  <CR> this . data = Q9 ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> public static void main ( String [ ] G3 ) {  <CR> EnglishLetter X4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> X4 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( String c , String s3 , Letter t5 ) {  <CR> this . senderAddr = c ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = t5 ;  <CR> }  <CR> public static void main ( String [ ] u4 ) {  <CR> Letter Y3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop j8 = new Envelop ( "Taipei" , "Kaohsiung" , Y3 ) ;  <CR> j8 . display ( ) ;  <CR> Y3 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] G4 ) {  <CR> Letter a2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop s7 = new Envelop ( "Taipei" , "Kaohsiung" , a2 ) ;  <CR> s7 . display ( ) ;  <CR> a2 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String f2 , String F2 , Letter q6 ) {  <CR> this . senderAddr = f2 ;  <CR> this . receiverAddr = F2 ;  <CR> this . letter = q6 ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 