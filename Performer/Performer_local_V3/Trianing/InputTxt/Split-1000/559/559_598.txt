 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> ChineseLetter w6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> w6 . display ( ) ;  <CR> }  <CR> public ChineseLetter ( String u9 , String n3 , String q2 , String O9 , String C0 ) {  <CR> this . title = u9 ;  <CR> this . receiver = n3 ;  <CR> this . content = q2 ;  <CR> this . sender = O9 ;  <CR> this . data = C0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String data ;  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String A , String v3 , String w6 , String Q6 , String F4 ) {  <CR> this . title = A ;  <CR> this . receiver = v3 ;  <CR> this . content = w6 ;  <CR> this . sender = Q6 ;  <CR> this . data = F4 ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> String content ;  <CR> String title ;  <CR> String sender ;  <CR> public static void main ( String [ ] q9 ) {  <CR> ChineseLetter G7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> G7 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] y3 ) {  <CR> EnglishLetter X2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> X2 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String E4 , String B8 , String a7 , String z4 , String K ) {  <CR> this . title = E4 ;  <CR> this . receiver = B8 ;  <CR> this . content = a7 ;  <CR> this . sender = z4 ;  <CR> this . data = K ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> String sender ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String data ;  <CR> public static void main ( String [ ] k7 ) {  <CR> EnglishLetter Q4 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> Q4 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public EnglishLetter ( String M5 , String X1 , String v , String g9 , String y6 ) {  <CR> this . title = M5 ;  <CR> this . receiver = X1 ;  <CR> this . content = v ;  <CR> this . sender = g9 ;  <CR> this . data = y6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] Z ) {  <CR> Letter w2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop j6 = new Envelop ( "Taipei" , "Kaohsiung" , w2 ) ;  <CR> j6 . display ( ) ;  <CR> w2 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( String b3 , String c5 , Letter Z5 ) {  <CR> this . senderAddr = b3 ;  <CR> this . receiverAddr = c5 ;  <CR> this . letter = Z5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String p3 , String c9 , Letter G6 ) {  <CR> this . senderAddr = p3 ;  <CR> this . receiverAddr = c9 ;  <CR> this . letter = G6 ;  <CR> }  <CR> public static void main ( String [ ] e4 ) {  <CR> Letter o6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o1 = new Envelop ( "Taipei" , "Kaohsiung" , o6 ) ;  <CR> o1 . display ( ) ;  <CR> o6 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 