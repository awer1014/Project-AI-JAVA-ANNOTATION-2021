 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] e9 ) {  <CR> ChineseLetter l2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> l2 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String receiver ;  <CR> String data ;  <CR> public ChineseLetter ( String O7 , String e3 , String P , String h , String U2 ) {  <CR> this . title = O7 ;  <CR> this . receiver = e3 ;  <CR> this . content = P ;  <CR> this . sender = h ;  <CR> this . data = U2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> String content ;  <CR> public ChineseLetter ( String J3 , String A5 , String Z9 , String k3 , String K4 ) {  <CR> this . title = J3 ;  <CR> this . receiver = A5 ;  <CR> this . content = Z9 ;  <CR> this . sender = k3 ;  <CR> this . data = K4 ;  <CR> }  <CR> public static void main ( String [ ] u4 ) {  <CR> ChineseLetter G0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> G0 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public static void main ( String [ ] T7 ) {  <CR> EnglishLetter N8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> N8 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String n2 , String A7 , String O2 , String T4 , String h8 ) {  <CR> this . title = n2 ;  <CR> this . receiver = A7 ;  <CR> this . content = O2 ;  <CR> this . sender = T4 ;  <CR> this . data = h8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> String receiver ;  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public EnglishLetter ( String F , String D6 , String y6 , String D7 , String L1 ) {  <CR> this . title = F ;  <CR> this . receiver = D6 ;  <CR> this . content = y6 ;  <CR> this . sender = D7 ;  <CR> this . data = L1 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] S ) {  <CR> EnglishLetter r2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> r2 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] K3 ) {  <CR> Letter F4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o4 = new Envelop ( "Taipei" , "Kaohsiung" , F4 ) ;  <CR> o4 . display ( ) ;  <CR> F4 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String e7 , String s5 , Letter k6 ) {  <CR> this . senderAddr = e7 ;  <CR> this . receiverAddr = s5 ;  <CR> this . letter = k6 ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] l6 ) {  <CR> Letter y = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop S9 = new Envelop ( "Taipei" , "Kaohsiung" , y ) ;  <CR> S9 . display ( ) ;  <CR> y . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String h , String A8 , Letter Q8 ) {  <CR> this . senderAddr = h ;  <CR> this . receiverAddr = A8 ;  <CR> this . letter = Q8 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 