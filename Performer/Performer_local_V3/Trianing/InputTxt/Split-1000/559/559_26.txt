 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] w7 ) {  <CR> ChineseLetter n9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> n9 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public ChineseLetter ( String J5 , String G1 , String J0 , String P9 , String B9 ) {  <CR> this . title = J5 ;  <CR> this . receiver = G1 ;  <CR> this . content = J0 ;  <CR> this . sender = P9 ;  <CR> this . data = B9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public ChineseLetter ( String Z9 , String C3 , String W2 , String M7 , String O0 ) {  <CR> this . title = Z9 ;  <CR> this . receiver = C3 ;  <CR> this . content = W2 ;  <CR> this . sender = M7 ;  <CR> this . data = O0 ;  <CR> }  <CR> public static void main ( String [ ] W5 ) {  <CR> ChineseLetter z5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> z5 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] G3 ) {  <CR> EnglishLetter i2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> i2 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public EnglishLetter ( String X5 , String S9 , String S5 , String W1 , String J ) {  <CR> this . title = X5 ;  <CR> this . receiver = S9 ;  <CR> this . content = S5 ;  <CR> this . sender = W1 ;  <CR> this . data = J ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] D2 ) {  <CR> EnglishLetter M3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> M3 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public EnglishLetter ( String P4 , String j9 , String S8 , String g7 , String Q3 ) {  <CR> this . title = P4 ;  <CR> this . receiver = j9 ;  <CR> this . content = S8 ;  <CR> this . sender = g7 ;  <CR> this . data = Q3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> Envelop ( String w3 , String T6 , Letter Z2 ) {  <CR> this . senderAddr = w3 ;  <CR> this . receiverAddr = T6 ;  <CR> this . letter = Z2 ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] r3 ) {  <CR> Letter L3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop P = new Envelop ( "Taipei" , "Kaohsiung" , L3 ) ;  <CR> P . display ( ) ;  <CR> L3 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String W9 , String P5 , Letter a6 ) {  <CR> this . senderAddr = W9 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = a6 ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] c3 ) {  <CR> Letter J5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop y8 = new Envelop ( "Taipei" , "Kaohsiung" , J5 ) ;  <CR> y8 . display ( ) ;  <CR> J5 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 