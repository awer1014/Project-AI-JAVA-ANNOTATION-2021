 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public ChineseLetter ( String H5 , String z4 , String Y2 , String O2 , String p1 ) {  <CR> this . title = H5 ;  <CR> this . receiver = z4 ;  <CR> this . content = Y2 ;  <CR> this . sender = O2 ;  <CR> this . data = p1 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> String data ;  <CR> public static void main ( String [ ] y6 ) {  <CR> ChineseLetter J6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> J6 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> String title ;  <CR> public static void main ( String [ ] j1 ) {  <CR> ChineseLetter I = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> I . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String R4 , String X5 , String e8 , String r9 , String r0 ) {  <CR> this . title = R4 ;  <CR> this . receiver = X5 ;  <CR> this . content = e8 ;  <CR> this . sender = r9 ;  <CR> this . data = r0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> String receiver ;  <CR> public static void main ( String [ ] v0 ) {  <CR> EnglishLetter M3 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> M3 . display ( ) ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String E , String z , String D0 , String x5 , String E2 ) {  <CR> this . title = E ;  <CR> this . receiver = z ;  <CR> this . content = D0 ;  <CR> this . sender = x5 ;  <CR> this . data = E2 ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> String data ;  <CR> String sender ;  <CR> public EnglishLetter ( String e6 , String g4 , String G9 , String e5 , String m5 ) {  <CR> this . title = e6 ;  <CR> this . receiver = g4 ;  <CR> this . content = G9 ;  <CR> this . sender = e5 ;  <CR> this . data = m5 ;  <CR> }  <CR> public static void main ( String [ ] O4 ) {  <CR> EnglishLetter G5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> G5 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] z4 ) {  <CR> Letter G1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop N0 = new Envelop ( "Taipei" , "Kaohsiung" , G1 ) ;  <CR> N0 . display ( ) ;  <CR> G1 . display ( ) ;  <CR> }  <CR> Envelop ( String s0 , String U3 , Letter I ) {  <CR> this . senderAddr = s0 ;  <CR> this . receiverAddr = U3 ;  <CR> this . letter = I ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> public static void main ( String [ ] J2 ) {  <CR> Letter Q2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop R1 = new Envelop ( "Taipei" , "Kaohsiung" , Q2 ) ;  <CR> R1 . display ( ) ;  <CR> Q2 . display ( ) ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String s8 , String D0 , Letter P ) {  <CR> this . senderAddr = s8 ;  <CR> this . receiverAddr = D0 ;  <CR> this . letter = P ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 