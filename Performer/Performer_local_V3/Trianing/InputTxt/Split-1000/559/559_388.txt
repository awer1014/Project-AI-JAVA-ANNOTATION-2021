 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] X0 ) {  <CR> ChineseLetter C3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> C3 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public ChineseLetter ( String G5 , String m1 , String Q2 , String z6 , String w2 ) {  <CR> this . title = G5 ;  <CR> this . receiver = m1 ;  <CR> this . content = Q2 ;  <CR> this . sender = z6 ;  <CR> this . data = w2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] a7 ) {  <CR> ChineseLetter G5 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> G5 . display ( ) ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public ChineseLetter ( String G8 , String a2 , String F3 , String u7 , String q1 ) {  <CR> this . title = G8 ;  <CR> this . receiver = a2 ;  <CR> this . content = F3 ;  <CR> this . sender = u7 ;  <CR> this . data = q1 ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> String receiver ;  <CR> public static void main ( String [ ] g0 ) {  <CR> EnglishLetter Y6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> Y6 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String k6 , String N2 , String l7 , String K6 , String i3 ) {  <CR> this . title = k6 ;  <CR> this . receiver = N2 ;  <CR> this . content = l7 ;  <CR> this . sender = K6 ;  <CR> this . data = i3 ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] W7 ) {  <CR> EnglishLetter g2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> g2 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String M9 , String k4 , String g3 , String j , String v3 ) {  <CR> this . title = M9 ;  <CR> this . receiver = k4 ;  <CR> this . content = g3 ;  <CR> this . sender = j ;  <CR> this . data = v3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] n1 ) {  <CR> Letter o0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x = new Envelop ( "Taipei" , "Kaohsiung" , o0 ) ;  <CR> x . display ( ) ;  <CR> o0 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String p5 , String g1 , Letter F5 ) {  <CR> this . senderAddr = p5 ;  <CR> this . receiverAddr = g1 ;  <CR> this . letter = F5 ;  <CR> }  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String G6 , String j6 , Letter a4 ) {  <CR> this . senderAddr = G6 ;  <CR> this . receiverAddr = j6 ;  <CR> this . letter = a4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] d4 ) {  <CR> Letter j9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop J3 = new Envelop ( "Taipei" , "Kaohsiung" , j9 ) ;  <CR> J3 . display ( ) ;  <CR> j9 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 