 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> String sender ;  <CR> public ChineseLetter ( String Y0 , String e2 , String Q2 , String U5 , String G8 ) {  <CR> this . title = Y0 ;  <CR> this . receiver = e2 ;  <CR> this . content = Q2 ;  <CR> this . sender = U5 ;  <CR> this . data = G8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] g3 ) {  <CR> ChineseLetter O7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> O7 . display ( ) ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public static void main ( String [ ] F1 ) {  <CR> ChineseLetter p = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> p . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public ChineseLetter ( String e4 , String G7 , String t1 , String h4 , String Q3 ) {  <CR> this . title = e4 ;  <CR> this . receiver = G7 ;  <CR> this . content = t1 ;  <CR> this . sender = h4 ;  <CR> this . data = Q3 ;  <CR> }  <CR> String sender ;  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public EnglishLetter ( String p6 , String l1 , String q5 , String F6 , String N9 ) {  <CR> this . title = p6 ;  <CR> this . receiver = l1 ;  <CR> this . content = q5 ;  <CR> this . sender = F6 ;  <CR> this . data = N9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] r9 ) {  <CR> EnglishLetter h9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> h9 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> public EnglishLetter ( String b2 , String e3 , String z2 , String Y6 , String x7 ) {  <CR> this . title = b2 ;  <CR> this . receiver = e3 ;  <CR> this . content = z2 ;  <CR> this . sender = Y6 ;  <CR> this . data = x7 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public static void main ( String [ ] T ) {  <CR> EnglishLetter k0 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> k0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( String U6 , String J1 , Letter e ) {  <CR> this . senderAddr = U6 ;  <CR> this . receiverAddr = J1 ;  <CR> this . letter = e ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> public static void main ( String [ ] Q0 ) {  <CR> Letter q3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop T0 = new Envelop ( "Taipei" , "Kaohsiung" , q3 ) ;  <CR> T0 . display ( ) ;  <CR> q3 . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] w0 ) {  <CR> Letter F7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop w6 = new Envelop ( "Taipei" , "Kaohsiung" , F7 ) ;  <CR> w6 . display ( ) ;  <CR> F7 . display ( ) ;  <CR> }  <CR> Envelop ( String i9 , String f9 , Letter q9 ) {  <CR> this . senderAddr = i9 ;  <CR> this . receiverAddr = f9 ;  <CR> this . letter = q9 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 