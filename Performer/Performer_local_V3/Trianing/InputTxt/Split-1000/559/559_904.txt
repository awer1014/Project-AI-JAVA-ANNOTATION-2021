 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public ChineseLetter ( String X9 , String w4 , String a6 , String N2 , String g5 ) {  <CR> this . title = X9 ;  <CR> this . receiver = w4 ;  <CR> this . content = a6 ;  <CR> this . sender = N2 ;  <CR> this . data = g5 ;  <CR> }  <CR> public static void main ( String [ ] J ) {  <CR> ChineseLetter t0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> public ChineseLetter ( String x4 , String K9 , String y0 , String i0 , String m8 ) {  <CR> this . title = x4 ;  <CR> this . receiver = K9 ;  <CR> this . content = y0 ;  <CR> this . sender = i0 ;  <CR> this . data = m8 ;  <CR> }  <CR> public static void main ( String [ ] b ) {  <CR> ChineseLetter T = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> T . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] U1 ) {  <CR> EnglishLetter i9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> i9 . display ( ) ;  <CR> }  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public EnglishLetter ( String X5 , String X8 , String c0 , String q6 , String U3 ) {  <CR> this . title = X5 ;  <CR> this . receiver = X8 ;  <CR> this . content = c0 ;  <CR> this . sender = q6 ;  <CR> this . data = U3 ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String sender ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String B8 , String g3 , String u4 , String l8 , String V8 ) {  <CR> this . title = B8 ;  <CR> this . receiver = g3 ;  <CR> this . content = u4 ;  <CR> this . sender = l8 ;  <CR> this . data = V8 ;  <CR> }  <CR> String data ;  <CR> public static void main ( String [ ] O4 ) {  <CR> EnglishLetter X1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> X1 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] m5 ) {  <CR> Letter S7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop x8 = new Envelop ( "Taipei" , "Kaohsiung" , S7 ) ;  <CR> x8 . display ( ) ;  <CR> S7 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String E7 , String f5 , Letter i8 ) {  <CR> this . senderAddr = E7 ;  <CR> this . receiverAddr = f5 ;  <CR> this . letter = i8 ;  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> Letter letter ;  <CR> public static void main ( String [ ] q ) {  <CR> Letter P0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop I4 = new Envelop ( "Taipei" , "Kaohsiung" , P0 ) ;  <CR> I4 . display ( ) ;  <CR> P0 . display ( ) ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String x7 , String K0 , Letter O ) {  <CR> this . senderAddr = x7 ;  <CR> this . receiverAddr = K0 ;  <CR> this . letter = O ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 