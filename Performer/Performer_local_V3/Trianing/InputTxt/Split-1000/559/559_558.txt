 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] h3 ) {  <CR> ChineseLetter e1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> e1 . display ( ) ;  <CR> }  <CR> String data ;  <CR> public ChineseLetter ( String I3 , String R3 , String C4 , String c0 , String R8 ) {  <CR> this . title = I3 ;  <CR> this . receiver = R3 ;  <CR> this . content = C4 ;  <CR> this . sender = c0 ;  <CR> this . data = R8 ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] W3 ) {  <CR> ChineseLetter V0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> V0 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public ChineseLetter ( String V4 , String u7 , String w8 , String B0 , String E ) {  <CR> this . title = V4 ;  <CR> this . receiver = u7 ;  <CR> this . content = w8 ;  <CR> this . sender = B0 ;  <CR> this . data = E ;  <CR> }  <CR> String receiver ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String p9 , String Z0 , String o3 , String I0 , String u8 ) {  <CR> this . title = p9 ;  <CR> this . receiver = Z0 ;  <CR> this . content = o3 ;  <CR> this . sender = I0 ;  <CR> this . data = u8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> String receiver ;  <CR> public static void main ( String [ ] d5 ) {  <CR> EnglishLetter T5 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> T5 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String content ;  <CR> String receiver ;  <CR> public static void main ( String [ ] w7 ) {  <CR> EnglishLetter y0 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> y0 . display ( ) ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public EnglishLetter ( String S1 , String y9 , String c7 , String P , String Q6 ) {  <CR> this . title = S1 ;  <CR> this . receiver = y9 ;  <CR> this . content = c7 ;  <CR> this . sender = P ;  <CR> this . data = Q6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] O ) {  <CR> Letter Y = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop U0 = new Envelop ( "Taipei" , "Kaohsiung" , Y ) ;  <CR> U0 . display ( ) ;  <CR> Y . display ( ) ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String v2 , String d , Letter Z1 ) {  <CR> this . senderAddr = v2 ;  <CR> this . receiverAddr = d ;  <CR> this . letter = Z1 ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> private String receiverAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> Letter letter ;  <CR> public static void main ( String [ ] l6 ) {  <CR> Letter W4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop o5 = new Envelop ( "Taipei" , "Kaohsiung" , W4 ) ;  <CR> o5 . display ( ) ;  <CR> W4 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> Envelop ( String t5 , String e6 , Letter i5 ) {  <CR> this . senderAddr = t5 ;  <CR> this . receiverAddr = e6 ;  <CR> this . letter = i5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 