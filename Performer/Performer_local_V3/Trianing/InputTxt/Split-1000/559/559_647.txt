 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] F6 ) {  <CR> ChineseLetter T2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> T2 . display ( ) ;  <CR> }  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String title ;  <CR> public ChineseLetter ( String e , String g1 , String y0 , String i1 , String V9 ) {  <CR> this . title = e ;  <CR> this . receiver = g1 ;  <CR> this . content = y0 ;  <CR> this . sender = i1 ;  <CR> this . data = V9 ;  <CR> }  <CR> String sender ;  <CR> String receiver ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public static void main ( String [ ] K3 ) {  <CR> ChineseLetter B3 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> B3 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String data ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public ChineseLetter ( String R7 , String W5 , String i0 , String A , String O8 ) {  <CR> this . title = R7 ;  <CR> this . receiver = W5 ;  <CR> this . content = i0 ;  <CR> this . sender = A ;  <CR> this . data = O8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public static void main ( String [ ] k5 ) {  <CR> EnglishLetter L2 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> L2 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> String content ;  <CR> String receiver ;  <CR> public EnglishLetter ( String e2 , String J7 , String p , String Z6 , String m1 ) {  <CR> this . title = e2 ;  <CR> this . receiver = J7 ;  <CR> this . content = p ;  <CR> this . sender = Z6 ;  <CR> this . data = m1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> String content ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String receiver ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> String data ;  <CR> public EnglishLetter ( String r9 , String I5 , String i2 , String H4 , String e4 ) {  <CR> this . title = r9 ;  <CR> this . receiver = I5 ;  <CR> this . content = i2 ;  <CR> this . sender = H4 ;  <CR> this . data = e4 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> EnglishLetter w = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> w . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> Envelop ( String a5 , String N6 , Letter m8 ) {  <CR> this . senderAddr = a5 ;  <CR> this . receiverAddr = N6 ;  <CR> this . letter = m8 ;  <CR> }  <CR> public static void main ( String [ ] o9 ) {  <CR> Letter L0 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop e9 = new Envelop ( "Taipei" , "Kaohsiung" , L0 ) ;  <CR> e9 . display ( ) ;  <CR> L0 . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> private String receiverAddr ;  <CR> private String senderAddr ;  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> Envelop ( String a5 , String g7 , Letter C1 ) {  <CR> this . senderAddr = a5 ;  <CR> this . receiverAddr = g7 ;  <CR> this . letter = C1 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] k9 ) {  <CR> Letter J6 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop S8 = new Envelop ( "Taipei" , "Kaohsiung" , J6 ) ;  <CR> S8 . display ( ) ;  <CR> J6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 