 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String receiver ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> public static void main ( String [ ] W4 ) {  <CR> ChineseLetter f1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> f1 . display ( ) ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String title ;  <CR> public ChineseLetter ( String L1 , String O , String S0 , String D9 , String B5 ) {  <CR> this . title = L1 ;  <CR> this . receiver = O ;  <CR> this . content = S0 ;  <CR> this . sender = D9 ;  <CR> this . data = B5 ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public ChineseLetter ( String e , String s9 , String o3 , String U , String y5 ) {  <CR> this . title = e ;  <CR> this . receiver = s9 ;  <CR> this . content = o3 ;  <CR> this . sender = U ;  <CR> this . data = y5 ;  <CR> }  <CR> public static void main ( String [ ] F3 ) {  <CR> ChineseLetter x1 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> x1 . display ( ) ;  <CR> }  <CR> String receiver ;  <CR> String title ;  <CR> String data ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String content ;  <CR> public static void main ( String [ ] C1 ) {  <CR> EnglishLetter U1 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> U1 . display ( ) ;  <CR> }  <CR> String title ;  <CR> String sender ;  <CR> public EnglishLetter ( String H9 , String x9 , String m4 , String M4 , String t1 ) {  <CR> this . title = H9 ;  <CR> this . receiver = x9 ;  <CR> this . content = m4 ;  <CR> this . sender = M4 ;  <CR> this . data = t1 ;  <CR> }  <CR> String receiver ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String data ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String receiver ;  <CR> String sender ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public static void main ( String [ ] b7 ) {  <CR> EnglishLetter y8 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> y8 . display ( ) ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public EnglishLetter ( String h5 , String A1 , String M8 , String c3 , String w2 ) {  <CR> this . title = h5 ;  <CR> this . receiver = A1 ;  <CR> this . content = M8 ;  <CR> this . sender = c3 ;  <CR> this . data = w2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( ) {  <CR> }  <CR> public static void main ( String [ ] k2 ) {  <CR> Letter y = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop m7 = new Envelop ( "Taipei" , "Kaohsiung" , y ) ;  <CR> m7 . display ( ) ;  <CR> y . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> Envelop ( String X5 , String L4 , Letter f7 ) {  <CR> this . senderAddr = X5 ;  <CR> this . receiverAddr = L4 ;  <CR> this . letter = f7 ;  <CR> }  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> private String senderAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> Envelop ( String H9 , String J4 , Letter o8 ) {  <CR> this . senderAddr = H9 ;  <CR> this . receiverAddr = J4 ;  <CR> this . letter = o8 ;  <CR> }  <CR> public static void main ( String [ ] L3 ) {  <CR> Letter l8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop g4 = new Envelop ( "Taipei" , "Kaohsiung" , l8 ) ;  <CR> g4 . display ( ) ;  <CR> l8 . display ( ) ;  <CR> }  <CR> private String receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 