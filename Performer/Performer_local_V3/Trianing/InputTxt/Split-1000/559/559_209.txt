 <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> String data ;  <CR> public ChineseLetter ( String j4 , String q2 , String B8 , String L1 , String H0 ) {  <CR> this . title = j4 ;  <CR> this . receiver = q2 ;  <CR> this . content = B8 ;  <CR> this . sender = L1 ;  <CR> this . data = H0 ;  <CR> }  <CR> String receiver ;  <CR> public static void main ( String [ ] D3 ) {  <CR> ChineseLetter z9 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> z9 . display ( ) ;  <CR> }  <CR> String content ;  <CR> String title ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class ChineseLetter extends Letter {  <CR> String title ;  <CR> public void display ( ) {  <CR> System . out . println ( receiver + title + ",您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String sender ;  <CR> public ChineseLetter ( String J5 , String Z9 , String R , String i5 , String Y0 ) {  <CR> this . title = J5 ;  <CR> this . receiver = Z9 ;  <CR> this . content = R ;  <CR> this . sender = i5 ;  <CR> this . data = Y0 ;  <CR> }  <CR> String content ;  <CR> String data ;  <CR> String receiver ;  <CR> public static void main ( String [ ] p3 ) {  <CR> ChineseLetter h7 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> h7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String sender ;  <CR> String content ;  <CR> String receiver ;  <CR> String data ;  <CR> public EnglishLetter ( String q1 , String V8 , String i2 , String D4 , String Z1 ) {  <CR> this . title = q1 ;  <CR> this . receiver = V8 ;  <CR> this . content = i2 ;  <CR> this . sender = D4 ;  <CR> this . data = Z1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> public static void main ( String [ ] Q4 ) {  <CR> EnglishLetter c9 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> c9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . * ;  <CR> public class EnglishLetter extends Letter {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String title ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public static void main ( String [ ] k5 ) {  <CR> EnglishLetter V6 = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ;  <CR> V6 . display ( ) ;  <CR> }  <CR> public EnglishLetter ( String J8 , String Q1 , String Q7 , String y8 , String v6 ) {  <CR> this . title = J8 ;  <CR> this . receiver = Q1 ;  <CR> this . content = Q7 ;  <CR> this . sender = y8 ;  <CR> this . data = v6 ;  <CR> }  <CR> String data ;  <CR> String sender ;  <CR> String content ;  <CR> public void display ( ) {  <CR> System . out . println ( "Dear " + receiver + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( data ) ;  <CR> return ;  <CR> }  <CR> String receiver ;  <CR> public String getdata ( ) {  <CR> return data ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String z7 , String B4 , Letter P0 ) {  <CR> this . senderAddr = z7 ;  <CR> this . receiverAddr = B4 ;  <CR> this . letter = P0 ;  <CR> }  <CR> Envelop ( ) {  <CR> }  <CR> Letter letter ;  <CR> private String senderAddr ;  <CR> private String receiverAddr ;  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> public static void main ( String [ ] m9 ) {  <CR> Letter g4 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop h4 = new Envelop ( "Taipei" , "Kaohsiung" , g4 ) ;  <CR> h4 . display ( ) ;  <CR> g4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public void display ( ) {  <CR> System . out . println ( "From:" + senderAddr + ",銘哥" ) ;  <CR> System . out . println ( "To:" + receiverAddr + ",王 教授" ) ;  <CR> System . out . println ( "信件內容:" ) ;  <CR> return ;  <CR> }  <CR> private String senderAddr ;  <CR> Envelop ( String U3 , String x , Letter K ) {  <CR> this . senderAddr = U3 ;  <CR> this . receiverAddr = x ;  <CR> this . letter = K ;  <CR> }  <CR> Letter letter ;  <CR> Envelop ( ) {  <CR> }  <CR> private String receiverAddr ;  <CR> public static void main ( String [ ] H1 ) {  <CR> Letter Y8 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ;  <CR> Envelop c3 = new Envelop ( "Taipei" , "Kaohsiung" , Y8 ) ;  <CR> c3 . display ( ) ;  <CR> Y8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 