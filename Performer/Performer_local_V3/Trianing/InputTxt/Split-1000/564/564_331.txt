 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String l9 , String H1 , String V , String w3 , String H5 ) {  <CR> super ( l9 , H1 , V , w3 , H5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y2 , String K9 , String F4 , String g3 , String D3 ) {  <CR> super ( y2 , K9 , F4 , g3 , D3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C4 ) {  <CR> Evaluation j8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S3 = new Envelop ( "Taipei" , "Kaohsiung" , j8 ) ;  <CR> S3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String R3 , String N9 , Evaluation F7 ) {  <CR> this . senderAddr = R3 ;  <CR> this . receiverAddr = N9 ;  <CR> this . letter = F7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String b3 , String t2 , String u9 , String N8 , String L5 ) {  <CR> this . title = b3 ;  <CR> this . receiver = t2 ;  <CR> this . content = u9 ;  <CR> this . sender = N8 ;  <CR> this . date = L5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object y4 ) {  <CR> Letter M2 = ( Letter ) y4 ;  <CR> if ( this . x > M2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] u ) {  <CR> int j5 ;  <CR> for ( j5 = list . length - 1 ; j5 >= 0 ; j5 -- ) {  <CR> int H5 = j5 ;  <CR> Letter T6 = new Letter ( j5 ) ;  <CR> Letter I9 = new Letter ( H5 - 1 ) ;  <CR> if ( T6 . compareTo ( I9 ) == 1 )  <CR> T6 . display ( j5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int j5 ) {  <CR> list [ j5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int M8 ) {  <CR> this . x = M8 ;  <CR> }  <CR> }  <CR>  <EOC> 