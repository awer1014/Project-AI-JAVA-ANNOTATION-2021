 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c9 , String k5 , String N6 , String V2 , String i3 ) {  <CR> super ( c9 , k5 , N6 , V2 , i3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z0 , String p3 , String I3 , String s0 , String g1 ) {  <CR> super ( z0 , p3 , I3 , s0 , g1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String l9 , String F6 , Evaluation O ) {  <CR> this . senderAddr = l9 ;  <CR> this . receiverAddr = F6 ;  <CR> this . letter = O ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] v ) {  <CR> Evaluation I1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I5 = new Envelop ( "Taipei" , "Kaohsiung" , I1 ) ;  <CR> I5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String P8 , String v0 , String x8 , String Z4 , String o9 ) {  <CR> this . title = P8 ;  <CR> this . receiver = v0 ;  <CR> this . content = x8 ;  <CR> this . sender = Z4 ;  <CR> this . date = o9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int G0 ) {  <CR> list [ G0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object t0 ) {  <CR> Letter j9 = ( Letter ) t0 ;  <CR> if ( this . x > j9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] U0 ) {  <CR> int G0 ;  <CR> for ( G0 = list . length - 1 ; G0 >= 0 ; G0 -- ) {  <CR> int w0 = G0 ;  <CR> Letter C3 = new Letter ( G0 ) ;  <CR> Letter J1 = new Letter ( w0 - 1 ) ;  <CR> if ( C3 . compareTo ( J1 ) == 1 )  <CR> C3 . display ( G0 ) ;  <CR> }  <CR> }  <CR> Letter ( int W6 ) {  <CR> this . x = W6 ;  <CR> }  <CR> }  <CR>  <EOC> 