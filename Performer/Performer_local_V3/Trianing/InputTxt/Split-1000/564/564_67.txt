 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String P9 , String h3 , String W0 , String y3 , String m3 ) {  <CR> super ( P9 , h3 , W0 , y3 , m3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t2 , String n2 , String e8 , String I8 , String x1 ) {  <CR> super ( t2 , n2 , e8 , I8 , x1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] t8 ) {  <CR> Evaluation O3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m0 = new Envelop ( "Taipei" , "Kaohsiung" , O3 ) ;  <CR> m0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String j7 , String L1 , Evaluation K9 ) {  <CR> this . senderAddr = j7 ;  <CR> this . receiverAddr = L1 ;  <CR> this . letter = K9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String o2 , String F , String O4 , String x5 , String m9 ) {  <CR> this . title = o2 ;  <CR> this . receiver = F ;  <CR> this . content = O4 ;  <CR> this . sender = x5 ;  <CR> this . date = m9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int s5 ) {  <CR> list [ s5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object J ) {  <CR> Letter K2 = ( Letter ) J ;  <CR> if ( this . x > K2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] y7 ) {  <CR> int s5 ;  <CR> for ( s5 = list . length - 1 ; s5 >= 0 ; s5 -- ) {  <CR> int M2 = s5 ;  <CR> Letter G2 = new Letter ( s5 ) ;  <CR> Letter g0 = new Letter ( M2 - 1 ) ;  <CR> if ( G2 . compareTo ( g0 ) == 1 )  <CR> G2 . display ( s5 ) ;  <CR> }  <CR> }  <CR> Letter ( int j8 ) {  <CR> this . x = j8 ;  <CR> }  <CR> }  <CR>  <EOC> 