 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i9 , String Z7 , String D9 , String B , String A7 ) {  <CR> super ( i9 , Z7 , D9 , B , A7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String b3 , String D6 , String g1 , String k3 , String W ) {  <CR> super ( b3 , D6 , g1 , k3 , W ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String c9 , String a3 , Evaluation r9 ) {  <CR> this . senderAddr = c9 ;  <CR> this . receiverAddr = a3 ;  <CR> this . letter = r9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] g ) {  <CR> Evaluation Y2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B8 = new Envelop ( "Taipei" , "Kaohsiung" , Y2 ) ;  <CR> B8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String c , String s8 , String h9 , String P1 , String R6 ) {  <CR> this . title = c ;  <CR> this . receiver = s8 ;  <CR> this . content = h9 ;  <CR> this . sender = P1 ;  <CR> this . date = R6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] M ) {  <CR> int s4 ;  <CR> for ( s4 = list . length - 1 ; s4 >= 0 ; s4 -- ) {  <CR> int B8 = s4 ;  <CR> Letter P9 = new Letter ( s4 ) ;  <CR> Letter f3 = new Letter ( B8 - 1 ) ;  <CR> if ( P9 . compareTo ( f3 ) == 1 )  <CR> P9 . display ( s4 ) ;  <CR> }  <CR> }  <CR> Letter ( int B4 ) {  <CR> this . x = B4 ;  <CR> }  <CR> public void display ( int s4 ) {  <CR> list [ s4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object Y6 ) {  <CR> Letter t0 = ( Letter ) Y6 ;  <CR> if ( this . x > t0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 