 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String W7 , String B2 , String P5 , String K8 , String V8 ) {  <CR> super ( W7 , B2 , P5 , K8 , V8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q0 , String n9 , String f7 , String K6 , String l9 ) {  <CR> super ( Q0 , n9 , f7 , K6 , l9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String W6 , String r2 , Evaluation e4 ) {  <CR> this . senderAddr = W6 ;  <CR> this . receiverAddr = r2 ;  <CR> this . letter = e4 ;  <CR> }  <CR> public static void main ( String [ ] e2 ) {  <CR> Evaluation k = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d2 = new Envelop ( "Taipei" , "Kaohsiung" , k ) ;  <CR> d2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String X4 , String N3 , String G , String m8 , String J7 ) {  <CR> this . title = X4 ;  <CR> this . receiver = N3 ;  <CR> this . content = G ;  <CR> this . sender = m8 ;  <CR> this . date = J7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int X0 ) {  <CR> this . x = X0 ;  <CR> }  <CR> public int compareTo ( Object o4 ) {  <CR> Letter L = ( Letter ) o4 ;  <CR> if ( this . x > L . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] n8 ) {  <CR> int h1 ;  <CR> for ( h1 = list . length - 1 ; h1 >= 0 ; h1 -- ) {  <CR> int z6 = h1 ;  <CR> Letter n1 = new Letter ( h1 ) ;  <CR> Letter H8 = new Letter ( z6 - 1 ) ;  <CR> if ( n1 . compareTo ( H8 ) == 1 )  <CR> n1 . display ( h1 ) ;  <CR> }  <CR> }  <CR> public void display ( int h1 ) {  <CR> list [ h1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 