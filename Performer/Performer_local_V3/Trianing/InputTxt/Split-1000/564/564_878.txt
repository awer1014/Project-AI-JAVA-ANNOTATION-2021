 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m5 , String l7 , String Z , String v5 , String m ) {  <CR> super ( m5 , l7 , Z , v5 , m ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B1 , String i8 , String z4 , String l3 , String f3 ) {  <CR> super ( B1 , i8 , z4 , l3 , f3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String P5 , String a5 , Evaluation h6 ) {  <CR> this . senderAddr = P5 ;  <CR> this . receiverAddr = a5 ;  <CR> this . letter = h6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] s5 ) {  <CR> Evaluation T5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F2 = new Envelop ( "Taipei" , "Kaohsiung" , T5 ) ;  <CR> F2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String i , String l3 , String x , String X7 , String c2 ) {  <CR> this . title = i ;  <CR> this . receiver = l3 ;  <CR> this . content = x ;  <CR> this . sender = X7 ;  <CR> this . date = c2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object l5 ) {  <CR> Letter o9 = ( Letter ) l5 ;  <CR> if ( this . x > o9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int z0 ) {  <CR> this . x = z0 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] t5 ) {  <CR> int l8 ;  <CR> for ( l8 = list . length - 1 ; l8 >= 0 ; l8 -- ) {  <CR> int Z3 = l8 ;  <CR> Letter P3 = new Letter ( l8 ) ;  <CR> Letter Z = new Letter ( Z3 - 1 ) ;  <CR> if ( P3 . compareTo ( Z ) == 1 )  <CR> P3 . display ( l8 ) ;  <CR> }  <CR> }  <CR> public void display ( int l8 ) {  <CR> list [ l8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 