 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String j6 , String z9 , String I7 , String P2 , String J6 ) {  <CR> super ( j6 , z9 , I7 , P2 , J6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X , String q3 , String x2 , String k4 , String n8 ) {  <CR> super ( X , q3 , x2 , k4 , n8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] H3 ) {  <CR> Evaluation v6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y2 = new Envelop ( "Taipei" , "Kaohsiung" , v6 ) ;  <CR> y2 . display ( ) ;  <CR> }  <CR> public Envelop ( String n , String T7 , Evaluation N3 ) {  <CR> this . senderAddr = n ;  <CR> this . receiverAddr = T7 ;  <CR> this . letter = N3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String X5 , String t7 , String H8 , String f4 , String n3 ) {  <CR> this . title = X5 ;  <CR> this . receiver = t7 ;  <CR> this . content = H8 ;  <CR> this . sender = f4 ;  <CR> this . date = n3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int T9 ) {  <CR> this . x = T9 ;  <CR> }  <CR> public int compareTo ( Object e6 ) {  <CR> Letter n0 = ( Letter ) e6 ;  <CR> if ( this . x > n0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int L8 ) {  <CR> list [ L8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w2 ) {  <CR> int L8 ;  <CR> for ( L8 = list . length - 1 ; L8 >= 0 ; L8 -- ) {  <CR> int M4 = L8 ;  <CR> Letter L6 = new Letter ( L8 ) ;  <CR> Letter u9 = new Letter ( M4 - 1 ) ;  <CR> if ( L6 . compareTo ( u9 ) == 1 )  <CR> L6 . display ( L8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 