 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G6 , String E5 , String Q0 , String J9 , String s7 ) {  <CR> super ( G6 , E5 , Q0 , J9 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G7 , String H3 , String e2 , String t8 , String e9 ) {  <CR> super ( G7 , H3 , e2 , t8 , e9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p5 , String m8 , Evaluation D1 ) {  <CR> this . senderAddr = p5 ;  <CR> this . receiverAddr = m8 ;  <CR> this . letter = D1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] G0 ) {  <CR> Evaluation m2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a5 = new Envelop ( "Taipei" , "Kaohsiung" , m2 ) ;  <CR> a5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String P9 , String c4 , String y2 , String P0 , String M8 ) {  <CR> this . title = P9 ;  <CR> this . receiver = c4 ;  <CR> this . content = y2 ;  <CR> this . sender = P0 ;  <CR> this . date = M8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] h7 ) {  <CR> int O7 ;  <CR> for ( O7 = list . length - 1 ; O7 >= 0 ; O7 -- ) {  <CR> int a7 = O7 ;  <CR> Letter i5 = new Letter ( O7 ) ;  <CR> Letter g4 = new Letter ( a7 - 1 ) ;  <CR> if ( i5 . compareTo ( g4 ) == 1 )  <CR> i5 . display ( O7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object G5 ) {  <CR> Letter U2 = ( Letter ) G5 ;  <CR> if ( this . x > U2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int A ) {  <CR> this . x = A ;  <CR> }  <CR> public void display ( int O7 ) {  <CR> list [ O7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 