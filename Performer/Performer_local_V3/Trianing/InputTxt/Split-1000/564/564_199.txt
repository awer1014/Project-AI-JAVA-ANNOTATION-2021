 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String r , String Z7 , String f1 , String P9 , String w6 ) {  <CR> super ( r , Z7 , f1 , P9 , w6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C1 , String d8 , String i1 , String T8 , String Z3 ) {  <CR> super ( C1 , d8 , i1 , T8 , Z3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String R4 , String G9 , Evaluation a0 ) {  <CR> this . senderAddr = R4 ;  <CR> this . receiverAddr = G9 ;  <CR> this . letter = a0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] E3 ) {  <CR> Evaluation g3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l4 = new Envelop ( "Taipei" , "Kaohsiung" , g3 ) ;  <CR> l4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String q9 , String C5 , String P5 , String a6 , String I8 ) {  <CR> this . title = q9 ;  <CR> this . receiver = C5 ;  <CR> this . content = P5 ;  <CR> this . sender = a6 ;  <CR> this . date = I8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int K5 ) {  <CR> this . x = K5 ;  <CR> }  <CR> public int compareTo ( Object U5 ) {  <CR> Letter t9 = ( Letter ) U5 ;  <CR> if ( this . x > t9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] J9 ) {  <CR> int Q1 ;  <CR> for ( Q1 = list . length - 1 ; Q1 >= 0 ; Q1 -- ) {  <CR> int p1 = Q1 ;  <CR> Letter G7 = new Letter ( Q1 ) ;  <CR> Letter b6 = new Letter ( p1 - 1 ) ;  <CR> if ( G7 . compareTo ( b6 ) == 1 )  <CR> G7 . display ( Q1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Q1 ) {  <CR> list [ Q1 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 