 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L3 , String r1 , String d5 , String f0 , String i7 ) {  <CR> super ( L3 , r1 , d5 , f0 , i7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String U3 , String g9 , String l8 , String q9 , String w2 ) {  <CR> super ( U3 , g9 , l8 , q9 , w2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String x9 , String D1 , Evaluation b8 ) {  <CR> this . senderAddr = x9 ;  <CR> this . receiverAddr = D1 ;  <CR> this . letter = b8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O5 ) {  <CR> Evaluation r3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m9 = new Envelop ( "Taipei" , "Kaohsiung" , r3 ) ;  <CR> m9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String x , String X9 , String s , String f5 , String o8 ) {  <CR> this . title = x ;  <CR> this . receiver = X9 ;  <CR> this . content = s ;  <CR> this . sender = f5 ;  <CR> this . date = o8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object k8 ) {  <CR> Letter d4 = ( Letter ) k8 ;  <CR> if ( this . x > d4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int U3 ) {  <CR> list [ U3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] e2 ) {  <CR> int U3 ;  <CR> for ( U3 = list . length - 1 ; U3 >= 0 ; U3 -- ) {  <CR> int Q2 = U3 ;  <CR> Letter m7 = new Letter ( U3 ) ;  <CR> Letter W7 = new Letter ( Q2 - 1 ) ;  <CR> if ( m7 . compareTo ( W7 ) == 1 )  <CR> m7 . display ( U3 ) ;  <CR> }  <CR> }  <CR> Letter ( int P7 ) {  <CR> this . x = P7 ;  <CR> }  <CR> }  <CR>  <EOC> 