 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o4 , String L1 , String C0 , String z , String b0 ) {  <CR> super ( o4 , L1 , C0 , z , b0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t0 , String W1 , String e9 , String V4 , String F3 ) {  <CR> super ( t0 , W1 , e9 , V4 , F3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U7 ) {  <CR> Evaluation q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m6 = new Envelop ( "Taipei" , "Kaohsiung" , q6 ) ;  <CR> m6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String E , String i3 , Evaluation q2 ) {  <CR> this . senderAddr = E ;  <CR> this . receiverAddr = i3 ;  <CR> this . letter = q2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String f8 , String D , String e1 , String y2 , String m3 ) {  <CR> this . title = f8 ;  <CR> this . receiver = D ;  <CR> this . content = e1 ;  <CR> this . sender = y2 ;  <CR> this . date = m3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] d5 ) {  <CR> int J8 ;  <CR> for ( J8 = list . length - 1 ; J8 >= 0 ; J8 -- ) {  <CR> int j2 = J8 ;  <CR> Letter L1 = new Letter ( J8 ) ;  <CR> Letter V4 = new Letter ( j2 - 1 ) ;  <CR> if ( L1 . compareTo ( V4 ) == 1 )  <CR> L1 . display ( J8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object d9 ) {  <CR> Letter s4 = ( Letter ) d9 ;  <CR> if ( this . x > s4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int J8 ) {  <CR> list [ J8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int y5 ) {  <CR> this . x = y5 ;  <CR> }  <CR> }  <CR>  <EOC> 