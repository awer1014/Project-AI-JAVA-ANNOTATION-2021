 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F2 , String J5 , String O6 , String O4 , String b0 ) {  <CR> super ( F2 , J5 , O6 , O4 , b0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h6 , String Y7 , String x4 , String f2 , String B6 ) {  <CR> super ( h6 , Y7 , x4 , f2 , B6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] P3 ) {  <CR> Evaluation G1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E5 = new Envelop ( "Taipei" , "Kaohsiung" , G1 ) ;  <CR> E5 . display ( ) ;  <CR> }  <CR> public Envelop ( String x2 , String H , Evaluation J3 ) {  <CR> this . senderAddr = x2 ;  <CR> this . receiverAddr = H ;  <CR> this . letter = J3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String C9 , String a4 , String o , String x5 , String R7 ) {  <CR> this . title = C9 ;  <CR> this . receiver = a4 ;  <CR> this . content = o ;  <CR> this . sender = x5 ;  <CR> this . date = R7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object h ) {  <CR> Letter z1 = ( Letter ) h ;  <CR> if ( this . x > z1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] q2 ) {  <CR> int a9 ;  <CR> for ( a9 = list . length - 1 ; a9 >= 0 ; a9 -- ) {  <CR> int z5 = a9 ;  <CR> Letter w = new Letter ( a9 ) ;  <CR> Letter o5 = new Letter ( z5 - 1 ) ;  <CR> if ( w . compareTo ( o5 ) == 1 )  <CR> w . display ( a9 ) ;  <CR> }  <CR> }  <CR> Letter ( int z2 ) {  <CR> this . x = z2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int a9 ) {  <CR> list [ a9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 