 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d1 , String K0 , String I2 , String O1 , String A2 ) {  <CR> super ( d1 , K0 , I2 , O1 , A2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String O7 , String E8 , String X1 , String Y9 , String P1 ) {  <CR> super ( O7 , E8 , X1 , Y9 , P1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String y0 , String i , Evaluation N5 ) {  <CR> this . senderAddr = y0 ;  <CR> this . receiverAddr = i ;  <CR> this . letter = N5 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] u8 ) {  <CR> Evaluation J2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A = new Envelop ( "Taipei" , "Kaohsiung" , J2 ) ;  <CR> A . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String K , String U2 , String h , String d8 , String I5 ) {  <CR> this . title = K ;  <CR> this . receiver = U2 ;  <CR> this . content = h ;  <CR> this . sender = d8 ;  <CR> this . date = I5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object G2 ) {  <CR> Letter f3 = ( Letter ) G2 ;  <CR> if ( this . x > f3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int K3 ) {  <CR> this . x = K3 ;  <CR> }  <CR> public void display ( int u0 ) {  <CR> list [ u0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] V2 ) {  <CR> int u0 ;  <CR> for ( u0 = list . length - 1 ; u0 >= 0 ; u0 -- ) {  <CR> int y = u0 ;  <CR> Letter A5 = new Letter ( u0 ) ;  <CR> Letter h0 = new Letter ( y - 1 ) ;  <CR> if ( A5 . compareTo ( h0 ) == 1 )  <CR> A5 . display ( u0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 