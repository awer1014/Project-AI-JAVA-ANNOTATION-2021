 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String W6 , String j9 , String Q6 , String J8 , String Q8 ) {  <CR> super ( W6 , j9 , Q6 , J8 , Q8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String N9 , String N0 , String G2 , String A3 , String u5 ) {  <CR> super ( N9 , N0 , G2 , A3 , u5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m1 ) {  <CR> Evaluation L4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s4 = new Envelop ( "Taipei" , "Kaohsiung" , L4 ) ;  <CR> s4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String j6 , String t7 , Evaluation T4 ) {  <CR> this . senderAddr = j6 ;  <CR> this . receiverAddr = t7 ;  <CR> this . letter = T4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String z9 , String w8 , String l8 , String v9 , String K5 ) {  <CR> this . title = z9 ;  <CR> this . receiver = w8 ;  <CR> this . content = l8 ;  <CR> this . sender = v9 ;  <CR> this . date = K5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int u ) {  <CR> list [ u ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] G0 ) {  <CR> int u ;  <CR> for ( u = list . length - 1 ; u >= 0 ; u -- ) {  <CR> int U8 = u ;  <CR> Letter Z8 = new Letter ( u ) ;  <CR> Letter Q5 = new Letter ( U8 - 1 ) ;  <CR> if ( Z8 . compareTo ( Q5 ) == 1 )  <CR> Z8 . display ( u ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object y0 ) {  <CR> Letter Z9 = ( Letter ) y0 ;  <CR> if ( this . x > Z9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int a4 ) {  <CR> this . x = a4 ;  <CR> }  <CR> }  <CR>  <EOC> 