 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h6 , String X4 , String r1 , String d0 , String d3 ) {  <CR> super ( h6 , X4 , r1 , d0 , d3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v , String s1 , String J0 , String l7 , String p6 ) {  <CR> super ( v , s1 , J0 , l7 , p6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String V4 , String V8 , Evaluation p3 ) {  <CR> this . senderAddr = V4 ;  <CR> this . receiverAddr = V8 ;  <CR> this . letter = p3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] X ) {  <CR> Evaluation A0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r0 = new Envelop ( "Taipei" , "Kaohsiung" , A0 ) ;  <CR> r0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String m7 , String X0 , String l1 , String o0 , String I0 ) {  <CR> this . title = m7 ;  <CR> this . receiver = X0 ;  <CR> this . content = l1 ;  <CR> this . sender = o0 ;  <CR> this . date = I0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object O ) {  <CR> Letter W = ( Letter ) O ;  <CR> if ( this . x > W . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int K7 ) {  <CR> this . x = K7 ;  <CR> }  <CR> public static void main ( String [ ] X3 ) {  <CR> int a3 ;  <CR> for ( a3 = list . length - 1 ; a3 >= 0 ; a3 -- ) {  <CR> int t7 = a3 ;  <CR> Letter Z1 = new Letter ( a3 ) ;  <CR> Letter g5 = new Letter ( t7 - 1 ) ;  <CR> if ( Z1 . compareTo ( g5 ) == 1 )  <CR> Z1 . display ( a3 ) ;  <CR> }  <CR> }  <CR> public void display ( int a3 ) {  <CR> list [ a3 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 