 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String P7 , String K3 , String d0 , String z9 , String u7 ) {  <CR> super ( P7 , K3 , d0 , z9 , u7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h9 , String e0 , String j1 , String u9 , String C6 ) {  <CR> super ( h9 , e0 , j1 , u9 , C6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String n5 , String O , Evaluation o8 ) {  <CR> this . senderAddr = n5 ;  <CR> this . receiverAddr = O ;  <CR> this . letter = o8 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] E4 ) {  <CR> Evaluation v2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o9 = new Envelop ( "Taipei" , "Kaohsiung" , v2 ) ;  <CR> o9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String i5 , String F3 , String n9 , String k9 , String g0 ) {  <CR> this . title = i5 ;  <CR> this . receiver = F3 ;  <CR> this . content = n9 ;  <CR> this . sender = k9 ;  <CR> this . date = g0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int S8 ) {  <CR> list [ S8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object P7 ) {  <CR> Letter D = ( Letter ) P7 ;  <CR> if ( this . x > D . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] q2 ) {  <CR> int S8 ;  <CR> for ( S8 = list . length - 1 ; S8 >= 0 ; S8 -- ) {  <CR> int n8 = S8 ;  <CR> Letter R6 = new Letter ( S8 ) ;  <CR> Letter K1 = new Letter ( n8 - 1 ) ;  <CR> if ( R6 . compareTo ( K1 ) == 1 )  <CR> R6 . display ( S8 ) ;  <CR> }  <CR> }  <CR> Letter ( int Y2 ) {  <CR> this . x = Y2 ;  <CR> }  <CR> }  <CR>  <EOC> 