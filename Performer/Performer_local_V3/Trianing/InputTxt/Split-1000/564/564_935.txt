 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t9 , String o3 , String c7 , String q1 , String y2 ) {  <CR> super ( t9 , o3 , c7 , q1 , y2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L , String f , String k4 , String e6 , String W3 ) {  <CR> super ( L , f , k4 , e6 , W3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String q4 , String Q3 , Evaluation f ) {  <CR> this . senderAddr = q4 ;  <CR> this . receiverAddr = Q3 ;  <CR> this . letter = f ;  <CR> }  <CR> public static void main ( String [ ] t0 ) {  <CR> Evaluation L6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g8 = new Envelop ( "Taipei" , "Kaohsiung" , L6 ) ;  <CR> g8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String B2 , String C9 , String R0 , String I , String Z0 ) {  <CR> this . title = B2 ;  <CR> this . receiver = C9 ;  <CR> this . content = R0 ;  <CR> this . sender = I ;  <CR> this . date = Z0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int Y7 ) {  <CR> this . x = Y7 ;  <CR> }  <CR> public static void main ( String [ ] Y2 ) {  <CR> int D8 ;  <CR> for ( D8 = list . length - 1 ; D8 >= 0 ; D8 -- ) {  <CR> int Y4 = D8 ;  <CR> Letter K9 = new Letter ( D8 ) ;  <CR> Letter k7 = new Letter ( Y4 - 1 ) ;  <CR> if ( K9 . compareTo ( k7 ) == 1 )  <CR> K9 . display ( D8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object T4 ) {  <CR> Letter M2 = ( Letter ) T4 ;  <CR> if ( this . x > M2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int D8 ) {  <CR> list [ D8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 