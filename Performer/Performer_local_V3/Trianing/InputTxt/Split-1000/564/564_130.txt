 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g4 , String y3 , String O5 , String q6 , String I ) {  <CR> super ( g4 , y3 , O5 , q6 , I ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S0 , String z2 , String a8 , String E4 , String f5 ) {  <CR> super ( S0 , z2 , a8 , E4 , f5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] H1 ) {  <CR> Evaluation a3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J8 = new Envelop ( "Taipei" , "Kaohsiung" , a3 ) ;  <CR> J8 . display ( ) ;  <CR> }  <CR> public Envelop ( String z7 , String W3 , Evaluation g6 ) {  <CR> this . senderAddr = z7 ;  <CR> this . receiverAddr = W3 ;  <CR> this . letter = g6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String K5 , String w5 , String H2 , String B7 , String C0 ) {  <CR> this . title = K5 ;  <CR> this . receiver = w5 ;  <CR> this . content = H2 ;  <CR> this . sender = B7 ;  <CR> this . date = C0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object J8 ) {  <CR> Letter C7 = ( Letter ) J8 ;  <CR> if ( this . x > C7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int O9 ) {  <CR> this . x = O9 ;  <CR> }  <CR> public void display ( int C9 ) {  <CR> list [ C9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E0 ) {  <CR> int C9 ;  <CR> for ( C9 = list . length - 1 ; C9 >= 0 ; C9 -- ) {  <CR> int Z5 = C9 ;  <CR> Letter v1 = new Letter ( C9 ) ;  <CR> Letter K4 = new Letter ( Z5 - 1 ) ;  <CR> if ( v1 . compareTo ( K4 ) == 1 )  <CR> v1 . display ( C9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 