 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w , String N8 , String J9 , String X8 , String N6 ) {  <CR> super ( w , N8 , J9 , X8 , N6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X0 , String a3 , String O2 , String e0 , String T2 ) {  <CR> super ( X0 , a3 , O2 , e0 , T2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] g3 ) {  <CR> Evaluation E9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e = new Envelop ( "Taipei" , "Kaohsiung" , E9 ) ;  <CR> e . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String X , String g2 , Evaluation i5 ) {  <CR> this . senderAddr = X ;  <CR> this . receiverAddr = g2 ;  <CR> this . letter = i5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String i6 , String K2 , String f6 , String g0 , String J7 ) {  <CR> this . title = i6 ;  <CR> this . receiver = K2 ;  <CR> this . content = f6 ;  <CR> this . sender = g0 ;  <CR> this . date = J7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] S5 ) {  <CR> int F7 ;  <CR> for ( F7 = list . length - 1 ; F7 >= 0 ; F7 -- ) {  <CR> int h5 = F7 ;  <CR> Letter a = new Letter ( F7 ) ;  <CR> Letter Y6 = new Letter ( h5 - 1 ) ;  <CR> if ( a . compareTo ( Y6 ) == 1 )  <CR> a . display ( F7 ) ;  <CR> }  <CR> }  <CR> public void display ( int F7 ) {  <CR> list [ F7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int l9 ) {  <CR> this . x = l9 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object v8 ) {  <CR> Letter c8 = ( Letter ) v8 ;  <CR> if ( this . x > c8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 