 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v5 , String W2 , String n1 , String M5 , String e0 ) {  <CR> super ( v5 , W2 , n1 , M5 , e0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X8 , String u8 , String p1 , String F1 , String c7 ) {  <CR> super ( X8 , u8 , p1 , F1 , c7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String B , String w4 , Evaluation l4 ) {  <CR> this . senderAddr = B ;  <CR> this . receiverAddr = w4 ;  <CR> this . letter = l4 ;  <CR> }  <CR> public static void main ( String [ ] a9 ) {  <CR> Evaluation J0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D = new Envelop ( "Taipei" , "Kaohsiung" , J0 ) ;  <CR> D . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String w9 , String n7 , String w , String Y0 , String C6 ) {  <CR> this . title = w9 ;  <CR> this . receiver = n7 ;  <CR> this . content = w ;  <CR> this . sender = Y0 ;  <CR> this . date = C6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] w9 ) {  <CR> int U1 ;  <CR> for ( U1 = list . length - 1 ; U1 >= 0 ; U1 -- ) {  <CR> int k9 = U1 ;  <CR> Letter d3 = new Letter ( U1 ) ;  <CR> Letter U3 = new Letter ( k9 - 1 ) ;  <CR> if ( d3 . compareTo ( U3 ) == 1 )  <CR> d3 . display ( U1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object R6 ) {  <CR> Letter x6 = ( Letter ) R6 ;  <CR> if ( this . x > x6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int U1 ) {  <CR> list [ U1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int n2 ) {  <CR> this . x = n2 ;  <CR> }  <CR> }  <CR>  <EOC> 