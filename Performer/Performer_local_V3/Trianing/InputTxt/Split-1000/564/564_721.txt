 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r3 , String X8 , String Y6 , String c6 , String R2 ) {  <CR> super ( r3 , X8 , Y6 , c6 , R2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J5 , String x3 , String N4 , String q8 , String m1 ) {  <CR> super ( J5 , x3 , N4 , q8 , m1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String J3 , String E4 , Evaluation k5 ) {  <CR> this . senderAddr = J3 ;  <CR> this . receiverAddr = E4 ;  <CR> this . letter = k5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] M0 ) {  <CR> Evaluation w0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m9 = new Envelop ( "Taipei" , "Kaohsiung" , w0 ) ;  <CR> m9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String o1 , String i8 , String c3 , String z4 , String e1 ) {  <CR> this . title = o1 ;  <CR> this . receiver = i8 ;  <CR> this . content = c3 ;  <CR> this . sender = z4 ;  <CR> this . date = e1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int N7 ) {  <CR> this . x = N7 ;  <CR> }  <CR> public static void main ( String [ ] V5 ) {  <CR> int Z2 ;  <CR> for ( Z2 = list . length - 1 ; Z2 >= 0 ; Z2 -- ) {  <CR> int y = Z2 ;  <CR> Letter R = new Letter ( Z2 ) ;  <CR> Letter i8 = new Letter ( y - 1 ) ;  <CR> if ( R . compareTo ( i8 ) == 1 )  <CR> R . display ( Z2 ) ;  <CR> }  <CR> }  <CR> public void display ( int Z2 ) {  <CR> list [ Z2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object B ) {  <CR> Letter L7 = ( Letter ) B ;  <CR> if ( this . x > L7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 