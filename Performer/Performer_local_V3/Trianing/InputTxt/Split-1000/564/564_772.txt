 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H , String A3 , String r1 , String I7 , String K4 ) {  <CR> super ( H , A3 , r1 , I7 , K4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String t0 , String T5 , String A7 , String N8 , String W9 ) {  <CR> super ( t0 , T5 , A7 , N8 , W9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S8 ) {  <CR> Evaluation P9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b0 = new Envelop ( "Taipei" , "Kaohsiung" , P9 ) ;  <CR> b0 . display ( ) ;  <CR> }  <CR> public Envelop ( String V6 , String E4 , Evaluation j4 ) {  <CR> this . senderAddr = V6 ;  <CR> this . receiverAddr = E4 ;  <CR> this . letter = j4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Y2 , String t1 , String W2 , String F4 , String z9 ) {  <CR> this . title = Y2 ;  <CR> this . receiver = t1 ;  <CR> this . content = W2 ;  <CR> this . sender = F4 ;  <CR> this . date = z9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int D6 ) {  <CR> this . x = D6 ;  <CR> }  <CR> public static void main ( String [ ] S9 ) {  <CR> int x2 ;  <CR> for ( x2 = list . length - 1 ; x2 >= 0 ; x2 -- ) {  <CR> int p3 = x2 ;  <CR> Letter b3 = new Letter ( x2 ) ;  <CR> Letter r7 = new Letter ( p3 - 1 ) ;  <CR> if ( b3 . compareTo ( r7 ) == 1 )  <CR> b3 . display ( x2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object N4 ) {  <CR> Letter o1 = ( Letter ) N4 ;  <CR> if ( this . x > o1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int x2 ) {  <CR> list [ x2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 