 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o , String E3 , String n7 , String u7 , String P7 ) {  <CR> super ( o , E3 , n7 , u7 , P7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k6 , String Y5 , String m7 , String d3 , String l7 ) {  <CR> super ( k6 , Y5 , m7 , d3 , l7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String k0 , String L , Evaluation G6 ) {  <CR> this . senderAddr = k0 ;  <CR> this . receiverAddr = L ;  <CR> this . letter = G6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> Evaluation D1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g0 = new Envelop ( "Taipei" , "Kaohsiung" , D1 ) ;  <CR> g0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String W5 , String I7 , String K , String D8 , String x6 ) {  <CR> this . title = W5 ;  <CR> this . receiver = I7 ;  <CR> this . content = K ;  <CR> this . sender = D8 ;  <CR> this . date = x6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] I2 ) {  <CR> int g ;  <CR> for ( g = list . length - 1 ; g >= 0 ; g -- ) {  <CR> int D3 = g ;  <CR> Letter g8 = new Letter ( g ) ;  <CR> Letter n6 = new Letter ( D3 - 1 ) ;  <CR> if ( g8 . compareTo ( n6 ) == 1 )  <CR> g8 . display ( g ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object e ) {  <CR> Letter X4 = ( Letter ) e ;  <CR> if ( this . x > X4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int g ) {  <CR> list [ g ] . Display ( ) ;  <CR> }  <CR> Letter ( int g5 ) {  <CR> this . x = g5 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 