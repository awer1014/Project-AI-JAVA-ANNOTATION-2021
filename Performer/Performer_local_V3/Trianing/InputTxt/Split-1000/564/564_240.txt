 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String K2 , String I7 , String r4 , String f4 , String r6 ) {  <CR> super ( K2 , I7 , r4 , f4 , r6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W0 , String l8 , String L7 , String B7 , String P4 ) {  <CR> super ( W0 , l8 , L7 , B7 , P4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] L1 ) {  <CR> Evaluation M7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p = new Envelop ( "Taipei" , "Kaohsiung" , M7 ) ;  <CR> p . display ( ) ;  <CR> }  <CR> public Envelop ( String X6 , String U0 , Evaluation o1 ) {  <CR> this . senderAddr = X6 ;  <CR> this . receiverAddr = U0 ;  <CR> this . letter = o1 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String h6 , String t0 , String A2 , String i0 , String N1 ) {  <CR> this . title = h6 ;  <CR> this . receiver = t0 ;  <CR> this . content = A2 ;  <CR> this . sender = i0 ;  <CR> this . date = N1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M4 ) {  <CR> list [ M4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x3 ) {  <CR> this . x = x3 ;  <CR> }  <CR> public int compareTo ( Object W2 ) {  <CR> Letter q4 = ( Letter ) W2 ;  <CR> if ( this . x > q4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] i2 ) {  <CR> int M4 ;  <CR> for ( M4 = list . length - 1 ; M4 >= 0 ; M4 -- ) {  <CR> int E1 = M4 ;  <CR> Letter D9 = new Letter ( M4 ) ;  <CR> Letter T9 = new Letter ( E1 - 1 ) ;  <CR> if ( D9 . compareTo ( T9 ) == 1 )  <CR> D9 . display ( M4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 