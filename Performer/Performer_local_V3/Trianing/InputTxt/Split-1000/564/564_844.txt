 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E9 , String z9 , String U6 , String V2 , String Z5 ) {  <CR> super ( E9 , z9 , U6 , V2 , Z5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String M6 , String R2 , String y0 , String i9 , String k2 ) {  <CR> super ( M6 , R2 , y0 , i9 , k2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] h4 ) {  <CR> Evaluation S1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S4 = new Envelop ( "Taipei" , "Kaohsiung" , S1 ) ;  <CR> S4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String A3 , String p9 , Evaluation L4 ) {  <CR> this . senderAddr = A3 ;  <CR> this . receiverAddr = p9 ;  <CR> this . letter = L4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Q5 , String b , String m2 , String S0 , String J4 ) {  <CR> this . title = Q5 ;  <CR> this . receiver = b ;  <CR> this . content = m2 ;  <CR> this . sender = S0 ;  <CR> this . date = J4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int T7 ) {  <CR> this . x = T7 ;  <CR> }  <CR> public static void main ( String [ ] R7 ) {  <CR> int M1 ;  <CR> for ( M1 = list . length - 1 ; M1 >= 0 ; M1 -- ) {  <CR> int v4 = M1 ;  <CR> Letter C = new Letter ( M1 ) ;  <CR> Letter t7 = new Letter ( v4 - 1 ) ;  <CR> if ( C . compareTo ( t7 ) == 1 )  <CR> C . display ( M1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object K2 ) {  <CR> Letter U5 = ( Letter ) K2 ;  <CR> if ( this . x > U5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int M1 ) {  <CR> list [ M1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 