 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i9 , String u9 , String F4 , String g9 , String k7 ) {  <CR> super ( i9 , u9 , F4 , g9 , k7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A9 , String R2 , String T4 , String J , String N9 ) {  <CR> super ( A9 , R2 , T4 , J , N9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String u6 , String P , Evaluation W ) {  <CR> this . senderAddr = u6 ;  <CR> this . receiverAddr = P ;  <CR> this . letter = W ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] B3 ) {  <CR> Evaluation I3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A9 = new Envelop ( "Taipei" , "Kaohsiung" , I3 ) ;  <CR> A9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String o9 , String t8 , String c2 , String s2 , String o3 ) {  <CR> this . title = o9 ;  <CR> this . receiver = t8 ;  <CR> this . content = c2 ;  <CR> this . sender = s2 ;  <CR> this . date = o3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object X9 ) {  <CR> Letter k7 = ( Letter ) X9 ;  <CR> if ( this . x > k7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] k4 ) {  <CR> int H9 ;  <CR> for ( H9 = list . length - 1 ; H9 >= 0 ; H9 -- ) {  <CR> int u4 = H9 ;  <CR> Letter B0 = new Letter ( H9 ) ;  <CR> Letter D1 = new Letter ( u4 - 1 ) ;  <CR> if ( B0 . compareTo ( D1 ) == 1 )  <CR> B0 . display ( H9 ) ;  <CR> }  <CR> }  <CR> Letter ( int y0 ) {  <CR> this . x = y0 ;  <CR> }  <CR> public void display ( int H9 ) {  <CR> list [ H9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 