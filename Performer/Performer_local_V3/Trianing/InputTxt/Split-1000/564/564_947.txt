 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x7 , String L2 , String G , String e4 , String w1 ) {  <CR> super ( x7 , L2 , G , e4 , w1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z4 , String P3 , String t0 , String N4 , String a7 ) {  <CR> super ( Z4 , P3 , t0 , N4 , a7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] f0 ) {  <CR> Evaluation G0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s0 = new Envelop ( "Taipei" , "Kaohsiung" , G0 ) ;  <CR> s0 . display ( ) ;  <CR> }  <CR> public Envelop ( String s7 , String B5 , Evaluation f7 ) {  <CR> this . senderAddr = s7 ;  <CR> this . receiverAddr = B5 ;  <CR> this . letter = f7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String r , String w9 , String f9 , String I1 , String E3 ) {  <CR> this . title = r ;  <CR> this . receiver = w9 ;  <CR> this . content = f9 ;  <CR> this . sender = I1 ;  <CR> this . date = E3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object y4 ) {  <CR> Letter o7 = ( Letter ) y4 ;  <CR> if ( this . x > o7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] i8 ) {  <CR> int f6 ;  <CR> for ( f6 = list . length - 1 ; f6 >= 0 ; f6 -- ) {  <CR> int W6 = f6 ;  <CR> Letter Q3 = new Letter ( f6 ) ;  <CR> Letter O6 = new Letter ( W6 - 1 ) ;  <CR> if ( Q3 . compareTo ( O6 ) == 1 )  <CR> Q3 . display ( f6 ) ;  <CR> }  <CR> }  <CR> public void display ( int f6 ) {  <CR> list [ f6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int T3 ) {  <CR> this . x = T3 ;  <CR> }  <CR> }  <CR>  <EOC> 