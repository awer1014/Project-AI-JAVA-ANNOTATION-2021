 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o4 , String s , String n2 , String K6 , String y ) {  <CR> super ( o4 , s , n2 , K6 , y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l6 , String S9 , String q6 , String n8 , String X0 ) {  <CR> super ( l6 , S9 , q6 , n8 , X0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g0 ) {  <CR> Evaluation U3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F6 = new Envelop ( "Taipei" , "Kaohsiung" , U3 ) ;  <CR> F6 . display ( ) ;  <CR> }  <CR> public Envelop ( String h , String J9 , Evaluation X3 ) {  <CR> this . senderAddr = h ;  <CR> this . receiverAddr = J9 ;  <CR> this . letter = X3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String p4 , String W2 , String E9 , String G3 , String N8 ) {  <CR> this . title = p4 ;  <CR> this . receiver = W2 ;  <CR> this . content = E9 ;  <CR> this . sender = G3 ;  <CR> this . date = N8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int A7 ) {  <CR> list [ A7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object d ) {  <CR> Letter R2 = ( Letter ) d ;  <CR> if ( this . x > R2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] E9 ) {  <CR> int A7 ;  <CR> for ( A7 = list . length - 1 ; A7 >= 0 ; A7 -- ) {  <CR> int L0 = A7 ;  <CR> Letter a2 = new Letter ( A7 ) ;  <CR> Letter U6 = new Letter ( L0 - 1 ) ;  <CR> if ( a2 . compareTo ( U6 ) == 1 )  <CR> a2 . display ( A7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int E8 ) {  <CR> this . x = E8 ;  <CR> }  <CR> }  <CR>  <EOC> 