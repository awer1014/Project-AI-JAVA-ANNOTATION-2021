 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String n3 , String N1 , String r6 , String Y1 , String R4 ) {  <CR> super ( n3 , N1 , r6 , Y1 , R4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o2 , String k9 , String U5 , String H8 , String h4 ) {  <CR> super ( o2 , k9 , U5 , H8 , h4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String a8 , String F4 , Evaluation p6 ) {  <CR> this . senderAddr = a8 ;  <CR> this . receiverAddr = F4 ;  <CR> this . letter = p6 ;  <CR> }  <CR> public static void main ( String [ ] G6 ) {  <CR> Evaluation E3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P = new Envelop ( "Taipei" , "Kaohsiung" , E3 ) ;  <CR> P . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String n2 , String N4 , String s0 , String E0 , String Z8 ) {  <CR> this . title = n2 ;  <CR> this . receiver = N4 ;  <CR> this . content = s0 ;  <CR> this . sender = E0 ;  <CR> this . date = Z8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int r2 ) {  <CR> list [ r2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Z1 ) {  <CR> this . x = Z1 ;  <CR> }  <CR> public int compareTo ( Object o ) {  <CR> Letter q6 = ( Letter ) o ;  <CR> if ( this . x > q6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z6 ) {  <CR> int r2 ;  <CR> for ( r2 = list . length - 1 ; r2 >= 0 ; r2 -- ) {  <CR> int e2 = r2 ;  <CR> Letter p4 = new Letter ( r2 ) ;  <CR> Letter N3 = new Letter ( e2 - 1 ) ;  <CR> if ( p4 . compareTo ( N3 ) == 1 )  <CR> p4 . display ( r2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 