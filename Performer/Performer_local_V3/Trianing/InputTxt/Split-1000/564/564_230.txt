 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S5 , String r0 , String t9 , String T2 , String J7 ) {  <CR> super ( S5 , r0 , t9 , T2 , J7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i , String V , String v7 , String C2 , String u8 ) {  <CR> super ( i , V , v7 , C2 , u8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] e1 ) {  <CR> Evaluation I2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P2 = new Envelop ( "Taipei" , "Kaohsiung" , I2 ) ;  <CR> P2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String X5 , String d2 , Evaluation X6 ) {  <CR> this . senderAddr = X5 ;  <CR> this . receiverAddr = d2 ;  <CR> this . letter = X6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String P3 , String h5 , String D8 , String C1 , String o5 ) {  <CR> this . title = P3 ;  <CR> this . receiver = h5 ;  <CR> this . content = D8 ;  <CR> this . sender = C1 ;  <CR> this . date = o5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object s ) {  <CR> Letter k0 = ( Letter ) s ;  <CR> if ( this . x > k0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] i9 ) {  <CR> int c1 ;  <CR> for ( c1 = list . length - 1 ; c1 >= 0 ; c1 -- ) {  <CR> int v4 = c1 ;  <CR> Letter m8 = new Letter ( c1 ) ;  <CR> Letter G7 = new Letter ( v4 - 1 ) ;  <CR> if ( m8 . compareTo ( G7 ) == 1 )  <CR> m8 . display ( c1 ) ;  <CR> }  <CR> }  <CR> public void display ( int c1 ) {  <CR> list [ c1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int C ) {  <CR> this . x = C ;  <CR> }  <CR> }  <CR>  <EOC> 