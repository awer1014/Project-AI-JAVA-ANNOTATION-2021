 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String K3 , String I3 , String p1 , String I2 , String O0 ) {  <CR> super ( K3 , I3 , p1 , I2 , O0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n5 , String h2 , String h7 , String v2 , String T3 ) {  <CR> super ( n5 , h2 , h7 , v2 , T3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] F7 ) {  <CR> Evaluation H5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n3 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> n3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String f , String j4 , Evaluation k ) {  <CR> this . senderAddr = f ;  <CR> this . receiverAddr = j4 ;  <CR> this . letter = k ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String A9 , String o4 , String T4 , String l9 , String r6 ) {  <CR> this . title = A9 ;  <CR> this . receiver = o4 ;  <CR> this . content = T4 ;  <CR> this . sender = l9 ;  <CR> this . date = r6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object u6 ) {  <CR> Letter j5 = ( Letter ) u6 ;  <CR> if ( this . x > j5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int x4 ) {  <CR> list [ x4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U ) {  <CR> int x4 ;  <CR> for ( x4 = list . length - 1 ; x4 >= 0 ; x4 -- ) {  <CR> int j6 = x4 ;  <CR> Letter Z1 = new Letter ( x4 ) ;  <CR> Letter X4 = new Letter ( j6 - 1 ) ;  <CR> if ( Z1 . compareTo ( X4 ) == 1 )  <CR> Z1 . display ( x4 ) ;  <CR> }  <CR> }  <CR> Letter ( int d8 ) {  <CR> this . x = d8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 