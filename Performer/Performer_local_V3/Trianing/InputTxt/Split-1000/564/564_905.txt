 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o4 , String l6 , String Q2 , String V7 , String l3 ) {  <CR> super ( o4 , l6 , Q2 , V7 , l3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t2 , String h4 , String O6 , String T6 , String c ) {  <CR> super ( t2 , h4 , O6 , T6 , c ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] U7 ) {  <CR> Evaluation X1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H1 = new Envelop ( "Taipei" , "Kaohsiung" , X1 ) ;  <CR> H1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String w1 , String F9 , Evaluation C5 ) {  <CR> this . senderAddr = w1 ;  <CR> this . receiverAddr = F9 ;  <CR> this . letter = C5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String C2 , String J0 , String q3 , String G6 , String a7 ) {  <CR> this . title = C2 ;  <CR> this . receiver = J0 ;  <CR> this . content = q3 ;  <CR> this . sender = G6 ;  <CR> this . date = a7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int u2 ) {  <CR> this . x = u2 ;  <CR> }  <CR> public void display ( int D4 ) {  <CR> list [ D4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k1 ) {  <CR> int D4 ;  <CR> for ( D4 = list . length - 1 ; D4 >= 0 ; D4 -- ) {  <CR> int B2 = D4 ;  <CR> Letter M4 = new Letter ( D4 ) ;  <CR> Letter a8 = new Letter ( B2 - 1 ) ;  <CR> if ( M4 . compareTo ( a8 ) == 1 )  <CR> M4 . display ( D4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object t ) {  <CR> Letter c0 = ( Letter ) t ;  <CR> if ( this . x > c0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 