 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String M9 , String n1 , String H8 , String y6 , String n3 ) {  <CR> super ( M9 , n1 , H8 , y6 , n3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j4 , String E7 , String M3 , String c0 , String R3 ) {  <CR> super ( j4 , E7 , M3 , c0 , R3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String b3 , String D4 , Evaluation H3 ) {  <CR> this . senderAddr = b3 ;  <CR> this . receiverAddr = D4 ;  <CR> this . letter = H3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G ) {  <CR> Evaluation q = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r8 = new Envelop ( "Taipei" , "Kaohsiung" , q ) ;  <CR> r8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String E4 , String v5 , String W6 , String t9 , String M1 ) {  <CR> this . title = E4 ;  <CR> this . receiver = v5 ;  <CR> this . content = W6 ;  <CR> this . sender = t9 ;  <CR> this . date = M1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int h5 ) {  <CR> list [ h5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object o6 ) {  <CR> Letter d0 = ( Letter ) o6 ;  <CR> if ( this . x > d0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] H ) {  <CR> int h5 ;  <CR> for ( h5 = list . length - 1 ; h5 >= 0 ; h5 -- ) {  <CR> int H5 = h5 ;  <CR> Letter z4 = new Letter ( h5 ) ;  <CR> Letter b9 = new Letter ( H5 - 1 ) ;  <CR> if ( z4 . compareTo ( b9 ) == 1 )  <CR> z4 . display ( h5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int B9 ) {  <CR> this . x = B9 ;  <CR> }  <CR> }  <CR>  <EOC> 