 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String U6 , String l8 , String A7 , String G4 , String A1 ) {  <CR> super ( U6 , l8 , A7 , G4 , A1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C8 , String j1 , String E , String o4 , String W3 ) {  <CR> super ( C8 , j1 , E , o4 , W3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String L7 , String r3 , Evaluation a3 ) {  <CR> this . senderAddr = L7 ;  <CR> this . receiverAddr = r3 ;  <CR> this . letter = a3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] X8 ) {  <CR> Evaluation R = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X6 = new Envelop ( "Taipei" , "Kaohsiung" , R ) ;  <CR> X6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String M9 , String w8 , String G9 , String q6 , String F4 ) {  <CR> this . title = M9 ;  <CR> this . receiver = w8 ;  <CR> this . content = G9 ;  <CR> this . sender = q6 ;  <CR> this . date = F4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int G2 ) {  <CR> list [ G2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object u6 ) {  <CR> Letter X4 = ( Letter ) u6 ;  <CR> if ( this . x > X4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] o4 ) {  <CR> int G2 ;  <CR> for ( G2 = list . length - 1 ; G2 >= 0 ; G2 -- ) {  <CR> int p7 = G2 ;  <CR> Letter R7 = new Letter ( G2 ) ;  <CR> Letter P0 = new Letter ( p7 - 1 ) ;  <CR> if ( R7 . compareTo ( P0 ) == 1 )  <CR> R7 . display ( G2 ) ;  <CR> }  <CR> }  <CR> Letter ( int G8 ) {  <CR> this . x = G8 ;  <CR> }  <CR> }  <CR>  <EOC> 