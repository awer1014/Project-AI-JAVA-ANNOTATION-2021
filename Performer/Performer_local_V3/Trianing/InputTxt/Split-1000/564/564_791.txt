 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c7 , String g , String b6 , String C2 , String w8 ) {  <CR> super ( c7 , g , b6 , C2 , w8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G5 , String Q , String V , String f8 , String X7 ) {  <CR> super ( G5 , Q , V , f8 , X7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m ) {  <CR> Evaluation y9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r2 = new Envelop ( "Taipei" , "Kaohsiung" , y9 ) ;  <CR> r2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String s5 , String d1 , Evaluation n4 ) {  <CR> this . senderAddr = s5 ;  <CR> this . receiverAddr = d1 ;  <CR> this . letter = n4 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String U9 , String q4 , String l3 , String j7 , String F4 ) {  <CR> this . title = U9 ;  <CR> this . receiver = q4 ;  <CR> this . content = l3 ;  <CR> this . sender = j7 ;  <CR> this . date = F4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int d3 ) {  <CR> this . x = d3 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object G1 ) {  <CR> Letter q6 = ( Letter ) G1 ;  <CR> if ( this . x > q6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int j6 ) {  <CR> list [ j6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b4 ) {  <CR> int j6 ;  <CR> for ( j6 = list . length - 1 ; j6 >= 0 ; j6 -- ) {  <CR> int m6 = j6 ;  <CR> Letter h1 = new Letter ( j6 ) ;  <CR> Letter j2 = new Letter ( m6 - 1 ) ;  <CR> if ( h1 . compareTo ( j2 ) == 1 )  <CR> h1 . display ( j6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 