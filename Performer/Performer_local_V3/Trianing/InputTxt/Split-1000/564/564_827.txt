 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String s3 , String L2 , String Y7 , String Q0 , String A0 ) {  <CR> super ( s3 , L2 , Y7 , Q0 , A0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n5 , String L4 , String N5 , String b3 , String I9 ) {  <CR> super ( n5 , L4 , N5 , b3 , I9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String i3 , String o7 , Evaluation t8 ) {  <CR> this . senderAddr = i3 ;  <CR> this . receiverAddr = o7 ;  <CR> this . letter = t8 ;  <CR> }  <CR> public static void main ( String [ ] E9 ) {  <CR> Evaluation y3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z1 = new Envelop ( "Taipei" , "Kaohsiung" , y3 ) ;  <CR> Z1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Z7 , String a0 , String f9 , String S , String D5 ) {  <CR> this . title = Z7 ;  <CR> this . receiver = a0 ;  <CR> this . content = f9 ;  <CR> this . sender = S ;  <CR> this . date = D5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Q1 ) {  <CR> list [ Q1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int A5 ) {  <CR> this . x = A5 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object h3 ) {  <CR> Letter v = ( Letter ) h3 ;  <CR> if ( this . x > v . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] n7 ) {  <CR> int Q1 ;  <CR> for ( Q1 = list . length - 1 ; Q1 >= 0 ; Q1 -- ) {  <CR> int V = Q1 ;  <CR> Letter e8 = new Letter ( Q1 ) ;  <CR> Letter V6 = new Letter ( V - 1 ) ;  <CR> if ( e8 . compareTo ( V6 ) == 1 )  <CR> e8 . display ( Q1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 