 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D7 , String z3 , String B , String d2 , String Y4 ) {  <CR> super ( D7 , z3 , B , d2 , Y4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n1 , String N4 , String e6 , String R0 , String G6 ) {  <CR> super ( n1 , N4 , e6 , R0 , G6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] A6 ) {  <CR> Evaluation X9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q3 = new Envelop ( "Taipei" , "Kaohsiung" , X9 ) ;  <CR> q3 . display ( ) ;  <CR> }  <CR> public Envelop ( String A1 , String x8 , Evaluation D3 ) {  <CR> this . senderAddr = A1 ;  <CR> this . receiverAddr = x8 ;  <CR> this . letter = D3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String F3 , String z7 , String O3 , String b9 , String f1 ) {  <CR> this . title = F3 ;  <CR> this . receiver = z7 ;  <CR> this . content = O3 ;  <CR> this . sender = b9 ;  <CR> this . date = f1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int R ) {  <CR> list [ R ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x8 ) {  <CR> int R ;  <CR> for ( R = list . length - 1 ; R >= 0 ; R -- ) {  <CR> int T4 = R ;  <CR> Letter k5 = new Letter ( R ) ;  <CR> Letter n5 = new Letter ( T4 - 1 ) ;  <CR> if ( k5 . compareTo ( n5 ) == 1 )  <CR> k5 . display ( R ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object h0 ) {  <CR> Letter A5 = ( Letter ) h0 ;  <CR> if ( this . x > A5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int e1 ) {  <CR> this . x = e1 ;  <CR> }  <CR> }  <CR>  <EOC> 