 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D9 , String l4 , String X0 , String T3 , String s2 ) {  <CR> super ( D9 , l4 , X0 , T3 , s2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I4 , String m7 , String K2 , String t6 , String j7 ) {  <CR> super ( I4 , m7 , K2 , t6 , j7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String f3 , String K2 , Evaluation J4 ) {  <CR> this . senderAddr = f3 ;  <CR> this . receiverAddr = K2 ;  <CR> this . letter = J4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] G8 ) {  <CR> Evaluation z0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b5 = new Envelop ( "Taipei" , "Kaohsiung" , z0 ) ;  <CR> b5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String o4 , String Z5 , String P0 , String q0 , String m4 ) {  <CR> this . title = o4 ;  <CR> this . receiver = Z5 ;  <CR> this . content = P0 ;  <CR> this . sender = q0 ;  <CR> this . date = m4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] d0 ) {  <CR> int c9 ;  <CR> for ( c9 = list . length - 1 ; c9 >= 0 ; c9 -- ) {  <CR> int w7 = c9 ;  <CR> Letter h0 = new Letter ( c9 ) ;  <CR> Letter V1 = new Letter ( w7 - 1 ) ;  <CR> if ( h0 . compareTo ( V1 ) == 1 )  <CR> h0 . display ( c9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int w6 ) {  <CR> this . x = w6 ;  <CR> }  <CR> public int compareTo ( Object W5 ) {  <CR> Letter d5 = ( Letter ) W5 ;  <CR> if ( this . x > d5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int c9 ) {  <CR> list [ c9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 