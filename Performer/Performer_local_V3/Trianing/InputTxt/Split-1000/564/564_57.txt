 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i5 , String i1 , String g5 , String Q7 , String V9 ) {  <CR> super ( i5 , i1 , g5 , Q7 , V9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g7 , String c5 , String Q1 , String N6 , String z2 ) {  <CR> super ( g7 , c5 , Q1 , N6 , z2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String c1 , String d4 , Evaluation l8 ) {  <CR> this . senderAddr = c1 ;  <CR> this . receiverAddr = d4 ;  <CR> this . letter = l8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] X4 ) {  <CR> Evaluation b2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c = new Envelop ( "Taipei" , "Kaohsiung" , b2 ) ;  <CR> c . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String o8 , String O6 , String Z9 , String R8 , String a2 ) {  <CR> this . title = o8 ;  <CR> this . receiver = O6 ;  <CR> this . content = Z9 ;  <CR> this . sender = R8 ;  <CR> this . date = a2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int b7 ) {  <CR> this . x = b7 ;  <CR> }  <CR> public void display ( int e3 ) {  <CR> list [ e3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object N0 ) {  <CR> Letter O7 = ( Letter ) N0 ;  <CR> if ( this . x > O7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] x9 ) {  <CR> int e3 ;  <CR> for ( e3 = list . length - 1 ; e3 >= 0 ; e3 -- ) {  <CR> int O3 = e3 ;  <CR> Letter Z = new Letter ( e3 ) ;  <CR> Letter l0 = new Letter ( O3 - 1 ) ;  <CR> if ( Z . compareTo ( l0 ) == 1 )  <CR> Z . display ( e3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 