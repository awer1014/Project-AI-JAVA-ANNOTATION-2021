 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String V2 , String V7 , String D1 , String s8 , String f5 ) {  <CR> super ( V2 , V7 , D1 , s8 , f5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J3 , String Y7 , String e7 , String D4 , String d5 ) {  <CR> super ( J3 , Y7 , e7 , D4 , d5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q5 ) {  <CR> Evaluation U1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J9 = new Envelop ( "Taipei" , "Kaohsiung" , U1 ) ;  <CR> J9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String v3 , String U0 , Evaluation m3 ) {  <CR> this . senderAddr = v3 ;  <CR> this . receiverAddr = U0 ;  <CR> this . letter = m3 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String X5 , String N8 , String j1 , String Z6 , String d0 ) {  <CR> this . title = X5 ;  <CR> this . receiver = N8 ;  <CR> this . content = j1 ;  <CR> this . sender = Z6 ;  <CR> this . date = d0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] r2 ) {  <CR> int W2 ;  <CR> for ( W2 = list . length - 1 ; W2 >= 0 ; W2 -- ) {  <CR> int Z8 = W2 ;  <CR> Letter m7 = new Letter ( W2 ) ;  <CR> Letter T7 = new Letter ( Z8 - 1 ) ;  <CR> if ( m7 . compareTo ( T7 ) == 1 )  <CR> m7 . display ( W2 ) ;  <CR> }  <CR> }  <CR> Letter ( int x9 ) {  <CR> this . x = x9 ;  <CR> }  <CR> public void display ( int W2 ) {  <CR> list [ W2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object G0 ) {  <CR> Letter N0 = ( Letter ) G0 ;  <CR> if ( this . x > N0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 