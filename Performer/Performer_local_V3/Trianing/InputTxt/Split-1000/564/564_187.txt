 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String f4 , String P9 , String y2 , String w3 , String A8 ) {  <CR> super ( f4 , P9 , y2 , w3 , A8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M8 , String Z , String a6 , String C1 , String e5 ) {  <CR> super ( M8 , Z , a6 , C1 , e5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] y0 ) {  <CR> Evaluation f0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q3 = new Envelop ( "Taipei" , "Kaohsiung" , f0 ) ;  <CR> Q3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String A7 , String c2 , Evaluation n2 ) {  <CR> this . senderAddr = A7 ;  <CR> this . receiverAddr = c2 ;  <CR> this . letter = n2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String h6 , String B4 , String q2 , String j2 , String c5 ) {  <CR> this . title = h6 ;  <CR> this . receiver = B4 ;  <CR> this . content = q2 ;  <CR> this . sender = j2 ;  <CR> this . date = c5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int K8 ) {  <CR> this . x = K8 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] u2 ) {  <CR> int H2 ;  <CR> for ( H2 = list . length - 1 ; H2 >= 0 ; H2 -- ) {  <CR> int V0 = H2 ;  <CR> Letter p5 = new Letter ( H2 ) ;  <CR> Letter k2 = new Letter ( V0 - 1 ) ;  <CR> if ( p5 . compareTo ( k2 ) == 1 )  <CR> p5 . display ( H2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object B4 ) {  <CR> Letter X1 = ( Letter ) B4 ;  <CR> if ( this . x > X1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H2 ) {  <CR> list [ H2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 