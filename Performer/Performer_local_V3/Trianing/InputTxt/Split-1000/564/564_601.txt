 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String l4 , String Q4 , String j1 , String D0 , String r5 ) {  <CR> super ( l4 , Q4 , j1 , D0 , r5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j0 , String b , String o6 , String l7 , String G5 ) {  <CR> super ( j0 , b , o6 , l7 , G5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] I7 ) {  <CR> Evaluation f = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F7 = new Envelop ( "Taipei" , "Kaohsiung" , f ) ;  <CR> F7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String o7 , String q4 , Evaluation t9 ) {  <CR> this . senderAddr = o7 ;  <CR> this . receiverAddr = q4 ;  <CR> this . letter = t9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String L2 , String q9 , String J8 , String w2 , String D2 ) {  <CR> this . title = L2 ;  <CR> this . receiver = q9 ;  <CR> this . content = J8 ;  <CR> this . sender = w2 ;  <CR> this . date = D2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] V ) {  <CR> int S ;  <CR> for ( S = list . length - 1 ; S >= 0 ; S -- ) {  <CR> int g0 = S ;  <CR> Letter Z6 = new Letter ( S ) ;  <CR> Letter O7 = new Letter ( g0 - 1 ) ;  <CR> if ( Z6 . compareTo ( O7 ) == 1 )  <CR> Z6 . display ( S ) ;  <CR> }  <CR> }  <CR> Letter ( int A4 ) {  <CR> this . x = A4 ;  <CR> }  <CR> public int compareTo ( Object w7 ) {  <CR> Letter e5 = ( Letter ) w7 ;  <CR> if ( this . x > e5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int S ) {  <CR> list [ S ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 