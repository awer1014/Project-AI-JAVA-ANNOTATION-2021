 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q0 , String y5 , String j4 , String w3 , String y7 ) {  <CR> super ( Q0 , y5 , j4 , w3 , y7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y1 , String t9 , String s5 , String x7 , String T9 ) {  <CR> super ( Y1 , t9 , s5 , x7 , T9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] q2 ) {  <CR> Evaluation Z3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h4 = new Envelop ( "Taipei" , "Kaohsiung" , Z3 ) ;  <CR> h4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C1 , String d , Evaluation e6 ) {  <CR> this . senderAddr = C1 ;  <CR> this . receiverAddr = d ;  <CR> this . letter = e6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String E8 , String t5 , String i9 , String w1 , String m4 ) {  <CR> this . title = E8 ;  <CR> this . receiver = t5 ;  <CR> this . content = i9 ;  <CR> this . sender = w1 ;  <CR> this . date = m4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P0 ) {  <CR> list [ P0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m4 ) {  <CR> int P0 ;  <CR> for ( P0 = list . length - 1 ; P0 >= 0 ; P0 -- ) {  <CR> int Z3 = P0 ;  <CR> Letter Z8 = new Letter ( P0 ) ;  <CR> Letter z2 = new Letter ( Z3 - 1 ) ;  <CR> if ( Z8 . compareTo ( z2 ) == 1 )  <CR> Z8 . display ( P0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object O ) {  <CR> Letter i9 = ( Letter ) O ;  <CR> if ( this . x > i9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int C1 ) {  <CR> this . x = C1 ;  <CR> }  <CR> }  <CR>  <EOC> 