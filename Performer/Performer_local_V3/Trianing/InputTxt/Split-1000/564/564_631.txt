 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g4 , String e0 , String b3 , String J2 , String a0 ) {  <CR> super ( g4 , e0 , b3 , J2 , a0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k6 , String h2 , String r9 , String x2 , String l0 ) {  <CR> super ( k6 , h2 , r9 , x2 , l0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String O0 , String f6 , Evaluation v8 ) {  <CR> this . senderAddr = O0 ;  <CR> this . receiverAddr = f6 ;  <CR> this . letter = v8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] h3 ) {  <CR> Evaluation L = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b3 = new Envelop ( "Taipei" , "Kaohsiung" , L ) ;  <CR> b3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String j6 , String x6 , String T2 , String o2 , String A7 ) {  <CR> this . title = j6 ;  <CR> this . receiver = x6 ;  <CR> this . content = T2 ;  <CR> this . sender = o2 ;  <CR> this . date = A7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] E0 ) {  <CR> int O8 ;  <CR> for ( O8 = list . length - 1 ; O8 >= 0 ; O8 -- ) {  <CR> int a7 = O8 ;  <CR> Letter A = new Letter ( O8 ) ;  <CR> Letter d3 = new Letter ( a7 - 1 ) ;  <CR> if ( A . compareTo ( d3 ) == 1 )  <CR> A . display ( O8 ) ;  <CR> }  <CR> }  <CR> public void display ( int O8 ) {  <CR> list [ O8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object K2 ) {  <CR> Letter P4 = ( Letter ) K2 ;  <CR> if ( this . x > P4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int G0 ) {  <CR> this . x = G0 ;  <CR> }  <CR> }  <CR>  <EOC> 