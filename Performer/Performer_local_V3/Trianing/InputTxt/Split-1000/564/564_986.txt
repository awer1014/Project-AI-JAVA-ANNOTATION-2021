 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b8 , String W6 , String e8 , String C8 , String t0 ) {  <CR> super ( b8 , W6 , e8 , C8 , t0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String H1 , String u4 , String F0 , String r0 , String U9 ) {  <CR> super ( H1 , u4 , F0 , r0 , U9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] j5 ) {  <CR> Evaluation N5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X3 = new Envelop ( "Taipei" , "Kaohsiung" , N5 ) ;  <CR> X3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String D1 , String C4 , Evaluation P5 ) {  <CR> this . senderAddr = D1 ;  <CR> this . receiverAddr = C4 ;  <CR> this . letter = P5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String I9 , String Q , String F0 , String e3 , String o ) {  <CR> this . title = I9 ;  <CR> this . receiver = Q ;  <CR> this . content = F0 ;  <CR> this . sender = e3 ;  <CR> this . date = o ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int b2 ) {  <CR> list [ b2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int j3 ) {  <CR> this . x = j3 ;  <CR> }  <CR> public static void main ( String [ ] N0 ) {  <CR> int b2 ;  <CR> for ( b2 = list . length - 1 ; b2 >= 0 ; b2 -- ) {  <CR> int D7 = b2 ;  <CR> Letter r9 = new Letter ( b2 ) ;  <CR> Letter R9 = new Letter ( D7 - 1 ) ;  <CR> if ( r9 . compareTo ( R9 ) == 1 )  <CR> r9 . display ( b2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object b9 ) {  <CR> Letter h6 = ( Letter ) b9 ;  <CR> if ( this . x > h6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 