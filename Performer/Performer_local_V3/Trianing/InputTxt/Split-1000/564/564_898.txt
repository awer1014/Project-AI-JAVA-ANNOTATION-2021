 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Y0 , String Y , String d4 , String m5 , String J1 ) {  <CR> super ( Y0 , Y , d4 , m5 , J1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z0 , String M4 , String x9 , String D0 , String S6 ) {  <CR> super ( Z0 , M4 , x9 , D0 , S6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] S9 ) {  <CR> Evaluation J1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M7 = new Envelop ( "Taipei" , "Kaohsiung" , J1 ) ;  <CR> M7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String n4 , String R0 , Evaluation k ) {  <CR> this . senderAddr = n4 ;  <CR> this . receiverAddr = R0 ;  <CR> this . letter = k ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String X5 , String s6 , String C8 , String Y0 , String p6 ) {  <CR> this . title = X5 ;  <CR> this . receiver = s6 ;  <CR> this . content = C8 ;  <CR> this . sender = Y0 ;  <CR> this . date = p6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int M4 ) {  <CR> list [ M4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object r8 ) {  <CR> Letter b3 = ( Letter ) r8 ;  <CR> if ( this . x > b3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int v9 ) {  <CR> this . x = v9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p4 ) {  <CR> int M4 ;  <CR> for ( M4 = list . length - 1 ; M4 >= 0 ; M4 -- ) {  <CR> int P2 = M4 ;  <CR> Letter B4 = new Letter ( M4 ) ;  <CR> Letter A0 = new Letter ( P2 - 1 ) ;  <CR> if ( B4 . compareTo ( A0 ) == 1 )  <CR> B4 . display ( M4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 