 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N0 , String z3 , String u3 , String G0 , String l0 ) {  <CR> super ( N0 , z3 , u3 , G0 , l0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S8 , String n7 , String q5 , String E4 , String p6 ) {  <CR> super ( S8 , n7 , q5 , E4 , p6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] U8 ) {  <CR> Evaluation l0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h5 = new Envelop ( "Taipei" , "Kaohsiung" , l0 ) ;  <CR> h5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String b7 , String W8 , Evaluation s6 ) {  <CR> this . senderAddr = b7 ;  <CR> this . receiverAddr = W8 ;  <CR> this . letter = s6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String h , String t2 , String q0 , String f9 , String A1 ) {  <CR> this . title = h ;  <CR> this . receiver = t2 ;  <CR> this . content = q0 ;  <CR> this . sender = f9 ;  <CR> this . date = A1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object J7 ) {  <CR> Letter x2 = ( Letter ) J7 ;  <CR> if ( this . x > x2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] J3 ) {  <CR> int Q9 ;  <CR> for ( Q9 = list . length - 1 ; Q9 >= 0 ; Q9 -- ) {  <CR> int W1 = Q9 ;  <CR> Letter F0 = new Letter ( Q9 ) ;  <CR> Letter L5 = new Letter ( W1 - 1 ) ;  <CR> if ( F0 . compareTo ( L5 ) == 1 )  <CR> F0 . display ( Q9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int Q9 ) {  <CR> list [ Q9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int b8 ) {  <CR> this . x = b8 ;  <CR> }  <CR> }  <CR>  <EOC> 