 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Q5 , String Y8 , String l9 , String F1 , String r3 ) {  <CR> super ( Q5 , Y8 , l9 , F1 , r3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String N6 , String Z9 , String U7 , String X7 , String S3 ) {  <CR> super ( N6 , Z9 , U7 , X7 , S3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] O7 ) {  <CR> Evaluation a0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B8 = new Envelop ( "Taipei" , "Kaohsiung" , a0 ) ;  <CR> B8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String G7 , String l3 , Evaluation Z9 ) {  <CR> this . senderAddr = G7 ;  <CR> this . receiverAddr = l3 ;  <CR> this . letter = Z9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String g9 , String q6 , String Y2 , String p8 , String J7 ) {  <CR> this . title = g9 ;  <CR> this . receiver = q6 ;  <CR> this . content = Y2 ;  <CR> this . sender = p8 ;  <CR> this . date = J7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object c7 ) {  <CR> Letter f7 = ( Letter ) c7 ;  <CR> if ( this . x > f7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int c9 ) {  <CR> this . x = c9 ;  <CR> }  <CR> public void display ( int x0 ) {  <CR> list [ x0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] a2 ) {  <CR> int x0 ;  <CR> for ( x0 = list . length - 1 ; x0 >= 0 ; x0 -- ) {  <CR> int B3 = x0 ;  <CR> Letter a7 = new Letter ( x0 ) ;  <CR> Letter n6 = new Letter ( B3 - 1 ) ;  <CR> if ( a7 . compareTo ( n6 ) == 1 )  <CR> a7 . display ( x0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 