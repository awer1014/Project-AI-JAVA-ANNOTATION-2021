 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z , String Q , String r4 , String X , String Q9 ) {  <CR> super ( Z , Q , r4 , X , Q9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I6 , String W3 , String I0 , String o8 , String f3 ) {  <CR> super ( I6 , W3 , I0 , o8 , f3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p2 ) {  <CR> Evaluation I6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o2 = new Envelop ( "Taipei" , "Kaohsiung" , I6 ) ;  <CR> o2 . display ( ) ;  <CR> }  <CR> public Envelop ( String t0 , String z9 , Evaluation B0 ) {  <CR> this . senderAddr = t0 ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = B0 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String z , String T5 , String F1 , String k , String O2 ) {  <CR> this . title = z ;  <CR> this . receiver = T5 ;  <CR> this . content = F1 ;  <CR> this . sender = k ;  <CR> this . date = O2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object X0 ) {  <CR> Letter o7 = ( Letter ) X0 ;  <CR> if ( this . x > o7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] d6 ) {  <CR> int P1 ;  <CR> for ( P1 = list . length - 1 ; P1 >= 0 ; P1 -- ) {  <CR> int d8 = P1 ;  <CR> Letter J0 = new Letter ( P1 ) ;  <CR> Letter C6 = new Letter ( d8 - 1 ) ;  <CR> if ( J0 . compareTo ( C6 ) == 1 )  <CR> J0 . display ( P1 ) ;  <CR> }  <CR> }  <CR> public void display ( int P1 ) {  <CR> list [ P1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int e1 ) {  <CR> this . x = e1 ;  <CR> }  <CR> }  <CR>  <EOC> 