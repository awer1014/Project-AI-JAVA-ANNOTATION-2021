 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T2 , String K2 , String w0 , String X2 , String Y1 ) {  <CR> super ( T2 , K2 , w0 , X2 , Y1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T6 , String L1 , String F6 , String H , String c ) {  <CR> super ( T6 , L1 , F6 , H , c ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] J4 ) {  <CR> Evaluation e2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i2 = new Envelop ( "Taipei" , "Kaohsiung" , e2 ) ;  <CR> i2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String F7 , String v0 , Evaluation o8 ) {  <CR> this . senderAddr = F7 ;  <CR> this . receiverAddr = v0 ;  <CR> this . letter = o8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String z0 , String N3 , String U0 , String I1 , String S8 ) {  <CR> this . title = z0 ;  <CR> this . receiver = N3 ;  <CR> this . content = U0 ;  <CR> this . sender = I1 ;  <CR> this . date = S8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object t3 ) {  <CR> Letter X4 = ( Letter ) t3 ;  <CR> if ( this . x > X4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] m ) {  <CR> int B2 ;  <CR> for ( B2 = list . length - 1 ; B2 >= 0 ; B2 -- ) {  <CR> int S0 = B2 ;  <CR> Letter f7 = new Letter ( B2 ) ;  <CR> Letter s7 = new Letter ( S0 - 1 ) ;  <CR> if ( f7 . compareTo ( s7 ) == 1 )  <CR> f7 . display ( B2 ) ;  <CR> }  <CR> }  <CR> public void display ( int B2 ) {  <CR> list [ B2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int w9 ) {  <CR> this . x = w9 ;  <CR> }  <CR> }  <CR>  <EOC> 