 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String B , String n1 , String G6 , String V9 , String Z5 ) {  <CR> super ( B , n1 , G6 , V9 , Z5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f9 , String p0 , String Q , String v0 , String l2 ) {  <CR> super ( f9 , p0 , Q , v0 , l2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y0 ) {  <CR> Evaluation H8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K5 = new Envelop ( "Taipei" , "Kaohsiung" , H8 ) ;  <CR> K5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String K7 , String W9 , Evaluation G4 ) {  <CR> this . senderAddr = K7 ;  <CR> this . receiverAddr = W9 ;  <CR> this . letter = G4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String u5 , String O5 , String H4 , String R1 , String h2 ) {  <CR> this . title = u5 ;  <CR> this . receiver = O5 ;  <CR> this . content = H4 ;  <CR> this . sender = R1 ;  <CR> this . date = h2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int t5 ) {  <CR> list [ t5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Y0 ) {  <CR> this . x = Y0 ;  <CR> }  <CR> public int compareTo ( Object T0 ) {  <CR> Letter s8 = ( Letter ) T0 ;  <CR> if ( this . x > s8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z7 ) {  <CR> int t5 ;  <CR> for ( t5 = list . length - 1 ; t5 >= 0 ; t5 -- ) {  <CR> int X9 = t5 ;  <CR> Letter R0 = new Letter ( t5 ) ;  <CR> Letter o2 = new Letter ( X9 - 1 ) ;  <CR> if ( R0 . compareTo ( o2 ) == 1 )  <CR> R0 . display ( t5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 