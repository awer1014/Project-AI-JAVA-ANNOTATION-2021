 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z1 , String S6 , String f1 , String u1 , String b0 ) {  <CR> super ( z1 , S6 , f1 , u1 , b0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J0 , String W8 , String L1 , String K0 , String U0 ) {  <CR> super ( J0 , W8 , L1 , K0 , U0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] U7 ) {  <CR> Evaluation T = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l1 = new Envelop ( "Taipei" , "Kaohsiung" , T ) ;  <CR> l1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String o0 , String q8 , Evaluation C8 ) {  <CR> this . senderAddr = o0 ;  <CR> this . receiverAddr = q8 ;  <CR> this . letter = C8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String M1 , String j6 , String H5 , String G9 , String K1 ) {  <CR> this . title = M1 ;  <CR> this . receiver = j6 ;  <CR> this . content = H5 ;  <CR> this . sender = G9 ;  <CR> this . date = K1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] M5 ) {  <CR> int C ;  <CR> for ( C = list . length - 1 ; C >= 0 ; C -- ) {  <CR> int M7 = C ;  <CR> Letter W8 = new Letter ( C ) ;  <CR> Letter o9 = new Letter ( M7 - 1 ) ;  <CR> if ( W8 . compareTo ( o9 ) == 1 )  <CR> W8 . display ( C ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object b6 ) {  <CR> Letter m3 = ( Letter ) b6 ;  <CR> if ( this . x > m3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int t2 ) {  <CR> this . x = t2 ;  <CR> }  <CR> public void display ( int C ) {  <CR> list [ C ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 