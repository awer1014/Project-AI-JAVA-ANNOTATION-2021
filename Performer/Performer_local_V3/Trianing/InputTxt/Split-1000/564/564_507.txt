 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L1 , String B6 , String N8 , String k4 , String s5 ) {  <CR> super ( L1 , B6 , N8 , k4 , s5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String c9 , String h9 , String o6 , String N , String U3 ) {  <CR> super ( c9 , h9 , o6 , N , U3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String O5 , String X3 , Evaluation X ) {  <CR> this . senderAddr = O5 ;  <CR> this . receiverAddr = X3 ;  <CR> this . letter = X ;  <CR> }  <CR> public static void main ( String [ ] P5 ) {  <CR> Evaluation f2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e5 = new Envelop ( "Taipei" , "Kaohsiung" , f2 ) ;  <CR> e5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String X , String T5 , String A0 , String y6 , String h5 ) {  <CR> this . title = X ;  <CR> this . receiver = T5 ;  <CR> this . content = A0 ;  <CR> this . sender = y6 ;  <CR> this . date = h5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int m2 ) {  <CR> this . x = m2 ;  <CR> }  <CR> public int compareTo ( Object G1 ) {  <CR> Letter o1 = ( Letter ) G1 ;  <CR> if ( this . x > o1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] G6 ) {  <CR> int y8 ;  <CR> for ( y8 = list . length - 1 ; y8 >= 0 ; y8 -- ) {  <CR> int H4 = y8 ;  <CR> Letter z7 = new Letter ( y8 ) ;  <CR> Letter d1 = new Letter ( H4 - 1 ) ;  <CR> if ( z7 . compareTo ( d1 ) == 1 )  <CR> z7 . display ( y8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int y8 ) {  <CR> list [ y8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 