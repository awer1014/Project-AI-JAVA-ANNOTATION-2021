 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v9 , String l1 , String X , String X8 , String b2 ) {  <CR> super ( v9 , l1 , X , X8 , b2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E7 , String K5 , String l9 , String u8 , String f ) {  <CR> super ( E7 , K5 , l9 , u8 , f ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String a9 , String K3 , Evaluation T2 ) {  <CR> this . senderAddr = a9 ;  <CR> this . receiverAddr = K3 ;  <CR> this . letter = T2 ;  <CR> }  <CR> public static void main ( String [ ] n3 ) {  <CR> Evaluation B8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W = new Envelop ( "Taipei" , "Kaohsiung" , B8 ) ;  <CR> W . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String B4 , String s8 , String A8 , String j7 , String Q5 ) {  <CR> this . title = B4 ;  <CR> this . receiver = s8 ;  <CR> this . content = A8 ;  <CR> this . sender = j7 ;  <CR> this . date = Q5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i1 ) {  <CR> int c6 ;  <CR> for ( c6 = list . length - 1 ; c6 >= 0 ; c6 -- ) {  <CR> int J8 = c6 ;  <CR> Letter Q = new Letter ( c6 ) ;  <CR> Letter D5 = new Letter ( J8 - 1 ) ;  <CR> if ( Q . compareTo ( D5 ) == 1 )  <CR> Q . display ( c6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object c0 ) {  <CR> Letter S0 = ( Letter ) c0 ;  <CR> if ( this . x > S0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int W7 ) {  <CR> this . x = W7 ;  <CR> }  <CR> public void display ( int c6 ) {  <CR> list [ c6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 