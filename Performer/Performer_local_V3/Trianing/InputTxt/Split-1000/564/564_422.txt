 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String h2 , String I1 , String Z5 , String c , String y6 ) {  <CR> super ( h2 , I1 , Z5 , c , y6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W8 , String r , String o0 , String J9 , String a ) {  <CR> super ( W8 , r , o0 , J9 , a ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String s6 , String o7 , Evaluation V4 ) {  <CR> this . senderAddr = s6 ;  <CR> this . receiverAddr = o7 ;  <CR> this . letter = V4 ;  <CR> }  <CR> public static void main ( String [ ] y9 ) {  <CR> Evaluation r3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z9 = new Envelop ( "Taipei" , "Kaohsiung" , r3 ) ;  <CR> Z9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String B0 , String k5 , String S2 , String O8 , String L7 ) {  <CR> this . title = B0 ;  <CR> this . receiver = k5 ;  <CR> this . content = S2 ;  <CR> this . sender = O8 ;  <CR> this . date = L7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int j7 ) {  <CR> list [ j7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object b5 ) {  <CR> Letter A2 = ( Letter ) b5 ;  <CR> if ( this . x > A2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Y8 ) {  <CR> int j7 ;  <CR> for ( j7 = list . length - 1 ; j7 >= 0 ; j7 -- ) {  <CR> int R9 = j7 ;  <CR> Letter I4 = new Letter ( j7 ) ;  <CR> Letter x2 = new Letter ( R9 - 1 ) ;  <CR> if ( I4 . compareTo ( x2 ) == 1 )  <CR> I4 . display ( j7 ) ;  <CR> }  <CR> }  <CR> Letter ( int u6 ) {  <CR> this . x = u6 ;  <CR> }  <CR> }  <CR>  <EOC> 