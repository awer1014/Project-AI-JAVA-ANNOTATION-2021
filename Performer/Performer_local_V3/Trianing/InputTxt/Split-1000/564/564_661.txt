 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d2 , String k , String S1 , String R6 , String w3 ) {  <CR> super ( d2 , k , S1 , R6 , w3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String p , String y7 , String Q2 , String I7 , String N0 ) {  <CR> super ( p , y7 , Q2 , I7 , N0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] c ) {  <CR> Evaluation U4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s6 = new Envelop ( "Taipei" , "Kaohsiung" , U4 ) ;  <CR> s6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String i5 , String d , Evaluation R1 ) {  <CR> this . senderAddr = i5 ;  <CR> this . receiverAddr = d ;  <CR> this . letter = R1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String O4 , String w3 , String r1 , String x6 , String d4 ) {  <CR> this . title = O4 ;  <CR> this . receiver = w3 ;  <CR> this . content = r1 ;  <CR> this . sender = x6 ;  <CR> this . date = d4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int W2 ) {  <CR> list [ W2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int u8 ) {  <CR> this . x = u8 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] P1 ) {  <CR> int W2 ;  <CR> for ( W2 = list . length - 1 ; W2 >= 0 ; W2 -- ) {  <CR> int H3 = W2 ;  <CR> Letter t7 = new Letter ( W2 ) ;  <CR> Letter J8 = new Letter ( H3 - 1 ) ;  <CR> if ( t7 . compareTo ( J8 ) == 1 )  <CR> t7 . display ( W2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object j0 ) {  <CR> Letter x9 = ( Letter ) j0 ;  <CR> if ( this . x > x9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 