 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t0 , String R8 , String k4 , String Y , String T7 ) {  <CR> super ( t0 , R8 , k4 , Y , T7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String K2 , String p0 , String E4 , String a2 , String i5 ) {  <CR> super ( K2 , p0 , E4 , a2 , i5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String y2 , String k5 , Evaluation U6 ) {  <CR> this . senderAddr = y2 ;  <CR> this . receiverAddr = k5 ;  <CR> this . letter = U6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] x9 ) {  <CR> Evaluation s3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J4 = new Envelop ( "Taipei" , "Kaohsiung" , s3 ) ;  <CR> J4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String v2 , String I6 , String x9 , String n3 , String P2 ) {  <CR> this . title = v2 ;  <CR> this . receiver = I6 ;  <CR> this . content = x9 ;  <CR> this . sender = n3 ;  <CR> this . date = P2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object S6 ) {  <CR> Letter g3 = ( Letter ) S6 ;  <CR> if ( this . x > g3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int V9 ) {  <CR> this . x = V9 ;  <CR> }  <CR> public void display ( int S0 ) {  <CR> list [ S0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O4 ) {  <CR> int S0 ;  <CR> for ( S0 = list . length - 1 ; S0 >= 0 ; S0 -- ) {  <CR> int O7 = S0 ;  <CR> Letter T3 = new Letter ( S0 ) ;  <CR> Letter U4 = new Letter ( O7 - 1 ) ;  <CR> if ( T3 . compareTo ( U4 ) == 1 )  <CR> T3 . display ( S0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 