 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String S8 , String W7 , String e0 , String D5 , String J5 ) {  <CR> super ( S8 , W7 , e0 , D5 , J5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R3 , String z1 , String b2 , String F8 , String g ) {  <CR> super ( R3 , z1 , b2 , F8 , g ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String Q8 , String q8 , Evaluation X ) {  <CR> this . senderAddr = Q8 ;  <CR> this . receiverAddr = q8 ;  <CR> this . letter = X ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] r8 ) {  <CR> Evaluation f4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m7 = new Envelop ( "Taipei" , "Kaohsiung" , f4 ) ;  <CR> m7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String i7 , String A3 , String O9 , String F7 , String E2 ) {  <CR> this . title = i7 ;  <CR> this . receiver = A3 ;  <CR> this . content = O9 ;  <CR> this . sender = F7 ;  <CR> this . date = E2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] T6 ) {  <CR> int W3 ;  <CR> for ( W3 = list . length - 1 ; W3 >= 0 ; W3 -- ) {  <CR> int D7 = W3 ;  <CR> Letter p6 = new Letter ( W3 ) ;  <CR> Letter K8 = new Letter ( D7 - 1 ) ;  <CR> if ( p6 . compareTo ( K8 ) == 1 )  <CR> p6 . display ( W3 ) ;  <CR> }  <CR> }  <CR> public void display ( int W3 ) {  <CR> list [ W3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int U2 ) {  <CR> this . x = U2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object B7 ) {  <CR> Letter a3 = ( Letter ) B7 ;  <CR> if ( this . x > a3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 