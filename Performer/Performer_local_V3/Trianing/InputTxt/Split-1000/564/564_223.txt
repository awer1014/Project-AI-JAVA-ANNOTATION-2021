 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u4 , String e2 , String C7 , String P5 , String U ) {  <CR> super ( u4 , e2 , C7 , P5 , U ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C1 , String t1 , String l0 , String B3 , String s2 ) {  <CR> super ( C1 , t1 , l0 , B3 , s2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String y6 , String Z7 , Evaluation A7 ) {  <CR> this . senderAddr = y6 ;  <CR> this . receiverAddr = Z7 ;  <CR> this . letter = A7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] h7 ) {  <CR> Evaluation u6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l6 = new Envelop ( "Taipei" , "Kaohsiung" , u6 ) ;  <CR> l6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String M3 , String Z9 , String z9 , String l5 , String a ) {  <CR> this . title = M3 ;  <CR> this . receiver = Z9 ;  <CR> this . content = z9 ;  <CR> this . sender = l5 ;  <CR> this . date = a ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object Y0 ) {  <CR> Letter g4 = ( Letter ) Y0 ;  <CR> if ( this . x > g4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] l ) {  <CR> int b5 ;  <CR> for ( b5 = list . length - 1 ; b5 >= 0 ; b5 -- ) {  <CR> int W3 = b5 ;  <CR> Letter c4 = new Letter ( b5 ) ;  <CR> Letter s1 = new Letter ( W3 - 1 ) ;  <CR> if ( c4 . compareTo ( s1 ) == 1 )  <CR> c4 . display ( b5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int i8 ) {  <CR> this . x = i8 ;  <CR> }  <CR> public void display ( int b5 ) {  <CR> list [ b5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 