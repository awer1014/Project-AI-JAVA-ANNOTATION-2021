 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String s1 , String c , String q6 , String d5 , String q1 ) {  <CR> super ( s1 , c , q6 , d5 , q1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h2 , String P9 , String Q4 , String z4 , String D9 ) {  <CR> super ( h2 , P9 , Q4 , z4 , D9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Q8 ) {  <CR> Evaluation g5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s1 = new Envelop ( "Taipei" , "Kaohsiung" , g5 ) ;  <CR> s1 . display ( ) ;  <CR> }  <CR> public Envelop ( String v3 , String X7 , Evaluation s4 ) {  <CR> this . senderAddr = v3 ;  <CR> this . receiverAddr = X7 ;  <CR> this . letter = s4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String E , String E5 , String T9 , String z8 , String Q2 ) {  <CR> this . title = E ;  <CR> this . receiver = E5 ;  <CR> this . content = T9 ;  <CR> this . sender = z8 ;  <CR> this . date = Q2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] V8 ) {  <CR> int N8 ;  <CR> for ( N8 = list . length - 1 ; N8 >= 0 ; N8 -- ) {  <CR> int z3 = N8 ;  <CR> Letter d5 = new Letter ( N8 ) ;  <CR> Letter I4 = new Letter ( z3 - 1 ) ;  <CR> if ( d5 . compareTo ( I4 ) == 1 )  <CR> d5 . display ( N8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int X5 ) {  <CR> this . x = X5 ;  <CR> }  <CR> public void display ( int N8 ) {  <CR> list [ N8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object s2 ) {  <CR> Letter b4 = ( Letter ) s2 ;  <CR> if ( this . x > b4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 