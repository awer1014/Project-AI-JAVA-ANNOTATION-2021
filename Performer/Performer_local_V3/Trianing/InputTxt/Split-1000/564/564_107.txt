 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c4 , String w6 , String Z8 , String F6 , String l ) {  <CR> super ( c4 , w6 , Z8 , F6 , l ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String x8 , String q0 , String S1 , String N7 , String F4 ) {  <CR> super ( x8 , q0 , S1 , N7 , F4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] F5 ) {  <CR> Evaluation P2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s2 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> s2 . display ( ) ;  <CR> }  <CR> public Envelop ( String e1 , String s , Evaluation g6 ) {  <CR> this . senderAddr = e1 ;  <CR> this . receiverAddr = s ;  <CR> this . letter = g6 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String E1 , String k3 , String R3 , String v3 , String c8 ) {  <CR> this . title = E1 ;  <CR> this . receiver = k3 ;  <CR> this . content = R3 ;  <CR> this . sender = v3 ;  <CR> this . date = c8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int A1 ) {  <CR> list [ A1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int T1 ) {  <CR> this . x = T1 ;  <CR> }  <CR> public int compareTo ( Object f7 ) {  <CR> Letter b9 = ( Letter ) f7 ;  <CR> if ( this . x > b9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] X2 ) {  <CR> int A1 ;  <CR> for ( A1 = list . length - 1 ; A1 >= 0 ; A1 -- ) {  <CR> int u9 = A1 ;  <CR> Letter M7 = new Letter ( A1 ) ;  <CR> Letter F0 = new Letter ( u9 - 1 ) ;  <CR> if ( M7 . compareTo ( F0 ) == 1 )  <CR> M7 . display ( A1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 