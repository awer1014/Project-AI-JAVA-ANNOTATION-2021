 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t , String f2 , String t0 , String s , String b0 ) {  <CR> super ( t , f2 , t0 , s , b0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C0 , String n7 , String A5 , String f4 , String M7 ) {  <CR> super ( C0 , n7 , A5 , f4 , M7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String R2 , String z6 , Evaluation Z7 ) {  <CR> this . senderAddr = R2 ;  <CR> this . receiverAddr = z6 ;  <CR> this . letter = Z7 ;  <CR> }  <CR> public static void main ( String [ ] h6 ) {  <CR> Evaluation n6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x4 = new Envelop ( "Taipei" , "Kaohsiung" , n6 ) ;  <CR> x4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String A4 , String K0 , String m2 , String d7 , String C2 ) {  <CR> this . title = A4 ;  <CR> this . receiver = K0 ;  <CR> this . content = m2 ;  <CR> this . sender = d7 ;  <CR> this . date = C2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int n3 ) {  <CR> this . x = n3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int R7 ) {  <CR> list [ R7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object C2 ) {  <CR> Letter q0 = ( Letter ) C2 ;  <CR> if ( this . x > q0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Q1 ) {  <CR> int R7 ;  <CR> for ( R7 = list . length - 1 ; R7 >= 0 ; R7 -- ) {  <CR> int i4 = R7 ;  <CR> Letter K8 = new Letter ( R7 ) ;  <CR> Letter O8 = new Letter ( i4 - 1 ) ;  <CR> if ( K8 . compareTo ( O8 ) == 1 )  <CR> K8 . display ( R7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 