 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j6 , String s , String c , String O1 , String I3 ) {  <CR> super ( j6 , s , c , O1 , I3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F , String K5 , String m6 , String p5 , String v5 ) {  <CR> super ( F , K5 , m6 , p5 , v5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] j4 ) {  <CR> Evaluation B5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P0 = new Envelop ( "Taipei" , "Kaohsiung" , B5 ) ;  <CR> P0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String s0 , String L5 , Evaluation u1 ) {  <CR> this . senderAddr = s0 ;  <CR> this . receiverAddr = L5 ;  <CR> this . letter = u1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String y8 , String v4 , String B6 , String U5 , String C9 ) {  <CR> this . title = y8 ;  <CR> this . receiver = v4 ;  <CR> this . content = B6 ;  <CR> this . sender = U5 ;  <CR> this . date = C9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] f3 ) {  <CR> int Z ;  <CR> for ( Z = list . length - 1 ; Z >= 0 ; Z -- ) {  <CR> int G8 = Z ;  <CR> Letter u7 = new Letter ( Z ) ;  <CR> Letter D = new Letter ( G8 - 1 ) ;  <CR> if ( u7 . compareTo ( D ) == 1 )  <CR> u7 . display ( Z ) ;  <CR> }  <CR> }  <CR> Letter ( int v6 ) {  <CR> this . x = v6 ;  <CR> }  <CR> public int compareTo ( Object t6 ) {  <CR> Letter Y4 = ( Letter ) t6 ;  <CR> if ( this . x > Y4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int Z ) {  <CR> list [ Z ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 