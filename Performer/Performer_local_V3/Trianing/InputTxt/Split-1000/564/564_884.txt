 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N1 , String o8 , String T6 , String y9 , String K1 ) {  <CR> super ( N1 , o8 , T6 , y9 , K1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O1 , String M4 , String L4 , String B3 , String S5 ) {  <CR> super ( O1 , M4 , L4 , B3 , S5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String g0 , String N , Evaluation x8 ) {  <CR> this . senderAddr = g0 ;  <CR> this . receiverAddr = N ;  <CR> this . letter = x8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m7 ) {  <CR> Evaluation t7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o6 = new Envelop ( "Taipei" , "Kaohsiung" , t7 ) ;  <CR> o6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String t8 , String A , String N6 , String l7 , String y8 ) {  <CR> this . title = t8 ;  <CR> this . receiver = A ;  <CR> this . content = N6 ;  <CR> this . sender = l7 ;  <CR> this . date = y8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int G0 ) {  <CR> list [ G0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object Q7 ) {  <CR> Letter j5 = ( Letter ) Q7 ;  <CR> if ( this . x > j5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] o0 ) {  <CR> int G0 ;  <CR> for ( G0 = list . length - 1 ; G0 >= 0 ; G0 -- ) {  <CR> int h4 = G0 ;  <CR> Letter i5 = new Letter ( G0 ) ;  <CR> Letter G7 = new Letter ( h4 - 1 ) ;  <CR> if ( i5 . compareTo ( G7 ) == 1 )  <CR> i5 . display ( G0 ) ;  <CR> }  <CR> }  <CR> Letter ( int l6 ) {  <CR> this . x = l6 ;  <CR> }  <CR> }  <CR>  <EOC> 