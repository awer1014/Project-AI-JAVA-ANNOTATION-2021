 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B3 , String h1 , String X9 , String V5 , String V4 ) {  <CR> super ( B3 , h1 , X9 , V5 , V4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i6 , String r2 , String E2 , String o4 , String l4 ) {  <CR> super ( i6 , r2 , E2 , o4 , l4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String T9 , String x5 , Evaluation z1 ) {  <CR> this . senderAddr = T9 ;  <CR> this . receiverAddr = x5 ;  <CR> this . letter = z1 ;  <CR> }  <CR> public static void main ( String [ ] n ) {  <CR> Evaluation j9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I7 = new Envelop ( "Taipei" , "Kaohsiung" , j9 ) ;  <CR> I7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String I0 , String y3 , String f , String d4 , String R1 ) {  <CR> this . title = I0 ;  <CR> this . receiver = y3 ;  <CR> this . content = f ;  <CR> this . sender = d4 ;  <CR> this . date = R1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] k8 ) {  <CR> int y5 ;  <CR> for ( y5 = list . length - 1 ; y5 >= 0 ; y5 -- ) {  <CR> int K9 = y5 ;  <CR> Letter W8 = new Letter ( y5 ) ;  <CR> Letter A2 = new Letter ( K9 - 1 ) ;  <CR> if ( W8 . compareTo ( A2 ) == 1 )  <CR> W8 . display ( y5 ) ;  <CR> }  <CR> }  <CR> public void display ( int y5 ) {  <CR> list [ y5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object J7 ) {  <CR> Letter C1 = ( Letter ) J7 ;  <CR> if ( this . x > C1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int B4 ) {  <CR> this . x = B4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 