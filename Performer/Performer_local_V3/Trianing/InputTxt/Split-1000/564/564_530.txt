 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String q6 , String e2 , String Z1 , String g5 , String O8 ) {  <CR> super ( q6 , e2 , Z1 , g5 , O8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C7 , String y5 , String X1 , String y7 , String F3 ) {  <CR> super ( C7 , y5 , X1 , y7 , F3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String O4 , String M7 , Evaluation J6 ) {  <CR> this . senderAddr = O4 ;  <CR> this . receiverAddr = M7 ;  <CR> this . letter = J6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] b7 ) {  <CR> Evaluation a8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r8 = new Envelop ( "Taipei" , "Kaohsiung" , a8 ) ;  <CR> r8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String z1 , String p4 , String y , String a4 , String B5 ) {  <CR> this . title = z1 ;  <CR> this . receiver = p4 ;  <CR> this . content = y ;  <CR> this . sender = a4 ;  <CR> this . date = B5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int W8 ) {  <CR> list [ W8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object D8 ) {  <CR> Letter S7 = ( Letter ) D8 ;  <CR> if ( this . x > S7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] v0 ) {  <CR> int W8 ;  <CR> for ( W8 = list . length - 1 ; W8 >= 0 ; W8 -- ) {  <CR> int I1 = W8 ;  <CR> Letter C5 = new Letter ( W8 ) ;  <CR> Letter E9 = new Letter ( I1 - 1 ) ;  <CR> if ( C5 . compareTo ( E9 ) == 1 )  <CR> C5 . display ( W8 ) ;  <CR> }  <CR> }  <CR> Letter ( int E2 ) {  <CR> this . x = E2 ;  <CR> }  <CR> }  <CR>  <EOC> 