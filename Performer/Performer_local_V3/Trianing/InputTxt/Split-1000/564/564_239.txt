 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i3 , String N2 , String d3 , String z8 , String A ) {  <CR> super ( i3 , N2 , d3 , z8 , A ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o0 , String c6 , String D8 , String u4 , String h9 ) {  <CR> super ( o0 , c6 , D8 , u4 , h9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] d9 ) {  <CR> Evaluation N8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q1 = new Envelop ( "Taipei" , "Kaohsiung" , N8 ) ;  <CR> q1 . display ( ) ;  <CR> }  <CR> public Envelop ( String V0 , String G9 , Evaluation J3 ) {  <CR> this . senderAddr = V0 ;  <CR> this . receiverAddr = G9 ;  <CR> this . letter = J3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String Z5 , String v7 , String x2 , String J0 , String Y3 ) {  <CR> this . title = Z5 ;  <CR> this . receiver = v7 ;  <CR> this . content = x2 ;  <CR> this . sender = J0 ;  <CR> this . date = Y3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] a7 ) {  <CR> int n8 ;  <CR> for ( n8 = list . length - 1 ; n8 >= 0 ; n8 -- ) {  <CR> int s5 = n8 ;  <CR> Letter v8 = new Letter ( n8 ) ;  <CR> Letter X = new Letter ( s5 - 1 ) ;  <CR> if ( v8 . compareTo ( X ) == 1 )  <CR> v8 . display ( n8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object A4 ) {  <CR> Letter P1 = ( Letter ) A4 ;  <CR> if ( this . x > P1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int c6 ) {  <CR> this . x = c6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int n8 ) {  <CR> list [ n8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 