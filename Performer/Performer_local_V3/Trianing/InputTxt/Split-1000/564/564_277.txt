 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L6 , String s , String Z7 , String R , String h2 ) {  <CR> super ( L6 , s , Z7 , R , h2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C4 , String c2 , String X1 , String x , String k7 ) {  <CR> super ( C4 , c2 , X1 , x , k7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String t1 , String r , Evaluation I7 ) {  <CR> this . senderAddr = t1 ;  <CR> this . receiverAddr = r ;  <CR> this . letter = I7 ;  <CR> }  <CR> public static void main ( String [ ] d9 ) {  <CR> Evaluation d6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a4 = new Envelop ( "Taipei" , "Kaohsiung" , d6 ) ;  <CR> a4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String f9 , String u1 , String P6 , String j , String X3 ) {  <CR> this . title = f9 ;  <CR> this . receiver = u1 ;  <CR> this . content = P6 ;  <CR> this . sender = j ;  <CR> this . date = X3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] N7 ) {  <CR> int p9 ;  <CR> for ( p9 = list . length - 1 ; p9 >= 0 ; p9 -- ) {  <CR> int k6 = p9 ;  <CR> Letter A6 = new Letter ( p9 ) ;  <CR> Letter Z = new Letter ( k6 - 1 ) ;  <CR> if ( A6 . compareTo ( Z ) == 1 )  <CR> A6 . display ( p9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int w6 ) {  <CR> this . x = w6 ;  <CR> }  <CR> public int compareTo ( Object y ) {  <CR> Letter R9 = ( Letter ) y ;  <CR> if ( this . x > R9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int p9 ) {  <CR> list [ p9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 