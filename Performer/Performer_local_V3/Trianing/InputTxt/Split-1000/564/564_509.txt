 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y9 , String l7 , String b0 , String m4 , String Y8 ) {  <CR> super ( Y9 , l7 , b0 , m4 , Y8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E7 , String C1 , String S6 , String d5 , String G3 ) {  <CR> super ( E7 , C1 , S6 , d5 , G3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x7 ) {  <CR> Evaluation h = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e4 = new Envelop ( "Taipei" , "Kaohsiung" , h ) ;  <CR> e4 . display ( ) ;  <CR> }  <CR> public Envelop ( String B0 , String d6 , Evaluation z7 ) {  <CR> this . senderAddr = B0 ;  <CR> this . receiverAddr = d6 ;  <CR> this . letter = z7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String v1 , String f6 , String z1 , String U , String t8 ) {  <CR> this . title = v1 ;  <CR> this . receiver = f6 ;  <CR> this . content = z1 ;  <CR> this . sender = U ;  <CR> this . date = t8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] D9 ) {  <CR> int H4 ;  <CR> for ( H4 = list . length - 1 ; H4 >= 0 ; H4 -- ) {  <CR> int x5 = H4 ;  <CR> Letter D8 = new Letter ( H4 ) ;  <CR> Letter F = new Letter ( x5 - 1 ) ;  <CR> if ( D8 . compareTo ( F ) == 1 )  <CR> D8 . display ( H4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H4 ) {  <CR> list [ H4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object S5 ) {  <CR> Letter o5 = ( Letter ) S5 ;  <CR> if ( this . x > o5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int n1 ) {  <CR> this . x = n1 ;  <CR> }  <CR> }  <CR>  <EOC> 