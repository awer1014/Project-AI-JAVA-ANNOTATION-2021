 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B1 , String X4 , String N8 , String R8 , String E4 ) {  <CR> super ( B1 , X4 , N8 , R8 , E4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String N7 , String O6 , String j1 , String V7 , String O0 ) {  <CR> super ( N7 , O6 , j1 , V7 , O0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] w2 ) {  <CR> Evaluation X4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N4 = new Envelop ( "Taipei" , "Kaohsiung" , X4 ) ;  <CR> N4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String p1 , String l8 , Evaluation z4 ) {  <CR> this . senderAddr = p1 ;  <CR> this . receiverAddr = l8 ;  <CR> this . letter = z4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String C3 , String p6 , String y1 , String s5 , String S1 ) {  <CR> this . title = C3 ;  <CR> this . receiver = p6 ;  <CR> this . content = y1 ;  <CR> this . sender = s5 ;  <CR> this . date = S1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object R4 ) {  <CR> Letter B1 = ( Letter ) R4 ;  <CR> if ( this . x > B1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] p3 ) {  <CR> int t9 ;  <CR> for ( t9 = list . length - 1 ; t9 >= 0 ; t9 -- ) {  <CR> int H6 = t9 ;  <CR> Letter S2 = new Letter ( t9 ) ;  <CR> Letter m9 = new Letter ( H6 - 1 ) ;  <CR> if ( S2 . compareTo ( m9 ) == 1 )  <CR> S2 . display ( t9 ) ;  <CR> }  <CR> }  <CR> Letter ( int T3 ) {  <CR> this . x = T3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int t9 ) {  <CR> list [ t9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 