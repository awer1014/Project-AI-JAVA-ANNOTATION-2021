 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t5 , String P9 , String v3 , String l6 , String h9 ) {  <CR> super ( t5 , P9 , v3 , l6 , h9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v6 , String K1 , String h9 , String U2 , String I4 ) {  <CR> super ( v6 , K1 , h9 , U2 , I4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String m6 , String W7 , Evaluation b8 ) {  <CR> this . senderAddr = m6 ;  <CR> this . receiverAddr = W7 ;  <CR> this . letter = b8 ;  <CR> }  <CR> public static void main ( String [ ] z6 ) {  <CR> Evaluation i9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z9 = new Envelop ( "Taipei" , "Kaohsiung" , i9 ) ;  <CR> z9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String m7 , String v1 , String W9 , String R5 , String a2 ) {  <CR> this . title = m7 ;  <CR> this . receiver = v1 ;  <CR> this . content = W9 ;  <CR> this . sender = R5 ;  <CR> this . date = a2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object c6 ) {  <CR> Letter M5 = ( Letter ) c6 ;  <CR> if ( this . x > M5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int J ) {  <CR> this . x = J ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] I9 ) {  <CR> int Y6 ;  <CR> for ( Y6 = list . length - 1 ; Y6 >= 0 ; Y6 -- ) {  <CR> int V4 = Y6 ;  <CR> Letter l0 = new Letter ( Y6 ) ;  <CR> Letter x5 = new Letter ( V4 - 1 ) ;  <CR> if ( l0 . compareTo ( x5 ) == 1 )  <CR> l0 . display ( Y6 ) ;  <CR> }  <CR> }  <CR> public void display ( int Y6 ) {  <CR> list [ Y6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 