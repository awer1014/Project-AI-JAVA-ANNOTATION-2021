 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String g7 , String M0 , String o9 , String j7 , String P4 ) {  <CR> super ( g7 , M0 , o9 , j7 , P4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T5 , String s5 , String z3 , String m6 , String j9 ) {  <CR> super ( T5 , s5 , z3 , m6 , j9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String q7 , String t4 , Evaluation a2 ) {  <CR> this . senderAddr = q7 ;  <CR> this . receiverAddr = t4 ;  <CR> this . letter = a2 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] V4 ) {  <CR> Evaluation n9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g1 = new Envelop ( "Taipei" , "Kaohsiung" , n9 ) ;  <CR> g1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String I , String G5 , String N , String I0 , String f0 ) {  <CR> this . title = I ;  <CR> this . receiver = G5 ;  <CR> this . content = N ;  <CR> this . sender = I0 ;  <CR> this . date = f0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int R2 ) {  <CR> list [ R2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int T0 ) {  <CR> this . x = T0 ;  <CR> }  <CR> public static void main ( String [ ] o0 ) {  <CR> int R2 ;  <CR> for ( R2 = list . length - 1 ; R2 >= 0 ; R2 -- ) {  <CR> int I = R2 ;  <CR> Letter K2 = new Letter ( R2 ) ;  <CR> Letter n4 = new Letter ( I - 1 ) ;  <CR> if ( K2 . compareTo ( n4 ) == 1 )  <CR> K2 . display ( R2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object r2 ) {  <CR> Letter d = ( Letter ) r2 ;  <CR> if ( this . x > d . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 