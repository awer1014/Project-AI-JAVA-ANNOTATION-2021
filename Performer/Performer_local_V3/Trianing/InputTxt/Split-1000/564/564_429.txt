 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W3 , String l7 , String M9 , String P7 , String q ) {  <CR> super ( W3 , l7 , M9 , P7 , q ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y7 , String A3 , String N , String r , String J ) {  <CR> super ( y7 , A3 , N , r , J ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] f1 ) {  <CR> Evaluation Y6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y9 = new Envelop ( "Taipei" , "Kaohsiung" , Y6 ) ;  <CR> Y9 . display ( ) ;  <CR> }  <CR> public Envelop ( String O6 , String R1 , Evaluation R4 ) {  <CR> this . senderAddr = O6 ;  <CR> this . receiverAddr = R1 ;  <CR> this . letter = R4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String p7 , String S2 , String k0 , String p , String r2 ) {  <CR> this . title = p7 ;  <CR> this . receiver = S2 ;  <CR> this . content = k0 ;  <CR> this . sender = p ;  <CR> this . date = r2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object M7 ) {  <CR> Letter M2 = ( Letter ) M7 ;  <CR> if ( this . x > M2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int u9 ) {  <CR> this . x = u9 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] D6 ) {  <CR> int V0 ;  <CR> for ( V0 = list . length - 1 ; V0 >= 0 ; V0 -- ) {  <CR> int G3 = V0 ;  <CR> Letter u = new Letter ( V0 ) ;  <CR> Letter b8 = new Letter ( G3 - 1 ) ;  <CR> if ( u . compareTo ( b8 ) == 1 )  <CR> u . display ( V0 ) ;  <CR> }  <CR> }  <CR> public void display ( int V0 ) {  <CR> list [ V0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 