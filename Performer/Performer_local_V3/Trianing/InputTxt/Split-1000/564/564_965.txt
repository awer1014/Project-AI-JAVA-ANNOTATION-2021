 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e4 , String n1 , String Z9 , String h8 , String T1 ) {  <CR> super ( e4 , n1 , Z9 , h8 , T1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C , String E9 , String b2 , String v8 , String c9 ) {  <CR> super ( C , E9 , b2 , v8 , c9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] s5 ) {  <CR> Evaluation U4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N8 = new Envelop ( "Taipei" , "Kaohsiung" , U4 ) ;  <CR> N8 . display ( ) ;  <CR> }  <CR> public Envelop ( String s0 , String Y0 , Evaluation Y4 ) {  <CR> this . senderAddr = s0 ;  <CR> this . receiverAddr = Y0 ;  <CR> this . letter = Y4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String H3 , String u0 , String g , String v7 , String K0 ) {  <CR> this . title = H3 ;  <CR> this . receiver = u0 ;  <CR> this . content = g ;  <CR> this . sender = v7 ;  <CR> this . date = K0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] G3 ) {  <CR> int J1 ;  <CR> for ( J1 = list . length - 1 ; J1 >= 0 ; J1 -- ) {  <CR> int r6 = J1 ;  <CR> Letter c4 = new Letter ( J1 ) ;  <CR> Letter B5 = new Letter ( r6 - 1 ) ;  <CR> if ( c4 . compareTo ( B5 ) == 1 )  <CR> c4 . display ( J1 ) ;  <CR> }  <CR> }  <CR> public void display ( int J1 ) {  <CR> list [ J1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int s ) {  <CR> this . x = s ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object r3 ) {  <CR> Letter u = ( Letter ) r3 ;  <CR> if ( this . x > u . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 