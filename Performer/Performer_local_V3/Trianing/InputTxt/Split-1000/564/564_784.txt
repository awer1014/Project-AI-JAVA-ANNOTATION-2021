 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Q5 , String R3 , String b , String R4 , String i1 ) {  <CR> super ( Q5 , R3 , b , R4 , i1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q6 , String T9 , String E0 , String v8 , String p1 ) {  <CR> super ( q6 , T9 , E0 , v8 , p1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] b9 ) {  <CR> Evaluation U = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x1 = new Envelop ( "Taipei" , "Kaohsiung" , U ) ;  <CR> x1 . display ( ) ;  <CR> }  <CR> public Envelop ( String o0 , String a6 , Evaluation W4 ) {  <CR> this . senderAddr = o0 ;  <CR> this . receiverAddr = a6 ;  <CR> this . letter = W4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String g6 , String y8 , String v5 , String D0 , String x5 ) {  <CR> this . title = g6 ;  <CR> this . receiver = y8 ;  <CR> this . content = v5 ;  <CR> this . sender = D0 ;  <CR> this . date = x5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int y6 ) {  <CR> this . x = y6 ;  <CR> }  <CR> public static void main ( String [ ] W7 ) {  <CR> int i2 ;  <CR> for ( i2 = list . length - 1 ; i2 >= 0 ; i2 -- ) {  <CR> int H4 = i2 ;  <CR> Letter T = new Letter ( i2 ) ;  <CR> Letter N1 = new Letter ( H4 - 1 ) ;  <CR> if ( T . compareTo ( N1 ) == 1 )  <CR> T . display ( i2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object a5 ) {  <CR> Letter Q = ( Letter ) a5 ;  <CR> if ( this . x > Q . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int i2 ) {  <CR> list [ i2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 