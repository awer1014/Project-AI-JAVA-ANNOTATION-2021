 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z6 , String I5 , String z1 , String l1 , String h4 ) {  <CR> super ( Z6 , I5 , z1 , l1 , h4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b7 , String o0 , String y6 , String t7 , String A0 ) {  <CR> super ( b7 , o0 , y6 , t7 , A0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String F , String M , Evaluation i2 ) {  <CR> this . senderAddr = F ;  <CR> this . receiverAddr = M ;  <CR> this . letter = i2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] c0 ) {  <CR> Evaluation f2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L3 = new Envelop ( "Taipei" , "Kaohsiung" , f2 ) ;  <CR> L3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String t4 , String O8 , String R0 , String P5 , String b2 ) {  <CR> this . title = t4 ;  <CR> this . receiver = O8 ;  <CR> this . content = R0 ;  <CR> this . sender = P5 ;  <CR> this . date = b2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object Q5 ) {  <CR> Letter v7 = ( Letter ) Q5 ;  <CR> if ( this . x > v7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int q6 ) {  <CR> list [ q6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] h6 ) {  <CR> int q6 ;  <CR> for ( q6 = list . length - 1 ; q6 >= 0 ; q6 -- ) {  <CR> int U2 = q6 ;  <CR> Letter W0 = new Letter ( q6 ) ;  <CR> Letter S2 = new Letter ( U2 - 1 ) ;  <CR> if ( W0 . compareTo ( S2 ) == 1 )  <CR> W0 . display ( q6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int K7 ) {  <CR> this . x = K7 ;  <CR> }  <CR> }  <CR>  <EOC> 