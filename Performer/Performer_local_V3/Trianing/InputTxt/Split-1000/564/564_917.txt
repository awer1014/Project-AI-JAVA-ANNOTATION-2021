 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String z0 , String P1 , String L1 , String V3 , String u3 ) {  <CR> super ( z0 , P1 , L1 , V3 , u3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F6 , String p3 , String q9 , String k4 , String U6 ) {  <CR> super ( F6 , p3 , q9 , k4 , U6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String N1 , String q8 , Evaluation H8 ) {  <CR> this . senderAddr = N1 ;  <CR> this . receiverAddr = q8 ;  <CR> this . letter = H8 ;  <CR> }  <CR> public static void main ( String [ ] Y6 ) {  <CR> Evaluation P1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a6 = new Envelop ( "Taipei" , "Kaohsiung" , P1 ) ;  <CR> a6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String P6 , String I3 , String L7 , String W , String P9 ) {  <CR> this . title = P6 ;  <CR> this . receiver = I3 ;  <CR> this . content = L7 ;  <CR> this . sender = W ;  <CR> this . date = P9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int c1 ) {  <CR> list [ c1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v9 ) {  <CR> int c1 ;  <CR> for ( c1 = list . length - 1 ; c1 >= 0 ; c1 -- ) {  <CR> int l8 = c1 ;  <CR> Letter S9 = new Letter ( c1 ) ;  <CR> Letter t7 = new Letter ( l8 - 1 ) ;  <CR> if ( S9 . compareTo ( t7 ) == 1 )  <CR> S9 . display ( c1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object p5 ) {  <CR> Letter d2 = ( Letter ) p5 ;  <CR> if ( this . x > d2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int y0 ) {  <CR> this . x = y0 ;  <CR> }  <CR> }  <CR>  <EOC> 