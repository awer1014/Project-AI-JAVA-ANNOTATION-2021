 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L9 , String X3 , String P0 , String r7 , String B8 ) {  <CR> super ( L9 , X3 , P0 , r7 , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String O1 , String J5 , String q0 , String n3 , String a9 ) {  <CR> super ( O1 , J5 , q0 , n3 , a9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] W3 ) {  <CR> Evaluation C5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E8 = new Envelop ( "Taipei" , "Kaohsiung" , C5 ) ;  <CR> E8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String U3 , String K6 , Evaluation c1 ) {  <CR> this . senderAddr = U3 ;  <CR> this . receiverAddr = K6 ;  <CR> this . letter = c1 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String q5 , String C6 , String z7 , String D , String D7 ) {  <CR> this . title = q5 ;  <CR> this . receiver = C6 ;  <CR> this . content = z7 ;  <CR> this . sender = D ;  <CR> this . date = D7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int U8 ) {  <CR> list [ U8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object z3 ) {  <CR> Letter F6 = ( Letter ) z3 ;  <CR> if ( this . x > F6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int i1 ) {  <CR> this . x = i1 ;  <CR> }  <CR> public static void main ( String [ ] e9 ) {  <CR> int U8 ;  <CR> for ( U8 = list . length - 1 ; U8 >= 0 ; U8 -- ) {  <CR> int h8 = U8 ;  <CR> Letter j0 = new Letter ( U8 ) ;  <CR> Letter Z8 = new Letter ( h8 - 1 ) ;  <CR> if ( j0 . compareTo ( Z8 ) == 1 )  <CR> j0 . display ( U8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 