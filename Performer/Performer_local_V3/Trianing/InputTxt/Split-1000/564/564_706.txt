 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String R5 , String h7 , String m7 , String S2 , String K0 ) {  <CR> super ( R5 , h7 , m7 , S2 , K0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H7 , String g4 , String u4 , String g2 , String R8 ) {  <CR> super ( H7 , g4 , u4 , g2 , R8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String i7 , String m , Evaluation o9 ) {  <CR> this . senderAddr = i7 ;  <CR> this . receiverAddr = m ;  <CR> this . letter = o9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] y8 ) {  <CR> Evaluation e7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B7 = new Envelop ( "Taipei" , "Kaohsiung" , e7 ) ;  <CR> B7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String n5 , String B , String q , String h5 , String E4 ) {  <CR> this . title = n5 ;  <CR> this . receiver = B ;  <CR> this . content = q ;  <CR> this . sender = h5 ;  <CR> this . date = E4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int U6 ) {  <CR> list [ U6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int E9 ) {  <CR> this . x = E9 ;  <CR> }  <CR> public int compareTo ( Object y3 ) {  <CR> Letter Q1 = ( Letter ) y3 ;  <CR> if ( this . x > Q1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] H1 ) {  <CR> int U6 ;  <CR> for ( U6 = list . length - 1 ; U6 >= 0 ; U6 -- ) {  <CR> int l2 = U6 ;  <CR> Letter v = new Letter ( U6 ) ;  <CR> Letter n8 = new Letter ( l2 - 1 ) ;  <CR> if ( v . compareTo ( n8 ) == 1 )  <CR> v . display ( U6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 