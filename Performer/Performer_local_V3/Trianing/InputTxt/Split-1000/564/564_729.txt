 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t2 , String E9 , String j3 , String T , String c9 ) {  <CR> super ( t2 , E9 , j3 , T , c9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String d2 , String W5 , String e , String Y4 , String h8 ) {  <CR> super ( d2 , W5 , e , Y4 , h8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String s3 , String n3 , Evaluation s6 ) {  <CR> this . senderAddr = s3 ;  <CR> this . receiverAddr = n3 ;  <CR> this . letter = s6 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C4 ) {  <CR> Evaluation k5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w4 = new Envelop ( "Taipei" , "Kaohsiung" , k5 ) ;  <CR> w4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String A7 , String F4 , String Z0 , String l6 , String U9 ) {  <CR> this . title = A7 ;  <CR> this . receiver = F4 ;  <CR> this . content = Z0 ;  <CR> this . sender = l6 ;  <CR> this . date = U9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] w6 ) {  <CR> int T6 ;  <CR> for ( T6 = list . length - 1 ; T6 >= 0 ; T6 -- ) {  <CR> int f8 = T6 ;  <CR> Letter t2 = new Letter ( T6 ) ;  <CR> Letter f0 = new Letter ( f8 - 1 ) ;  <CR> if ( t2 . compareTo ( f0 ) == 1 )  <CR> t2 . display ( T6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object R3 ) {  <CR> Letter S9 = ( Letter ) R3 ;  <CR> if ( this . x > S9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int x2 ) {  <CR> this . x = x2 ;  <CR> }  <CR> public void display ( int T6 ) {  <CR> list [ T6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 