 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E2 , String A , String N9 , String f9 , String Q5 ) {  <CR> super ( E2 , A , N9 , f9 , Q5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z3 , String W3 , String R , String m6 , String S7 ) {  <CR> super ( z3 , W3 , R , m6 , S7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String v9 , String Y4 , Evaluation P7 ) {  <CR> this . senderAddr = v9 ;  <CR> this . receiverAddr = Y4 ;  <CR> this . letter = P7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] W3 ) {  <CR> Evaluation U6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a9 = new Envelop ( "Taipei" , "Kaohsiung" , U6 ) ;  <CR> a9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String j3 , String x9 , String W3 , String t5 , String Q7 ) {  <CR> this . title = j3 ;  <CR> this . receiver = x9 ;  <CR> this . content = W3 ;  <CR> this . sender = t5 ;  <CR> this . date = Q7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int n5 ) {  <CR> list [ n5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int s3 ) {  <CR> this . x = s3 ;  <CR> }  <CR> public int compareTo ( Object g5 ) {  <CR> Letter h2 = ( Letter ) g5 ;  <CR> if ( this . x > h2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] j0 ) {  <CR> int n5 ;  <CR> for ( n5 = list . length - 1 ; n5 >= 0 ; n5 -- ) {  <CR> int e3 = n5 ;  <CR> Letter b7 = new Letter ( n5 ) ;  <CR> Letter r5 = new Letter ( e3 - 1 ) ;  <CR> if ( b7 . compareTo ( r5 ) == 1 )  <CR> b7 . display ( n5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 