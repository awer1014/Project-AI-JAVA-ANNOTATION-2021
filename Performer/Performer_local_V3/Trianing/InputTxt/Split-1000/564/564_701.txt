 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y , String m , String A1 , String r8 , String y0 ) {  <CR> super ( y , m , A1 , r8 , y0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h3 , String x3 , String r5 , String S5 , String R9 ) {  <CR> super ( h3 , x3 , r5 , S5 , R9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d3 ) {  <CR> Evaluation X8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t1 = new Envelop ( "Taipei" , "Kaohsiung" , X8 ) ;  <CR> t1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Y2 , String b9 , Evaluation k3 ) {  <CR> this . senderAddr = Y2 ;  <CR> this . receiverAddr = b9 ;  <CR> this . letter = k3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String m7 , String K7 , String F7 , String I , String g2 ) {  <CR> this . title = m7 ;  <CR> this . receiver = K7 ;  <CR> this . content = F7 ;  <CR> this . sender = I ;  <CR> this . date = g2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] K ) {  <CR> int Q ;  <CR> for ( Q = list . length - 1 ; Q >= 0 ; Q -- ) {  <CR> int p7 = Q ;  <CR> Letter T0 = new Letter ( Q ) ;  <CR> Letter X6 = new Letter ( p7 - 1 ) ;  <CR> if ( T0 . compareTo ( X6 ) == 1 )  <CR> T0 . display ( Q ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int u6 ) {  <CR> this . x = u6 ;  <CR> }  <CR> public int compareTo ( Object h3 ) {  <CR> Letter w4 = ( Letter ) h3 ;  <CR> if ( this . x > w4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int Q ) {  <CR> list [ Q ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 