 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m6 , String m2 , String x5 , String b6 , String Z4 ) {  <CR> super ( m6 , m2 , x5 , b6 , Z4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L2 , String e2 , String x5 , String C4 , String l2 ) {  <CR> super ( L2 , e2 , x5 , C4 , l2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String C8 , String W4 , Evaluation d3 ) {  <CR> this . senderAddr = C8 ;  <CR> this . receiverAddr = W4 ;  <CR> this . letter = d3 ;  <CR> }  <CR> public static void main ( String [ ] b7 ) {  <CR> Evaluation Z8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u3 = new Envelop ( "Taipei" , "Kaohsiung" , Z8 ) ;  <CR> u3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String a7 , String T5 , String h2 , String S6 , String e1 ) {  <CR> this . title = a7 ;  <CR> this . receiver = T5 ;  <CR> this . content = h2 ;  <CR> this . sender = S6 ;  <CR> this . date = e1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] J5 ) {  <CR> int k0 ;  <CR> for ( k0 = list . length - 1 ; k0 >= 0 ; k0 -- ) {  <CR> int v1 = k0 ;  <CR> Letter E3 = new Letter ( k0 ) ;  <CR> Letter A7 = new Letter ( v1 - 1 ) ;  <CR> if ( E3 . compareTo ( A7 ) == 1 )  <CR> E3 . display ( k0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object r7 ) {  <CR> Letter g2 = ( Letter ) r7 ;  <CR> if ( this . x > g2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int k0 ) {  <CR> list [ k0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int o4 ) {  <CR> this . x = o4 ;  <CR> }  <CR> }  <CR>  <EOC> 