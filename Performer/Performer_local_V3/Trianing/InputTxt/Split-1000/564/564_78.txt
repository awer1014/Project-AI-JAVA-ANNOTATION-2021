 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O3 , String i0 , String x8 , String E8 , String h9 ) {  <CR> super ( O3 , i0 , x8 , E8 , h9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String c2 , String m4 , String d9 , String x1 , String z9 ) {  <CR> super ( c2 , m4 , d9 , x1 , z9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] E1 ) {  <CR> Evaluation e7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W2 = new Envelop ( "Taipei" , "Kaohsiung" , e7 ) ;  <CR> W2 . display ( ) ;  <CR> }  <CR> public Envelop ( String a8 , String T0 , Evaluation s6 ) {  <CR> this . senderAddr = a8 ;  <CR> this . receiverAddr = T0 ;  <CR> this . letter = s6 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String c8 , String p4 , String t6 , String X9 , String B4 ) {  <CR> this . title = c8 ;  <CR> this . receiver = p4 ;  <CR> this . content = t6 ;  <CR> this . sender = X9 ;  <CR> this . date = B4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int E4 ) {  <CR> this . x = E4 ;  <CR> }  <CR> public void display ( int D3 ) {  <CR> list [ D3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L0 ) {  <CR> Letter c3 = ( Letter ) L0 ;  <CR> if ( this . x > c3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] y8 ) {  <CR> int D3 ;  <CR> for ( D3 = list . length - 1 ; D3 >= 0 ; D3 -- ) {  <CR> int o1 = D3 ;  <CR> Letter S2 = new Letter ( D3 ) ;  <CR> Letter g5 = new Letter ( o1 - 1 ) ;  <CR> if ( S2 . compareTo ( g5 ) == 1 )  <CR> S2 . display ( D3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 