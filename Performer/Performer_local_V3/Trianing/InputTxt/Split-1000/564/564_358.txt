 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l2 , String c7 , String o4 , String j5 , String n0 ) {  <CR> super ( l2 , c7 , o4 , j5 , n0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S4 , String C7 , String O1 , String g9 , String S9 ) {  <CR> super ( S4 , C7 , O1 , g9 , S9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String J9 , String u1 , Evaluation X6 ) {  <CR> this . senderAddr = J9 ;  <CR> this . receiverAddr = u1 ;  <CR> this . letter = X6 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] y3 ) {  <CR> Evaluation V5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D0 = new Envelop ( "Taipei" , "Kaohsiung" , V5 ) ;  <CR> D0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String t2 , String J7 , String V7 , String L1 , String Z4 ) {  <CR> this . title = t2 ;  <CR> this . receiver = J7 ;  <CR> this . content = V7 ;  <CR> this . sender = L1 ;  <CR> this . date = Z4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object N6 ) {  <CR> Letter t4 = ( Letter ) N6 ;  <CR> if ( this . x > t4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int d7 ) {  <CR> this . x = d7 ;  <CR> }  <CR> public void display ( int G3 ) {  <CR> list [ G3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q ) {  <CR> int G3 ;  <CR> for ( G3 = list . length - 1 ; G3 >= 0 ; G3 -- ) {  <CR> int v1 = G3 ;  <CR> Letter y5 = new Letter ( G3 ) ;  <CR> Letter Q2 = new Letter ( v1 - 1 ) ;  <CR> if ( y5 . compareTo ( Q2 ) == 1 )  <CR> y5 . display ( G3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 