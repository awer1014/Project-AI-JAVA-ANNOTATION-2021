 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a8 , String r0 , String d0 , String Y9 , String O3 ) {  <CR> super ( a8 , r0 , d0 , Y9 , O3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o7 , String E4 , String y7 , String P , String D ) {  <CR> super ( o7 , E4 , y7 , P , D ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x3 ) {  <CR> Evaluation S5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A8 = new Envelop ( "Taipei" , "Kaohsiung" , S5 ) ;  <CR> A8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String e8 , String o6 , Evaluation k1 ) {  <CR> this . senderAddr = e8 ;  <CR> this . receiverAddr = o6 ;  <CR> this . letter = k1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String U6 , String q4 , String d9 , String k9 , String e7 ) {  <CR> this . title = U6 ;  <CR> this . receiver = q4 ;  <CR> this . content = d9 ;  <CR> this . sender = k9 ;  <CR> this . date = e7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int J5 ) {  <CR> this . x = J5 ;  <CR> }  <CR> public int compareTo ( Object g6 ) {  <CR> Letter v7 = ( Letter ) g6 ;  <CR> if ( this . x > v7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] v8 ) {  <CR> int V8 ;  <CR> for ( V8 = list . length - 1 ; V8 >= 0 ; V8 -- ) {  <CR> int t6 = V8 ;  <CR> Letter x6 = new Letter ( V8 ) ;  <CR> Letter w9 = new Letter ( t6 - 1 ) ;  <CR> if ( x6 . compareTo ( w9 ) == 1 )  <CR> x6 . display ( V8 ) ;  <CR> }  <CR> }  <CR> public void display ( int V8 ) {  <CR> list [ V8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 