 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p6 , String Z9 , String L2 , String U9 , String c2 ) {  <CR> super ( p6 , Z9 , L2 , U9 , c2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String c9 , String K8 , String W6 , String n4 , String h4 ) {  <CR> super ( c9 , K8 , W6 , n4 , h4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String j , String U , Evaluation m5 ) {  <CR> this . senderAddr = j ;  <CR> this . receiverAddr = U ;  <CR> this . letter = m5 ;  <CR> }  <CR> public static void main ( String [ ] B ) {  <CR> Evaluation L2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n3 = new Envelop ( "Taipei" , "Kaohsiung" , L2 ) ;  <CR> n3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String Y2 , String U0 , String O8 , String i8 , String F7 ) {  <CR> this . title = Y2 ;  <CR> this . receiver = U0 ;  <CR> this . content = O8 ;  <CR> this . sender = i8 ;  <CR> this . date = F7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] A ) {  <CR> int r7 ;  <CR> for ( r7 = list . length - 1 ; r7 >= 0 ; r7 -- ) {  <CR> int x0 = r7 ;  <CR> Letter T2 = new Letter ( r7 ) ;  <CR> Letter B0 = new Letter ( x0 - 1 ) ;  <CR> if ( T2 . compareTo ( B0 ) == 1 )  <CR> T2 . display ( r7 ) ;  <CR> }  <CR> }  <CR> Letter ( int m2 ) {  <CR> this . x = m2 ;  <CR> }  <CR> public int compareTo ( Object Q1 ) {  <CR> Letter h7 = ( Letter ) Q1 ;  <CR> if ( this . x > h7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int r7 ) {  <CR> list [ r7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 