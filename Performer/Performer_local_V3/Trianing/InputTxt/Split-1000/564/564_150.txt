 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T , String y3 , String I8 , String Y9 , String v0 ) {  <CR> super ( T , y3 , I8 , Y9 , v0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l2 , String F7 , String S4 , String N0 , String f9 ) {  <CR> super ( l2 , F7 , S4 , N0 , f9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] M3 ) {  <CR> Evaluation k0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K6 = new Envelop ( "Taipei" , "Kaohsiung" , k0 ) ;  <CR> K6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String P6 , String z0 , Evaluation r ) {  <CR> this . senderAddr = P6 ;  <CR> this . receiverAddr = z0 ;  <CR> this . letter = r ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String D7 , String c5 , String O2 , String n6 , String t2 ) {  <CR> this . title = D7 ;  <CR> this . receiver = c5 ;  <CR> this . content = O2 ;  <CR> this . sender = n6 ;  <CR> this . date = t2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] B4 ) {  <CR> int H2 ;  <CR> for ( H2 = list . length - 1 ; H2 >= 0 ; H2 -- ) {  <CR> int a6 = H2 ;  <CR> Letter q7 = new Letter ( H2 ) ;  <CR> Letter T8 = new Letter ( a6 - 1 ) ;  <CR> if ( q7 . compareTo ( T8 ) == 1 )  <CR> q7 . display ( H2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H2 ) {  <CR> list [ H2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int F7 ) {  <CR> this . x = F7 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object K7 ) {  <CR> Letter D6 = ( Letter ) K7 ;  <CR> if ( this . x > D6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 