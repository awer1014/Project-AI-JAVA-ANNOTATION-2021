 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W7 , String A4 , String h4 , String V7 , String u4 ) {  <CR> super ( W7 , A4 , h4 , V7 , u4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y0 , String G6 , String Y1 , String P1 , String O ) {  <CR> super ( y0 , G6 , Y1 , P1 , O ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String V2 , String K2 , Evaluation m1 ) {  <CR> this . senderAddr = V2 ;  <CR> this . receiverAddr = K2 ;  <CR> this . letter = m1 ;  <CR> }  <CR> public static void main ( String [ ] f8 ) {  <CR> Evaluation Q2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E9 = new Envelop ( "Taipei" , "Kaohsiung" , Q2 ) ;  <CR> E9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String a5 , String C0 , String D3 , String b0 , String t0 ) {  <CR> this . title = a5 ;  <CR> this . receiver = C0 ;  <CR> this . content = D3 ;  <CR> this . sender = b0 ;  <CR> this . date = t0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object H0 ) {  <CR> Letter s1 = ( Letter ) H0 ;  <CR> if ( this . x > s1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int e3 ) {  <CR> list [ e3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] B4 ) {  <CR> int e3 ;  <CR> for ( e3 = list . length - 1 ; e3 >= 0 ; e3 -- ) {  <CR> int H3 = e3 ;  <CR> Letter p7 = new Letter ( e3 ) ;  <CR> Letter C5 = new Letter ( H3 - 1 ) ;  <CR> if ( p7 . compareTo ( C5 ) == 1 )  <CR> p7 . display ( e3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int S2 ) {  <CR> this . x = S2 ;  <CR> }  <CR> }  <CR>  <EOC> 