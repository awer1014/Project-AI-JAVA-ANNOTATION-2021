 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String s6 , String P1 , String O2 , String w8 , String J2 ) {  <CR> super ( s6 , P1 , O2 , w8 , J2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j3 , String X0 , String O3 , String H4 , String Z9 ) {  <CR> super ( j3 , X0 , O3 , H4 , Z9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] P2 ) {  <CR> Evaluation v2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m2 = new Envelop ( "Taipei" , "Kaohsiung" , v2 ) ;  <CR> m2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String D , String E7 , Evaluation r2 ) {  <CR> this . senderAddr = D ;  <CR> this . receiverAddr = E7 ;  <CR> this . letter = r2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String q7 , String u2 , String w9 , String H4 , String R4 ) {  <CR> this . title = q7 ;  <CR> this . receiver = u2 ;  <CR> this . content = w9 ;  <CR> this . sender = H4 ;  <CR> this . date = R4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] e4 ) {  <CR> int S4 ;  <CR> for ( S4 = list . length - 1 ; S4 >= 0 ; S4 -- ) {  <CR> int o = S4 ;  <CR> Letter m2 = new Letter ( S4 ) ;  <CR> Letter K0 = new Letter ( o - 1 ) ;  <CR> if ( m2 . compareTo ( K0 ) == 1 )  <CR> m2 . display ( S4 ) ;  <CR> }  <CR> }  <CR> Letter ( int P1 ) {  <CR> this . x = P1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int S4 ) {  <CR> list [ S4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object X3 ) {  <CR> Letter P = ( Letter ) X3 ;  <CR> if ( this . x > P . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 