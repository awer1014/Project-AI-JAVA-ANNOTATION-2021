 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J5 , String s3 , String k4 , String V0 , String o ) {  <CR> super ( J5 , s3 , k4 , V0 , o ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B2 , String k , String V4 , String H4 , String A5 ) {  <CR> super ( B2 , k , V4 , H4 , A5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String E5 , String u2 , Evaluation F2 ) {  <CR> this . senderAddr = E5 ;  <CR> this . receiverAddr = u2 ;  <CR> this . letter = F2 ;  <CR> }  <CR> public static void main ( String [ ] v2 ) {  <CR> Evaluation q0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A2 = new Envelop ( "Taipei" , "Kaohsiung" , q0 ) ;  <CR> A2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String O0 , String k , String D4 , String c , String d ) {  <CR> this . title = O0 ;  <CR> this . receiver = k ;  <CR> this . content = D4 ;  <CR> this . sender = c ;  <CR> this . date = d ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object o6 ) {  <CR> Letter f0 = ( Letter ) o6 ;  <CR> if ( this . x > f0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] A7 ) {  <CR> int S ;  <CR> for ( S = list . length - 1 ; S >= 0 ; S -- ) {  <CR> int Y9 = S ;  <CR> Letter W1 = new Letter ( S ) ;  <CR> Letter k8 = new Letter ( Y9 - 1 ) ;  <CR> if ( W1 . compareTo ( k8 ) == 1 )  <CR> W1 . display ( S ) ;  <CR> }  <CR> }  <CR> public void display ( int S ) {  <CR> list [ S ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int e ) {  <CR> this . x = e ;  <CR> }  <CR> }  <CR>  <EOC> 