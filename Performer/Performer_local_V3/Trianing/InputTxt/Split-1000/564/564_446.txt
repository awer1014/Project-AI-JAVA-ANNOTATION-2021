 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k6 , String X1 , String z7 , String T1 , String w7 ) {  <CR> super ( k6 , X1 , z7 , T1 , w7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O0 , String F2 , String x1 , String Z7 , String J0 ) {  <CR> super ( O0 , F2 , x1 , Z7 , J0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String s6 , String z1 , Evaluation K5 ) {  <CR> this . senderAddr = s6 ;  <CR> this . receiverAddr = z1 ;  <CR> this . letter = K5 ;  <CR> }  <CR> public static void main ( String [ ] R5 ) {  <CR> Evaluation M7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u1 = new Envelop ( "Taipei" , "Kaohsiung" , M7 ) ;  <CR> u1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String J , String s5 , String u3 , String p , String n6 ) {  <CR> this . title = J ;  <CR> this . receiver = s5 ;  <CR> this . content = u3 ;  <CR> this . sender = p ;  <CR> this . date = n6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int j7 ) {  <CR> this . x = j7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int d5 ) {  <CR> list [ d5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object M3 ) {  <CR> Letter P3 = ( Letter ) M3 ;  <CR> if ( this . x > P3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] s5 ) {  <CR> int d5 ;  <CR> for ( d5 = list . length - 1 ; d5 >= 0 ; d5 -- ) {  <CR> int G5 = d5 ;  <CR> Letter v1 = new Letter ( d5 ) ;  <CR> Letter o9 = new Letter ( G5 - 1 ) ;  <CR> if ( v1 . compareTo ( o9 ) == 1 )  <CR> v1 . display ( d5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 