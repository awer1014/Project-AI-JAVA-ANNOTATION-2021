 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String u5 , String V , String P6 , String f7 , String g3 ) {  <CR> super ( u5 , V , P6 , f7 , g3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z7 , String E , String M9 , String s8 , String L5 ) {  <CR> super ( Z7 , E , M9 , s8 , L5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String h3 , String f5 , Evaluation F3 ) {  <CR> this . senderAddr = h3 ;  <CR> this . receiverAddr = f5 ;  <CR> this . letter = F3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o0 ) {  <CR> Evaluation e4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A = new Envelop ( "Taipei" , "Kaohsiung" , e4 ) ;  <CR> A . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String H7 , String N7 , String B1 , String O5 , String w7 ) {  <CR> this . title = H7 ;  <CR> this . receiver = N7 ;  <CR> this . content = B1 ;  <CR> this . sender = O5 ;  <CR> this . date = w7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object C9 ) {  <CR> Letter l7 = ( Letter ) C9 ;  <CR> if ( this . x > l7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] q6 ) {  <CR> int I6 ;  <CR> for ( I6 = list . length - 1 ; I6 >= 0 ; I6 -- ) {  <CR> int O7 = I6 ;  <CR> Letter D6 = new Letter ( I6 ) ;  <CR> Letter y3 = new Letter ( O7 - 1 ) ;  <CR> if ( D6 . compareTo ( y3 ) == 1 )  <CR> D6 . display ( I6 ) ;  <CR> }  <CR> }  <CR> Letter ( int R0 ) {  <CR> this . x = R0 ;  <CR> }  <CR> public void display ( int I6 ) {  <CR> list [ I6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 