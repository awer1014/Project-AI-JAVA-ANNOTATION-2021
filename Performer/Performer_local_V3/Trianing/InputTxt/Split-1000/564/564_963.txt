 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A2 , String d , String Q9 , String i5 , String X7 ) {  <CR> super ( A2 , d , Q9 , i5 , X7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H1 , String S1 , String M0 , String F8 , String V7 ) {  <CR> super ( H1 , S1 , M0 , F8 , V7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B8 ) {  <CR> Evaluation A5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p3 = new Envelop ( "Taipei" , "Kaohsiung" , A5 ) ;  <CR> p3 . display ( ) ;  <CR> }  <CR> public Envelop ( String d2 , String s7 , Evaluation f0 ) {  <CR> this . senderAddr = d2 ;  <CR> this . receiverAddr = s7 ;  <CR> this . letter = f0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String K4 , String q3 , String N7 , String T5 , String a3 ) {  <CR> this . title = K4 ;  <CR> this . receiver = q3 ;  <CR> this . content = N7 ;  <CR> this . sender = T5 ;  <CR> this . date = a3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int C6 ) {  <CR> list [ C6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int N8 ) {  <CR> this . x = N8 ;  <CR> }  <CR> public int compareTo ( Object K0 ) {  <CR> Letter i6 = ( Letter ) K0 ;  <CR> if ( this . x > i6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] s7 ) {  <CR> int C6 ;  <CR> for ( C6 = list . length - 1 ; C6 >= 0 ; C6 -- ) {  <CR> int v4 = C6 ;  <CR> Letter o3 = new Letter ( C6 ) ;  <CR> Letter W7 = new Letter ( v4 - 1 ) ;  <CR> if ( o3 . compareTo ( W7 ) == 1 )  <CR> o3 . display ( C6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 