 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A8 , String c1 , String d3 , String w4 , String G5 ) {  <CR> super ( A8 , c1 , d3 , w4 , G5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S4 , String n0 , String l7 , String o4 , String d0 ) {  <CR> super ( S4 , n0 , l7 , o4 , d0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] P8 ) {  <CR> Evaluation t4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m5 = new Envelop ( "Taipei" , "Kaohsiung" , t4 ) ;  <CR> m5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String E5 , String P7 , Evaluation k3 ) {  <CR> this . senderAddr = E5 ;  <CR> this . receiverAddr = P7 ;  <CR> this . letter = k3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String O9 , String r6 , String G8 , String z , String V9 ) {  <CR> this . title = O9 ;  <CR> this . receiver = r6 ;  <CR> this . content = G8 ;  <CR> this . sender = z ;  <CR> this . date = V9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] U4 ) {  <CR> int k2 ;  <CR> for ( k2 = list . length - 1 ; k2 >= 0 ; k2 -- ) {  <CR> int f8 = k2 ;  <CR> Letter m7 = new Letter ( k2 ) ;  <CR> Letter e6 = new Letter ( f8 - 1 ) ;  <CR> if ( m7 . compareTo ( e6 ) == 1 )  <CR> m7 . display ( k2 ) ;  <CR> }  <CR> }  <CR> Letter ( int G ) {  <CR> this . x = G ;  <CR> }  <CR> public void display ( int k2 ) {  <CR> list [ k2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object X6 ) {  <CR> Letter n8 = ( Letter ) X6 ;  <CR> if ( this . x > n8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 