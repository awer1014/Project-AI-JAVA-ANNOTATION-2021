 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k0 , String V3 , String a8 , String Z2 , String y5 ) {  <CR> super ( k0 , V3 , a8 , Z2 , y5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y , String r7 , String r8 , String T6 , String a4 ) {  <CR> super ( y , r7 , r8 , T6 , a4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String S2 , String K2 , Evaluation U2 ) {  <CR> this . senderAddr = S2 ;  <CR> this . receiverAddr = K2 ;  <CR> this . letter = U2 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] L0 ) {  <CR> Evaluation u6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y0 = new Envelop ( "Taipei" , "Kaohsiung" , u6 ) ;  <CR> Y0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String c3 , String c0 , String Q8 , String X3 , String C2 ) {  <CR> this . title = c3 ;  <CR> this . receiver = c0 ;  <CR> this . content = Q8 ;  <CR> this . sender = X3 ;  <CR> this . date = C2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int U5 ) {  <CR> this . x = U5 ;  <CR> }  <CR> public int compareTo ( Object q ) {  <CR> Letter a1 = ( Letter ) q ;  <CR> if ( this . x > a1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int n0 ) {  <CR> list [ n0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] a3 ) {  <CR> int n0 ;  <CR> for ( n0 = list . length - 1 ; n0 >= 0 ; n0 -- ) {  <CR> int q4 = n0 ;  <CR> Letter P = new Letter ( n0 ) ;  <CR> Letter X8 = new Letter ( q4 - 1 ) ;  <CR> if ( P . compareTo ( X8 ) == 1 )  <CR> P . display ( n0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 