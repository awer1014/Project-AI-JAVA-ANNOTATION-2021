 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l0 , String j3 , String D2 , String b2 , String I5 ) {  <CR> super ( l0 , j3 , D2 , b2 , I5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W8 , String Q3 , String l8 , String Q0 , String Q2 ) {  <CR> super ( W8 , Q3 , l8 , Q0 , Q2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Q2 , String m8 , Evaluation Q1 ) {  <CR> this . senderAddr = Q2 ;  <CR> this . receiverAddr = m8 ;  <CR> this . letter = Q1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O3 ) {  <CR> Evaluation v6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h6 = new Envelop ( "Taipei" , "Kaohsiung" , v6 ) ;  <CR> h6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String C0 , String W4 , String Y5 , String x0 , String L7 ) {  <CR> this . title = C0 ;  <CR> this . receiver = W4 ;  <CR> this . content = Y5 ;  <CR> this . sender = x0 ;  <CR> this . date = L7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int f6 ) {  <CR> list [ f6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object k9 ) {  <CR> Letter B0 = ( Letter ) k9 ;  <CR> if ( this . x > B0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int a8 ) {  <CR> this . x = a8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] u5 ) {  <CR> int f6 ;  <CR> for ( f6 = list . length - 1 ; f6 >= 0 ; f6 -- ) {  <CR> int t3 = f6 ;  <CR> Letter t = new Letter ( f6 ) ;  <CR> Letter v2 = new Letter ( t3 - 1 ) ;  <CR> if ( t . compareTo ( v2 ) == 1 )  <CR> t . display ( f6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 