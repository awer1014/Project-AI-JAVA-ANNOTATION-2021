 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a9 , String c2 , String l3 , String w7 , String a3 ) {  <CR> super ( a9 , c2 , l3 , w7 , a3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z2 , String L3 , String d4 , String B2 , String k ) {  <CR> super ( z2 , L3 , d4 , B2 , k ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String V4 , String R5 , Evaluation l7 ) {  <CR> this . senderAddr = V4 ;  <CR> this . receiverAddr = R5 ;  <CR> this . letter = l7 ;  <CR> }  <CR> public static void main ( String [ ] O7 ) {  <CR> Evaluation d0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q2 = new Envelop ( "Taipei" , "Kaohsiung" , d0 ) ;  <CR> q2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String V5 , String F9 , String b8 , String r5 , String B6 ) {  <CR> this . title = V5 ;  <CR> this . receiver = F9 ;  <CR> this . content = b8 ;  <CR> this . sender = r5 ;  <CR> this . date = B6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] E9 ) {  <CR> int K8 ;  <CR> for ( K8 = list . length - 1 ; K8 >= 0 ; K8 -- ) {  <CR> int R5 = K8 ;  <CR> Letter Q4 = new Letter ( K8 ) ;  <CR> Letter g3 = new Letter ( R5 - 1 ) ;  <CR> if ( Q4 . compareTo ( g3 ) == 1 )  <CR> Q4 . display ( K8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int p6 ) {  <CR> this . x = p6 ;  <CR> }  <CR> public int compareTo ( Object L5 ) {  <CR> Letter q5 = ( Letter ) L5 ;  <CR> if ( this . x > q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int K8 ) {  <CR> list [ K8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 