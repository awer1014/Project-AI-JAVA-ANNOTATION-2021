 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A , String p0 , String A3 , String W3 , String d3 ) {  <CR> super ( A , p0 , A3 , W3 , d3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L3 , String g5 , String Y0 , String a9 , String B9 ) {  <CR> super ( L3 , g5 , Y0 , a9 , B9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] J9 ) {  <CR> Evaluation X4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w2 = new Envelop ( "Taipei" , "Kaohsiung" , X4 ) ;  <CR> w2 . display ( ) ;  <CR> }  <CR> public Envelop ( String X9 , String d5 , Evaluation d4 ) {  <CR> this . senderAddr = X9 ;  <CR> this . receiverAddr = d5 ;  <CR> this . letter = d4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Y , String g0 , String S6 , String n0 , String n8 ) {  <CR> this . title = Y ;  <CR> this . receiver = g0 ;  <CR> this . content = S6 ;  <CR> this . sender = n0 ;  <CR> this . date = n8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] v5 ) {  <CR> int W0 ;  <CR> for ( W0 = list . length - 1 ; W0 >= 0 ; W0 -- ) {  <CR> int B8 = W0 ;  <CR> Letter f = new Letter ( W0 ) ;  <CR> Letter m2 = new Letter ( B8 - 1 ) ;  <CR> if ( f . compareTo ( m2 ) == 1 )  <CR> f . display ( W0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object J2 ) {  <CR> Letter X7 = ( Letter ) J2 ;  <CR> if ( this . x > X7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int w ) {  <CR> this . x = w ;  <CR> }  <CR> public void display ( int W0 ) {  <CR> list [ W0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 