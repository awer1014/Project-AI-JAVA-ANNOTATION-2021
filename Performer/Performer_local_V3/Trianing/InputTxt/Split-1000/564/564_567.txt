 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p9 , String s6 , String Q3 , String O4 , String W9 ) {  <CR> super ( p9 , s6 , Q3 , O4 , W9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y0 , String b9 , String P5 , String R7 , String U8 ) {  <CR> super ( y0 , b9 , P5 , R7 , U8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String C4 , String N5 , Evaluation P4 ) {  <CR> this . senderAddr = C4 ;  <CR> this . receiverAddr = N5 ;  <CR> this . letter = P4 ;  <CR> }  <CR> public static void main ( String [ ] a4 ) {  <CR> Evaluation z1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q3 = new Envelop ( "Taipei" , "Kaohsiung" , z1 ) ;  <CR> q3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String R8 , String Q6 , String x8 , String R2 , String r ) {  <CR> this . title = R8 ;  <CR> this . receiver = Q6 ;  <CR> this . content = x8 ;  <CR> this . sender = R2 ;  <CR> this . date = r ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object j8 ) {  <CR> Letter t4 = ( Letter ) j8 ;  <CR> if ( this . x > t4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] j6 ) {  <CR> int Y3 ;  <CR> for ( Y3 = list . length - 1 ; Y3 >= 0 ; Y3 -- ) {  <CR> int g3 = Y3 ;  <CR> Letter f9 = new Letter ( Y3 ) ;  <CR> Letter u3 = new Letter ( g3 - 1 ) ;  <CR> if ( f9 . compareTo ( u3 ) == 1 )  <CR> f9 . display ( Y3 ) ;  <CR> }  <CR> }  <CR> public void display ( int Y3 ) {  <CR> list [ Y3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int N1 ) {  <CR> this . x = N1 ;  <CR> }  <CR> }  <CR>  <EOC> 