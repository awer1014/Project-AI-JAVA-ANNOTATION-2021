 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y5 , String i0 , String l7 , String I5 , String S1 ) {  <CR> super ( y5 , i0 , l7 , I5 , S1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f , String y , String Y0 , String b3 , String G7 ) {  <CR> super ( f , y , Y0 , b3 , G7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] T1 ) {  <CR> Evaluation t7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c = new Envelop ( "Taipei" , "Kaohsiung" , t7 ) ;  <CR> c . display ( ) ;  <CR> }  <CR> public Envelop ( String d1 , String l5 , Evaluation v1 ) {  <CR> this . senderAddr = d1 ;  <CR> this . receiverAddr = l5 ;  <CR> this . letter = v1 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String j1 , String H0 , String X9 , String t6 , String u0 ) {  <CR> this . title = j1 ;  <CR> this . receiver = H0 ;  <CR> this . content = X9 ;  <CR> this . sender = t6 ;  <CR> this . date = u0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int V5 ) {  <CR> this . x = V5 ;  <CR> }  <CR> public int compareTo ( Object H4 ) {  <CR> Letter S0 = ( Letter ) H4 ;  <CR> if ( this . x > S0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int e9 ) {  <CR> list [ e9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] L6 ) {  <CR> int e9 ;  <CR> for ( e9 = list . length - 1 ; e9 >= 0 ; e9 -- ) {  <CR> int m7 = e9 ;  <CR> Letter w9 = new Letter ( e9 ) ;  <CR> Letter l8 = new Letter ( m7 - 1 ) ;  <CR> if ( w9 . compareTo ( l8 ) == 1 )  <CR> w9 . display ( e9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 