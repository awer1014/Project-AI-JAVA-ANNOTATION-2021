 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R3 , String R0 , String b8 , String I , String c5 ) {  <CR> super ( R3 , R0 , b8 , I , c5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R4 , String T5 , String h9 , String W2 , String z ) {  <CR> super ( R4 , T5 , h9 , W2 , z ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String H , String u2 , Evaluation G1 ) {  <CR> this . senderAddr = H ;  <CR> this . receiverAddr = u2 ;  <CR> this . letter = G1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Y2 ) {  <CR> Evaluation P5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j4 = new Envelop ( "Taipei" , "Kaohsiung" , P5 ) ;  <CR> j4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String c2 , String w6 , String d0 , String v1 , String q ) {  <CR> this . title = c2 ;  <CR> this . receiver = w6 ;  <CR> this . content = d0 ;  <CR> this . sender = v1 ;  <CR> this . date = q ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int E2 ) {  <CR> list [ E2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int A8 ) {  <CR> this . x = A8 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object g4 ) {  <CR> Letter e0 = ( Letter ) g4 ;  <CR> if ( this . x > e0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] V9 ) {  <CR> int E2 ;  <CR> for ( E2 = list . length - 1 ; E2 >= 0 ; E2 -- ) {  <CR> int g1 = E2 ;  <CR> Letter X7 = new Letter ( E2 ) ;  <CR> Letter Y3 = new Letter ( g1 - 1 ) ;  <CR> if ( X7 . compareTo ( Y3 ) == 1 )  <CR> X7 . display ( E2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 