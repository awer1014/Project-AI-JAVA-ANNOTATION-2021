 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F7 , String x8 , String T7 , String A7 , String Q2 ) {  <CR> super ( F7 , x8 , T7 , A7 , Q2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String E7 , String R1 , String M3 , String H1 , String j8 ) {  <CR> super ( E7 , R1 , M3 , H1 , j8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] c3 ) {  <CR> Evaluation L5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X2 = new Envelop ( "Taipei" , "Kaohsiung" , L5 ) ;  <CR> X2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String f1 , String v9 , Evaluation G7 ) {  <CR> this . senderAddr = f1 ;  <CR> this . receiverAddr = v9 ;  <CR> this . letter = G7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String l9 , String w9 , String h7 , String M1 , String u3 ) {  <CR> this . title = l9 ;  <CR> this . receiver = w9 ;  <CR> this . content = h7 ;  <CR> this . sender = M1 ;  <CR> this . date = u3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] X4 ) {  <CR> int i8 ;  <CR> for ( i8 = list . length - 1 ; i8 >= 0 ; i8 -- ) {  <CR> int F8 = i8 ;  <CR> Letter t0 = new Letter ( i8 ) ;  <CR> Letter F5 = new Letter ( F8 - 1 ) ;  <CR> if ( t0 . compareTo ( F5 ) == 1 )  <CR> t0 . display ( i8 ) ;  <CR> }  <CR> }  <CR> public void display ( int i8 ) {  <CR> list [ i8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object B4 ) {  <CR> Letter U2 = ( Letter ) B4 ;  <CR> if ( this . x > U2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int J7 ) {  <CR> this . x = J7 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 