 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O8 , String G , String U6 , String r4 , String X5 ) {  <CR> super ( O8 , G , U6 , r4 , X5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y9 , String V , String y6 , String B6 , String q6 ) {  <CR> super ( Y9 , V , y6 , B6 , q6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G3 ) {  <CR> Evaluation q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u8 = new Envelop ( "Taipei" , "Kaohsiung" , q6 ) ;  <CR> u8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p9 , String r4 , Evaluation O5 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = r4 ;  <CR> this . letter = O5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String M , String m7 , String y0 , String g9 , String M5 ) {  <CR> this . title = M ;  <CR> this . receiver = m7 ;  <CR> this . content = y0 ;  <CR> this . sender = g9 ;  <CR> this . date = M5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z9 ) {  <CR> int x6 ;  <CR> for ( x6 = list . length - 1 ; x6 >= 0 ; x6 -- ) {  <CR> int F0 = x6 ;  <CR> Letter f8 = new Letter ( x6 ) ;  <CR> Letter N = new Letter ( F0 - 1 ) ;  <CR> if ( f8 . compareTo ( N ) == 1 )  <CR> f8 . display ( x6 ) ;  <CR> }  <CR> }  <CR> Letter ( int f0 ) {  <CR> this . x = f0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object C4 ) {  <CR> Letter A6 = ( Letter ) C4 ;  <CR> if ( this . x > A6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int x6 ) {  <CR> list [ x6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 