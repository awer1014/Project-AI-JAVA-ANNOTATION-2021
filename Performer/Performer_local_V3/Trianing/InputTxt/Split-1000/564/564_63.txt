 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N2 , String a8 , String j6 , String c , String p5 ) {  <CR> super ( N2 , a8 , j6 , c , p5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D4 , String j2 , String i5 , String n5 , String x1 ) {  <CR> super ( D4 , j2 , i5 , n5 , x1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String R3 , String v1 , Evaluation Q7 ) {  <CR> this . senderAddr = R3 ;  <CR> this . receiverAddr = v1 ;  <CR> this . letter = Q7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] u5 ) {  <CR> Evaluation y8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k5 = new Envelop ( "Taipei" , "Kaohsiung" , y8 ) ;  <CR> k5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String G4 , String V6 , String Z5 , String M0 , String v7 ) {  <CR> this . title = G4 ;  <CR> this . receiver = V6 ;  <CR> this . content = Z5 ;  <CR> this . sender = M0 ;  <CR> this . date = v7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int e0 ) {  <CR> list [ e0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] y2 ) {  <CR> int e0 ;  <CR> for ( e0 = list . length - 1 ; e0 >= 0 ; e0 -- ) {  <CR> int e2 = e0 ;  <CR> Letter x5 = new Letter ( e0 ) ;  <CR> Letter G2 = new Letter ( e2 - 1 ) ;  <CR> if ( x5 . compareTo ( G2 ) == 1 )  <CR> x5 . display ( e0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int j9 ) {  <CR> this . x = j9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object g7 ) {  <CR> Letter f0 = ( Letter ) g7 ;  <CR> if ( this . x > f0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 