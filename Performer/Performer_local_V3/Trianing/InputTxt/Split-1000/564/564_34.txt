 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w1 , String o3 , String p3 , String f0 , String U2 ) {  <CR> super ( w1 , o3 , p3 , f0 , U2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e4 , String k8 , String m6 , String i9 , String j0 ) {  <CR> super ( e4 , k8 , m6 , i9 , j0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] l ) {  <CR> Evaluation i8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n8 = new Envelop ( "Taipei" , "Kaohsiung" , i8 ) ;  <CR> n8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String f9 , String L6 , Evaluation U4 ) {  <CR> this . senderAddr = f9 ;  <CR> this . receiverAddr = L6 ;  <CR> this . letter = U4 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String b7 , String x , String K , String u6 , String S8 ) {  <CR> this . title = b7 ;  <CR> this . receiver = x ;  <CR> this . content = K ;  <CR> this . sender = u6 ;  <CR> this . date = S8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object r6 ) {  <CR> Letter j6 = ( Letter ) r6 ;  <CR> if ( this . x > j6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int A2 ) {  <CR> this . x = A2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] E7 ) {  <CR> int z2 ;  <CR> for ( z2 = list . length - 1 ; z2 >= 0 ; z2 -- ) {  <CR> int x8 = z2 ;  <CR> Letter u1 = new Letter ( z2 ) ;  <CR> Letter i2 = new Letter ( x8 - 1 ) ;  <CR> if ( u1 . compareTo ( i2 ) == 1 )  <CR> u1 . display ( z2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int z2 ) {  <CR> list [ z2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 