 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String l1 , String J3 , String M9 , String o0 , String z0 ) {  <CR> super ( l1 , J3 , M9 , o0 , z0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A , String p8 , String t9 , String q1 , String l3 ) {  <CR> super ( A , p8 , t9 , q1 , l3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x9 ) {  <CR> Evaluation q1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m4 = new Envelop ( "Taipei" , "Kaohsiung" , q1 ) ;  <CR> m4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String C0 , String Y3 , Evaluation h9 ) {  <CR> this . senderAddr = C0 ;  <CR> this . receiverAddr = Y3 ;  <CR> this . letter = h9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String M2 , String t1 , String v7 , String f5 , String Z5 ) {  <CR> this . title = M2 ;  <CR> this . receiver = t1 ;  <CR> this . content = v7 ;  <CR> this . sender = f5 ;  <CR> this . date = Z5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] y3 ) {  <CR> int H2 ;  <CR> for ( H2 = list . length - 1 ; H2 >= 0 ; H2 -- ) {  <CR> int m7 = H2 ;  <CR> Letter T3 = new Letter ( H2 ) ;  <CR> Letter p6 = new Letter ( m7 - 1 ) ;  <CR> if ( T3 . compareTo ( p6 ) == 1 )  <CR> T3 . display ( H2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object U ) {  <CR> Letter L3 = ( Letter ) U ;  <CR> if ( this . x > L3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int S8 ) {  <CR> this . x = S8 ;  <CR> }  <CR> public void display ( int H2 ) {  <CR> list [ H2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 