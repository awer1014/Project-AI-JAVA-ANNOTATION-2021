 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A5 , String C9 , String K , String C2 , String M0 ) {  <CR> super ( A5 , C9 , K , C2 , M0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b1 , String d6 , String W2 , String s2 , String p6 ) {  <CR> super ( b1 , d6 , W2 , s2 , p6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] v0 ) {  <CR> Evaluation y0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m8 = new Envelop ( "Taipei" , "Kaohsiung" , y0 ) ;  <CR> m8 . display ( ) ;  <CR> }  <CR> public Envelop ( String q , String X4 , Evaluation z6 ) {  <CR> this . senderAddr = q ;  <CR> this . receiverAddr = X4 ;  <CR> this . letter = z6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String E2 , String J5 , String D , String l9 , String X2 ) {  <CR> this . title = E2 ;  <CR> this . receiver = J5 ;  <CR> this . content = D ;  <CR> this . sender = l9 ;  <CR> this . date = X2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int K5 ) {  <CR> list [ K5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int v4 ) {  <CR> this . x = v4 ;  <CR> }  <CR> public static void main ( String [ ] p0 ) {  <CR> int K5 ;  <CR> for ( K5 = list . length - 1 ; K5 >= 0 ; K5 -- ) {  <CR> int m5 = K5 ;  <CR> Letter D9 = new Letter ( K5 ) ;  <CR> Letter D3 = new Letter ( m5 - 1 ) ;  <CR> if ( D9 . compareTo ( D3 ) == 1 )  <CR> D9 . display ( K5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Y4 ) {  <CR> Letter w0 = ( Letter ) Y4 ;  <CR> if ( this . x > w0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 