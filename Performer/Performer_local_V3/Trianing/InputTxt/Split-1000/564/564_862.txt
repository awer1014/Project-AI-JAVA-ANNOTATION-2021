 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D8 , String E8 , String n9 , String C5 , String P7 ) {  <CR> super ( D8 , E8 , n9 , C5 , P7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j3 , String A5 , String B , String h , String c ) {  <CR> super ( j3 , A5 , B , h , c ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] r ) {  <CR> Evaluation y = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K4 = new Envelop ( "Taipei" , "Kaohsiung" , y ) ;  <CR> K4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String x0 , String d7 , Evaluation m5 ) {  <CR> this . senderAddr = x0 ;  <CR> this . receiverAddr = d7 ;  <CR> this . letter = m5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String A5 , String A , String n , String w0 , String e1 ) {  <CR> this . title = A5 ;  <CR> this . receiver = A ;  <CR> this . content = n ;  <CR> this . sender = w0 ;  <CR> this . date = e1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object l2 ) {  <CR> Letter d1 = ( Letter ) l2 ;  <CR> if ( this . x > d1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int g7 ) {  <CR> list [ g7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u8 ) {  <CR> int g7 ;  <CR> for ( g7 = list . length - 1 ; g7 >= 0 ; g7 -- ) {  <CR> int O4 = g7 ;  <CR> Letter C3 = new Letter ( g7 ) ;  <CR> Letter T4 = new Letter ( O4 - 1 ) ;  <CR> if ( C3 . compareTo ( T4 ) == 1 )  <CR> C3 . display ( g7 ) ;  <CR> }  <CR> }  <CR> Letter ( int D1 ) {  <CR> this . x = D1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 