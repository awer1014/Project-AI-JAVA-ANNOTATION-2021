 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String p2 , String t , String w5 , String H3 , String W7 ) {  <CR> super ( p2 , t , w5 , H3 , W7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w1 , String H , String i2 , String O9 , String g2 ) {  <CR> super ( w1 , H , i2 , O9 , g2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String U3 , String A6 , Evaluation V3 ) {  <CR> this . senderAddr = U3 ;  <CR> this . receiverAddr = A6 ;  <CR> this . letter = V3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] s6 ) {  <CR> Evaluation n7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r5 = new Envelop ( "Taipei" , "Kaohsiung" , n7 ) ;  <CR> r5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String H8 , String F3 , String C2 , String j4 , String v8 ) {  <CR> this . title = H8 ;  <CR> this . receiver = F3 ;  <CR> this . content = C2 ;  <CR> this . sender = j4 ;  <CR> this . date = v8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] n5 ) {  <CR> int i8 ;  <CR> for ( i8 = list . length - 1 ; i8 >= 0 ; i8 -- ) {  <CR> int r5 = i8 ;  <CR> Letter e4 = new Letter ( i8 ) ;  <CR> Letter S = new Letter ( r5 - 1 ) ;  <CR> if ( e4 . compareTo ( S ) == 1 )  <CR> e4 . display ( i8 ) ;  <CR> }  <CR> }  <CR> Letter ( int g0 ) {  <CR> this . x = g0 ;  <CR> }  <CR> public void display ( int i8 ) {  <CR> list [ i8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object I4 ) {  <CR> Letter H = ( Letter ) I4 ;  <CR> if ( this . x > H . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 