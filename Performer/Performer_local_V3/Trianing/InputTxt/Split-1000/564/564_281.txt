 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w7 , String B9 , String C5 , String E4 , String U8 ) {  <CR> super ( w7 , B9 , C5 , E4 , U8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s , String Q8 , String g9 , String c , String Z7 ) {  <CR> super ( s , Q8 , g9 , c , Z7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Q8 ) {  <CR> Evaluation x4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R = new Envelop ( "Taipei" , "Kaohsiung" , x4 ) ;  <CR> R . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String P3 , String E3 , Evaluation W7 ) {  <CR> this . senderAddr = P3 ;  <CR> this . receiverAddr = E3 ;  <CR> this . letter = W7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String x9 , String l5 , String r4 , String p5 , String r0 ) {  <CR> this . title = x9 ;  <CR> this . receiver = l5 ;  <CR> this . content = r4 ;  <CR> this . sender = p5 ;  <CR> this . date = r0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t ) {  <CR> this . x = t ;  <CR> }  <CR> public void display ( int u7 ) {  <CR> list [ u7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] z0 ) {  <CR> int u7 ;  <CR> for ( u7 = list . length - 1 ; u7 >= 0 ; u7 -- ) {  <CR> int O2 = u7 ;  <CR> Letter R5 = new Letter ( u7 ) ;  <CR> Letter c = new Letter ( O2 - 1 ) ;  <CR> if ( R5 . compareTo ( c ) == 1 )  <CR> R5 . display ( u7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object z2 ) {  <CR> Letter y4 = ( Letter ) z2 ;  <CR> if ( this . x > y4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 