 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b0 , String P , String N6 , String K , String P6 ) {  <CR> super ( b0 , P , N6 , K , P6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n1 , String u , String T6 , String Q7 , String M6 ) {  <CR> super ( n1 , u , T6 , Q7 , M6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String M4 , String I6 , Evaluation m8 ) {  <CR> this . senderAddr = M4 ;  <CR> this . receiverAddr = I6 ;  <CR> this . letter = m8 ;  <CR> }  <CR> public static void main ( String [ ] Q5 ) {  <CR> Evaluation N5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B3 = new Envelop ( "Taipei" , "Kaohsiung" , N5 ) ;  <CR> B3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String P2 , String D3 , String k1 , String U7 , String P8 ) {  <CR> this . title = P2 ;  <CR> this . receiver = D3 ;  <CR> this . content = k1 ;  <CR> this . sender = U7 ;  <CR> this . date = P8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int X1 ) {  <CR> this . x = X1 ;  <CR> }  <CR> public int compareTo ( Object K9 ) {  <CR> Letter B3 = ( Letter ) K9 ;  <CR> if ( this . x > B3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] h7 ) {  <CR> int q8 ;  <CR> for ( q8 = list . length - 1 ; q8 >= 0 ; q8 -- ) {  <CR> int E3 = q8 ;  <CR> Letter s0 = new Letter ( q8 ) ;  <CR> Letter s9 = new Letter ( E3 - 1 ) ;  <CR> if ( s0 . compareTo ( s9 ) == 1 )  <CR> s0 . display ( q8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int q8 ) {  <CR> list [ q8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 