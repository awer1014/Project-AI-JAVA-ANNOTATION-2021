 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q , String d3 , String c6 , String i , String W1 ) {  <CR> super ( q , d3 , c6 , i , W1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S5 , String c7 , String A7 , String t4 , String K5 ) {  <CR> super ( S5 , c7 , A7 , t4 , K5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] l9 ) {  <CR> Evaluation n8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F3 = new Envelop ( "Taipei" , "Kaohsiung" , n8 ) ;  <CR> F3 . display ( ) ;  <CR> }  <CR> public Envelop ( String p1 , String i , Evaluation B8 ) {  <CR> this . senderAddr = p1 ;  <CR> this . receiverAddr = i ;  <CR> this . letter = B8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String y2 , String P0 , String z , String o2 , String b1 ) {  <CR> this . title = y2 ;  <CR> this . receiver = P0 ;  <CR> this . content = z ;  <CR> this . sender = o2 ;  <CR> this . date = b1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int Q2 ) {  <CR> this . x = Q2 ;  <CR> }  <CR> public void display ( int L7 ) {  <CR> list [ L7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Z4 ) {  <CR> int L7 ;  <CR> for ( L7 = list . length - 1 ; L7 >= 0 ; L7 -- ) {  <CR> int M2 = L7 ;  <CR> Letter m5 = new Letter ( L7 ) ;  <CR> Letter I7 = new Letter ( M2 - 1 ) ;  <CR> if ( m5 . compareTo ( I7 ) == 1 )  <CR> m5 . display ( L7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object m ) {  <CR> Letter P = ( Letter ) m ;  <CR> if ( this . x > P . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 