 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D8 , String s3 , String a6 , String k5 , String T6 ) {  <CR> super ( D8 , s3 , a6 , k5 , T6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String J0 , String P2 , String y8 , String O1 , String X5 ) {  <CR> super ( J0 , P2 , y8 , O1 , X5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String D , String i3 , Evaluation C6 ) {  <CR> this . senderAddr = D ;  <CR> this . receiverAddr = i3 ;  <CR> this . letter = C6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] A ) {  <CR> Evaluation t5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x7 = new Envelop ( "Taipei" , "Kaohsiung" , t5 ) ;  <CR> x7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String L2 , String H8 , String B2 , String J , String D0 ) {  <CR> this . title = L2 ;  <CR> this . receiver = H8 ;  <CR> this . content = B2 ;  <CR> this . sender = J ;  <CR> this . date = D0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object O6 ) {  <CR> Letter V3 = ( Letter ) O6 ;  <CR> if ( this . x > V3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] N9 ) {  <CR> int Q2 ;  <CR> for ( Q2 = list . length - 1 ; Q2 >= 0 ; Q2 -- ) {  <CR> int B5 = Q2 ;  <CR> Letter F7 = new Letter ( Q2 ) ;  <CR> Letter Y7 = new Letter ( B5 - 1 ) ;  <CR> if ( F7 . compareTo ( Y7 ) == 1 )  <CR> F7 . display ( Q2 ) ;  <CR> }  <CR> }  <CR> Letter ( int L4 ) {  <CR> this . x = L4 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int Q2 ) {  <CR> list [ Q2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 