 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Z4 , String E , String X2 , String X1 , String F ) {  <CR> super ( Z4 , E , X2 , X1 , F ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e0 , String V0 , String U , String P7 , String P0 ) {  <CR> super ( e0 , V0 , U , P7 , P0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String e1 , String f9 , Evaluation f5 ) {  <CR> this . senderAddr = e1 ;  <CR> this . receiverAddr = f9 ;  <CR> this . letter = f5 ;  <CR> }  <CR> public static void main ( String [ ] Y4 ) {  <CR> Evaluation p3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B5 = new Envelop ( "Taipei" , "Kaohsiung" , p3 ) ;  <CR> B5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String u0 , String z , String W3 , String b0 , String C ) {  <CR> this . title = u0 ;  <CR> this . receiver = z ;  <CR> this . content = W3 ;  <CR> this . sender = b0 ;  <CR> this . date = C ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int P0 ) {  <CR> list [ P0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] I0 ) {  <CR> int P0 ;  <CR> for ( P0 = list . length - 1 ; P0 >= 0 ; P0 -- ) {  <CR> int o8 = P0 ;  <CR> Letter B = new Letter ( P0 ) ;  <CR> Letter x8 = new Letter ( o8 - 1 ) ;  <CR> if ( B . compareTo ( x8 ) == 1 )  <CR> B . display ( P0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object e ) {  <CR> Letter S3 = ( Letter ) e ;  <CR> if ( this . x > S3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int T9 ) {  <CR> this . x = T9 ;  <CR> }  <CR> }  <CR>  <EOC> 