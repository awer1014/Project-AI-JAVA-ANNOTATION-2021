 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String p8 , String a4 , String b2 , String k4 , String X3 ) {  <CR> super ( p8 , a4 , b2 , k4 , X3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y9 , String h0 , String g3 , String O8 , String v6 ) {  <CR> super ( y9 , h0 , g3 , O8 , v6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String j8 , String o , Evaluation D5 ) {  <CR> this . senderAddr = j8 ;  <CR> this . receiverAddr = o ;  <CR> this . letter = D5 ;  <CR> }  <CR> public static void main ( String [ ] e0 ) {  <CR> Evaluation Q5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V9 = new Envelop ( "Taipei" , "Kaohsiung" , Q5 ) ;  <CR> V9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String z0 , String Q4 , String j0 , String w9 , String f8 ) {  <CR> this . title = z0 ;  <CR> this . receiver = Q4 ;  <CR> this . content = j0 ;  <CR> this . sender = w9 ;  <CR> this . date = f8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int N4 ) {  <CR> this . x = N4 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int S3 ) {  <CR> list [ S3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p7 ) {  <CR> int S3 ;  <CR> for ( S3 = list . length - 1 ; S3 >= 0 ; S3 -- ) {  <CR> int R5 = S3 ;  <CR> Letter v5 = new Letter ( S3 ) ;  <CR> Letter q = new Letter ( R5 - 1 ) ;  <CR> if ( v5 . compareTo ( q ) == 1 )  <CR> v5 . display ( S3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object q4 ) {  <CR> Letter g7 = ( Letter ) q4 ;  <CR> if ( this . x > g7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 