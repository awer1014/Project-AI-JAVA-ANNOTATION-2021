 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O7 , String D0 , String o , String A0 , String Y ) {  <CR> super ( O7 , D0 , o , A0 , Y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X7 , String A3 , String t9 , String Z2 , String c7 ) {  <CR> super ( X7 , A3 , t9 , Z2 , c7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String V , String h9 , Evaluation W1 ) {  <CR> this . senderAddr = V ;  <CR> this . receiverAddr = h9 ;  <CR> this . letter = W1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] V5 ) {  <CR> Evaluation u7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y1 = new Envelop ( "Taipei" , "Kaohsiung" , u7 ) ;  <CR> Y1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String N3 , String I0 , String p0 , String d4 , String z4 ) {  <CR> this . title = N3 ;  <CR> this . receiver = I0 ;  <CR> this . content = p0 ;  <CR> this . sender = d4 ;  <CR> this . date = z4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int t6 ) {  <CR> list [ t6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A0 ) {  <CR> int t6 ;  <CR> for ( t6 = list . length - 1 ; t6 >= 0 ; t6 -- ) {  <CR> int R0 = t6 ;  <CR> Letter h2 = new Letter ( t6 ) ;  <CR> Letter O1 = new Letter ( R0 - 1 ) ;  <CR> if ( h2 . compareTo ( O1 ) == 1 )  <CR> h2 . display ( t6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object z0 ) {  <CR> Letter s4 = ( Letter ) z0 ;  <CR> if ( this . x > s4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int m2 ) {  <CR> this . x = m2 ;  <CR> }  <CR> }  <CR>  <EOC> 