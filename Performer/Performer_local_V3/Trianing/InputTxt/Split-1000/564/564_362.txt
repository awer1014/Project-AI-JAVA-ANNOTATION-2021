 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String r8 , String p6 , String K5 , String E9 , String h5 ) {  <CR> super ( r8 , p6 , K5 , E9 , h5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R8 , String I6 , String h2 , String A8 , String Y7 ) {  <CR> super ( R8 , I6 , h2 , A8 , Y7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U3 ) {  <CR> Evaluation U7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O6 = new Envelop ( "Taipei" , "Kaohsiung" , U7 ) ;  <CR> O6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String F5 , String y6 , Evaluation e5 ) {  <CR> this . senderAddr = F5 ;  <CR> this . receiverAddr = y6 ;  <CR> this . letter = e5 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String L , String C5 , String X8 , String M4 , String e9 ) {  <CR> this . title = L ;  <CR> this . receiver = C5 ;  <CR> this . content = X8 ;  <CR> this . sender = M4 ;  <CR> this . date = e9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int N1 ) {  <CR> list [ N1 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int Q3 ) {  <CR> this . x = Q3 ;  <CR> }  <CR> public int compareTo ( Object e6 ) {  <CR> Letter t2 = ( Letter ) e6 ;  <CR> if ( this . x > t2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] P9 ) {  <CR> int N1 ;  <CR> for ( N1 = list . length - 1 ; N1 >= 0 ; N1 -- ) {  <CR> int D9 = N1 ;  <CR> Letter M7 = new Letter ( N1 ) ;  <CR> Letter l0 = new Letter ( D9 - 1 ) ;  <CR> if ( M7 . compareTo ( l0 ) == 1 )  <CR> M7 . display ( N1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 