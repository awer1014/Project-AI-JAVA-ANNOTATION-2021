 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H1 , String i2 , String O6 , String U4 , String A2 ) {  <CR> super ( H1 , i2 , O6 , U4 , A2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I0 , String c7 , String X1 , String B7 , String p5 ) {  <CR> super ( I0 , c7 , X1 , B7 , p5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String O9 , String W5 , Evaluation u2 ) {  <CR> this . senderAddr = O9 ;  <CR> this . receiverAddr = W5 ;  <CR> this . letter = u2 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] k4 ) {  <CR> Evaluation X5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P0 = new Envelop ( "Taipei" , "Kaohsiung" , X5 ) ;  <CR> P0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String J3 , String F7 , String c9 , String P1 , String Z2 ) {  <CR> this . title = J3 ;  <CR> this . receiver = F7 ;  <CR> this . content = c9 ;  <CR> this . sender = P1 ;  <CR> this . date = Z2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int z5 ) {  <CR> list [ z5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int D6 ) {  <CR> this . x = D6 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] G1 ) {  <CR> int z5 ;  <CR> for ( z5 = list . length - 1 ; z5 >= 0 ; z5 -- ) {  <CR> int S9 = z5 ;  <CR> Letter a9 = new Letter ( z5 ) ;  <CR> Letter h6 = new Letter ( S9 - 1 ) ;  <CR> if ( a9 . compareTo ( h6 ) == 1 )  <CR> a9 . display ( z5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object J6 ) {  <CR> Letter Z7 = ( Letter ) J6 ;  <CR> if ( this . x > Z7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 