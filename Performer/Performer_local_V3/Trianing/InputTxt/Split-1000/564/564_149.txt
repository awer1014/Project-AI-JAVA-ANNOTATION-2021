 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X2 , String n2 , String M3 , String h4 , String a7 ) {  <CR> super ( X2 , n2 , M3 , h4 , a7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String g4 , String r1 , String q2 , String H3 , String m ) {  <CR> super ( g4 , r1 , q2 , H3 , m ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String y1 , String C1 , Evaluation b5 ) {  <CR> this . senderAddr = y1 ;  <CR> this . receiverAddr = C1 ;  <CR> this . letter = b5 ;  <CR> }  <CR> public static void main ( String [ ] a8 ) {  <CR> Evaluation T3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d4 = new Envelop ( "Taipei" , "Kaohsiung" , T3 ) ;  <CR> d4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String t8 , String U2 , String e7 , String D6 , String o4 ) {  <CR> this . title = t8 ;  <CR> this . receiver = U2 ;  <CR> this . content = e7 ;  <CR> this . sender = D6 ;  <CR> this . date = o4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int J9 ) {  <CR> this . x = J9 ;  <CR> }  <CR> public int compareTo ( Object i0 ) {  <CR> Letter L0 = ( Letter ) i0 ;  <CR> if ( this . x > L0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] X1 ) {  <CR> int D7 ;  <CR> for ( D7 = list . length - 1 ; D7 >= 0 ; D7 -- ) {  <CR> int W5 = D7 ;  <CR> Letter X6 = new Letter ( D7 ) ;  <CR> Letter L = new Letter ( W5 - 1 ) ;  <CR> if ( X6 . compareTo ( L ) == 1 )  <CR> X6 . display ( D7 ) ;  <CR> }  <CR> }  <CR> public void display ( int D7 ) {  <CR> list [ D7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 