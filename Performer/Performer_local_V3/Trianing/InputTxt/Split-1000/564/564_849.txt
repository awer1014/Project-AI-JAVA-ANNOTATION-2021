 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a8 , String J3 , String q4 , String E6 , String N9 ) {  <CR> super ( a8 , J3 , q4 , E6 , N9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S1 , String C3 , String W5 , String L4 , String b2 ) {  <CR> super ( S1 , C3 , W5 , L4 , b2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Y8 , String F3 , Evaluation S4 ) {  <CR> this . senderAddr = Y8 ;  <CR> this . receiverAddr = F3 ;  <CR> this . letter = S4 ;  <CR> }  <CR> public static void main ( String [ ] j9 ) {  <CR> Evaluation V4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J9 = new Envelop ( "Taipei" , "Kaohsiung" , V4 ) ;  <CR> J9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String v9 , String r2 , String f0 , String h6 , String o5 ) {  <CR> this . title = v9 ;  <CR> this . receiver = r2 ;  <CR> this . content = f0 ;  <CR> this . sender = h6 ;  <CR> this . date = o5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] y2 ) {  <CR> int x1 ;  <CR> for ( x1 = list . length - 1 ; x1 >= 0 ; x1 -- ) {  <CR> int E6 = x1 ;  <CR> Letter Z7 = new Letter ( x1 ) ;  <CR> Letter n2 = new Letter ( E6 - 1 ) ;  <CR> if ( Z7 . compareTo ( n2 ) == 1 )  <CR> Z7 . display ( x1 ) ;  <CR> }  <CR> }  <CR> Letter ( int e7 ) {  <CR> this . x = e7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object A3 ) {  <CR> Letter G1 = ( Letter ) A3 ;  <CR> if ( this . x > G1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int x1 ) {  <CR> list [ x1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 