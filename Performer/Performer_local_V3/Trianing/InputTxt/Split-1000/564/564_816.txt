 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w6 , String k4 , String I4 , String i9 , String n4 ) {  <CR> super ( w6 , k4 , I4 , i9 , n4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L4 , String O6 , String z3 , String D4 , String f2 ) {  <CR> super ( L4 , O6 , z3 , D4 , f2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String y2 , String I8 , Evaluation k9 ) {  <CR> this . senderAddr = y2 ;  <CR> this . receiverAddr = I8 ;  <CR> this . letter = k9 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E6 ) {  <CR> Evaluation i7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F1 = new Envelop ( "Taipei" , "Kaohsiung" , i7 ) ;  <CR> F1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String L6 , String X0 , String a , String Z3 , String A5 ) {  <CR> this . title = L6 ;  <CR> this . receiver = X0 ;  <CR> this . content = a ;  <CR> this . sender = Z3 ;  <CR> this . date = A5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t7 ) {  <CR> this . x = t7 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int l7 ) {  <CR> list [ l7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I9 ) {  <CR> int l7 ;  <CR> for ( l7 = list . length - 1 ; l7 >= 0 ; l7 -- ) {  <CR> int J5 = l7 ;  <CR> Letter z = new Letter ( l7 ) ;  <CR> Letter n7 = new Letter ( J5 - 1 ) ;  <CR> if ( z . compareTo ( n7 ) == 1 )  <CR> z . display ( l7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object h8 ) {  <CR> Letter S1 = ( Letter ) h8 ;  <CR> if ( this . x > S1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 