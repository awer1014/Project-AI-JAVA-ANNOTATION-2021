 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g3 , String c , String C3 , String i1 , String L0 ) {  <CR> super ( g3 , c , C3 , i1 , L0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W8 , String e3 , String y5 , String C3 , String n0 ) {  <CR> super ( W8 , e3 , y5 , C3 , n0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] L3 ) {  <CR> Evaluation V1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h = new Envelop ( "Taipei" , "Kaohsiung" , V1 ) ;  <CR> h . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String T9 , String k7 , Evaluation O9 ) {  <CR> this . senderAddr = T9 ;  <CR> this . receiverAddr = k7 ;  <CR> this . letter = O9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String T0 , String n8 , String k1 , String d , String R6 ) {  <CR> this . title = T0 ;  <CR> this . receiver = n8 ;  <CR> this . content = k1 ;  <CR> this . sender = d ;  <CR> this . date = R6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object e1 ) {  <CR> Letter n1 = ( Letter ) e1 ;  <CR> if ( this . x > n1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] A9 ) {  <CR> int h9 ;  <CR> for ( h9 = list . length - 1 ; h9 >= 0 ; h9 -- ) {  <CR> int u7 = h9 ;  <CR> Letter n9 = new Letter ( h9 ) ;  <CR> Letter f4 = new Letter ( u7 - 1 ) ;  <CR> if ( n9 . compareTo ( f4 ) == 1 )  <CR> n9 . display ( h9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int h9 ) {  <CR> list [ h9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int d0 ) {  <CR> this . x = d0 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 