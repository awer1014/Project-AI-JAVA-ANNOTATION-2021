 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h3 , String E6 , String x , String U5 , String m2 ) {  <CR> super ( h3 , E6 , x , U5 , m2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D1 , String x7 , String F3 , String y6 , String l0 ) {  <CR> super ( D1 , x7 , F3 , y6 , l0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String D9 , String V5 , Evaluation P2 ) {  <CR> this . senderAddr = D9 ;  <CR> this . receiverAddr = V5 ;  <CR> this . letter = P2 ;  <CR> }  <CR> public static void main ( String [ ] V7 ) {  <CR> Evaluation A5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f1 = new Envelop ( "Taipei" , "Kaohsiung" , A5 ) ;  <CR> f1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String U6 , String r9 , String s8 , String E5 , String F4 ) {  <CR> this . title = U6 ;  <CR> this . receiver = r9 ;  <CR> this . content = s8 ;  <CR> this . sender = E5 ;  <CR> this . date = F4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] R2 ) {  <CR> int Z4 ;  <CR> for ( Z4 = list . length - 1 ; Z4 >= 0 ; Z4 -- ) {  <CR> int O6 = Z4 ;  <CR> Letter l3 = new Letter ( Z4 ) ;  <CR> Letter n9 = new Letter ( O6 - 1 ) ;  <CR> if ( l3 . compareTo ( n9 ) == 1 )  <CR> l3 . display ( Z4 ) ;  <CR> }  <CR> }  <CR> public void display ( int Z4 ) {  <CR> list [ Z4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object n2 ) {  <CR> Letter l0 = ( Letter ) n2 ;  <CR> if ( this . x > l0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int r2 ) {  <CR> this . x = r2 ;  <CR> }  <CR> }  <CR>  <EOC> 