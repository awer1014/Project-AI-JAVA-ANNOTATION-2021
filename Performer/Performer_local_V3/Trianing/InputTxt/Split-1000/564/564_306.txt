 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L7 , String m9 , String a3 , String Q2 , String i1 ) {  <CR> super ( L7 , m9 , a3 , Q2 , i1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L9 , String o3 , String d5 , String v0 , String V1 ) {  <CR> super ( L9 , o3 , d5 , v0 , V1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J8 ) {  <CR> Evaluation e3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m1 = new Envelop ( "Taipei" , "Kaohsiung" , e3 ) ;  <CR> m1 . display ( ) ;  <CR> }  <CR> public Envelop ( String N0 , String m4 , Evaluation S ) {  <CR> this . senderAddr = N0 ;  <CR> this . receiverAddr = m4 ;  <CR> this . letter = S ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String M6 , String W0 , String T4 , String M2 , String c0 ) {  <CR> this . title = M6 ;  <CR> this . receiver = W0 ;  <CR> this . content = T4 ;  <CR> this . sender = M2 ;  <CR> this . date = c0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int w3 ) {  <CR> this . x = w3 ;  <CR> }  <CR> public static void main ( String [ ] V6 ) {  <CR> int r5 ;  <CR> for ( r5 = list . length - 1 ; r5 >= 0 ; r5 -- ) {  <CR> int V2 = r5 ;  <CR> Letter R = new Letter ( r5 ) ;  <CR> Letter N6 = new Letter ( V2 - 1 ) ;  <CR> if ( R . compareTo ( N6 ) == 1 )  <CR> R . display ( r5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object s0 ) {  <CR> Letter C5 = ( Letter ) s0 ;  <CR> if ( this . x > C5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int r5 ) {  <CR> list [ r5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 