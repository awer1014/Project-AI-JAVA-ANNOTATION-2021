 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L7 , String p3 , String J5 , String A9 , String B2 ) {  <CR> super ( L7 , p3 , J5 , A9 , B2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String P8 , String o0 , String Q9 , String Y0 , String v7 ) {  <CR> super ( P8 , o0 , Q9 , Y0 , v7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] y1 ) {  <CR> Evaluation A7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m5 = new Envelop ( "Taipei" , "Kaohsiung" , A7 ) ;  <CR> m5 . display ( ) ;  <CR> }  <CR> public Envelop ( String d9 , String j0 , Evaluation N0 ) {  <CR> this . senderAddr = d9 ;  <CR> this . receiverAddr = j0 ;  <CR> this . letter = N0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String f7 , String P1 , String T0 , String Q6 , String d0 ) {  <CR> this . title = f7 ;  <CR> this . receiver = P1 ;  <CR> this . content = T0 ;  <CR> this . sender = Q6 ;  <CR> this . date = d0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int x9 ) {  <CR> list [ x9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int H0 ) {  <CR> this . x = H0 ;  <CR> }  <CR> public static void main ( String [ ] E2 ) {  <CR> int x9 ;  <CR> for ( x9 = list . length - 1 ; x9 >= 0 ; x9 -- ) {  <CR> int j3 = x9 ;  <CR> Letter P0 = new Letter ( x9 ) ;  <CR> Letter m4 = new Letter ( j3 - 1 ) ;  <CR> if ( P0 . compareTo ( m4 ) == 1 )  <CR> P0 . display ( x9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object G2 ) {  <CR> Letter F9 = ( Letter ) G2 ;  <CR> if ( this . x > F9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 