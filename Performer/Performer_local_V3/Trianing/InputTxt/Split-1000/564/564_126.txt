 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U , String q7 , String C6 , String t , String I0 ) {  <CR> super ( U , q7 , C6 , t , I0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V4 , String s7 , String D0 , String o3 , String U5 ) {  <CR> super ( V4 , s7 , D0 , o3 , U5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String t , String T , Evaluation w6 ) {  <CR> this . senderAddr = t ;  <CR> this . receiverAddr = T ;  <CR> this . letter = w6 ;  <CR> }  <CR> public static void main ( String [ ] p8 ) {  <CR> Evaluation L7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F0 = new Envelop ( "Taipei" , "Kaohsiung" , L7 ) ;  <CR> F0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String T , String G4 , String c9 , String O4 , String l9 ) {  <CR> this . title = T ;  <CR> this . receiver = G4 ;  <CR> this . content = c9 ;  <CR> this . sender = O4 ;  <CR> this . date = l9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int w8 ) {  <CR> this . x = w8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object u ) {  <CR> Letter B9 = ( Letter ) u ;  <CR> if ( this . x > B9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] l4 ) {  <CR> int I9 ;  <CR> for ( I9 = list . length - 1 ; I9 >= 0 ; I9 -- ) {  <CR> int E6 = I9 ;  <CR> Letter Z5 = new Letter ( I9 ) ;  <CR> Letter a7 = new Letter ( E6 - 1 ) ;  <CR> if ( Z5 . compareTo ( a7 ) == 1 )  <CR> Z5 . display ( I9 ) ;  <CR> }  <CR> }  <CR> public void display ( int I9 ) {  <CR> list [ I9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 