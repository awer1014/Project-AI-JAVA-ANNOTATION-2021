 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q9 , String o2 , String B9 , String A4 , String P8 ) {  <CR> super ( q9 , o2 , B9 , A4 , P8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L2 , String A7 , String o5 , String K7 , String S3 ) {  <CR> super ( L2 , A7 , o5 , K7 , S3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Y7 , String t5 , Evaluation d4 ) {  <CR> this . senderAddr = Y7 ;  <CR> this . receiverAddr = t5 ;  <CR> this . letter = d4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] a5 ) {  <CR> Evaluation C6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J3 = new Envelop ( "Taipei" , "Kaohsiung" , C6 ) ;  <CR> J3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Y7 , String n8 , String j0 , String l1 , String z8 ) {  <CR> this . title = Y7 ;  <CR> this . receiver = n8 ;  <CR> this . content = j0 ;  <CR> this . sender = l1 ;  <CR> this . date = z8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int o5 ) {  <CR> this . x = o5 ;  <CR> }  <CR> public static void main ( String [ ] w ) {  <CR> int p3 ;  <CR> for ( p3 = list . length - 1 ; p3 >= 0 ; p3 -- ) {  <CR> int R6 = p3 ;  <CR> Letter S3 = new Letter ( p3 ) ;  <CR> Letter i1 = new Letter ( R6 - 1 ) ;  <CR> if ( S3 . compareTo ( i1 ) == 1 )  <CR> S3 . display ( p3 ) ;  <CR> }  <CR> }  <CR> public void display ( int p3 ) {  <CR> list [ p3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object d7 ) {  <CR> Letter I2 = ( Letter ) d7 ;  <CR> if ( this . x > I2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 