 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O4 , String P9 , String v9 , String Z8 , String V0 ) {  <CR> super ( O4 , P9 , v9 , Z8 , V0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F8 , String c2 , String Y7 , String Y9 , String w ) {  <CR> super ( F8 , c2 , Y7 , Y9 , w ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] h1 ) {  <CR> Evaluation b0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f7 = new Envelop ( "Taipei" , "Kaohsiung" , b0 ) ;  <CR> f7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String y8 , String T4 , Evaluation x8 ) {  <CR> this . senderAddr = y8 ;  <CR> this . receiverAddr = T4 ;  <CR> this . letter = x8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String o6 , String N0 , String H6 , String M3 , String d4 ) {  <CR> this . title = o6 ;  <CR> this . receiver = N0 ;  <CR> this . content = H6 ;  <CR> this . sender = M3 ;  <CR> this . date = d4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] a3 ) {  <CR> int z4 ;  <CR> for ( z4 = list . length - 1 ; z4 >= 0 ; z4 -- ) {  <CR> int k3 = z4 ;  <CR> Letter m5 = new Letter ( z4 ) ;  <CR> Letter m6 = new Letter ( k3 - 1 ) ;  <CR> if ( m5 . compareTo ( m6 ) == 1 )  <CR> m5 . display ( z4 ) ;  <CR> }  <CR> }  <CR> Letter ( int n4 ) {  <CR> this . x = n4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int z4 ) {  <CR> list [ z4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object J5 ) {  <CR> Letter U7 = ( Letter ) J5 ;  <CR> if ( this . x > U7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 