 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w8 , String w2 , String b1 , String e6 , String Z3 ) {  <CR> super ( w8 , w2 , b1 , e6 , Z3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P4 , String E0 , String n , String l5 , String D4 ) {  <CR> super ( P4 , E0 , n , l5 , D4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b8 ) {  <CR> Evaluation z2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X = new Envelop ( "Taipei" , "Kaohsiung" , z2 ) ;  <CR> X . display ( ) ;  <CR> }  <CR> public Envelop ( String f8 , String i5 , Evaluation J0 ) {  <CR> this . senderAddr = f8 ;  <CR> this . receiverAddr = i5 ;  <CR> this . letter = J0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String g0 , String C7 , String v , String b5 , String Y9 ) {  <CR> this . title = g0 ;  <CR> this . receiver = C7 ;  <CR> this . content = v ;  <CR> this . sender = b5 ;  <CR> this . date = Y9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int B0 ) {  <CR> list [ B0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] r1 ) {  <CR> int B0 ;  <CR> for ( B0 = list . length - 1 ; B0 >= 0 ; B0 -- ) {  <CR> int l1 = B0 ;  <CR> Letter Z1 = new Letter ( B0 ) ;  <CR> Letter l6 = new Letter ( l1 - 1 ) ;  <CR> if ( Z1 . compareTo ( l6 ) == 1 )  <CR> Z1 . display ( B0 ) ;  <CR> }  <CR> }  <CR> Letter ( int K0 ) {  <CR> this . x = K0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object B4 ) {  <CR> Letter D0 = ( Letter ) B4 ;  <CR> if ( this . x > D0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 