 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B3 , String g0 , String S4 , String P , String y2 ) {  <CR> super ( B3 , g0 , S4 , P , y2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J7 , String w7 , String R1 , String i4 , String H4 ) {  <CR> super ( J7 , w7 , R1 , i4 , H4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String J0 , String e6 , Evaluation q5 ) {  <CR> this . senderAddr = J0 ;  <CR> this . receiverAddr = e6 ;  <CR> this . letter = q5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] v5 ) {  <CR> Evaluation c5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q8 = new Envelop ( "Taipei" , "Kaohsiung" , c5 ) ;  <CR> q8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String O8 , String F0 , String q6 , String a6 , String g2 ) {  <CR> this . title = O8 ;  <CR> this . receiver = F0 ;  <CR> this . content = q6 ;  <CR> this . sender = a6 ;  <CR> this . date = g2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int z9 ) {  <CR> this . x = z9 ;  <CR> }  <CR> public int compareTo ( Object q8 ) {  <CR> Letter S2 = ( Letter ) q8 ;  <CR> if ( this . x > S2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int G0 ) {  <CR> list [ G0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] c7 ) {  <CR> int G0 ;  <CR> for ( G0 = list . length - 1 ; G0 >= 0 ; G0 -- ) {  <CR> int v6 = G0 ;  <CR> Letter z2 = new Letter ( G0 ) ;  <CR> Letter D1 = new Letter ( v6 - 1 ) ;  <CR> if ( z2 . compareTo ( D1 ) == 1 )  <CR> z2 . display ( G0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 