 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A5 , String h3 , String f5 , String H8 , String o9 ) {  <CR> super ( A5 , h3 , f5 , H8 , o9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String u8 , String P3 , String U , String h9 , String X ) {  <CR> super ( u8 , P3 , U , h9 , X ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] V1 ) {  <CR> Evaluation V3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D1 = new Envelop ( "Taipei" , "Kaohsiung" , V3 ) ;  <CR> D1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Q4 , String o3 , Evaluation e1 ) {  <CR> this . senderAddr = Q4 ;  <CR> this . receiverAddr = o3 ;  <CR> this . letter = e1 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String F3 , String w6 , String f8 , String S8 , String i0 ) {  <CR> this . title = F3 ;  <CR> this . receiver = w6 ;  <CR> this . content = f8 ;  <CR> this . sender = S8 ;  <CR> this . date = i0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int C9 ) {  <CR> this . x = C9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int h3 ) {  <CR> list [ h3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object k6 ) {  <CR> Letter l9 = ( Letter ) k6 ;  <CR> if ( this . x > l9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] f2 ) {  <CR> int h3 ;  <CR> for ( h3 = list . length - 1 ; h3 >= 0 ; h3 -- ) {  <CR> int n8 = h3 ;  <CR> Letter p3 = new Letter ( h3 ) ;  <CR> Letter L7 = new Letter ( n8 - 1 ) ;  <CR> if ( p3 . compareTo ( L7 ) == 1 )  <CR> p3 . display ( h3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 