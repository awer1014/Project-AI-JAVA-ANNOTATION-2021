 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E4 , String J5 , String y9 , String y0 , String Z1 ) {  <CR> super ( E4 , J5 , y9 , y0 , Z1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n1 , String f5 , String E3 , String R0 , String G5 ) {  <CR> super ( n1 , f5 , E3 , R0 , G5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String a , String C2 , Evaluation g2 ) {  <CR> this . senderAddr = a ;  <CR> this . receiverAddr = C2 ;  <CR> this . letter = g2 ;  <CR> }  <CR> public static void main ( String [ ] m2 ) {  <CR> Evaluation r6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T0 = new Envelop ( "Taipei" , "Kaohsiung" , r6 ) ;  <CR> T0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String X7 , String M8 , String g3 , String y9 , String e7 ) {  <CR> this . title = X7 ;  <CR> this . receiver = M8 ;  <CR> this . content = g3 ;  <CR> this . sender = y9 ;  <CR> this . date = e7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object F ) {  <CR> Letter F3 = ( Letter ) F ;  <CR> if ( this . x > F3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] W0 ) {  <CR> int x5 ;  <CR> for ( x5 = list . length - 1 ; x5 >= 0 ; x5 -- ) {  <CR> int w9 = x5 ;  <CR> Letter U8 = new Letter ( x5 ) ;  <CR> Letter r0 = new Letter ( w9 - 1 ) ;  <CR> if ( U8 . compareTo ( r0 ) == 1 )  <CR> U8 . display ( x5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int x5 ) {  <CR> list [ x5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int i5 ) {  <CR> this . x = i5 ;  <CR> }  <CR> }  <CR>  <EOC> 