 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e3 , String B8 , String l5 , String E1 , String J1 ) {  <CR> super ( e3 , B8 , l5 , E1 , J1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f0 , String K6 , String Q8 , String d1 , String u8 ) {  <CR> super ( f0 , K6 , Q8 , d1 , u8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String X1 , String F2 , Evaluation n4 ) {  <CR> this . senderAddr = X1 ;  <CR> this . receiverAddr = F2 ;  <CR> this . letter = n4 ;  <CR> }  <CR> public static void main ( String [ ] Z2 ) {  <CR> Evaluation D5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i7 = new Envelop ( "Taipei" , "Kaohsiung" , D5 ) ;  <CR> i7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String V7 , String V5 , String f4 , String X6 , String H1 ) {  <CR> this . title = V7 ;  <CR> this . receiver = V5 ;  <CR> this . content = f4 ;  <CR> this . sender = X6 ;  <CR> this . date = H1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] A0 ) {  <CR> int L ;  <CR> for ( L = list . length - 1 ; L >= 0 ; L -- ) {  <CR> int z7 = L ;  <CR> Letter h8 = new Letter ( L ) ;  <CR> Letter R1 = new Letter ( z7 - 1 ) ;  <CR> if ( h8 . compareTo ( R1 ) == 1 )  <CR> h8 . display ( L ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int L ) {  <CR> list [ L ] . Display ( ) ;  <CR> }  <CR> Letter ( int f0 ) {  <CR> this . x = f0 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object m ) {  <CR> Letter z3 = ( Letter ) m ;  <CR> if ( this . x > z3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 