 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h1 , String s6 , String v , String d2 , String y6 ) {  <CR> super ( h1 , s6 , v , d2 , y6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L7 , String S0 , String f4 , String M3 , String M7 ) {  <CR> super ( L7 , S0 , f4 , M3 , M7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String e2 , String U0 , Evaluation h1 ) {  <CR> this . senderAddr = e2 ;  <CR> this . receiverAddr = U0 ;  <CR> this . letter = h1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] M9 ) {  <CR> Evaluation v1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x9 = new Envelop ( "Taipei" , "Kaohsiung" , v1 ) ;  <CR> x9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String J9 , String P1 , String S8 , String d3 , String G0 ) {  <CR> this . title = J9 ;  <CR> this . receiver = P1 ;  <CR> this . content = S8 ;  <CR> this . sender = d3 ;  <CR> this . date = G0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z9 ) {  <CR> int f3 ;  <CR> for ( f3 = list . length - 1 ; f3 >= 0 ; f3 -- ) {  <CR> int B5 = f3 ;  <CR> Letter p9 = new Letter ( f3 ) ;  <CR> Letter R6 = new Letter ( B5 - 1 ) ;  <CR> if ( p9 . compareTo ( R6 ) == 1 )  <CR> p9 . display ( f3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object G3 ) {  <CR> Letter t4 = ( Letter ) G3 ;  <CR> if ( this . x > t4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int e7 ) {  <CR> this . x = e7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int f3 ) {  <CR> list [ f3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 