 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B , String W0 , String d3 , String K9 , String n8 ) {  <CR> super ( B , W0 , d3 , K9 , n8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z0 , String O4 , String p0 , String r0 , String f1 ) {  <CR> super ( z0 , O4 , p0 , r0 , f1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String o3 , String c2 , Evaluation u0 ) {  <CR> this . senderAddr = o3 ;  <CR> this . receiverAddr = c2 ;  <CR> this . letter = u0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o ) {  <CR> Evaluation r6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w6 = new Envelop ( "Taipei" , "Kaohsiung" , r6 ) ;  <CR> w6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String z9 , String v4 , String K , String X , String R9 ) {  <CR> this . title = z9 ;  <CR> this . receiver = v4 ;  <CR> this . content = K ;  <CR> this . sender = X ;  <CR> this . date = R9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] y9 ) {  <CR> int K6 ;  <CR> for ( K6 = list . length - 1 ; K6 >= 0 ; K6 -- ) {  <CR> int h5 = K6 ;  <CR> Letter O = new Letter ( K6 ) ;  <CR> Letter p9 = new Letter ( h5 - 1 ) ;  <CR> if ( O . compareTo ( p9 ) == 1 )  <CR> O . display ( K6 ) ;  <CR> }  <CR> }  <CR> Letter ( int h9 ) {  <CR> this . x = h9 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object C9 ) {  <CR> Letter r9 = ( Letter ) C9 ;  <CR> if ( this . x > r9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int K6 ) {  <CR> list [ K6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 