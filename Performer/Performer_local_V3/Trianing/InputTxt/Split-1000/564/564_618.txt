 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T1 , String j4 , String l1 , String v3 , String Z ) {  <CR> super ( T1 , j4 , l1 , v3 , Z ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a4 , String f2 , String O2 , String i6 , String r4 ) {  <CR> super ( a4 , f2 , O2 , i6 , r4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String c3 , String V3 , Evaluation O2 ) {  <CR> this . senderAddr = c3 ;  <CR> this . receiverAddr = V3 ;  <CR> this . letter = O2 ;  <CR> }  <CR> public static void main ( String [ ] L5 ) {  <CR> Evaluation x3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B = new Envelop ( "Taipei" , "Kaohsiung" , x3 ) ;  <CR> B . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String Y , String w3 , String e , String I6 , String X5 ) {  <CR> this . title = Y ;  <CR> this . receiver = w3 ;  <CR> this . content = e ;  <CR> this . sender = I6 ;  <CR> this . date = X5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int c7 ) {  <CR> this . x = c7 ;  <CR> }  <CR> public int compareTo ( Object X7 ) {  <CR> Letter F5 = ( Letter ) X7 ;  <CR> if ( this . x > F5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int o9 ) {  <CR> list [ o9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C8 ) {  <CR> int o9 ;  <CR> for ( o9 = list . length - 1 ; o9 >= 0 ; o9 -- ) {  <CR> int N8 = o9 ;  <CR> Letter K4 = new Letter ( o9 ) ;  <CR> Letter q3 = new Letter ( N8 - 1 ) ;  <CR> if ( K4 . compareTo ( q3 ) == 1 )  <CR> K4 . display ( o9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 