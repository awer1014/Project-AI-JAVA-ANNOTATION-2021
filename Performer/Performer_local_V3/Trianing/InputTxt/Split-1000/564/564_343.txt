 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b2 , String E9 , String N2 , String V2 , String L0 ) {  <CR> super ( b2 , E9 , N2 , V2 , L0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String s5 , String Y2 , String h2 , String X4 , String k5 ) {  <CR> super ( s5 , Y2 , h2 , X4 , k5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x3 ) {  <CR> Evaluation R3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K3 = new Envelop ( "Taipei" , "Kaohsiung" , R3 ) ;  <CR> K3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String M3 , String t0 , Evaluation U0 ) {  <CR> this . senderAddr = M3 ;  <CR> this . receiverAddr = t0 ;  <CR> this . letter = U0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String E , String x2 , String Z , String u2 , String p3 ) {  <CR> this . title = E ;  <CR> this . receiver = x2 ;  <CR> this . content = Z ;  <CR> this . sender = u2 ;  <CR> this . date = p3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int J7 ) {  <CR> this . x = J7 ;  <CR> }  <CR> public void display ( int h5 ) {  <CR> list [ h5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] o5 ) {  <CR> int h5 ;  <CR> for ( h5 = list . length - 1 ; h5 >= 0 ; h5 -- ) {  <CR> int U = h5 ;  <CR> Letter C7 = new Letter ( h5 ) ;  <CR> Letter i3 = new Letter ( U - 1 ) ;  <CR> if ( C7 . compareTo ( i3 ) == 1 )  <CR> C7 . display ( h5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object R ) {  <CR> Letter M4 = ( Letter ) R ;  <CR> if ( this . x > M4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 