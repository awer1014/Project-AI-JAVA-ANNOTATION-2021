 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String C5 , String K , String G2 , String E9 , String X2 ) {  <CR> super ( C5 , K , G2 , E9 , X2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T3 , String L5 , String E0 , String U1 , String U3 ) {  <CR> super ( T3 , L5 , E0 , U1 , U3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] G0 ) {  <CR> Evaluation P = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P2 = new Envelop ( "Taipei" , "Kaohsiung" , P ) ;  <CR> P2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String M5 , String i6 , Evaluation D2 ) {  <CR> this . senderAddr = M5 ;  <CR> this . receiverAddr = i6 ;  <CR> this . letter = D2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y4 , String F5 , String W9 , String d4 , String U7 ) {  <CR> this . title = Y4 ;  <CR> this . receiver = F5 ;  <CR> this . content = W9 ;  <CR> this . sender = d4 ;  <CR> this . date = U7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object k7 ) {  <CR> Letter D7 = ( Letter ) k7 ;  <CR> if ( this . x > D7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z7 ) {  <CR> int a ;  <CR> for ( a = list . length - 1 ; a >= 0 ; a -- ) {  <CR> int p6 = a ;  <CR> Letter Y7 = new Letter ( a ) ;  <CR> Letter W2 = new Letter ( p6 - 1 ) ;  <CR> if ( Y7 . compareTo ( W2 ) == 1 )  <CR> Y7 . display ( a ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int a ) {  <CR> list [ a ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int S4 ) {  <CR> this . x = S4 ;  <CR> }  <CR> }  <CR>  <EOC> 