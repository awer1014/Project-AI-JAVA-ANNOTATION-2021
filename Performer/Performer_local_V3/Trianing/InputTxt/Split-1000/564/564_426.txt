 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G8 , String x4 , String s2 , String C9 , String h3 ) {  <CR> super ( G8 , x4 , s2 , C9 , h3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F7 , String k9 , String i9 , String y5 , String B4 ) {  <CR> super ( F7 , k9 , i9 , y5 , B4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String a , String c8 , Evaluation O9 ) {  <CR> this . senderAddr = a ;  <CR> this . receiverAddr = c8 ;  <CR> this . letter = O9 ;  <CR> }  <CR> public static void main ( String [ ] h6 ) {  <CR> Evaluation e7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r1 = new Envelop ( "Taipei" , "Kaohsiung" , e7 ) ;  <CR> r1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String w , String N8 , String u0 , String U3 , String F8 ) {  <CR> this . title = w ;  <CR> this . receiver = N8 ;  <CR> this . content = u0 ;  <CR> this . sender = U3 ;  <CR> this . date = F8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object m8 ) {  <CR> Letter N4 = ( Letter ) m8 ;  <CR> if ( this . x > N4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int P ) {  <CR> list [ P ] . Display ( ) ;  <CR> }  <CR> Letter ( int T1 ) {  <CR> this . x = T1 ;  <CR> }  <CR> public static void main ( String [ ] b9 ) {  <CR> int P ;  <CR> for ( P = list . length - 1 ; P >= 0 ; P -- ) {  <CR> int o8 = P ;  <CR> Letter C5 = new Letter ( P ) ;  <CR> Letter s7 = new Letter ( o8 - 1 ) ;  <CR> if ( C5 . compareTo ( s7 ) == 1 )  <CR> C5 . display ( P ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 