 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D4 , String M7 , String y2 , String k4 , String Z0 ) {  <CR> super ( D4 , M7 , y2 , k4 , Z0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h8 , String g4 , String u9 , String Y4 , String p8 ) {  <CR> super ( h8 , g4 , u9 , Y4 , p8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String D , String W6 , Evaluation p5 ) {  <CR> this . senderAddr = D ;  <CR> this . receiverAddr = W6 ;  <CR> this . letter = p5 ;  <CR> }  <CR> public static void main ( String [ ] J8 ) {  <CR> Evaluation X6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J7 = new Envelop ( "Taipei" , "Kaohsiung" , X6 ) ;  <CR> J7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s4 , String V1 , String t9 , String z5 , String h4 ) {  <CR> this . title = s4 ;  <CR> this . receiver = V1 ;  <CR> this . content = t9 ;  <CR> this . sender = z5 ;  <CR> this . date = h4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] y5 ) {  <CR> int R7 ;  <CR> for ( R7 = list . length - 1 ; R7 >= 0 ; R7 -- ) {  <CR> int d0 = R7 ;  <CR> Letter s5 = new Letter ( R7 ) ;  <CR> Letter l6 = new Letter ( d0 - 1 ) ;  <CR> if ( s5 . compareTo ( l6 ) == 1 )  <CR> s5 . display ( R7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object S2 ) {  <CR> Letter H9 = ( Letter ) S2 ;  <CR> if ( this . x > H9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int p3 ) {  <CR> this . x = p3 ;  <CR> }  <CR> public void display ( int R7 ) {  <CR> list [ R7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 