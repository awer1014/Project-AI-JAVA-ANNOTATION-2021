 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String n2 , String e8 , String o , String Z8 , String s6 ) {  <CR> super ( n2 , e8 , o , Z8 , s6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String o4 , String I1 , String e2 , String m3 , String W3 ) {  <CR> super ( o4 , I1 , e2 , m3 , W3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String h4 , String D4 , Evaluation K ) {  <CR> this . senderAddr = h4 ;  <CR> this . receiverAddr = D4 ;  <CR> this . letter = K ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] r4 ) {  <CR> Evaluation o2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q5 = new Envelop ( "Taipei" , "Kaohsiung" , o2 ) ;  <CR> q5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String v7 , String M4 , String x0 , String y9 , String U1 ) {  <CR> this . title = v7 ;  <CR> this . receiver = M4 ;  <CR> this . content = x0 ;  <CR> this . sender = y9 ;  <CR> this . date = U1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object Z3 ) {  <CR> Letter d4 = ( Letter ) Z3 ;  <CR> if ( this . x > d4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int D7 ) {  <CR> list [ D7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q2 ) {  <CR> int D7 ;  <CR> for ( D7 = list . length - 1 ; D7 >= 0 ; D7 -- ) {  <CR> int i6 = D7 ;  <CR> Letter F8 = new Letter ( D7 ) ;  <CR> Letter f0 = new Letter ( i6 - 1 ) ;  <CR> if ( F8 . compareTo ( f0 ) == 1 )  <CR> F8 . display ( D7 ) ;  <CR> }  <CR> }  <CR> Letter ( int C9 ) {  <CR> this . x = C9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 