 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String W5 , String C5 , String n1 , String b7 , String s4 ) {  <CR> super ( W5 , C5 , n1 , b7 , s4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String m0 , String f4 , String g , String l8 , String M4 ) {  <CR> super ( m0 , f4 , g , l8 , M4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String h6 , String P9 , Evaluation i9 ) {  <CR> this . senderAddr = h6 ;  <CR> this . receiverAddr = P9 ;  <CR> this . letter = i9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] y0 ) {  <CR> Evaluation z0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M2 = new Envelop ( "Taipei" , "Kaohsiung" , z0 ) ;  <CR> M2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String o5 , String d9 , String C2 , String b1 , String R9 ) {  <CR> this . title = o5 ;  <CR> this . receiver = d9 ;  <CR> this . content = C2 ;  <CR> this . sender = b1 ;  <CR> this . date = R9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int E8 ) {  <CR> this . x = E8 ;  <CR> }  <CR> public int compareTo ( Object U ) {  <CR> Letter D3 = ( Letter ) U ;  <CR> if ( this . x > D3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] L4 ) {  <CR> int V4 ;  <CR> for ( V4 = list . length - 1 ; V4 >= 0 ; V4 -- ) {  <CR> int T8 = V4 ;  <CR> Letter P5 = new Letter ( V4 ) ;  <CR> Letter u9 = new Letter ( T8 - 1 ) ;  <CR> if ( P5 . compareTo ( u9 ) == 1 )  <CR> P5 . display ( V4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int V4 ) {  <CR> list [ V4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 