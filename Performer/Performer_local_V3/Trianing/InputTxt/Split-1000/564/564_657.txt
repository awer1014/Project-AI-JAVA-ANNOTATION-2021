 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L9 , String k1 , String f , String F9 , String Y2 ) {  <CR> super ( L9 , k1 , f , F9 , Y2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J0 , String G , String j5 , String P8 , String j9 ) {  <CR> super ( J0 , G , j5 , P8 , j9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String t3 , String o8 , Evaluation W7 ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = o8 ;  <CR> this . letter = W7 ;  <CR> }  <CR> public static void main ( String [ ] D0 ) {  <CR> Evaluation o5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A5 = new Envelop ( "Taipei" , "Kaohsiung" , o5 ) ;  <CR> A5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String H8 , String D4 , String q0 , String Z0 , String M4 ) {  <CR> this . title = H8 ;  <CR> this . receiver = D4 ;  <CR> this . content = q0 ;  <CR> this . sender = Z0 ;  <CR> this . date = M4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int r0 ) {  <CR> list [ r0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object a5 ) {  <CR> Letter S0 = ( Letter ) a5 ;  <CR> if ( this . x > S0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int R ) {  <CR> this . x = R ;  <CR> }  <CR> public static void main ( String [ ] V5 ) {  <CR> int r0 ;  <CR> for ( r0 = list . length - 1 ; r0 >= 0 ; r0 -- ) {  <CR> int O1 = r0 ;  <CR> Letter c8 = new Letter ( r0 ) ;  <CR> Letter J = new Letter ( O1 - 1 ) ;  <CR> if ( c8 . compareTo ( J ) == 1 )  <CR> c8 . display ( r0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 