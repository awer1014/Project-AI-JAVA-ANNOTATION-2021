 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b5 , String u0 , String B9 , String d0 , String C6 ) {  <CR> super ( b5 , u0 , B9 , d0 , C6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y6 , String C1 , String u5 , String z6 , String u0 ) {  <CR> super ( Y6 , C1 , u5 , z6 , u0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String P3 , String x6 , Evaluation f6 ) {  <CR> this . senderAddr = P3 ;  <CR> this . receiverAddr = x6 ;  <CR> this . letter = f6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] D2 ) {  <CR> Evaluation g5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b5 = new Envelop ( "Taipei" , "Kaohsiung" , g5 ) ;  <CR> b5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String g7 , String S , String p4 , String i3 , String A1 ) {  <CR> this . title = g7 ;  <CR> this . receiver = S ;  <CR> this . content = p4 ;  <CR> this . sender = i3 ;  <CR> this . date = A1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int w4 ) {  <CR> list [ w4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S ) {  <CR> int w4 ;  <CR> for ( w4 = list . length - 1 ; w4 >= 0 ; w4 -- ) {  <CR> int J2 = w4 ;  <CR> Letter D = new Letter ( w4 ) ;  <CR> Letter m6 = new Letter ( J2 - 1 ) ;  <CR> if ( D . compareTo ( m6 ) == 1 )  <CR> D . display ( w4 ) ;  <CR> }  <CR> }  <CR> Letter ( int W4 ) {  <CR> this . x = W4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object C1 ) {  <CR> Letter J1 = ( Letter ) C1 ;  <CR> if ( this . x > J1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 