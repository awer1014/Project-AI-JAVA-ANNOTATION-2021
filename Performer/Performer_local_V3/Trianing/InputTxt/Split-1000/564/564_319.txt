 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t3 , String P5 , String Q9 , String H8 , String F3 ) {  <CR> super ( t3 , P5 , Q9 , H8 , F3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A6 , String W4 , String T8 , String A8 , String I0 ) {  <CR> super ( A6 , W4 , T8 , A8 , I0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] F ) {  <CR> Evaluation E2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g = new Envelop ( "Taipei" , "Kaohsiung" , E2 ) ;  <CR> g . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String C2 , String Q5 , Evaluation G6 ) {  <CR> this . senderAddr = C2 ;  <CR> this . receiverAddr = Q5 ;  <CR> this . letter = G6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String Z , String d0 , String k0 , String j9 , String d1 ) {  <CR> this . title = Z ;  <CR> this . receiver = d0 ;  <CR> this . content = k0 ;  <CR> this . sender = j9 ;  <CR> this . date = d1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object m2 ) {  <CR> Letter j3 = ( Letter ) m2 ;  <CR> if ( this . x > j3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int H1 ) {  <CR> list [ H1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int z0 ) {  <CR> this . x = z0 ;  <CR> }  <CR> public static void main ( String [ ] U7 ) {  <CR> int H1 ;  <CR> for ( H1 = list . length - 1 ; H1 >= 0 ; H1 -- ) {  <CR> int F9 = H1 ;  <CR> Letter w3 = new Letter ( H1 ) ;  <CR> Letter V8 = new Letter ( F9 - 1 ) ;  <CR> if ( w3 . compareTo ( V8 ) == 1 )  <CR> w3 . display ( H1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 