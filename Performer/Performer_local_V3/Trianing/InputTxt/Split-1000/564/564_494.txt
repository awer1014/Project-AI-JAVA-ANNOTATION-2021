 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q3 , String S0 , String R9 , String c1 , String q5 ) {  <CR> super ( q3 , S0 , R9 , c1 , q5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I9 , String I6 , String R3 , String V0 , String b4 ) {  <CR> super ( I9 , I6 , R3 , V0 , b4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String y2 , String V2 , Evaluation R4 ) {  <CR> this . senderAddr = y2 ;  <CR> this . receiverAddr = V2 ;  <CR> this . letter = R4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Z2 ) {  <CR> Evaluation F5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a = new Envelop ( "Taipei" , "Kaohsiung" , F5 ) ;  <CR> a . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String g2 , String i0 , String P3 , String M6 , String f0 ) {  <CR> this . title = g2 ;  <CR> this . receiver = i0 ;  <CR> this . content = P3 ;  <CR> this . sender = M6 ;  <CR> this . date = f0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int j0 ) {  <CR> list [ j0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object i1 ) {  <CR> Letter u2 = ( Letter ) i1 ;  <CR> if ( this . x > u2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int a5 ) {  <CR> this . x = a5 ;  <CR> }  <CR> public static void main ( String [ ] G ) {  <CR> int j0 ;  <CR> for ( j0 = list . length - 1 ; j0 >= 0 ; j0 -- ) {  <CR> int p3 = j0 ;  <CR> Letter g4 = new Letter ( j0 ) ;  <CR> Letter y0 = new Letter ( p3 - 1 ) ;  <CR> if ( g4 . compareTo ( y0 ) == 1 )  <CR> g4 . display ( j0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 