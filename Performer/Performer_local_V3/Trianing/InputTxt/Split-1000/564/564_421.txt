 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S2 , String z6 , String Q2 , String L3 , String m1 ) {  <CR> super ( S2 , z6 , Q2 , L3 , m1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v5 , String s4 , String E , String o8 , String x ) {  <CR> super ( v5 , s4 , E , o8 , x ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String i6 , String c4 , Evaluation c0 ) {  <CR> this . senderAddr = i6 ;  <CR> this . receiverAddr = c4 ;  <CR> this . letter = c0 ;  <CR> }  <CR> public static void main ( String [ ] j9 ) {  <CR> Evaluation T0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L8 = new Envelop ( "Taipei" , "Kaohsiung" , T0 ) ;  <CR> L8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String A4 , String O4 , String R1 , String I5 , String X8 ) {  <CR> this . title = A4 ;  <CR> this . receiver = O4 ;  <CR> this . content = R1 ;  <CR> this . sender = I5 ;  <CR> this . date = X8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int q4 ) {  <CR> this . x = q4 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object R ) {  <CR> Letter c2 = ( Letter ) R ;  <CR> if ( this . x > c2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int u6 ) {  <CR> list [ u6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o6 ) {  <CR> int u6 ;  <CR> for ( u6 = list . length - 1 ; u6 >= 0 ; u6 -- ) {  <CR> int c6 = u6 ;  <CR> Letter d1 = new Letter ( u6 ) ;  <CR> Letter N7 = new Letter ( c6 - 1 ) ;  <CR> if ( d1 . compareTo ( N7 ) == 1 )  <CR> d1 . display ( u6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 