 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v7 , String r8 , String p0 , String H6 , String x0 ) {  <CR> super ( v7 , r8 , p0 , H6 , x0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D8 , String K1 , String L2 , String I2 , String Y ) {  <CR> super ( D8 , K1 , L2 , I2 , Y ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] p3 ) {  <CR> Evaluation h8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G3 = new Envelop ( "Taipei" , "Kaohsiung" , h8 ) ;  <CR> G3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String M3 , String n9 , Evaluation c9 ) {  <CR> this . senderAddr = M3 ;  <CR> this . receiverAddr = n9 ;  <CR> this . letter = c9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String y9 , String d5 , String j , String V3 , String S4 ) {  <CR> this . title = y9 ;  <CR> this . receiver = d5 ;  <CR> this . content = j ;  <CR> this . sender = V3 ;  <CR> this . date = S4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int T9 ) {  <CR> this . x = T9 ;  <CR> }  <CR> public void display ( int d8 ) {  <CR> list [ d8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] h9 ) {  <CR> int d8 ;  <CR> for ( d8 = list . length - 1 ; d8 >= 0 ; d8 -- ) {  <CR> int G3 = d8 ;  <CR> Letter Q9 = new Letter ( d8 ) ;  <CR> Letter M5 = new Letter ( G3 - 1 ) ;  <CR> if ( Q9 . compareTo ( M5 ) == 1 )  <CR> Q9 . display ( d8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object Q8 ) {  <CR> Letter K = ( Letter ) Q8 ;  <CR> if ( this . x > K . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 