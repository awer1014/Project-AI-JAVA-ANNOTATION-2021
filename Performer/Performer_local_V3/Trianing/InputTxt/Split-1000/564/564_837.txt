 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j0 , String l8 , String t , String k1 , String q5 ) {  <CR> super ( j0 , l8 , t , k1 , q5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B , String j , String P9 , String E7 , String e4 ) {  <CR> super ( B , j , P9 , E7 , e4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] y4 ) {  <CR> Evaluation p7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w = new Envelop ( "Taipei" , "Kaohsiung" , p7 ) ;  <CR> w . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String J8 , String f3 , Evaluation h0 ) {  <CR> this . senderAddr = J8 ;  <CR> this . receiverAddr = f3 ;  <CR> this . letter = h0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String O1 , String W2 , String H1 , String r0 , String h ) {  <CR> this . title = O1 ;  <CR> this . receiver = W2 ;  <CR> this . content = H1 ;  <CR> this . sender = r0 ;  <CR> this . date = h ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] W8 ) {  <CR> int P9 ;  <CR> for ( P9 = list . length - 1 ; P9 >= 0 ; P9 -- ) {  <CR> int R2 = P9 ;  <CR> Letter r2 = new Letter ( P9 ) ;  <CR> Letter s1 = new Letter ( R2 - 1 ) ;  <CR> if ( r2 . compareTo ( s1 ) == 1 )  <CR> r2 . display ( P9 ) ;  <CR> }  <CR> }  <CR> Letter ( int t7 ) {  <CR> this . x = t7 ;  <CR> }  <CR> public void display ( int P9 ) {  <CR> list [ P9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object X ) {  <CR> Letter A0 = ( Letter ) X ;  <CR> if ( this . x > A0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 