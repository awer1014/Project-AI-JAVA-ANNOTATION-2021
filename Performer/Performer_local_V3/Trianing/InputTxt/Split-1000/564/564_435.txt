 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String k8 , String y0 , String N6 , String m7 , String S5 ) {  <CR> super ( k8 , y0 , N6 , m7 , S5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L1 , String M , String o , String s3 , String t0 ) {  <CR> super ( L1 , M , o , s3 , t0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String i7 , String f3 , Evaluation T0 ) {  <CR> this . senderAddr = i7 ;  <CR> this . receiverAddr = f3 ;  <CR> this . letter = T0 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] R7 ) {  <CR> Evaluation A6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w6 = new Envelop ( "Taipei" , "Kaohsiung" , A6 ) ;  <CR> w6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String C3 , String v0 , String q , String x4 , String v3 ) {  <CR> this . title = C3 ;  <CR> this . receiver = v0 ;  <CR> this . content = q ;  <CR> this . sender = x4 ;  <CR> this . date = v3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] a7 ) {  <CR> int t ;  <CR> for ( t = list . length - 1 ; t >= 0 ; t -- ) {  <CR> int u7 = t ;  <CR> Letter C2 = new Letter ( t ) ;  <CR> Letter b6 = new Letter ( u7 - 1 ) ;  <CR> if ( C2 . compareTo ( b6 ) == 1 )  <CR> C2 . display ( t ) ;  <CR> }  <CR> }  <CR> Letter ( int W5 ) {  <CR> this . x = W5 ;  <CR> }  <CR> public int compareTo ( Object t7 ) {  <CR> Letter w3 = ( Letter ) t7 ;  <CR> if ( this . x > w3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int t ) {  <CR> list [ t ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 