 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String s3 , String H , String I6 , String x2 , String O9 ) {  <CR> super ( s3 , H , I6 , x2 , O9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L9 , String W8 , String c5 , String T5 , String W1 ) {  <CR> super ( L9 , W8 , c5 , T5 , W1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] K3 ) {  <CR> Evaluation L1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L6 = new Envelop ( "Taipei" , "Kaohsiung" , L1 ) ;  <CR> L6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String c , String F8 , Evaluation j0 ) {  <CR> this . senderAddr = c ;  <CR> this . receiverAddr = F8 ;  <CR> this . letter = j0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String p5 , String E4 , String R8 , String D , String U5 ) {  <CR> this . title = p5 ;  <CR> this . receiver = E4 ;  <CR> this . content = R8 ;  <CR> this . sender = D ;  <CR> this . date = U5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object y7 ) {  <CR> Letter V4 = ( Letter ) y7 ;  <CR> if ( this . x > V4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int H1 ) {  <CR> this . x = H1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] N0 ) {  <CR> int C ;  <CR> for ( C = list . length - 1 ; C >= 0 ; C -- ) {  <CR> int J1 = C ;  <CR> Letter T5 = new Letter ( C ) ;  <CR> Letter y9 = new Letter ( J1 - 1 ) ;  <CR> if ( T5 . compareTo ( y9 ) == 1 )  <CR> T5 . display ( C ) ;  <CR> }  <CR> }  <CR> public void display ( int C ) {  <CR> list [ C ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 