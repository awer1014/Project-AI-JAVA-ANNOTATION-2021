 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y0 , String A9 , String U2 , String Y8 , String e3 ) {  <CR> super ( y0 , A9 , U2 , Y8 , e3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v2 , String E8 , String t1 , String V5 , String p8 ) {  <CR> super ( v2 , E8 , t1 , V5 , p8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String n9 , String g , Evaluation u7 ) {  <CR> this . senderAddr = n9 ;  <CR> this . receiverAddr = g ;  <CR> this . letter = u7 ;  <CR> }  <CR> public static void main ( String [ ] I3 ) {  <CR> Evaluation T3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t6 = new Envelop ( "Taipei" , "Kaohsiung" , T3 ) ;  <CR> t6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String o9 , String X6 , String X3 , String P9 , String q4 ) {  <CR> this . title = o9 ;  <CR> this . receiver = X6 ;  <CR> this . content = X3 ;  <CR> this . sender = P9 ;  <CR> this . date = q4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int S8 ) {  <CR> this . x = S8 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] x9 ) {  <CR> int E6 ;  <CR> for ( E6 = list . length - 1 ; E6 >= 0 ; E6 -- ) {  <CR> int l4 = E6 ;  <CR> Letter r1 = new Letter ( E6 ) ;  <CR> Letter d0 = new Letter ( l4 - 1 ) ;  <CR> if ( r1 . compareTo ( d0 ) == 1 )  <CR> r1 . display ( E6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int E6 ) {  <CR> list [ E6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object P3 ) {  <CR> Letter X0 = ( Letter ) P3 ;  <CR> if ( this . x > X0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 