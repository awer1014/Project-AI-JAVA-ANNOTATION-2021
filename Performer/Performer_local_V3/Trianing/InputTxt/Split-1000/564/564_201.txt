 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M7 , String H8 , String G9 , String D3 , String e1 ) {  <CR> super ( M7 , H8 , G9 , D3 , e1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b9 , String n3 , String P9 , String j , String D8 ) {  <CR> super ( b9 , n3 , P9 , j , D8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] S0 ) {  <CR> Evaluation a5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A2 = new Envelop ( "Taipei" , "Kaohsiung" , a5 ) ;  <CR> A2 . display ( ) ;  <CR> }  <CR> public Envelop ( String w2 , String I8 , Evaluation i3 ) {  <CR> this . senderAddr = w2 ;  <CR> this . receiverAddr = I8 ;  <CR> this . letter = i3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Z4 , String J2 , String s6 , String q1 , String T5 ) {  <CR> this . title = Z4 ;  <CR> this . receiver = J2 ;  <CR> this . content = s6 ;  <CR> this . sender = q1 ;  <CR> this . date = T5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int p2 ) {  <CR> this . x = p2 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object x8 ) {  <CR> Letter j3 = ( Letter ) x8 ;  <CR> if ( this . x > j3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] G4 ) {  <CR> int X0 ;  <CR> for ( X0 = list . length - 1 ; X0 >= 0 ; X0 -- ) {  <CR> int X7 = X0 ;  <CR> Letter C5 = new Letter ( X0 ) ;  <CR> Letter N1 = new Letter ( X7 - 1 ) ;  <CR> if ( C5 . compareTo ( N1 ) == 1 )  <CR> C5 . display ( X0 ) ;  <CR> }  <CR> }  <CR> public void display ( int X0 ) {  <CR> list [ X0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 