 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X8 , String l8 , String z8 , String I6 , String W1 ) {  <CR> super ( X8 , l8 , z8 , I6 , W1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r2 , String v6 , String M7 , String A4 , String q3 ) {  <CR> super ( r2 , v6 , M7 , A4 , q3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String M4 , String f1 , Evaluation F ) {  <CR> this . senderAddr = M4 ;  <CR> this . receiverAddr = f1 ;  <CR> this . letter = F ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] x1 ) {  <CR> Evaluation b6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c4 = new Envelop ( "Taipei" , "Kaohsiung" , b6 ) ;  <CR> c4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String r3 , String X1 , String O4 , String i , String Z1 ) {  <CR> this . title = r3 ;  <CR> this . receiver = X1 ;  <CR> this . content = O4 ;  <CR> this . sender = i ;  <CR> this . date = Z1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int O5 ) {  <CR> list [ O5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int s6 ) {  <CR> this . x = s6 ;  <CR> }  <CR> public int compareTo ( Object Q6 ) {  <CR> Letter U0 = ( Letter ) Q6 ;  <CR> if ( this . x > U0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] b2 ) {  <CR> int O5 ;  <CR> for ( O5 = list . length - 1 ; O5 >= 0 ; O5 -- ) {  <CR> int g8 = O5 ;  <CR> Letter m0 = new Letter ( O5 ) ;  <CR> Letter U7 = new Letter ( g8 - 1 ) ;  <CR> if ( m0 . compareTo ( U7 ) == 1 )  <CR> m0 . display ( O5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 