 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p , String j8 , String K0 , String e9 , String I6 ) {  <CR> super ( p , j8 , K0 , e9 , I6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String c0 , String w4 , String B1 , String m0 , String Q ) {  <CR> super ( c0 , w4 , B1 , m0 , Q ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] b ) {  <CR> Evaluation I7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k = new Envelop ( "Taipei" , "Kaohsiung" , I7 ) ;  <CR> k . display ( ) ;  <CR> }  <CR> public Envelop ( String K5 , String X6 , Evaluation A1 ) {  <CR> this . senderAddr = K5 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = A1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String K1 , String N9 , String Y , String U7 , String u9 ) {  <CR> this . title = K1 ;  <CR> this . receiver = N9 ;  <CR> this . content = Y ;  <CR> this . sender = U7 ;  <CR> this . date = u9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int k3 ) {  <CR> list [ k3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int V9 ) {  <CR> this . x = V9 ;  <CR> }  <CR> public int compareTo ( Object j0 ) {  <CR> Letter l5 = ( Letter ) j0 ;  <CR> if ( this . x > l5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] R8 ) {  <CR> int k3 ;  <CR> for ( k3 = list . length - 1 ; k3 >= 0 ; k3 -- ) {  <CR> int Y8 = k3 ;  <CR> Letter Y0 = new Letter ( k3 ) ;  <CR> Letter z2 = new Letter ( Y8 - 1 ) ;  <CR> if ( Y0 . compareTo ( z2 ) == 1 )  <CR> Y0 . display ( k3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 