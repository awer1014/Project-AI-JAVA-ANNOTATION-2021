 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String s1 , String i8 , String j3 , String R3 , String F0 ) {  <CR> super ( s1 , i8 , j3 , R3 , F0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s7 , String L8 , String i , String M , String i2 ) {  <CR> super ( s7 , L8 , i , M , i2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] a5 ) {  <CR> Evaluation m4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P7 = new Envelop ( "Taipei" , "Kaohsiung" , m4 ) ;  <CR> P7 . display ( ) ;  <CR> }  <CR> public Envelop ( String D3 , String T4 , Evaluation C6 ) {  <CR> this . senderAddr = D3 ;  <CR> this . receiverAddr = T4 ;  <CR> this . letter = C6 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String k3 , String J9 , String W0 , String Y5 , String q ) {  <CR> this . title = k3 ;  <CR> this . receiver = J9 ;  <CR> this . content = W0 ;  <CR> this . sender = Y5 ;  <CR> this . date = q ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object b4 ) {  <CR> Letter E3 = ( Letter ) b4 ;  <CR> if ( this . x > E3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i5 ) {  <CR> list [ i5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int N8 ) {  <CR> this . x = N8 ;  <CR> }  <CR> public static void main ( String [ ] m2 ) {  <CR> int i5 ;  <CR> for ( i5 = list . length - 1 ; i5 >= 0 ; i5 -- ) {  <CR> int Z2 = i5 ;  <CR> Letter j7 = new Letter ( i5 ) ;  <CR> Letter F1 = new Letter ( Z2 - 1 ) ;  <CR> if ( j7 . compareTo ( F1 ) == 1 )  <CR> j7 . display ( i5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 