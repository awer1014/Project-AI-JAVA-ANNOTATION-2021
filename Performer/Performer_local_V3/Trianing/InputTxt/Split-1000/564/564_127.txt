 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M0 , String R6 , String G4 , String N4 , String P2 ) {  <CR> super ( M0 , R6 , G4 , N4 , P2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r4 , String k7 , String s4 , String w0 , String g6 ) {  <CR> super ( r4 , k7 , s4 , w0 , g6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String T8 , String e2 , Evaluation t1 ) {  <CR> this . senderAddr = T8 ;  <CR> this . receiverAddr = e2 ;  <CR> this . letter = t1 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] K9 ) {  <CR> Evaluation t2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A0 = new Envelop ( "Taipei" , "Kaohsiung" , t2 ) ;  <CR> A0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String w4 , String C6 , String A5 , String R7 , String n5 ) {  <CR> this . title = w4 ;  <CR> this . receiver = C6 ;  <CR> this . content = A5 ;  <CR> this . sender = R7 ;  <CR> this . date = n5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object K ) {  <CR> Letter r1 = ( Letter ) K ;  <CR> if ( this . x > r1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int e3 ) {  <CR> list [ e3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x5 ) {  <CR> this . x = x5 ;  <CR> }  <CR> public static void main ( String [ ] m4 ) {  <CR> int e3 ;  <CR> for ( e3 = list . length - 1 ; e3 >= 0 ; e3 -- ) {  <CR> int J2 = e3 ;  <CR> Letter A1 = new Letter ( e3 ) ;  <CR> Letter G6 = new Letter ( J2 - 1 ) ;  <CR> if ( A1 . compareTo ( G6 ) == 1 )  <CR> A1 . display ( e3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 