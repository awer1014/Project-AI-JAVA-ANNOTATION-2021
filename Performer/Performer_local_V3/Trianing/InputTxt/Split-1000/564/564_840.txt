 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String g1 , String o3 , String N0 , String j6 , String v6 ) {  <CR> super ( g1 , o3 , N0 , j6 , v6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String N , String M5 , String h2 , String W1 , String r8 ) {  <CR> super ( N , M5 , h2 , W1 , r8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Z1 ) {  <CR> Evaluation v = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n = new Envelop ( "Taipei" , "Kaohsiung" , v ) ;  <CR> n . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String v0 , String J0 , Evaluation o7 ) {  <CR> this . senderAddr = v0 ;  <CR> this . receiverAddr = J0 ;  <CR> this . letter = o7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String j6 , String G3 , String h3 , String w , String N3 ) {  <CR> this . title = j6 ;  <CR> this . receiver = G3 ;  <CR> this . content = h3 ;  <CR> this . sender = w ;  <CR> this . date = N3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int l7 ) {  <CR> this . x = l7 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object H3 ) {  <CR> Letter o = ( Letter ) H3 ;  <CR> if ( this . x > o . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] f0 ) {  <CR> int I5 ;  <CR> for ( I5 = list . length - 1 ; I5 >= 0 ; I5 -- ) {  <CR> int U2 = I5 ;  <CR> Letter a9 = new Letter ( I5 ) ;  <CR> Letter a = new Letter ( U2 - 1 ) ;  <CR> if ( a9 . compareTo ( a ) == 1 )  <CR> a9 . display ( I5 ) ;  <CR> }  <CR> }  <CR> public void display ( int I5 ) {  <CR> list [ I5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 