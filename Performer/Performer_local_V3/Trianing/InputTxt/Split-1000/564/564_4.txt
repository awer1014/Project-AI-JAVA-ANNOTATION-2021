 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String K5 , String k0 , String j0 , String a4 , String Z8 ) {  <CR> super ( K5 , k0 , j0 , a4 , Z8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i9 , String q3 , String s8 , String B2 , String j5 ) {  <CR> super ( i9 , q3 , s8 , B2 , j5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String A9 , String X5 , Evaluation j6 ) {  <CR> this . senderAddr = A9 ;  <CR> this . receiverAddr = X5 ;  <CR> this . letter = j6 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] a8 ) {  <CR> Evaluation E0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x3 = new Envelop ( "Taipei" , "Kaohsiung" , E0 ) ;  <CR> x3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String o9 , String s7 , String N9 , String G1 , String P4 ) {  <CR> this . title = o9 ;  <CR> this . receiver = s7 ;  <CR> this . content = N9 ;  <CR> this . sender = G1 ;  <CR> this . date = P4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object l4 ) {  <CR> Letter I4 = ( Letter ) l4 ;  <CR> if ( this . x > I4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int P ) {  <CR> this . x = P ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] r0 ) {  <CR> int d9 ;  <CR> for ( d9 = list . length - 1 ; d9 >= 0 ; d9 -- ) {  <CR> int I3 = d9 ;  <CR> Letter L5 = new Letter ( d9 ) ;  <CR> Letter H8 = new Letter ( I3 - 1 ) ;  <CR> if ( L5 . compareTo ( H8 ) == 1 )  <CR> L5 . display ( d9 ) ;  <CR> }  <CR> }  <CR> public void display ( int d9 ) {  <CR> list [ d9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 