 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B8 , String Y , String R1 , String e7 , String p7 ) {  <CR> super ( B8 , Y , R1 , e7 , p7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O6 , String h0 , String q4 , String T , String n1 ) {  <CR> super ( O6 , h0 , q4 , T , n1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String q1 , String k6 , Evaluation Q7 ) {  <CR> this . senderAddr = q1 ;  <CR> this . receiverAddr = k6 ;  <CR> this . letter = Q7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Z6 ) {  <CR> Evaluation P8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P7 = new Envelop ( "Taipei" , "Kaohsiung" , P8 ) ;  <CR> P7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String I7 , String Q7 , String b5 , String E7 , String B3 ) {  <CR> this . title = I7 ;  <CR> this . receiver = Q7 ;  <CR> this . content = b5 ;  <CR> this . sender = E7 ;  <CR> this . date = B3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int o5 ) {  <CR> list [ o5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object i6 ) {  <CR> Letter g7 = ( Letter ) i6 ;  <CR> if ( this . x > g7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int G3 ) {  <CR> this . x = G3 ;  <CR> }  <CR> public static void main ( String [ ] q5 ) {  <CR> int o5 ;  <CR> for ( o5 = list . length - 1 ; o5 >= 0 ; o5 -- ) {  <CR> int C4 = o5 ;  <CR> Letter A7 = new Letter ( o5 ) ;  <CR> Letter i5 = new Letter ( C4 - 1 ) ;  <CR> if ( A7 . compareTo ( i5 ) == 1 )  <CR> A7 . display ( o5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 