 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c6 , String M , String q5 , String Y1 , String s0 ) {  <CR> super ( c6 , M , q5 , Y1 , s0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S2 , String H0 , String o5 , String g4 , String x1 ) {  <CR> super ( S2 , H0 , o5 , g4 , x1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String m4 , String A7 , Evaluation W0 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = A7 ;  <CR> this . letter = W0 ;  <CR> }  <CR> public static void main ( String [ ] Y3 ) {  <CR> Evaluation g4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k3 = new Envelop ( "Taipei" , "Kaohsiung" , g4 ) ;  <CR> k3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String D4 , String H7 , String A4 , String U , String y8 ) {  <CR> this . title = D4 ;  <CR> this . receiver = H7 ;  <CR> this . content = A4 ;  <CR> this . sender = U ;  <CR> this . date = y8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int x1 ) {  <CR> this . x = x1 ;  <CR> }  <CR> public void display ( int x4 ) {  <CR> list [ x4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object d6 ) {  <CR> Letter H0 = ( Letter ) d6 ;  <CR> if ( this . x > H0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] A7 ) {  <CR> int x4 ;  <CR> for ( x4 = list . length - 1 ; x4 >= 0 ; x4 -- ) {  <CR> int Z0 = x4 ;  <CR> Letter O7 = new Letter ( x4 ) ;  <CR> Letter o1 = new Letter ( Z0 - 1 ) ;  <CR> if ( O7 . compareTo ( o1 ) == 1 )  <CR> O7 . display ( x4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 