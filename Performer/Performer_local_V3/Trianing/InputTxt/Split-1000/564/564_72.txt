 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Q9 , String p8 , String v7 , String l5 , String X8 ) {  <CR> super ( Q9 , p8 , v7 , l5 , X8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String N5 , String k3 , String B0 , String F7 , String d7 ) {  <CR> super ( N5 , k3 , B0 , F7 , d7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] P6 ) {  <CR> Evaluation H8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d3 = new Envelop ( "Taipei" , "Kaohsiung" , H8 ) ;  <CR> d3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String t6 , String b6 , Evaluation y1 ) {  <CR> this . senderAddr = t6 ;  <CR> this . receiverAddr = b6 ;  <CR> this . letter = y1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String f , String y1 , String V4 , String q9 , String U5 ) {  <CR> this . title = f ;  <CR> this . receiver = y1 ;  <CR> this . content = V4 ;  <CR> this . sender = q9 ;  <CR> this . date = U5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object L1 ) {  <CR> Letter L6 = ( Letter ) L1 ;  <CR> if ( this . x > L6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int Z2 ) {  <CR> list [ Z2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int A2 ) {  <CR> this . x = A2 ;  <CR> }  <CR> public static void main ( String [ ] g2 ) {  <CR> int Z2 ;  <CR> for ( Z2 = list . length - 1 ; Z2 >= 0 ; Z2 -- ) {  <CR> int Z9 = Z2 ;  <CR> Letter W0 = new Letter ( Z2 ) ;  <CR> Letter q1 = new Letter ( Z9 - 1 ) ;  <CR> if ( W0 . compareTo ( q1 ) == 1 )  <CR> W0 . display ( Z2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 