 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p1 , String y5 , String a9 , String i5 , String n0 ) {  <CR> super ( p1 , y5 , a9 , i5 , n0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q3 , String q2 , String T9 , String X2 , String o9 ) {  <CR> super ( q3 , q2 , T9 , X2 , o9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v7 ) {  <CR> Evaluation H1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c1 = new Envelop ( "Taipei" , "Kaohsiung" , H1 ) ;  <CR> c1 . display ( ) ;  <CR> }  <CR> public Envelop ( String S1 , String j4 , Evaluation l4 ) {  <CR> this . senderAddr = S1 ;  <CR> this . receiverAddr = j4 ;  <CR> this . letter = l4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String q8 , String Y7 , String O1 , String O2 , String T9 ) {  <CR> this . title = q8 ;  <CR> this . receiver = Y7 ;  <CR> this . content = O1 ;  <CR> this . sender = O2 ;  <CR> this . date = T9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int G6 ) {  <CR> list [ G6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A0 ) {  <CR> int G6 ;  <CR> for ( G6 = list . length - 1 ; G6 >= 0 ; G6 -- ) {  <CR> int V2 = G6 ;  <CR> Letter L4 = new Letter ( G6 ) ;  <CR> Letter h4 = new Letter ( V2 - 1 ) ;  <CR> if ( L4 . compareTo ( h4 ) == 1 )  <CR> L4 . display ( G6 ) ;  <CR> }  <CR> }  <CR> Letter ( int j8 ) {  <CR> this . x = j8 ;  <CR> }  <CR> public int compareTo ( Object Y1 ) {  <CR> Letter Y = ( Letter ) Y1 ;  <CR> if ( this . x > Y . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 