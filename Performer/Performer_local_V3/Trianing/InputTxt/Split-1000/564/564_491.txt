 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String e , String s9 , String l1 , String s3 , String x3 ) {  <CR> super ( e , s9 , l1 , s3 , x3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q8 , String H2 , String j3 , String l0 , String b6 ) {  <CR> super ( Q8 , H2 , j3 , l0 , b6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] c5 ) {  <CR> Evaluation u8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R5 = new Envelop ( "Taipei" , "Kaohsiung" , u8 ) ;  <CR> R5 . display ( ) ;  <CR> }  <CR> public Envelop ( String h0 , String Y7 , Evaluation Z0 ) {  <CR> this . senderAddr = h0 ;  <CR> this . receiverAddr = Y7 ;  <CR> this . letter = Z0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String V9 , String c7 , String q , String e7 , String f6 ) {  <CR> this . title = V9 ;  <CR> this . receiver = c7 ;  <CR> this . content = q ;  <CR> this . sender = e7 ;  <CR> this . date = f6 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] c8 ) {  <CR> int H6 ;  <CR> for ( H6 = list . length - 1 ; H6 >= 0 ; H6 -- ) {  <CR> int W3 = H6 ;  <CR> Letter k6 = new Letter ( H6 ) ;  <CR> Letter V2 = new Letter ( W3 - 1 ) ;  <CR> if ( k6 . compareTo ( V2 ) == 1 )  <CR> k6 . display ( H6 ) ;  <CR> }  <CR> }  <CR> Letter ( int R ) {  <CR> this . x = R ;  <CR> }  <CR> public int compareTo ( Object J2 ) {  <CR> Letter L1 = ( Letter ) J2 ;  <CR> if ( this . x > L1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int H6 ) {  <CR> list [ H6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 