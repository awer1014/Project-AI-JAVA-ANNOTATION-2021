 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X9 , String E1 , String U , String h7 , String o6 ) {  <CR> super ( X9 , E1 , U , h7 , o6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S2 , String r8 , String W7 , String R8 , String W6 ) {  <CR> super ( S2 , r8 , W7 , R8 , W6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] N9 ) {  <CR> Evaluation f8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b6 = new Envelop ( "Taipei" , "Kaohsiung" , f8 ) ;  <CR> b6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String w , String c5 , Evaluation J2 ) {  <CR> this . senderAddr = w ;  <CR> this . receiverAddr = c5 ;  <CR> this . letter = J2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String z8 , String q5 , String N4 , String t0 , String l6 ) {  <CR> this . title = z8 ;  <CR> this . receiver = q5 ;  <CR> this . content = N4 ;  <CR> this . sender = t0 ;  <CR> this . date = l6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int H2 ) {  <CR> list [ H2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object V1 ) {  <CR> Letter u9 = ( Letter ) V1 ;  <CR> if ( this . x > u9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int b0 ) {  <CR> this . x = b0 ;  <CR> }  <CR> public static void main ( String [ ] d2 ) {  <CR> int H2 ;  <CR> for ( H2 = list . length - 1 ; H2 >= 0 ; H2 -- ) {  <CR> int N = H2 ;  <CR> Letter z6 = new Letter ( H2 ) ;  <CR> Letter g7 = new Letter ( N - 1 ) ;  <CR> if ( z6 . compareTo ( g7 ) == 1 )  <CR> z6 . display ( H2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 