 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G5 , String Q6 , String w0 , String k0 , String N2 ) {  <CR> super ( G5 , Q6 , w0 , k0 , N2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String s5 , String G7 , String R4 , String x7 , String W3 ) {  <CR> super ( s5 , G7 , R4 , x7 , W3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String x6 , String y0 , Evaluation g5 ) {  <CR> this . senderAddr = x6 ;  <CR> this . receiverAddr = y0 ;  <CR> this . letter = g5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] R7 ) {  <CR> Evaluation r4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D4 = new Envelop ( "Taipei" , "Kaohsiung" , r4 ) ;  <CR> D4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String S5 , String A5 , String C9 , String Y4 , String B4 ) {  <CR> this . title = S5 ;  <CR> this . receiver = A5 ;  <CR> this . content = C9 ;  <CR> this . sender = Y4 ;  <CR> this . date = B4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int q8 ) {  <CR> list [ q8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int u7 ) {  <CR> this . x = u7 ;  <CR> }  <CR> public int compareTo ( Object G9 ) {  <CR> Letter M0 = ( Letter ) G9 ;  <CR> if ( this . x > M0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] Y ) {  <CR> int q8 ;  <CR> for ( q8 = list . length - 1 ; q8 >= 0 ; q8 -- ) {  <CR> int I6 = q8 ;  <CR> Letter Y9 = new Letter ( q8 ) ;  <CR> Letter E2 = new Letter ( I6 - 1 ) ;  <CR> if ( Y9 . compareTo ( E2 ) == 1 )  <CR> Y9 . display ( q8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 