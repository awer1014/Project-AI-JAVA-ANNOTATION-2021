 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y , String R4 , String S6 , String a , String s8 ) {  <CR> super ( y , R4 , S6 , a , s8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V1 , String d1 , String g5 , String Q6 , String j ) {  <CR> super ( V1 , d1 , g5 , Q6 , j ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P1 ) {  <CR> Evaluation f = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y2 = new Envelop ( "Taipei" , "Kaohsiung" , f ) ;  <CR> y2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String c1 , String T8 , Evaluation f2 ) {  <CR> this . senderAddr = c1 ;  <CR> this . receiverAddr = T8 ;  <CR> this . letter = f2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String D4 , String s9 , String S2 , String m6 , String p7 ) {  <CR> this . title = D4 ;  <CR> this . receiver = s9 ;  <CR> this . content = S2 ;  <CR> this . sender = m6 ;  <CR> this . date = p7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int t8 ) {  <CR> list [ t8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J9 ) {  <CR> int t8 ;  <CR> for ( t8 = list . length - 1 ; t8 >= 0 ; t8 -- ) {  <CR> int g = t8 ;  <CR> Letter Q5 = new Letter ( t8 ) ;  <CR> Letter l8 = new Letter ( g - 1 ) ;  <CR> if ( Q5 . compareTo ( l8 ) == 1 )  <CR> Q5 . display ( t8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object w4 ) {  <CR> Letter H9 = ( Letter ) w4 ;  <CR> if ( this . x > H9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int f5 ) {  <CR> this . x = f5 ;  <CR> }  <CR> }  <CR>  <EOC> 