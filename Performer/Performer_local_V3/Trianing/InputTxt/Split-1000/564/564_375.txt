 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m4 , String r6 , String B6 , String T0 , String t8 ) {  <CR> super ( m4 , r6 , B6 , T0 , t8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t4 , String j8 , String M4 , String F8 , String i ) {  <CR> super ( t4 , j8 , M4 , F8 , i ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] G1 ) {  <CR> Evaluation E0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n7 = new Envelop ( "Taipei" , "Kaohsiung" , E0 ) ;  <CR> n7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String Z5 , String W4 , Evaluation M8 ) {  <CR> this . senderAddr = Z5 ;  <CR> this . receiverAddr = W4 ;  <CR> this . letter = M8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String v9 , String E7 , String R1 , String K0 , String I3 ) {  <CR> this . title = v9 ;  <CR> this . receiver = E7 ;  <CR> this . content = R1 ;  <CR> this . sender = K0 ;  <CR> this . date = I3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int a4 ) {  <CR> list [ a4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object O3 ) {  <CR> Letter c4 = ( Letter ) O3 ;  <CR> if ( this . x > c4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] p4 ) {  <CR> int a4 ;  <CR> for ( a4 = list . length - 1 ; a4 >= 0 ; a4 -- ) {  <CR> int C8 = a4 ;  <CR> Letter v4 = new Letter ( a4 ) ;  <CR> Letter Y4 = new Letter ( C8 - 1 ) ;  <CR> if ( v4 . compareTo ( Y4 ) == 1 )  <CR> v4 . display ( a4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Z4 ) {  <CR> this . x = Z4 ;  <CR> }  <CR> }  <CR>  <EOC> 