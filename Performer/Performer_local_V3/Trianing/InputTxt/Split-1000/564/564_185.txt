 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z9 , String i2 , String A1 , String F1 , String I3 ) {  <CR> super ( z9 , i2 , A1 , F1 , I3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String l3 , String F8 , String B2 , String Z8 , String y4 ) {  <CR> super ( l3 , F8 , B2 , Z8 , y4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String o6 , String W1 , Evaluation m8 ) {  <CR> this . senderAddr = o6 ;  <CR> this . receiverAddr = W1 ;  <CR> this . letter = m8 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] M ) {  <CR> Evaluation u1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a0 = new Envelop ( "Taipei" , "Kaohsiung" , u1 ) ;  <CR> a0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String L6 , String H5 , String m8 , String J6 , String G2 ) {  <CR> this . title = L6 ;  <CR> this . receiver = H5 ;  <CR> this . content = m8 ;  <CR> this . sender = J6 ;  <CR> this . date = G2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] N5 ) {  <CR> int s1 ;  <CR> for ( s1 = list . length - 1 ; s1 >= 0 ; s1 -- ) {  <CR> int r9 = s1 ;  <CR> Letter H0 = new Letter ( s1 ) ;  <CR> Letter u6 = new Letter ( r9 - 1 ) ;  <CR> if ( H0 . compareTo ( u6 ) == 1 )  <CR> H0 . display ( s1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int s1 ) {  <CR> list [ s1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object x0 ) {  <CR> Letter Q5 = ( Letter ) x0 ;  <CR> if ( this . x > Q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int d0 ) {  <CR> this . x = d0 ;  <CR> }  <CR> }  <CR>  <EOC> 