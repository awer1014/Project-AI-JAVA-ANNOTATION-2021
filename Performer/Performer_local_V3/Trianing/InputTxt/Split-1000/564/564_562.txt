 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x6 , String Q4 , String t0 , String z6 , String p2 ) {  <CR> super ( x6 , Q4 , t0 , z6 , p2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z5 , String a5 , String H , String e9 , String r3 ) {  <CR> super ( z5 , a5 , H , e9 , r3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String w3 , String R1 , Evaluation n8 ) {  <CR> this . senderAddr = w3 ;  <CR> this . receiverAddr = R1 ;  <CR> this . letter = n8 ;  <CR> }  <CR> public static void main ( String [ ] L2 ) {  <CR> Evaluation P0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G = new Envelop ( "Taipei" , "Kaohsiung" , P0 ) ;  <CR> G . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String T8 , String z5 , String S9 , String z2 , String v5 ) {  <CR> this . title = T8 ;  <CR> this . receiver = z5 ;  <CR> this . content = S9 ;  <CR> this . sender = z2 ;  <CR> this . date = v5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object l0 ) {  <CR> Letter K7 = ( Letter ) l0 ;  <CR> if ( this . x > K7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int c9 ) {  <CR> this . x = c9 ;  <CR> }  <CR> public static void main ( String [ ] M ) {  <CR> int z2 ;  <CR> for ( z2 = list . length - 1 ; z2 >= 0 ; z2 -- ) {  <CR> int I = z2 ;  <CR> Letter W4 = new Letter ( z2 ) ;  <CR> Letter h1 = new Letter ( I - 1 ) ;  <CR> if ( W4 . compareTo ( h1 ) == 1 )  <CR> W4 . display ( z2 ) ;  <CR> }  <CR> }  <CR> public void display ( int z2 ) {  <CR> list [ z2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 