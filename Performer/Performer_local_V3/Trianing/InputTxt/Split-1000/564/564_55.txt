 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e4 , String O1 , String G3 , String H3 , String p ) {  <CR> super ( e4 , O1 , G3 , H3 , p ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i7 , String z7 , String s3 , String O , String b1 ) {  <CR> super ( i7 , z7 , s3 , O , b1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Z9 ) {  <CR> Evaluation J6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H0 = new Envelop ( "Taipei" , "Kaohsiung" , J6 ) ;  <CR> H0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String E6 , String g7 , Evaluation o6 ) {  <CR> this . senderAddr = E6 ;  <CR> this . receiverAddr = g7 ;  <CR> this . letter = o6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String f0 , String m5 , String N3 , String T8 , String H2 ) {  <CR> this . title = f0 ;  <CR> this . receiver = m5 ;  <CR> this . content = N3 ;  <CR> this . sender = T8 ;  <CR> this . date = H2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object K5 ) {  <CR> Letter a3 = ( Letter ) K5 ;  <CR> if ( this . x > a3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M5 ) {  <CR> list [ M5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int C1 ) {  <CR> this . x = C1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] k5 ) {  <CR> int M5 ;  <CR> for ( M5 = list . length - 1 ; M5 >= 0 ; M5 -- ) {  <CR> int I0 = M5 ;  <CR> Letter A2 = new Letter ( M5 ) ;  <CR> Letter u = new Letter ( I0 - 1 ) ;  <CR> if ( A2 . compareTo ( u ) == 1 )  <CR> A2 . display ( M5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 