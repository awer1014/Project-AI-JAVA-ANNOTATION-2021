 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N , String A3 , String i2 , String A1 , String P5 ) {  <CR> super ( N , A3 , i2 , A1 , P5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r1 , String V3 , String s4 , String m7 , String C ) {  <CR> super ( r1 , V3 , s4 , m7 , C ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String q6 , String c0 , Evaluation E5 ) {  <CR> this . senderAddr = q6 ;  <CR> this . receiverAddr = c0 ;  <CR> this . letter = E5 ;  <CR> }  <CR> public static void main ( String [ ] t8 ) {  <CR> Evaluation K3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l9 = new Envelop ( "Taipei" , "Kaohsiung" , K3 ) ;  <CR> l9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String r2 , String m0 , String g5 , String i1 , String t8 ) {  <CR> this . title = r2 ;  <CR> this . receiver = m0 ;  <CR> this . content = g5 ;  <CR> this . sender = i1 ;  <CR> this . date = t8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] D ) {  <CR> int P6 ;  <CR> for ( P6 = list . length - 1 ; P6 >= 0 ; P6 -- ) {  <CR> int x6 = P6 ;  <CR> Letter J6 = new Letter ( P6 ) ;  <CR> Letter a5 = new Letter ( x6 - 1 ) ;  <CR> if ( J6 . compareTo ( a5 ) == 1 )  <CR> J6 . display ( P6 ) ;  <CR> }  <CR> }  <CR> public void display ( int P6 ) {  <CR> list [ P6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int a9 ) {  <CR> this . x = a9 ;  <CR> }  <CR> public int compareTo ( Object B1 ) {  <CR> Letter M7 = ( Letter ) B1 ;  <CR> if ( this . x > M7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 