 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e1 , String O8 , String Q5 , String Z2 , String X ) {  <CR> super ( e1 , O8 , Q5 , Z2 , X ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V3 , String a6 , String T8 , String D , String q3 ) {  <CR> super ( V3 , a6 , T8 , D , q3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String T0 , String Q4 , Evaluation J5 ) {  <CR> this . senderAddr = T0 ;  <CR> this . receiverAddr = Q4 ;  <CR> this . letter = J5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] u7 ) {  <CR> Evaluation p = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h6 = new Envelop ( "Taipei" , "Kaohsiung" , p ) ;  <CR> h6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String H2 , String o5 , String i7 , String k3 , String l1 ) {  <CR> this . title = H2 ;  <CR> this . receiver = o5 ;  <CR> this . content = i7 ;  <CR> this . sender = k3 ;  <CR> this . date = l1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object e9 ) {  <CR> Letter x3 = ( Letter ) e9 ;  <CR> if ( this . x > x3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int v ) {  <CR> list [ v ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] c9 ) {  <CR> int v ;  <CR> for ( v = list . length - 1 ; v >= 0 ; v -- ) {  <CR> int y = v ;  <CR> Letter D3 = new Letter ( v ) ;  <CR> Letter Z1 = new Letter ( y - 1 ) ;  <CR> if ( D3 . compareTo ( Z1 ) == 1 )  <CR> D3 . display ( v ) ;  <CR> }  <CR> }  <CR> Letter ( int r8 ) {  <CR> this . x = r8 ;  <CR> }  <CR> }  <CR>  <EOC> 