 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Z0 , String L5 , String E0 , String J7 , String I9 ) {  <CR> super ( Z0 , L5 , E0 , J7 , I9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e , String t1 , String F9 , String N5 , String k4 ) {  <CR> super ( e , t1 , F9 , N5 , k4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> Evaluation u5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G6 = new Envelop ( "Taipei" , "Kaohsiung" , u5 ) ;  <CR> G6 . display ( ) ;  <CR> }  <CR> public Envelop ( String A , String C2 , Evaluation M2 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = C2 ;  <CR> this . letter = M2 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String l6 , String Y , String s0 , String U1 , String A7 ) {  <CR> this . title = l6 ;  <CR> this . receiver = Y ;  <CR> this . content = s0 ;  <CR> this . sender = U1 ;  <CR> this . date = A7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int q4 ) {  <CR> this . x = q4 ;  <CR> }  <CR> public int compareTo ( Object s1 ) {  <CR> Letter q2 = ( Letter ) s1 ;  <CR> if ( this . x > q2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] f6 ) {  <CR> int P5 ;  <CR> for ( P5 = list . length - 1 ; P5 >= 0 ; P5 -- ) {  <CR> int N2 = P5 ;  <CR> Letter z7 = new Letter ( P5 ) ;  <CR> Letter T = new Letter ( N2 - 1 ) ;  <CR> if ( z7 . compareTo ( T ) == 1 )  <CR> z7 . display ( P5 ) ;  <CR> }  <CR> }  <CR> public void display ( int P5 ) {  <CR> list [ P5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 