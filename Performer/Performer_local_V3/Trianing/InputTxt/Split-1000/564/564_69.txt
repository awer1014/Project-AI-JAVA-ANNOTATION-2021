 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W , String h4 , String R8 , String J6 , String P5 ) {  <CR> super ( W , h4 , R8 , J6 , P5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A9 , String w7 , String B4 , String S0 , String w3 ) {  <CR> super ( A9 , w7 , B4 , S0 , w3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] t0 ) {  <CR> Evaluation t7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d8 = new Envelop ( "Taipei" , "Kaohsiung" , t7 ) ;  <CR> d8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String y7 , String z3 , Evaluation O1 ) {  <CR> this . senderAddr = y7 ;  <CR> this . receiverAddr = z3 ;  <CR> this . letter = O1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String O1 , String N8 , String u5 , String I4 , String y8 ) {  <CR> this . title = O1 ;  <CR> this . receiver = N8 ;  <CR> this . content = u5 ;  <CR> this . sender = I4 ;  <CR> this . date = y8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int w6 ) {  <CR> list [ w6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int p4 ) {  <CR> this . x = p4 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] J7 ) {  <CR> int w6 ;  <CR> for ( w6 = list . length - 1 ; w6 >= 0 ; w6 -- ) {  <CR> int P7 = w6 ;  <CR> Letter a1 = new Letter ( w6 ) ;  <CR> Letter o2 = new Letter ( P7 - 1 ) ;  <CR> if ( a1 . compareTo ( o2 ) == 1 )  <CR> a1 . display ( w6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object o3 ) {  <CR> Letter Z1 = ( Letter ) o3 ;  <CR> if ( this . x > Z1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 