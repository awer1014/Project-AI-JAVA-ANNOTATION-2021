 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R9 , String j1 , String z9 , String q2 , String B2 ) {  <CR> super ( R9 , j1 , z9 , q2 , B2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X0 , String F5 , String e7 , String f5 , String k6 ) {  <CR> super ( X0 , F5 , e7 , f5 , k6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] E8 ) {  <CR> Evaluation c8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n = new Envelop ( "Taipei" , "Kaohsiung" , c8 ) ;  <CR> n . display ( ) ;  <CR> }  <CR> public Envelop ( String r3 , String N1 , Evaluation c5 ) {  <CR> this . senderAddr = r3 ;  <CR> this . receiverAddr = N1 ;  <CR> this . letter = c5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String r1 , String a0 , String i0 , String r9 , String H5 ) {  <CR> this . title = r1 ;  <CR> this . receiver = a0 ;  <CR> this . content = i0 ;  <CR> this . sender = r9 ;  <CR> this . date = H5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Q9 ) {  <CR> list [ Q9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object x2 ) {  <CR> Letter y3 = ( Letter ) x2 ;  <CR> if ( this . x > y3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z3 ) {  <CR> int Q9 ;  <CR> for ( Q9 = list . length - 1 ; Q9 >= 0 ; Q9 -- ) {  <CR> int I0 = Q9 ;  <CR> Letter X = new Letter ( Q9 ) ;  <CR> Letter K = new Letter ( I0 - 1 ) ;  <CR> if ( X . compareTo ( K ) == 1 )  <CR> X . display ( Q9 ) ;  <CR> }  <CR> }  <CR> Letter ( int i2 ) {  <CR> this . x = i2 ;  <CR> }  <CR> }  <CR>  <EOC> 