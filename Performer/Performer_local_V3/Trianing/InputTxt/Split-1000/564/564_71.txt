 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y6 , String T , String a4 , String U7 , String E3 ) {  <CR> super ( y6 , T , a4 , U7 , E3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f9 , String P6 , String F4 , String y9 , String t6 ) {  <CR> super ( f9 , P6 , F4 , y9 , t6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] d9 ) {  <CR> Evaluation q = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M0 = new Envelop ( "Taipei" , "Kaohsiung" , q ) ;  <CR> M0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String g2 , String M8 , Evaluation y6 ) {  <CR> this . senderAddr = g2 ;  <CR> this . receiverAddr = M8 ;  <CR> this . letter = y6 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String t8 , String j , String e4 , String y1 , String d2 ) {  <CR> this . title = t8 ;  <CR> this . receiver = j ;  <CR> this . content = e4 ;  <CR> this . sender = y1 ;  <CR> this . date = d2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Q8 ) {  <CR> list [ Q8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] B4 ) {  <CR> int Q8 ;  <CR> for ( Q8 = list . length - 1 ; Q8 >= 0 ; Q8 -- ) {  <CR> int u2 = Q8 ;  <CR> Letter d6 = new Letter ( Q8 ) ;  <CR> Letter p0 = new Letter ( u2 - 1 ) ;  <CR> if ( d6 . compareTo ( p0 ) == 1 )  <CR> d6 . display ( Q8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object M2 ) {  <CR> Letter J0 = ( Letter ) M2 ;  <CR> if ( this . x > J0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int n1 ) {  <CR> this . x = n1 ;  <CR> }  <CR> }  <CR>  <EOC> 