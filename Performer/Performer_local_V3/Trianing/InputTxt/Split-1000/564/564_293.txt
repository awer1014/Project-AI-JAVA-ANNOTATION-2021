 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String f4 , String p4 , String e7 , String b4 , String G7 ) {  <CR> super ( f4 , p4 , e7 , b4 , G7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String N4 , String Y5 , String M6 , String M5 , String w6 ) {  <CR> super ( N4 , Y5 , M6 , M5 , w6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String f6 , String P3 , Evaluation H1 ) {  <CR> this . senderAddr = f6 ;  <CR> this . receiverAddr = P3 ;  <CR> this . letter = H1 ;  <CR> }  <CR> public static void main ( String [ ] n4 ) {  <CR> Evaluation b8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K = new Envelop ( "Taipei" , "Kaohsiung" , b8 ) ;  <CR> K . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String F7 , String G4 , String h , String R4 , String d2 ) {  <CR> this . title = F7 ;  <CR> this . receiver = G4 ;  <CR> this . content = h ;  <CR> this . sender = R4 ;  <CR> this . date = d2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object x8 ) {  <CR> Letter m5 = ( Letter ) x8 ;  <CR> if ( this . x > m5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int W2 ) {  <CR> list [ W2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] t ) {  <CR> int W2 ;  <CR> for ( W2 = list . length - 1 ; W2 >= 0 ; W2 -- ) {  <CR> int u0 = W2 ;  <CR> Letter Q6 = new Letter ( W2 ) ;  <CR> Letter r2 = new Letter ( u0 - 1 ) ;  <CR> if ( Q6 . compareTo ( r2 ) == 1 )  <CR> Q6 . display ( W2 ) ;  <CR> }  <CR> }  <CR> Letter ( int C3 ) {  <CR> this . x = C3 ;  <CR> }  <CR> }  <CR>  <EOC> 