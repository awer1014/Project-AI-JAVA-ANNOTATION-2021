 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String n5 , String A1 , String I2 , String g3 , String i6 ) {  <CR> super ( n5 , A1 , I2 , g3 , i6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o4 , String O5 , String X0 , String b9 , String u6 ) {  <CR> super ( o4 , O5 , X0 , b9 , u6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] R5 ) {  <CR> Evaluation o8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i1 = new Envelop ( "Taipei" , "Kaohsiung" , o8 ) ;  <CR> i1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String f , String x6 , Evaluation p2 ) {  <CR> this . senderAddr = f ;  <CR> this . receiverAddr = x6 ;  <CR> this . letter = p2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String q5 , String z8 , String e3 , String x9 , String S7 ) {  <CR> this . title = q5 ;  <CR> this . receiver = z8 ;  <CR> this . content = e3 ;  <CR> this . sender = x9 ;  <CR> this . date = S7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object E9 ) {  <CR> Letter V = ( Letter ) E9 ;  <CR> if ( this . x > V . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int l1 ) {  <CR> this . x = l1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] c2 ) {  <CR> int d8 ;  <CR> for ( d8 = list . length - 1 ; d8 >= 0 ; d8 -- ) {  <CR> int Q1 = d8 ;  <CR> Letter v6 = new Letter ( d8 ) ;  <CR> Letter V3 = new Letter ( Q1 - 1 ) ;  <CR> if ( v6 . compareTo ( V3 ) == 1 )  <CR> v6 . display ( d8 ) ;  <CR> }  <CR> }  <CR> public void display ( int d8 ) {  <CR> list [ d8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 