 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String n , String N5 , String b9 , String j1 , String U4 ) {  <CR> super ( n , N5 , b9 , j1 , U4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r5 , String w2 , String w3 , String a6 , String R4 ) {  <CR> super ( r5 , w2 , w3 , a6 , R4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String N6 , String z7 , Evaluation l7 ) {  <CR> this . senderAddr = N6 ;  <CR> this . receiverAddr = z7 ;  <CR> this . letter = l7 ;  <CR> }  <CR> public static void main ( String [ ] e8 ) {  <CR> Evaluation H8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A5 = new Envelop ( "Taipei" , "Kaohsiung" , H8 ) ;  <CR> A5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String g1 , String W7 , String u1 , String s7 , String d6 ) {  <CR> this . title = g1 ;  <CR> this . receiver = W7 ;  <CR> this . content = u1 ;  <CR> this . sender = s7 ;  <CR> this . date = d6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] d9 ) {  <CR> int O4 ;  <CR> for ( O4 = list . length - 1 ; O4 >= 0 ; O4 -- ) {  <CR> int c = O4 ;  <CR> Letter h7 = new Letter ( O4 ) ;  <CR> Letter J2 = new Letter ( c - 1 ) ;  <CR> if ( h7 . compareTo ( J2 ) == 1 )  <CR> h7 . display ( O4 ) ;  <CR> }  <CR> }  <CR> Letter ( int Q8 ) {  <CR> this . x = Q8 ;  <CR> }  <CR> public int compareTo ( Object k3 ) {  <CR> Letter F = ( Letter ) k3 ;  <CR> if ( this . x > F . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int O4 ) {  <CR> list [ O4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 