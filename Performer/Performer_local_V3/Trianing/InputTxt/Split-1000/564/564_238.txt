 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String f9 , String Y3 , String c2 , String H1 , String w8 ) {  <CR> super ( f9 , Y3 , c2 , H1 , w8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z6 , String e1 , String U6 , String b1 , String W ) {  <CR> super ( z6 , e1 , U6 , b1 , W ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String z4 , String k9 , Evaluation u6 ) {  <CR> this . senderAddr = z4 ;  <CR> this . receiverAddr = k9 ;  <CR> this . letter = u6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] d5 ) {  <CR> Evaluation m8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s6 = new Envelop ( "Taipei" , "Kaohsiung" , m8 ) ;  <CR> s6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String q5 , String Q7 , String l2 , String T8 , String u0 ) {  <CR> this . title = q5 ;  <CR> this . receiver = Q7 ;  <CR> this . content = l2 ;  <CR> this . sender = T8 ;  <CR> this . date = u0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] k2 ) {  <CR> int a7 ;  <CR> for ( a7 = list . length - 1 ; a7 >= 0 ; a7 -- ) {  <CR> int a0 = a7 ;  <CR> Letter V3 = new Letter ( a7 ) ;  <CR> Letter x5 = new Letter ( a0 - 1 ) ;  <CR> if ( V3 . compareTo ( x5 ) == 1 )  <CR> V3 . display ( a7 ) ;  <CR> }  <CR> }  <CR> public void display ( int a7 ) {  <CR> list [ a7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object x0 ) {  <CR> Letter l4 = ( Letter ) x0 ;  <CR> if ( this . x > l4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int e9 ) {  <CR> this . x = e9 ;  <CR> }  <CR> }  <CR>  <EOC> 