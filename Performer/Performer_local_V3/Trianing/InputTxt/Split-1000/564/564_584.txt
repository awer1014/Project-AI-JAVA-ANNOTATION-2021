 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String V1 , String r1 , String l7 , String x5 , String t3 ) {  <CR> super ( V1 , r1 , l7 , x5 , t3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String w , String M1 , String q3 , String A9 , String Q4 ) {  <CR> super ( w , M1 , q3 , A9 , Q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] p5 ) {  <CR> Evaluation Y8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l9 = new Envelop ( "Taipei" , "Kaohsiung" , Y8 ) ;  <CR> l9 . display ( ) ;  <CR> }  <CR> public Envelop ( String U7 , String Y9 , Evaluation Y3 ) {  <CR> this . senderAddr = U7 ;  <CR> this . receiverAddr = Y9 ;  <CR> this . letter = Y3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String h1 , String P0 , String P1 , String U9 , String y5 ) {  <CR> this . title = h1 ;  <CR> this . receiver = P0 ;  <CR> this . content = P1 ;  <CR> this . sender = U9 ;  <CR> this . date = y5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] v9 ) {  <CR> int U3 ;  <CR> for ( U3 = list . length - 1 ; U3 >= 0 ; U3 -- ) {  <CR> int P8 = U3 ;  <CR> Letter t = new Letter ( U3 ) ;  <CR> Letter k = new Letter ( P8 - 1 ) ;  <CR> if ( t . compareTo ( k ) == 1 )  <CR> t . display ( U3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object i4 ) {  <CR> Letter h = ( Letter ) i4 ;  <CR> if ( this . x > h . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int U3 ) {  <CR> list [ U3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int L8 ) {  <CR> this . x = L8 ;  <CR> }  <CR> }  <CR>  <EOC> 