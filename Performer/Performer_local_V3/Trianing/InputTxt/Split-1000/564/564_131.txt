 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J2 , String l6 , String V4 , String j2 , String s7 ) {  <CR> super ( J2 , l6 , V4 , j2 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e8 , String s , String e4 , String d1 , String S8 ) {  <CR> super ( e8 , s , e4 , d1 , S8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] k8 ) {  <CR> Evaluation N9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k = new Envelop ( "Taipei" , "Kaohsiung" , N9 ) ;  <CR> k . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String V5 , String t4 , Evaluation b5 ) {  <CR> this . senderAddr = V5 ;  <CR> this . receiverAddr = t4 ;  <CR> this . letter = b5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String o7 , String k6 , String Z4 , String p1 , String s3 ) {  <CR> this . title = o7 ;  <CR> this . receiver = k6 ;  <CR> this . content = Z4 ;  <CR> this . sender = p1 ;  <CR> this . date = s3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] U9 ) {  <CR> int a8 ;  <CR> for ( a8 = list . length - 1 ; a8 >= 0 ; a8 -- ) {  <CR> int y4 = a8 ;  <CR> Letter y8 = new Letter ( a8 ) ;  <CR> Letter f8 = new Letter ( y4 - 1 ) ;  <CR> if ( y8 . compareTo ( f8 ) == 1 )  <CR> y8 . display ( a8 ) ;  <CR> }  <CR> }  <CR> Letter ( int b4 ) {  <CR> this . x = b4 ;  <CR> }  <CR> public void display ( int a8 ) {  <CR> list [ a8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object z8 ) {  <CR> Letter C7 = ( Letter ) z8 ;  <CR> if ( this . x > C7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 