 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b9 , String S5 , String e4 , String W8 , String R4 ) {  <CR> super ( b9 , S5 , e4 , W8 , R4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j2 , String y9 , String p5 , String u5 , String p1 ) {  <CR> super ( j2 , y9 , p5 , u5 , p1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String t3 , String j1 , Evaluation d8 ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = j1 ;  <CR> this . letter = d8 ;  <CR> }  <CR> public static void main ( String [ ] u6 ) {  <CR> Evaluation F7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R = new Envelop ( "Taipei" , "Kaohsiung" , F7 ) ;  <CR> R . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String l8 , String D4 , String a8 , String g7 , String E2 ) {  <CR> this . title = l8 ;  <CR> this . receiver = D4 ;  <CR> this . content = a8 ;  <CR> this . sender = g7 ;  <CR> this . date = E2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object D3 ) {  <CR> Letter m7 = ( Letter ) D3 ;  <CR> if ( this . x > m7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] g3 ) {  <CR> int k6 ;  <CR> for ( k6 = list . length - 1 ; k6 >= 0 ; k6 -- ) {  <CR> int k = k6 ;  <CR> Letter L6 = new Letter ( k6 ) ;  <CR> Letter Y3 = new Letter ( k - 1 ) ;  <CR> if ( L6 . compareTo ( Y3 ) == 1 )  <CR> L6 . display ( k6 ) ;  <CR> }  <CR> }  <CR> Letter ( int j3 ) {  <CR> this . x = j3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int k6 ) {  <CR> list [ k6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 