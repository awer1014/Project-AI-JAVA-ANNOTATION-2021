 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String u0 , String X8 , String Q8 , String z2 , String b ) {  <CR> super ( u0 , X8 , Q8 , z2 , b ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String p2 , String w5 , String H8 , String u , String v ) {  <CR> super ( p2 , w5 , H8 , u , v ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String Z3 , String m2 , Evaluation P2 ) {  <CR> this . senderAddr = Z3 ;  <CR> this . receiverAddr = m2 ;  <CR> this . letter = P2 ;  <CR> }  <CR> public static void main ( String [ ] D4 ) {  <CR> Evaluation Q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P = new Envelop ( "Taipei" , "Kaohsiung" , Q6 ) ;  <CR> P . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String b3 , String t8 , String k6 , String d4 , String N4 ) {  <CR> this . title = b3 ;  <CR> this . receiver = t8 ;  <CR> this . content = k6 ;  <CR> this . sender = d4 ;  <CR> this . date = N4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object Z3 ) {  <CR> Letter x3 = ( Letter ) Z3 ;  <CR> if ( this . x > x3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int x2 ) {  <CR> this . x = x2 ;  <CR> }  <CR> public void display ( int S8 ) {  <CR> list [ S8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] F2 ) {  <CR> int S8 ;  <CR> for ( S8 = list . length - 1 ; S8 >= 0 ; S8 -- ) {  <CR> int I6 = S8 ;  <CR> Letter Z5 = new Letter ( S8 ) ;  <CR> Letter d4 = new Letter ( I6 - 1 ) ;  <CR> if ( Z5 . compareTo ( d4 ) == 1 )  <CR> Z5 . display ( S8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 