 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o3 , String J0 , String F4 , String v4 , String l3 ) {  <CR> super ( o3 , J0 , F4 , v4 , l3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y5 , String V3 , String Y6 , String R0 , String k ) {  <CR> super ( y5 , V3 , Y6 , R0 , k ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String X5 , String x5 , Evaluation U7 ) {  <CR> this . senderAddr = X5 ;  <CR> this . receiverAddr = x5 ;  <CR> this . letter = U7 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] l5 ) {  <CR> Evaluation O5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N9 = new Envelop ( "Taipei" , "Kaohsiung" , O5 ) ;  <CR> N9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String M2 , String m0 , String s , String h4 , String v8 ) {  <CR> this . title = M2 ;  <CR> this . receiver = m0 ;  <CR> this . content = s ;  <CR> this . sender = h4 ;  <CR> this . date = v8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object v9 ) {  <CR> Letter R1 = ( Letter ) v9 ;  <CR> if ( this . x > R1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int D1 ) {  <CR> this . x = D1 ;  <CR> }  <CR> public void display ( int E4 ) {  <CR> list [ E4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] j9 ) {  <CR> int E4 ;  <CR> for ( E4 = list . length - 1 ; E4 >= 0 ; E4 -- ) {  <CR> int o9 = E4 ;  <CR> Letter E9 = new Letter ( E4 ) ;  <CR> Letter O1 = new Letter ( o9 - 1 ) ;  <CR> if ( E9 . compareTo ( O1 ) == 1 )  <CR> E9 . display ( E4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 