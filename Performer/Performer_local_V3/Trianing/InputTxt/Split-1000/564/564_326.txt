 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String E5 , String R6 , String i9 , String L2 , String D0 ) {  <CR> super ( E5 , R6 , i9 , L2 , D0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String p5 , String u4 , String F0 , String O6 , String P9 ) {  <CR> super ( p5 , u4 , F0 , O6 , P9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String w2 , String W2 , Evaluation e6 ) {  <CR> this . senderAddr = w2 ;  <CR> this . receiverAddr = W2 ;  <CR> this . letter = e6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J9 ) {  <CR> Evaluation t3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w3 = new Envelop ( "Taipei" , "Kaohsiung" , t3 ) ;  <CR> w3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String u8 , String n , String V6 , String B , String M9 ) {  <CR> this . title = u8 ;  <CR> this . receiver = n ;  <CR> this . content = V6 ;  <CR> this . sender = B ;  <CR> this . date = M9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int v4 ) {  <CR> this . x = v4 ;  <CR> }  <CR> public int compareTo ( Object l6 ) {  <CR> Letter L2 = ( Letter ) l6 ;  <CR> if ( this . x > L2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] q ) {  <CR> int q6 ;  <CR> for ( q6 = list . length - 1 ; q6 >= 0 ; q6 -- ) {  <CR> int C8 = q6 ;  <CR> Letter O2 = new Letter ( q6 ) ;  <CR> Letter D1 = new Letter ( C8 - 1 ) ;  <CR> if ( O2 . compareTo ( D1 ) == 1 )  <CR> O2 . display ( q6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int q6 ) {  <CR> list [ q6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 