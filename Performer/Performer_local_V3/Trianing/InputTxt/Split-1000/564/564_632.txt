 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R8 , String M4 , String C1 , String F9 , String K0 ) {  <CR> super ( R8 , M4 , C1 , F9 , K0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y7 , String Q2 , String p4 , String s3 , String L ) {  <CR> super ( Y7 , Q2 , p4 , s3 , L ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B7 ) {  <CR> Evaluation q0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q6 = new Envelop ( "Taipei" , "Kaohsiung" , q0 ) ;  <CR> Q6 . display ( ) ;  <CR> }  <CR> public Envelop ( String q1 , String u3 , Evaluation X3 ) {  <CR> this . senderAddr = q1 ;  <CR> this . receiverAddr = u3 ;  <CR> this . letter = X3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String S8 , String p1 , String M7 , String Z6 , String C5 ) {  <CR> this . title = S8 ;  <CR> this . receiver = p1 ;  <CR> this . content = M7 ;  <CR> this . sender = Z6 ;  <CR> this . date = C5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int C5 ) {  <CR> list [ C5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int C8 ) {  <CR> this . x = C8 ;  <CR> }  <CR> public int compareTo ( Object J8 ) {  <CR> Letter S8 = ( Letter ) J8 ;  <CR> if ( this . x > S8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] o1 ) {  <CR> int C5 ;  <CR> for ( C5 = list . length - 1 ; C5 >= 0 ; C5 -- ) {  <CR> int P1 = C5 ;  <CR> Letter c7 = new Letter ( C5 ) ;  <CR> Letter Z0 = new Letter ( P1 - 1 ) ;  <CR> if ( c7 . compareTo ( Z0 ) == 1 )  <CR> c7 . display ( C5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 