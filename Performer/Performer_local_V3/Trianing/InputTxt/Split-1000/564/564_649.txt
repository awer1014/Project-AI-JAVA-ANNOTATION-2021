 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W1 , String w4 , String X3 , String h3 , String q8 ) {  <CR> super ( W1 , w4 , X3 , h3 , q8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String m9 , String y0 , String c3 , String B6 , String q ) {  <CR> super ( m9 , y0 , c3 , B6 , q ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String g7 , String L4 , Evaluation Y6 ) {  <CR> this . senderAddr = g7 ;  <CR> this . receiverAddr = L4 ;  <CR> this . letter = Y6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] x7 ) {  <CR> Evaluation n4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V9 = new Envelop ( "Taipei" , "Kaohsiung" , n4 ) ;  <CR> V9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String I3 , String j7 , String R7 , String b5 , String t9 ) {  <CR> this . title = I3 ;  <CR> this . receiver = j7 ;  <CR> this . content = R7 ;  <CR> this . sender = b5 ;  <CR> this . date = t9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int y4 ) {  <CR> list [ y4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y0 ) {  <CR> int y4 ;  <CR> for ( y4 = list . length - 1 ; y4 >= 0 ; y4 -- ) {  <CR> int z = y4 ;  <CR> Letter h3 = new Letter ( y4 ) ;  <CR> Letter P5 = new Letter ( z - 1 ) ;  <CR> if ( h3 . compareTo ( P5 ) == 1 )  <CR> h3 . display ( y4 ) ;  <CR> }  <CR> }  <CR> Letter ( int n ) {  <CR> this . x = n ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object N0 ) {  <CR> Letter T1 = ( Letter ) N0 ;  <CR> if ( this . x > T1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 