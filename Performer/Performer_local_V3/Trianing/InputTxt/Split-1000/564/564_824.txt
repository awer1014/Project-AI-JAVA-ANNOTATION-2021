 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String C3 , String K2 , String o1 , String c8 , String P5 ) {  <CR> super ( C3 , K2 , o1 , c8 , P5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n9 , String s8 , String e6 , String F4 , String s7 ) {  <CR> super ( n9 , s8 , e6 , F4 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String e7 , String j1 , Evaluation B2 ) {  <CR> this . senderAddr = e7 ;  <CR> this . receiverAddr = j1 ;  <CR> this . letter = B2 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p7 ) {  <CR> Evaluation H2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j0 = new Envelop ( "Taipei" , "Kaohsiung" , H2 ) ;  <CR> j0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String r6 , String P4 , String q7 , String W , String H2 ) {  <CR> this . title = r6 ;  <CR> this . receiver = P4 ;  <CR> this . content = q7 ;  <CR> this . sender = W ;  <CR> this . date = H2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object l0 ) {  <CR> Letter J9 = ( Letter ) l0 ;  <CR> if ( this . x > J9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int A5 ) {  <CR> list [ A5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U0 ) {  <CR> int A5 ;  <CR> for ( A5 = list . length - 1 ; A5 >= 0 ; A5 -- ) {  <CR> int C2 = A5 ;  <CR> Letter G5 = new Letter ( A5 ) ;  <CR> Letter t0 = new Letter ( C2 - 1 ) ;  <CR> if ( G5 . compareTo ( t0 ) == 1 )  <CR> G5 . display ( A5 ) ;  <CR> }  <CR> }  <CR> Letter ( int g9 ) {  <CR> this . x = g9 ;  <CR> }  <CR> }  <CR>  <EOC> 