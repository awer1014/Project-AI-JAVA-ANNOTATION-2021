 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K0 , String e , String T9 , String o7 , String j4 ) {  <CR> super ( K0 , e , T9 , o7 , j4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j6 , String S3 , String M2 , String r3 , String E7 ) {  <CR> super ( j6 , S3 , M2 , r3 , E7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p7 , String H0 , Evaluation Z7 ) {  <CR> this . senderAddr = p7 ;  <CR> this . receiverAddr = H0 ;  <CR> this . letter = Z7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] h2 ) {  <CR> Evaluation G5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v3 = new Envelop ( "Taipei" , "Kaohsiung" , G5 ) ;  <CR> v3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String j5 , String v6 , String N0 , String U2 , String c1 ) {  <CR> this . title = j5 ;  <CR> this . receiver = v6 ;  <CR> this . content = N0 ;  <CR> this . sender = U2 ;  <CR> this . date = c1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] X ) {  <CR> int Y6 ;  <CR> for ( Y6 = list . length - 1 ; Y6 >= 0 ; Y6 -- ) {  <CR> int Y0 = Y6 ;  <CR> Letter O3 = new Letter ( Y6 ) ;  <CR> Letter P = new Letter ( Y0 - 1 ) ;  <CR> if ( O3 . compareTo ( P ) == 1 )  <CR> O3 . display ( Y6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int N1 ) {  <CR> this . x = N1 ;  <CR> }  <CR> public void display ( int Y6 ) {  <CR> list [ Y6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object U7 ) {  <CR> Letter q5 = ( Letter ) U7 ;  <CR> if ( this . x > q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 