 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T7 , String T0 , String A3 , String X2 , String f3 ) {  <CR> super ( T7 , T0 , A3 , X2 , f3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H5 , String r1 , String e9 , String y4 , String a0 ) {  <CR> super ( H5 , r1 , e9 , y4 , a0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String A6 , String p2 , Evaluation E0 ) {  <CR> this . senderAddr = A6 ;  <CR> this . receiverAddr = p2 ;  <CR> this . letter = E0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q0 ) {  <CR> Evaluation d1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r7 = new Envelop ( "Taipei" , "Kaohsiung" , d1 ) ;  <CR> r7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String x8 , String s1 , String a9 , String F1 , String n6 ) {  <CR> this . title = x8 ;  <CR> this . receiver = s1 ;  <CR> this . content = a9 ;  <CR> this . sender = F1 ;  <CR> this . date = n6 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int U9 ) {  <CR> this . x = U9 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] t4 ) {  <CR> int P7 ;  <CR> for ( P7 = list . length - 1 ; P7 >= 0 ; P7 -- ) {  <CR> int X2 = P7 ;  <CR> Letter a1 = new Letter ( P7 ) ;  <CR> Letter G4 = new Letter ( X2 - 1 ) ;  <CR> if ( a1 . compareTo ( G4 ) == 1 )  <CR> a1 . display ( P7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object j2 ) {  <CR> Letter k4 = ( Letter ) j2 ;  <CR> if ( this . x > k4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int P7 ) {  <CR> list [ P7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 