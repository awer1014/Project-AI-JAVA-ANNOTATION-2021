 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H3 , String a0 , String H7 , String z4 , String Q4 ) {  <CR> super ( H3 , a0 , H7 , z4 , Q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String t , String r0 , String A4 , String t6 , String V8 ) {  <CR> super ( t , r0 , A4 , t6 , V8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String l5 , String a7 , Evaluation L8 ) {  <CR> this . senderAddr = l5 ;  <CR> this . receiverAddr = a7 ;  <CR> this . letter = L8 ;  <CR> }  <CR> public static void main ( String [ ] S0 ) {  <CR> Evaluation P5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i5 = new Envelop ( "Taipei" , "Kaohsiung" , P5 ) ;  <CR> i5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String B5 , String b , String p9 , String f2 , String a8 ) {  <CR> this . title = B5 ;  <CR> this . receiver = b ;  <CR> this . content = p9 ;  <CR> this . sender = f2 ;  <CR> this . date = a8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Z7 ) {  <CR> list [ Z7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] W2 ) {  <CR> int Z7 ;  <CR> for ( Z7 = list . length - 1 ; Z7 >= 0 ; Z7 -- ) {  <CR> int c2 = Z7 ;  <CR> Letter g2 = new Letter ( Z7 ) ;  <CR> Letter e = new Letter ( c2 - 1 ) ;  <CR> if ( g2 . compareTo ( e ) == 1 )  <CR> g2 . display ( Z7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object B2 ) {  <CR> Letter w4 = ( Letter ) B2 ;  <CR> if ( this . x > w4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int l7 ) {  <CR> this . x = l7 ;  <CR> }  <CR> }  <CR>  <EOC> 