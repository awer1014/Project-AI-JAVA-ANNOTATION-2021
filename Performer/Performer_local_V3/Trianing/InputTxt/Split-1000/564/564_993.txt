 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W9 , String s2 , String I7 , String l3 , String v6 ) {  <CR> super ( W9 , s2 , I7 , l3 , v6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q8 , String A9 , String r5 , String d0 , String u6 ) {  <CR> super ( q8 , A9 , r5 , d0 , u6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String K9 , String V6 , Evaluation f2 ) {  <CR> this . senderAddr = K9 ;  <CR> this . receiverAddr = V6 ;  <CR> this . letter = f2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] L5 ) {  <CR> Evaluation j = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C5 = new Envelop ( "Taipei" , "Kaohsiung" , j ) ;  <CR> C5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String D7 , String f0 , String b0 , String J7 , String V4 ) {  <CR> this . title = D7 ;  <CR> this . receiver = f0 ;  <CR> this . content = b0 ;  <CR> this . sender = J7 ;  <CR> this . date = V4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int n3 ) {  <CR> this . x = n3 ;  <CR> }  <CR> public static void main ( String [ ] y8 ) {  <CR> int b0 ;  <CR> for ( b0 = list . length - 1 ; b0 >= 0 ; b0 -- ) {  <CR> int H6 = b0 ;  <CR> Letter T3 = new Letter ( b0 ) ;  <CR> Letter r6 = new Letter ( H6 - 1 ) ;  <CR> if ( T3 . compareTo ( r6 ) == 1 )  <CR> T3 . display ( b0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object T4 ) {  <CR> Letter r3 = ( Letter ) T4 ;  <CR> if ( this . x > r3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int b0 ) {  <CR> list [ b0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 