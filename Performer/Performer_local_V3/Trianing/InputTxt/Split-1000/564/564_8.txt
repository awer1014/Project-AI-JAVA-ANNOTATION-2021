 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y7 , String c5 , String T3 , String e9 , String R9 ) {  <CR> super ( Y7 , c5 , T3 , e9 , R9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w4 , String e5 , String u4 , String x4 , String E1 ) {  <CR> super ( w4 , e5 , u4 , x4 , E1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] U4 ) {  <CR> Evaluation V5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C6 = new Envelop ( "Taipei" , "Kaohsiung" , V5 ) ;  <CR> C6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String T4 , String Y , Evaluation A7 ) {  <CR> this . senderAddr = T4 ;  <CR> this . receiverAddr = Y ;  <CR> this . letter = A7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String M8 , String p5 , String B8 , String q1 , String P7 ) {  <CR> this . title = M8 ;  <CR> this . receiver = p5 ;  <CR> this . content = B8 ;  <CR> this . sender = q1 ;  <CR> this . date = P7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] C3 ) {  <CR> int P ;  <CR> for ( P = list . length - 1 ; P >= 0 ; P -- ) {  <CR> int R9 = P ;  <CR> Letter q6 = new Letter ( P ) ;  <CR> Letter M7 = new Letter ( R9 - 1 ) ;  <CR> if ( q6 . compareTo ( M7 ) == 1 )  <CR> q6 . display ( P ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object r4 ) {  <CR> Letter y8 = ( Letter ) r4 ;  <CR> if ( this . x > y8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P ) {  <CR> list [ P ] . Display ( ) ;  <CR> }  <CR> Letter ( int V9 ) {  <CR> this . x = V9 ;  <CR> }  <CR> }  <CR>  <EOC> 