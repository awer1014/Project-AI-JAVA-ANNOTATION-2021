 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K0 , String Z4 , String y4 , String K4 , String L0 ) {  <CR> super ( K0 , Z4 , y4 , K4 , L0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o0 , String H1 , String j0 , String a4 , String m7 ) {  <CR> super ( o0 , H1 , j0 , a4 , m7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String C6 , String q1 , Evaluation A7 ) {  <CR> this . senderAddr = C6 ;  <CR> this . receiverAddr = q1 ;  <CR> this . letter = A7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] V5 ) {  <CR> Evaluation K7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c5 = new Envelop ( "Taipei" , "Kaohsiung" , K7 ) ;  <CR> c5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String K1 , String f3 , String c5 , String T6 , String E5 ) {  <CR> this . title = K1 ;  <CR> this . receiver = f3 ;  <CR> this . content = c5 ;  <CR> this . sender = T6 ;  <CR> this . date = E5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int X ) {  <CR> this . x = X ;  <CR> }  <CR> public void display ( int t3 ) {  <CR> list [ t3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] n3 ) {  <CR> int t3 ;  <CR> for ( t3 = list . length - 1 ; t3 >= 0 ; t3 -- ) {  <CR> int G3 = t3 ;  <CR> Letter b5 = new Letter ( t3 ) ;  <CR> Letter k8 = new Letter ( G3 - 1 ) ;  <CR> if ( b5 . compareTo ( k8 ) == 1 )  <CR> b5 . display ( t3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Q1 ) {  <CR> Letter w2 = ( Letter ) Q1 ;  <CR> if ( this . x > w2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 