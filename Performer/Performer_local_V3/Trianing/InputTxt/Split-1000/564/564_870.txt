 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String v2 , String c9 , String X7 , String T9 , String d2 ) {  <CR> super ( v2 , c9 , X7 , T9 , d2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q5 , String d3 , String m2 , String Q6 , String p6 ) {  <CR> super ( q5 , d3 , m2 , Q6 , p6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String L1 , String L9 , Evaluation Y4 ) {  <CR> this . senderAddr = L1 ;  <CR> this . receiverAddr = L9 ;  <CR> this . letter = Y4 ;  <CR> }  <CR> public static void main ( String [ ] o ) {  <CR> Evaluation F5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v4 = new Envelop ( "Taipei" , "Kaohsiung" , F5 ) ;  <CR> v4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String O , String u7 , String U7 , String v4 , String C6 ) {  <CR> this . title = O ;  <CR> this . receiver = u7 ;  <CR> this . content = U7 ;  <CR> this . sender = v4 ;  <CR> this . date = C6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int w6 ) {  <CR> this . x = w6 ;  <CR> }  <CR> public void display ( int N ) {  <CR> list [ N ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] D8 ) {  <CR> int N ;  <CR> for ( N = list . length - 1 ; N >= 0 ; N -- ) {  <CR> int c9 = N ;  <CR> Letter d5 = new Letter ( N ) ;  <CR> Letter y = new Letter ( c9 - 1 ) ;  <CR> if ( d5 . compareTo ( y ) == 1 )  <CR> d5 . display ( N ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object l7 ) {  <CR> Letter q3 = ( Letter ) l7 ;  <CR> if ( this . x > q3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 