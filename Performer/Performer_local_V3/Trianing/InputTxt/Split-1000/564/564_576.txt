 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g5 , String c3 , String w1 , String B9 , String V6 ) {  <CR> super ( g5 , c3 , w1 , B9 , V6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j7 , String C1 , String t1 , String F8 , String h7 ) {  <CR> super ( j7 , C1 , t1 , F8 , h7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] x2 ) {  <CR> Evaluation b9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I8 = new Envelop ( "Taipei" , "Kaohsiung" , b9 ) ;  <CR> I8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C7 , String X6 , Evaluation t3 ) {  <CR> this . senderAddr = C7 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = t3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String T4 , String j9 , String q6 , String i8 , String Y1 ) {  <CR> this . title = T4 ;  <CR> this . receiver = j9 ;  <CR> this . content = q6 ;  <CR> this . sender = i8 ;  <CR> this . date = Y1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] j2 ) {  <CR> int v0 ;  <CR> for ( v0 = list . length - 1 ; v0 >= 0 ; v0 -- ) {  <CR> int d3 = v0 ;  <CR> Letter D7 = new Letter ( v0 ) ;  <CR> Letter P3 = new Letter ( d3 - 1 ) ;  <CR> if ( D7 . compareTo ( P3 ) == 1 )  <CR> D7 . display ( v0 ) ;  <CR> }  <CR> }  <CR> public void display ( int v0 ) {  <CR> list [ v0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object V5 ) {  <CR> Letter j9 = ( Letter ) V5 ;  <CR> if ( this . x > j9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int h4 ) {  <CR> this . x = h4 ;  <CR> }  <CR> }  <CR>  <EOC> 