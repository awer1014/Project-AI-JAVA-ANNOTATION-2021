 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String B0 , String N0 , String Y0 , String T2 , String E0 ) {  <CR> super ( B0 , N0 , Y0 , T2 , E0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z5 , String r7 , String l9 , String g1 , String p9 ) {  <CR> super ( z5 , r7 , l9 , g1 , p9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String C9 , String K4 , Evaluation L4 ) {  <CR> this . senderAddr = C9 ;  <CR> this . receiverAddr = K4 ;  <CR> this . letter = L4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S5 ) {  <CR> Evaluation h3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C1 = new Envelop ( "Taipei" , "Kaohsiung" , h3 ) ;  <CR> C1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String g5 , String H6 , String u4 , String Z9 , String C2 ) {  <CR> this . title = g5 ;  <CR> this . receiver = H6 ;  <CR> this . content = u4 ;  <CR> this . sender = Z9 ;  <CR> this . date = C2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int M1 ) {  <CR> list [ M1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] r1 ) {  <CR> int M1 ;  <CR> for ( M1 = list . length - 1 ; M1 >= 0 ; M1 -- ) {  <CR> int P9 = M1 ;  <CR> Letter f8 = new Letter ( M1 ) ;  <CR> Letter X = new Letter ( P9 - 1 ) ;  <CR> if ( f8 . compareTo ( X ) == 1 )  <CR> f8 . display ( M1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object l8 ) {  <CR> Letter z7 = ( Letter ) l8 ;  <CR> if ( this . x > z7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int J1 ) {  <CR> this . x = J1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 