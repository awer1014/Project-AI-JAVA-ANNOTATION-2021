 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H7 , String N , String x0 , String n9 , String p3 ) {  <CR> super ( H7 , N , x0 , n9 , p3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y9 , String y7 , String O6 , String u8 , String W8 ) {  <CR> super ( Y9 , y7 , O6 , u8 , W8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] K0 ) {  <CR> Evaluation I4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k3 = new Envelop ( "Taipei" , "Kaohsiung" , I4 ) ;  <CR> k3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String L8 , String I3 , Evaluation W2 ) {  <CR> this . senderAddr = L8 ;  <CR> this . receiverAddr = I3 ;  <CR> this . letter = W2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String f8 , String z5 , String C3 , String R6 , String b5 ) {  <CR> this . title = f8 ;  <CR> this . receiver = z5 ;  <CR> this . content = C3 ;  <CR> this . sender = R6 ;  <CR> this . date = b5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object g0 ) {  <CR> Letter n9 = ( Letter ) g0 ;  <CR> if ( this . x > n9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int z5 ) {  <CR> this . x = z5 ;  <CR> }  <CR> public void display ( int B0 ) {  <CR> list [ B0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] R6 ) {  <CR> int B0 ;  <CR> for ( B0 = list . length - 1 ; B0 >= 0 ; B0 -- ) {  <CR> int l0 = B0 ;  <CR> Letter E5 = new Letter ( B0 ) ;  <CR> Letter Z7 = new Letter ( l0 - 1 ) ;  <CR> if ( E5 . compareTo ( Z7 ) == 1 )  <CR> E5 . display ( B0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 