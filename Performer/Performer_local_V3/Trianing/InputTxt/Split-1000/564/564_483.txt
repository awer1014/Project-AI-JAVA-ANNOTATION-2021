 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d3 , String b8 , String e8 , String y3 , String A ) {  <CR> super ( d3 , b8 , e8 , y3 , A ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L8 , String w4 , String r2 , String J4 , String L0 ) {  <CR> super ( L8 , w4 , r2 , J4 , L0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String b8 , String g , Evaluation w1 ) {  <CR> this . senderAddr = b8 ;  <CR> this . receiverAddr = g ;  <CR> this . letter = w1 ;  <CR> }  <CR> public static void main ( String [ ] G2 ) {  <CR> Evaluation y6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R7 = new Envelop ( "Taipei" , "Kaohsiung" , y6 ) ;  <CR> R7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String c3 , String P3 , String S8 , String G2 , String X ) {  <CR> this . title = c3 ;  <CR> this . receiver = P3 ;  <CR> this . content = S8 ;  <CR> this . sender = G2 ;  <CR> this . date = X ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object x2 ) {  <CR> Letter N5 = ( Letter ) x2 ;  <CR> if ( this . x > N5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int E0 ) {  <CR> list [ E0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] G2 ) {  <CR> int E0 ;  <CR> for ( E0 = list . length - 1 ; E0 >= 0 ; E0 -- ) {  <CR> int b4 = E0 ;  <CR> Letter g1 = new Letter ( E0 ) ;  <CR> Letter U7 = new Letter ( b4 - 1 ) ;  <CR> if ( g1 . compareTo ( U7 ) == 1 )  <CR> g1 . display ( E0 ) ;  <CR> }  <CR> }  <CR> Letter ( int u1 ) {  <CR> this . x = u1 ;  <CR> }  <CR> }  <CR>  <EOC> 