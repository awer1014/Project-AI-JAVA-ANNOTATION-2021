 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g1 , String f7 , String f1 , String S7 , String d8 ) {  <CR> super ( g1 , f7 , f1 , S7 , d8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String x5 , String k6 , String g7 , String c8 , String Y9 ) {  <CR> super ( x5 , k6 , g7 , c8 , Y9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A1 ) {  <CR> Evaluation R2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r4 = new Envelop ( "Taipei" , "Kaohsiung" , R2 ) ;  <CR> r4 . display ( ) ;  <CR> }  <CR> public Envelop ( String S9 , String F7 , Evaluation f8 ) {  <CR> this . senderAddr = S9 ;  <CR> this . receiverAddr = F7 ;  <CR> this . letter = f8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String g8 , String q9 , String A2 , String k7 , String S5 ) {  <CR> this . title = g8 ;  <CR> this . receiver = q9 ;  <CR> this . content = A2 ;  <CR> this . sender = k7 ;  <CR> this . date = S5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object c8 ) {  <CR> Letter w3 = ( Letter ) c8 ;  <CR> if ( this . x > w3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] z ) {  <CR> int P5 ;  <CR> for ( P5 = list . length - 1 ; P5 >= 0 ; P5 -- ) {  <CR> int P7 = P5 ;  <CR> Letter G6 = new Letter ( P5 ) ;  <CR> Letter g9 = new Letter ( P7 - 1 ) ;  <CR> if ( G6 . compareTo ( g9 ) == 1 )  <CR> G6 . display ( P5 ) ;  <CR> }  <CR> }  <CR> public void display ( int P5 ) {  <CR> list [ P5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x0 ) {  <CR> this . x = x0 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 