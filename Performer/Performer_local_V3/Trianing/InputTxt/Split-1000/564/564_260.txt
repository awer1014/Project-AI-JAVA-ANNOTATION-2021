 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A9 , String p0 , String h2 , String K6 , String c6 ) {  <CR> super ( A9 , p0 , h2 , K6 , c6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y5 , String H6 , String B9 , String p5 , String p7 ) {  <CR> super ( y5 , H6 , B9 , p5 , p7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d6 ) {  <CR> Evaluation x9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s4 = new Envelop ( "Taipei" , "Kaohsiung" , x9 ) ;  <CR> s4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String V9 , String T8 , Evaluation L2 ) {  <CR> this . senderAddr = V9 ;  <CR> this . receiverAddr = T8 ;  <CR> this . letter = L2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String W1 , String O1 , String t8 , String i2 , String q9 ) {  <CR> this . title = W1 ;  <CR> this . receiver = O1 ;  <CR> this . content = t8 ;  <CR> this . sender = i2 ;  <CR> this . date = q9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] q7 ) {  <CR> int C4 ;  <CR> for ( C4 = list . length - 1 ; C4 >= 0 ; C4 -- ) {  <CR> int r3 = C4 ;  <CR> Letter b6 = new Letter ( C4 ) ;  <CR> Letter p2 = new Letter ( r3 - 1 ) ;  <CR> if ( b6 . compareTo ( p2 ) == 1 )  <CR> b6 . display ( C4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object q ) {  <CR> Letter N9 = ( Letter ) q ;  <CR> if ( this . x > N9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int C4 ) {  <CR> list [ C4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int J1 ) {  <CR> this . x = J1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 