 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String x6 , String O4 , String H9 , String w9 , String r3 ) {  <CR> super ( x6 , O4 , H9 , w9 , r3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I0 , String X , String A0 , String L5 , String U7 ) {  <CR> super ( I0 , X , A0 , L5 , U7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String C1 , String Z4 , Evaluation u4 ) {  <CR> this . senderAddr = C1 ;  <CR> this . receiverAddr = Z4 ;  <CR> this . letter = u4 ;  <CR> }  <CR> public static void main ( String [ ] j1 ) {  <CR> Evaluation X1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G6 = new Envelop ( "Taipei" , "Kaohsiung" , X1 ) ;  <CR> G6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String q8 , String m7 , String h9 , String c2 , String H7 ) {  <CR> this . title = q8 ;  <CR> this . receiver = m7 ;  <CR> this . content = h9 ;  <CR> this . sender = c2 ;  <CR> this . date = H7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int H5 ) {  <CR> this . x = H5 ;  <CR> }  <CR> public static void main ( String [ ] O8 ) {  <CR> int H0 ;  <CR> for ( H0 = list . length - 1 ; H0 >= 0 ; H0 -- ) {  <CR> int l6 = H0 ;  <CR> Letter W5 = new Letter ( H0 ) ;  <CR> Letter a6 = new Letter ( l6 - 1 ) ;  <CR> if ( W5 . compareTo ( a6 ) == 1 )  <CR> W5 . display ( H0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H0 ) {  <CR> list [ H0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object A5 ) {  <CR> Letter k6 = ( Letter ) A5 ;  <CR> if ( this . x > k6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 