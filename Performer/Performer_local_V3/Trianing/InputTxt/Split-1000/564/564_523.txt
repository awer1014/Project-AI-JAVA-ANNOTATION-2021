 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X6 , String Q3 , String d1 , String Y9 , String T0 ) {  <CR> super ( X6 , Q3 , d1 , Y9 , T0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A6 , String T3 , String O , String I2 , String V2 ) {  <CR> super ( A6 , T3 , O , I2 , V2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] k1 ) {  <CR> Evaluation Y8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p9 = new Envelop ( "Taipei" , "Kaohsiung" , Y8 ) ;  <CR> p9 . display ( ) ;  <CR> }  <CR> public Envelop ( String m4 , String G9 , Evaluation V7 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = G9 ;  <CR> this . letter = V7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String r3 , String i2 , String k5 , String c3 , String J2 ) {  <CR> this . title = r3 ;  <CR> this . receiver = i2 ;  <CR> this . content = k5 ;  <CR> this . sender = c3 ;  <CR> this . date = J2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object m ) {  <CR> Letter n2 = ( Letter ) m ;  <CR> if ( this . x > n2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> int K ;  <CR> for ( K = list . length - 1 ; K >= 0 ; K -- ) {  <CR> int L0 = K ;  <CR> Letter c4 = new Letter ( K ) ;  <CR> Letter I0 = new Letter ( L0 - 1 ) ;  <CR> if ( c4 . compareTo ( I0 ) == 1 )  <CR> c4 . display ( K ) ;  <CR> }  <CR> }  <CR> Letter ( int V3 ) {  <CR> this . x = V3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int K ) {  <CR> list [ K ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 