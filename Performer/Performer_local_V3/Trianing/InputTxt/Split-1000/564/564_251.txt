 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r7 , String q , String c6 , String H9 , String k8 ) {  <CR> super ( r7 , q , c6 , H9 , k8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V6 , String T7 , String j3 , String m1 , String l ) {  <CR> super ( V6 , T7 , j3 , m1 , l ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String E2 , String F1 , Evaluation Z5 ) {  <CR> this . senderAddr = E2 ;  <CR> this . receiverAddr = F1 ;  <CR> this . letter = Z5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] u9 ) {  <CR> Evaluation n0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z = new Envelop ( "Taipei" , "Kaohsiung" , n0 ) ;  <CR> z . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String U4 , String f8 , String r1 , String C2 , String V8 ) {  <CR> this . title = U4 ;  <CR> this . receiver = f8 ;  <CR> this . content = r1 ;  <CR> this . sender = C2 ;  <CR> this . date = V8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int U5 ) {  <CR> this . x = U5 ;  <CR> }  <CR> public void display ( int d8 ) {  <CR> list [ d8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] k8 ) {  <CR> int d8 ;  <CR> for ( d8 = list . length - 1 ; d8 >= 0 ; d8 -- ) {  <CR> int U9 = d8 ;  <CR> Letter t = new Letter ( d8 ) ;  <CR> Letter T1 = new Letter ( U9 - 1 ) ;  <CR> if ( t . compareTo ( T1 ) == 1 )  <CR> t . display ( d8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object t9 ) {  <CR> Letter l3 = ( Letter ) t9 ;  <CR> if ( this . x > l3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 