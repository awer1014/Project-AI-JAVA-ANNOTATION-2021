 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String f , String Z , String J8 , String L2 , String a4 ) {  <CR> super ( f , Z , J8 , L2 , a4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O9 , String j9 , String A7 , String U3 , String J6 ) {  <CR> super ( O9 , j9 , A7 , U3 , J6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String I4 , String D3 , Evaluation I1 ) {  <CR> this . senderAddr = I4 ;  <CR> this . receiverAddr = D3 ;  <CR> this . letter = I1 ;  <CR> }  <CR> public static void main ( String [ ] H1 ) {  <CR> Evaluation r6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I3 = new Envelop ( "Taipei" , "Kaohsiung" , r6 ) ;  <CR> I3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String V , String x4 , String f2 , String g3 , String v9 ) {  <CR> this . title = V ;  <CR> this . receiver = x4 ;  <CR> this . content = f2 ;  <CR> this . sender = g3 ;  <CR> this . date = v9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p ) {  <CR> int m1 ;  <CR> for ( m1 = list . length - 1 ; m1 >= 0 ; m1 -- ) {  <CR> int i8 = m1 ;  <CR> Letter Q1 = new Letter ( m1 ) ;  <CR> Letter s3 = new Letter ( i8 - 1 ) ;  <CR> if ( Q1 . compareTo ( s3 ) == 1 )  <CR> Q1 . display ( m1 ) ;  <CR> }  <CR> }  <CR> public void display ( int m1 ) {  <CR> list [ m1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int k ) {  <CR> this . x = k ;  <CR> }  <CR> public int compareTo ( Object S9 ) {  <CR> Letter F8 = ( Letter ) S9 ;  <CR> if ( this . x > F8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 