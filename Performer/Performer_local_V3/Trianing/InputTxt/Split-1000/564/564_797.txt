 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String n8 , String M1 , String z6 , String Q5 , String L3 ) {  <CR> super ( n8 , M1 , z6 , Q5 , L3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R8 , String M8 , String l1 , String g7 , String O9 ) {  <CR> super ( R8 , M8 , l1 , g7 , O9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String D4 , String a6 , Evaluation o5 ) {  <CR> this . senderAddr = D4 ;  <CR> this . receiverAddr = a6 ;  <CR> this . letter = o5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Z5 ) {  <CR> Evaluation y5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C4 = new Envelop ( "Taipei" , "Kaohsiung" , y5 ) ;  <CR> C4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String i2 , String H , String M9 , String S2 , String n2 ) {  <CR> this . title = i2 ;  <CR> this . receiver = H ;  <CR> this . content = M9 ;  <CR> this . sender = S2 ;  <CR> this . date = n2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int e1 ) {  <CR> this . x = e1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int y6 ) {  <CR> list [ y6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object L0 ) {  <CR> Letter m9 = ( Letter ) L0 ;  <CR> if ( this . x > m9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] y4 ) {  <CR> int y6 ;  <CR> for ( y6 = list . length - 1 ; y6 >= 0 ; y6 -- ) {  <CR> int F9 = y6 ;  <CR> Letter B1 = new Letter ( y6 ) ;  <CR> Letter x4 = new Letter ( F9 - 1 ) ;  <CR> if ( B1 . compareTo ( x4 ) == 1 )  <CR> B1 . display ( y6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 