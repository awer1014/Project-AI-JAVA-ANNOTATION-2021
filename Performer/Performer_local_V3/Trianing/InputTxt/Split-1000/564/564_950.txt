 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X8 , String T9 , String J1 , String G3 , String Y0 ) {  <CR> super ( X8 , T9 , J1 , G3 , Y0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X9 , String x4 , String q8 , String d8 , String E7 ) {  <CR> super ( X9 , x4 , q8 , d8 , E7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] O8 ) {  <CR> Evaluation U7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T0 = new Envelop ( "Taipei" , "Kaohsiung" , U7 ) ;  <CR> T0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String P7 , String w8 , Evaluation D9 ) {  <CR> this . senderAddr = P7 ;  <CR> this . receiverAddr = w8 ;  <CR> this . letter = D9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String J9 , String L4 , String Y9 , String I8 , String N6 ) {  <CR> this . title = J9 ;  <CR> this . receiver = L4 ;  <CR> this . content = Y9 ;  <CR> this . sender = I8 ;  <CR> this . date = N6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object A6 ) {  <CR> Letter q9 = ( Letter ) A6 ;  <CR> if ( this . x > q9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] E9 ) {  <CR> int c7 ;  <CR> for ( c7 = list . length - 1 ; c7 >= 0 ; c7 -- ) {  <CR> int z5 = c7 ;  <CR> Letter h5 = new Letter ( c7 ) ;  <CR> Letter U9 = new Letter ( z5 - 1 ) ;  <CR> if ( h5 . compareTo ( U9 ) == 1 )  <CR> h5 . display ( c7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int c9 ) {  <CR> this . x = c9 ;  <CR> }  <CR> public void display ( int c7 ) {  <CR> list [ c7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 