 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String u2 , String K , String Z6 , String i , String R7 ) {  <CR> super ( u2 , K , Z6 , i , R7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R3 , String g7 , String C8 , String v2 , String m0 ) {  <CR> super ( R3 , g7 , C8 , v2 , m0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String d1 , String e , Evaluation m5 ) {  <CR> this . senderAddr = d1 ;  <CR> this . receiverAddr = e ;  <CR> this . letter = m5 ;  <CR> }  <CR> public static void main ( String [ ] t1 ) {  <CR> Evaluation H6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M2 = new Envelop ( "Taipei" , "Kaohsiung" , H6 ) ;  <CR> M2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String w3 , String c , String t1 , String f , String Y2 ) {  <CR> this . title = w3 ;  <CR> this . receiver = c ;  <CR> this . content = t1 ;  <CR> this . sender = f ;  <CR> this . date = Y2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int F6 ) {  <CR> list [ F6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] r5 ) {  <CR> int F6 ;  <CR> for ( F6 = list . length - 1 ; F6 >= 0 ; F6 -- ) {  <CR> int V0 = F6 ;  <CR> Letter O6 = new Letter ( F6 ) ;  <CR> Letter D4 = new Letter ( V0 - 1 ) ;  <CR> if ( O6 . compareTo ( D4 ) == 1 )  <CR> O6 . display ( F6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object M8 ) {  <CR> Letter z = ( Letter ) M8 ;  <CR> if ( this . x > z . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int d6 ) {  <CR> this . x = d6 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 