 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g7 , String l9 , String Y8 , String U8 , String n9 ) {  <CR> super ( g7 , l9 , Y8 , U8 , n9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L6 , String S2 , String z8 , String B , String x3 ) {  <CR> super ( L6 , S2 , z8 , B , x3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p9 , String H6 , Evaluation j1 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = H6 ;  <CR> this . letter = j1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v8 ) {  <CR> Evaluation u0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M6 = new Envelop ( "Taipei" , "Kaohsiung" , u0 ) ;  <CR> M6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String s4 , String T1 , String u7 , String u2 , String r6 ) {  <CR> this . title = s4 ;  <CR> this . receiver = T1 ;  <CR> this . content = u7 ;  <CR> this . sender = u2 ;  <CR> this . date = r6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int o3 ) {  <CR> this . x = o3 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int P8 ) {  <CR> list [ P8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object c3 ) {  <CR> Letter J9 = ( Letter ) c3 ;  <CR> if ( this . x > J9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] Y0 ) {  <CR> int P8 ;  <CR> for ( P8 = list . length - 1 ; P8 >= 0 ; P8 -- ) {  <CR> int e2 = P8 ;  <CR> Letter D9 = new Letter ( P8 ) ;  <CR> Letter D1 = new Letter ( e2 - 1 ) ;  <CR> if ( D9 . compareTo ( D1 ) == 1 )  <CR> D9 . display ( P8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 