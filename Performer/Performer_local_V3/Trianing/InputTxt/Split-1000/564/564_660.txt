 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String B3 , String S2 , String E9 , String F , String x1 ) {  <CR> super ( B3 , S2 , E9 , F , x1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n2 , String O4 , String R , String w1 , String Z0 ) {  <CR> super ( n2 , O4 , R , w1 , Z0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] j6 ) {  <CR> Evaluation H0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y = new Envelop ( "Taipei" , "Kaohsiung" , H0 ) ;  <CR> y . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String x8 , String k0 , Evaluation c7 ) {  <CR> this . senderAddr = x8 ;  <CR> this . receiverAddr = k0 ;  <CR> this . letter = c7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String r3 , String E3 , String l , String g8 , String w3 ) {  <CR> this . title = r3 ;  <CR> this . receiver = E3 ;  <CR> this . content = l ;  <CR> this . sender = g8 ;  <CR> this . date = w3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int f8 ) {  <CR> this . x = f8 ;  <CR> }  <CR> public void display ( int N3 ) {  <CR> list [ N3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] K8 ) {  <CR> int N3 ;  <CR> for ( N3 = list . length - 1 ; N3 >= 0 ; N3 -- ) {  <CR> int O4 = N3 ;  <CR> Letter s4 = new Letter ( N3 ) ;  <CR> Letter S4 = new Letter ( O4 - 1 ) ;  <CR> if ( s4 . compareTo ( S4 ) == 1 )  <CR> s4 . display ( N3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object p9 ) {  <CR> Letter O = ( Letter ) p9 ;  <CR> if ( this . x > O . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 