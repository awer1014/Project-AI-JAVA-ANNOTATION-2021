 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l5 , String W , String H9 , String Z9 , String G8 ) {  <CR> super ( l5 , W , H9 , Z9 , G8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X2 , String Y9 , String G1 , String U , String H3 ) {  <CR> super ( X2 , Y9 , G1 , U , H3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String m9 , String r0 , Evaluation w6 ) {  <CR> this . senderAddr = m9 ;  <CR> this . receiverAddr = r0 ;  <CR> this . letter = w6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] i2 ) {  <CR> Evaluation M6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A = new Envelop ( "Taipei" , "Kaohsiung" , M6 ) ;  <CR> A . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Z6 , String u1 , String q2 , String K9 , String E1 ) {  <CR> this . title = Z6 ;  <CR> this . receiver = u1 ;  <CR> this . content = q2 ;  <CR> this . sender = K9 ;  <CR> this . date = E1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int A3 ) {  <CR> list [ A3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I2 ) {  <CR> int A3 ;  <CR> for ( A3 = list . length - 1 ; A3 >= 0 ; A3 -- ) {  <CR> int p4 = A3 ;  <CR> Letter x1 = new Letter ( A3 ) ;  <CR> Letter m5 = new Letter ( p4 - 1 ) ;  <CR> if ( x1 . compareTo ( m5 ) == 1 )  <CR> x1 . display ( A3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object C4 ) {  <CR> Letter B8 = ( Letter ) C4 ;  <CR> if ( this . x > B8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int S6 ) {  <CR> this . x = S6 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 