 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N4 , String K , String b3 , String D3 , String K1 ) {  <CR> super ( N4 , K , b3 , D3 , K1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L8 , String g0 , String A , String C4 , String i ) {  <CR> super ( L8 , g0 , A , C4 , i ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] w1 ) {  <CR> Evaluation a4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h1 = new Envelop ( "Taipei" , "Kaohsiung" , a4 ) ;  <CR> h1 . display ( ) ;  <CR> }  <CR> public Envelop ( String h8 , String Q1 , Evaluation Q2 ) {  <CR> this . senderAddr = h8 ;  <CR> this . receiverAddr = Q1 ;  <CR> this . letter = Q2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String d , String B4 , String e0 , String i8 , String t6 ) {  <CR> this . title = d ;  <CR> this . receiver = B4 ;  <CR> this . content = e0 ;  <CR> this . sender = i8 ;  <CR> this . date = t6 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Q8 ) {  <CR> int A7 ;  <CR> for ( A7 = list . length - 1 ; A7 >= 0 ; A7 -- ) {  <CR> int j4 = A7 ;  <CR> Letter Y7 = new Letter ( A7 ) ;  <CR> Letter N0 = new Letter ( j4 - 1 ) ;  <CR> if ( Y7 . compareTo ( N0 ) == 1 )  <CR> Y7 . display ( A7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object r1 ) {  <CR> Letter G7 = ( Letter ) r1 ;  <CR> if ( this . x > G7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int A7 ) {  <CR> list [ A7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int m5 ) {  <CR> this . x = m5 ;  <CR> }  <CR> }  <CR>  <EOC> 