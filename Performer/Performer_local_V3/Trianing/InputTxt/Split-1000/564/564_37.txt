 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String m9 , String A , String l6 , String W0 , String Z3 ) {  <CR> super ( m9 , A , l6 , W0 , Z3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f2 , String f3 , String g0 , String p4 , String g ) {  <CR> super ( f2 , f3 , g0 , p4 , g ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String o , String e9 , Evaluation A7 ) {  <CR> this . senderAddr = o ;  <CR> this . receiverAddr = e9 ;  <CR> this . letter = A7 ;  <CR> }  <CR> public static void main ( String [ ] z3 ) {  <CR> Evaluation y7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t0 = new Envelop ( "Taipei" , "Kaohsiung" , y7 ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y , String h4 , String Q2 , String u , String P9 ) {  <CR> this . title = Y ;  <CR> this . receiver = h4 ;  <CR> this . content = Q2 ;  <CR> this . sender = u ;  <CR> this . date = P9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object n4 ) {  <CR> Letter i2 = ( Letter ) n4 ;  <CR> if ( this . x > i2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int C ) {  <CR> list [ C ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] V4 ) {  <CR> int C ;  <CR> for ( C = list . length - 1 ; C >= 0 ; C -- ) {  <CR> int Y9 = C ;  <CR> Letter I6 = new Letter ( C ) ;  <CR> Letter Z = new Letter ( Y9 - 1 ) ;  <CR> if ( I6 . compareTo ( Z ) == 1 )  <CR> I6 . display ( C ) ;  <CR> }  <CR> }  <CR> Letter ( int I8 ) {  <CR> this . x = I8 ;  <CR> }  <CR> }  <CR>  <EOC> 