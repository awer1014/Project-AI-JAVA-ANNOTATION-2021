 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X0 , String v2 , String e9 , String F , String x0 ) {  <CR> super ( X0 , v2 , e9 , F , x0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i , String p8 , String k7 , String i3 , String N9 ) {  <CR> super ( i , p8 , k7 , i3 , N9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] T8 ) {  <CR> Evaluation p9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R5 = new Envelop ( "Taipei" , "Kaohsiung" , p9 ) ;  <CR> R5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String d , String m3 , Evaluation F6 ) {  <CR> this . senderAddr = d ;  <CR> this . receiverAddr = m3 ;  <CR> this . letter = F6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String G7 , String U3 , String t8 , String F4 , String b7 ) {  <CR> this . title = G7 ;  <CR> this . receiver = U3 ;  <CR> this . content = t8 ;  <CR> this . sender = F4 ;  <CR> this . date = b7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] v8 ) {  <CR> int d1 ;  <CR> for ( d1 = list . length - 1 ; d1 >= 0 ; d1 -- ) {  <CR> int I3 = d1 ;  <CR> Letter L8 = new Letter ( d1 ) ;  <CR> Letter G = new Letter ( I3 - 1 ) ;  <CR> if ( L8 . compareTo ( G ) == 1 )  <CR> L8 . display ( d1 ) ;  <CR> }  <CR> }  <CR> public void display ( int d1 ) {  <CR> list [ d1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int j0 ) {  <CR> this . x = j0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object M0 ) {  <CR> Letter S3 = ( Letter ) M0 ;  <CR> if ( this . x > S3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 