 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o5 , String U1 , String T , String z3 , String V8 ) {  <CR> super ( o5 , U1 , T , z3 , V8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k8 , String E3 , String R9 , String k2 , String G6 ) {  <CR> super ( k8 , E3 , R9 , k2 , G6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String H3 , String e , Evaluation f3 ) {  <CR> this . senderAddr = H3 ;  <CR> this . receiverAddr = e ;  <CR> this . letter = f3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I6 ) {  <CR> Evaluation w3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k7 = new Envelop ( "Taipei" , "Kaohsiung" , w3 ) ;  <CR> k7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String B8 , String D , String m , String X8 , String n5 ) {  <CR> this . title = B8 ;  <CR> this . receiver = D ;  <CR> this . content = m ;  <CR> this . sender = X8 ;  <CR> this . date = n5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] K8 ) {  <CR> int V4 ;  <CR> for ( V4 = list . length - 1 ; V4 >= 0 ; V4 -- ) {  <CR> int O7 = V4 ;  <CR> Letter s1 = new Letter ( V4 ) ;  <CR> Letter R8 = new Letter ( O7 - 1 ) ;  <CR> if ( s1 . compareTo ( R8 ) == 1 )  <CR> s1 . display ( V4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int O9 ) {  <CR> this . x = O9 ;  <CR> }  <CR> public int compareTo ( Object w7 ) {  <CR> Letter M0 = ( Letter ) w7 ;  <CR> if ( this . x > M0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int V4 ) {  <CR> list [ V4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 