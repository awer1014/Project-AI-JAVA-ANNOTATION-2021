 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q0 , String Z5 , String B1 , String V8 , String H9 ) {  <CR> super ( Q0 , Z5 , B1 , V8 , H9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String l , String d6 , String T3 , String Y0 , String n2 ) {  <CR> super ( l , d6 , T3 , Y0 , n2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C1 , String H3 , Evaluation p9 ) {  <CR> this . senderAddr = C1 ;  <CR> this . receiverAddr = H3 ;  <CR> this . letter = p9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G3 ) {  <CR> Evaluation k0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c2 = new Envelop ( "Taipei" , "Kaohsiung" , k0 ) ;  <CR> c2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String x8 , String s , String f5 , String R0 , String C0 ) {  <CR> this . title = x8 ;  <CR> this . receiver = s ;  <CR> this . content = f5 ;  <CR> this . sender = R0 ;  <CR> this . date = C0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int w9 ) {  <CR> this . x = w9 ;  <CR> }  <CR> public int compareTo ( Object E9 ) {  <CR> Letter C3 = ( Letter ) E9 ;  <CR> if ( this . x > C3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int h8 ) {  <CR> list [ h8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] b ) {  <CR> int h8 ;  <CR> for ( h8 = list . length - 1 ; h8 >= 0 ; h8 -- ) {  <CR> int s3 = h8 ;  <CR> Letter E1 = new Letter ( h8 ) ;  <CR> Letter u8 = new Letter ( s3 - 1 ) ;  <CR> if ( E1 . compareTo ( u8 ) == 1 )  <CR> E1 . display ( h8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 