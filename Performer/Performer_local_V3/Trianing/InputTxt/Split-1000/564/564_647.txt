 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String E8 , String J , String i6 , String C6 , String l9 ) {  <CR> super ( E8 , J , i6 , C6 , l9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z2 , String v9 , String X1 , String m3 , String p4 ) {  <CR> super ( Z2 , v9 , X1 , m3 , p4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Z ) {  <CR> Evaluation e4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F9 = new Envelop ( "Taipei" , "Kaohsiung" , e4 ) ;  <CR> F9 . display ( ) ;  <CR> }  <CR> public Envelop ( String C2 , String r2 , Evaluation z5 ) {  <CR> this . senderAddr = C2 ;  <CR> this . receiverAddr = r2 ;  <CR> this . letter = z5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String W4 , String v3 , String J0 , String l6 , String H3 ) {  <CR> this . title = W4 ;  <CR> this . receiver = v3 ;  <CR> this . content = J0 ;  <CR> this . sender = l6 ;  <CR> this . date = H3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] t1 ) {  <CR> int J4 ;  <CR> for ( J4 = list . length - 1 ; J4 >= 0 ; J4 -- ) {  <CR> int M8 = J4 ;  <CR> Letter Y = new Letter ( J4 ) ;  <CR> Letter R4 = new Letter ( M8 - 1 ) ;  <CR> if ( Y . compareTo ( R4 ) == 1 )  <CR> Y . display ( J4 ) ;  <CR> }  <CR> }  <CR> public void display ( int J4 ) {  <CR> list [ J4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int n9 ) {  <CR> this . x = n9 ;  <CR> }  <CR> public int compareTo ( Object B ) {  <CR> Letter s5 = ( Letter ) B ;  <CR> if ( this . x > s5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 