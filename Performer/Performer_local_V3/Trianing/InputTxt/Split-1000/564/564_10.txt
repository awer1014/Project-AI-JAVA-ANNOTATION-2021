 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g1 , String m8 , String f2 , String g , String V4 ) {  <CR> super ( g1 , m8 , f2 , g , V4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h1 , String U3 , String X4 , String a8 , String Y3 ) {  <CR> super ( h1 , U3 , X4 , a8 , Y3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] a3 ) {  <CR> Evaluation M = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y7 = new Envelop ( "Taipei" , "Kaohsiung" , M ) ;  <CR> y7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String r7 , String T4 , Evaluation r9 ) {  <CR> this . senderAddr = r7 ;  <CR> this . receiverAddr = T4 ;  <CR> this . letter = r9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String A4 , String K9 , String F9 , String N8 , String P2 ) {  <CR> this . title = A4 ;  <CR> this . receiver = K9 ;  <CR> this . content = F9 ;  <CR> this . sender = N8 ;  <CR> this . date = P2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] C0 ) {  <CR> int P5 ;  <CR> for ( P5 = list . length - 1 ; P5 >= 0 ; P5 -- ) {  <CR> int e7 = P5 ;  <CR> Letter x3 = new Letter ( P5 ) ;  <CR> Letter w = new Letter ( e7 - 1 ) ;  <CR> if ( x3 . compareTo ( w ) == 1 )  <CR> x3 . display ( P5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object L ) {  <CR> Letter a0 = ( Letter ) L ;  <CR> if ( this . x > a0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int V4 ) {  <CR> this . x = V4 ;  <CR> }  <CR> public void display ( int P5 ) {  <CR> list [ P5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 