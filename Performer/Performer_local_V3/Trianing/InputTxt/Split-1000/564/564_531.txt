 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t4 , String S0 , String B9 , String m , String b4 ) {  <CR> super ( t4 , S0 , B9 , m , b4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e6 , String Q9 , String B7 , String O0 , String h1 ) {  <CR> super ( e6 , Q9 , B7 , O0 , h1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String w4 , String G5 , Evaluation U3 ) {  <CR> this . senderAddr = w4 ;  <CR> this . receiverAddr = G5 ;  <CR> this . letter = U3 ;  <CR> }  <CR> public static void main ( String [ ] F4 ) {  <CR> Evaluation i7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r0 = new Envelop ( "Taipei" , "Kaohsiung" , i7 ) ;  <CR> r0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s1 , String X , String E3 , String R2 , String e7 ) {  <CR> this . title = s1 ;  <CR> this . receiver = X ;  <CR> this . content = E3 ;  <CR> this . sender = R2 ;  <CR> this . date = e7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object S7 ) {  <CR> Letter x2 = ( Letter ) S7 ;  <CR> if ( this . x > x2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] g4 ) {  <CR> int L6 ;  <CR> for ( L6 = list . length - 1 ; L6 >= 0 ; L6 -- ) {  <CR> int J8 = L6 ;  <CR> Letter R5 = new Letter ( L6 ) ;  <CR> Letter e3 = new Letter ( J8 - 1 ) ;  <CR> if ( R5 . compareTo ( e3 ) == 1 )  <CR> R5 . display ( L6 ) ;  <CR> }  <CR> }  <CR> Letter ( int f4 ) {  <CR> this . x = f4 ;  <CR> }  <CR> public void display ( int L6 ) {  <CR> list [ L6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 