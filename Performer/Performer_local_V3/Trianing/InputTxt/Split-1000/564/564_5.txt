 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y3 , String e2 , String a3 , String T2 , String f4 ) {  <CR> super ( y3 , e2 , a3 , T2 , f4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B5 , String Q2 , String e1 , String m1 , String L2 ) {  <CR> super ( B5 , Q2 , e1 , m1 , L2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String U1 , String m0 , Evaluation t0 ) {  <CR> this . senderAddr = U1 ;  <CR> this . receiverAddr = m0 ;  <CR> this . letter = t0 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] n9 ) {  <CR> Evaluation M5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t1 = new Envelop ( "Taipei" , "Kaohsiung" , M5 ) ;  <CR> t1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String v , String z6 , String C1 , String K6 , String t4 ) {  <CR> this . title = v ;  <CR> this . receiver = z6 ;  <CR> this . content = C1 ;  <CR> this . sender = K6 ;  <CR> this . date = t4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Y1 ) {  <CR> list [ Y1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int b9 ) {  <CR> this . x = b9 ;  <CR> }  <CR> public int compareTo ( Object X ) {  <CR> Letter F3 = ( Letter ) X ;  <CR> if ( this . x > F3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] i7 ) {  <CR> int Y1 ;  <CR> for ( Y1 = list . length - 1 ; Y1 >= 0 ; Y1 -- ) {  <CR> int T1 = Y1 ;  <CR> Letter s7 = new Letter ( Y1 ) ;  <CR> Letter M4 = new Letter ( T1 - 1 ) ;  <CR> if ( s7 . compareTo ( M4 ) == 1 )  <CR> s7 . display ( Y1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 