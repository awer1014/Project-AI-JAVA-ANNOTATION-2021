 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String q6 , String R1 , String g8 , String U3 , String C7 ) {  <CR> super ( q6 , R1 , g8 , U3 , C7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W9 , String p7 , String b , String G3 , String x2 ) {  <CR> super ( W9 , p7 , b , G3 , x2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String e6 , String S1 , Evaluation y7 ) {  <CR> this . senderAddr = e6 ;  <CR> this . receiverAddr = S1 ;  <CR> this . letter = y7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p5 ) {  <CR> Evaluation z1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y2 = new Envelop ( "Taipei" , "Kaohsiung" , z1 ) ;  <CR> y2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String z9 , String k0 , String a0 , String t2 , String v5 ) {  <CR> this . title = z9 ;  <CR> this . receiver = k0 ;  <CR> this . content = a0 ;  <CR> this . sender = t2 ;  <CR> this . date = v5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int b6 ) {  <CR> list [ b6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] i ) {  <CR> int b6 ;  <CR> for ( b6 = list . length - 1 ; b6 >= 0 ; b6 -- ) {  <CR> int p2 = b6 ;  <CR> Letter G = new Letter ( b6 ) ;  <CR> Letter N9 = new Letter ( p2 - 1 ) ;  <CR> if ( G . compareTo ( N9 ) == 1 )  <CR> G . display ( b6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object D4 ) {  <CR> Letter b4 = ( Letter ) D4 ;  <CR> if ( this . x > b4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int c7 ) {  <CR> this . x = c7 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 