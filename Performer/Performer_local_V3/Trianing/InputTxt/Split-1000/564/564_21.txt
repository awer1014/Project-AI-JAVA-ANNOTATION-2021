 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X4 , String k , String n5 , String F , String W3 ) {  <CR> super ( X4 , k , n5 , F , W3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String A8 , String R8 , String b2 , String h1 , String B8 ) {  <CR> super ( A8 , R8 , b2 , h1 , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String P , String R9 , Evaluation a4 ) {  <CR> this . senderAddr = P ;  <CR> this . receiverAddr = R9 ;  <CR> this . letter = a4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y ) {  <CR> Evaluation c9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i6 = new Envelop ( "Taipei" , "Kaohsiung" , c9 ) ;  <CR> i6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String G3 , String W5 , String i5 , String E9 , String n9 ) {  <CR> this . title = G3 ;  <CR> this . receiver = W5 ;  <CR> this . content = i5 ;  <CR> this . sender = E9 ;  <CR> this . date = n9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int C9 ) {  <CR> this . x = C9 ;  <CR> }  <CR> public void display ( int p ) {  <CR> list [ p ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] y4 ) {  <CR> int p ;  <CR> for ( p = list . length - 1 ; p >= 0 ; p -- ) {  <CR> int O = p ;  <CR> Letter j2 = new Letter ( p ) ;  <CR> Letter h4 = new Letter ( O - 1 ) ;  <CR> if ( j2 . compareTo ( h4 ) == 1 )  <CR> j2 . display ( p ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object W6 ) {  <CR> Letter j5 = ( Letter ) W6 ;  <CR> if ( this . x > j5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 