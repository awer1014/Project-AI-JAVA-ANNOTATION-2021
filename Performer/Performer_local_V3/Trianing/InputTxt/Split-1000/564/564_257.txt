 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z2 , String b7 , String u5 , String y4 , String t7 ) {  <CR> super ( z2 , b7 , u5 , y4 , t7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D9 , String n8 , String X1 , String Y1 , String P1 ) {  <CR> super ( D9 , n8 , X1 , Y1 , P1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x1 ) {  <CR> Evaluation s8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W1 = new Envelop ( "Taipei" , "Kaohsiung" , s8 ) ;  <CR> W1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String z , String I5 , Evaluation l8 ) {  <CR> this . senderAddr = z ;  <CR> this . receiverAddr = I5 ;  <CR> this . letter = l8 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String A7 , String E1 , String r4 , String i5 , String O1 ) {  <CR> this . title = A7 ;  <CR> this . receiver = E1 ;  <CR> this . content = r4 ;  <CR> this . sender = i5 ;  <CR> this . date = O1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object N2 ) {  <CR> Letter y8 = ( Letter ) N2 ;  <CR> if ( this . x > y8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int d0 ) {  <CR> list [ d0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] o0 ) {  <CR> int d0 ;  <CR> for ( d0 = list . length - 1 ; d0 >= 0 ; d0 -- ) {  <CR> int n = d0 ;  <CR> Letter P3 = new Letter ( d0 ) ;  <CR> Letter l7 = new Letter ( n - 1 ) ;  <CR> if ( P3 . compareTo ( l7 ) == 1 )  <CR> P3 . display ( d0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int C4 ) {  <CR> this . x = C4 ;  <CR> }  <CR> }  <CR>  <EOC> 