 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L8 , String S5 , String K0 , String L9 , String o2 ) {  <CR> super ( L8 , S5 , K0 , L9 , o2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e0 , String G1 , String V9 , String X2 , String r ) {  <CR> super ( e0 , G1 , V9 , X2 , r ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Z5 ) {  <CR> Evaluation Q4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U3 = new Envelop ( "Taipei" , "Kaohsiung" , Q4 ) ;  <CR> U3 . display ( ) ;  <CR> }  <CR> public Envelop ( String P6 , String O8 , Evaluation k ) {  <CR> this . senderAddr = P6 ;  <CR> this . receiverAddr = O8 ;  <CR> this . letter = k ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String i1 , String Z8 , String I4 , String H2 , String N ) {  <CR> this . title = i1 ;  <CR> this . receiver = Z8 ;  <CR> this . content = I4 ;  <CR> this . sender = H2 ;  <CR> this . date = N ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] D8 ) {  <CR> int y0 ;  <CR> for ( y0 = list . length - 1 ; y0 >= 0 ; y0 -- ) {  <CR> int F0 = y0 ;  <CR> Letter v = new Letter ( y0 ) ;  <CR> Letter K6 = new Letter ( F0 - 1 ) ;  <CR> if ( v . compareTo ( K6 ) == 1 )  <CR> v . display ( y0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object b5 ) {  <CR> Letter J3 = ( Letter ) b5 ;  <CR> if ( this . x > J3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int s6 ) {  <CR> this . x = s6 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int y0 ) {  <CR> list [ y0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 