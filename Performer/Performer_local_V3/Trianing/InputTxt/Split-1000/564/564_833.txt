 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S0 , String A , String V7 , String L , String T9 ) {  <CR> super ( S0 , A , V7 , L , T9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q4 , String Z6 , String e4 , String u1 , String C ) {  <CR> super ( q4 , Z6 , e4 , u1 , C ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String W0 , String M3 , Evaluation E0 ) {  <CR> this . senderAddr = W0 ;  <CR> this . receiverAddr = M3 ;  <CR> this . letter = E0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] t4 ) {  <CR> Evaluation Z1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O = new Envelop ( "Taipei" , "Kaohsiung" , Z1 ) ;  <CR> O . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String w1 , String a2 , String E4 , String n7 , String t4 ) {  <CR> this . title = w1 ;  <CR> this . receiver = a2 ;  <CR> this . content = E4 ;  <CR> this . sender = n7 ;  <CR> this . date = t4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object t7 ) {  <CR> Letter q2 = ( Letter ) t7 ;  <CR> if ( this . x > q2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] o2 ) {  <CR> int l3 ;  <CR> for ( l3 = list . length - 1 ; l3 >= 0 ; l3 -- ) {  <CR> int g4 = l3 ;  <CR> Letter F3 = new Letter ( l3 ) ;  <CR> Letter e4 = new Letter ( g4 - 1 ) ;  <CR> if ( F3 . compareTo ( e4 ) == 1 )  <CR> F3 . display ( l3 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int l3 ) {  <CR> list [ l3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int D0 ) {  <CR> this . x = D0 ;  <CR> }  <CR> }  <CR>  <EOC> 