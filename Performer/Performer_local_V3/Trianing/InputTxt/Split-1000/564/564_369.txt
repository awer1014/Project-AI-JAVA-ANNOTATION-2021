 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L5 , String j , String E9 , String f5 , String v0 ) {  <CR> super ( L5 , j , E9 , f5 , v0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String u5 , String z2 , String u6 , String h4 , String r1 ) {  <CR> super ( u5 , z2 , u6 , h4 , r1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String K3 , String r3 , Evaluation p3 ) {  <CR> this . senderAddr = K3 ;  <CR> this . receiverAddr = r3 ;  <CR> this . letter = p3 ;  <CR> }  <CR> public static void main ( String [ ] s6 ) {  <CR> Evaluation s8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u2 = new Envelop ( "Taipei" , "Kaohsiung" , s8 ) ;  <CR> u2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String G2 , String f7 , String W6 , String o7 , String H ) {  <CR> this . title = G2 ;  <CR> this . receiver = f7 ;  <CR> this . content = W6 ;  <CR> this . sender = o7 ;  <CR> this . date = H ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object F9 ) {  <CR> Letter H = ( Letter ) F9 ;  <CR> if ( this . x > H . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int V3 ) {  <CR> this . x = V3 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] h2 ) {  <CR> int d3 ;  <CR> for ( d3 = list . length - 1 ; d3 >= 0 ; d3 -- ) {  <CR> int G5 = d3 ;  <CR> Letter b1 = new Letter ( d3 ) ;  <CR> Letter L7 = new Letter ( G5 - 1 ) ;  <CR> if ( b1 . compareTo ( L7 ) == 1 )  <CR> b1 . display ( d3 ) ;  <CR> }  <CR> }  <CR> public void display ( int d3 ) {  <CR> list [ d3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 