 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A8 , String m5 , String H9 , String P2 , String p6 ) {  <CR> super ( A8 , m5 , H9 , P2 , p6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String O , String d6 , String m7 , String Z7 , String H1 ) {  <CR> super ( O , d6 , m7 , Z7 , H1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P ) {  <CR> Evaluation Y7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t2 = new Envelop ( "Taipei" , "Kaohsiung" , Y7 ) ;  <CR> t2 . display ( ) ;  <CR> }  <CR> public Envelop ( String Y6 , String R5 , Evaluation v4 ) {  <CR> this . senderAddr = Y6 ;  <CR> this . receiverAddr = R5 ;  <CR> this . letter = v4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String e8 , String R5 , String o5 , String f7 , String o4 ) {  <CR> this . title = e8 ;  <CR> this . receiver = R5 ;  <CR> this . content = o5 ;  <CR> this . sender = f7 ;  <CR> this . date = o4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int n7 ) {  <CR> list [ n7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int i3 ) {  <CR> this . x = i3 ;  <CR> }  <CR> public int compareTo ( Object r0 ) {  <CR> Letter K9 = ( Letter ) r0 ;  <CR> if ( this . x > K9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] h5 ) {  <CR> int n7 ;  <CR> for ( n7 = list . length - 1 ; n7 >= 0 ; n7 -- ) {  <CR> int S6 = n7 ;  <CR> Letter P1 = new Letter ( n7 ) ;  <CR> Letter h7 = new Letter ( S6 - 1 ) ;  <CR> if ( P1 . compareTo ( h7 ) == 1 )  <CR> P1 . display ( n7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 