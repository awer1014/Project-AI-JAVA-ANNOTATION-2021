 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e5 , String p3 , String G8 , String K5 , String c9 ) {  <CR> super ( e5 , p3 , G8 , K5 , c9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z9 , String c6 , String V5 , String e7 , String G2 ) {  <CR> super ( Z9 , c6 , V5 , e7 , G2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p , String K7 , Evaluation v5 ) {  <CR> this . senderAddr = p ;  <CR> this . receiverAddr = K7 ;  <CR> this . letter = v5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v3 ) {  <CR> Evaluation j7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y5 = new Envelop ( "Taipei" , "Kaohsiung" , j7 ) ;  <CR> y5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String U0 , String y7 , String f5 , String v7 , String c3 ) {  <CR> this . title = U0 ;  <CR> this . receiver = y7 ;  <CR> this . content = f5 ;  <CR> this . sender = v7 ;  <CR> this . date = c3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] O2 ) {  <CR> int v3 ;  <CR> for ( v3 = list . length - 1 ; v3 >= 0 ; v3 -- ) {  <CR> int L7 = v3 ;  <CR> Letter p8 = new Letter ( v3 ) ;  <CR> Letter l5 = new Letter ( L7 - 1 ) ;  <CR> if ( p8 . compareTo ( l5 ) == 1 )  <CR> p8 . display ( v3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object F9 ) {  <CR> Letter v0 = ( Letter ) F9 ;  <CR> if ( this . x > v0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int t9 ) {  <CR> this . x = t9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int v3 ) {  <CR> list [ v3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 