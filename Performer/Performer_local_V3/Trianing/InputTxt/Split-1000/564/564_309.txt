 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String f7 , String i0 , String q9 , String S2 , String O1 ) {  <CR> super ( f7 , i0 , q9 , S2 , O1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S2 , String M7 , String j4 , String L2 , String r6 ) {  <CR> super ( S2 , M7 , j4 , L2 , r6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] i8 ) {  <CR> Evaluation W7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h5 = new Envelop ( "Taipei" , "Kaohsiung" , W7 ) ;  <CR> h5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String E3 , String Y1 , Evaluation y6 ) {  <CR> this . senderAddr = E3 ;  <CR> this . receiverAddr = Y1 ;  <CR> this . letter = y6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String L0 , String O3 , String U3 , String Q3 , String Y8 ) {  <CR> this . title = L0 ;  <CR> this . receiver = O3 ;  <CR> this . content = U3 ;  <CR> this . sender = Q3 ;  <CR> this . date = Y8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int A9 ) {  <CR> this . x = A9 ;  <CR> }  <CR> public void display ( int A8 ) {  <CR> list [ A8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] b1 ) {  <CR> int A8 ;  <CR> for ( A8 = list . length - 1 ; A8 >= 0 ; A8 -- ) {  <CR> int x5 = A8 ;  <CR> Letter i0 = new Letter ( A8 ) ;  <CR> Letter Y6 = new Letter ( x5 - 1 ) ;  <CR> if ( i0 . compareTo ( Y6 ) == 1 )  <CR> i0 . display ( A8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object t9 ) {  <CR> Letter m7 = ( Letter ) t9 ;  <CR> if ( this . x > m7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 