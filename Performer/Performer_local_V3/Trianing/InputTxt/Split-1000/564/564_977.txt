 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T3 , String K7 , String t9 , String w9 , String j8 ) {  <CR> super ( T3 , K7 , t9 , w9 , j8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String k3 , String v3 , String x8 , String m9 , String k9 ) {  <CR> super ( k3 , v3 , x8 , m9 , k9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String W3 , String z9 , Evaluation y7 ) {  <CR> this . senderAddr = W3 ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = y7 ;  <CR> }  <CR> public static void main ( String [ ] c9 ) {  <CR> Evaluation o5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p5 = new Envelop ( "Taipei" , "Kaohsiung" , o5 ) ;  <CR> p5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String f3 , String a1 , String S , String l1 , String f1 ) {  <CR> this . title = f3 ;  <CR> this . receiver = a1 ;  <CR> this . content = S ;  <CR> this . sender = l1 ;  <CR> this . date = f1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] b4 ) {  <CR> int W2 ;  <CR> for ( W2 = list . length - 1 ; W2 >= 0 ; W2 -- ) {  <CR> int N5 = W2 ;  <CR> Letter L1 = new Letter ( W2 ) ;  <CR> Letter P9 = new Letter ( N5 - 1 ) ;  <CR> if ( L1 . compareTo ( P9 ) == 1 )  <CR> L1 . display ( W2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int y8 ) {  <CR> this . x = y8 ;  <CR> }  <CR> public int compareTo ( Object K5 ) {  <CR> Letter X = ( Letter ) K5 ;  <CR> if ( this . x > X . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int W2 ) {  <CR> list [ W2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 