 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t6 , String U3 , String O2 , String O6 , String y5 ) {  <CR> super ( t6 , U3 , O2 , O6 , y5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H , String a3 , String U , String g9 , String n3 ) {  <CR> super ( H , a3 , U , g9 , n3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String i , String K0 , Evaluation I3 ) {  <CR> this . senderAddr = i ;  <CR> this . receiverAddr = K0 ;  <CR> this . letter = I3 ;  <CR> }  <CR> public static void main ( String [ ] n6 ) {  <CR> Evaluation u9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k6 = new Envelop ( "Taipei" , "Kaohsiung" , u9 ) ;  <CR> k6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String d5 , String i3 , String E7 , String q5 , String x4 ) {  <CR> this . title = d5 ;  <CR> this . receiver = i3 ;  <CR> this . content = E7 ;  <CR> this . sender = q5 ;  <CR> this . date = x4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int p1 ) {  <CR> list [ p1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object v6 ) {  <CR> Letter D9 = ( Letter ) v6 ;  <CR> if ( this . x > D9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] j4 ) {  <CR> int p1 ;  <CR> for ( p1 = list . length - 1 ; p1 >= 0 ; p1 -- ) {  <CR> int b7 = p1 ;  <CR> Letter Y5 = new Letter ( p1 ) ;  <CR> Letter m9 = new Letter ( b7 - 1 ) ;  <CR> if ( Y5 . compareTo ( m9 ) == 1 )  <CR> Y5 . display ( p1 ) ;  <CR> }  <CR> }  <CR> Letter ( int q2 ) {  <CR> this . x = q2 ;  <CR> }  <CR> }  <CR>  <EOC> 