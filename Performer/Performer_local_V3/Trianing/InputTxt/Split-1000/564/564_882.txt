 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String E2 , String v5 , String M6 , String U4 , String t3 ) {  <CR> super ( E2 , v5 , M6 , U4 , t3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w9 , String V0 , String e3 , String e4 , String C ) {  <CR> super ( w9 , V0 , e3 , e4 , C ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Y2 ) {  <CR> Evaluation l6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n3 = new Envelop ( "Taipei" , "Kaohsiung" , l6 ) ;  <CR> n3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String r , String Z9 , Evaluation l7 ) {  <CR> this . senderAddr = r ;  <CR> this . receiverAddr = Z9 ;  <CR> this . letter = l7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String Z1 , String b9 , String J1 , String l4 , String k ) {  <CR> this . title = Z1 ;  <CR> this . receiver = b9 ;  <CR> this . content = J1 ;  <CR> this . sender = l4 ;  <CR> this . date = k ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object o3 ) {  <CR> Letter D0 = ( Letter ) o3 ;  <CR> if ( this . x > D0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int w4 ) {  <CR> this . x = w4 ;  <CR> }  <CR> public static void main ( String [ ] x6 ) {  <CR> int M1 ;  <CR> for ( M1 = list . length - 1 ; M1 >= 0 ; M1 -- ) {  <CR> int H9 = M1 ;  <CR> Letter o1 = new Letter ( M1 ) ;  <CR> Letter h0 = new Letter ( H9 - 1 ) ;  <CR> if ( o1 . compareTo ( h0 ) == 1 )  <CR> o1 . display ( M1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M1 ) {  <CR> list [ M1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 