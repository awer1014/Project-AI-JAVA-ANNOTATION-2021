 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c7 , String s0 , String S9 , String M , String o7 ) {  <CR> super ( c7 , s0 , S9 , M , o7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v5 , String O3 , String V , String t9 , String k1 ) {  <CR> super ( v5 , O3 , V , t9 , k1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] x1 ) {  <CR> Evaluation s9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c = new Envelop ( "Taipei" , "Kaohsiung" , s9 ) ;  <CR> c . display ( ) ;  <CR> }  <CR> public Envelop ( String o2 , String k3 , Evaluation r7 ) {  <CR> this . senderAddr = o2 ;  <CR> this . receiverAddr = k3 ;  <CR> this . letter = r7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String T1 , String k , String n7 , String W0 , String s9 ) {  <CR> this . title = T1 ;  <CR> this . receiver = k ;  <CR> this . content = n7 ;  <CR> this . sender = W0 ;  <CR> this . date = s9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object M1 ) {  <CR> Letter E9 = ( Letter ) M1 ;  <CR> if ( this . x > E9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int c1 ) {  <CR> this . x = c1 ;  <CR> }  <CR> public void display ( int f5 ) {  <CR> list [ f5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] t ) {  <CR> int f5 ;  <CR> for ( f5 = list . length - 1 ; f5 >= 0 ; f5 -- ) {  <CR> int S = f5 ;  <CR> Letter x8 = new Letter ( f5 ) ;  <CR> Letter Z = new Letter ( S - 1 ) ;  <CR> if ( x8 . compareTo ( Z ) == 1 )  <CR> x8 . display ( f5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 