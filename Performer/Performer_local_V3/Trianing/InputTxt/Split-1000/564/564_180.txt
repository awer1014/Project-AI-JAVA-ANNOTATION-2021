 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r5 , String J2 , String y9 , String Q8 , String c6 ) {  <CR> super ( r5 , J2 , y9 , Q8 , c6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String m9 , String G1 , String L , String u0 , String R7 ) {  <CR> super ( m9 , G1 , L , u0 , R7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] s9 ) {  <CR> Evaluation E5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X0 = new Envelop ( "Taipei" , "Kaohsiung" , E5 ) ;  <CR> X0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String V4 , String Y , Evaluation p3 ) {  <CR> this . senderAddr = V4 ;  <CR> this . receiverAddr = Y ;  <CR> this . letter = p3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String d4 , String y1 , String H8 , String w6 , String y2 ) {  <CR> this . title = d4 ;  <CR> this . receiver = y1 ;  <CR> this . content = H8 ;  <CR> this . sender = w6 ;  <CR> this . date = y2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] t3 ) {  <CR> int N5 ;  <CR> for ( N5 = list . length - 1 ; N5 >= 0 ; N5 -- ) {  <CR> int X9 = N5 ;  <CR> Letter K0 = new Letter ( N5 ) ;  <CR> Letter t0 = new Letter ( X9 - 1 ) ;  <CR> if ( K0 . compareTo ( t0 ) == 1 )  <CR> K0 . display ( N5 ) ;  <CR> }  <CR> }  <CR> public void display ( int N5 ) {  <CR> list [ N5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int m1 ) {  <CR> this . x = m1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object s7 ) {  <CR> Letter F4 = ( Letter ) s7 ;  <CR> if ( this . x > F4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 