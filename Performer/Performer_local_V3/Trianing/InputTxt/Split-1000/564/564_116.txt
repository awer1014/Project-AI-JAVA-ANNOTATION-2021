 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I7 , String y2 , String m0 , String o9 , String y9 ) {  <CR> super ( I7 , y2 , m0 , o9 , y9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String x3 , String h4 , String G5 , String h9 , String w1 ) {  <CR> super ( x3 , h4 , G5 , h9 , w1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String R6 , String m , Evaluation j3 ) {  <CR> this . senderAddr = R6 ;  <CR> this . receiverAddr = m ;  <CR> this . letter = j3 ;  <CR> }  <CR> public static void main ( String [ ] l8 ) {  <CR> Evaluation L4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t = new Envelop ( "Taipei" , "Kaohsiung" , L4 ) ;  <CR> t . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String w5 , String u9 , String w2 , String q7 , String Z9 ) {  <CR> this . title = w5 ;  <CR> this . receiver = u9 ;  <CR> this . content = w2 ;  <CR> this . sender = q7 ;  <CR> this . date = Z9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int r7 ) {  <CR> this . x = r7 ;  <CR> }  <CR> public int compareTo ( Object j1 ) {  <CR> Letter K1 = ( Letter ) j1 ;  <CR> if ( this . x > K1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i ) {  <CR> list [ i ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] r8 ) {  <CR> int i ;  <CR> for ( i = list . length - 1 ; i >= 0 ; i -- ) {  <CR> int s5 = i ;  <CR> Letter Y9 = new Letter ( i ) ;  <CR> Letter b8 = new Letter ( s5 - 1 ) ;  <CR> if ( Y9 . compareTo ( b8 ) == 1 )  <CR> Y9 . display ( i ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 