 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e7 , String k7 , String T0 , String Q7 , String p9 ) {  <CR> super ( e7 , k7 , T0 , Q7 , p9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h1 , String H5 , String m3 , String W5 , String p8 ) {  <CR> super ( h1 , H5 , m3 , W5 , p8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String k7 , String M4 , Evaluation i7 ) {  <CR> this . senderAddr = k7 ;  <CR> this . receiverAddr = M4 ;  <CR> this . letter = i7 ;  <CR> }  <CR> public static void main ( String [ ] N0 ) {  <CR> Evaluation n1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p8 = new Envelop ( "Taipei" , "Kaohsiung" , n1 ) ;  <CR> p8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String x9 , String p0 , String A , String j0 , String A7 ) {  <CR> this . title = x9 ;  <CR> this . receiver = p0 ;  <CR> this . content = A ;  <CR> this . sender = j0 ;  <CR> this . date = A7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z5 ) {  <CR> int W9 ;  <CR> for ( W9 = list . length - 1 ; W9 >= 0 ; W9 -- ) {  <CR> int G0 = W9 ;  <CR> Letter U2 = new Letter ( W9 ) ;  <CR> Letter J8 = new Letter ( G0 - 1 ) ;  <CR> if ( U2 . compareTo ( J8 ) == 1 )  <CR> U2 . display ( W9 ) ;  <CR> }  <CR> }  <CR> public void display ( int W9 ) {  <CR> list [ W9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int B8 ) {  <CR> this . x = B8 ;  <CR> }  <CR> public int compareTo ( Object U7 ) {  <CR> Letter E5 = ( Letter ) U7 ;  <CR> if ( this . x > E5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 