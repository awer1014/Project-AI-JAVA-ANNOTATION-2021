 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b , String y1 , String j , String Z8 , String H7 ) {  <CR> super ( b , y1 , j , Z8 , H7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String k9 , String O4 , String G8 , String T9 , String T8 ) {  <CR> super ( k9 , O4 , G8 , T9 , T8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Y9 , String h6 , Evaluation H0 ) {  <CR> this . senderAddr = Y9 ;  <CR> this . receiverAddr = h6 ;  <CR> this . letter = H0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] k2 ) {  <CR> Evaluation b3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t0 = new Envelop ( "Taipei" , "Kaohsiung" , b3 ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String S9 , String E9 , String a1 , String L2 , String i7 ) {  <CR> this . title = S9 ;  <CR> this . receiver = E9 ;  <CR> this . content = a1 ;  <CR> this . sender = L2 ;  <CR> this . date = i7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object M2 ) {  <CR> Letter Z3 = ( Letter ) M2 ;  <CR> if ( this . x > Z3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] Z1 ) {  <CR> int S2 ;  <CR> for ( S2 = list . length - 1 ; S2 >= 0 ; S2 -- ) {  <CR> int A6 = S2 ;  <CR> Letter m9 = new Letter ( S2 ) ;  <CR> Letter N4 = new Letter ( A6 - 1 ) ;  <CR> if ( m9 . compareTo ( N4 ) == 1 )  <CR> m9 . display ( S2 ) ;  <CR> }  <CR> }  <CR> Letter ( int V5 ) {  <CR> this . x = V5 ;  <CR> }  <CR> public void display ( int S2 ) {  <CR> list [ S2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 