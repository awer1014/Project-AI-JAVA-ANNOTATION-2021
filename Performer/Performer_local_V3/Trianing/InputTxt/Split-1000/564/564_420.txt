 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String M4 , String x1 , String m5 , String w1 , String A2 ) {  <CR> super ( M4 , x1 , m5 , w1 , A2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I3 , String s6 , String U5 , String x4 , String h6 ) {  <CR> super ( I3 , s6 , U5 , x4 , h6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String v1 , String f1 , Evaluation d1 ) {  <CR> this . senderAddr = v1 ;  <CR> this . receiverAddr = f1 ;  <CR> this . letter = d1 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] z6 ) {  <CR> Evaluation w1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K0 = new Envelop ( "Taipei" , "Kaohsiung" , w1 ) ;  <CR> K0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String a4 , String R0 , String V6 , String y0 , String p2 ) {  <CR> this . title = a4 ;  <CR> this . receiver = R0 ;  <CR> this . content = V6 ;  <CR> this . sender = y0 ;  <CR> this . date = p2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int I2 ) {  <CR> list [ I2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int l0 ) {  <CR> this . x = l0 ;  <CR> }  <CR> public static void main ( String [ ] t ) {  <CR> int I2 ;  <CR> for ( I2 = list . length - 1 ; I2 >= 0 ; I2 -- ) {  <CR> int m3 = I2 ;  <CR> Letter t4 = new Letter ( I2 ) ;  <CR> Letter o6 = new Letter ( m3 - 1 ) ;  <CR> if ( t4 . compareTo ( o6 ) == 1 )  <CR> t4 . display ( I2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object g1 ) {  <CR> Letter N5 = ( Letter ) g1 ;  <CR> if ( this . x > N5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 