 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String z8 , String m1 , String l9 , String s1 , String y0 ) {  <CR> super ( z8 , m1 , l9 , s1 , y0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F6 , String T3 , String j0 , String o4 , String L4 ) {  <CR> super ( F6 , T3 , j0 , o4 , L4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m6 ) {  <CR> Evaluation p1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p = new Envelop ( "Taipei" , "Kaohsiung" , p1 ) ;  <CR> p . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String e0 , String K4 , Evaluation t0 ) {  <CR> this . senderAddr = e0 ;  <CR> this . receiverAddr = K4 ;  <CR> this . letter = t0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String y3 , String z2 , String V4 , String C6 , String W0 ) {  <CR> this . title = y3 ;  <CR> this . receiver = z2 ;  <CR> this . content = V4 ;  <CR> this . sender = C6 ;  <CR> this . date = W0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] d9 ) {  <CR> int v8 ;  <CR> for ( v8 = list . length - 1 ; v8 >= 0 ; v8 -- ) {  <CR> int J7 = v8 ;  <CR> Letter q3 = new Letter ( v8 ) ;  <CR> Letter p = new Letter ( J7 - 1 ) ;  <CR> if ( q3 . compareTo ( p ) == 1 )  <CR> q3 . display ( v8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object s2 ) {  <CR> Letter N2 = ( Letter ) s2 ;  <CR> if ( this . x > N2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int o8 ) {  <CR> this . x = o8 ;  <CR> }  <CR> public void display ( int v8 ) {  <CR> list [ v8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 