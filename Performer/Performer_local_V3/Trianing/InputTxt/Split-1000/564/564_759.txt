 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G8 , String X1 , String q7 , String z6 , String j0 ) {  <CR> super ( G8 , X1 , q7 , z6 , j0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y6 , String G1 , String z5 , String L3 , String a8 ) {  <CR> super ( Y6 , G1 , z5 , L3 , a8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String s9 , String j3 , Evaluation n3 ) {  <CR> this . senderAddr = s9 ;  <CR> this . receiverAddr = j3 ;  <CR> this . letter = n3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] i8 ) {  <CR> Evaluation U4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J4 = new Envelop ( "Taipei" , "Kaohsiung" , U4 ) ;  <CR> J4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String W9 , String a1 , String O0 , String w6 , String y3 ) {  <CR> this . title = W9 ;  <CR> this . receiver = a1 ;  <CR> this . content = O0 ;  <CR> this . sender = w6 ;  <CR> this . date = y3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int l ) {  <CR> list [ l ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int y6 ) {  <CR> this . x = y6 ;  <CR> }  <CR> public static void main ( String [ ] V8 ) {  <CR> int l ;  <CR> for ( l = list . length - 1 ; l >= 0 ; l -- ) {  <CR> int n1 = l ;  <CR> Letter N4 = new Letter ( l ) ;  <CR> Letter j1 = new Letter ( n1 - 1 ) ;  <CR> if ( N4 . compareTo ( j1 ) == 1 )  <CR> N4 . display ( l ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object l2 ) {  <CR> Letter I1 = ( Letter ) l2 ;  <CR> if ( this . x > I1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 