 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y0 , String v , String l9 , String A5 , String Y4 ) {  <CR> super ( y0 , v , l9 , A5 , Y4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V0 , String E9 , String F6 , String a3 , String k0 ) {  <CR> super ( V0 , E9 , F6 , a3 , k0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] k3 ) {  <CR> Evaluation y4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g2 = new Envelop ( "Taipei" , "Kaohsiung" , y4 ) ;  <CR> g2 . display ( ) ;  <CR> }  <CR> public Envelop ( String o3 , String v8 , Evaluation m8 ) {  <CR> this . senderAddr = o3 ;  <CR> this . receiverAddr = v8 ;  <CR> this . letter = m8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String W7 , String h7 , String F8 , String y2 , String C4 ) {  <CR> this . title = W7 ;  <CR> this . receiver = h7 ;  <CR> this . content = F8 ;  <CR> this . sender = y2 ;  <CR> this . date = C4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int L6 ) {  <CR> list [ L6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] R5 ) {  <CR> int L6 ;  <CR> for ( L6 = list . length - 1 ; L6 >= 0 ; L6 -- ) {  <CR> int c = L6 ;  <CR> Letter m1 = new Letter ( L6 ) ;  <CR> Letter H1 = new Letter ( c - 1 ) ;  <CR> if ( m1 . compareTo ( H1 ) == 1 )  <CR> m1 . display ( L6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object V8 ) {  <CR> Letter i2 = ( Letter ) V8 ;  <CR> if ( this . x > i2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int G7 ) {  <CR> this . x = G7 ;  <CR> }  <CR> }  <CR>  <EOC> 