 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u1 , String H3 , String h3 , String r6 , String j9 ) {  <CR> super ( u1 , H3 , h3 , r6 , j9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String M8 , String n4 , String y , String A5 , String O6 ) {  <CR> super ( M8 , n4 , y , A5 , O6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] b1 ) {  <CR> Evaluation m5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J6 = new Envelop ( "Taipei" , "Kaohsiung" , m5 ) ;  <CR> J6 . display ( ) ;  <CR> }  <CR> public Envelop ( String m1 , String Y0 , Evaluation B9 ) {  <CR> this . senderAddr = m1 ;  <CR> this . receiverAddr = Y0 ;  <CR> this . letter = B9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String S2 , String S4 , String u2 , String C3 , String A4 ) {  <CR> this . title = S2 ;  <CR> this . receiver = S4 ;  <CR> this . content = u2 ;  <CR> this . sender = C3 ;  <CR> this . date = A4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i3 ) {  <CR> int z9 ;  <CR> for ( z9 = list . length - 1 ; z9 >= 0 ; z9 -- ) {  <CR> int M2 = z9 ;  <CR> Letter y9 = new Letter ( z9 ) ;  <CR> Letter g1 = new Letter ( M2 - 1 ) ;  <CR> if ( y9 . compareTo ( g1 ) == 1 )  <CR> y9 . display ( z9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Q2 ) {  <CR> this . x = Q2 ;  <CR> }  <CR> public void display ( int z9 ) {  <CR> list [ z9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object f0 ) {  <CR> Letter z = ( Letter ) f0 ;  <CR> if ( this . x > z . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 