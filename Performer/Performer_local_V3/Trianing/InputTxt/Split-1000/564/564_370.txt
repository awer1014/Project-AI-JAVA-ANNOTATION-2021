 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String f3 , String L5 , String O0 , String b8 , String J6 ) {  <CR> super ( f3 , L5 , O0 , b8 , J6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String A , String v0 , String s5 , String S0 , String W5 ) {  <CR> super ( A , v0 , s5 , S0 , W5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Z ) {  <CR> Evaluation E0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F8 = new Envelop ( "Taipei" , "Kaohsiung" , E0 ) ;  <CR> F8 . display ( ) ;  <CR> }  <CR> public Envelop ( String n9 , String w7 , Evaluation I ) {  <CR> this . senderAddr = n9 ;  <CR> this . receiverAddr = w7 ;  <CR> this . letter = I ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String m , String P0 , String r5 , String c8 , String X4 ) {  <CR> this . title = m ;  <CR> this . receiver = P0 ;  <CR> this . content = r5 ;  <CR> this . sender = c8 ;  <CR> this . date = X4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object f3 ) {  <CR> Letter v0 = ( Letter ) f3 ;  <CR> if ( this . x > v0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int c1 ) {  <CR> list [ c1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int l0 ) {  <CR> this . x = l0 ;  <CR> }  <CR> public static void main ( String [ ] X0 ) {  <CR> int c1 ;  <CR> for ( c1 = list . length - 1 ; c1 >= 0 ; c1 -- ) {  <CR> int x8 = c1 ;  <CR> Letter o2 = new Letter ( c1 ) ;  <CR> Letter b1 = new Letter ( x8 - 1 ) ;  <CR> if ( o2 . compareTo ( b1 ) == 1 )  <CR> o2 . display ( c1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 