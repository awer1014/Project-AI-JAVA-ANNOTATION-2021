 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x3 , String s6 , String Y1 , String P0 , String D8 ) {  <CR> super ( x3 , s6 , Y1 , P0 , D8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X6 , String a6 , String z7 , String h8 , String g3 ) {  <CR> super ( X6 , a6 , z7 , h8 , g3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] A0 ) {  <CR> Evaluation W6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r6 = new Envelop ( "Taipei" , "Kaohsiung" , W6 ) ;  <CR> r6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String A , String z2 , Evaluation t5 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = z2 ;  <CR> this . letter = t5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Z3 , String Q , String a5 , String m3 , String F0 ) {  <CR> this . title = Z3 ;  <CR> this . receiver = Q ;  <CR> this . content = a5 ;  <CR> this . sender = m3 ;  <CR> this . date = F0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int y6 ) {  <CR> this . x = y6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int t3 ) {  <CR> list [ t3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object j4 ) {  <CR> Letter C0 = ( Letter ) j4 ;  <CR> if ( this . x > C0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] O8 ) {  <CR> int t3 ;  <CR> for ( t3 = list . length - 1 ; t3 >= 0 ; t3 -- ) {  <CR> int M5 = t3 ;  <CR> Letter Z3 = new Letter ( t3 ) ;  <CR> Letter u5 = new Letter ( M5 - 1 ) ;  <CR> if ( Z3 . compareTo ( u5 ) == 1 )  <CR> Z3 . display ( t3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 