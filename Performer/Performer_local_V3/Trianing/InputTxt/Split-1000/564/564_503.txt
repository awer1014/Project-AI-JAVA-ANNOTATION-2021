 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L1 , String V6 , String t , String L8 , String p2 ) {  <CR> super ( L1 , V6 , t , L8 , p2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V , String D1 , String S9 , String a6 , String o4 ) {  <CR> super ( V , D1 , S9 , a6 , o4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Q3 ) {  <CR> Evaluation H9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q = new Envelop ( "Taipei" , "Kaohsiung" , H9 ) ;  <CR> Q . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String u3 , String k5 , Evaluation b1 ) {  <CR> this . senderAddr = u3 ;  <CR> this . receiverAddr = k5 ;  <CR> this . letter = b1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String E1 , String a8 , String K2 , String t3 , String b6 ) {  <CR> this . title = E1 ;  <CR> this . receiver = a8 ;  <CR> this . content = K2 ;  <CR> this . sender = t3 ;  <CR> this . date = b6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int L ) {  <CR> this . x = L ;  <CR> }  <CR> public static void main ( String [ ] F0 ) {  <CR> int o5 ;  <CR> for ( o5 = list . length - 1 ; o5 >= 0 ; o5 -- ) {  <CR> int z0 = o5 ;  <CR> Letter e3 = new Letter ( o5 ) ;  <CR> Letter Z6 = new Letter ( z0 - 1 ) ;  <CR> if ( e3 . compareTo ( Z6 ) == 1 )  <CR> e3 . display ( o5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int o5 ) {  <CR> list [ o5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object X8 ) {  <CR> Letter U6 = ( Letter ) X8 ;  <CR> if ( this . x > U6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 