 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C1 , String g6 , String B3 , String K5 , String L7 ) {  <CR> super ( C1 , g6 , B3 , K5 , L7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K8 , String e2 , String r3 , String U7 , String E5 ) {  <CR> super ( K8 , e2 , r3 , U7 , E5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String l5 , String T2 , Evaluation w1 ) {  <CR> this . senderAddr = l5 ;  <CR> this . receiverAddr = T2 ;  <CR> this . letter = w1 ;  <CR> }  <CR> public static void main ( String [ ] v9 ) {  <CR> Evaluation Q0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R2 = new Envelop ( "Taipei" , "Kaohsiung" , Q0 ) ;  <CR> R2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String C8 , String E2 , String v0 , String S0 , String R8 ) {  <CR> this . title = C8 ;  <CR> this . receiver = E2 ;  <CR> this . content = v0 ;  <CR> this . sender = S0 ;  <CR> this . date = R8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object s0 ) {  <CR> Letter m8 = ( Letter ) s0 ;  <CR> if ( this . x > m8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int g6 ) {  <CR> this . x = g6 ;  <CR> }  <CR> public void display ( int G6 ) {  <CR> list [ G6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] S1 ) {  <CR> int G6 ;  <CR> for ( G6 = list . length - 1 ; G6 >= 0 ; G6 -- ) {  <CR> int T5 = G6 ;  <CR> Letter K3 = new Letter ( G6 ) ;  <CR> Letter k1 = new Letter ( T5 - 1 ) ;  <CR> if ( K3 . compareTo ( k1 ) == 1 )  <CR> K3 . display ( G6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 