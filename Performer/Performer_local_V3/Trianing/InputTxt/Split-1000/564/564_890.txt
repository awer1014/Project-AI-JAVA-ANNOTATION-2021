 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m5 , String j3 , String a9 , String b8 , String M0 ) {  <CR> super ( m5 , j3 , a9 , b8 , M0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v0 , String V7 , String R4 , String M1 , String m9 ) {  <CR> super ( v0 , V7 , R4 , M1 , m9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String d , String O , Evaluation y3 ) {  <CR> this . senderAddr = d ;  <CR> this . receiverAddr = O ;  <CR> this . letter = y3 ;  <CR> }  <CR> public static void main ( String [ ] t5 ) {  <CR> Evaluation d6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L2 = new Envelop ( "Taipei" , "Kaohsiung" , d6 ) ;  <CR> L2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String u4 , String H , String T , String U7 , String I5 ) {  <CR> this . title = u4 ;  <CR> this . receiver = H ;  <CR> this . content = T ;  <CR> this . sender = U7 ;  <CR> this . date = I5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object N5 ) {  <CR> Letter o = ( Letter ) N5 ;  <CR> if ( this . x > o . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int g9 ) {  <CR> this . x = g9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int r7 ) {  <CR> list [ r7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] W6 ) {  <CR> int r7 ;  <CR> for ( r7 = list . length - 1 ; r7 >= 0 ; r7 -- ) {  <CR> int U6 = r7 ;  <CR> Letter t2 = new Letter ( r7 ) ;  <CR> Letter s2 = new Letter ( U6 - 1 ) ;  <CR> if ( t2 . compareTo ( s2 ) == 1 )  <CR> t2 . display ( r7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 