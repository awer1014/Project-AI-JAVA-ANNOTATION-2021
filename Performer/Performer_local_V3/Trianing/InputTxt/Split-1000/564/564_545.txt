 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o1 , String E9 , String f0 , String M5 , String L9 ) {  <CR> super ( o1 , E9 , f0 , M5 , L9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b7 , String A3 , String p7 , String o1 , String c0 ) {  <CR> super ( b7 , A3 , p7 , o1 , c0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] z4 ) {  <CR> Evaluation p8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t0 = new Envelop ( "Taipei" , "Kaohsiung" , p8 ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String I8 , String x3 , Evaluation b5 ) {  <CR> this . senderAddr = I8 ;  <CR> this . receiverAddr = x3 ;  <CR> this . letter = b5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String h6 , String K8 , String p6 , String H5 , String v8 ) {  <CR> this . title = h6 ;  <CR> this . receiver = K8 ;  <CR> this . content = p6 ;  <CR> this . sender = H5 ;  <CR> this . date = v8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int D ) {  <CR> this . x = D ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object a3 ) {  <CR> Letter N0 = ( Letter ) a3 ;  <CR> if ( this . x > N0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int W1 ) {  <CR> list [ W1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] s0 ) {  <CR> int W1 ;  <CR> for ( W1 = list . length - 1 ; W1 >= 0 ; W1 -- ) {  <CR> int F4 = W1 ;  <CR> Letter D4 = new Letter ( W1 ) ;  <CR> Letter A0 = new Letter ( F4 - 1 ) ;  <CR> if ( D4 . compareTo ( A0 ) == 1 )  <CR> D4 . display ( W1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 