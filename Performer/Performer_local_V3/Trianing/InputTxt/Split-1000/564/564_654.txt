 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u0 , String J9 , String I7 , String i5 , String j6 ) {  <CR> super ( u0 , J9 , I7 , i5 , j6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W5 , String I4 , String r3 , String O2 , String M6 ) {  <CR> super ( W5 , I4 , r3 , O2 , M6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String j5 , String b3 , Evaluation u6 ) {  <CR> this . senderAddr = j5 ;  <CR> this . receiverAddr = b3 ;  <CR> this . letter = u6 ;  <CR> }  <CR> public static void main ( String [ ] n3 ) {  <CR> Evaluation f0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F6 = new Envelop ( "Taipei" , "Kaohsiung" , f0 ) ;  <CR> F6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String s1 , String I7 , String o7 , String s2 , String A3 ) {  <CR> this . title = s1 ;  <CR> this . receiver = I7 ;  <CR> this . content = o7 ;  <CR> this . sender = s2 ;  <CR> this . date = A3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int V9 ) {  <CR> this . x = V9 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object t9 ) {  <CR> Letter G8 = ( Letter ) t9 ;  <CR> if ( this . x > G8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] u8 ) {  <CR> int t8 ;  <CR> for ( t8 = list . length - 1 ; t8 >= 0 ; t8 -- ) {  <CR> int j6 = t8 ;  <CR> Letter a0 = new Letter ( t8 ) ;  <CR> Letter U8 = new Letter ( j6 - 1 ) ;  <CR> if ( a0 . compareTo ( U8 ) == 1 )  <CR> a0 . display ( t8 ) ;  <CR> }  <CR> }  <CR> public void display ( int t8 ) {  <CR> list [ t8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 