 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O0 , String n , String m4 , String b , String S7 ) {  <CR> super ( O0 , n , m4 , b , S7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B , String h4 , String N5 , String I0 , String t8 ) {  <CR> super ( B , h4 , N5 , I0 , t8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] d1 ) {  <CR> Evaluation x1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s9 = new Envelop ( "Taipei" , "Kaohsiung" , x1 ) ;  <CR> s9 . display ( ) ;  <CR> }  <CR> public Envelop ( String o4 , String h9 , Evaluation g3 ) {  <CR> this . senderAddr = o4 ;  <CR> this . receiverAddr = h9 ;  <CR> this . letter = g3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String n9 , String z9 , String G6 , String S , String a4 ) {  <CR> this . title = n9 ;  <CR> this . receiver = z9 ;  <CR> this . content = G6 ;  <CR> this . sender = S ;  <CR> this . date = a4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object G2 ) {  <CR> Letter h2 = ( Letter ) G2 ;  <CR> if ( this . x > h2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int D3 ) {  <CR> this . x = D3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Z8 ) {  <CR> list [ Z8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] A4 ) {  <CR> int Z8 ;  <CR> for ( Z8 = list . length - 1 ; Z8 >= 0 ; Z8 -- ) {  <CR> int J2 = Z8 ;  <CR> Letter b7 = new Letter ( Z8 ) ;  <CR> Letter g1 = new Letter ( J2 - 1 ) ;  <CR> if ( b7 . compareTo ( g1 ) == 1 )  <CR> b7 . display ( Z8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 