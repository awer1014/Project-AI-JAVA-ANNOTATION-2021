 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h0 , String w3 , String o2 , String P9 , String o1 ) {  <CR> super ( h0 , w3 , o2 , P9 , o1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String C0 , String G7 , String q6 , String Q0 , String f0 ) {  <CR> super ( C0 , G7 , q6 , Q0 , f0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] V8 ) {  <CR> Evaluation L4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T3 = new Envelop ( "Taipei" , "Kaohsiung" , L4 ) ;  <CR> T3 . display ( ) ;  <CR> }  <CR> public Envelop ( String Z0 , String r4 , Evaluation R9 ) {  <CR> this . senderAddr = Z0 ;  <CR> this . receiverAddr = r4 ;  <CR> this . letter = R9 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String V0 , String O8 , String O1 , String d2 , String z3 ) {  <CR> this . title = V0 ;  <CR> this . receiver = O8 ;  <CR> this . content = O1 ;  <CR> this . sender = d2 ;  <CR> this . date = z3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int U7 ) {  <CR> list [ U7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E2 ) {  <CR> int U7 ;  <CR> for ( U7 = list . length - 1 ; U7 >= 0 ; U7 -- ) {  <CR> int c4 = U7 ;  <CR> Letter E4 = new Letter ( U7 ) ;  <CR> Letter O9 = new Letter ( c4 - 1 ) ;  <CR> if ( E4 . compareTo ( O9 ) == 1 )  <CR> E4 . display ( U7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int b6 ) {  <CR> this . x = b6 ;  <CR> }  <CR> public int compareTo ( Object n0 ) {  <CR> Letter U1 = ( Letter ) n0 ;  <CR> if ( this . x > U1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 