 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U3 , String L6 , String J9 , String l9 , String d ) {  <CR> super ( U3 , L6 , J9 , l9 , d ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String x4 , String b1 , String R4 , String t2 , String M1 ) {  <CR> super ( x4 , b1 , R4 , t2 , M1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String g0 , String K7 , Evaluation C6 ) {  <CR> this . senderAddr = g0 ;  <CR> this . receiverAddr = K7 ;  <CR> this . letter = C6 ;  <CR> }  <CR> public static void main ( String [ ] U2 ) {  <CR> Evaluation C2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z4 = new Envelop ( "Taipei" , "Kaohsiung" , C2 ) ;  <CR> z4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String f9 , String F3 , String X6 , String i4 , String C3 ) {  <CR> this . title = f9 ;  <CR> this . receiver = F3 ;  <CR> this . content = X6 ;  <CR> this . sender = i4 ;  <CR> this . date = C3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t ) {  <CR> this . x = t ;  <CR> }  <CR> public static void main ( String [ ] V1 ) {  <CR> int q6 ;  <CR> for ( q6 = list . length - 1 ; q6 >= 0 ; q6 -- ) {  <CR> int E1 = q6 ;  <CR> Letter V4 = new Letter ( q6 ) ;  <CR> Letter n9 = new Letter ( E1 - 1 ) ;  <CR> if ( V4 . compareTo ( n9 ) == 1 )  <CR> V4 . display ( q6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int q6 ) {  <CR> list [ q6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object b6 ) {  <CR> Letter I9 = ( Letter ) b6 ;  <CR> if ( this . x > I9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 