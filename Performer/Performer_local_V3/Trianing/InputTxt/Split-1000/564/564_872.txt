 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String n3 , String b8 , String F9 , String t7 , String x ) {  <CR> super ( n3 , b8 , F9 , t7 , x ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z0 , String U5 , String s4 , String q6 , String W0 ) {  <CR> super ( z0 , U5 , s4 , q6 , W0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String f , String z8 , Evaluation Y ) {  <CR> this . senderAddr = f ;  <CR> this . receiverAddr = z8 ;  <CR> this . letter = Y ;  <CR> }  <CR> public static void main ( String [ ] D2 ) {  <CR> Evaluation G7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I = new Envelop ( "Taipei" , "Kaohsiung" , G7 ) ;  <CR> I . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String U3 , String E3 , String p0 , String h2 , String K4 ) {  <CR> this . title = U3 ;  <CR> this . receiver = E3 ;  <CR> this . content = p0 ;  <CR> this . sender = h2 ;  <CR> this . date = K4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int o8 ) {  <CR> this . x = o8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] i4 ) {  <CR> int v9 ;  <CR> for ( v9 = list . length - 1 ; v9 >= 0 ; v9 -- ) {  <CR> int f6 = v9 ;  <CR> Letter n1 = new Letter ( v9 ) ;  <CR> Letter S8 = new Letter ( f6 - 1 ) ;  <CR> if ( n1 . compareTo ( S8 ) == 1 )  <CR> n1 . display ( v9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object G7 ) {  <CR> Letter X = ( Letter ) G7 ;  <CR> if ( this . x > X . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int v9 ) {  <CR> list [ v9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 