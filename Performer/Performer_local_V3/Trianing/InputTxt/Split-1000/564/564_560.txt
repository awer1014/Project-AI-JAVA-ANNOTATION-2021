 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y , String b6 , String A1 , String N , String i ) {  <CR> super ( y , b6 , A1 , N , i ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String x9 , String B , String N6 , String J2 , String n5 ) {  <CR> super ( x9 , B , N6 , J2 , n5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] h1 ) {  <CR> Evaluation I7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b6 = new Envelop ( "Taipei" , "Kaohsiung" , I7 ) ;  <CR> b6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String t3 , String J8 , Evaluation x3 ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = J8 ;  <CR> this . letter = x3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String B0 , String I6 , String W1 , String r8 , String u1 ) {  <CR> this . title = B0 ;  <CR> this . receiver = I6 ;  <CR> this . content = W1 ;  <CR> this . sender = r8 ;  <CR> this . date = u1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t5 ) {  <CR> this . x = t5 ;  <CR> }  <CR> public static void main ( String [ ] e8 ) {  <CR> int d6 ;  <CR> for ( d6 = list . length - 1 ; d6 >= 0 ; d6 -- ) {  <CR> int C0 = d6 ;  <CR> Letter f9 = new Letter ( d6 ) ;  <CR> Letter N5 = new Letter ( C0 - 1 ) ;  <CR> if ( f9 . compareTo ( N5 ) == 1 )  <CR> f9 . display ( d6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object X3 ) {  <CR> Letter N1 = ( Letter ) X3 ;  <CR> if ( this . x > N1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int d6 ) {  <CR> list [ d6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 