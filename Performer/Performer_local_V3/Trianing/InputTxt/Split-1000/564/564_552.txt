 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O8 , String z9 , String N8 , String U5 , String c4 ) {  <CR> super ( O8 , z9 , N8 , U5 , c4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String N1 , String C6 , String N , String C5 , String I4 ) {  <CR> super ( N1 , C6 , N , C5 , I4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C0 , String r0 , Evaluation o2 ) {  <CR> this . senderAddr = C0 ;  <CR> this . receiverAddr = r0 ;  <CR> this . letter = o2 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] a1 ) {  <CR> Evaluation u8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U3 = new Envelop ( "Taipei" , "Kaohsiung" , u8 ) ;  <CR> U3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String R5 , String h0 , String p7 , String G5 , String P6 ) {  <CR> this . title = R5 ;  <CR> this . receiver = h0 ;  <CR> this . content = p7 ;  <CR> this . sender = G5 ;  <CR> this . date = P6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int U5 ) {  <CR> this . x = U5 ;  <CR> }  <CR> public int compareTo ( Object K6 ) {  <CR> Letter w4 = ( Letter ) K6 ;  <CR> if ( this . x > w4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] z7 ) {  <CR> int v1 ;  <CR> for ( v1 = list . length - 1 ; v1 >= 0 ; v1 -- ) {  <CR> int x1 = v1 ;  <CR> Letter A4 = new Letter ( v1 ) ;  <CR> Letter A6 = new Letter ( x1 - 1 ) ;  <CR> if ( A4 . compareTo ( A6 ) == 1 )  <CR> A4 . display ( v1 ) ;  <CR> }  <CR> }  <CR> public void display ( int v1 ) {  <CR> list [ v1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 