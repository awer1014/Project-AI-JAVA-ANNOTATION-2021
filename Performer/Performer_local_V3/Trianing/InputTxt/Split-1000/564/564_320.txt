 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R5 , String J8 , String M1 , String h3 , String z7 ) {  <CR> super ( R5 , J8 , M1 , h3 , z7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g6 , String a3 , String C5 , String P2 , String W5 ) {  <CR> super ( g6 , a3 , C5 , P2 , W5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] E3 ) {  <CR> Evaluation B3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y9 = new Envelop ( "Taipei" , "Kaohsiung" , B3 ) ;  <CR> Y9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String U8 , String z5 , Evaluation X8 ) {  <CR> this . senderAddr = U8 ;  <CR> this . receiverAddr = z5 ;  <CR> this . letter = X8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String v , String N4 , String Y7 , String P6 , String r4 ) {  <CR> this . title = v ;  <CR> this . receiver = N4 ;  <CR> this . content = Y7 ;  <CR> this . sender = P6 ;  <CR> this . date = r4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int F ) {  <CR> this . x = F ;  <CR> }  <CR> public static void main ( String [ ] s2 ) {  <CR> int E0 ;  <CR> for ( E0 = list . length - 1 ; E0 >= 0 ; E0 -- ) {  <CR> int S7 = E0 ;  <CR> Letter c2 = new Letter ( E0 ) ;  <CR> Letter w0 = new Letter ( S7 - 1 ) ;  <CR> if ( c2 . compareTo ( w0 ) == 1 )  <CR> c2 . display ( E0 ) ;  <CR> }  <CR> }  <CR> public void display ( int E0 ) {  <CR> list [ E0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object z7 ) {  <CR> Letter X8 = ( Letter ) z7 ;  <CR> if ( this . x > X8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 