 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Y2 , String a6 , String o8 , String n7 , String T4 ) {  <CR> super ( Y2 , a6 , o8 , n7 , T4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o4 , String A2 , String d7 , String F1 , String l6 ) {  <CR> super ( o4 , A2 , d7 , F1 , l6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String a5 , String G5 , Evaluation D8 ) {  <CR> this . senderAddr = a5 ;  <CR> this . receiverAddr = G5 ;  <CR> this . letter = D8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] t4 ) {  <CR> Evaluation T9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A4 = new Envelop ( "Taipei" , "Kaohsiung" , T9 ) ;  <CR> A4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String c , String T2 , String R5 , String H9 , String f3 ) {  <CR> this . title = c ;  <CR> this . receiver = T2 ;  <CR> this . content = R5 ;  <CR> this . sender = H9 ;  <CR> this . date = f3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Z5 ) {  <CR> list [ Z5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object Q8 ) {  <CR> Letter E7 = ( Letter ) Q8 ;  <CR> if ( this . x > E7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] V8 ) {  <CR> int Z5 ;  <CR> for ( Z5 = list . length - 1 ; Z5 >= 0 ; Z5 -- ) {  <CR> int o0 = Z5 ;  <CR> Letter p5 = new Letter ( Z5 ) ;  <CR> Letter H6 = new Letter ( o0 - 1 ) ;  <CR> if ( p5 . compareTo ( H6 ) == 1 )  <CR> p5 . display ( Z5 ) ;  <CR> }  <CR> }  <CR> Letter ( int s7 ) {  <CR> this . x = s7 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 