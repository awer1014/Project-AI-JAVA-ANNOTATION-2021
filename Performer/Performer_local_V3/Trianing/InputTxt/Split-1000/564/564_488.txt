 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K0 , String R5 , String Y1 , String o8 , String E1 ) {  <CR> super ( K0 , R5 , Y1 , o8 , E1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S0 , String P2 , String F9 , String o0 , String I5 ) {  <CR> super ( S0 , P2 , F9 , o0 , I5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String R4 , String A7 , Evaluation r7 ) {  <CR> this . senderAddr = R4 ;  <CR> this . receiverAddr = A7 ;  <CR> this . letter = r7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] j0 ) {  <CR> Evaluation F3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n6 = new Envelop ( "Taipei" , "Kaohsiung" , F3 ) ;  <CR> n6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String N1 , String P3 , String C0 , String K5 , String M8 ) {  <CR> this . title = N1 ;  <CR> this . receiver = P3 ;  <CR> this . content = C0 ;  <CR> this . sender = K5 ;  <CR> this . date = M8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object q5 ) {  <CR> Letter M6 = ( Letter ) q5 ;  <CR> if ( this . x > M6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int p1 ) {  <CR> list [ p1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int L4 ) {  <CR> this . x = L4 ;  <CR> }  <CR> public static void main ( String [ ] K3 ) {  <CR> int p1 ;  <CR> for ( p1 = list . length - 1 ; p1 >= 0 ; p1 -- ) {  <CR> int h9 = p1 ;  <CR> Letter H3 = new Letter ( p1 ) ;  <CR> Letter j4 = new Letter ( h9 - 1 ) ;  <CR> if ( H3 . compareTo ( j4 ) == 1 )  <CR> H3 . display ( p1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 