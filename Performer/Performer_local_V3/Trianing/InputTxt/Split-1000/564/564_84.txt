 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l7 , String P7 , String l0 , String P0 , String S6 ) {  <CR> super ( l7 , P7 , l0 , P0 , S6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h8 , String i4 , String e6 , String Y4 , String F8 ) {  <CR> super ( h8 , i4 , e6 , Y4 , F8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] e5 ) {  <CR> Evaluation k2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c8 = new Envelop ( "Taipei" , "Kaohsiung" , k2 ) ;  <CR> c8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String B2 , String o7 , Evaluation J9 ) {  <CR> this . senderAddr = B2 ;  <CR> this . receiverAddr = o7 ;  <CR> this . letter = J9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String E3 , String O4 , String j9 , String Y3 , String b9 ) {  <CR> this . title = E3 ;  <CR> this . receiver = O4 ;  <CR> this . content = j9 ;  <CR> this . sender = Y3 ;  <CR> this . date = b9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int J4 ) {  <CR> list [ J4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int p9 ) {  <CR> this . x = p9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] J0 ) {  <CR> int J4 ;  <CR> for ( J4 = list . length - 1 ; J4 >= 0 ; J4 -- ) {  <CR> int H2 = J4 ;  <CR> Letter f1 = new Letter ( J4 ) ;  <CR> Letter f3 = new Letter ( H2 - 1 ) ;  <CR> if ( f1 . compareTo ( f3 ) == 1 )  <CR> f1 . display ( J4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object r9 ) {  <CR> Letter D = ( Letter ) r9 ;  <CR> if ( this . x > D . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 