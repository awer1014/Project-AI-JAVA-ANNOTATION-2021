 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M7 , String I6 , String P1 , String X6 , String q0 ) {  <CR> super ( M7 , I6 , P1 , X6 , q0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y5 , String L2 , String W8 , String c , String f8 ) {  <CR> super ( y5 , L2 , W8 , c , f8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String L6 , String C3 , Evaluation K9 ) {  <CR> this . senderAddr = L6 ;  <CR> this . receiverAddr = C3 ;  <CR> this . letter = K9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] s8 ) {  <CR> Evaluation I0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J1 = new Envelop ( "Taipei" , "Kaohsiung" , I0 ) ;  <CR> J1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String J1 , String R4 , String m3 , String Q1 , String P9 ) {  <CR> this . title = J1 ;  <CR> this . receiver = R4 ;  <CR> this . content = m3 ;  <CR> this . sender = Q1 ;  <CR> this . date = P9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i1 ) {  <CR> int n6 ;  <CR> for ( n6 = list . length - 1 ; n6 >= 0 ; n6 -- ) {  <CR> int O4 = n6 ;  <CR> Letter v1 = new Letter ( n6 ) ;  <CR> Letter H5 = new Letter ( O4 - 1 ) ;  <CR> if ( v1 . compareTo ( H5 ) == 1 )  <CR> v1 . display ( n6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int q4 ) {  <CR> this . x = q4 ;  <CR> }  <CR> public void display ( int n6 ) {  <CR> list [ n6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object i2 ) {  <CR> Letter j0 = ( Letter ) i2 ;  <CR> if ( this . x > j0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 