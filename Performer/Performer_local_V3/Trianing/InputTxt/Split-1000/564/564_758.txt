 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M7 , String f0 , String g0 , String A5 , String W5 ) {  <CR> super ( M7 , f0 , g0 , A5 , W5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e8 , String x7 , String v9 , String I5 , String Y ) {  <CR> super ( e8 , x7 , v9 , I5 , Y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String H8 , String Y8 , Evaluation E8 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = Y8 ;  <CR> this . letter = E8 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D5 ) {  <CR> Evaluation y3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f = new Envelop ( "Taipei" , "Kaohsiung" , y3 ) ;  <CR> f . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String q4 , String E8 , String T , String T2 , String R7 ) {  <CR> this . title = q4 ;  <CR> this . receiver = E8 ;  <CR> this . content = T ;  <CR> this . sender = T2 ;  <CR> this . date = R7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object L1 ) {  <CR> Letter x9 = ( Letter ) L1 ;  <CR> if ( this . x > x9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int x1 ) {  <CR> list [ x1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b8 ) {  <CR> int x1 ;  <CR> for ( x1 = list . length - 1 ; x1 >= 0 ; x1 -- ) {  <CR> int r6 = x1 ;  <CR> Letter N5 = new Letter ( x1 ) ;  <CR> Letter N3 = new Letter ( r6 - 1 ) ;  <CR> if ( N5 . compareTo ( N3 ) == 1 )  <CR> N5 . display ( x1 ) ;  <CR> }  <CR> }  <CR> Letter ( int e2 ) {  <CR> this . x = e2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 