 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String x5 , String W6 , String V5 , String V1 , String Y4 ) {  <CR> super ( x5 , W6 , V5 , V1 , Y4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V3 , String p6 , String P7 , String h2 , String f0 ) {  <CR> super ( V3 , p6 , P7 , h2 , f0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] X2 ) {  <CR> Evaluation F6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b5 = new Envelop ( "Taipei" , "Kaohsiung" , F6 ) ;  <CR> b5 . display ( ) ;  <CR> }  <CR> public Envelop ( String B5 , String D6 , Evaluation q3 ) {  <CR> this . senderAddr = B5 ;  <CR> this . receiverAddr = D6 ;  <CR> this . letter = q3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String U3 , String N6 , String l9 , String Y6 , String h1 ) {  <CR> this . title = U3 ;  <CR> this . receiver = N6 ;  <CR> this . content = l9 ;  <CR> this . sender = Y6 ;  <CR> this . date = h1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object B6 ) {  <CR> Letter K8 = ( Letter ) B6 ;  <CR> if ( this . x > K8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int c4 ) {  <CR> list [ c4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] k4 ) {  <CR> int c4 ;  <CR> for ( c4 = list . length - 1 ; c4 >= 0 ; c4 -- ) {  <CR> int U2 = c4 ;  <CR> Letter E6 = new Letter ( c4 ) ;  <CR> Letter F9 = new Letter ( U2 - 1 ) ;  <CR> if ( E6 . compareTo ( F9 ) == 1 )  <CR> E6 . display ( c4 ) ;  <CR> }  <CR> }  <CR> Letter ( int h8 ) {  <CR> this . x = h8 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 