 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String m0 , String n6 , String B9 , String S , String Q4 ) {  <CR> super ( m0 , n6 , B9 , S , Q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String k2 , String x9 , String D0 , String m0 , String m ) {  <CR> super ( k2 , x9 , D0 , m0 , m ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String f2 , String y4 , Evaluation p2 ) {  <CR> this . senderAddr = f2 ;  <CR> this . receiverAddr = y4 ;  <CR> this . letter = p2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] s3 ) {  <CR> Evaluation H1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c5 = new Envelop ( "Taipei" , "Kaohsiung" , H1 ) ;  <CR> c5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String j5 , String m5 , String i1 , String K0 , String T7 ) {  <CR> this . title = j5 ;  <CR> this . receiver = m5 ;  <CR> this . content = i1 ;  <CR> this . sender = K0 ;  <CR> this . date = T7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int m3 ) {  <CR> list [ m3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object k3 ) {  <CR> Letter P0 = ( Letter ) k3 ;  <CR> if ( this . x > P0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z5 ) {  <CR> int m3 ;  <CR> for ( m3 = list . length - 1 ; m3 >= 0 ; m3 -- ) {  <CR> int O = m3 ;  <CR> Letter J2 = new Letter ( m3 ) ;  <CR> Letter t2 = new Letter ( O - 1 ) ;  <CR> if ( J2 . compareTo ( t2 ) == 1 )  <CR> J2 . display ( m3 ) ;  <CR> }  <CR> }  <CR> Letter ( int X2 ) {  <CR> this . x = X2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 