 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w8 , String E , String k1 , String K8 , String Z7 ) {  <CR> super ( w8 , E , k1 , K8 , Z7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M8 , String U1 , String q9 , String j1 , String S8 ) {  <CR> super ( M8 , U1 , q9 , j1 , S8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] o2 ) {  <CR> Evaluation P3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J = new Envelop ( "Taipei" , "Kaohsiung" , P3 ) ;  <CR> J . display ( ) ;  <CR> }  <CR> public Envelop ( String V5 , String y5 , Evaluation K4 ) {  <CR> this . senderAddr = V5 ;  <CR> this . receiverAddr = y5 ;  <CR> this . letter = K4 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String w2 , String r , String p4 , String S6 , String u ) {  <CR> this . title = w2 ;  <CR> this . receiver = r ;  <CR> this . content = p4 ;  <CR> this . sender = S6 ;  <CR> this . date = u ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object u7 ) {  <CR> Letter X3 = ( Letter ) u7 ;  <CR> if ( this . x > X3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int f ) {  <CR> this . x = f ;  <CR> }  <CR> public void display ( int p3 ) {  <CR> list [ p3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] l2 ) {  <CR> int p3 ;  <CR> for ( p3 = list . length - 1 ; p3 >= 0 ; p3 -- ) {  <CR> int K1 = p3 ;  <CR> Letter p2 = new Letter ( p3 ) ;  <CR> Letter r9 = new Letter ( K1 - 1 ) ;  <CR> if ( p2 . compareTo ( r9 ) == 1 )  <CR> p2 . display ( p3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 