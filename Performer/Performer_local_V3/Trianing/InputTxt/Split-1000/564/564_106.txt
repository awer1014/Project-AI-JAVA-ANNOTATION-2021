 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O4 , String o5 , String h8 , String Y7 , String S ) {  <CR> super ( O4 , o5 , h8 , Y7 , S ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y5 , String E5 , String Q0 , String T8 , String k5 ) {  <CR> super ( y5 , E5 , Q0 , T8 , k5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String v1 , String c0 , Evaluation n7 ) {  <CR> this . senderAddr = v1 ;  <CR> this . receiverAddr = c0 ;  <CR> this . letter = n7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] a2 ) {  <CR> Evaluation W5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z7 = new Envelop ( "Taipei" , "Kaohsiung" , W5 ) ;  <CR> z7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String f4 , String Z , String p5 , String i3 , String d6 ) {  <CR> this . title = f4 ;  <CR> this . receiver = Z ;  <CR> this . content = p5 ;  <CR> this . sender = i3 ;  <CR> this . date = d6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int j1 ) {  <CR> list [ j1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Y3 ) {  <CR> this . x = Y3 ;  <CR> }  <CR> public int compareTo ( Object O5 ) {  <CR> Letter P7 = ( Letter ) O5 ;  <CR> if ( this . x > P7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] J5 ) {  <CR> int j1 ;  <CR> for ( j1 = list . length - 1 ; j1 >= 0 ; j1 -- ) {  <CR> int u3 = j1 ;  <CR> Letter b9 = new Letter ( j1 ) ;  <CR> Letter N8 = new Letter ( u3 - 1 ) ;  <CR> if ( b9 . compareTo ( N8 ) == 1 )  <CR> b9 . display ( j1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 