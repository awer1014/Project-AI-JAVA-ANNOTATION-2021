 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S6 , String r1 , String E5 , String R , String X4 ) {  <CR> super ( S6 , r1 , E5 , R , X4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String U1 , String u , String o8 , String B8 , String c3 ) {  <CR> super ( U1 , u , o8 , B8 , c3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k0 ) {  <CR> Evaluation c7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h8 = new Envelop ( "Taipei" , "Kaohsiung" , c7 ) ;  <CR> h8 . display ( ) ;  <CR> }  <CR> public Envelop ( String V2 , String o4 , Evaluation P4 ) {  <CR> this . senderAddr = V2 ;  <CR> this . receiverAddr = o4 ;  <CR> this . letter = P4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String P9 , String J5 , String U5 , String g5 , String E9 ) {  <CR> this . title = P9 ;  <CR> this . receiver = J5 ;  <CR> this . content = U5 ;  <CR> this . sender = g5 ;  <CR> this . date = E9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int D5 ) {  <CR> this . x = D5 ;  <CR> }  <CR> public static void main ( String [ ] W8 ) {  <CR> int C8 ;  <CR> for ( C8 = list . length - 1 ; C8 >= 0 ; C8 -- ) {  <CR> int f4 = C8 ;  <CR> Letter V9 = new Letter ( C8 ) ;  <CR> Letter Q9 = new Letter ( f4 - 1 ) ;  <CR> if ( V9 . compareTo ( Q9 ) == 1 )  <CR> V9 . display ( C8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int C8 ) {  <CR> list [ C8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object z ) {  <CR> Letter U5 = ( Letter ) z ;  <CR> if ( this . x > U5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 