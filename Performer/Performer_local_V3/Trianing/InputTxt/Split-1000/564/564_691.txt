 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String e5 , String l8 , String r5 , String a1 , String U5 ) {  <CR> super ( e5 , l8 , r5 , a1 , U5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O6 , String D9 , String l5 , String D6 , String d5 ) {  <CR> super ( O6 , D9 , l5 , D6 , d5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] a1 ) {  <CR> Evaluation f8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J9 = new Envelop ( "Taipei" , "Kaohsiung" , f8 ) ;  <CR> J9 . display ( ) ;  <CR> }  <CR> public Envelop ( String O2 , String B2 , Evaluation R1 ) {  <CR> this . senderAddr = O2 ;  <CR> this . receiverAddr = B2 ;  <CR> this . letter = R1 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String S9 , String t , String u9 , String s8 , String K3 ) {  <CR> this . title = S9 ;  <CR> this . receiver = t ;  <CR> this . content = u9 ;  <CR> this . sender = s8 ;  <CR> this . date = K3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int x3 ) {  <CR> list [ x3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object B3 ) {  <CR> Letter e2 = ( Letter ) B3 ;  <CR> if ( this . x > e2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] u1 ) {  <CR> int x3 ;  <CR> for ( x3 = list . length - 1 ; x3 >= 0 ; x3 -- ) {  <CR> int H1 = x3 ;  <CR> Letter I7 = new Letter ( x3 ) ;  <CR> Letter A = new Letter ( H1 - 1 ) ;  <CR> if ( I7 . compareTo ( A ) == 1 )  <CR> I7 . display ( x3 ) ;  <CR> }  <CR> }  <CR> Letter ( int M0 ) {  <CR> this . x = M0 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 