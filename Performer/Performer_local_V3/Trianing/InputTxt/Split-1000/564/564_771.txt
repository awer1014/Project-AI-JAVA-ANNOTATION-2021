 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b2 , String z9 , String z4 , String K1 , String b0 ) {  <CR> super ( b2 , z9 , z4 , K1 , b0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k8 , String L2 , String W6 , String R1 , String a7 ) {  <CR> super ( k8 , L2 , W6 , R1 , a7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String u1 , String i , Evaluation a ) {  <CR> this . senderAddr = u1 ;  <CR> this . receiverAddr = i ;  <CR> this . letter = a ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] P2 ) {  <CR> Evaluation a8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j0 = new Envelop ( "Taipei" , "Kaohsiung" , a8 ) ;  <CR> j0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String l1 , String U3 , String i3 , String V2 , String z6 ) {  <CR> this . title = l1 ;  <CR> this . receiver = U3 ;  <CR> this . content = i3 ;  <CR> this . sender = V2 ;  <CR> this . date = z6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object A6 ) {  <CR> Letter g8 = ( Letter ) A6 ;  <CR> if ( this . x > g8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int o0 ) {  <CR> this . x = o0 ;  <CR> }  <CR> public static void main ( String [ ] s9 ) {  <CR> int f3 ;  <CR> for ( f3 = list . length - 1 ; f3 >= 0 ; f3 -- ) {  <CR> int j3 = f3 ;  <CR> Letter S = new Letter ( f3 ) ;  <CR> Letter A8 = new Letter ( j3 - 1 ) ;  <CR> if ( S . compareTo ( A8 ) == 1 )  <CR> S . display ( f3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int f3 ) {  <CR> list [ f3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 