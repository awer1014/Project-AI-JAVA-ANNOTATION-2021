 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String n3 , String q0 , String M6 , String T , String F1 ) {  <CR> super ( n3 , q0 , M6 , T , F1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F6 , String q4 , String b3 , String L9 , String f6 ) {  <CR> super ( F6 , q4 , b3 , L9 , f6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] T0 ) {  <CR> Evaluation n0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n8 = new Envelop ( "Taipei" , "Kaohsiung" , n0 ) ;  <CR> n8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String A , String z7 , Evaluation N8 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = z7 ;  <CR> this . letter = N8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String L8 , String j7 , String W3 , String h6 , String C0 ) {  <CR> this . title = L8 ;  <CR> this . receiver = j7 ;  <CR> this . content = W3 ;  <CR> this . sender = h6 ;  <CR> this . date = C0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] h7 ) {  <CR> int g5 ;  <CR> for ( g5 = list . length - 1 ; g5 >= 0 ; g5 -- ) {  <CR> int f6 = g5 ;  <CR> Letter M4 = new Letter ( g5 ) ;  <CR> Letter d3 = new Letter ( f6 - 1 ) ;  <CR> if ( M4 . compareTo ( d3 ) == 1 )  <CR> M4 . display ( g5 ) ;  <CR> }  <CR> }  <CR> Letter ( int A ) {  <CR> this . x = A ;  <CR> }  <CR> public void display ( int g5 ) {  <CR> list [ g5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object J7 ) {  <CR> Letter x1 = ( Letter ) J7 ;  <CR> if ( this . x > x1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 