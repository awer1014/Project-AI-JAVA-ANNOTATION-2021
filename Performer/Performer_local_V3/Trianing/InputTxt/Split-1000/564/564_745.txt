 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e3 , String g4 , String Z2 , String D9 , String R8 ) {  <CR> super ( e3 , g4 , Z2 , D9 , R8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I2 , String Y0 , String c5 , String B3 , String U0 ) {  <CR> super ( I2 , Y0 , c5 , B3 , U0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String q3 , String F1 , Evaluation k2 ) {  <CR> this . senderAddr = q3 ;  <CR> this . receiverAddr = F1 ;  <CR> this . letter = k2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] K9 ) {  <CR> Evaluation X = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F4 = new Envelop ( "Taipei" , "Kaohsiung" , X ) ;  <CR> F4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String u2 , String q4 , String V5 , String G2 , String X ) {  <CR> this . title = u2 ;  <CR> this . receiver = q4 ;  <CR> this . content = V5 ;  <CR> this . sender = G2 ;  <CR> this . date = X ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] g ) {  <CR> int x8 ;  <CR> for ( x8 = list . length - 1 ; x8 >= 0 ; x8 -- ) {  <CR> int f8 = x8 ;  <CR> Letter A6 = new Letter ( x8 ) ;  <CR> Letter d0 = new Letter ( f8 - 1 ) ;  <CR> if ( A6 . compareTo ( d0 ) == 1 )  <CR> A6 . display ( x8 ) ;  <CR> }  <CR> }  <CR> public void display ( int x8 ) {  <CR> list [ x8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object C8 ) {  <CR> Letter l0 = ( Letter ) C8 ;  <CR> if ( this . x > l0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int S6 ) {  <CR> this . x = S6 ;  <CR> }  <CR> }  <CR>  <EOC> 