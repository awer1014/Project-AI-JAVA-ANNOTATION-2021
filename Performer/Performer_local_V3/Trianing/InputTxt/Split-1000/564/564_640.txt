 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L , String E5 , String A0 , String W7 , String r7 ) {  <CR> super ( L , E5 , A0 , W7 , r7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String k3 , String Z2 , String a5 , String P7 , String H6 ) {  <CR> super ( k3 , Z2 , a5 , P7 , H6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y3 ) {  <CR> Evaluation A0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S8 = new Envelop ( "Taipei" , "Kaohsiung" , A0 ) ;  <CR> S8 . display ( ) ;  <CR> }  <CR> public Envelop ( String i0 , String U9 , Evaluation i4 ) {  <CR> this . senderAddr = i0 ;  <CR> this . receiverAddr = U9 ;  <CR> this . letter = i4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String C8 , String e1 , String K5 , String S9 , String N9 ) {  <CR> this . title = C8 ;  <CR> this . receiver = e1 ;  <CR> this . content = K5 ;  <CR> this . sender = S9 ;  <CR> this . date = N9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int q6 ) {  <CR> list [ q6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int P9 ) {  <CR> this . x = P9 ;  <CR> }  <CR> public static void main ( String [ ] m2 ) {  <CR> int q6 ;  <CR> for ( q6 = list . length - 1 ; q6 >= 0 ; q6 -- ) {  <CR> int G0 = q6 ;  <CR> Letter M7 = new Letter ( q6 ) ;  <CR> Letter U2 = new Letter ( G0 - 1 ) ;  <CR> if ( M7 . compareTo ( U2 ) == 1 )  <CR> M7 . display ( q6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object n8 ) {  <CR> Letter V4 = ( Letter ) n8 ;  <CR> if ( this . x > V4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 