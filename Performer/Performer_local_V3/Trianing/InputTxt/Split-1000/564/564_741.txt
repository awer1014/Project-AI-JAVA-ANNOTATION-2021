 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c5 , String b6 , String J8 , String c9 , String L5 ) {  <CR> super ( c5 , b6 , J8 , c9 , L5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B0 , String D9 , String Z , String z6 , String h2 ) {  <CR> super ( B0 , D9 , Z , z6 , h2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] f5 ) {  <CR> Evaluation C4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x5 = new Envelop ( "Taipei" , "Kaohsiung" , C4 ) ;  <CR> x5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String p9 , String Q7 , Evaluation q5 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = Q7 ;  <CR> this . letter = q5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String D7 , String n9 , String n4 , String u6 , String r0 ) {  <CR> this . title = D7 ;  <CR> this . receiver = n9 ;  <CR> this . content = n4 ;  <CR> this . sender = u6 ;  <CR> this . date = r0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int S8 ) {  <CR> this . x = S8 ;  <CR> }  <CR> public static void main ( String [ ] w0 ) {  <CR> int r7 ;  <CR> for ( r7 = list . length - 1 ; r7 >= 0 ; r7 -- ) {  <CR> int s8 = r7 ;  <CR> Letter E0 = new Letter ( r7 ) ;  <CR> Letter l6 = new Letter ( s8 - 1 ) ;  <CR> if ( E0 . compareTo ( l6 ) == 1 )  <CR> E0 . display ( r7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object I1 ) {  <CR> Letter E3 = ( Letter ) I1 ;  <CR> if ( this . x > E3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int r7 ) {  <CR> list [ r7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 