 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C0 , String q7 , String t0 , String a0 , String E7 ) {  <CR> super ( C0 , q7 , t0 , a0 , E7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L8 , String D1 , String U , String h8 , String A6 ) {  <CR> super ( L8 , D1 , U , h8 , A6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] n6 ) {  <CR> Evaluation Q7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t3 = new Envelop ( "Taipei" , "Kaohsiung" , Q7 ) ;  <CR> t3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String h4 , String J4 , Evaluation e2 ) {  <CR> this . senderAddr = h4 ;  <CR> this . receiverAddr = J4 ;  <CR> this . letter = e2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String M2 , String J0 , String C6 , String C4 , String M5 ) {  <CR> this . title = M2 ;  <CR> this . receiver = J0 ;  <CR> this . content = C6 ;  <CR> this . sender = C4 ;  <CR> this . date = M5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] h9 ) {  <CR> int H ;  <CR> for ( H = list . length - 1 ; H >= 0 ; H -- ) {  <CR> int X6 = H ;  <CR> Letter J4 = new Letter ( H ) ;  <CR> Letter k4 = new Letter ( X6 - 1 ) ;  <CR> if ( J4 . compareTo ( k4 ) == 1 )  <CR> J4 . display ( H ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object p1 ) {  <CR> Letter V7 = ( Letter ) p1 ;  <CR> if ( this . x > V7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int H ) {  <CR> list [ H ] . Display ( ) ;  <CR> }  <CR> Letter ( int d2 ) {  <CR> this . x = d2 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 