 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C8 , String N6 , String k2 , String C1 , String B2 ) {  <CR> super ( C8 , N6 , k2 , C1 , B2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f9 , String e1 , String F5 , String P9 , String S2 ) {  <CR> super ( f9 , e1 , F5 , P9 , S2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] q3 ) {  <CR> Evaluation K3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M0 = new Envelop ( "Taipei" , "Kaohsiung" , K3 ) ;  <CR> M0 . display ( ) ;  <CR> }  <CR> public Envelop ( String e3 , String Z6 , Evaluation D3 ) {  <CR> this . senderAddr = e3 ;  <CR> this . receiverAddr = Z6 ;  <CR> this . letter = D3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String M5 , String O4 , String A2 , String T1 , String B3 ) {  <CR> this . title = M5 ;  <CR> this . receiver = O4 ;  <CR> this . content = A2 ;  <CR> this . sender = T1 ;  <CR> this . date = B3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int K4 ) {  <CR> this . x = K4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object h0 ) {  <CR> Letter Z5 = ( Letter ) h0 ;  <CR> if ( this . x > Z5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int r5 ) {  <CR> list [ r5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] W8 ) {  <CR> int r5 ;  <CR> for ( r5 = list . length - 1 ; r5 >= 0 ; r5 -- ) {  <CR> int H8 = r5 ;  <CR> Letter s = new Letter ( r5 ) ;  <CR> Letter a8 = new Letter ( H8 - 1 ) ;  <CR> if ( s . compareTo ( a8 ) == 1 )  <CR> s . display ( r5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 