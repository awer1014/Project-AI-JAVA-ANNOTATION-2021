 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G5 , String T2 , String a0 , String E3 , String R8 ) {  <CR> super ( G5 , T2 , a0 , E3 , R8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F4 , String a6 , String n3 , String s , String c7 ) {  <CR> super ( F4 , a6 , n3 , s , c7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] d3 ) {  <CR> Evaluation z6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R3 = new Envelop ( "Taipei" , "Kaohsiung" , z6 ) ;  <CR> R3 . display ( ) ;  <CR> }  <CR> public Envelop ( String E5 , String O7 , Evaluation y8 ) {  <CR> this . senderAddr = E5 ;  <CR> this . receiverAddr = O7 ;  <CR> this . letter = y8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Q1 , String h4 , String z , String Z4 , String c0 ) {  <CR> this . title = Q1 ;  <CR> this . receiver = h4 ;  <CR> this . content = z ;  <CR> this . sender = Z4 ;  <CR> this . date = c0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object x ) {  <CR> Letter j0 = ( Letter ) x ;  <CR> if ( this . x > j0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int T9 ) {  <CR> list [ T9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y5 ) {  <CR> int T9 ;  <CR> for ( T9 = list . length - 1 ; T9 >= 0 ; T9 -- ) {  <CR> int c6 = T9 ;  <CR> Letter J2 = new Letter ( T9 ) ;  <CR> Letter p = new Letter ( c6 - 1 ) ;  <CR> if ( J2 . compareTo ( p ) == 1 )  <CR> J2 . display ( T9 ) ;  <CR> }  <CR> }  <CR> Letter ( int J6 ) {  <CR> this . x = J6 ;  <CR> }  <CR> }  <CR>  <EOC> 