 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u2 , String N0 , String a2 , String j4 , String E1 ) {  <CR> super ( u2 , N0 , a2 , j4 , E1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V3 , String T2 , String R6 , String c4 , String s7 ) {  <CR> super ( V3 , T2 , R6 , c4 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String r5 , String T8 , Evaluation u5 ) {  <CR> this . senderAddr = r5 ;  <CR> this . receiverAddr = T8 ;  <CR> this . letter = u5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] W0 ) {  <CR> Evaluation D7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I9 = new Envelop ( "Taipei" , "Kaohsiung" , D7 ) ;  <CR> I9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String e6 , String a7 , String M3 , String f9 , String R1 ) {  <CR> this . title = e6 ;  <CR> this . receiver = a7 ;  <CR> this . content = M3 ;  <CR> this . sender = f9 ;  <CR> this . date = R1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] D1 ) {  <CR> int I7 ;  <CR> for ( I7 = list . length - 1 ; I7 >= 0 ; I7 -- ) {  <CR> int D6 = I7 ;  <CR> Letter L1 = new Letter ( I7 ) ;  <CR> Letter A = new Letter ( D6 - 1 ) ;  <CR> if ( L1 . compareTo ( A ) == 1 )  <CR> L1 . display ( I7 ) ;  <CR> }  <CR> }  <CR> Letter ( int V6 ) {  <CR> this . x = V6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int I7 ) {  <CR> list [ I7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object J9 ) {  <CR> Letter u8 = ( Letter ) J9 ;  <CR> if ( this . x > u8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 