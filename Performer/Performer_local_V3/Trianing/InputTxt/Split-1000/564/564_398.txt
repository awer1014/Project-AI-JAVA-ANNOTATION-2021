 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e0 , String h1 , String h5 , String o , String s3 ) {  <CR> super ( e0 , h1 , h5 , o , s3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I6 , String h0 , String D3 , String U8 , String D6 ) {  <CR> super ( I6 , h0 , D3 , U8 , D6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String o9 , String E , Evaluation n9 ) {  <CR> this . senderAddr = o9 ;  <CR> this . receiverAddr = E ;  <CR> this . letter = n9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] j0 ) {  <CR> Evaluation C3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z2 = new Envelop ( "Taipei" , "Kaohsiung" , C3 ) ;  <CR> z2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String J5 , String r3 , String U2 , String K3 , String o ) {  <CR> this . title = J5 ;  <CR> this . receiver = r3 ;  <CR> this . content = U2 ;  <CR> this . sender = K3 ;  <CR> this . date = o ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int z ) {  <CR> list [ z ] . Display ( ) ;  <CR> }  <CR> Letter ( int V7 ) {  <CR> this . x = V7 ;  <CR> }  <CR> public static void main ( String [ ] t5 ) {  <CR> int z ;  <CR> for ( z = list . length - 1 ; z >= 0 ; z -- ) {  <CR> int A9 = z ;  <CR> Letter r3 = new Letter ( z ) ;  <CR> Letter D9 = new Letter ( A9 - 1 ) ;  <CR> if ( r3 . compareTo ( D9 ) == 1 )  <CR> r3 . display ( z ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object T0 ) {  <CR> Letter A6 = ( Letter ) T0 ;  <CR> if ( this . x > A6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 