 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Z , String x5 , String i4 , String e , String H9 ) {  <CR> super ( Z , x5 , i4 , e , H9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F1 , String X1 , String H8 , String b1 , String z2 ) {  <CR> super ( F1 , X1 , H8 , b1 , z2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Q6 ) {  <CR> Evaluation r = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u = new Envelop ( "Taipei" , "Kaohsiung" , r ) ;  <CR> u . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String P4 , String b5 , Evaluation F8 ) {  <CR> this . senderAddr = P4 ;  <CR> this . receiverAddr = b5 ;  <CR> this . letter = F8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String m7 , String p0 , String T0 , String n1 , String J1 ) {  <CR> this . title = m7 ;  <CR> this . receiver = p0 ;  <CR> this . content = T0 ;  <CR> this . sender = n1 ;  <CR> this . date = J1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int h6 ) {  <CR> list [ h6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object m0 ) {  <CR> Letter q4 = ( Letter ) m0 ;  <CR> if ( this . x > q4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int o9 ) {  <CR> this . x = o9 ;  <CR> }  <CR> public static void main ( String [ ] c ) {  <CR> int h6 ;  <CR> for ( h6 = list . length - 1 ; h6 >= 0 ; h6 -- ) {  <CR> int S5 = h6 ;  <CR> Letter v7 = new Letter ( h6 ) ;  <CR> Letter K8 = new Letter ( S5 - 1 ) ;  <CR> if ( v7 . compareTo ( K8 ) == 1 )  <CR> v7 . display ( h6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 