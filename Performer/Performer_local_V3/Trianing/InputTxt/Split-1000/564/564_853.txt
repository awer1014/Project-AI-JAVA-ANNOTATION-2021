 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d3 , String U0 , String d5 , String m , String m9 ) {  <CR> super ( d3 , U0 , d5 , m , m9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X4 , String u8 , String A2 , String p8 , String m2 ) {  <CR> super ( X4 , u8 , A2 , p8 , m2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String g0 , String i9 , Evaluation J2 ) {  <CR> this . senderAddr = g0 ;  <CR> this . receiverAddr = i9 ;  <CR> this . letter = J2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] a9 ) {  <CR> Evaluation L0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N2 = new Envelop ( "Taipei" , "Kaohsiung" , L0 ) ;  <CR> N2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String p1 , String S6 , String K0 , String Y1 , String q3 ) {  <CR> this . title = p1 ;  <CR> this . receiver = S6 ;  <CR> this . content = K0 ;  <CR> this . sender = Y1 ;  <CR> this . date = q3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int X3 ) {  <CR> this . x = X3 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object w1 ) {  <CR> Letter J5 = ( Letter ) w1 ;  <CR> if ( this . x > J5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int c2 ) {  <CR> list [ c2 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m6 ) {  <CR> int c2 ;  <CR> for ( c2 = list . length - 1 ; c2 >= 0 ; c2 -- ) {  <CR> int A6 = c2 ;  <CR> Letter Y2 = new Letter ( c2 ) ;  <CR> Letter M5 = new Letter ( A6 - 1 ) ;  <CR> if ( Y2 . compareTo ( M5 ) == 1 )  <CR> Y2 . display ( c2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 