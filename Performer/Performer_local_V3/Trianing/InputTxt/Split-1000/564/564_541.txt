 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y6 , String c5 , String S6 , String a0 , String M6 ) {  <CR> super ( Y6 , c5 , S6 , a0 , M6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B3 , String J3 , String n5 , String H3 , String X1 ) {  <CR> super ( B3 , J3 , n5 , H3 , X1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String x1 , String L7 , Evaluation N3 ) {  <CR> this . senderAddr = x1 ;  <CR> this . receiverAddr = L7 ;  <CR> this . letter = N3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g3 ) {  <CR> Evaluation A0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a7 = new Envelop ( "Taipei" , "Kaohsiung" , A0 ) ;  <CR> a7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String A , String s8 , String y8 , String C4 , String p0 ) {  <CR> this . title = A ;  <CR> this . receiver = s8 ;  <CR> this . content = y8 ;  <CR> this . sender = C4 ;  <CR> this . date = p0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] F2 ) {  <CR> int w1 ;  <CR> for ( w1 = list . length - 1 ; w1 >= 0 ; w1 -- ) {  <CR> int o5 = w1 ;  <CR> Letter l0 = new Letter ( w1 ) ;  <CR> Letter G = new Letter ( o5 - 1 ) ;  <CR> if ( l0 . compareTo ( G ) == 1 )  <CR> l0 . display ( w1 ) ;  <CR> }  <CR> }  <CR> public void display ( int w1 ) {  <CR> list [ w1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object R8 ) {  <CR> Letter g5 = ( Letter ) R8 ;  <CR> if ( this . x > g5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int m1 ) {  <CR> this . x = m1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 