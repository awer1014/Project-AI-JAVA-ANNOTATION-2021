 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H1 , String f4 , String r9 , String F5 , String L4 ) {  <CR> super ( H1 , f4 , r9 , F5 , L4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String x5 , String R4 , String a9 , String S3 , String N6 ) {  <CR> super ( x5 , R4 , a9 , S3 , N6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Y3 , String d8 , Evaluation k8 ) {  <CR> this . senderAddr = Y3 ;  <CR> this . receiverAddr = d8 ;  <CR> this . letter = k8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m9 ) {  <CR> Evaluation T0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a7 = new Envelop ( "Taipei" , "Kaohsiung" , T0 ) ;  <CR> a7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String m9 , String s1 , String x6 , String z6 , String d3 ) {  <CR> this . title = m9 ;  <CR> this . receiver = s1 ;  <CR> this . content = x6 ;  <CR> this . sender = z6 ;  <CR> this . date = d3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object c2 ) {  <CR> Letter o7 = ( Letter ) c2 ;  <CR> if ( this . x > o7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] V ) {  <CR> int X3 ;  <CR> for ( X3 = list . length - 1 ; X3 >= 0 ; X3 -- ) {  <CR> int B9 = X3 ;  <CR> Letter s0 = new Letter ( X3 ) ;  <CR> Letter T9 = new Letter ( B9 - 1 ) ;  <CR> if ( s0 . compareTo ( T9 ) == 1 )  <CR> s0 . display ( X3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int B5 ) {  <CR> this . x = B5 ;  <CR> }  <CR> public void display ( int X3 ) {  <CR> list [ X3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 