 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k8 , String M6 , String C6 , String x4 , String r ) {  <CR> super ( k8 , M6 , C6 , x4 , r ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l7 , String u8 , String X8 , String U4 , String L0 ) {  <CR> super ( l7 , u8 , X8 , U4 , L0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String I3 , String t7 , Evaluation x4 ) {  <CR> this . senderAddr = I3 ;  <CR> this . receiverAddr = t7 ;  <CR> this . letter = x4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] n9 ) {  <CR> Evaluation K8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b5 = new Envelop ( "Taipei" , "Kaohsiung" , K8 ) ;  <CR> b5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String N7 , String M2 , String r4 , String R0 , String f3 ) {  <CR> this . title = N7 ;  <CR> this . receiver = M2 ;  <CR> this . content = r4 ;  <CR> this . sender = R0 ;  <CR> this . date = f3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int V9 ) {  <CR> list [ V9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object q1 ) {  <CR> Letter Q5 = ( Letter ) q1 ;  <CR> if ( this . x > Q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] G5 ) {  <CR> int V9 ;  <CR> for ( V9 = list . length - 1 ; V9 >= 0 ; V9 -- ) {  <CR> int Q0 = V9 ;  <CR> Letter H2 = new Letter ( V9 ) ;  <CR> Letter f4 = new Letter ( Q0 - 1 ) ;  <CR> if ( H2 . compareTo ( f4 ) == 1 )  <CR> H2 . display ( V9 ) ;  <CR> }  <CR> }  <CR> Letter ( int l1 ) {  <CR> this . x = l1 ;  <CR> }  <CR> }  <CR>  <EOC> 