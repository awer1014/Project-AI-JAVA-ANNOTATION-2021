 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String w1 , String w , String v6 , String t1 , String j7 ) {  <CR> super ( w1 , w , v6 , t1 , j7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S8 , String R , String Q6 , String h8 , String r8 ) {  <CR> super ( S8 , R , Q6 , h8 , r8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] m ) {  <CR> Evaluation J3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a = new Envelop ( "Taipei" , "Kaohsiung" , J3 ) ;  <CR> a . display ( ) ;  <CR> }  <CR> public Envelop ( String Q1 , String y1 , Evaluation X2 ) {  <CR> this . senderAddr = Q1 ;  <CR> this . receiverAddr = y1 ;  <CR> this . letter = X2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String J1 , String L , String t4 , String g4 , String u6 ) {  <CR> this . title = J1 ;  <CR> this . receiver = L ;  <CR> this . content = t4 ;  <CR> this . sender = g4 ;  <CR> this . date = u6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i9 ) {  <CR> int x3 ;  <CR> for ( x3 = list . length - 1 ; x3 >= 0 ; x3 -- ) {  <CR> int o = x3 ;  <CR> Letter Z3 = new Letter ( x3 ) ;  <CR> Letter F9 = new Letter ( o - 1 ) ;  <CR> if ( Z3 . compareTo ( F9 ) == 1 )  <CR> Z3 . display ( x3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object P2 ) {  <CR> Letter K5 = ( Letter ) P2 ;  <CR> if ( this . x > K5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int x3 ) {  <CR> list [ x3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Y2 ) {  <CR> this . x = Y2 ;  <CR> }  <CR> }  <CR>  <EOC> 