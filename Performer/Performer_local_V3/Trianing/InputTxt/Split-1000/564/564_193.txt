 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l3 , String m5 , String c , String N6 , String d7 ) {  <CR> super ( l3 , m5 , c , N6 , d7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String T1 , String q9 , String Y8 , String z1 , String j2 ) {  <CR> super ( T1 , q9 , Y8 , z1 , j2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] J9 ) {  <CR> Evaluation N2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j = new Envelop ( "Taipei" , "Kaohsiung" , N2 ) ;  <CR> j . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String r4 , String m4 , Evaluation J4 ) {  <CR> this . senderAddr = r4 ;  <CR> this . receiverAddr = m4 ;  <CR> this . letter = J4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String x9 , String o9 , String b , String h9 , String V0 ) {  <CR> this . title = x9 ;  <CR> this . receiver = o9 ;  <CR> this . content = b ;  <CR> this . sender = h9 ;  <CR> this . date = V0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object J2 ) {  <CR> Letter O1 = ( Letter ) J2 ;  <CR> if ( this . x > O1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int d5 ) {  <CR> this . x = d5 ;  <CR> }  <CR> public static void main ( String [ ] P6 ) {  <CR> int F8 ;  <CR> for ( F8 = list . length - 1 ; F8 >= 0 ; F8 -- ) {  <CR> int y8 = F8 ;  <CR> Letter q = new Letter ( F8 ) ;  <CR> Letter U7 = new Letter ( y8 - 1 ) ;  <CR> if ( q . compareTo ( U7 ) == 1 )  <CR> q . display ( F8 ) ;  <CR> }  <CR> }  <CR> public void display ( int F8 ) {  <CR> list [ F8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 