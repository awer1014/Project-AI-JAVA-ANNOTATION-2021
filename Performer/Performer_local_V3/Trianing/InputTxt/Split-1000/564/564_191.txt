 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l7 , String E6 , String Z7 , String U0 , String i7 ) {  <CR> super ( l7 , E6 , Z7 , U0 , i7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D4 , String S2 , String K4 , String R2 , String G8 ) {  <CR> super ( D4 , S2 , K4 , R2 , G8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String b0 , String g9 , Evaluation n0 ) {  <CR> this . senderAddr = b0 ;  <CR> this . receiverAddr = g9 ;  <CR> this . letter = n0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k5 ) {  <CR> Evaluation w = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P9 = new Envelop ( "Taipei" , "Kaohsiung" , w ) ;  <CR> P9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String E7 , String b5 , String h , String Q , String J9 ) {  <CR> this . title = E7 ;  <CR> this . receiver = b5 ;  <CR> this . content = h ;  <CR> this . sender = Q ;  <CR> this . date = J9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] n0 ) {  <CR> int g3 ;  <CR> for ( g3 = list . length - 1 ; g3 >= 0 ; g3 -- ) {  <CR> int U9 = g3 ;  <CR> Letter f9 = new Letter ( g3 ) ;  <CR> Letter s4 = new Letter ( U9 - 1 ) ;  <CR> if ( f9 . compareTo ( s4 ) == 1 )  <CR> f9 . display ( g3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object n3 ) {  <CR> Letter W3 = ( Letter ) n3 ;  <CR> if ( this . x > W3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int x3 ) {  <CR> this . x = x3 ;  <CR> }  <CR> public void display ( int g3 ) {  <CR> list [ g3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 