 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q6 , String B3 , String I2 , String Y0 , String t3 ) {  <CR> super ( Q6 , B3 , I2 , Y0 , t3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String j9 , String L0 , String k4 , String X1 , String j1 ) {  <CR> super ( j9 , L0 , k4 , X1 , j1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String j1 , String r2 , Evaluation z8 ) {  <CR> this . senderAddr = j1 ;  <CR> this . receiverAddr = r2 ;  <CR> this . letter = z8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Q6 ) {  <CR> Evaluation C7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t2 = new Envelop ( "Taipei" , "Kaohsiung" , C7 ) ;  <CR> t2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String m7 , String D5 , String j0 , String s3 , String A5 ) {  <CR> this . title = m7 ;  <CR> this . receiver = D5 ;  <CR> this . content = j0 ;  <CR> this . sender = s3 ;  <CR> this . date = A5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] F4 ) {  <CR> int m7 ;  <CR> for ( m7 = list . length - 1 ; m7 >= 0 ; m7 -- ) {  <CR> int U7 = m7 ;  <CR> Letter j3 = new Letter ( m7 ) ;  <CR> Letter p6 = new Letter ( U7 - 1 ) ;  <CR> if ( j3 . compareTo ( p6 ) == 1 )  <CR> j3 . display ( m7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object F2 ) {  <CR> Letter u4 = ( Letter ) F2 ;  <CR> if ( this . x > u4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int m7 ) {  <CR> list [ m7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int h3 ) {  <CR> this . x = h3 ;  <CR> }  <CR> }  <CR>  <EOC> 