 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String R , String P5 , String Q1 , String a9 , String d2 ) {  <CR> super ( R , P5 , Q1 , a9 , d2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String C , String s4 , String n1 , String q7 , String I4 ) {  <CR> super ( C , s4 , n1 , q7 , I4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] h2 ) {  <CR> Evaluation R5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k6 = new Envelop ( "Taipei" , "Kaohsiung" , R5 ) ;  <CR> k6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Q8 , String X6 , Evaluation w0 ) {  <CR> this . senderAddr = Q8 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = w0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String z6 , String z3 , String M8 , String d2 , String K1 ) {  <CR> this . title = z6 ;  <CR> this . receiver = z3 ;  <CR> this . content = M8 ;  <CR> this . sender = d2 ;  <CR> this . date = K1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int C2 ) {  <CR> this . x = C2 ;  <CR> }  <CR> public static void main ( String [ ] v2 ) {  <CR> int k2 ;  <CR> for ( k2 = list . length - 1 ; k2 >= 0 ; k2 -- ) {  <CR> int l7 = k2 ;  <CR> Letter H8 = new Letter ( k2 ) ;  <CR> Letter G4 = new Letter ( l7 - 1 ) ;  <CR> if ( H8 . compareTo ( G4 ) == 1 )  <CR> H8 . display ( k2 ) ;  <CR> }  <CR> }  <CR> public void display ( int k2 ) {  <CR> list [ k2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object n1 ) {  <CR> Letter B8 = ( Letter ) n1 ;  <CR> if ( this . x > B8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 