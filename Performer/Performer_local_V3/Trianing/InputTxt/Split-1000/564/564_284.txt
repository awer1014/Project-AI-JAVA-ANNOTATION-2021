 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String u1 , String g0 , String l1 , String b5 , String q0 ) {  <CR> super ( u1 , g0 , l1 , b5 , q0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q0 , String w1 , String o6 , String y5 , String w6 ) {  <CR> super ( q0 , w1 , o6 , y5 , w6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String i3 , String W5 , Evaluation g9 ) {  <CR> this . senderAddr = i3 ;  <CR> this . receiverAddr = W5 ;  <CR> this . letter = g9 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] I6 ) {  <CR> Evaluation V6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W7 = new Envelop ( "Taipei" , "Kaohsiung" , V6 ) ;  <CR> W7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String p2 , String W8 , String F4 , String K , String C2 ) {  <CR> this . title = p2 ;  <CR> this . receiver = W8 ;  <CR> this . content = F4 ;  <CR> this . sender = K ;  <CR> this . date = C2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int o6 ) {  <CR> this . x = o6 ;  <CR> }  <CR> public int compareTo ( Object m3 ) {  <CR> Letter F5 = ( Letter ) m3 ;  <CR> if ( this . x > F5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] S3 ) {  <CR> int K9 ;  <CR> for ( K9 = list . length - 1 ; K9 >= 0 ; K9 -- ) {  <CR> int p7 = K9 ;  <CR> Letter Q6 = new Letter ( K9 ) ;  <CR> Letter R5 = new Letter ( p7 - 1 ) ;  <CR> if ( Q6 . compareTo ( R5 ) == 1 )  <CR> Q6 . display ( K9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int K9 ) {  <CR> list [ K9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 