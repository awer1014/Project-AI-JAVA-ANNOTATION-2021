 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String C2 , String c8 , String v0 , String Z9 , String F6 ) {  <CR> super ( C2 , c8 , v0 , Z9 , F6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K3 , String q0 , String e9 , String Q4 , String C4 ) {  <CR> super ( K3 , q0 , e9 , Q4 , C4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] C1 ) {  <CR> Evaluation i1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q0 = new Envelop ( "Taipei" , "Kaohsiung" , i1 ) ;  <CR> Q0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String b7 , String s2 , Evaluation u3 ) {  <CR> this . senderAddr = b7 ;  <CR> this . receiverAddr = s2 ;  <CR> this . letter = u3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String b , String T2 , String c7 , String N6 , String E0 ) {  <CR> this . title = b ;  <CR> this . receiver = T2 ;  <CR> this . content = c7 ;  <CR> this . sender = N6 ;  <CR> this . date = E0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int p6 ) {  <CR> list [ p6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int X7 ) {  <CR> this . x = X7 ;  <CR> }  <CR> public static void main ( String [ ] a3 ) {  <CR> int p6 ;  <CR> for ( p6 = list . length - 1 ; p6 >= 0 ; p6 -- ) {  <CR> int p3 = p6 ;  <CR> Letter h4 = new Letter ( p6 ) ;  <CR> Letter k9 = new Letter ( p3 - 1 ) ;  <CR> if ( h4 . compareTo ( k9 ) == 1 )  <CR> h4 . display ( p6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object E4 ) {  <CR> Letter G3 = ( Letter ) E4 ;  <CR> if ( this . x > G3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 