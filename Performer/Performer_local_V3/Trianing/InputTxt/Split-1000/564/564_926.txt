 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A8 , String g7 , String N1 , String D3 , String Y3 ) {  <CR> super ( A8 , g7 , N1 , D3 , Y3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F6 , String d0 , String k3 , String K3 , String T9 ) {  <CR> super ( F6 , d0 , k3 , K3 , T9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] M7 ) {  <CR> Evaluation Q5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v3 = new Envelop ( "Taipei" , "Kaohsiung" , Q5 ) ;  <CR> v3 . display ( ) ;  <CR> }  <CR> public Envelop ( String n7 , String o3 , Evaluation b6 ) {  <CR> this . senderAddr = n7 ;  <CR> this . receiverAddr = o3 ;  <CR> this . letter = b6 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String v3 , String g1 , String o8 , String e6 , String i ) {  <CR> this . title = v3 ;  <CR> this . receiver = g1 ;  <CR> this . content = o8 ;  <CR> this . sender = e6 ;  <CR> this . date = i ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] A0 ) {  <CR> int a ;  <CR> for ( a = list . length - 1 ; a >= 0 ; a -- ) {  <CR> int R0 = a ;  <CR> Letter Y7 = new Letter ( a ) ;  <CR> Letter V = new Letter ( R0 - 1 ) ;  <CR> if ( Y7 . compareTo ( V ) == 1 )  <CR> Y7 . display ( a ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int x0 ) {  <CR> this . x = x0 ;  <CR> }  <CR> public int compareTo ( Object E1 ) {  <CR> Letter w = ( Letter ) E1 ;  <CR> if ( this . x > w . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int a ) {  <CR> list [ a ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 