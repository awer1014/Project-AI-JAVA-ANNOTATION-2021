 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k5 , String O3 , String P4 , String w1 , String M9 ) {  <CR> super ( k5 , O3 , P4 , w1 , M9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String M5 , String H2 , String T0 , String k0 , String R4 ) {  <CR> super ( M5 , H2 , T0 , k0 , R4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Q2 ) {  <CR> Evaluation d0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R6 = new Envelop ( "Taipei" , "Kaohsiung" , d0 ) ;  <CR> R6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String J , String J9 , Evaluation Z ) {  <CR> this . senderAddr = J ;  <CR> this . receiverAddr = J9 ;  <CR> this . letter = Z ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String q0 , String E , String X3 , String U7 , String E9 ) {  <CR> this . title = q0 ;  <CR> this . receiver = E ;  <CR> this . content = X3 ;  <CR> this . sender = U7 ;  <CR> this . date = E9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int J4 ) {  <CR> this . x = J4 ;  <CR> }  <CR> public static void main ( String [ ] c5 ) {  <CR> int n5 ;  <CR> for ( n5 = list . length - 1 ; n5 >= 0 ; n5 -- ) {  <CR> int P4 = n5 ;  <CR> Letter D5 = new Letter ( n5 ) ;  <CR> Letter p9 = new Letter ( P4 - 1 ) ;  <CR> if ( D5 . compareTo ( p9 ) == 1 )  <CR> D5 . display ( n5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int n5 ) {  <CR> list [ n5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object j6 ) {  <CR> Letter x4 = ( Letter ) j6 ;  <CR> if ( this . x > x4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 