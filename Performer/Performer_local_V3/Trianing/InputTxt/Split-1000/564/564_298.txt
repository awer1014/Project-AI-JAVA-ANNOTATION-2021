 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i1 , String O5 , String c1 , String q2 , String T1 ) {  <CR> super ( i1 , O5 , c1 , q2 , T1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o2 , String H9 , String N3 , String P3 , String D2 ) {  <CR> super ( o2 , H9 , N3 , P3 , D2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] I4 ) {  <CR> Evaluation q1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T8 = new Envelop ( "Taipei" , "Kaohsiung" , q1 ) ;  <CR> T8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String x2 , String y1 , Evaluation Z9 ) {  <CR> this . senderAddr = x2 ;  <CR> this . receiverAddr = y1 ;  <CR> this . letter = Z9 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String d3 , String i3 , String y8 , String b4 , String F1 ) {  <CR> this . title = d3 ;  <CR> this . receiver = i3 ;  <CR> this . content = y8 ;  <CR> this . sender = b4 ;  <CR> this . date = F1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int c1 ) {  <CR> list [ c1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int W0 ) {  <CR> this . x = W0 ;  <CR> }  <CR> public static void main ( String [ ] W1 ) {  <CR> int c1 ;  <CR> for ( c1 = list . length - 1 ; c1 >= 0 ; c1 -- ) {  <CR> int Z9 = c1 ;  <CR> Letter H3 = new Letter ( c1 ) ;  <CR> Letter m8 = new Letter ( Z9 - 1 ) ;  <CR> if ( H3 . compareTo ( m8 ) == 1 )  <CR> H3 . display ( c1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object A2 ) {  <CR> Letter g1 = ( Letter ) A2 ;  <CR> if ( this . x > g1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 