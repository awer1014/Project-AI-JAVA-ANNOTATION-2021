 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String s , String V2 , String m2 , String X , String W4 ) {  <CR> super ( s , V2 , m2 , X , W4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H5 , String b6 , String d5 , String J2 , String k4 ) {  <CR> super ( H5 , b6 , d5 , J2 , k4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String P8 , String a7 , Evaluation N0 ) {  <CR> this . senderAddr = P8 ;  <CR> this . receiverAddr = a7 ;  <CR> this . letter = N0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] N1 ) {  <CR> Evaluation V6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d7 = new Envelop ( "Taipei" , "Kaohsiung" , V6 ) ;  <CR> d7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String g5 , String h4 , String O7 , String A8 , String g ) {  <CR> this . title = g5 ;  <CR> this . receiver = h4 ;  <CR> this . content = O7 ;  <CR> this . sender = A8 ;  <CR> this . date = g ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M2 ) {  <CR> list [ M2 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] h9 ) {  <CR> int M2 ;  <CR> for ( M2 = list . length - 1 ; M2 >= 0 ; M2 -- ) {  <CR> int K4 = M2 ;  <CR> Letter H2 = new Letter ( M2 ) ;  <CR> Letter D7 = new Letter ( K4 - 1 ) ;  <CR> if ( H2 . compareTo ( D7 ) == 1 )  <CR> H2 . display ( M2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object t0 ) {  <CR> Letter r = ( Letter ) t0 ;  <CR> if ( this . x > r . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int f5 ) {  <CR> this . x = f5 ;  <CR> }  <CR> }  <CR>  <EOC> 