 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String j1 , String y0 , String S0 , String g5 , String F9 ) {  <CR> super ( j1 , y0 , S0 , g5 , F9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W4 , String E1 , String L8 , String t1 , String s9 ) {  <CR> super ( W4 , E1 , L8 , t1 , s9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] e7 ) {  <CR> Evaluation G5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i4 = new Envelop ( "Taipei" , "Kaohsiung" , G5 ) ;  <CR> i4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String s7 , String J8 , Evaluation l2 ) {  <CR> this . senderAddr = s7 ;  <CR> this . receiverAddr = J8 ;  <CR> this . letter = l2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String N2 , String E , String f8 , String z8 , String z6 ) {  <CR> this . title = N2 ;  <CR> this . receiver = E ;  <CR> this . content = f8 ;  <CR> this . sender = z8 ;  <CR> this . date = z6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int O2 ) {  <CR> this . x = O2 ;  <CR> }  <CR> public int compareTo ( Object k9 ) {  <CR> Letter d4 = ( Letter ) k9 ;  <CR> if ( this . x > d4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int e2 ) {  <CR> list [ e2 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> int e2 ;  <CR> for ( e2 = list . length - 1 ; e2 >= 0 ; e2 -- ) {  <CR> int T6 = e2 ;  <CR> Letter P8 = new Letter ( e2 ) ;  <CR> Letter r7 = new Letter ( T6 - 1 ) ;  <CR> if ( P8 . compareTo ( r7 ) == 1 )  <CR> P8 . display ( e2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 