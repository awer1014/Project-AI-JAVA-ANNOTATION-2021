 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String x2 , String r2 , String d , String l0 , String s3 ) {  <CR> super ( x2 , r2 , d , l0 , s3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y5 , String j2 , String R4 , String a6 , String h1 ) {  <CR> super ( Y5 , j2 , R4 , a6 , h1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String v9 , String z5 , Evaluation r4 ) {  <CR> this . senderAddr = v9 ;  <CR> this . receiverAddr = z5 ;  <CR> this . letter = r4 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] O5 ) {  <CR> Evaluation j3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U = new Envelop ( "Taipei" , "Kaohsiung" , j3 ) ;  <CR> U . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String I6 , String O4 , String C4 , String H8 , String k1 ) {  <CR> this . title = I6 ;  <CR> this . receiver = O4 ;  <CR> this . content = C4 ;  <CR> this . sender = H8 ;  <CR> this . date = k1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object j6 ) {  <CR> Letter z1 = ( Letter ) j6 ;  <CR> if ( this . x > z1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int v2 ) {  <CR> list [ v2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int U ) {  <CR> this . x = U ;  <CR> }  <CR> public static void main ( String [ ] P ) {  <CR> int v2 ;  <CR> for ( v2 = list . length - 1 ; v2 >= 0 ; v2 -- ) {  <CR> int L1 = v2 ;  <CR> Letter Q8 = new Letter ( v2 ) ;  <CR> Letter x2 = new Letter ( L1 - 1 ) ;  <CR> if ( Q8 . compareTo ( x2 ) == 1 )  <CR> Q8 . display ( v2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 