 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z5 , String E3 , String D8 , String q1 , String J5 ) {  <CR> super ( Z5 , E3 , D8 , q1 , J5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a6 , String K4 , String g1 , String R7 , String C ) {  <CR> super ( a6 , K4 , g1 , R7 , C ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String R8 , String m5 , Evaluation k5 ) {  <CR> this . senderAddr = R8 ;  <CR> this . receiverAddr = m5 ;  <CR> this . letter = k5 ;  <CR> }  <CR> public static void main ( String [ ] Z6 ) {  <CR> Evaluation B9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q6 = new Envelop ( "Taipei" , "Kaohsiung" , B9 ) ;  <CR> q6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String h1 , String q7 , String X3 , String r3 , String b6 ) {  <CR> this . title = h1 ;  <CR> this . receiver = q7 ;  <CR> this . content = X3 ;  <CR> this . sender = r3 ;  <CR> this . date = b6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int k ) {  <CR> this . x = k ;  <CR> }  <CR> public int compareTo ( Object q1 ) {  <CR> Letter n7 = ( Letter ) q1 ;  <CR> if ( this . x > n7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] P4 ) {  <CR> int X8 ;  <CR> for ( X8 = list . length - 1 ; X8 >= 0 ; X8 -- ) {  <CR> int R7 = X8 ;  <CR> Letter A5 = new Letter ( X8 ) ;  <CR> Letter Z7 = new Letter ( R7 - 1 ) ;  <CR> if ( A5 . compareTo ( Z7 ) == 1 )  <CR> A5 . display ( X8 ) ;  <CR> }  <CR> }  <CR> public void display ( int X8 ) {  <CR> list [ X8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 