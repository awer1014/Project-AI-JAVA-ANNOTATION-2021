 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I , String H8 , String B6 , String h8 , String Z4 ) {  <CR> super ( I , H8 , B6 , h8 , Z4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String l6 , String r1 , String G8 , String s7 , String R9 ) {  <CR> super ( l6 , r1 , G8 , s7 , R9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String A6 , String d2 , Evaluation C7 ) {  <CR> this . senderAddr = A6 ;  <CR> this . receiverAddr = d2 ;  <CR> this . letter = C7 ;  <CR> }  <CR> public static void main ( String [ ] J2 ) {  <CR> Evaluation t = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h0 = new Envelop ( "Taipei" , "Kaohsiung" , t ) ;  <CR> h0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String T0 , String P8 , String a2 , String l5 , String K3 ) {  <CR> this . title = T0 ;  <CR> this . receiver = P8 ;  <CR> this . content = a2 ;  <CR> this . sender = l5 ;  <CR> this . date = K3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int B3 ) {  <CR> this . x = B3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object j9 ) {  <CR> Letter Y6 = ( Letter ) j9 ;  <CR> if ( this . x > Y6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int Q ) {  <CR> list [ Q ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] P1 ) {  <CR> int Q ;  <CR> for ( Q = list . length - 1 ; Q >= 0 ; Q -- ) {  <CR> int u4 = Q ;  <CR> Letter D9 = new Letter ( Q ) ;  <CR> Letter L3 = new Letter ( u4 - 1 ) ;  <CR> if ( D9 . compareTo ( L3 ) == 1 )  <CR> D9 . display ( Q ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 