 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b , String C7 , String J0 , String w9 , String G3 ) {  <CR> super ( b , C7 , J0 , w9 , G3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f0 , String s1 , String X0 , String C8 , String B1 ) {  <CR> super ( f0 , s1 , X0 , C8 , B1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String j7 , String f , Evaluation W1 ) {  <CR> this . senderAddr = j7 ;  <CR> this . receiverAddr = f ;  <CR> this . letter = W1 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] V4 ) {  <CR> Evaluation r8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U0 = new Envelop ( "Taipei" , "Kaohsiung" , r8 ) ;  <CR> U0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String g4 , String v9 , String P0 , String Z0 , String Y1 ) {  <CR> this . title = g4 ;  <CR> this . receiver = v9 ;  <CR> this . content = P0 ;  <CR> this . sender = Z0 ;  <CR> this . date = Y1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int C8 ) {  <CR> list [ C8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x8 ) {  <CR> this . x = x8 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object W2 ) {  <CR> Letter j2 = ( Letter ) W2 ;  <CR> if ( this . x > j2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Y9 ) {  <CR> int C8 ;  <CR> for ( C8 = list . length - 1 ; C8 >= 0 ; C8 -- ) {  <CR> int I3 = C8 ;  <CR> Letter l2 = new Letter ( C8 ) ;  <CR> Letter n1 = new Letter ( I3 - 1 ) ;  <CR> if ( l2 . compareTo ( n1 ) == 1 )  <CR> l2 . display ( C8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 