 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O8 , String W8 , String k5 , String K6 , String N7 ) {  <CR> super ( O8 , W8 , k5 , K6 , N7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i0 , String l8 , String r4 , String n9 , String x5 ) {  <CR> super ( i0 , l8 , r4 , n9 , x5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] e ) {  <CR> Evaluation L7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K6 = new Envelop ( "Taipei" , "Kaohsiung" , L7 ) ;  <CR> K6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z0 , String J3 , Evaluation Z9 ) {  <CR> this . senderAddr = Z0 ;  <CR> this . receiverAddr = J3 ;  <CR> this . letter = Z9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String l7 , String O , String B , String Q7 , String A0 ) {  <CR> this . title = l7 ;  <CR> this . receiver = O ;  <CR> this . content = B ;  <CR> this . sender = Q7 ;  <CR> this . date = A0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object c5 ) {  <CR> Letter q0 = ( Letter ) c5 ;  <CR> if ( this . x > q0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] r3 ) {  <CR> int E ;  <CR> for ( E = list . length - 1 ; E >= 0 ; E -- ) {  <CR> int X5 = E ;  <CR> Letter G4 = new Letter ( E ) ;  <CR> Letter V8 = new Letter ( X5 - 1 ) ;  <CR> if ( G4 . compareTo ( V8 ) == 1 )  <CR> G4 . display ( E ) ;  <CR> }  <CR> }  <CR> public void display ( int E ) {  <CR> list [ E ] . Display ( ) ;  <CR> }  <CR> Letter ( int f9 ) {  <CR> this . x = f9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 