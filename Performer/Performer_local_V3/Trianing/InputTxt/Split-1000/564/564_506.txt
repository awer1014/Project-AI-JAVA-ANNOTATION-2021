 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z4 , String d9 , String i , String T6 , String P2 ) {  <CR> super ( Z4 , d9 , i , T6 , P2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W7 , String Z9 , String C2 , String t , String w7 ) {  <CR> super ( W7 , Z9 , C2 , t , w7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] n7 ) {  <CR> Evaluation S8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y4 = new Envelop ( "Taipei" , "Kaohsiung" , S8 ) ;  <CR> Y4 . display ( ) ;  <CR> }  <CR> public Envelop ( String b5 , String Q8 , Evaluation Q2 ) {  <CR> this . senderAddr = b5 ;  <CR> this . receiverAddr = Q8 ;  <CR> this . letter = Q2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y0 , String r2 , String R6 , String y0 , String P ) {  <CR> this . title = Y0 ;  <CR> this . receiver = r2 ;  <CR> this . content = R6 ;  <CR> this . sender = y0 ;  <CR> this . date = P ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int a0 ) {  <CR> list [ a0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int p0 ) {  <CR> this . x = p0 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object v4 ) {  <CR> Letter q6 = ( Letter ) v4 ;  <CR> if ( this . x > q6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] m6 ) {  <CR> int a0 ;  <CR> for ( a0 = list . length - 1 ; a0 >= 0 ; a0 -- ) {  <CR> int y5 = a0 ;  <CR> Letter n1 = new Letter ( a0 ) ;  <CR> Letter V6 = new Letter ( y5 - 1 ) ;  <CR> if ( n1 . compareTo ( V6 ) == 1 )  <CR> n1 . display ( a0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 