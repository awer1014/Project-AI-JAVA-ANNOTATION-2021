 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b4 , String j1 , String I , String s3 , String i4 ) {  <CR> super ( b4 , j1 , I , s3 , i4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u0 , String y , String F9 , String R7 , String D7 ) {  <CR> super ( u0 , y , F9 , R7 , D7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String V1 , String o7 , Evaluation T9 ) {  <CR> this . senderAddr = V1 ;  <CR> this . receiverAddr = o7 ;  <CR> this . letter = T9 ;  <CR> }  <CR> public static void main ( String [ ] L4 ) {  <CR> Evaluation n1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T7 = new Envelop ( "Taipei" , "Kaohsiung" , n1 ) ;  <CR> T7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String c4 , String k0 , String J0 , String L , String R ) {  <CR> this . title = c4 ;  <CR> this . receiver = k0 ;  <CR> this . content = J0 ;  <CR> this . sender = L ;  <CR> this . date = R ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object V6 ) {  <CR> Letter O8 = ( Letter ) V6 ;  <CR> if ( this . x > O8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int E6 ) {  <CR> this . x = E6 ;  <CR> }  <CR> public void display ( int Q ) {  <CR> list [ Q ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] c5 ) {  <CR> int Q ;  <CR> for ( Q = list . length - 1 ; Q >= 0 ; Q -- ) {  <CR> int I3 = Q ;  <CR> Letter i4 = new Letter ( Q ) ;  <CR> Letter g5 = new Letter ( I3 - 1 ) ;  <CR> if ( i4 . compareTo ( g5 ) == 1 )  <CR> i4 . display ( Q ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 