 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String V4 , String y6 , String m0 , String O8 , String f4 ) {  <CR> super ( V4 , y6 , m0 , O8 , f4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Q2 , String o9 , String y3 , String l9 , String q5 ) {  <CR> super ( Q2 , o9 , y3 , l9 , q5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String N1 , String R4 , Evaluation y5 ) {  <CR> this . senderAddr = N1 ;  <CR> this . receiverAddr = R4 ;  <CR> this . letter = y5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y5 ) {  <CR> Evaluation i6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e5 = new Envelop ( "Taipei" , "Kaohsiung" , i6 ) ;  <CR> e5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String H3 , String U0 , String y2 , String Q3 , String l9 ) {  <CR> this . title = H3 ;  <CR> this . receiver = U0 ;  <CR> this . content = y2 ;  <CR> this . sender = Q3 ;  <CR> this . date = l9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int W7 ) {  <CR> this . x = W7 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] C5 ) {  <CR> int G1 ;  <CR> for ( G1 = list . length - 1 ; G1 >= 0 ; G1 -- ) {  <CR> int u8 = G1 ;  <CR> Letter Z1 = new Letter ( G1 ) ;  <CR> Letter w9 = new Letter ( u8 - 1 ) ;  <CR> if ( Z1 . compareTo ( w9 ) == 1 )  <CR> Z1 . display ( G1 ) ;  <CR> }  <CR> }  <CR> public void display ( int G1 ) {  <CR> list [ G1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L7 ) {  <CR> Letter B5 = ( Letter ) L7 ;  <CR> if ( this . x > B5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 