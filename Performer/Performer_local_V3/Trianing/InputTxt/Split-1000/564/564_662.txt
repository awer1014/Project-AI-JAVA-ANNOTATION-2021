 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q0 , String x8 , String P9 , String Y9 , String d7 ) {  <CR> super ( q0 , x8 , P9 , Y9 , d7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J0 , String C5 , String V7 , String f9 , String h0 ) {  <CR> super ( J0 , C5 , V7 , f9 , h0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String h4 , String e1 , Evaluation q8 ) {  <CR> this . senderAddr = h4 ;  <CR> this . receiverAddr = e1 ;  <CR> this . letter = q8 ;  <CR> }  <CR> public static void main ( String [ ] U ) {  <CR> Evaluation m1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d4 = new Envelop ( "Taipei" , "Kaohsiung" , m1 ) ;  <CR> d4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String g1 , String t7 , String y2 , String Y , String I0 ) {  <CR> this . title = g1 ;  <CR> this . receiver = t7 ;  <CR> this . content = y2 ;  <CR> this . sender = Y ;  <CR> this . date = I0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int x ) {  <CR> list [ x ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] e7 ) {  <CR> int x ;  <CR> for ( x = list . length - 1 ; x >= 0 ; x -- ) {  <CR> int h5 = x ;  <CR> Letter R3 = new Letter ( x ) ;  <CR> Letter S4 = new Letter ( h5 - 1 ) ;  <CR> if ( R3 . compareTo ( S4 ) == 1 )  <CR> R3 . display ( x ) ;  <CR> }  <CR> }  <CR> Letter ( int T5 ) {  <CR> this . x = T5 ;  <CR> }  <CR> public int compareTo ( Object e0 ) {  <CR> Letter K3 = ( Letter ) e0 ;  <CR> if ( this . x > K3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 