 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z9 , String F0 , String Y6 , String z8 , String Z9 ) {  <CR> super ( z9 , F0 , Y6 , z8 , Z9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X6 , String z2 , String H8 , String N7 , String K4 ) {  <CR> super ( X6 , z2 , H8 , N7 , K4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String k4 , String r4 , Evaluation Y1 ) {  <CR> this . senderAddr = k4 ;  <CR> this . receiverAddr = r4 ;  <CR> this . letter = Y1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] l2 ) {  <CR> Evaluation X9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d0 = new Envelop ( "Taipei" , "Kaohsiung" , X9 ) ;  <CR> d0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String K1 , String l , String l6 , String T7 , String r6 ) {  <CR> this . title = K1 ;  <CR> this . receiver = l ;  <CR> this . content = l6 ;  <CR> this . sender = T7 ;  <CR> this . date = r6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int w8 ) {  <CR> list [ w8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object D3 ) {  <CR> Letter X6 = ( Letter ) D3 ;  <CR> if ( this . x > X6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int o3 ) {  <CR> this . x = o3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] T6 ) {  <CR> int w8 ;  <CR> for ( w8 = list . length - 1 ; w8 >= 0 ; w8 -- ) {  <CR> int M9 = w8 ;  <CR> Letter p = new Letter ( w8 ) ;  <CR> Letter A4 = new Letter ( M9 - 1 ) ;  <CR> if ( p . compareTo ( A4 ) == 1 )  <CR> p . display ( w8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 