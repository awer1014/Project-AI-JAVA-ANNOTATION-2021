 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String E2 , String L9 , String X9 , String S1 , String S5 ) {  <CR> super ( E2 , L9 , X9 , S1 , S5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z9 , String L , String p8 , String X6 , String V2 ) {  <CR> super ( Z9 , L , p8 , X6 , V2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String X3 , String a2 , Evaluation I5 ) {  <CR> this . senderAddr = X3 ;  <CR> this . receiverAddr = a2 ;  <CR> this . letter = I5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] P1 ) {  <CR> Evaluation L5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P5 = new Envelop ( "Taipei" , "Kaohsiung" , L5 ) ;  <CR> P5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String p4 , String I , String K9 , String N8 , String V6 ) {  <CR> this . title = p4 ;  <CR> this . receiver = I ;  <CR> this . content = K9 ;  <CR> this . sender = N8 ;  <CR> this . date = V6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object Y ) {  <CR> Letter i9 = ( Letter ) Y ;  <CR> if ( this . x > i9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int l7 ) {  <CR> list [ l7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] e5 ) {  <CR> int l7 ;  <CR> for ( l7 = list . length - 1 ; l7 >= 0 ; l7 -- ) {  <CR> int L0 = l7 ;  <CR> Letter Y5 = new Letter ( l7 ) ;  <CR> Letter N2 = new Letter ( L0 - 1 ) ;  <CR> if ( Y5 . compareTo ( N2 ) == 1 )  <CR> Y5 . display ( l7 ) ;  <CR> }  <CR> }  <CR> Letter ( int N0 ) {  <CR> this . x = N0 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 