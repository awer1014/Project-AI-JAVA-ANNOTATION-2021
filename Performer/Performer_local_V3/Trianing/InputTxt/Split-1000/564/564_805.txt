 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J0 , String r6 , String C3 , String S2 , String W5 ) {  <CR> super ( J0 , r6 , C3 , S2 , W5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h5 , String I3 , String b5 , String k4 , String E6 ) {  <CR> super ( h5 , I3 , b5 , k4 , E6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o9 ) {  <CR> Evaluation w5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q9 = new Envelop ( "Taipei" , "Kaohsiung" , w5 ) ;  <CR> Q9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String L6 , String L4 , Evaluation H1 ) {  <CR> this . senderAddr = L6 ;  <CR> this . receiverAddr = L4 ;  <CR> this . letter = H1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String A8 , String K0 , String P7 , String U6 , String M4 ) {  <CR> this . title = A8 ;  <CR> this . receiver = K0 ;  <CR> this . content = P7 ;  <CR> this . sender = U6 ;  <CR> this . date = M4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int H2 ) {  <CR> this . x = H2 ;  <CR> }  <CR> public static void main ( String [ ] Z9 ) {  <CR> int J9 ;  <CR> for ( J9 = list . length - 1 ; J9 >= 0 ; J9 -- ) {  <CR> int h5 = J9 ;  <CR> Letter i9 = new Letter ( J9 ) ;  <CR> Letter J3 = new Letter ( h5 - 1 ) ;  <CR> if ( i9 . compareTo ( J3 ) == 1 )  <CR> i9 . display ( J9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int J9 ) {  <CR> list [ J9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object c1 ) {  <CR> Letter o5 = ( Letter ) c1 ;  <CR> if ( this . x > o5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 