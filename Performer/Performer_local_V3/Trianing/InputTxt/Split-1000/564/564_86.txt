 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Y9 , String g7 , String f0 , String z9 , String m3 ) {  <CR> super ( Y9 , g7 , f0 , z9 , m3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i8 , String b4 , String v5 , String O1 , String u9 ) {  <CR> super ( i8 , b4 , v5 , O1 , u9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] o0 ) {  <CR> Evaluation J9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O7 = new Envelop ( "Taipei" , "Kaohsiung" , J9 ) ;  <CR> O7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Y7 , String Y5 , Evaluation j ) {  <CR> this . senderAddr = Y7 ;  <CR> this . receiverAddr = Y5 ;  <CR> this . letter = j ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String J4 , String P4 , String k9 , String e5 , String y4 ) {  <CR> this . title = J4 ;  <CR> this . receiver = P4 ;  <CR> this . content = k9 ;  <CR> this . sender = e5 ;  <CR> this . date = y4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] h6 ) {  <CR> int A0 ;  <CR> for ( A0 = list . length - 1 ; A0 >= 0 ; A0 -- ) {  <CR> int Z = A0 ;  <CR> Letter y0 = new Letter ( A0 ) ;  <CR> Letter j5 = new Letter ( Z - 1 ) ;  <CR> if ( y0 . compareTo ( j5 ) == 1 )  <CR> y0 . display ( A0 ) ;  <CR> }  <CR> }  <CR> public void display ( int A0 ) {  <CR> list [ A0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int d5 ) {  <CR> this . x = d5 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object L9 ) {  <CR> Letter d9 = ( Letter ) L9 ;  <CR> if ( this . x > d9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 