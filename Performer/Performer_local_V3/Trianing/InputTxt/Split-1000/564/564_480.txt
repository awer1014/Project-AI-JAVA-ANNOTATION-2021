 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String r6 , String X4 , String B , String p5 , String f6 ) {  <CR> super ( r6 , X4 , B , p5 , f6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A , String B3 , String s9 , String n5 , String o9 ) {  <CR> super ( A , B3 , s9 , n5 , o9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String O4 , String x7 , Evaluation g7 ) {  <CR> this . senderAddr = O4 ;  <CR> this . receiverAddr = x7 ;  <CR> this . letter = g7 ;  <CR> }  <CR> public static void main ( String [ ] K6 ) {  <CR> Evaluation B6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y5 = new Envelop ( "Taipei" , "Kaohsiung" , B6 ) ;  <CR> Y5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String G9 , String v4 , String r6 , String o7 , String G6 ) {  <CR> this . title = G9 ;  <CR> this . receiver = v4 ;  <CR> this . content = r6 ;  <CR> this . sender = o7 ;  <CR> this . date = G6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int x9 ) {  <CR> this . x = x9 ;  <CR> }  <CR> public int compareTo ( Object R ) {  <CR> Letter e5 = ( Letter ) R ;  <CR> if ( this . x > e5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] t8 ) {  <CR> int J ;  <CR> for ( J = list . length - 1 ; J >= 0 ; J -- ) {  <CR> int c0 = J ;  <CR> Letter A0 = new Letter ( J ) ;  <CR> Letter k5 = new Letter ( c0 - 1 ) ;  <CR> if ( A0 . compareTo ( k5 ) == 1 )  <CR> A0 . display ( J ) ;  <CR> }  <CR> }  <CR> public void display ( int J ) {  <CR> list [ J ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 