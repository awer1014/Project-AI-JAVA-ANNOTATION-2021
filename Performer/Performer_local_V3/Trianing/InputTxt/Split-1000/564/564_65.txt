 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q3 , String P8 , String q1 , String B1 , String M ) {  <CR> super ( Q3 , P8 , q1 , B1 , M ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B7 , String d4 , String o2 , String O3 , String r3 ) {  <CR> super ( B7 , d4 , o2 , O3 , r3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String e8 , String z , Evaluation n1 ) {  <CR> this . senderAddr = e8 ;  <CR> this . receiverAddr = z ;  <CR> this . letter = n1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] z8 ) {  <CR> Evaluation U9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g6 = new Envelop ( "Taipei" , "Kaohsiung" , U9 ) ;  <CR> g6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String o3 , String r2 , String V4 , String S0 , String X3 ) {  <CR> this . title = o3 ;  <CR> this . receiver = r2 ;  <CR> this . content = V4 ;  <CR> this . sender = S0 ;  <CR> this . date = X3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int U3 ) {  <CR> this . x = U3 ;  <CR> }  <CR> public static void main ( String [ ] q3 ) {  <CR> int J4 ;  <CR> for ( J4 = list . length - 1 ; J4 >= 0 ; J4 -- ) {  <CR> int v8 = J4 ;  <CR> Letter i0 = new Letter ( J4 ) ;  <CR> Letter X8 = new Letter ( v8 - 1 ) ;  <CR> if ( i0 . compareTo ( X8 ) == 1 )  <CR> i0 . display ( J4 ) ;  <CR> }  <CR> }  <CR> public void display ( int J4 ) {  <CR> list [ J4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object G2 ) {  <CR> Letter e5 = ( Letter ) G2 ;  <CR> if ( this . x > e5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 