 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D7 , String p , String u6 , String N0 , String b1 ) {  <CR> super ( D7 , p , u6 , N0 , b1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f1 , String w5 , String Z4 , String Y4 , String w8 ) {  <CR> super ( f1 , w5 , Z4 , Y4 , w8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String K0 , String S7 , Evaluation f4 ) {  <CR> this . senderAddr = K0 ;  <CR> this . receiverAddr = S7 ;  <CR> this . letter = f4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E8 ) {  <CR> Evaluation v8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U8 = new Envelop ( "Taipei" , "Kaohsiung" , v8 ) ;  <CR> U8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String f0 , String k , String u2 , String v8 , String E2 ) {  <CR> this . title = f0 ;  <CR> this . receiver = k ;  <CR> this . content = u2 ;  <CR> this . sender = v8 ;  <CR> this . date = E2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int q2 ) {  <CR> this . x = q2 ;  <CR> }  <CR> public void display ( int m7 ) {  <CR> list [ m7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object y6 ) {  <CR> Letter g5 = ( Letter ) y6 ;  <CR> if ( this . x > g5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] N ) {  <CR> int m7 ;  <CR> for ( m7 = list . length - 1 ; m7 >= 0 ; m7 -- ) {  <CR> int D8 = m7 ;  <CR> Letter i2 = new Letter ( m7 ) ;  <CR> Letter v7 = new Letter ( D8 - 1 ) ;  <CR> if ( i2 . compareTo ( v7 ) == 1 )  <CR> i2 . display ( m7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 