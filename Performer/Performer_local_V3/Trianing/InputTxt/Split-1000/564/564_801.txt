 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String j3 , String n , String T4 , String v4 , String q8 ) {  <CR> super ( j3 , n , T4 , v4 , q8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g6 , String i2 , String E8 , String U8 , String Q4 ) {  <CR> super ( g6 , i2 , E8 , U8 , Q4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String f7 , String V9 , Evaluation R2 ) {  <CR> this . senderAddr = f7 ;  <CR> this . receiverAddr = V9 ;  <CR> this . letter = R2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] s0 ) {  <CR> Evaluation O8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C5 = new Envelop ( "Taipei" , "Kaohsiung" , O8 ) ;  <CR> C5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Y9 , String h6 , String O3 , String H0 , String M9 ) {  <CR> this . title = Y9 ;  <CR> this . receiver = h6 ;  <CR> this . content = O3 ;  <CR> this . sender = H0 ;  <CR> this . date = M9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int f1 ) {  <CR> list [ f1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int L1 ) {  <CR> this . x = L1 ;  <CR> }  <CR> public int compareTo ( Object U6 ) {  <CR> Letter b6 = ( Letter ) U6 ;  <CR> if ( this . x > b6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z4 ) {  <CR> int f1 ;  <CR> for ( f1 = list . length - 1 ; f1 >= 0 ; f1 -- ) {  <CR> int A = f1 ;  <CR> Letter z2 = new Letter ( f1 ) ;  <CR> Letter o9 = new Letter ( A - 1 ) ;  <CR> if ( z2 . compareTo ( o9 ) == 1 )  <CR> z2 . display ( f1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 