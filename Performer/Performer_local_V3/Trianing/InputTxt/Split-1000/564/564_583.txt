 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y , String X8 , String s1 , String i7 , String x2 ) {  <CR> super ( Y , X8 , s1 , i7 , x2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h , String A8 , String C2 , String Y9 , String x4 ) {  <CR> super ( h , A8 , C2 , Y9 , x4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] e2 ) {  <CR> Evaluation k1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k8 = new Envelop ( "Taipei" , "Kaohsiung" , k1 ) ;  <CR> k8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String v1 , String s , Evaluation l2 ) {  <CR> this . senderAddr = v1 ;  <CR> this . receiverAddr = s ;  <CR> this . letter = l2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String z7 , String E1 , String q6 , String M9 , String U3 ) {  <CR> this . title = z7 ;  <CR> this . receiver = E1 ;  <CR> this . content = q6 ;  <CR> this . sender = M9 ;  <CR> this . date = U3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z2 ) {  <CR> int U2 ;  <CR> for ( U2 = list . length - 1 ; U2 >= 0 ; U2 -- ) {  <CR> int N6 = U2 ;  <CR> Letter p1 = new Letter ( U2 ) ;  <CR> Letter X8 = new Letter ( N6 - 1 ) ;  <CR> if ( p1 . compareTo ( X8 ) == 1 )  <CR> p1 . display ( U2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int U2 ) {  <CR> list [ U2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object P3 ) {  <CR> Letter O3 = ( Letter ) P3 ;  <CR> if ( this . x > O3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int y8 ) {  <CR> this . x = y8 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 