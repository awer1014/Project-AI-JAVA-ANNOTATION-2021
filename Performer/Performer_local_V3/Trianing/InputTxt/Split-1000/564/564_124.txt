 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t1 , String R4 , String C3 , String E6 , String H3 ) {  <CR> super ( t1 , R4 , C3 , E6 , H3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D4 , String k2 , String N7 , String g5 , String F1 ) {  <CR> super ( D4 , k2 , N7 , g5 , F1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] k2 ) {  <CR> Evaluation P9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j6 = new Envelop ( "Taipei" , "Kaohsiung" , P9 ) ;  <CR> j6 . display ( ) ;  <CR> }  <CR> public Envelop ( String z3 , String M4 , Evaluation y4 ) {  <CR> this . senderAddr = z3 ;  <CR> this . receiverAddr = M4 ;  <CR> this . letter = y4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String G0 , String i7 , String c2 , String z4 , String T2 ) {  <CR> this . title = G0 ;  <CR> this . receiver = i7 ;  <CR> this . content = c2 ;  <CR> this . sender = z4 ;  <CR> this . date = T2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i ) {  <CR> int R2 ;  <CR> for ( R2 = list . length - 1 ; R2 >= 0 ; R2 -- ) {  <CR> int o7 = R2 ;  <CR> Letter U9 = new Letter ( R2 ) ;  <CR> Letter Z3 = new Letter ( o7 - 1 ) ;  <CR> if ( U9 . compareTo ( Z3 ) == 1 )  <CR> U9 . display ( R2 ) ;  <CR> }  <CR> }  <CR> Letter ( int w8 ) {  <CR> this . x = w8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int R2 ) {  <CR> list [ R2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object p6 ) {  <CR> Letter M4 = ( Letter ) p6 ;  <CR> if ( this . x > M4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 