 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z4 , String B0 , String m4 , String m , String k7 ) {  <CR> super ( Z4 , B0 , m4 , m , k7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W4 , String F5 , String s6 , String w5 , String r ) {  <CR> super ( W4 , F5 , s6 , w5 , r ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String S0 , String B5 , Evaluation Q8 ) {  <CR> this . senderAddr = S0 ;  <CR> this . receiverAddr = B5 ;  <CR> this . letter = Q8 ;  <CR> }  <CR> public static void main ( String [ ] x8 ) {  <CR> Evaluation h1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y4 = new Envelop ( "Taipei" , "Kaohsiung" , h1 ) ;  <CR> y4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String I1 , String k9 , String t , String s8 , String K0 ) {  <CR> this . title = I1 ;  <CR> this . receiver = k9 ;  <CR> this . content = t ;  <CR> this . sender = s8 ;  <CR> this . date = K0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] s7 ) {  <CR> int w3 ;  <CR> for ( w3 = list . length - 1 ; w3 >= 0 ; w3 -- ) {  <CR> int z7 = w3 ;  <CR> Letter v2 = new Letter ( w3 ) ;  <CR> Letter Z3 = new Letter ( z7 - 1 ) ;  <CR> if ( v2 . compareTo ( Z3 ) == 1 )  <CR> v2 . display ( w3 ) ;  <CR> }  <CR> }  <CR> Letter ( int F3 ) {  <CR> this . x = F3 ;  <CR> }  <CR> public int compareTo ( Object b5 ) {  <CR> Letter D1 = ( Letter ) b5 ;  <CR> if ( this . x > D1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int w3 ) {  <CR> list [ w3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 