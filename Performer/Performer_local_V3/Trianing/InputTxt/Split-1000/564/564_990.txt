 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o0 , String d6 , String N6 , String M , String B8 ) {  <CR> super ( o0 , d6 , N6 , M , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X6 , String p6 , String f9 , String S4 , String T3 ) {  <CR> super ( X6 , p6 , f9 , S4 , T3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] T9 ) {  <CR> Evaluation q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y1 = new Envelop ( "Taipei" , "Kaohsiung" , q6 ) ;  <CR> Y1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String m7 , String y6 , Evaluation n2 ) {  <CR> this . senderAddr = m7 ;  <CR> this . receiverAddr = y6 ;  <CR> this . letter = n2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String D3 , String I3 , String W1 , String Z8 , String M0 ) {  <CR> this . title = D3 ;  <CR> this . receiver = I3 ;  <CR> this . content = W1 ;  <CR> this . sender = Z8 ;  <CR> this . date = M0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] k7 ) {  <CR> int N7 ;  <CR> for ( N7 = list . length - 1 ; N7 >= 0 ; N7 -- ) {  <CR> int j3 = N7 ;  <CR> Letter n = new Letter ( N7 ) ;  <CR> Letter A1 = new Letter ( j3 - 1 ) ;  <CR> if ( n . compareTo ( A1 ) == 1 )  <CR> n . display ( N7 ) ;  <CR> }  <CR> }  <CR> Letter ( int E2 ) {  <CR> this . x = E2 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int N7 ) {  <CR> list [ N7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object v3 ) {  <CR> Letter z4 = ( Letter ) v3 ;  <CR> if ( this . x > z4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 