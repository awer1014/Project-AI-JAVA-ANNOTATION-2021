 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y8 , String H , String B1 , String R3 , String Q5 ) {  <CR> super ( y8 , H , B1 , R3 , Q5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G4 , String s7 , String m1 , String e7 , String P0 ) {  <CR> super ( G4 , s7 , m1 , e7 , P0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String R , String j4 , Evaluation n6 ) {  <CR> this . senderAddr = R ;  <CR> this . receiverAddr = j4 ;  <CR> this . letter = n6 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] i8 ) {  <CR> Evaluation k5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q8 = new Envelop ( "Taipei" , "Kaohsiung" , k5 ) ;  <CR> q8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String d3 , String z , String K5 , String L , String g2 ) {  <CR> this . title = d3 ;  <CR> this . receiver = z ;  <CR> this . content = K5 ;  <CR> this . sender = L ;  <CR> this . date = g2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int D0 ) {  <CR> this . x = D0 ;  <CR> }  <CR> public int compareTo ( Object O ) {  <CR> Letter s8 = ( Letter ) O ;  <CR> if ( this . x > s8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] G3 ) {  <CR> int w0 ;  <CR> for ( w0 = list . length - 1 ; w0 >= 0 ; w0 -- ) {  <CR> int H6 = w0 ;  <CR> Letter n4 = new Letter ( w0 ) ;  <CR> Letter j8 = new Letter ( H6 - 1 ) ;  <CR> if ( n4 . compareTo ( j8 ) == 1 )  <CR> n4 . display ( w0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int w0 ) {  <CR> list [ w0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 