 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t3 , String e8 , String E5 , String c0 , String s ) {  <CR> super ( t3 , e8 , E5 , c0 , s ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T6 , String G3 , String B7 , String J0 , String p0 ) {  <CR> super ( T6 , G3 , B7 , J0 , p0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] i1 ) {  <CR> Evaluation V9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M3 = new Envelop ( "Taipei" , "Kaohsiung" , V9 ) ;  <CR> M3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String n1 , String D3 , Evaluation x6 ) {  <CR> this . senderAddr = n1 ;  <CR> this . receiverAddr = D3 ;  <CR> this . letter = x6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String B0 , String d2 , String i2 , String w9 , String D ) {  <CR> this . title = B0 ;  <CR> this . receiver = d2 ;  <CR> this . content = i2 ;  <CR> this . sender = w9 ;  <CR> this . date = D ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object K0 ) {  <CR> Letter k4 = ( Letter ) K0 ;  <CR> if ( this . x > k4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int P0 ) {  <CR> list [ P0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int g1 ) {  <CR> this . x = g1 ;  <CR> }  <CR> public static void main ( String [ ] s ) {  <CR> int P0 ;  <CR> for ( P0 = list . length - 1 ; P0 >= 0 ; P0 -- ) {  <CR> int j9 = P0 ;  <CR> Letter I3 = new Letter ( P0 ) ;  <CR> Letter G6 = new Letter ( j9 - 1 ) ;  <CR> if ( I3 . compareTo ( G6 ) == 1 )  <CR> I3 . display ( P0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 