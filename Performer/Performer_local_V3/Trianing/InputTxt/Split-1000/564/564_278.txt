 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w8 , String F4 , String m0 , String L0 , String b2 ) {  <CR> super ( w8 , F4 , m0 , L0 , b2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u5 , String j1 , String G8 , String c4 , String h9 ) {  <CR> super ( u5 , j1 , G8 , c4 , h9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] W0 ) {  <CR> Evaluation s9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I4 = new Envelop ( "Taipei" , "Kaohsiung" , s9 ) ;  <CR> I4 . display ( ) ;  <CR> }  <CR> public Envelop ( String V , String Z4 , Evaluation F6 ) {  <CR> this . senderAddr = V ;  <CR> this . receiverAddr = Z4 ;  <CR> this . letter = F6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String k7 , String e , String p7 , String s5 , String y8 ) {  <CR> this . title = k7 ;  <CR> this . receiver = e ;  <CR> this . content = p7 ;  <CR> this . sender = s5 ;  <CR> this . date = y8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int L7 ) {  <CR> list [ L7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o7 ) {  <CR> int L7 ;  <CR> for ( L7 = list . length - 1 ; L7 >= 0 ; L7 -- ) {  <CR> int h7 = L7 ;  <CR> Letter d = new Letter ( L7 ) ;  <CR> Letter H2 = new Letter ( h7 - 1 ) ;  <CR> if ( d . compareTo ( H2 ) == 1 )  <CR> d . display ( L7 ) ;  <CR> }  <CR> }  <CR> Letter ( int s9 ) {  <CR> this . x = s9 ;  <CR> }  <CR> public int compareTo ( Object S7 ) {  <CR> Letter W5 = ( Letter ) S7 ;  <CR> if ( this . x > W5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 