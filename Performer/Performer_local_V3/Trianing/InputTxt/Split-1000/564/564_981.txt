 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String w3 , String J9 , String M6 , String Q1 , String r0 ) {  <CR> super ( w3 , J9 , M6 , Q1 , r0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h6 , String w6 , String r3 , String R1 , String N4 ) {  <CR> super ( h6 , w6 , r3 , R1 , N4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] t0 ) {  <CR> Evaluation J4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G5 = new Envelop ( "Taipei" , "Kaohsiung" , J4 ) ;  <CR> G5 . display ( ) ;  <CR> }  <CR> public Envelop ( String s8 , String X6 , Evaluation m5 ) {  <CR> this . senderAddr = s8 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = m5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String V8 , String g1 , String m1 , String j4 , String J4 ) {  <CR> this . title = V8 ;  <CR> this . receiver = g1 ;  <CR> this . content = m1 ;  <CR> this . sender = j4 ;  <CR> this . date = J4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object B5 ) {  <CR> Letter a1 = ( Letter ) B5 ;  <CR> if ( this . x > a1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int b ) {  <CR> list [ b ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b7 ) {  <CR> int b ;  <CR> for ( b = list . length - 1 ; b >= 0 ; b -- ) {  <CR> int d8 = b ;  <CR> Letter L5 = new Letter ( b ) ;  <CR> Letter O6 = new Letter ( d8 - 1 ) ;  <CR> if ( L5 . compareTo ( O6 ) == 1 )  <CR> L5 . display ( b ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int i0 ) {  <CR> this . x = i0 ;  <CR> }  <CR> }  <CR>  <EOC> 