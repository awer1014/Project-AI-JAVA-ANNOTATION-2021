 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y9 , String e8 , String t7 , String i8 , String n5 ) {  <CR> super ( y9 , e8 , t7 , i8 , n5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f7 , String X5 , String w6 , String x5 , String o9 ) {  <CR> super ( f7 , X5 , w6 , x5 , o9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String D7 , String H5 , Evaluation L9 ) {  <CR> this . senderAddr = D7 ;  <CR> this . receiverAddr = H5 ;  <CR> this . letter = L9 ;  <CR> }  <CR> public static void main ( String [ ] e9 ) {  <CR> Evaluation B = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U1 = new Envelop ( "Taipei" , "Kaohsiung" , B ) ;  <CR> U1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String w4 , String S6 , String V , String A8 , String q ) {  <CR> this . title = w4 ;  <CR> this . receiver = S6 ;  <CR> this . content = V ;  <CR> this . sender = A8 ;  <CR> this . date = q ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object q7 ) {  <CR> Letter o1 = ( Letter ) q7 ;  <CR> if ( this . x > o1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] E ) {  <CR> int P1 ;  <CR> for ( P1 = list . length - 1 ; P1 >= 0 ; P1 -- ) {  <CR> int w6 = P1 ;  <CR> Letter H9 = new Letter ( P1 ) ;  <CR> Letter j0 = new Letter ( w6 - 1 ) ;  <CR> if ( H9 . compareTo ( j0 ) == 1 )  <CR> H9 . display ( P1 ) ;  <CR> }  <CR> }  <CR> Letter ( int M5 ) {  <CR> this . x = M5 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P1 ) {  <CR> list [ P1 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 