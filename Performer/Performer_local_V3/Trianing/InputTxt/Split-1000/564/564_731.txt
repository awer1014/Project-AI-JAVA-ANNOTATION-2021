 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i2 , String U1 , String Y8 , String U , String l4 ) {  <CR> super ( i2 , U1 , Y8 , U , l4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String a9 , String x7 , String L0 , String e9 , String i8 ) {  <CR> super ( a9 , x7 , L0 , e9 , i8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] d3 ) {  <CR> Evaluation D6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e9 = new Envelop ( "Taipei" , "Kaohsiung" , D6 ) ;  <CR> e9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String i2 , String A , Evaluation y2 ) {  <CR> this . senderAddr = i2 ;  <CR> this . receiverAddr = A ;  <CR> this . letter = y2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String H8 , String A3 , String Y5 , String g , String Z3 ) {  <CR> this . title = H8 ;  <CR> this . receiver = A3 ;  <CR> this . content = Y5 ;  <CR> this . sender = g ;  <CR> this . date = Z3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int u7 ) {  <CR> list [ u7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object s ) {  <CR> Letter X7 = ( Letter ) s ;  <CR> if ( this . x > X7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] v7 ) {  <CR> int u7 ;  <CR> for ( u7 = list . length - 1 ; u7 >= 0 ; u7 -- ) {  <CR> int u4 = u7 ;  <CR> Letter Y4 = new Letter ( u7 ) ;  <CR> Letter V = new Letter ( u4 - 1 ) ;  <CR> if ( Y4 . compareTo ( V ) == 1 )  <CR> Y4 . display ( u7 ) ;  <CR> }  <CR> }  <CR> Letter ( int E7 ) {  <CR> this . x = E7 ;  <CR> }  <CR> }  <CR>  <EOC> 