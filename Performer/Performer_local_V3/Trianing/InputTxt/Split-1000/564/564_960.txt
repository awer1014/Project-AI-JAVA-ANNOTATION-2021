 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y8 , String X0 , String N0 , String g3 , String G2 ) {  <CR> super ( Y8 , X0 , N0 , g3 , G2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String P3 , String e7 , String Z1 , String Z3 , String W4 ) {  <CR> super ( P3 , e7 , Z1 , Z3 , W4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] o5 ) {  <CR> Evaluation g7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c2 = new Envelop ( "Taipei" , "Kaohsiung" , g7 ) ;  <CR> c2 . display ( ) ;  <CR> }  <CR> public Envelop ( String x3 , String d4 , Evaluation Q3 ) {  <CR> this . senderAddr = x3 ;  <CR> this . receiverAddr = d4 ;  <CR> this . letter = Q3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String F1 , String Y9 , String d , String n0 , String x9 ) {  <CR> this . title = F1 ;  <CR> this . receiver = Y9 ;  <CR> this . content = d ;  <CR> this . sender = n0 ;  <CR> this . date = x9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int F6 ) {  <CR> list [ F6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] M9 ) {  <CR> int F6 ;  <CR> for ( F6 = list . length - 1 ; F6 >= 0 ; F6 -- ) {  <CR> int u8 = F6 ;  <CR> Letter P2 = new Letter ( F6 ) ;  <CR> Letter F1 = new Letter ( u8 - 1 ) ;  <CR> if ( P2 . compareTo ( F1 ) == 1 )  <CR> P2 . display ( F6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object m6 ) {  <CR> Letter Y6 = ( Letter ) m6 ;  <CR> if ( this . x > Y6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int m9 ) {  <CR> this . x = m9 ;  <CR> }  <CR> }  <CR>  <EOC> 