 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y , String u2 , String y4 , String J0 , String m3 ) {  <CR> super ( y , u2 , y4 , J0 , m3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String m , String o1 , String b6 , String u7 , String v2 ) {  <CR> super ( m , o1 , b6 , u7 , v2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g6 ) {  <CR> Evaluation S0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T3 = new Envelop ( "Taipei" , "Kaohsiung" , S0 ) ;  <CR> T3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String q9 , String h3 , Evaluation b3 ) {  <CR> this . senderAddr = q9 ;  <CR> this . receiverAddr = h3 ;  <CR> this . letter = b3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String k6 , String E8 , String I7 , String I5 , String Q0 ) {  <CR> this . title = k6 ;  <CR> this . receiver = E8 ;  <CR> this . content = I7 ;  <CR> this . sender = I5 ;  <CR> this . date = Q0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object h8 ) {  <CR> Letter x3 = ( Letter ) h8 ;  <CR> if ( this . x > x3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int N1 ) {  <CR> list [ N1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k9 ) {  <CR> int N1 ;  <CR> for ( N1 = list . length - 1 ; N1 >= 0 ; N1 -- ) {  <CR> int A5 = N1 ;  <CR> Letter f7 = new Letter ( N1 ) ;  <CR> Letter V0 = new Letter ( A5 - 1 ) ;  <CR> if ( f7 . compareTo ( V0 ) == 1 )  <CR> f7 . display ( N1 ) ;  <CR> }  <CR> }  <CR> Letter ( int t8 ) {  <CR> this . x = t8 ;  <CR> }  <CR> }  <CR>  <EOC> 