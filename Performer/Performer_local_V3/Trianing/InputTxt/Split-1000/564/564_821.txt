 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o1 , String Z9 , String X2 , String n1 , String h8 ) {  <CR> super ( o1 , Z9 , X2 , n1 , h8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z8 , String G4 , String K6 , String j1 , String D5 ) {  <CR> super ( z8 , G4 , K6 , j1 , D5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] X1 ) {  <CR> Evaluation E9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K9 = new Envelop ( "Taipei" , "Kaohsiung" , E9 ) ;  <CR> K9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String r8 , String v7 , Evaluation Z3 ) {  <CR> this . senderAddr = r8 ;  <CR> this . receiverAddr = v7 ;  <CR> this . letter = Z3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String C , String b2 , String V0 , String l8 , String Z3 ) {  <CR> this . title = C ;  <CR> this . receiver = b2 ;  <CR> this . content = V0 ;  <CR> this . sender = l8 ;  <CR> this . date = Z3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] h0 ) {  <CR> int U7 ;  <CR> for ( U7 = list . length - 1 ; U7 >= 0 ; U7 -- ) {  <CR> int E6 = U7 ;  <CR> Letter Z9 = new Letter ( U7 ) ;  <CR> Letter c9 = new Letter ( E6 - 1 ) ;  <CR> if ( Z9 . compareTo ( c9 ) == 1 )  <CR> Z9 . display ( U7 ) ;  <CR> }  <CR> }  <CR> public void display ( int U7 ) {  <CR> list [ U7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object T7 ) {  <CR> Letter s0 = ( Letter ) T7 ;  <CR> if ( this . x > s0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int G4 ) {  <CR> this . x = G4 ;  <CR> }  <CR> }  <CR>  <EOC> 