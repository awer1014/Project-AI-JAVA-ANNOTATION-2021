 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b3 , String c8 , String y1 , String o8 , String h4 ) {  <CR> super ( b3 , c8 , y1 , o8 , h4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K7 , String a1 , String D , String v8 , String T6 ) {  <CR> super ( K7 , a1 , D , v8 , T6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String G8 , String B8 , Evaluation j ) {  <CR> this . senderAddr = G8 ;  <CR> this . receiverAddr = B8 ;  <CR> this . letter = j ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] W3 ) {  <CR> Evaluation R7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g4 = new Envelop ( "Taipei" , "Kaohsiung" , R7 ) ;  <CR> g4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String X8 , String Q4 , String l5 , String q , String j0 ) {  <CR> this . title = X8 ;  <CR> this . receiver = Q4 ;  <CR> this . content = l5 ;  <CR> this . sender = q ;  <CR> this . date = j0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] q8 ) {  <CR> int A8 ;  <CR> for ( A8 = list . length - 1 ; A8 >= 0 ; A8 -- ) {  <CR> int P7 = A8 ;  <CR> Letter t7 = new Letter ( A8 ) ;  <CR> Letter e8 = new Letter ( P7 - 1 ) ;  <CR> if ( t7 . compareTo ( e8 ) == 1 )  <CR> t7 . display ( A8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object G0 ) {  <CR> Letter x6 = ( Letter ) G0 ;  <CR> if ( this . x > x6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Q1 ) {  <CR> this . x = Q1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int A8 ) {  <CR> list [ A8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 