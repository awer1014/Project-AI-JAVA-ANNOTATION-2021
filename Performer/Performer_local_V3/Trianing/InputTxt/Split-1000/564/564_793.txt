 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M5 , String p4 , String f7 , String L9 , String d4 ) {  <CR> super ( M5 , p4 , f7 , L9 , d4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S7 , String i , String L8 , String P3 , String A ) {  <CR> super ( S7 , i , L8 , P3 , A ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] N7 ) {  <CR> Evaluation F0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K7 = new Envelop ( "Taipei" , "Kaohsiung" , F0 ) ;  <CR> K7 . display ( ) ;  <CR> }  <CR> public Envelop ( String S9 , String k1 , Evaluation I2 ) {  <CR> this . senderAddr = S9 ;  <CR> this . receiverAddr = k1 ;  <CR> this . letter = I2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String e4 , String B8 , String G1 , String W8 , String z6 ) {  <CR> this . title = e4 ;  <CR> this . receiver = B8 ;  <CR> this . content = G1 ;  <CR> this . sender = W8 ;  <CR> this . date = z6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object N ) {  <CR> Letter F1 = ( Letter ) N ;  <CR> if ( this . x > F1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int T8 ) {  <CR> list [ T8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int K8 ) {  <CR> this . x = K8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] T7 ) {  <CR> int T8 ;  <CR> for ( T8 = list . length - 1 ; T8 >= 0 ; T8 -- ) {  <CR> int s7 = T8 ;  <CR> Letter O2 = new Letter ( T8 ) ;  <CR> Letter b = new Letter ( s7 - 1 ) ;  <CR> if ( O2 . compareTo ( b ) == 1 )  <CR> O2 . display ( T8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 