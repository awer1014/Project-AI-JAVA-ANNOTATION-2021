 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d4 , String p1 , String i7 , String g5 , String W1 ) {  <CR> super ( d4 , p1 , i7 , g5 , W1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String k4 , String s3 , String d7 , String V4 , String w1 ) {  <CR> super ( k4 , s3 , d7 , V4 , w1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] E0 ) {  <CR> Evaluation N0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X4 = new Envelop ( "Taipei" , "Kaohsiung" , N0 ) ;  <CR> X4 . display ( ) ;  <CR> }  <CR> public Envelop ( String l1 , String p9 , Evaluation X7 ) {  <CR> this . senderAddr = l1 ;  <CR> this . receiverAddr = p9 ;  <CR> this . letter = X7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String r2 , String I2 , String U6 , String K1 , String E9 ) {  <CR> this . title = r2 ;  <CR> this . receiver = I2 ;  <CR> this . content = U6 ;  <CR> this . sender = K1 ;  <CR> this . date = E9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int E4 ) {  <CR> this . x = E4 ;  <CR> }  <CR> public void display ( int R7 ) {  <CR> list [ R7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object K ) {  <CR> Letter K5 = ( Letter ) K ;  <CR> if ( this . x > K5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] W2 ) {  <CR> int R7 ;  <CR> for ( R7 = list . length - 1 ; R7 >= 0 ; R7 -- ) {  <CR> int L6 = R7 ;  <CR> Letter m6 = new Letter ( R7 ) ;  <CR> Letter C9 = new Letter ( L6 - 1 ) ;  <CR> if ( m6 . compareTo ( C9 ) == 1 )  <CR> m6 . display ( R7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 