 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k1 , String U2 , String X0 , String s7 , String N4 ) {  <CR> super ( k1 , U2 , X0 , s7 , N4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w6 , String a7 , String d0 , String N1 , String b3 ) {  <CR> super ( w6 , a7 , d0 , N1 , b3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m ) {  <CR> Evaluation R = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P8 = new Envelop ( "Taipei" , "Kaohsiung" , R ) ;  <CR> P8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String f2 , String o0 , Evaluation b0 ) {  <CR> this . senderAddr = f2 ;  <CR> this . receiverAddr = o0 ;  <CR> this . letter = b0 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String m6 , String B0 , String x5 , String C , String G4 ) {  <CR> this . title = m6 ;  <CR> this . receiver = B0 ;  <CR> this . content = x5 ;  <CR> this . sender = C ;  <CR> this . date = G4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int S3 ) {  <CR> this . x = S3 ;  <CR> }  <CR> public int compareTo ( Object O1 ) {  <CR> Letter N0 = ( Letter ) O1 ;  <CR> if ( this . x > N0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int R4 ) {  <CR> list [ R4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] V0 ) {  <CR> int R4 ;  <CR> for ( R4 = list . length - 1 ; R4 >= 0 ; R4 -- ) {  <CR> int t3 = R4 ;  <CR> Letter H7 = new Letter ( R4 ) ;  <CR> Letter M = new Letter ( t3 - 1 ) ;  <CR> if ( H7 . compareTo ( M ) == 1 )  <CR> H7 . display ( R4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 