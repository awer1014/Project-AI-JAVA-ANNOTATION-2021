 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S6 , String q9 , String l6 , String x8 , String R3 ) {  <CR> super ( S6 , q9 , l6 , x8 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r1 , String m , String W0 , String G9 , String h2 ) {  <CR> super ( r1 , m , W0 , G9 , h2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] m3 ) {  <CR> Evaluation D5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f7 = new Envelop ( "Taipei" , "Kaohsiung" , D5 ) ;  <CR> f7 . display ( ) ;  <CR> }  <CR> public Envelop ( String Y8 , String r4 , Evaluation f0 ) {  <CR> this . senderAddr = Y8 ;  <CR> this . receiverAddr = r4 ;  <CR> this . letter = f0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String L6 , String I4 , String a3 , String P7 , String b8 ) {  <CR> this . title = L6 ;  <CR> this . receiver = I4 ;  <CR> this . content = a3 ;  <CR> this . sender = P7 ;  <CR> this . date = b8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object U8 ) {  <CR> Letter c = ( Letter ) U8 ;  <CR> if ( this . x > c . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int b ) {  <CR> list [ b ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int P6 ) {  <CR> this . x = P6 ;  <CR> }  <CR> public static void main ( String [ ] f7 ) {  <CR> int b ;  <CR> for ( b = list . length - 1 ; b >= 0 ; b -- ) {  <CR> int z5 = b ;  <CR> Letter j9 = new Letter ( b ) ;  <CR> Letter h7 = new Letter ( z5 - 1 ) ;  <CR> if ( j9 . compareTo ( h7 ) == 1 )  <CR> j9 . display ( b ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 