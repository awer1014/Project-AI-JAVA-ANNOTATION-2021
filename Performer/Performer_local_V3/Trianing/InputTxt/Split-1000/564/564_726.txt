 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F8 , String Y0 , String I4 , String t6 , String K4 ) {  <CR> super ( F8 , Y0 , I4 , t6 , K4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z0 , String Q0 , String Z5 , String l6 , String i0 ) {  <CR> super ( Z0 , Q0 , Z5 , l6 , i0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m0 ) {  <CR> Evaluation O6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C3 = new Envelop ( "Taipei" , "Kaohsiung" , O6 ) ;  <CR> C3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String f3 , String X3 , Evaluation D8 ) {  <CR> this . senderAddr = f3 ;  <CR> this . receiverAddr = X3 ;  <CR> this . letter = D8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String f9 , String z7 , String Y5 , String J0 , String t6 ) {  <CR> this . title = f9 ;  <CR> this . receiver = z7 ;  <CR> this . content = Y5 ;  <CR> this . sender = J0 ;  <CR> this . date = t6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object X3 ) {  <CR> Letter J6 = ( Letter ) X3 ;  <CR> if ( this . x > J6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int i1 ) {  <CR> list [ i1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C ) {  <CR> int i1 ;  <CR> for ( i1 = list . length - 1 ; i1 >= 0 ; i1 -- ) {  <CR> int T3 = i1 ;  <CR> Letter k9 = new Letter ( i1 ) ;  <CR> Letter o4 = new Letter ( T3 - 1 ) ;  <CR> if ( k9 . compareTo ( o4 ) == 1 )  <CR> k9 . display ( i1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int a6 ) {  <CR> this . x = a6 ;  <CR> }  <CR> }  <CR>  <EOC> 