 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r9 , String M7 , String w , String u9 , String M0 ) {  <CR> super ( r9 , M7 , w , u9 , M0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g1 , String a3 , String W6 , String M5 , String e5 ) {  <CR> super ( g1 , a3 , W6 , M5 , e5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] D7 ) {  <CR> Evaluation A2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M9 = new Envelop ( "Taipei" , "Kaohsiung" , A2 ) ;  <CR> M9 . display ( ) ;  <CR> }  <CR> public Envelop ( String w0 , String u4 , Evaluation S9 ) {  <CR> this . senderAddr = w0 ;  <CR> this . receiverAddr = u4 ;  <CR> this . letter = S9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String l9 , String H5 , String Q2 , String D9 , String z2 ) {  <CR> this . title = l9 ;  <CR> this . receiver = H5 ;  <CR> this . content = Q2 ;  <CR> this . sender = D9 ;  <CR> this . date = z2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int F ) {  <CR> this . x = F ;  <CR> }  <CR> public void display ( int p2 ) {  <CR> list [ p2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] P8 ) {  <CR> int p2 ;  <CR> for ( p2 = list . length - 1 ; p2 >= 0 ; p2 -- ) {  <CR> int b6 = p2 ;  <CR> Letter z7 = new Letter ( p2 ) ;  <CR> Letter V3 = new Letter ( b6 - 1 ) ;  <CR> if ( z7 . compareTo ( V3 ) == 1 )  <CR> z7 . display ( p2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object w7 ) {  <CR> Letter Y2 = ( Letter ) w7 ;  <CR> if ( this . x > Y2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 