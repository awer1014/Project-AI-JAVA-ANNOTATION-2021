 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String F3 , String u7 , String w8 , String U6 , String a5 ) {  <CR> super ( F3 , u7 , w8 , U6 , a5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B1 , String K9 , String x3 , String I5 , String y0 ) {  <CR> super ( B1 , K9 , x3 , I5 , y0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String g1 , String r4 , Evaluation l1 ) {  <CR> this . senderAddr = g1 ;  <CR> this . receiverAddr = r4 ;  <CR> this . letter = l1 ;  <CR> }  <CR> public static void main ( String [ ] B2 ) {  <CR> Evaluation y3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P7 = new Envelop ( "Taipei" , "Kaohsiung" , y3 ) ;  <CR> P7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String f1 , String B7 , String C8 , String r8 , String J5 ) {  <CR> this . title = f1 ;  <CR> this . receiver = B7 ;  <CR> this . content = C8 ;  <CR> this . sender = r8 ;  <CR> this . date = J5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object L5 ) {  <CR> Letter i9 = ( Letter ) L5 ;  <CR> if ( this . x > i9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int O5 ) {  <CR> list [ O5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] N4 ) {  <CR> int O5 ;  <CR> for ( O5 = list . length - 1 ; O5 >= 0 ; O5 -- ) {  <CR> int m7 = O5 ;  <CR> Letter p7 = new Letter ( O5 ) ;  <CR> Letter l7 = new Letter ( m7 - 1 ) ;  <CR> if ( p7 . compareTo ( l7 ) == 1 )  <CR> p7 . display ( O5 ) ;  <CR> }  <CR> }  <CR> Letter ( int T1 ) {  <CR> this . x = T1 ;  <CR> }  <CR> }  <CR>  <EOC> 