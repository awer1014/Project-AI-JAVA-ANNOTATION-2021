 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T1 , String z , String c6 , String C0 , String S4 ) {  <CR> super ( T1 , z , c6 , C0 , S4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t9 , String I2 , String e3 , String M , String T4 ) {  <CR> super ( t9 , I2 , e3 , M , T4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] R4 ) {  <CR> Evaluation y8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i9 = new Envelop ( "Taipei" , "Kaohsiung" , y8 ) ;  <CR> i9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String a2 , String V6 , Evaluation e0 ) {  <CR> this . senderAddr = a2 ;  <CR> this . receiverAddr = V6 ;  <CR> this . letter = e0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String e , String Z4 , String J5 , String r8 , String h8 ) {  <CR> this . title = e ;  <CR> this . receiver = Z4 ;  <CR> this . content = J5 ;  <CR> this . sender = r8 ;  <CR> this . date = h8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object k2 ) {  <CR> Letter U0 = ( Letter ) k2 ;  <CR> if ( this . x > U0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] g6 ) {  <CR> int V7 ;  <CR> for ( V7 = list . length - 1 ; V7 >= 0 ; V7 -- ) {  <CR> int B4 = V7 ;  <CR> Letter y8 = new Letter ( V7 ) ;  <CR> Letter C4 = new Letter ( B4 - 1 ) ;  <CR> if ( y8 . compareTo ( C4 ) == 1 )  <CR> y8 . display ( V7 ) ;  <CR> }  <CR> }  <CR> public void display ( int V7 ) {  <CR> list [ V7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int l9 ) {  <CR> this . x = l9 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 