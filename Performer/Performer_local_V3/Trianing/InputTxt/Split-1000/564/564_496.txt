 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O4 , String l0 , String n5 , String g7 , String q6 ) {  <CR> super ( O4 , l0 , n5 , g7 , q6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v4 , String i5 , String e2 , String l7 , String d5 ) {  <CR> super ( v4 , i5 , e2 , l7 , d5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String j2 , String L2 , Evaluation w9 ) {  <CR> this . senderAddr = j2 ;  <CR> this . receiverAddr = L2 ;  <CR> this . letter = w9 ;  <CR> }  <CR> public static void main ( String [ ] i0 ) {  <CR> Evaluation A4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q9 = new Envelop ( "Taipei" , "Kaohsiung" , A4 ) ;  <CR> q9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String y2 , String b1 , String P7 , String t3 , String p6 ) {  <CR> this . title = y2 ;  <CR> this . receiver = b1 ;  <CR> this . content = P7 ;  <CR> this . sender = t3 ;  <CR> this . date = p6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int E2 ) {  <CR> this . x = E2 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] c3 ) {  <CR> int j2 ;  <CR> for ( j2 = list . length - 1 ; j2 >= 0 ; j2 -- ) {  <CR> int y8 = j2 ;  <CR> Letter F3 = new Letter ( j2 ) ;  <CR> Letter x3 = new Letter ( y8 - 1 ) ;  <CR> if ( F3 . compareTo ( x3 ) == 1 )  <CR> F3 . display ( j2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object u ) {  <CR> Letter X7 = ( Letter ) u ;  <CR> if ( this . x > X7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int j2 ) {  <CR> list [ j2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 