 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l2 , String g7 , String H0 , String m4 , String W4 ) {  <CR> super ( l2 , g7 , H0 , m4 , W4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String r9 , String t7 , String f4 , String N6 , String v7 ) {  <CR> super ( r9 , t7 , f4 , N6 , v7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C6 ) {  <CR> Evaluation H6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A5 = new Envelop ( "Taipei" , "Kaohsiung" , H6 ) ;  <CR> A5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String h7 , String V3 , Evaluation S9 ) {  <CR> this . senderAddr = h7 ;  <CR> this . receiverAddr = V3 ;  <CR> this . letter = S9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String v9 , String V8 , String r9 , String l , String Z8 ) {  <CR> this . title = v9 ;  <CR> this . receiver = V8 ;  <CR> this . content = r9 ;  <CR> this . sender = l ;  <CR> this . date = Z8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int b6 ) {  <CR> list [ b6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object k1 ) {  <CR> Letter y8 = ( Letter ) k1 ;  <CR> if ( this . x > y8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> int b6 ;  <CR> for ( b6 = list . length - 1 ; b6 >= 0 ; b6 -- ) {  <CR> int w5 = b6 ;  <CR> Letter Y9 = new Letter ( b6 ) ;  <CR> Letter n0 = new Letter ( w5 - 1 ) ;  <CR> if ( Y9 . compareTo ( n0 ) == 1 )  <CR> Y9 . display ( b6 ) ;  <CR> }  <CR> }  <CR> Letter ( int B2 ) {  <CR> this . x = B2 ;  <CR> }  <CR> }  <CR>  <EOC> 