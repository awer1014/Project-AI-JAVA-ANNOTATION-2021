 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G6 , String W4 , String Q0 , String l2 , String B ) {  <CR> super ( G6 , W4 , Q0 , l2 , B ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C3 , String D4 , String s9 , String J1 , String t7 ) {  <CR> super ( C3 , D4 , s9 , J1 , t7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] c0 ) {  <CR> Evaluation h = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f9 = new Envelop ( "Taipei" , "Kaohsiung" , h ) ;  <CR> f9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String J9 , String C , Evaluation q9 ) {  <CR> this . senderAddr = J9 ;  <CR> this . receiverAddr = C ;  <CR> this . letter = q9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String c7 , String e4 , String W0 , String y4 , String h5 ) {  <CR> this . title = c7 ;  <CR> this . receiver = e4 ;  <CR> this . content = W0 ;  <CR> this . sender = y4 ;  <CR> this . date = h5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int G7 ) {  <CR> this . x = G7 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int M2 ) {  <CR> list [ M2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object O8 ) {  <CR> Letter m8 = ( Letter ) O8 ;  <CR> if ( this . x > m8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] D2 ) {  <CR> int M2 ;  <CR> for ( M2 = list . length - 1 ; M2 >= 0 ; M2 -- ) {  <CR> int y4 = M2 ;  <CR> Letter J4 = new Letter ( M2 ) ;  <CR> Letter t2 = new Letter ( y4 - 1 ) ;  <CR> if ( J4 . compareTo ( t2 ) == 1 )  <CR> J4 . display ( M2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 