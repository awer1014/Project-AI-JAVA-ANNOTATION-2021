 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String S9 , String I8 , String S5 , String d9 , String U1 ) {  <CR> super ( S9 , I8 , S5 , d9 , U1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v6 , String c5 , String a8 , String A5 , String J3 ) {  <CR> super ( v6 , c5 , a8 , A5 , J3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B8 ) {  <CR> Evaluation N5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w = new Envelop ( "Taipei" , "Kaohsiung" , N5 ) ;  <CR> w . display ( ) ;  <CR> }  <CR> public Envelop ( String G , String F9 , Evaluation B1 ) {  <CR> this . senderAddr = G ;  <CR> this . receiverAddr = F9 ;  <CR> this . letter = B1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String g5 , String l8 , String J5 , String X5 , String P3 ) {  <CR> this . title = g5 ;  <CR> this . receiver = l8 ;  <CR> this . content = J5 ;  <CR> this . sender = X5 ;  <CR> this . date = P3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t ) {  <CR> this . x = t ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object Q9 ) {  <CR> Letter k1 = ( Letter ) Q9 ;  <CR> if ( this . x > k1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int m0 ) {  <CR> list [ m0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p1 ) {  <CR> int m0 ;  <CR> for ( m0 = list . length - 1 ; m0 >= 0 ; m0 -- ) {  <CR> int i1 = m0 ;  <CR> Letter j3 = new Letter ( m0 ) ;  <CR> Letter V6 = new Letter ( i1 - 1 ) ;  <CR> if ( j3 . compareTo ( V6 ) == 1 )  <CR> j3 . display ( m0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 