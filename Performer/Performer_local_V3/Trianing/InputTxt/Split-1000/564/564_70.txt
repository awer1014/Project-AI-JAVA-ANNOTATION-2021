 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String r4 , String H0 , String o6 , String o2 , String K6 ) {  <CR> super ( r4 , H0 , o6 , o2 , K6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u9 , String p5 , String A4 , String y , String u7 ) {  <CR> super ( u9 , p5 , A4 , y , u7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y ) {  <CR> Evaluation L2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y6 = new Envelop ( "Taipei" , "Kaohsiung" , L2 ) ;  <CR> y6 . display ( ) ;  <CR> }  <CR> public Envelop ( String c9 , String j6 , Evaluation V0 ) {  <CR> this . senderAddr = c9 ;  <CR> this . receiverAddr = j6 ;  <CR> this . letter = V0 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String W1 , String L2 , String k6 , String P1 , String s3 ) {  <CR> this . title = W1 ;  <CR> this . receiver = L2 ;  <CR> this . content = k6 ;  <CR> this . sender = P1 ;  <CR> this . date = s3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object S4 ) {  <CR> Letter c8 = ( Letter ) S4 ;  <CR> if ( this . x > c8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int M4 ) {  <CR> this . x = M4 ;  <CR> }  <CR> public static void main ( String [ ] H8 ) {  <CR> int d8 ;  <CR> for ( d8 = list . length - 1 ; d8 >= 0 ; d8 -- ) {  <CR> int m5 = d8 ;  <CR> Letter P1 = new Letter ( d8 ) ;  <CR> Letter Q0 = new Letter ( m5 - 1 ) ;  <CR> if ( P1 . compareTo ( Q0 ) == 1 )  <CR> P1 . display ( d8 ) ;  <CR> }  <CR> }  <CR> public void display ( int d8 ) {  <CR> list [ d8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 