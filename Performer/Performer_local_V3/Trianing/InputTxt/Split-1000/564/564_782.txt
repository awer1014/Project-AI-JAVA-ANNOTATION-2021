 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String r2 , String M9 , String K1 , String G3 , String h4 ) {  <CR> super ( r2 , M9 , K1 , G3 , h4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R5 , String P9 , String z , String k4 , String r4 ) {  <CR> super ( R5 , P9 , z , k4 , r4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String f9 , String R3 , Evaluation E6 ) {  <CR> this . senderAddr = f9 ;  <CR> this . receiverAddr = R3 ;  <CR> this . letter = E6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D5 ) {  <CR> Evaluation V7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z0 = new Envelop ( "Taipei" , "Kaohsiung" , V7 ) ;  <CR> z0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String P7 , String t9 , String R7 , String X5 , String T8 ) {  <CR> this . title = P7 ;  <CR> this . receiver = t9 ;  <CR> this . content = R7 ;  <CR> this . sender = X5 ;  <CR> this . date = T8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Z0 ) {  <CR> list [ Z0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int Z7 ) {  <CR> this . x = Z7 ;  <CR> }  <CR> public int compareTo ( Object J5 ) {  <CR> Letter j2 = ( Letter ) J5 ;  <CR> if ( this . x > j2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] W4 ) {  <CR> int Z0 ;  <CR> for ( Z0 = list . length - 1 ; Z0 >= 0 ; Z0 -- ) {  <CR> int v1 = Z0 ;  <CR> Letter o1 = new Letter ( Z0 ) ;  <CR> Letter S3 = new Letter ( v1 - 1 ) ;  <CR> if ( o1 . compareTo ( S3 ) == 1 )  <CR> o1 . display ( Z0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 