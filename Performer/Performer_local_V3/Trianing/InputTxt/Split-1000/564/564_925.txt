 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a5 , String K7 , String F9 , String I1 , String J2 ) {  <CR> super ( a5 , K7 , F9 , I1 , J2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R6 , String A8 , String s4 , String B1 , String g1 ) {  <CR> super ( R6 , A8 , s4 , B1 , g1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String h9 , String x6 , Evaluation A ) {  <CR> this . senderAddr = h9 ;  <CR> this . receiverAddr = x6 ;  <CR> this . letter = A ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] M9 ) {  <CR> Evaluation E7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v8 = new Envelop ( "Taipei" , "Kaohsiung" , E7 ) ;  <CR> v8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Y5 , String a4 , String Z0 , String r8 , String W8 ) {  <CR> this . title = Y5 ;  <CR> this . receiver = a4 ;  <CR> this . content = Z0 ;  <CR> this . sender = r8 ;  <CR> this . date = W8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object w2 ) {  <CR> Letter K1 = ( Letter ) w2 ;  <CR> if ( this . x > K1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] j5 ) {  <CR> int J2 ;  <CR> for ( J2 = list . length - 1 ; J2 >= 0 ; J2 -- ) {  <CR> int T9 = J2 ;  <CR> Letter J9 = new Letter ( J2 ) ;  <CR> Letter Z = new Letter ( T9 - 1 ) ;  <CR> if ( J9 . compareTo ( Z ) == 1 )  <CR> J9 . display ( J2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int J2 ) {  <CR> list [ J2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int H8 ) {  <CR> this . x = H8 ;  <CR> }  <CR> }  <CR>  <EOC> 