 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I9 , String L5 , String N7 , String s1 , String Z3 ) {  <CR> super ( I9 , L5 , N7 , s1 , Z3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y9 , String v , String x2 , String q2 , String a8 ) {  <CR> super ( y9 , v , x2 , q2 , a8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] e2 ) {  <CR> Evaluation I6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l6 = new Envelop ( "Taipei" , "Kaohsiung" , I6 ) ;  <CR> l6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String H7 , String P7 , Evaluation k6 ) {  <CR> this . senderAddr = H7 ;  <CR> this . receiverAddr = P7 ;  <CR> this . letter = k6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String t4 , String q9 , String L6 , String F1 , String T ) {  <CR> this . title = t4 ;  <CR> this . receiver = q9 ;  <CR> this . content = L6 ;  <CR> this . sender = F1 ;  <CR> this . date = T ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] I6 ) {  <CR> int B1 ;  <CR> for ( B1 = list . length - 1 ; B1 >= 0 ; B1 -- ) {  <CR> int p7 = B1 ;  <CR> Letter w = new Letter ( B1 ) ;  <CR> Letter l1 = new Letter ( p7 - 1 ) ;  <CR> if ( w . compareTo ( l1 ) == 1 )  <CR> w . display ( B1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int B1 ) {  <CR> list [ B1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int R2 ) {  <CR> this . x = R2 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object p9 ) {  <CR> Letter i1 = ( Letter ) p9 ;  <CR> if ( this . x > i1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 