 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a6 , String T2 , String R5 , String o5 , String b7 ) {  <CR> super ( a6 , T2 , R5 , o5 , b7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G , String d5 , String Q , String D7 , String l4 ) {  <CR> super ( G , d5 , Q , D7 , l4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O2 ) {  <CR> Evaluation r6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a6 = new Envelop ( "Taipei" , "Kaohsiung" , r6 ) ;  <CR> a6 . display ( ) ;  <CR> }  <CR> public Envelop ( String z2 , String X1 , Evaluation T3 ) {  <CR> this . senderAddr = z2 ;  <CR> this . receiverAddr = X1 ;  <CR> this . letter = T3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String M8 , String S8 , String J5 , String S4 , String M2 ) {  <CR> this . title = M8 ;  <CR> this . receiver = S8 ;  <CR> this . content = J5 ;  <CR> this . sender = S4 ;  <CR> this . date = M2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int X9 ) {  <CR> list [ X9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x0 ) {  <CR> int X9 ;  <CR> for ( X9 = list . length - 1 ; X9 >= 0 ; X9 -- ) {  <CR> int L6 = X9 ;  <CR> Letter X7 = new Letter ( X9 ) ;  <CR> Letter F3 = new Letter ( L6 - 1 ) ;  <CR> if ( X7 . compareTo ( F3 ) == 1 )  <CR> X7 . display ( X9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object a6 ) {  <CR> Letter D5 = ( Letter ) a6 ;  <CR> if ( this . x > D5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int H1 ) {  <CR> this . x = H1 ;  <CR> }  <CR> }  <CR>  <EOC> 