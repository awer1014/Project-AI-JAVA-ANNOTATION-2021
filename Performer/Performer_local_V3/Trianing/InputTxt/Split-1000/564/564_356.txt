 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y1 , String m0 , String k7 , String R6 , String s3 ) {  <CR> super ( y1 , m0 , k7 , R6 , s3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e , String y9 , String M1 , String o0 , String o6 ) {  <CR> super ( e , y9 , M1 , o0 , o6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String C4 , String r7 , Evaluation J7 ) {  <CR> this . senderAddr = C4 ;  <CR> this . receiverAddr = r7 ;  <CR> this . letter = J7 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] T3 ) {  <CR> Evaluation Z2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y0 = new Envelop ( "Taipei" , "Kaohsiung" , Z2 ) ;  <CR> y0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String G8 , String V0 , String P9 , String f6 , String g8 ) {  <CR> this . title = G8 ;  <CR> this . receiver = V0 ;  <CR> this . content = P9 ;  <CR> this . sender = f6 ;  <CR> this . date = g8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object p0 ) {  <CR> Letter U8 = ( Letter ) p0 ;  <CR> if ( this . x > U8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int Y5 ) {  <CR> this . x = Y5 ;  <CR> }  <CR> public static void main ( String [ ] P8 ) {  <CR> int F7 ;  <CR> for ( F7 = list . length - 1 ; F7 >= 0 ; F7 -- ) {  <CR> int F5 = F7 ;  <CR> Letter p8 = new Letter ( F7 ) ;  <CR> Letter V = new Letter ( F5 - 1 ) ;  <CR> if ( p8 . compareTo ( V ) == 1 )  <CR> p8 . display ( F7 ) ;  <CR> }  <CR> }  <CR> public void display ( int F7 ) {  <CR> list [ F7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 