 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z2 , String M1 , String y , String H6 , String P2 ) {  <CR> super ( z2 , M1 , y , H6 , P2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y9 , String X3 , String Q9 , String x9 , String N3 ) {  <CR> super ( Y9 , X3 , Q9 , x9 , N3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String d7 , String b5 , Evaluation q2 ) {  <CR> this . senderAddr = d7 ;  <CR> this . receiverAddr = b5 ;  <CR> this . letter = q2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g1 ) {  <CR> Evaluation F5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f8 = new Envelop ( "Taipei" , "Kaohsiung" , F5 ) ;  <CR> f8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String y2 , String z2 , String b1 , String g3 , String H6 ) {  <CR> this . title = y2 ;  <CR> this . receiver = z2 ;  <CR> this . content = b1 ;  <CR> this . sender = g3 ;  <CR> this . date = H6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int w3 ) {  <CR> this . x = w3 ;  <CR> }  <CR> public int compareTo ( Object f6 ) {  <CR> Letter V = ( Letter ) f6 ;  <CR> if ( this . x > V . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int o4 ) {  <CR> list [ o4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b ) {  <CR> int o4 ;  <CR> for ( o4 = list . length - 1 ; o4 >= 0 ; o4 -- ) {  <CR> int d9 = o4 ;  <CR> Letter C7 = new Letter ( o4 ) ;  <CR> Letter J = new Letter ( d9 - 1 ) ;  <CR> if ( C7 . compareTo ( J ) == 1 )  <CR> C7 . display ( o4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 