 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p4 , String u7 , String F3 , String N3 , String y4 ) {  <CR> super ( p4 , u7 , F3 , N3 , y4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String d9 , String p4 , String c7 , String y3 , String Z7 ) {  <CR> super ( d9 , p4 , c7 , y3 , Z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] S ) {  <CR> Evaluation w8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q8 = new Envelop ( "Taipei" , "Kaohsiung" , w8 ) ;  <CR> Q8 . display ( ) ;  <CR> }  <CR> public Envelop ( String w3 , String G3 , Evaluation n8 ) {  <CR> this . senderAddr = w3 ;  <CR> this . receiverAddr = G3 ;  <CR> this . letter = n8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String m9 , String u , String h4 , String T0 , String O9 ) {  <CR> this . title = m9 ;  <CR> this . receiver = u ;  <CR> this . content = h4 ;  <CR> this . sender = T0 ;  <CR> this . date = O9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int B2 ) {  <CR> this . x = B2 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] c5 ) {  <CR> int c0 ;  <CR> for ( c0 = list . length - 1 ; c0 >= 0 ; c0 -- ) {  <CR> int a5 = c0 ;  <CR> Letter T4 = new Letter ( c0 ) ;  <CR> Letter p8 = new Letter ( a5 - 1 ) ;  <CR> if ( T4 . compareTo ( p8 ) == 1 )  <CR> T4 . display ( c0 ) ;  <CR> }  <CR> }  <CR> public void display ( int c0 ) {  <CR> list [ c0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object G3 ) {  <CR> Letter z7 = ( Letter ) G3 ;  <CR> if ( this . x > z7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 