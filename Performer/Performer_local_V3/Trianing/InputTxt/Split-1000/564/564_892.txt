 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String g7 , String r , String y , String G2 , String F6 ) {  <CR> super ( g7 , r , y , G2 , F6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C6 , String H1 , String a7 , String R , String S0 ) {  <CR> super ( C6 , H1 , a7 , R , S0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] R8 ) {  <CR> Evaluation n5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I4 = new Envelop ( "Taipei" , "Kaohsiung" , n5 ) ;  <CR> I4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String Z5 , String f9 , Evaluation e5 ) {  <CR> this . senderAddr = Z5 ;  <CR> this . receiverAddr = f9 ;  <CR> this . letter = e5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String R8 , String I9 , String O3 , String g4 , String y0 ) {  <CR> this . title = R8 ;  <CR> this . receiver = I9 ;  <CR> this . content = O3 ;  <CR> this . sender = g4 ;  <CR> this . date = y0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int m7 ) {  <CR> this . x = m7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int Y7 ) {  <CR> list [ Y7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] T3 ) {  <CR> int Y7 ;  <CR> for ( Y7 = list . length - 1 ; Y7 >= 0 ; Y7 -- ) {  <CR> int r9 = Y7 ;  <CR> Letter M1 = new Letter ( Y7 ) ;  <CR> Letter w2 = new Letter ( r9 - 1 ) ;  <CR> if ( M1 . compareTo ( w2 ) == 1 )  <CR> M1 . display ( Y7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object D ) {  <CR> Letter f = ( Letter ) D ;  <CR> if ( this . x > f . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 