 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String f5 , String q5 , String Q3 , String g8 , String c3 ) {  <CR> super ( f5 , q5 , Q3 , g8 , c3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String p7 , String H5 , String p0 , String Q6 , String a9 ) {  <CR> super ( p7 , H5 , p0 , Q6 , a9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String y6 , String k9 , Evaluation y5 ) {  <CR> this . senderAddr = y6 ;  <CR> this . receiverAddr = k9 ;  <CR> this . letter = y5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] o8 ) {  <CR> Evaluation b3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U = new Envelop ( "Taipei" , "Kaohsiung" , b3 ) ;  <CR> U . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String M7 , String C5 , String f0 , String d5 , String X2 ) {  <CR> this . title = M7 ;  <CR> this . receiver = C5 ;  <CR> this . content = f0 ;  <CR> this . sender = d5 ;  <CR> this . date = X2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object g7 ) {  <CR> Letter c8 = ( Letter ) g7 ;  <CR> if ( this . x > c8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int M6 ) {  <CR> this . x = M6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int z4 ) {  <CR> list [ z4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] T0 ) {  <CR> int z4 ;  <CR> for ( z4 = list . length - 1 ; z4 >= 0 ; z4 -- ) {  <CR> int R0 = z4 ;  <CR> Letter C3 = new Letter ( z4 ) ;  <CR> Letter w2 = new Letter ( R0 - 1 ) ;  <CR> if ( C3 . compareTo ( w2 ) == 1 )  <CR> C3 . display ( z4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 