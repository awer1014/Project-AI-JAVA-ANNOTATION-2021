 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h2 , String V8 , String O3 , String I7 , String z5 ) {  <CR> super ( h2 , V8 , O3 , I7 , z5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K1 , String I4 , String K0 , String F9 , String W7 ) {  <CR> super ( K1 , I4 , K0 , F9 , W7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Q8 , String B4 , Evaluation d2 ) {  <CR> this . senderAddr = Q8 ;  <CR> this . receiverAddr = B4 ;  <CR> this . letter = d2 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k6 ) {  <CR> Evaluation g3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H1 = new Envelop ( "Taipei" , "Kaohsiung" , g3 ) ;  <CR> H1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String P2 , String p6 , String f6 , String B5 , String I9 ) {  <CR> this . title = P2 ;  <CR> this . receiver = p6 ;  <CR> this . content = f6 ;  <CR> this . sender = B5 ;  <CR> this . date = I9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int r4 ) {  <CR> this . x = r4 ;  <CR> }  <CR> public static void main ( String [ ] a0 ) {  <CR> int e3 ;  <CR> for ( e3 = list . length - 1 ; e3 >= 0 ; e3 -- ) {  <CR> int z3 = e3 ;  <CR> Letter s3 = new Letter ( e3 ) ;  <CR> Letter u4 = new Letter ( z3 - 1 ) ;  <CR> if ( s3 . compareTo ( u4 ) == 1 )  <CR> s3 . display ( e3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object a2 ) {  <CR> Letter g3 = ( Letter ) a2 ;  <CR> if ( this . x > g3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int e3 ) {  <CR> list [ e3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 