 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F7 , String C4 , String v3 , String N7 , String B5 ) {  <CR> super ( F7 , C4 , v3 , N7 , B5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K3 , String A1 , String S7 , String P6 , String z3 ) {  <CR> super ( K3 , A1 , S7 , P6 , z3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String A6 , String G9 , Evaluation O3 ) {  <CR> this . senderAddr = A6 ;  <CR> this . receiverAddr = G9 ;  <CR> this . letter = O3 ;  <CR> }  <CR> public static void main ( String [ ] b1 ) {  <CR> Evaluation A2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V1 = new Envelop ( "Taipei" , "Kaohsiung" , A2 ) ;  <CR> V1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String r1 , String q0 , String L0 , String y2 , String C1 ) {  <CR> this . title = r1 ;  <CR> this . receiver = q0 ;  <CR> this . content = L0 ;  <CR> this . sender = y2 ;  <CR> this . date = C1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int U5 ) {  <CR> this . x = U5 ;  <CR> }  <CR> public int compareTo ( Object v9 ) {  <CR> Letter D3 = ( Letter ) v9 ;  <CR> if ( this . x > D3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] H4 ) {  <CR> int r4 ;  <CR> for ( r4 = list . length - 1 ; r4 >= 0 ; r4 -- ) {  <CR> int j6 = r4 ;  <CR> Letter H7 = new Letter ( r4 ) ;  <CR> Letter N3 = new Letter ( j6 - 1 ) ;  <CR> if ( H7 . compareTo ( N3 ) == 1 )  <CR> H7 . display ( r4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int r4 ) {  <CR> list [ r4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 