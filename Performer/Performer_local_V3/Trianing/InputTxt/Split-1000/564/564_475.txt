 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String q4 , String i5 , String M8 , String L3 , String X6 ) {  <CR> super ( q4 , i5 , M8 , L3 , X6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n9 , String w6 , String T6 , String b9 , String i6 ) {  <CR> super ( n9 , w6 , T6 , b9 , i6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String S7 , String H4 , Evaluation x3 ) {  <CR> this . senderAddr = S7 ;  <CR> this . receiverAddr = H4 ;  <CR> this . letter = x3 ;  <CR> }  <CR> public static void main ( String [ ] J4 ) {  <CR> Evaluation N8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O0 = new Envelop ( "Taipei" , "Kaohsiung" , N8 ) ;  <CR> O0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String U1 , String Z0 , String N0 , String l1 , String E2 ) {  <CR> this . title = U1 ;  <CR> this . receiver = Z0 ;  <CR> this . content = N0 ;  <CR> this . sender = l1 ;  <CR> this . date = E2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int N5 ) {  <CR> this . x = N5 ;  <CR> }  <CR> public void display ( int F0 ) {  <CR> list [ F0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p4 ) {  <CR> int F0 ;  <CR> for ( F0 = list . length - 1 ; F0 >= 0 ; F0 -- ) {  <CR> int Z8 = F0 ;  <CR> Letter u6 = new Letter ( F0 ) ;  <CR> Letter n2 = new Letter ( Z8 - 1 ) ;  <CR> if ( u6 . compareTo ( n2 ) == 1 )  <CR> u6 . display ( F0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object n7 ) {  <CR> Letter i8 = ( Letter ) n7 ;  <CR> if ( this . x > i8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 