 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b8 , String H3 , String B4 , String V1 , String f ) {  <CR> super ( b8 , H3 , B4 , V1 , f ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S6 , String R7 , String C7 , String s9 , String X5 ) {  <CR> super ( S6 , R7 , C7 , s9 , X5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] i8 ) {  <CR> Evaluation n0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q6 = new Envelop ( "Taipei" , "Kaohsiung" , n0 ) ;  <CR> q6 . display ( ) ;  <CR> }  <CR> public Envelop ( String E8 , String q5 , Evaluation g ) {  <CR> this . senderAddr = E8 ;  <CR> this . receiverAddr = q5 ;  <CR> this . letter = g ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String Y8 , String g9 , String v3 , String M9 , String q6 ) {  <CR> this . title = Y8 ;  <CR> this . receiver = g9 ;  <CR> this . content = v3 ;  <CR> this . sender = M9 ;  <CR> this . date = q6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int a7 ) {  <CR> list [ a7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int M9 ) {  <CR> this . x = M9 ;  <CR> }  <CR> public static void main ( String [ ] X7 ) {  <CR> int a7 ;  <CR> for ( a7 = list . length - 1 ; a7 >= 0 ; a7 -- ) {  <CR> int O8 = a7 ;  <CR> Letter v4 = new Letter ( a7 ) ;  <CR> Letter H2 = new Letter ( O8 - 1 ) ;  <CR> if ( v4 . compareTo ( H2 ) == 1 )  <CR> v4 . display ( a7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object F5 ) {  <CR> Letter k8 = ( Letter ) F5 ;  <CR> if ( this . x > k8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 