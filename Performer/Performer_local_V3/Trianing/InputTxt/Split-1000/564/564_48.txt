 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T2 , String B4 , String W2 , String J7 , String f3 ) {  <CR> super ( T2 , B4 , W2 , J7 , f3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g4 , String t1 , String t6 , String w6 , String V4 ) {  <CR> super ( g4 , t1 , t6 , w6 , V4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p0 , String m7 , Evaluation y ) {  <CR> this . senderAddr = p0 ;  <CR> this . receiverAddr = m7 ;  <CR> this . letter = y ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] X8 ) {  <CR> Evaluation q8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x7 = new Envelop ( "Taipei" , "Kaohsiung" , q8 ) ;  <CR> x7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String p6 , String u , String k5 , String b0 , String f9 ) {  <CR> this . title = p6 ;  <CR> this . receiver = u ;  <CR> this . content = k5 ;  <CR> this . sender = b0 ;  <CR> this . date = f9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] U9 ) {  <CR> int O8 ;  <CR> for ( O8 = list . length - 1 ; O8 >= 0 ; O8 -- ) {  <CR> int X3 = O8 ;  <CR> Letter t0 = new Letter ( O8 ) ;  <CR> Letter Y = new Letter ( X3 - 1 ) ;  <CR> if ( t0 . compareTo ( Y ) == 1 )  <CR> t0 . display ( O8 ) ;  <CR> }  <CR> }  <CR> Letter ( int T ) {  <CR> this . x = T ;  <CR> }  <CR> public void display ( int O8 ) {  <CR> list [ O8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object N9 ) {  <CR> Letter L9 = ( Letter ) N9 ;  <CR> if ( this . x > L9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 