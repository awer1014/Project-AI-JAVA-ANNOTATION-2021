 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I , String W0 , String E4 , String y9 , String X6 ) {  <CR> super ( I , W0 , E4 , y9 , X6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i2 , String j5 , String f1 , String m4 , String c2 ) {  <CR> super ( i2 , j5 , f1 , m4 , c2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String S9 , String w1 , Evaluation X1 ) {  <CR> this . senderAddr = S9 ;  <CR> this . receiverAddr = w1 ;  <CR> this . letter = X1 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] B0 ) {  <CR> Evaluation u2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q = new Envelop ( "Taipei" , "Kaohsiung" , u2 ) ;  <CR> Q . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String a7 , String C2 , String P9 , String n7 , String h7 ) {  <CR> this . title = a7 ;  <CR> this . receiver = C2 ;  <CR> this . content = P9 ;  <CR> this . sender = n7 ;  <CR> this . date = h7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] X0 ) {  <CR> int p6 ;  <CR> for ( p6 = list . length - 1 ; p6 >= 0 ; p6 -- ) {  <CR> int f6 = p6 ;  <CR> Letter i7 = new Letter ( p6 ) ;  <CR> Letter g = new Letter ( f6 - 1 ) ;  <CR> if ( i7 . compareTo ( g ) == 1 )  <CR> i7 . display ( p6 ) ;  <CR> }  <CR> }  <CR> Letter ( int B6 ) {  <CR> this . x = B6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int p6 ) {  <CR> list [ p6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object w2 ) {  <CR> Letter K8 = ( Letter ) w2 ;  <CR> if ( this . x > K8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 