 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v1 , String D1 , String u8 , String F2 , String M3 ) {  <CR> super ( v1 , D1 , u8 , F2 , M3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W3 , String z3 , String G6 , String a1 , String V7 ) {  <CR> super ( W3 , z3 , G6 , a1 , V7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k0 ) {  <CR> Evaluation C8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H7 = new Envelop ( "Taipei" , "Kaohsiung" , C8 ) ;  <CR> H7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String X1 , String f5 , Evaluation M2 ) {  <CR> this . senderAddr = X1 ;  <CR> this . receiverAddr = f5 ;  <CR> this . letter = M2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String s3 , String t , String k2 , String A8 , String d0 ) {  <CR> this . title = s3 ;  <CR> this . receiver = t ;  <CR> this . content = k2 ;  <CR> this . sender = A8 ;  <CR> this . date = d0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object s2 ) {  <CR> Letter x2 = ( Letter ) s2 ;  <CR> if ( this . x > x2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] D8 ) {  <CR> int J5 ;  <CR> for ( J5 = list . length - 1 ; J5 >= 0 ; J5 -- ) {  <CR> int y2 = J5 ;  <CR> Letter I9 = new Letter ( J5 ) ;  <CR> Letter z2 = new Letter ( y2 - 1 ) ;  <CR> if ( I9 . compareTo ( z2 ) == 1 )  <CR> I9 . display ( J5 ) ;  <CR> }  <CR> }  <CR> public void display ( int J5 ) {  <CR> list [ J5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Y9 ) {  <CR> this . x = Y9 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 