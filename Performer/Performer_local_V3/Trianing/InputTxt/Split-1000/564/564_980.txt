 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V8 , String l9 , String M2 , String S1 , String B5 ) {  <CR> super ( V8 , l9 , M2 , S1 , B5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String c7 , String x3 , String f3 , String u5 , String n1 ) {  <CR> super ( c7 , x3 , f3 , u5 , n1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String o , String z9 , Evaluation e8 ) {  <CR> this . senderAddr = o ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = e8 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] F3 ) {  <CR> Evaluation A1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n3 = new Envelop ( "Taipei" , "Kaohsiung" , A1 ) ;  <CR> n3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String d0 , String h , String U0 , String r9 , String D6 ) {  <CR> this . title = d0 ;  <CR> this . receiver = h ;  <CR> this . content = U0 ;  <CR> this . sender = r9 ;  <CR> this . date = D6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int P0 ) {  <CR> this . x = P0 ;  <CR> }  <CR> public static void main ( String [ ] f6 ) {  <CR> int i6 ;  <CR> for ( i6 = list . length - 1 ; i6 >= 0 ; i6 -- ) {  <CR> int e4 = i6 ;  <CR> Letter D5 = new Letter ( i6 ) ;  <CR> Letter b9 = new Letter ( e4 - 1 ) ;  <CR> if ( D5 . compareTo ( b9 ) == 1 )  <CR> D5 . display ( i6 ) ;  <CR> }  <CR> }  <CR> public void display ( int i6 ) {  <CR> list [ i6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object w5 ) {  <CR> Letter l6 = ( Letter ) w5 ;  <CR> if ( this . x > l6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 