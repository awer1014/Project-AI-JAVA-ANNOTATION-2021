 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F0 , String A9 , String m0 , String a , String r7 ) {  <CR> super ( F0 , A9 , m0 , a , r7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M3 , String W2 , String a , String x2 , String O8 ) {  <CR> super ( M3 , W2 , a , x2 , O8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u1 ) {  <CR> Evaluation L5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q4 = new Envelop ( "Taipei" , "Kaohsiung" , L5 ) ;  <CR> q4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String g9 , String w5 , Evaluation Y3 ) {  <CR> this . senderAddr = g9 ;  <CR> this . receiverAddr = w5 ;  <CR> this . letter = Y3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String d0 , String U3 , String Y6 , String Z5 , String F6 ) {  <CR> this . title = d0 ;  <CR> this . receiver = U3 ;  <CR> this . content = Y6 ;  <CR> this . sender = Z5 ;  <CR> this . date = F6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int f3 ) {  <CR> this . x = f3 ;  <CR> }  <CR> public int compareTo ( Object X4 ) {  <CR> Letter d7 = ( Letter ) X4 ;  <CR> if ( this . x > d7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] C4 ) {  <CR> int y3 ;  <CR> for ( y3 = list . length - 1 ; y3 >= 0 ; y3 -- ) {  <CR> int F2 = y3 ;  <CR> Letter i1 = new Letter ( y3 ) ;  <CR> Letter Z9 = new Letter ( F2 - 1 ) ;  <CR> if ( i1 . compareTo ( Z9 ) == 1 )  <CR> i1 . display ( y3 ) ;  <CR> }  <CR> }  <CR> public void display ( int y3 ) {  <CR> list [ y3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 