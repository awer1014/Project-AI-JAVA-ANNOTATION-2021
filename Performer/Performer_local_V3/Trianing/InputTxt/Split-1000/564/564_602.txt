 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L5 , String l8 , String Z7 , String F5 , String O ) {  <CR> super ( L5 , l8 , Z7 , F5 , O ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String a3 , String s4 , String O8 , String S9 , String L3 ) {  <CR> super ( a3 , s4 , O8 , S9 , L3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E4 ) {  <CR> Evaluation M9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g0 = new Envelop ( "Taipei" , "Kaohsiung" , M9 ) ;  <CR> g0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String V6 , String e8 , Evaluation x1 ) {  <CR> this . senderAddr = V6 ;  <CR> this . receiverAddr = e8 ;  <CR> this . letter = x1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String H , String y0 , String I5 , String B4 , String f6 ) {  <CR> this . title = H ;  <CR> this . receiver = y0 ;  <CR> this . content = I5 ;  <CR> this . sender = B4 ;  <CR> this . date = f6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int N1 ) {  <CR> this . x = N1 ;  <CR> }  <CR> public static void main ( String [ ] d5 ) {  <CR> int b8 ;  <CR> for ( b8 = list . length - 1 ; b8 >= 0 ; b8 -- ) {  <CR> int D9 = b8 ;  <CR> Letter g5 = new Letter ( b8 ) ;  <CR> Letter i9 = new Letter ( D9 - 1 ) ;  <CR> if ( g5 . compareTo ( i9 ) == 1 )  <CR> g5 . display ( b8 ) ;  <CR> }  <CR> }  <CR> public void display ( int b8 ) {  <CR> list [ b8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object X9 ) {  <CR> Letter L7 = ( Letter ) X9 ;  <CR> if ( this . x > L7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 