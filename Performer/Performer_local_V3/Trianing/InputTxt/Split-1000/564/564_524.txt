 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I0 , String h4 , String T6 , String B6 , String R8 ) {  <CR> super ( I0 , h4 , T6 , B6 , R8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y7 , String Z , String c1 , String D2 , String C0 ) {  <CR> super ( Y7 , Z , c1 , D2 , C0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B1 ) {  <CR> Evaluation O0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q9 = new Envelop ( "Taipei" , "Kaohsiung" , O0 ) ;  <CR> Q9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String t3 , String p2 , Evaluation h7 ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = p2 ;  <CR> this . letter = h7 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String G8 , String z7 , String J4 , String k1 , String O ) {  <CR> this . title = G8 ;  <CR> this . receiver = z7 ;  <CR> this . content = J4 ;  <CR> this . sender = k1 ;  <CR> this . date = O ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object L1 ) {  <CR> Letter K3 = ( Letter ) L1 ;  <CR> if ( this . x > K3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int H7 ) {  <CR> this . x = H7 ;  <CR> }  <CR> public static void main ( String [ ] p0 ) {  <CR> int b ;  <CR> for ( b = list . length - 1 ; b >= 0 ; b -- ) {  <CR> int J7 = b ;  <CR> Letter D8 = new Letter ( b ) ;  <CR> Letter G3 = new Letter ( J7 - 1 ) ;  <CR> if ( D8 . compareTo ( G3 ) == 1 )  <CR> D8 . display ( b ) ;  <CR> }  <CR> }  <CR> public void display ( int b ) {  <CR> list [ b ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 