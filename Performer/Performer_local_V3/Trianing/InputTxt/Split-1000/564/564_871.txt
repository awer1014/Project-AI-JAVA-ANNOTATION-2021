 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y2 , String h1 , String S0 , String b9 , String I8 ) {  <CR> super ( Y2 , h1 , S0 , b9 , I8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G1 , String e5 , String U0 , String Y0 , String f5 ) {  <CR> super ( G1 , e5 , U0 , Y0 , f5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String Y1 , String R1 , Evaluation E8 ) {  <CR> this . senderAddr = Y1 ;  <CR> this . receiverAddr = R1 ;  <CR> this . letter = E8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] C1 ) {  <CR> Evaluation v7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L4 = new Envelop ( "Taipei" , "Kaohsiung" , v7 ) ;  <CR> L4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String V1 , String f3 , String m1 , String I9 , String V7 ) {  <CR> this . title = V1 ;  <CR> this . receiver = f3 ;  <CR> this . content = m1 ;  <CR> this . sender = I9 ;  <CR> this . date = V7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object r6 ) {  <CR> Letter n0 = ( Letter ) r6 ;  <CR> if ( this . x > n0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int e8 ) {  <CR> list [ e8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D9 ) {  <CR> int e8 ;  <CR> for ( e8 = list . length - 1 ; e8 >= 0 ; e8 -- ) {  <CR> int w4 = e8 ;  <CR> Letter A2 = new Letter ( e8 ) ;  <CR> Letter J7 = new Letter ( w4 - 1 ) ;  <CR> if ( A2 . compareTo ( J7 ) == 1 )  <CR> A2 . display ( e8 ) ;  <CR> }  <CR> }  <CR> Letter ( int D6 ) {  <CR> this . x = D6 ;  <CR> }  <CR> }  <CR>  <EOC> 