 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W1 , String U4 , String t , String R4 , String F3 ) {  <CR> super ( W1 , U4 , t , R4 , F3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F3 , String B1 , String k6 , String p6 , String f9 ) {  <CR> super ( F3 , B1 , k6 , p6 , f9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Q5 , String t1 , Evaluation I8 ) {  <CR> this . senderAddr = Q5 ;  <CR> this . receiverAddr = t1 ;  <CR> this . letter = I8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] q4 ) {  <CR> Evaluation T4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n4 = new Envelop ( "Taipei" , "Kaohsiung" , T4 ) ;  <CR> n4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String u1 , String k4 , String y8 , String K0 , String d5 ) {  <CR> this . title = u1 ;  <CR> this . receiver = k4 ;  <CR> this . content = y8 ;  <CR> this . sender = K0 ;  <CR> this . date = d5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int S ) {  <CR> list [ S ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] b5 ) {  <CR> int S ;  <CR> for ( S = list . length - 1 ; S >= 0 ; S -- ) {  <CR> int U5 = S ;  <CR> Letter t7 = new Letter ( S ) ;  <CR> Letter k6 = new Letter ( U5 - 1 ) ;  <CR> if ( t7 . compareTo ( k6 ) == 1 )  <CR> t7 . display ( S ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object H5 ) {  <CR> Letter a6 = ( Letter ) H5 ;  <CR> if ( this . x > a6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int c ) {  <CR> this . x = c ;  <CR> }  <CR> }  <CR>  <EOC> 