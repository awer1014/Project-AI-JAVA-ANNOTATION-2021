 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a9 , String n4 , String p9 , String C , String g6 ) {  <CR> super ( a9 , n4 , p9 , C , g6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f5 , String D5 , String N7 , String y3 , String A0 ) {  <CR> super ( f5 , D5 , N7 , y3 , A0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String A , String v3 , Evaluation V2 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = v3 ;  <CR> this . letter = V2 ;  <CR> }  <CR> public static void main ( String [ ] D8 ) {  <CR> Evaluation w = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q4 = new Envelop ( "Taipei" , "Kaohsiung" , w ) ;  <CR> Q4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String l0 , String T0 , String o0 , String s3 , String t8 ) {  <CR> this . title = l0 ;  <CR> this . receiver = T0 ;  <CR> this . content = o0 ;  <CR> this . sender = s3 ;  <CR> this . date = t8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int z0 ) {  <CR> this . x = z0 ;  <CR> }  <CR> public int compareTo ( Object F1 ) {  <CR> Letter l6 = ( Letter ) F1 ;  <CR> if ( this . x > l6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p ) {  <CR> int g1 ;  <CR> for ( g1 = list . length - 1 ; g1 >= 0 ; g1 -- ) {  <CR> int k9 = g1 ;  <CR> Letter w2 = new Letter ( g1 ) ;  <CR> Letter p9 = new Letter ( k9 - 1 ) ;  <CR> if ( w2 . compareTo ( p9 ) == 1 )  <CR> w2 . display ( g1 ) ;  <CR> }  <CR> }  <CR> public void display ( int g1 ) {  <CR> list [ g1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 