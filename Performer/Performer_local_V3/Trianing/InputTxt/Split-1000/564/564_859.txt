 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I7 , String b1 , String i3 , String O0 , String L6 ) {  <CR> super ( I7 , b1 , i3 , O0 , L6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z3 , String H3 , String g4 , String N , String J2 ) {  <CR> super ( Z3 , H3 , g4 , N , J2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String M8 , String T3 , Evaluation u1 ) {  <CR> this . senderAddr = M8 ;  <CR> this . receiverAddr = T3 ;  <CR> this . letter = u1 ;  <CR> }  <CR> public static void main ( String [ ] n2 ) {  <CR> Evaluation w3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F4 = new Envelop ( "Taipei" , "Kaohsiung" , w3 ) ;  <CR> F4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String d3 , String N8 , String R , String b0 , String M ) {  <CR> this . title = d3 ;  <CR> this . receiver = N8 ;  <CR> this . content = R ;  <CR> this . sender = b0 ;  <CR> this . date = M ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] F8 ) {  <CR> int L7 ;  <CR> for ( L7 = list . length - 1 ; L7 >= 0 ; L7 -- ) {  <CR> int O = L7 ;  <CR> Letter R4 = new Letter ( L7 ) ;  <CR> Letter H6 = new Letter ( O - 1 ) ;  <CR> if ( R4 . compareTo ( H6 ) == 1 )  <CR> R4 . display ( L7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object P2 ) {  <CR> Letter v5 = ( Letter ) P2 ;  <CR> if ( this . x > v5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int t ) {  <CR> this . x = t ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int L7 ) {  <CR> list [ L7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 