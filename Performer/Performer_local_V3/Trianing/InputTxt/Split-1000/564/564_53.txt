 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String w1 , String h8 , String V5 , String H9 , String t2 ) {  <CR> super ( w1 , h8 , V5 , H9 , t2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y6 , String w5 , String k4 , String y8 , String m4 ) {  <CR> super ( y6 , w5 , k4 , y8 , m4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String n3 , String t2 , Evaluation m9 ) {  <CR> this . senderAddr = n3 ;  <CR> this . receiverAddr = t2 ;  <CR> this . letter = m9 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] G5 ) {  <CR> Evaluation M3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K3 = new Envelop ( "Taipei" , "Kaohsiung" , M3 ) ;  <CR> K3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String v2 , String R9 , String y0 , String c , String v9 ) {  <CR> this . title = v2 ;  <CR> this . receiver = R9 ;  <CR> this . content = y0 ;  <CR> this . sender = c ;  <CR> this . date = v9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int C9 ) {  <CR> list [ C9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int R3 ) {  <CR> this . x = R3 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] a3 ) {  <CR> int C9 ;  <CR> for ( C9 = list . length - 1 ; C9 >= 0 ; C9 -- ) {  <CR> int d8 = C9 ;  <CR> Letter k0 = new Letter ( C9 ) ;  <CR> Letter a7 = new Letter ( d8 - 1 ) ;  <CR> if ( k0 . compareTo ( a7 ) == 1 )  <CR> k0 . display ( C9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object v6 ) {  <CR> Letter F2 = ( Letter ) v6 ;  <CR> if ( this . x > F2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 