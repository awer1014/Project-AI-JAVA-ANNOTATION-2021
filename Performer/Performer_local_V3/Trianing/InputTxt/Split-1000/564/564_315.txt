 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X8 , String y , String c1 , String l7 , String R2 ) {  <CR> super ( X8 , y , c1 , l7 , R2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S7 , String T1 , String G4 , String W7 , String i5 ) {  <CR> super ( S7 , T1 , G4 , W7 , i5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String C4 , String L2 , Evaluation Q3 ) {  <CR> this . senderAddr = C4 ;  <CR> this . receiverAddr = L2 ;  <CR> this . letter = Q3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U6 ) {  <CR> Evaluation M6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z0 = new Envelop ( "Taipei" , "Kaohsiung" , M6 ) ;  <CR> z0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String d7 , String c9 , String X0 , String a8 , String y1 ) {  <CR> this . title = d7 ;  <CR> this . receiver = c9 ;  <CR> this . content = X0 ;  <CR> this . sender = a8 ;  <CR> this . date = y1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] a7 ) {  <CR> int Y2 ;  <CR> for ( Y2 = list . length - 1 ; Y2 >= 0 ; Y2 -- ) {  <CR> int x6 = Y2 ;  <CR> Letter D3 = new Letter ( Y2 ) ;  <CR> Letter l0 = new Letter ( x6 - 1 ) ;  <CR> if ( D3 . compareTo ( l0 ) == 1 )  <CR> D3 . display ( Y2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int b3 ) {  <CR> this . x = b3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Y2 ) {  <CR> list [ Y2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object Z7 ) {  <CR> Letter B4 = ( Letter ) Z7 ;  <CR> if ( this . x > B4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 