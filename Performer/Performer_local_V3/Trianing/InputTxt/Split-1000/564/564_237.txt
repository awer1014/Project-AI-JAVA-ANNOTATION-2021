 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N1 , String o1 , String E3 , String X5 , String u1 ) {  <CR> super ( N1 , o1 , E3 , X5 , u1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B4 , String T4 , String L0 , String z7 , String N6 ) {  <CR> super ( B4 , T4 , L0 , z7 , N6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] P3 ) {  <CR> Evaluation R4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d4 = new Envelop ( "Taipei" , "Kaohsiung" , R4 ) ;  <CR> d4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String H8 , String V5 , Evaluation a9 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = V5 ;  <CR> this . letter = a9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String T , String W3 , String b3 , String g1 , String u1 ) {  <CR> this . title = T ;  <CR> this . receiver = W3 ;  <CR> this . content = b3 ;  <CR> this . sender = g1 ;  <CR> this . date = u1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Y2 ) {  <CR> int Z8 ;  <CR> for ( Z8 = list . length - 1 ; Z8 >= 0 ; Z8 -- ) {  <CR> int n2 = Z8 ;  <CR> Letter M9 = new Letter ( Z8 ) ;  <CR> Letter M3 = new Letter ( n2 - 1 ) ;  <CR> if ( M9 . compareTo ( M3 ) == 1 )  <CR> M9 . display ( Z8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object k1 ) {  <CR> Letter a3 = ( Letter ) k1 ;  <CR> if ( this . x > a3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int O9 ) {  <CR> this . x = O9 ;  <CR> }  <CR> public void display ( int Z8 ) {  <CR> list [ Z8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 