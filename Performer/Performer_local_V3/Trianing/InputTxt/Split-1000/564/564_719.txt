 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K , String Z , String y7 , String u8 , String j8 ) {  <CR> super ( K , Z , y7 , u8 , j8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String c6 , String W6 , String N9 , String i , String Z6 ) {  <CR> super ( c6 , W6 , N9 , i , Z6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] M3 ) {  <CR> Evaluation E1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o4 = new Envelop ( "Taipei" , "Kaohsiung" , E1 ) ;  <CR> o4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String h2 , String b0 , Evaluation w1 ) {  <CR> this . senderAddr = h2 ;  <CR> this . receiverAddr = b0 ;  <CR> this . letter = w1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String d3 , String t3 , String G , String h5 , String m1 ) {  <CR> this . title = d3 ;  <CR> this . receiver = t3 ;  <CR> this . content = G ;  <CR> this . sender = h5 ;  <CR> this . date = m1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int h3 ) {  <CR> this . x = h3 ;  <CR> }  <CR> public int compareTo ( Object i3 ) {  <CR> Letter N8 = ( Letter ) i3 ;  <CR> if ( this . x > N8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] S6 ) {  <CR> int Q ;  <CR> for ( Q = list . length - 1 ; Q >= 0 ; Q -- ) {  <CR> int v0 = Q ;  <CR> Letter w5 = new Letter ( Q ) ;  <CR> Letter S0 = new Letter ( v0 - 1 ) ;  <CR> if ( w5 . compareTo ( S0 ) == 1 )  <CR> w5 . display ( Q ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int Q ) {  <CR> list [ Q ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 