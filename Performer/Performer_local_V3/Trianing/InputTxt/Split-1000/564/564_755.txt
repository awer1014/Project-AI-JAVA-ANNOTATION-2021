 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E6 , String R9 , String x0 , String q , String j0 ) {  <CR> super ( E6 , R9 , x0 , q , j0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W8 , String S7 , String L0 , String B2 , String U0 ) {  <CR> super ( W8 , S7 , L0 , B2 , U0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p1 , String M6 , Evaluation S0 ) {  <CR> this . senderAddr = p1 ;  <CR> this . receiverAddr = M6 ;  <CR> this . letter = S0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o1 ) {  <CR> Evaluation E6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S8 = new Envelop ( "Taipei" , "Kaohsiung" , E6 ) ;  <CR> S8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String x , String s0 , String O6 , String g , String I5 ) {  <CR> this . title = x ;  <CR> this . receiver = s0 ;  <CR> this . content = O6 ;  <CR> this . sender = g ;  <CR> this . date = I5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] u2 ) {  <CR> int P6 ;  <CR> for ( P6 = list . length - 1 ; P6 >= 0 ; P6 -- ) {  <CR> int G5 = P6 ;  <CR> Letter t4 = new Letter ( P6 ) ;  <CR> Letter f1 = new Letter ( G5 - 1 ) ;  <CR> if ( t4 . compareTo ( f1 ) == 1 )  <CR> t4 . display ( P6 ) ;  <CR> }  <CR> }  <CR> Letter ( int G6 ) {  <CR> this . x = G6 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object i7 ) {  <CR> Letter q7 = ( Letter ) i7 ;  <CR> if ( this . x > q7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int P6 ) {  <CR> list [ P6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 