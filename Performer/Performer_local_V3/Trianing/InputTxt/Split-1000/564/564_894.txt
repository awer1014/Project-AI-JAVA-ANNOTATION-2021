 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g9 , String W5 , String i5 , String g8 , String i0 ) {  <CR> super ( g9 , W5 , i5 , g8 , i0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n8 , String W8 , String W6 , String X8 , String o7 ) {  <CR> super ( n8 , W8 , W6 , X8 , o7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String u7 , String T6 , Evaluation u2 ) {  <CR> this . senderAddr = u7 ;  <CR> this . receiverAddr = T6 ;  <CR> this . letter = u2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Z4 ) {  <CR> Evaluation V = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w9 = new Envelop ( "Taipei" , "Kaohsiung" , V ) ;  <CR> w9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String c6 , String x8 , String G8 , String w5 , String e1 ) {  <CR> this . title = c6 ;  <CR> this . receiver = x8 ;  <CR> this . content = G8 ;  <CR> this . sender = w5 ;  <CR> this . date = e1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int h5 ) {  <CR> list [ h5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object M2 ) {  <CR> Letter F3 = ( Letter ) M2 ;  <CR> if ( this . x > F3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] l5 ) {  <CR> int h5 ;  <CR> for ( h5 = list . length - 1 ; h5 >= 0 ; h5 -- ) {  <CR> int p7 = h5 ;  <CR> Letter b5 = new Letter ( h5 ) ;  <CR> Letter k0 = new Letter ( p7 - 1 ) ;  <CR> if ( b5 . compareTo ( k0 ) == 1 )  <CR> b5 . display ( h5 ) ;  <CR> }  <CR> }  <CR> Letter ( int T5 ) {  <CR> this . x = T5 ;  <CR> }  <CR> }  <CR>  <EOC> 