 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E4 , String g9 , String Y0 , String a , String j ) {  <CR> super ( E4 , g9 , Y0 , a , j ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E4 , String m3 , String L3 , String K0 , String t6 ) {  <CR> super ( E4 , m3 , L3 , K0 , t6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] C8 ) {  <CR> Evaluation m0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R9 = new Envelop ( "Taipei" , "Kaohsiung" , m0 ) ;  <CR> R9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String K7 , String h7 , Evaluation I4 ) {  <CR> this . senderAddr = K7 ;  <CR> this . receiverAddr = h7 ;  <CR> this . letter = I4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String P6 , String o5 , String t9 , String J2 , String P0 ) {  <CR> this . title = P6 ;  <CR> this . receiver = o5 ;  <CR> this . content = t9 ;  <CR> this . sender = J2 ;  <CR> this . date = P0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int f2 ) {  <CR> list [ f2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object C8 ) {  <CR> Letter B1 = ( Letter ) C8 ;  <CR> if ( this . x > B1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int L3 ) {  <CR> this . x = L3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] r9 ) {  <CR> int f2 ;  <CR> for ( f2 = list . length - 1 ; f2 >= 0 ; f2 -- ) {  <CR> int i9 = f2 ;  <CR> Letter f7 = new Letter ( f2 ) ;  <CR> Letter g3 = new Letter ( i9 - 1 ) ;  <CR> if ( f7 . compareTo ( g3 ) == 1 )  <CR> f7 . display ( f2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 