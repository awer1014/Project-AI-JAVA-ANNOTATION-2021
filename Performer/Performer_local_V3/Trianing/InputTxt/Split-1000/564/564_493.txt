 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d8 , String Y9 , String Q5 , String P7 , String M9 ) {  <CR> super ( d8 , Y9 , Q5 , P7 , M9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P6 , String T7 , String P3 , String L6 , String N8 ) {  <CR> super ( P6 , T7 , P3 , L6 , N8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E8 ) {  <CR> Evaluation H = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o1 = new Envelop ( "Taipei" , "Kaohsiung" , H ) ;  <CR> o1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p8 , String Z6 , Evaluation N9 ) {  <CR> this . senderAddr = p8 ;  <CR> this . receiverAddr = Z6 ;  <CR> this . letter = N9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String Y9 , String i0 , String o4 , String Y7 , String e1 ) {  <CR> this . title = Y9 ;  <CR> this . receiver = i0 ;  <CR> this . content = o4 ;  <CR> this . sender = Y7 ;  <CR> this . date = e1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] v3 ) {  <CR> int y0 ;  <CR> for ( y0 = list . length - 1 ; y0 >= 0 ; y0 -- ) {  <CR> int Q7 = y0 ;  <CR> Letter v7 = new Letter ( y0 ) ;  <CR> Letter T5 = new Letter ( Q7 - 1 ) ;  <CR> if ( v7 . compareTo ( T5 ) == 1 )  <CR> v7 . display ( y0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int t1 ) {  <CR> this . x = t1 ;  <CR> }  <CR> public void display ( int y0 ) {  <CR> list [ y0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object U ) {  <CR> Letter s0 = ( Letter ) U ;  <CR> if ( this . x > s0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 