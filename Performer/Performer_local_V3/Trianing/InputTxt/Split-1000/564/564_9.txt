 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t3 , String M6 , String y1 , String O , String H6 ) {  <CR> super ( t3 , M6 , y1 , O , H6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W0 , String Y1 , String l4 , String T8 , String W9 ) {  <CR> super ( W0 , Y1 , l4 , T8 , W9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String O0 , String H , Evaluation h4 ) {  <CR> this . senderAddr = O0 ;  <CR> this . receiverAddr = H ;  <CR> this . letter = h4 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] b3 ) {  <CR> Evaluation Q = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e7 = new Envelop ( "Taipei" , "Kaohsiung" , Q ) ;  <CR> e7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String a6 , String m7 , String a9 , String q8 , String c6 ) {  <CR> this . title = a6 ;  <CR> this . receiver = m7 ;  <CR> this . content = a9 ;  <CR> this . sender = q8 ;  <CR> this . date = c6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object M2 ) {  <CR> Letter d9 = ( Letter ) M2 ;  <CR> if ( this . x > d9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int e0 ) {  <CR> list [ e0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] F ) {  <CR> int e0 ;  <CR> for ( e0 = list . length - 1 ; e0 >= 0 ; e0 -- ) {  <CR> int u4 = e0 ;  <CR> Letter Z3 = new Letter ( e0 ) ;  <CR> Letter V7 = new Letter ( u4 - 1 ) ;  <CR> if ( Z3 . compareTo ( V7 ) == 1 )  <CR> Z3 . display ( e0 ) ;  <CR> }  <CR> }  <CR> Letter ( int b5 ) {  <CR> this . x = b5 ;  <CR> }  <CR> }  <CR>  <EOC> 