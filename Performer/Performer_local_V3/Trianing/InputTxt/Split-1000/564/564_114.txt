 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A0 , String C2 , String n5 , String m1 , String m8 ) {  <CR> super ( A0 , C2 , n5 , m1 , m8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String m4 , String T1 , String F , String o9 , String S6 ) {  <CR> super ( m4 , T1 , F , o9 , S6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String c3 , String S6 , Evaluation f6 ) {  <CR> this . senderAddr = c3 ;  <CR> this . receiverAddr = S6 ;  <CR> this . letter = f6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w0 ) {  <CR> Evaluation o9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z9 = new Envelop ( "Taipei" , "Kaohsiung" , o9 ) ;  <CR> z9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String x2 , String P , String R8 , String Z1 , String M ) {  <CR> this . title = x2 ;  <CR> this . receiver = P ;  <CR> this . content = R8 ;  <CR> this . sender = Z1 ;  <CR> this . date = M ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int P7 ) {  <CR> this . x = P7 ;  <CR> }  <CR> public void display ( int S3 ) {  <CR> list [ S3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A9 ) {  <CR> int S3 ;  <CR> for ( S3 = list . length - 1 ; S3 >= 0 ; S3 -- ) {  <CR> int A = S3 ;  <CR> Letter E = new Letter ( S3 ) ;  <CR> Letter o = new Letter ( A - 1 ) ;  <CR> if ( E . compareTo ( o ) == 1 )  <CR> E . display ( S3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object l4 ) {  <CR> Letter R6 = ( Letter ) l4 ;  <CR> if ( this . x > R6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 