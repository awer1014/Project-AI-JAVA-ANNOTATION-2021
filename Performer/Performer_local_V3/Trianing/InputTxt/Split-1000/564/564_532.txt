 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A3 , String G0 , String s0 , String C3 , String u ) {  <CR> super ( A3 , G0 , s0 , C3 , u ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D9 , String f9 , String G , String P5 , String A2 ) {  <CR> super ( D9 , f9 , G , P5 , A2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] h5 ) {  <CR> Evaluation T2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L8 = new Envelop ( "Taipei" , "Kaohsiung" , T2 ) ;  <CR> L8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String U1 , String G4 , Evaluation L7 ) {  <CR> this . senderAddr = U1 ;  <CR> this . receiverAddr = G4 ;  <CR> this . letter = L7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String g6 , String a7 , String Q7 , String x4 , String H6 ) {  <CR> this . title = g6 ;  <CR> this . receiver = a7 ;  <CR> this . content = Q7 ;  <CR> this . sender = x4 ;  <CR> this . date = H6 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int f0 ) {  <CR> this . x = f0 ;  <CR> }  <CR> public void display ( int p7 ) {  <CR> list [ p7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object B7 ) {  <CR> Letter J6 = ( Letter ) B7 ;  <CR> if ( this . x > J6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] H0 ) {  <CR> int p7 ;  <CR> for ( p7 = list . length - 1 ; p7 >= 0 ; p7 -- ) {  <CR> int b2 = p7 ;  <CR> Letter D = new Letter ( p7 ) ;  <CR> Letter y3 = new Letter ( b2 - 1 ) ;  <CR> if ( D . compareTo ( y3 ) == 1 )  <CR> D . display ( p7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 