 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C5 , String s4 , String A , String I8 , String q4 ) {  <CR> super ( C5 , s4 , A , I8 , q4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e3 , String z2 , String y7 , String a0 , String b5 ) {  <CR> super ( e3 , z2 , y7 , a0 , b5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String V6 , String U3 , Evaluation M ) {  <CR> this . senderAddr = V6 ;  <CR> this . receiverAddr = U3 ;  <CR> this . letter = M ;  <CR> }  <CR> public static void main ( String [ ] L3 ) {  <CR> Evaluation j4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d1 = new Envelop ( "Taipei" , "Kaohsiung" , j4 ) ;  <CR> d1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String o2 , String u8 , String K5 , String y3 , String G ) {  <CR> this . title = o2 ;  <CR> this . receiver = u8 ;  <CR> this . content = K5 ;  <CR> this . sender = y3 ;  <CR> this . date = G ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int F6 ) {  <CR> list [ F6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] z8 ) {  <CR> int F6 ;  <CR> for ( F6 = list . length - 1 ; F6 >= 0 ; F6 -- ) {  <CR> int J8 = F6 ;  <CR> Letter l2 = new Letter ( F6 ) ;  <CR> Letter a5 = new Letter ( J8 - 1 ) ;  <CR> if ( l2 . compareTo ( a5 ) == 1 )  <CR> l2 . display ( F6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object W0 ) {  <CR> Letter B9 = ( Letter ) W0 ;  <CR> if ( this . x > B9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int P8 ) {  <CR> this . x = P8 ;  <CR> }  <CR> }  <CR>  <EOC> 