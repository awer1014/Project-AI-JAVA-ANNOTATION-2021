 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w2 , String s3 , String Y0 , String X3 , String a9 ) {  <CR> super ( w2 , s3 , Y0 , X3 , a9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y6 , String e6 , String k1 , String n9 , String T8 ) {  <CR> super ( y6 , e6 , k1 , n9 , T8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] L9 ) {  <CR> Evaluation Z1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R6 = new Envelop ( "Taipei" , "Kaohsiung" , Z1 ) ;  <CR> R6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String L6 , String X9 , Evaluation N7 ) {  <CR> this . senderAddr = L6 ;  <CR> this . receiverAddr = X9 ;  <CR> this . letter = N7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String d , String I1 , String F4 , String n8 , String u9 ) {  <CR> this . title = d ;  <CR> this . receiver = I1 ;  <CR> this . content = F4 ;  <CR> this . sender = n8 ;  <CR> this . date = u9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] D9 ) {  <CR> int R6 ;  <CR> for ( R6 = list . length - 1 ; R6 >= 0 ; R6 -- ) {  <CR> int R9 = R6 ;  <CR> Letter N9 = new Letter ( R6 ) ;  <CR> Letter z6 = new Letter ( R9 - 1 ) ;  <CR> if ( N9 . compareTo ( z6 ) == 1 )  <CR> N9 . display ( R6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object L3 ) {  <CR> Letter m6 = ( Letter ) L3 ;  <CR> if ( this . x > m6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int r1 ) {  <CR> this . x = r1 ;  <CR> }  <CR> public void display ( int R6 ) {  <CR> list [ R6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 