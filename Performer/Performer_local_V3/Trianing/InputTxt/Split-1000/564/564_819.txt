 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S5 , String F3 , String k3 , String e6 , String w3 ) {  <CR> super ( S5 , F3 , k3 , e6 , w3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I0 , String r , String B5 , String C3 , String C4 ) {  <CR> super ( I0 , r , B5 , C3 , C4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S6 ) {  <CR> Evaluation Z8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B5 = new Envelop ( "Taipei" , "Kaohsiung" , Z8 ) ;  <CR> B5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String X6 , String N9 , Evaluation W ) {  <CR> this . senderAddr = X6 ;  <CR> this . receiverAddr = N9 ;  <CR> this . letter = W ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String t5 , String J , String c3 , String y9 , String o6 ) {  <CR> this . title = t5 ;  <CR> this . receiver = J ;  <CR> this . content = c3 ;  <CR> this . sender = y9 ;  <CR> this . date = o6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] o3 ) {  <CR> int C1 ;  <CR> for ( C1 = list . length - 1 ; C1 >= 0 ; C1 -- ) {  <CR> int n7 = C1 ;  <CR> Letter B = new Letter ( C1 ) ;  <CR> Letter g1 = new Letter ( n7 - 1 ) ;  <CR> if ( B . compareTo ( g1 ) == 1 )  <CR> B . display ( C1 ) ;  <CR> }  <CR> }  <CR> Letter ( int f1 ) {  <CR> this . x = f1 ;  <CR> }  <CR> public int compareTo ( Object i0 ) {  <CR> Letter I3 = ( Letter ) i0 ;  <CR> if ( this . x > I3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int C1 ) {  <CR> list [ C1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 