 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H , String B , String t , String W , String F ) {  <CR> super ( H , B , t , W , F ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P9 , String y9 , String g1 , String O3 , String v8 ) {  <CR> super ( P9 , y9 , g1 , O3 , v8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m3 ) {  <CR> Evaluation x8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W1 = new Envelop ( "Taipei" , "Kaohsiung" , x8 ) ;  <CR> W1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String H5 , String n7 , Evaluation I0 ) {  <CR> this . senderAddr = H5 ;  <CR> this . receiverAddr = n7 ;  <CR> this . letter = I0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String G , String x6 , String u0 , String S4 , String H7 ) {  <CR> this . title = G ;  <CR> this . receiver = x6 ;  <CR> this . content = u0 ;  <CR> this . sender = S4 ;  <CR> this . date = H7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] Z7 ) {  <CR> int b6 ;  <CR> for ( b6 = list . length - 1 ; b6 >= 0 ; b6 -- ) {  <CR> int y0 = b6 ;  <CR> Letter O3 = new Letter ( b6 ) ;  <CR> Letter k5 = new Letter ( y0 - 1 ) ;  <CR> if ( O3 . compareTo ( k5 ) == 1 )  <CR> O3 . display ( b6 ) ;  <CR> }  <CR> }  <CR> public void display ( int b6 ) {  <CR> list [ b6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object k1 ) {  <CR> Letter a3 = ( Letter ) k1 ;  <CR> if ( this . x > a3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int B9 ) {  <CR> this . x = B9 ;  <CR> }  <CR> }  <CR>  <EOC> 