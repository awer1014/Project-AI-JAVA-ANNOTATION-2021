 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m0 , String s0 , String u2 , String r4 , String t9 ) {  <CR> super ( m0 , s0 , u2 , r4 , t9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n8 , String G1 , String B9 , String S7 , String m ) {  <CR> super ( n8 , G1 , B9 , S7 , m ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String y , String W , Evaluation r5 ) {  <CR> this . senderAddr = y ;  <CR> this . receiverAddr = W ;  <CR> this . letter = r5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] H3 ) {  <CR> Evaluation y7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r7 = new Envelop ( "Taipei" , "Kaohsiung" , y7 ) ;  <CR> r7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String c5 , String Z6 , String X5 , String u1 , String Z0 ) {  <CR> this . title = c5 ;  <CR> this . receiver = Z6 ;  <CR> this . content = X5 ;  <CR> this . sender = u1 ;  <CR> this . date = Z0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object R9 ) {  <CR> Letter c1 = ( Letter ) R9 ;  <CR> if ( this . x > c1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] y2 ) {  <CR> int N3 ;  <CR> for ( N3 = list . length - 1 ; N3 >= 0 ; N3 -- ) {  <CR> int S = N3 ;  <CR> Letter v8 = new Letter ( N3 ) ;  <CR> Letter S4 = new Letter ( S - 1 ) ;  <CR> if ( v8 . compareTo ( S4 ) == 1 )  <CR> v8 . display ( N3 ) ;  <CR> }  <CR> }  <CR> Letter ( int I1 ) {  <CR> this . x = I1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int N3 ) {  <CR> list [ N3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 