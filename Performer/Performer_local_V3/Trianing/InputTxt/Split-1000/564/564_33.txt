 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q8 , String m6 , String y7 , String V7 , String i3 ) {  <CR> super ( Q8 , m6 , y7 , V7 , i3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String m6 , String h4 , String b5 , String Z4 , String n2 ) {  <CR> super ( m6 , h4 , b5 , Z4 , n2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String T1 , String e3 , Evaluation w5 ) {  <CR> this . senderAddr = T1 ;  <CR> this . receiverAddr = e3 ;  <CR> this . letter = w5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b7 ) {  <CR> Evaluation p = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k1 = new Envelop ( "Taipei" , "Kaohsiung" , p ) ;  <CR> k1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String y0 , String b0 , String R8 , String V9 , String k5 ) {  <CR> this . title = y0 ;  <CR> this . receiver = b0 ;  <CR> this . content = R8 ;  <CR> this . sender = V9 ;  <CR> this . date = k5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t5 ) {  <CR> this . x = t5 ;  <CR> }  <CR> public void display ( int I9 ) {  <CR> list [ I9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] P7 ) {  <CR> int I9 ;  <CR> for ( I9 = list . length - 1 ; I9 >= 0 ; I9 -- ) {  <CR> int c7 = I9 ;  <CR> Letter S = new Letter ( I9 ) ;  <CR> Letter i = new Letter ( c7 - 1 ) ;  <CR> if ( S . compareTo ( i ) == 1 )  <CR> S . display ( I9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object Y9 ) {  <CR> Letter v = ( Letter ) Y9 ;  <CR> if ( this . x > v . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 