 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String f1 , String O0 , String H5 , String u , String p7 ) {  <CR> super ( f1 , O0 , H5 , u , p7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e1 , String D6 , String V , String I0 , String S9 ) {  <CR> super ( e1 , D6 , V , I0 , S9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] k5 ) {  <CR> Evaluation f4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s8 = new Envelop ( "Taipei" , "Kaohsiung" , f4 ) ;  <CR> s8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String N8 , String I6 , Evaluation E5 ) {  <CR> this . senderAddr = N8 ;  <CR> this . receiverAddr = I6 ;  <CR> this . letter = E5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String N6 , String z0 , String c5 , String q6 , String d6 ) {  <CR> this . title = N6 ;  <CR> this . receiver = z0 ;  <CR> this . content = c5 ;  <CR> this . sender = q6 ;  <CR> this . date = d6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] e2 ) {  <CR> int X7 ;  <CR> for ( X7 = list . length - 1 ; X7 >= 0 ; X7 -- ) {  <CR> int K2 = X7 ;  <CR> Letter m4 = new Letter ( X7 ) ;  <CR> Letter R1 = new Letter ( K2 - 1 ) ;  <CR> if ( m4 . compareTo ( R1 ) == 1 )  <CR> m4 . display ( X7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int b9 ) {  <CR> this . x = b9 ;  <CR> }  <CR> public void display ( int X7 ) {  <CR> list [ X7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object k6 ) {  <CR> Letter b0 = ( Letter ) k6 ;  <CR> if ( this . x > b0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 