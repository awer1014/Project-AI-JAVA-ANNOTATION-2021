 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S0 , String z2 , String q3 , String p5 , String X9 ) {  <CR> super ( S0 , z2 , q3 , p5 , X9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e2 , String x , String P6 , String F6 , String k6 ) {  <CR> super ( e2 , x , P6 , F6 , k6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] m1 ) {  <CR> Evaluation h8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z5 = new Envelop ( "Taipei" , "Kaohsiung" , h8 ) ;  <CR> Z5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String J7 , String W3 , Evaluation d5 ) {  <CR> this . senderAddr = J7 ;  <CR> this . receiverAddr = W3 ;  <CR> this . letter = d5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String d9 , String F9 , String k2 , String N0 , String D4 ) {  <CR> this . title = d9 ;  <CR> this . receiver = F9 ;  <CR> this . content = k2 ;  <CR> this . sender = N0 ;  <CR> this . date = D4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object r5 ) {  <CR> Letter Y = ( Letter ) r5 ;  <CR> if ( this . x > Y . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int v8 ) {  <CR> list [ v8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] t8 ) {  <CR> int v8 ;  <CR> for ( v8 = list . length - 1 ; v8 >= 0 ; v8 -- ) {  <CR> int o7 = v8 ;  <CR> Letter w0 = new Letter ( v8 ) ;  <CR> Letter u4 = new Letter ( o7 - 1 ) ;  <CR> if ( w0 . compareTo ( u4 ) == 1 )  <CR> w0 . display ( v8 ) ;  <CR> }  <CR> }  <CR> Letter ( int l3 ) {  <CR> this . x = l3 ;  <CR> }  <CR> }  <CR>  <EOC> 