 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v8 , String C0 , String T7 , String p0 , String I ) {  <CR> super ( v8 , C0 , T7 , p0 , I ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String C8 , String j6 , String H2 , String v4 , String b1 ) {  <CR> super ( C8 , j6 , H2 , v4 , b1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String G8 , String L8 , Evaluation E8 ) {  <CR> this . senderAddr = G8 ;  <CR> this . receiverAddr = L8 ;  <CR> this . letter = E8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Q3 ) {  <CR> Evaluation O2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s5 = new Envelop ( "Taipei" , "Kaohsiung" , O2 ) ;  <CR> s5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String e1 , String w6 , String B , String h0 , String w ) {  <CR> this . title = e1 ;  <CR> this . receiver = w6 ;  <CR> this . content = B ;  <CR> this . sender = h0 ;  <CR> this . date = w ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int N1 ) {  <CR> this . x = N1 ;  <CR> }  <CR> public int compareTo ( Object f8 ) {  <CR> Letter O8 = ( Letter ) f8 ;  <CR> if ( this . x > O8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] F9 ) {  <CR> int Q0 ;  <CR> for ( Q0 = list . length - 1 ; Q0 >= 0 ; Q0 -- ) {  <CR> int e = Q0 ;  <CR> Letter S8 = new Letter ( Q0 ) ;  <CR> Letter y8 = new Letter ( e - 1 ) ;  <CR> if ( S8 . compareTo ( y8 ) == 1 )  <CR> S8 . display ( Q0 ) ;  <CR> }  <CR> }  <CR> public void display ( int Q0 ) {  <CR> list [ Q0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 