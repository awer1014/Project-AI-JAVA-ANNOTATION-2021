 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d9 , String E , String K , String S , String o5 ) {  <CR> super ( d9 , E , K , S , o5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L9 , String g5 , String e7 , String f1 , String a9 ) {  <CR> super ( L9 , g5 , e7 , f1 , a9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String A1 , String a5 , Evaluation E3 ) {  <CR> this . senderAddr = A1 ;  <CR> this . receiverAddr = a5 ;  <CR> this . letter = E3 ;  <CR> }  <CR> public static void main ( String [ ] p3 ) {  <CR> Evaluation q1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J4 = new Envelop ( "Taipei" , "Kaohsiung" , q1 ) ;  <CR> J4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String H8 , String g6 , String B7 , String W1 , String O0 ) {  <CR> this . title = H8 ;  <CR> this . receiver = g6 ;  <CR> this . content = B7 ;  <CR> this . sender = W1 ;  <CR> this . date = O0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Q5 ) {  <CR> list [ Q5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] b6 ) {  <CR> int Q5 ;  <CR> for ( Q5 = list . length - 1 ; Q5 >= 0 ; Q5 -- ) {  <CR> int l9 = Q5 ;  <CR> Letter N = new Letter ( Q5 ) ;  <CR> Letter m = new Letter ( l9 - 1 ) ;  <CR> if ( N . compareTo ( m ) == 1 )  <CR> N . display ( Q5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object A0 ) {  <CR> Letter T6 = ( Letter ) A0 ;  <CR> if ( this . x > T6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int O5 ) {  <CR> this . x = O5 ;  <CR> }  <CR> }  <CR>  <EOC> 