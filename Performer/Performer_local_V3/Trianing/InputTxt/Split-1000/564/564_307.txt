 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String W6 , String k , String P3 , String u4 , String J2 ) {  <CR> super ( W6 , k , P3 , u4 , J2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String s2 , String s0 , String L7 , String M6 , String a6 ) {  <CR> super ( s2 , s0 , L7 , M6 , a6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String S0 , String J8 , Evaluation X5 ) {  <CR> this . senderAddr = S0 ;  <CR> this . receiverAddr = J8 ;  <CR> this . letter = X5 ;  <CR> }  <CR> public static void main ( String [ ] P7 ) {  <CR> Evaluation N4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m7 = new Envelop ( "Taipei" , "Kaohsiung" , N4 ) ;  <CR> m7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String q6 , String i9 , String R7 , String J0 , String P7 ) {  <CR> this . title = q6 ;  <CR> this . receiver = i9 ;  <CR> this . content = R7 ;  <CR> this . sender = J0 ;  <CR> this . date = P7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t2 ) {  <CR> this . x = t2 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int M9 ) {  <CR> list [ M9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object p4 ) {  <CR> Letter j0 = ( Letter ) p4 ;  <CR> if ( this . x > j0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] D8 ) {  <CR> int M9 ;  <CR> for ( M9 = list . length - 1 ; M9 >= 0 ; M9 -- ) {  <CR> int G7 = M9 ;  <CR> Letter s8 = new Letter ( M9 ) ;  <CR> Letter C6 = new Letter ( G7 - 1 ) ;  <CR> if ( s8 . compareTo ( C6 ) == 1 )  <CR> s8 . display ( M9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 