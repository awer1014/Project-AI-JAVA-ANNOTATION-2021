 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X5 , String L1 , String S2 , String b1 , String G3 ) {  <CR> super ( X5 , L1 , S2 , b1 , G3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y6 , String O7 , String I3 , String h9 , String n9 ) {  <CR> super ( y6 , O7 , I3 , h9 , n9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String G5 , String N7 , Evaluation I1 ) {  <CR> this . senderAddr = G5 ;  <CR> this . receiverAddr = N7 ;  <CR> this . letter = I1 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] j5 ) {  <CR> Evaluation V9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W3 = new Envelop ( "Taipei" , "Kaohsiung" , V9 ) ;  <CR> W3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String t1 , String P9 , String Y2 , String G5 , String I7 ) {  <CR> this . title = t1 ;  <CR> this . receiver = P9 ;  <CR> this . content = Y2 ;  <CR> this . sender = G5 ;  <CR> this . date = I7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object x8 ) {  <CR> Letter l4 = ( Letter ) x8 ;  <CR> if ( this . x > l4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int S1 ) {  <CR> list [ S1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int E5 ) {  <CR> this . x = E5 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] W3 ) {  <CR> int S1 ;  <CR> for ( S1 = list . length - 1 ; S1 >= 0 ; S1 -- ) {  <CR> int T8 = S1 ;  <CR> Letter A0 = new Letter ( S1 ) ;  <CR> Letter S3 = new Letter ( T8 - 1 ) ;  <CR> if ( A0 . compareTo ( S3 ) == 1 )  <CR> A0 . display ( S1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 