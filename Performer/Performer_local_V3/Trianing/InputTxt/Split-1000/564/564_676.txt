 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X2 , String x3 , String g3 , String y2 , String v ) {  <CR> super ( X2 , x3 , g3 , y2 , v ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y8 , String g9 , String J1 , String z0 , String F6 ) {  <CR> super ( y8 , g9 , J1 , z0 , F6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] q4 ) {  <CR> Evaluation L = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m8 = new Envelop ( "Taipei" , "Kaohsiung" , L ) ;  <CR> m8 . display ( ) ;  <CR> }  <CR> public Envelop ( String P9 , String c2 , Evaluation l7 ) {  <CR> this . senderAddr = P9 ;  <CR> this . receiverAddr = c2 ;  <CR> this . letter = l7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String S3 , String h8 , String e2 , String n4 , String i2 ) {  <CR> this . title = S3 ;  <CR> this . receiver = h8 ;  <CR> this . content = e2 ;  <CR> this . sender = n4 ;  <CR> this . date = i2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int r1 ) {  <CR> this . x = r1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int F7 ) {  <CR> list [ F7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object O7 ) {  <CR> Letter q3 = ( Letter ) O7 ;  <CR> if ( this . x > q3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] e7 ) {  <CR> int F7 ;  <CR> for ( F7 = list . length - 1 ; F7 >= 0 ; F7 -- ) {  <CR> int p4 = F7 ;  <CR> Letter V0 = new Letter ( F7 ) ;  <CR> Letter V8 = new Letter ( p4 - 1 ) ;  <CR> if ( V0 . compareTo ( V8 ) == 1 )  <CR> V0 . display ( F7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 