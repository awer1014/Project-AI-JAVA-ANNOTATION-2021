 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i7 , String H4 , String F5 , String F7 , String T8 ) {  <CR> super ( i7 , H4 , F5 , F7 , T8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v9 , String T1 , String e1 , String c3 , String h ) {  <CR> super ( v9 , T1 , e1 , c3 , h ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String b , String W0 , Evaluation D ) {  <CR> this . senderAddr = b ;  <CR> this . receiverAddr = W0 ;  <CR> this . letter = D ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] D2 ) {  <CR> Evaluation k2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I5 = new Envelop ( "Taipei" , "Kaohsiung" , k2 ) ;  <CR> I5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String w , String e4 , String d4 , String f9 , String L8 ) {  <CR> this . title = w ;  <CR> this . receiver = e4 ;  <CR> this . content = d4 ;  <CR> this . sender = f9 ;  <CR> this . date = L8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] G1 ) {  <CR> int A1 ;  <CR> for ( A1 = list . length - 1 ; A1 >= 0 ; A1 -- ) {  <CR> int t1 = A1 ;  <CR> Letter q8 = new Letter ( A1 ) ;  <CR> Letter L2 = new Letter ( t1 - 1 ) ;  <CR> if ( q8 . compareTo ( L2 ) == 1 )  <CR> q8 . display ( A1 ) ;  <CR> }  <CR> }  <CR> public void display ( int A1 ) {  <CR> list [ A1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object T2 ) {  <CR> Letter A5 = ( Letter ) T2 ;  <CR> if ( this . x > A5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int F5 ) {  <CR> this . x = F5 ;  <CR> }  <CR> }  <CR>  <EOC> 