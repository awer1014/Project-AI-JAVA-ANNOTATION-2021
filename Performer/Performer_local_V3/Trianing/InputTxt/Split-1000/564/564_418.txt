 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R1 , String d7 , String L9 , String E , String q ) {  <CR> super ( R1 , d7 , L9 , E , q ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i6 , String N1 , String w6 , String Y2 , String B0 ) {  <CR> super ( i6 , N1 , w6 , Y2 , B0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] a5 ) {  <CR> Evaluation P2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G2 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> G2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Q9 , String Z , Evaluation W1 ) {  <CR> this . senderAddr = Q9 ;  <CR> this . receiverAddr = Z ;  <CR> this . letter = W1 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String I0 , String r , String u5 , String O2 , String E3 ) {  <CR> this . title = I0 ;  <CR> this . receiver = r ;  <CR> this . content = u5 ;  <CR> this . sender = O2 ;  <CR> this . date = E3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object H ) {  <CR> Letter j = ( Letter ) H ;  <CR> if ( this . x > j . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int w6 ) {  <CR> list [ w6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int y2 ) {  <CR> this . x = y2 ;  <CR> }  <CR> public static void main ( String [ ] X0 ) {  <CR> int w6 ;  <CR> for ( w6 = list . length - 1 ; w6 >= 0 ; w6 -- ) {  <CR> int k7 = w6 ;  <CR> Letter S9 = new Letter ( w6 ) ;  <CR> Letter I9 = new Letter ( k7 - 1 ) ;  <CR> if ( S9 . compareTo ( I9 ) == 1 )  <CR> S9 . display ( w6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 