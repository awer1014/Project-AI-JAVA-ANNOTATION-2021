 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H7 , String F , String s6 , String Z4 , String f3 ) {  <CR> super ( H7 , F , s6 , Z4 , f3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String b3 , String B5 , String A1 , String G0 , String o9 ) {  <CR> super ( b3 , B5 , A1 , G0 , o9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String T6 , String E0 , Evaluation L3 ) {  <CR> this . senderAddr = T6 ;  <CR> this . receiverAddr = E0 ;  <CR> this . letter = L3 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Z8 ) {  <CR> Evaluation W4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y2 = new Envelop ( "Taipei" , "Kaohsiung" , W4 ) ;  <CR> y2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String a3 , String s0 , String P8 , String h1 , String s1 ) {  <CR> this . title = a3 ;  <CR> this . receiver = s0 ;  <CR> this . content = P8 ;  <CR> this . sender = h1 ;  <CR> this . date = s1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] T ) {  <CR> int o5 ;  <CR> for ( o5 = list . length - 1 ; o5 >= 0 ; o5 -- ) {  <CR> int E0 = o5 ;  <CR> Letter L8 = new Letter ( o5 ) ;  <CR> Letter D1 = new Letter ( E0 - 1 ) ;  <CR> if ( L8 . compareTo ( D1 ) == 1 )  <CR> L8 . display ( o5 ) ;  <CR> }  <CR> }  <CR> Letter ( int j3 ) {  <CR> this . x = j3 ;  <CR> }  <CR> public void display ( int o5 ) {  <CR> list [ o5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object w4 ) {  <CR> Letter M2 = ( Letter ) w4 ;  <CR> if ( this . x > M2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 