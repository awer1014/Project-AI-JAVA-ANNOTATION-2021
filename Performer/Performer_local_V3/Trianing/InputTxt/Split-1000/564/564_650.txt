 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H5 , String B7 , String u7 , String n1 , String X8 ) {  <CR> super ( H5 , B7 , u7 , n1 , X8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String H3 , String z2 , String V7 , String s7 , String l9 ) {  <CR> super ( H3 , z2 , V7 , s7 , l9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String K9 , String g , Evaluation b2 ) {  <CR> this . senderAddr = K9 ;  <CR> this . receiverAddr = g ;  <CR> this . letter = b2 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] X ) {  <CR> Evaluation U4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e7 = new Envelop ( "Taipei" , "Kaohsiung" , U4 ) ;  <CR> e7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String d1 , String u1 , String C , String X6 , String M7 ) {  <CR> this . title = d1 ;  <CR> this . receiver = u1 ;  <CR> this . content = C ;  <CR> this . sender = X6 ;  <CR> this . date = M7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object o4 ) {  <CR> Letter z = ( Letter ) o4 ;  <CR> if ( this . x > z . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int C1 ) {  <CR> this . x = C1 ;  <CR> }  <CR> public void display ( int u9 ) {  <CR> list [ u9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y2 ) {  <CR> int u9 ;  <CR> for ( u9 = list . length - 1 ; u9 >= 0 ; u9 -- ) {  <CR> int A4 = u9 ;  <CR> Letter o5 = new Letter ( u9 ) ;  <CR> Letter H3 = new Letter ( A4 - 1 ) ;  <CR> if ( o5 . compareTo ( H3 ) == 1 )  <CR> o5 . display ( u9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 