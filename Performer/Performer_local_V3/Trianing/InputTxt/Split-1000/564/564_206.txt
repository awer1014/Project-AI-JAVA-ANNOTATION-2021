 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i7 , String z , String V7 , String Y3 , String i3 ) {  <CR> super ( i7 , z , V7 , Y3 , i3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O4 , String W4 , String L6 , String P0 , String E1 ) {  <CR> super ( O4 , W4 , L6 , P0 , E1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String y4 , String s8 , Evaluation t5 ) {  <CR> this . senderAddr = y4 ;  <CR> this . receiverAddr = s8 ;  <CR> this . letter = t5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] K4 ) {  <CR> Evaluation y9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b = new Envelop ( "Taipei" , "Kaohsiung" , y9 ) ;  <CR> b . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String V , String e0 , String k4 , String q , String i9 ) {  <CR> this . title = V ;  <CR> this . receiver = e0 ;  <CR> this . content = k4 ;  <CR> this . sender = q ;  <CR> this . date = i9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object i ) {  <CR> Letter V4 = ( Letter ) i ;  <CR> if ( this . x > V4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] r1 ) {  <CR> int y2 ;  <CR> for ( y2 = list . length - 1 ; y2 >= 0 ; y2 -- ) {  <CR> int q6 = y2 ;  <CR> Letter k4 = new Letter ( y2 ) ;  <CR> Letter r4 = new Letter ( q6 - 1 ) ;  <CR> if ( k4 . compareTo ( r4 ) == 1 )  <CR> k4 . display ( y2 ) ;  <CR> }  <CR> }  <CR> Letter ( int s9 ) {  <CR> this . x = s9 ;  <CR> }  <CR> public void display ( int y2 ) {  <CR> list [ y2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 