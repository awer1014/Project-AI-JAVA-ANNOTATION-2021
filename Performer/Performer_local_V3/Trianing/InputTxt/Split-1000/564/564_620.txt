 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L9 , String g5 , String u5 , String p6 , String P8 ) {  <CR> super ( L9 , g5 , u5 , p6 , P8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J4 , String V1 , String Q2 , String E6 , String a2 ) {  <CR> super ( J4 , V1 , Q2 , E6 , a2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] F3 ) {  <CR> Evaluation A9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N1 = new Envelop ( "Taipei" , "Kaohsiung" , A9 ) ;  <CR> N1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z3 , String X9 , Evaluation V6 ) {  <CR> this . senderAddr = Z3 ;  <CR> this . receiverAddr = X9 ;  <CR> this . letter = V6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String I0 , String V9 , String U6 , String T7 , String u4 ) {  <CR> this . title = I0 ;  <CR> this . receiver = V9 ;  <CR> this . content = U6 ;  <CR> this . sender = T7 ;  <CR> this . date = u4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int H4 ) {  <CR> this . x = H4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M8 ) {  <CR> list [ M8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] W4 ) {  <CR> int M8 ;  <CR> for ( M8 = list . length - 1 ; M8 >= 0 ; M8 -- ) {  <CR> int z5 = M8 ;  <CR> Letter s8 = new Letter ( M8 ) ;  <CR> Letter w6 = new Letter ( z5 - 1 ) ;  <CR> if ( s8 . compareTo ( w6 ) == 1 )  <CR> s8 . display ( M8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object k1 ) {  <CR> Letter d1 = ( Letter ) k1 ;  <CR> if ( this . x > d1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 