 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C8 , String G7 , String t4 , String x8 , String W3 ) {  <CR> super ( C8 , G7 , t4 , x8 , W3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z4 , String t2 , String T6 , String L8 , String z2 ) {  <CR> super ( z4 , t2 , T6 , L8 , z2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] x2 ) {  <CR> Evaluation I6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p2 = new Envelop ( "Taipei" , "Kaohsiung" , I6 ) ;  <CR> p2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String C6 , String X6 , Evaluation c0 ) {  <CR> this . senderAddr = C6 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = c0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String T5 , String Z , String q , String o6 , String h3 ) {  <CR> this . title = T5 ;  <CR> this . receiver = Z ;  <CR> this . content = q ;  <CR> this . sender = o6 ;  <CR> this . date = h3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i9 ) {  <CR> int n1 ;  <CR> for ( n1 = list . length - 1 ; n1 >= 0 ; n1 -- ) {  <CR> int I1 = n1 ;  <CR> Letter B = new Letter ( n1 ) ;  <CR> Letter h4 = new Letter ( I1 - 1 ) ;  <CR> if ( B . compareTo ( h4 ) == 1 )  <CR> B . display ( n1 ) ;  <CR> }  <CR> }  <CR> public void display ( int n1 ) {  <CR> list [ n1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object m6 ) {  <CR> Letter a7 = ( Letter ) m6 ;  <CR> if ( this . x > a7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int l5 ) {  <CR> this . x = l5 ;  <CR> }  <CR> }  <CR>  <EOC> 