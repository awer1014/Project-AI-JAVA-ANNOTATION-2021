 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g1 , String D2 , String c3 , String L0 , String W1 ) {  <CR> super ( g1 , D2 , c3 , L0 , W1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l7 , String e3 , String U2 , String L6 , String v6 ) {  <CR> super ( l7 , e3 , U2 , L6 , v6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] P0 ) {  <CR> Evaluation z7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l0 = new Envelop ( "Taipei" , "Kaohsiung" , z7 ) ;  <CR> l0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String d6 , String Q8 , Evaluation g4 ) {  <CR> this . senderAddr = d6 ;  <CR> this . receiverAddr = Q8 ;  <CR> this . letter = g4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String V6 , String m9 , String L0 , String w6 , String H4 ) {  <CR> this . title = V6 ;  <CR> this . receiver = m9 ;  <CR> this . content = L0 ;  <CR> this . sender = w6 ;  <CR> this . date = H4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int v4 ) {  <CR> this . x = v4 ;  <CR> }  <CR> public void display ( int L2 ) {  <CR> list [ L2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] j ) {  <CR> int L2 ;  <CR> for ( L2 = list . length - 1 ; L2 >= 0 ; L2 -- ) {  <CR> int E0 = L2 ;  <CR> Letter N6 = new Letter ( L2 ) ;  <CR> Letter y1 = new Letter ( E0 - 1 ) ;  <CR> if ( N6 . compareTo ( y1 ) == 1 )  <CR> N6 . display ( L2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object g0 ) {  <CR> Letter B2 = ( Letter ) g0 ;  <CR> if ( this . x > B2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 