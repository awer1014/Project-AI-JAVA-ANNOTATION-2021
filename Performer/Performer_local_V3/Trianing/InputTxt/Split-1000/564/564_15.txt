 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V4 , String P2 , String m4 , String P4 , String n4 ) {  <CR> super ( V4 , P2 , m4 , P4 , n4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b7 , String S2 , String c0 , String h4 , String d7 ) {  <CR> super ( b7 , S2 , c0 , h4 , d7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] f ) {  <CR> Evaluation Z0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B = new Envelop ( "Taipei" , "Kaohsiung" , Z0 ) ;  <CR> B . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String T5 , String w9 , Evaluation a8 ) {  <CR> this . senderAddr = T5 ;  <CR> this . receiverAddr = w9 ;  <CR> this . letter = a8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String l5 , String H3 , String S0 , String F3 , String Q8 ) {  <CR> this . title = l5 ;  <CR> this . receiver = H3 ;  <CR> this . content = S0 ;  <CR> this . sender = F3 ;  <CR> this . date = Q8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int z0 ) {  <CR> list [ z0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] z4 ) {  <CR> int z0 ;  <CR> for ( z0 = list . length - 1 ; z0 >= 0 ; z0 -- ) {  <CR> int G2 = z0 ;  <CR> Letter y0 = new Letter ( z0 ) ;  <CR> Letter X0 = new Letter ( G2 - 1 ) ;  <CR> if ( y0 . compareTo ( X0 ) == 1 )  <CR> y0 . display ( z0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object h0 ) {  <CR> Letter a2 = ( Letter ) h0 ;  <CR> if ( this . x > a2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int U1 ) {  <CR> this . x = U1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 