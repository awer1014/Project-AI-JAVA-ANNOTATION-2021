 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J1 , String u9 , String Q1 , String H7 , String z7 ) {  <CR> super ( J1 , u9 , Q1 , H7 , z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V1 , String j5 , String O2 , String x6 , String D6 ) {  <CR> super ( V1 , j5 , O2 , x6 , D6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] s7 ) {  <CR> Evaluation K = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t2 = new Envelop ( "Taipei" , "Kaohsiung" , K ) ;  <CR> t2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String c2 , String H1 , Evaluation Y3 ) {  <CR> this . senderAddr = c2 ;  <CR> this . receiverAddr = H1 ;  <CR> this . letter = Y3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String i5 , String p6 , String z8 , String x0 , String h7 ) {  <CR> this . title = i5 ;  <CR> this . receiver = p6 ;  <CR> this . content = z8 ;  <CR> this . sender = x0 ;  <CR> this . date = h7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object l6 ) {  <CR> Letter l8 = ( Letter ) l6 ;  <CR> if ( this . x > l8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] F9 ) {  <CR> int P6 ;  <CR> for ( P6 = list . length - 1 ; P6 >= 0 ; P6 -- ) {  <CR> int E8 = P6 ;  <CR> Letter O1 = new Letter ( P6 ) ;  <CR> Letter s2 = new Letter ( E8 - 1 ) ;  <CR> if ( O1 . compareTo ( s2 ) == 1 )  <CR> O1 . display ( P6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int r3 ) {  <CR> this . x = r3 ;  <CR> }  <CR> public void display ( int P6 ) {  <CR> list [ P6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 