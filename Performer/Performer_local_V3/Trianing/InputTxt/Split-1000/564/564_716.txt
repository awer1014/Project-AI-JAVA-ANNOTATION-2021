 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X8 , String a , String O6 , String S4 , String G2 ) {  <CR> super ( X8 , a , O6 , S4 , G2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W5 , String R5 , String i3 , String r7 , String P7 ) {  <CR> super ( W5 , R5 , i3 , r7 , P7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String B4 , String I8 , Evaluation o1 ) {  <CR> this . senderAddr = B4 ;  <CR> this . receiverAddr = I8 ;  <CR> this . letter = o1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] T ) {  <CR> Evaluation M8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b6 = new Envelop ( "Taipei" , "Kaohsiung" , M8 ) ;  <CR> b6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String y0 , String Z4 , String x5 , String l2 , String z3 ) {  <CR> this . title = y0 ;  <CR> this . receiver = Z4 ;  <CR> this . content = x5 ;  <CR> this . sender = l2 ;  <CR> this . date = z3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] A1 ) {  <CR> int D1 ;  <CR> for ( D1 = list . length - 1 ; D1 >= 0 ; D1 -- ) {  <CR> int C = D1 ;  <CR> Letter K0 = new Letter ( D1 ) ;  <CR> Letter Y2 = new Letter ( C - 1 ) ;  <CR> if ( K0 . compareTo ( Y2 ) == 1 )  <CR> K0 . display ( D1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object v7 ) {  <CR> Letter M2 = ( Letter ) v7 ;  <CR> if ( this . x > M2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int q4 ) {  <CR> this . x = q4 ;  <CR> }  <CR> public void display ( int D1 ) {  <CR> list [ D1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 