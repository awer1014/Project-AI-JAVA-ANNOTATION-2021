 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C9 , String r0 , String c3 , String M9 , String E ) {  <CR> super ( C9 , r0 , c3 , M9 , E ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J7 , String W5 , String c , String f9 , String Z6 ) {  <CR> super ( J7 , W5 , c , f9 , Z6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x8 ) {  <CR> Evaluation Y1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v = new Envelop ( "Taipei" , "Kaohsiung" , Y1 ) ;  <CR> v . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String i0 , String P6 , Evaluation m1 ) {  <CR> this . senderAddr = i0 ;  <CR> this . receiverAddr = P6 ;  <CR> this . letter = m1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Y0 , String M1 , String W5 , String D6 , String R9 ) {  <CR> this . title = Y0 ;  <CR> this . receiver = M1 ;  <CR> this . content = W5 ;  <CR> this . sender = D6 ;  <CR> this . date = R9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int r0 ) {  <CR> list [ r0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object I ) {  <CR> Letter G4 = ( Letter ) I ;  <CR> if ( this . x > G4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] b ) {  <CR> int r0 ;  <CR> for ( r0 = list . length - 1 ; r0 >= 0 ; r0 -- ) {  <CR> int Q0 = r0 ;  <CR> Letter H = new Letter ( r0 ) ;  <CR> Letter b4 = new Letter ( Q0 - 1 ) ;  <CR> if ( H . compareTo ( b4 ) == 1 )  <CR> H . display ( r0 ) ;  <CR> }  <CR> }  <CR> Letter ( int C3 ) {  <CR> this . x = C3 ;  <CR> }  <CR> }  <CR>  <EOC> 