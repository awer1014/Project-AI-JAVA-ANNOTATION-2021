 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B3 , String a1 , String A1 , String y6 , String H1 ) {  <CR> super ( B3 , a1 , A1 , y6 , H1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P9 , String p1 , String S5 , String g3 , String L8 ) {  <CR> super ( P9 , p1 , S5 , g3 , L8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] R6 ) {  <CR> Evaluation u4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G9 = new Envelop ( "Taipei" , "Kaohsiung" , u4 ) ;  <CR> G9 . display ( ) ;  <CR> }  <CR> public Envelop ( String F8 , String S3 , Evaluation n ) {  <CR> this . senderAddr = F8 ;  <CR> this . receiverAddr = S3 ;  <CR> this . letter = n ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String P8 , String y1 , String m7 , String c7 , String k6 ) {  <CR> this . title = P8 ;  <CR> this . receiver = y1 ;  <CR> this . content = m7 ;  <CR> this . sender = c7 ;  <CR> this . date = k6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int E3 ) {  <CR> this . x = E3 ;  <CR> }  <CR> public void display ( int Q5 ) {  <CR> list [ Q5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] G3 ) {  <CR> int Q5 ;  <CR> for ( Q5 = list . length - 1 ; Q5 >= 0 ; Q5 -- ) {  <CR> int F7 = Q5 ;  <CR> Letter y6 = new Letter ( Q5 ) ;  <CR> Letter w2 = new Letter ( F7 - 1 ) ;  <CR> if ( y6 . compareTo ( w2 ) == 1 )  <CR> y6 . display ( Q5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object i4 ) {  <CR> Letter Q6 = ( Letter ) i4 ;  <CR> if ( this . x > Q6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 