 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o , String j9 , String P8 , String h9 , String f7 ) {  <CR> super ( o , j9 , P8 , h9 , f7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String o2 , String R8 , String H4 , String x8 , String R1 ) {  <CR> super ( o2 , R8 , H4 , x8 , R1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] A ) {  <CR> Evaluation M9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I0 = new Envelop ( "Taipei" , "Kaohsiung" , M9 ) ;  <CR> I0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Y9 , String P9 , Evaluation Y1 ) {  <CR> this . senderAddr = Y9 ;  <CR> this . receiverAddr = P9 ;  <CR> this . letter = Y1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String W6 , String x5 , String C0 , String g8 , String U ) {  <CR> this . title = W6 ;  <CR> this . receiver = x5 ;  <CR> this . content = C0 ;  <CR> this . sender = g8 ;  <CR> this . date = U ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int U3 ) {  <CR> list [ U3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object c2 ) {  <CR> Letter h0 = ( Letter ) c2 ;  <CR> if ( this . x > h0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int K8 ) {  <CR> this . x = K8 ;  <CR> }  <CR> public static void main ( String [ ] L8 ) {  <CR> int U3 ;  <CR> for ( U3 = list . length - 1 ; U3 >= 0 ; U3 -- ) {  <CR> int P9 = U3 ;  <CR> Letter d9 = new Letter ( U3 ) ;  <CR> Letter E8 = new Letter ( P9 - 1 ) ;  <CR> if ( d9 . compareTo ( E8 ) == 1 )  <CR> d9 . display ( U3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 