 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H6 , String c3 , String Y6 , String t , String w0 ) {  <CR> super ( H6 , c3 , Y6 , t , w0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String U2 , String V , String h5 , String P4 , String v2 ) {  <CR> super ( U2 , V , h5 , P4 , v2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String N , String I2 , Evaluation P9 ) {  <CR> this . senderAddr = N ;  <CR> this . receiverAddr = I2 ;  <CR> this . letter = P9 ;  <CR> }  <CR> public static void main ( String [ ] d8 ) {  <CR> Evaluation B1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D = new Envelop ( "Taipei" , "Kaohsiung" , B1 ) ;  <CR> D . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String g0 , String h6 , String P9 , String g7 , String e7 ) {  <CR> this . title = g0 ;  <CR> this . receiver = h6 ;  <CR> this . content = P9 ;  <CR> this . sender = g7 ;  <CR> this . date = e7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int s1 ) {  <CR> list [ s1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int k9 ) {  <CR> this . x = k9 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] a2 ) {  <CR> int s1 ;  <CR> for ( s1 = list . length - 1 ; s1 >= 0 ; s1 -- ) {  <CR> int j8 = s1 ;  <CR> Letter D9 = new Letter ( s1 ) ;  <CR> Letter D5 = new Letter ( j8 - 1 ) ;  <CR> if ( D9 . compareTo ( D5 ) == 1 )  <CR> D9 . display ( s1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object q8 ) {  <CR> Letter D8 = ( Letter ) q8 ;  <CR> if ( this . x > D8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 