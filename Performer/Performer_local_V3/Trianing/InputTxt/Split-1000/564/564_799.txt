 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O9 , String C7 , String w1 , String p6 , String G0 ) {  <CR> super ( O9 , C7 , w1 , p6 , G0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q9 , String u1 , String R2 , String n3 , String x8 ) {  <CR> super ( q9 , u1 , R2 , n3 , x8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] c ) {  <CR> Evaluation N6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a2 = new Envelop ( "Taipei" , "Kaohsiung" , N6 ) ;  <CR> a2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String p9 , String a1 , Evaluation B1 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = a1 ;  <CR> this . letter = B1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String G9 , String F7 , String A7 , String p4 , String m7 ) {  <CR> this . title = G9 ;  <CR> this . receiver = F7 ;  <CR> this . content = A7 ;  <CR> this . sender = p4 ;  <CR> this . date = m7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] p5 ) {  <CR> int z5 ;  <CR> for ( z5 = list . length - 1 ; z5 >= 0 ; z5 -- ) {  <CR> int B6 = z5 ;  <CR> Letter R = new Letter ( z5 ) ;  <CR> Letter l4 = new Letter ( B6 - 1 ) ;  <CR> if ( R . compareTo ( l4 ) == 1 )  <CR> R . display ( z5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object F7 ) {  <CR> Letter p = ( Letter ) F7 ;  <CR> if ( this . x > p . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int L7 ) {  <CR> this . x = L7 ;  <CR> }  <CR> public void display ( int z5 ) {  <CR> list [ z5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 