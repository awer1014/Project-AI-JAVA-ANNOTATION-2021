 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E8 , String g5 , String h0 , String X5 , String N8 ) {  <CR> super ( E8 , g5 , h0 , X5 , N8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n , String i4 , String o2 , String A5 , String I6 ) {  <CR> super ( n , i4 , o2 , A5 , I6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String Y4 , String N2 , Evaluation R3 ) {  <CR> this . senderAddr = Y4 ;  <CR> this . receiverAddr = N2 ;  <CR> this . letter = R3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] i6 ) {  <CR> Evaluation v5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X1 = new Envelop ( "Taipei" , "Kaohsiung" , v5 ) ;  <CR> X1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Z9 , String t5 , String x8 , String k0 , String W8 ) {  <CR> this . title = Z9 ;  <CR> this . receiver = t5 ;  <CR> this . content = x8 ;  <CR> this . sender = k0 ;  <CR> this . date = W8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] j7 ) {  <CR> int O6 ;  <CR> for ( O6 = list . length - 1 ; O6 >= 0 ; O6 -- ) {  <CR> int D9 = O6 ;  <CR> Letter F2 = new Letter ( O6 ) ;  <CR> Letter E7 = new Letter ( D9 - 1 ) ;  <CR> if ( F2 . compareTo ( E7 ) == 1 )  <CR> F2 . display ( O6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object N2 ) {  <CR> Letter W2 = ( Letter ) N2 ;  <CR> if ( this . x > W2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int r ) {  <CR> this . x = r ;  <CR> }  <CR> public void display ( int O6 ) {  <CR> list [ O6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 