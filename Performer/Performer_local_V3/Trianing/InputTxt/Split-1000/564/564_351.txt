 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C8 , String C5 , String D7 , String a2 , String D1 ) {  <CR> super ( C8 , C5 , D7 , a2 , D1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z4 , String a4 , String X2 , String p0 , String H2 ) {  <CR> super ( Z4 , a4 , X2 , p0 , H2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String b0 , String T7 , Evaluation u0 ) {  <CR> this . senderAddr = b0 ;  <CR> this . receiverAddr = T7 ;  <CR> this . letter = u0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] o5 ) {  <CR> Evaluation m4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g5 = new Envelop ( "Taipei" , "Kaohsiung" , m4 ) ;  <CR> g5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String B6 , String k2 , String D2 , String O0 , String D8 ) {  <CR> this . title = B6 ;  <CR> this . receiver = k2 ;  <CR> this . content = D2 ;  <CR> this . sender = O0 ;  <CR> this . date = D8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int P3 ) {  <CR> this . x = P3 ;  <CR> }  <CR> public void display ( int T8 ) {  <CR> list [ T8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] c9 ) {  <CR> int T8 ;  <CR> for ( T8 = list . length - 1 ; T8 >= 0 ; T8 -- ) {  <CR> int d3 = T8 ;  <CR> Letter F = new Letter ( T8 ) ;  <CR> Letter S1 = new Letter ( d3 - 1 ) ;  <CR> if ( F . compareTo ( S1 ) == 1 )  <CR> F . display ( T8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object D5 ) {  <CR> Letter G2 = ( Letter ) D5 ;  <CR> if ( this . x > G2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 