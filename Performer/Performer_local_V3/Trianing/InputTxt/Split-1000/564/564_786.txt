 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O9 , String d9 , String J9 , String l5 , String K0 ) {  <CR> super ( O9 , d9 , J9 , l5 , K0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String P6 , String b8 , String p4 , String R4 , String v4 ) {  <CR> super ( P6 , b8 , p4 , R4 , v4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] r4 ) {  <CR> Evaluation Z0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q2 = new Envelop ( "Taipei" , "Kaohsiung" , Z0 ) ;  <CR> Q2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String V1 , String k0 , Evaluation V9 ) {  <CR> this . senderAddr = V1 ;  <CR> this . receiverAddr = k0 ;  <CR> this . letter = V9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String w8 , String D7 , String f7 , String j , String j6 ) {  <CR> this . title = w8 ;  <CR> this . receiver = D7 ;  <CR> this . content = f7 ;  <CR> this . sender = j ;  <CR> this . date = j6 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] o5 ) {  <CR> int Y4 ;  <CR> for ( Y4 = list . length - 1 ; Y4 >= 0 ; Y4 -- ) {  <CR> int j1 = Y4 ;  <CR> Letter n0 = new Letter ( Y4 ) ;  <CR> Letter y9 = new Letter ( j1 - 1 ) ;  <CR> if ( n0 . compareTo ( y9 ) == 1 )  <CR> n0 . display ( Y4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Z8 ) {  <CR> Letter k = ( Letter ) Z8 ;  <CR> if ( this . x > k . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int v7 ) {  <CR> this . x = v7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int Y4 ) {  <CR> list [ Y4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 