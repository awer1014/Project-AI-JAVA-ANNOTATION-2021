 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o0 , String X9 , String A3 , String y3 , String y5 ) {  <CR> super ( o0 , X9 , A3 , y3 , y5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T1 , String Z8 , String l6 , String C , String Q1 ) {  <CR> super ( T1 , Z8 , l6 , C , Q1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String R1 , String X7 , Evaluation C0 ) {  <CR> this . senderAddr = R1 ;  <CR> this . receiverAddr = X7 ;  <CR> this . letter = C0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Q ) {  <CR> Evaluation q5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I9 = new Envelop ( "Taipei" , "Kaohsiung" , q5 ) ;  <CR> I9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String M6 , String b2 , String E8 , String P1 , String O8 ) {  <CR> this . title = M6 ;  <CR> this . receiver = b2 ;  <CR> this . content = E8 ;  <CR> this . sender = P1 ;  <CR> this . date = O8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int d2 ) {  <CR> list [ d2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] d ) {  <CR> int d2 ;  <CR> for ( d2 = list . length - 1 ; d2 >= 0 ; d2 -- ) {  <CR> int C = d2 ;  <CR> Letter C7 = new Letter ( d2 ) ;  <CR> Letter o8 = new Letter ( C - 1 ) ;  <CR> if ( C7 . compareTo ( o8 ) == 1 )  <CR> C7 . display ( d2 ) ;  <CR> }  <CR> }  <CR> Letter ( int A8 ) {  <CR> this . x = A8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object c4 ) {  <CR> Letter q5 = ( Letter ) c4 ;  <CR> if ( this . x > q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 