 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W8 , String f1 , String z7 , String u0 , String Z1 ) {  <CR> super ( W8 , f1 , z7 , u0 , Z1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String d3 , String K7 , String v0 , String A6 , String i9 ) {  <CR> super ( d3 , K7 , v0 , A6 , i9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String E1 , String L2 , Evaluation q8 ) {  <CR> this . senderAddr = E1 ;  <CR> this . receiverAddr = L2 ;  <CR> this . letter = q8 ;  <CR> }  <CR> public static void main ( String [ ] i4 ) {  <CR> Evaluation J7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D1 = new Envelop ( "Taipei" , "Kaohsiung" , J7 ) ;  <CR> D1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String x9 , String p8 , String b5 , String u1 , String L ) {  <CR> this . title = x9 ;  <CR> this . receiver = p8 ;  <CR> this . content = b5 ;  <CR> this . sender = u1 ;  <CR> this . date = L ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] t ) {  <CR> int L4 ;  <CR> for ( L4 = list . length - 1 ; L4 >= 0 ; L4 -- ) {  <CR> int m5 = L4 ;  <CR> Letter T2 = new Letter ( L4 ) ;  <CR> Letter j6 = new Letter ( m5 - 1 ) ;  <CR> if ( T2 . compareTo ( j6 ) == 1 )  <CR> T2 . display ( L4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object J2 ) {  <CR> Letter R1 = ( Letter ) J2 ;  <CR> if ( this . x > R1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int L4 ) {  <CR> list [ L4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int q4 ) {  <CR> this . x = q4 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 