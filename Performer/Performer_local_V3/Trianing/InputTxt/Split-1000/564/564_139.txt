 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i1 , String U , String E1 , String x3 , String m9 ) {  <CR> super ( i1 , U , E1 , x3 , m9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i6 , String R6 , String Z1 , String M1 , String A4 ) {  <CR> super ( i6 , R6 , Z1 , M1 , A4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String d1 , String j1 , Evaluation H ) {  <CR> this . senderAddr = d1 ;  <CR> this . receiverAddr = j1 ;  <CR> this . letter = H ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] b1 ) {  <CR> Evaluation N0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B6 = new Envelop ( "Taipei" , "Kaohsiung" , N0 ) ;  <CR> B6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String A6 , String V3 , String u0 , String Y9 , String U5 ) {  <CR> this . title = A6 ;  <CR> this . receiver = V3 ;  <CR> this . content = u0 ;  <CR> this . sender = Y9 ;  <CR> this . date = U5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object V3 ) {  <CR> Letter H9 = ( Letter ) V3 ;  <CR> if ( this . x > H9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i ) {  <CR> list [ i ] . Display ( ) ;  <CR> }  <CR> Letter ( int I ) {  <CR> this . x = I ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] I9 ) {  <CR> int i ;  <CR> for ( i = list . length - 1 ; i >= 0 ; i -- ) {  <CR> int k9 = i ;  <CR> Letter D5 = new Letter ( i ) ;  <CR> Letter I3 = new Letter ( k9 - 1 ) ;  <CR> if ( D5 . compareTo ( I3 ) == 1 )  <CR> D5 . display ( i ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 