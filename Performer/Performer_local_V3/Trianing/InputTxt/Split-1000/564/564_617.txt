 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d3 , String E8 , String q9 , String Q5 , String p3 ) {  <CR> super ( d3 , E8 , q9 , Q5 , p3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String K8 , String I2 , String d4 , String H3 , String u3 ) {  <CR> super ( K8 , I2 , d4 , H3 , u3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Z0 ) {  <CR> Evaluation B7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A8 = new Envelop ( "Taipei" , "Kaohsiung" , B7 ) ;  <CR> A8 . display ( ) ;  <CR> }  <CR> public Envelop ( String x4 , String h8 , Evaluation T4 ) {  <CR> this . senderAddr = x4 ;  <CR> this . receiverAddr = h8 ;  <CR> this . letter = T4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String W9 , String T6 , String o6 , String v0 , String Y ) {  <CR> this . title = W9 ;  <CR> this . receiver = T6 ;  <CR> this . content = o6 ;  <CR> this . sender = v0 ;  <CR> this . date = Y ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] h8 ) {  <CR> int I7 ;  <CR> for ( I7 = list . length - 1 ; I7 >= 0 ; I7 -- ) {  <CR> int w6 = I7 ;  <CR> Letter K9 = new Letter ( I7 ) ;  <CR> Letter u6 = new Letter ( w6 - 1 ) ;  <CR> if ( K9 . compareTo ( u6 ) == 1 )  <CR> K9 . display ( I7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int U3 ) {  <CR> this . x = U3 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object d5 ) {  <CR> Letter A = ( Letter ) d5 ;  <CR> if ( this . x > A . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int I7 ) {  <CR> list [ I7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 