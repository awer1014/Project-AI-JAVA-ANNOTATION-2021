 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String C8 , String P2 , String H8 , String i6 , String E9 ) {  <CR> super ( C8 , P2 , H8 , i6 , E9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String l3 , String B2 , String v2 , String Y2 , String u6 ) {  <CR> super ( l3 , B2 , v2 , Y2 , u6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] z0 ) {  <CR> Evaluation n6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H9 = new Envelop ( "Taipei" , "Kaohsiung" , n6 ) ;  <CR> H9 . display ( ) ;  <CR> }  <CR> public Envelop ( String w5 , String o5 , Evaluation k4 ) {  <CR> this . senderAddr = w5 ;  <CR> this . receiverAddr = o5 ;  <CR> this . letter = k4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String v7 , String i2 , String y6 , String H0 , String N0 ) {  <CR> this . title = v7 ;  <CR> this . receiver = i2 ;  <CR> this . content = y6 ;  <CR> this . sender = H0 ;  <CR> this . date = N0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] g2 ) {  <CR> int f2 ;  <CR> for ( f2 = list . length - 1 ; f2 >= 0 ; f2 -- ) {  <CR> int R6 = f2 ;  <CR> Letter G0 = new Letter ( f2 ) ;  <CR> Letter M5 = new Letter ( R6 - 1 ) ;  <CR> if ( G0 . compareTo ( M5 ) == 1 )  <CR> G0 . display ( f2 ) ;  <CR> }  <CR> }  <CR> public void display ( int f2 ) {  <CR> list [ f2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int p0 ) {  <CR> this . x = p0 ;  <CR> }  <CR> public int compareTo ( Object c5 ) {  <CR> Letter I6 = ( Letter ) c5 ;  <CR> if ( this . x > I6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 