 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String f2 , String I0 , String y3 , String V1 , String q ) {  <CR> super ( f2 , I0 , y3 , V1 , q ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H2 , String d9 , String l3 , String x7 , String S4 ) {  <CR> super ( H2 , d9 , l3 , x7 , S4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] s2 ) {  <CR> Evaluation c1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f3 = new Envelop ( "Taipei" , "Kaohsiung" , c1 ) ;  <CR> f3 . display ( ) ;  <CR> }  <CR> public Envelop ( String d2 , String X1 , Evaluation F ) {  <CR> this . senderAddr = d2 ;  <CR> this . receiverAddr = X1 ;  <CR> this . letter = F ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String C1 , String B4 , String M7 , String A1 , String C8 ) {  <CR> this . title = C1 ;  <CR> this . receiver = B4 ;  <CR> this . content = M7 ;  <CR> this . sender = A1 ;  <CR> this . date = C8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int D3 ) {  <CR> this . x = D3 ;  <CR> }  <CR> public static void main ( String [ ] W0 ) {  <CR> int y1 ;  <CR> for ( y1 = list . length - 1 ; y1 >= 0 ; y1 -- ) {  <CR> int l1 = y1 ;  <CR> Letter K2 = new Letter ( y1 ) ;  <CR> Letter X0 = new Letter ( l1 - 1 ) ;  <CR> if ( K2 . compareTo ( X0 ) == 1 )  <CR> K2 . display ( y1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object e7 ) {  <CR> Letter U3 = ( Letter ) e7 ;  <CR> if ( this . x > U3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int y1 ) {  <CR> list [ y1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 