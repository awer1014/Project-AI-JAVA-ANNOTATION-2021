 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c9 , String R0 , String Q1 , String M5 , String u1 ) {  <CR> super ( c9 , R0 , Q1 , M5 , u1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String M1 , String j6 , String j4 , String f3 , String a1 ) {  <CR> super ( M1 , j6 , j4 , f3 , a1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String g5 , String u0 , Evaluation Q1 ) {  <CR> this . senderAddr = g5 ;  <CR> this . receiverAddr = u0 ;  <CR> this . letter = Q1 ;  <CR> }  <CR> public static void main ( String [ ] Q2 ) {  <CR> Evaluation w4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V = new Envelop ( "Taipei" , "Kaohsiung" , w4 ) ;  <CR> V . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String N5 , String J5 , String k9 , String k1 , String X9 ) {  <CR> this . title = N5 ;  <CR> this . receiver = J5 ;  <CR> this . content = k9 ;  <CR> this . sender = k1 ;  <CR> this . date = X9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] w6 ) {  <CR> int Z4 ;  <CR> for ( Z4 = list . length - 1 ; Z4 >= 0 ; Z4 -- ) {  <CR> int Q3 = Z4 ;  <CR> Letter w0 = new Letter ( Z4 ) ;  <CR> Letter J5 = new Letter ( Q3 - 1 ) ;  <CR> if ( w0 . compareTo ( J5 ) == 1 )  <CR> w0 . display ( Z4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object W7 ) {  <CR> Letter s = ( Letter ) W7 ;  <CR> if ( this . x > s . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int y0 ) {  <CR> this . x = y0 ;  <CR> }  <CR> public void display ( int Z4 ) {  <CR> list [ Z4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 