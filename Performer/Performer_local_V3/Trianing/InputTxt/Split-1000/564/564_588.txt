 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String B8 , String a2 , String C8 , String Q9 , String I ) {  <CR> super ( B8 , a2 , C8 , Q9 , I ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I , String x1 , String T4 , String c7 , String B2 ) {  <CR> super ( I , x1 , T4 , c7 , B2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] l8 ) {  <CR> Evaluation p1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c2 = new Envelop ( "Taipei" , "Kaohsiung" , p1 ) ;  <CR> c2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String B0 , String n7 , Evaluation n5 ) {  <CR> this . senderAddr = B0 ;  <CR> this . receiverAddr = n7 ;  <CR> this . letter = n5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Z4 , String T9 , String L9 , String F7 , String X ) {  <CR> this . title = Z4 ;  <CR> this . receiver = T9 ;  <CR> this . content = L9 ;  <CR> this . sender = F7 ;  <CR> this . date = X ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t3 ) {  <CR> this . x = t3 ;  <CR> }  <CR> public int compareTo ( Object p ) {  <CR> Letter a2 = ( Letter ) p ;  <CR> if ( this . x > a2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int h4 ) {  <CR> list [ h4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] y6 ) {  <CR> int h4 ;  <CR> for ( h4 = list . length - 1 ; h4 >= 0 ; h4 -- ) {  <CR> int k0 = h4 ;  <CR> Letter J7 = new Letter ( h4 ) ;  <CR> Letter Q5 = new Letter ( k0 - 1 ) ;  <CR> if ( J7 . compareTo ( Q5 ) == 1 )  <CR> J7 . display ( h4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 