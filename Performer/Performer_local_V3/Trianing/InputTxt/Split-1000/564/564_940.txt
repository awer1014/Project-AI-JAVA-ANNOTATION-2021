 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M5 , String F4 , String z8 , String L0 , String L9 ) {  <CR> super ( M5 , F4 , z8 , L0 , L9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u7 , String W2 , String f8 , String d8 , String X5 ) {  <CR> super ( u7 , W2 , f8 , d8 , X5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String G1 , String T9 , Evaluation h5 ) {  <CR> this . senderAddr = G1 ;  <CR> this . receiverAddr = T9 ;  <CR> this . letter = h5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] i ) {  <CR> Evaluation Q7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s7 = new Envelop ( "Taipei" , "Kaohsiung" , Q7 ) ;  <CR> s7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String N5 , String L3 , String v1 , String i7 , String t1 ) {  <CR> this . title = N5 ;  <CR> this . receiver = L3 ;  <CR> this . content = v1 ;  <CR> this . sender = i7 ;  <CR> this . date = t1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int l4 ) {  <CR> this . x = l4 ;  <CR> }  <CR> public int compareTo ( Object A5 ) {  <CR> Letter a8 = ( Letter ) A5 ;  <CR> if ( this . x > a8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] P1 ) {  <CR> int W6 ;  <CR> for ( W6 = list . length - 1 ; W6 >= 0 ; W6 -- ) {  <CR> int f4 = W6 ;  <CR> Letter G5 = new Letter ( W6 ) ;  <CR> Letter o9 = new Letter ( f4 - 1 ) ;  <CR> if ( G5 . compareTo ( o9 ) == 1 )  <CR> G5 . display ( W6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int W6 ) {  <CR> list [ W6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 