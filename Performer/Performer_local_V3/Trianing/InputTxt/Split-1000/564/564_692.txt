 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b7 , String S7 , String u , String o8 , String Y5 ) {  <CR> super ( b7 , S7 , u , o8 , Y5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y6 , String g2 , String Y3 , String t , String W8 ) {  <CR> super ( y6 , g2 , Y3 , t , W8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] E3 ) {  <CR> Evaluation L8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U0 = new Envelop ( "Taipei" , "Kaohsiung" , L8 ) ;  <CR> U0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String S6 , String Y8 , Evaluation y0 ) {  <CR> this . senderAddr = S6 ;  <CR> this . receiverAddr = Y8 ;  <CR> this . letter = y0 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String p , String A3 , String Y4 , String j2 , String e1 ) {  <CR> this . title = p ;  <CR> this . receiver = A3 ;  <CR> this . content = Y4 ;  <CR> this . sender = j2 ;  <CR> this . date = e1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object G6 ) {  <CR> Letter j9 = ( Letter ) G6 ;  <CR> if ( this . x > j9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i0 ) {  <CR> list [ i0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int N ) {  <CR> this . x = N ;  <CR> }  <CR> public static void main ( String [ ] t9 ) {  <CR> int i0 ;  <CR> for ( i0 = list . length - 1 ; i0 >= 0 ; i0 -- ) {  <CR> int b3 = i0 ;  <CR> Letter o7 = new Letter ( i0 ) ;  <CR> Letter f1 = new Letter ( b3 - 1 ) ;  <CR> if ( o7 . compareTo ( f1 ) == 1 )  <CR> o7 . display ( i0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 