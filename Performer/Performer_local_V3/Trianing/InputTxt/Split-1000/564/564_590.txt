 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String B1 , String R8 , String R1 , String y2 , String C8 ) {  <CR> super ( B1 , R8 , R1 , y2 , C8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G7 , String P5 , String Z9 , String k8 , String u ) {  <CR> super ( G7 , P5 , Z9 , k8 , u ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] y1 ) {  <CR> Evaluation e5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r8 = new Envelop ( "Taipei" , "Kaohsiung" , e5 ) ;  <CR> r8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String J9 , String M1 , Evaluation I1 ) {  <CR> this . senderAddr = J9 ;  <CR> this . receiverAddr = M1 ;  <CR> this . letter = I1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String s8 , String S3 , String Y7 , String A9 , String p7 ) {  <CR> this . title = s8 ;  <CR> this . receiver = S3 ;  <CR> this . content = Y7 ;  <CR> this . sender = A9 ;  <CR> this . date = p7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int z8 ) {  <CR> list [ z8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v3 ) {  <CR> int z8 ;  <CR> for ( z8 = list . length - 1 ; z8 >= 0 ; z8 -- ) {  <CR> int j6 = z8 ;  <CR> Letter X2 = new Letter ( z8 ) ;  <CR> Letter i4 = new Letter ( j6 - 1 ) ;  <CR> if ( X2 . compareTo ( i4 ) == 1 )  <CR> X2 . display ( z8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object h6 ) {  <CR> Letter u5 = ( Letter ) h6 ;  <CR> if ( this . x > u5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int b ) {  <CR> this . x = b ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 