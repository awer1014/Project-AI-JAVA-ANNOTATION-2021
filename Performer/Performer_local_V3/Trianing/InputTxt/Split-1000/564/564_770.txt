 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I0 , String b2 , String m2 , String Z1 , String t7 ) {  <CR> super ( I0 , b2 , m2 , Z1 , t7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r5 , String w1 , String G6 , String W9 , String F6 ) {  <CR> super ( r5 , w1 , G6 , W9 , F6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String B7 , String m3 , Evaluation I5 ) {  <CR> this . senderAddr = B7 ;  <CR> this . receiverAddr = m3 ;  <CR> this . letter = I5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Y2 ) {  <CR> Evaluation o2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z4 = new Envelop ( "Taipei" , "Kaohsiung" , o2 ) ;  <CR> z4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String f7 , String A7 , String L7 , String i2 , String s9 ) {  <CR> this . title = f7 ;  <CR> this . receiver = A7 ;  <CR> this . content = L7 ;  <CR> this . sender = i2 ;  <CR> this . date = s9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] J1 ) {  <CR> int E0 ;  <CR> for ( E0 = list . length - 1 ; E0 >= 0 ; E0 -- ) {  <CR> int M9 = E0 ;  <CR> Letter B0 = new Letter ( E0 ) ;  <CR> Letter L5 = new Letter ( M9 - 1 ) ;  <CR> if ( B0 . compareTo ( L5 ) == 1 )  <CR> B0 . display ( E0 ) ;  <CR> }  <CR> }  <CR> Letter ( int W8 ) {  <CR> this . x = W8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object Y3 ) {  <CR> Letter p5 = ( Letter ) Y3 ;  <CR> if ( this . x > p5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int E0 ) {  <CR> list [ E0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 