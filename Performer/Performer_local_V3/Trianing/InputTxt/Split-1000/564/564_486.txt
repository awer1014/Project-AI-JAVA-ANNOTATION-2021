 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z6 , String R6 , String S1 , String E5 , String i4 ) {  <CR> super ( z6 , R6 , S1 , E5 , i4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String E9 , String n6 , String o5 , String n1 , String S7 ) {  <CR> super ( E9 , n6 , o5 , n1 , S7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String s0 , String Z9 , Evaluation S6 ) {  <CR> this . senderAddr = s0 ;  <CR> this . receiverAddr = Z9 ;  <CR> this . letter = S6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] K3 ) {  <CR> Evaluation c7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G9 = new Envelop ( "Taipei" , "Kaohsiung" , c7 ) ;  <CR> G9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String H , String V2 , String X3 , String N4 , String a9 ) {  <CR> this . title = H ;  <CR> this . receiver = V2 ;  <CR> this . content = X3 ;  <CR> this . sender = N4 ;  <CR> this . date = a9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] x ) {  <CR> int l5 ;  <CR> for ( l5 = list . length - 1 ; l5 >= 0 ; l5 -- ) {  <CR> int F8 = l5 ;  <CR> Letter j4 = new Letter ( l5 ) ;  <CR> Letter x1 = new Letter ( F8 - 1 ) ;  <CR> if ( j4 . compareTo ( x1 ) == 1 )  <CR> j4 . display ( l5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object a9 ) {  <CR> Letter f2 = ( Letter ) a9 ;  <CR> if ( this . x > f2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int m ) {  <CR> this . x = m ;  <CR> }  <CR> public void display ( int l5 ) {  <CR> list [ l5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 