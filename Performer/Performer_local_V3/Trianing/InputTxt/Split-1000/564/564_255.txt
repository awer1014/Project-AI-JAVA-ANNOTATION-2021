 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d8 , String M2 , String H4 , String a2 , String p9 ) {  <CR> super ( d8 , M2 , H4 , a2 , p9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V2 , String d4 , String P4 , String X7 , String c ) {  <CR> super ( V2 , d4 , P4 , X7 , c ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String H4 , String J2 , Evaluation o0 ) {  <CR> this . senderAddr = H4 ;  <CR> this . receiverAddr = J2 ;  <CR> this . letter = o0 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] L5 ) {  <CR> Evaluation C6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m0 = new Envelop ( "Taipei" , "Kaohsiung" , C6 ) ;  <CR> m0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String B6 , String i4 , String n5 , String j , String f7 ) {  <CR> this . title = B6 ;  <CR> this . receiver = i4 ;  <CR> this . content = n5 ;  <CR> this . sender = j ;  <CR> this . date = f7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int L1 ) {  <CR> list [ L1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Q3 ) {  <CR> this . x = Q3 ;  <CR> }  <CR> public static void main ( String [ ] Y0 ) {  <CR> int L1 ;  <CR> for ( L1 = list . length - 1 ; L1 >= 0 ; L1 -- ) {  <CR> int s1 = L1 ;  <CR> Letter g8 = new Letter ( L1 ) ;  <CR> Letter D4 = new Letter ( s1 - 1 ) ;  <CR> if ( g8 . compareTo ( D4 ) == 1 )  <CR> g8 . display ( L1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object o2 ) {  <CR> Letter E2 = ( Letter ) o2 ;  <CR> if ( this . x > E2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 