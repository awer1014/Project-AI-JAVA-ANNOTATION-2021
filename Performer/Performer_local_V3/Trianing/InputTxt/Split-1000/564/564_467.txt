 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I0 , String y2 , String r1 , String z2 , String J8 ) {  <CR> super ( I0 , y2 , r1 , z2 , J8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P9 , String m9 , String V9 , String n4 , String Z9 ) {  <CR> super ( P9 , m9 , V9 , n4 , Z9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Y5 , String h7 , Evaluation a6 ) {  <CR> this . senderAddr = Y5 ;  <CR> this . receiverAddr = h7 ;  <CR> this . letter = a6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] B7 ) {  <CR> Evaluation O9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V4 = new Envelop ( "Taipei" , "Kaohsiung" , O9 ) ;  <CR> V4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String g1 , String m3 , String f7 , String t1 , String y6 ) {  <CR> this . title = g1 ;  <CR> this . receiver = m3 ;  <CR> this . content = f7 ;  <CR> this . sender = t1 ;  <CR> this . date = y6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int P ) {  <CR> this . x = P ;  <CR> }  <CR> public static void main ( String [ ] Q8 ) {  <CR> int z0 ;  <CR> for ( z0 = list . length - 1 ; z0 >= 0 ; z0 -- ) {  <CR> int y6 = z0 ;  <CR> Letter n9 = new Letter ( z0 ) ;  <CR> Letter u7 = new Letter ( y6 - 1 ) ;  <CR> if ( n9 . compareTo ( u7 ) == 1 )  <CR> n9 . display ( z0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object G6 ) {  <CR> Letter a5 = ( Letter ) G6 ;  <CR> if ( this . x > a5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int z0 ) {  <CR> list [ z0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 