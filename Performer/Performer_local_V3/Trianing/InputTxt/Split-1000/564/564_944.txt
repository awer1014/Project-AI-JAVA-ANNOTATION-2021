 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I9 , String Y4 , String Z , String V5 , String j5 ) {  <CR> super ( I9 , Y4 , Z , V5 , j5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h4 , String O6 , String W2 , String M2 , String v4 ) {  <CR> super ( h4 , O6 , W2 , M2 , v4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String l6 , String n8 , Evaluation o3 ) {  <CR> this . senderAddr = l6 ;  <CR> this . receiverAddr = n8 ;  <CR> this . letter = o3 ;  <CR> }  <CR> public static void main ( String [ ] b1 ) {  <CR> Evaluation E6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H0 = new Envelop ( "Taipei" , "Kaohsiung" , E6 ) ;  <CR> H0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String R2 , String j0 , String n6 , String x9 , String I2 ) {  <CR> this . title = R2 ;  <CR> this . receiver = j0 ;  <CR> this . content = n6 ;  <CR> this . sender = x9 ;  <CR> this . date = I2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int m4 ) {  <CR> this . x = m4 ;  <CR> }  <CR> public int compareTo ( Object y1 ) {  <CR> Letter D7 = ( Letter ) y1 ;  <CR> if ( this . x > D7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] A9 ) {  <CR> int T4 ;  <CR> for ( T4 = list . length - 1 ; T4 >= 0 ; T4 -- ) {  <CR> int G2 = T4 ;  <CR> Letter n0 = new Letter ( T4 ) ;  <CR> Letter g0 = new Letter ( G2 - 1 ) ;  <CR> if ( n0 . compareTo ( g0 ) == 1 )  <CR> n0 . display ( T4 ) ;  <CR> }  <CR> }  <CR> public void display ( int T4 ) {  <CR> list [ T4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 