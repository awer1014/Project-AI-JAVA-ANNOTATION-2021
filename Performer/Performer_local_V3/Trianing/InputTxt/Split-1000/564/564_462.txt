 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i7 , String r8 , String r2 , String D6 , String E3 ) {  <CR> super ( i7 , r8 , r2 , D6 , E3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H5 , String l , String S5 , String w7 , String R ) {  <CR> super ( H5 , l , S5 , w7 , R ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String n1 , String C8 , Evaluation s0 ) {  <CR> this . senderAddr = n1 ;  <CR> this . receiverAddr = C8 ;  <CR> this . letter = s0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] N3 ) {  <CR> Evaluation D6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W1 = new Envelop ( "Taipei" , "Kaohsiung" , D6 ) ;  <CR> W1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String k7 , String u4 , String G2 , String I7 , String Z7 ) {  <CR> this . title = k7 ;  <CR> this . receiver = u4 ;  <CR> this . content = G2 ;  <CR> this . sender = I7 ;  <CR> this . date = Z7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object L9 ) {  <CR> Letter Y2 = ( Letter ) L9 ;  <CR> if ( this . x > Y2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] I5 ) {  <CR> int r ;  <CR> for ( r = list . length - 1 ; r >= 0 ; r -- ) {  <CR> int G0 = r ;  <CR> Letter I3 = new Letter ( r ) ;  <CR> Letter A7 = new Letter ( G0 - 1 ) ;  <CR> if ( I3 . compareTo ( A7 ) == 1 )  <CR> I3 . display ( r ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int r ) {  <CR> list [ r ] . Display ( ) ;  <CR> }  <CR> Letter ( int G4 ) {  <CR> this . x = G4 ;  <CR> }  <CR> }  <CR>  <EOC> 