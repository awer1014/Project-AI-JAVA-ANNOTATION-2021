 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H1 , String Y7 , String L5 , String e5 , String W0 ) {  <CR> super ( H1 , Y7 , L5 , e5 , W0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o , String I2 , String E , String u3 , String G9 ) {  <CR> super ( o , I2 , E , u3 , G9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] p1 ) {  <CR> Evaluation Y4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n9 = new Envelop ( "Taipei" , "Kaohsiung" , Y4 ) ;  <CR> n9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String x9 , String Z6 , Evaluation s9 ) {  <CR> this . senderAddr = x9 ;  <CR> this . receiverAddr = Z6 ;  <CR> this . letter = s9 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String I2 , String v0 , String l1 , String j5 , String H3 ) {  <CR> this . title = I2 ;  <CR> this . receiver = v0 ;  <CR> this . content = l1 ;  <CR> this . sender = j5 ;  <CR> this . date = H3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] P8 ) {  <CR> int O7 ;  <CR> for ( O7 = list . length - 1 ; O7 >= 0 ; O7 -- ) {  <CR> int H1 = O7 ;  <CR> Letter P5 = new Letter ( O7 ) ;  <CR> Letter e6 = new Letter ( H1 - 1 ) ;  <CR> if ( P5 . compareTo ( e6 ) == 1 )  <CR> P5 . display ( O7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int O7 ) {  <CR> list [ O7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object A0 ) {  <CR> Letter I6 = ( Letter ) A0 ;  <CR> if ( this . x > I6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int w ) {  <CR> this . x = w ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 