 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d0 , String P1 , String t , String u0 , String p7 ) {  <CR> super ( d0 , P1 , t , u0 , p7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E8 , String p3 , String j7 , String v , String B3 ) {  <CR> super ( E8 , p3 , j7 , v , B3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String a4 , String b4 , Evaluation l0 ) {  <CR> this . senderAddr = a4 ;  <CR> this . receiverAddr = b4 ;  <CR> this . letter = l0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] X ) {  <CR> Evaluation O1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l7 = new Envelop ( "Taipei" , "Kaohsiung" , O1 ) ;  <CR> l7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String X0 , String B1 , String B5 , String G1 , String C2 ) {  <CR> this . title = X0 ;  <CR> this . receiver = B1 ;  <CR> this . content = B5 ;  <CR> this . sender = G1 ;  <CR> this . date = C2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] k2 ) {  <CR> int l2 ;  <CR> for ( l2 = list . length - 1 ; l2 >= 0 ; l2 -- ) {  <CR> int T5 = l2 ;  <CR> Letter W8 = new Letter ( l2 ) ;  <CR> Letter y9 = new Letter ( T5 - 1 ) ;  <CR> if ( W8 . compareTo ( y9 ) == 1 )  <CR> W8 . display ( l2 ) ;  <CR> }  <CR> }  <CR> Letter ( int C1 ) {  <CR> this . x = C1 ;  <CR> }  <CR> public void display ( int l2 ) {  <CR> list [ l2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object y0 ) {  <CR> Letter v6 = ( Letter ) y0 ;  <CR> if ( this . x > v6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 