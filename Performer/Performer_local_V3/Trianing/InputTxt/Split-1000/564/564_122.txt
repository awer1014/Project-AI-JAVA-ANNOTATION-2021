 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F1 , String E9 , String d6 , String G , String f2 ) {  <CR> super ( F1 , E9 , d6 , G , f2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D , String m9 , String P2 , String p4 , String K4 ) {  <CR> super ( D , m9 , P2 , p4 , K4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String q4 , String C5 , Evaluation L1 ) {  <CR> this . senderAddr = q4 ;  <CR> this . receiverAddr = C5 ;  <CR> this . letter = L1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] K3 ) {  <CR> Evaluation d0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W4 = new Envelop ( "Taipei" , "Kaohsiung" , d0 ) ;  <CR> W4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String J2 , String S0 , String F2 , String H6 , String b4 ) {  <CR> this . title = J2 ;  <CR> this . receiver = S0 ;  <CR> this . content = F2 ;  <CR> this . sender = H6 ;  <CR> this . date = b4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] G2 ) {  <CR> int g1 ;  <CR> for ( g1 = list . length - 1 ; g1 >= 0 ; g1 -- ) {  <CR> int K1 = g1 ;  <CR> Letter C4 = new Letter ( g1 ) ;  <CR> Letter w1 = new Letter ( K1 - 1 ) ;  <CR> if ( C4 . compareTo ( w1 ) == 1 )  <CR> C4 . display ( g1 ) ;  <CR> }  <CR> }  <CR> public void display ( int g1 ) {  <CR> list [ g1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int X1 ) {  <CR> this . x = X1 ;  <CR> }  <CR> public int compareTo ( Object W8 ) {  <CR> Letter H5 = ( Letter ) W8 ;  <CR> if ( this . x > H5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 