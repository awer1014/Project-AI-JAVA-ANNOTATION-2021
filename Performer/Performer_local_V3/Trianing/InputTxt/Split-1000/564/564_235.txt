 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String C7 , String u8 , String C1 , String f6 , String l1 ) {  <CR> super ( C7 , u8 , C1 , f6 , l1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String g1 , String P2 , String B1 , String J5 , String K3 ) {  <CR> super ( g1 , P2 , B1 , J5 , K3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String z6 , String J9 , Evaluation c6 ) {  <CR> this . senderAddr = z6 ;  <CR> this . receiverAddr = J9 ;  <CR> this . letter = c6 ;  <CR> }  <CR> public static void main ( String [ ] V7 ) {  <CR> Evaluation q0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X1 = new Envelop ( "Taipei" , "Kaohsiung" , q0 ) ;  <CR> X1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String w0 , String Q8 , String Z3 , String e6 , String a0 ) {  <CR> this . title = w0 ;  <CR> this . receiver = Q8 ;  <CR> this . content = Z3 ;  <CR> this . sender = e6 ;  <CR> this . date = a0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int x7 ) {  <CR> list [ x7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Z2 ) {  <CR> this . x = Z2 ;  <CR> }  <CR> public int compareTo ( Object a8 ) {  <CR> Letter r2 = ( Letter ) a8 ;  <CR> if ( this . x > r2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] X4 ) {  <CR> int x7 ;  <CR> for ( x7 = list . length - 1 ; x7 >= 0 ; x7 -- ) {  <CR> int O6 = x7 ;  <CR> Letter s6 = new Letter ( x7 ) ;  <CR> Letter O = new Letter ( O6 - 1 ) ;  <CR> if ( s6 . compareTo ( O ) == 1 )  <CR> s6 . display ( x7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 