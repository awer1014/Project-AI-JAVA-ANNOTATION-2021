 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i6 , String I5 , String e0 , String I6 , String N8 ) {  <CR> super ( i6 , I5 , e0 , I6 , N8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T6 , String i6 , String l1 , String q , String N ) {  <CR> super ( T6 , i6 , l1 , q , N ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q ) {  <CR> Evaluation n4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e1 = new Envelop ( "Taipei" , "Kaohsiung" , n4 ) ;  <CR> e1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String q7 , String x9 , Evaluation h4 ) {  <CR> this . senderAddr = q7 ;  <CR> this . receiverAddr = x9 ;  <CR> this . letter = h4 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Q9 , String J5 , String m7 , String l8 , String F2 ) {  <CR> this . title = Q9 ;  <CR> this . receiver = J5 ;  <CR> this . content = m7 ;  <CR> this . sender = l8 ;  <CR> this . date = F2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int n3 ) {  <CR> list [ n3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int e3 ) {  <CR> this . x = e3 ;  <CR> }  <CR> public static void main ( String [ ] S5 ) {  <CR> int n3 ;  <CR> for ( n3 = list . length - 1 ; n3 >= 0 ; n3 -- ) {  <CR> int U3 = n3 ;  <CR> Letter e1 = new Letter ( n3 ) ;  <CR> Letter v0 = new Letter ( U3 - 1 ) ;  <CR> if ( e1 . compareTo ( v0 ) == 1 )  <CR> e1 . display ( n3 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object a7 ) {  <CR> Letter A1 = ( Letter ) a7 ;  <CR> if ( this . x > A1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 