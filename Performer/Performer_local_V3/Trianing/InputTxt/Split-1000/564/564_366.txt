 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l5 , String a6 , String e1 , String A7 , String q8 ) {  <CR> super ( l5 , a6 , e1 , A7 , q8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e0 , String q7 , String U9 , String c1 , String j6 ) {  <CR> super ( e0 , q7 , U9 , c1 , j6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String j0 , String L6 , Evaluation g ) {  <CR> this . senderAddr = j0 ;  <CR> this . receiverAddr = L6 ;  <CR> this . letter = g ;  <CR> }  <CR> public static void main ( String [ ] x9 ) {  <CR> Evaluation i9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W = new Envelop ( "Taipei" , "Kaohsiung" , i9 ) ;  <CR> W . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String K8 , String y , String n1 , String V7 , String Q7 ) {  <CR> this . title = K8 ;  <CR> this . receiver = y ;  <CR> this . content = n1 ;  <CR> this . sender = V7 ;  <CR> this . date = Q7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int G8 ) {  <CR> this . x = G8 ;  <CR> }  <CR> public static void main ( String [ ] Y8 ) {  <CR> int c0 ;  <CR> for ( c0 = list . length - 1 ; c0 >= 0 ; c0 -- ) {  <CR> int B4 = c0 ;  <CR> Letter v1 = new Letter ( c0 ) ;  <CR> Letter M1 = new Letter ( B4 - 1 ) ;  <CR> if ( v1 . compareTo ( M1 ) == 1 )  <CR> v1 . display ( c0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object L ) {  <CR> Letter d8 = ( Letter ) L ;  <CR> if ( this . x > d8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int c0 ) {  <CR> list [ c0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 