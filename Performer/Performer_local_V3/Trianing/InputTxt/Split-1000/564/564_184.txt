 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U5 , String y6 , String L , String T5 , String m8 ) {  <CR> super ( U5 , y6 , L , T5 , m8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K2 , String h7 , String y4 , String y5 , String d1 ) {  <CR> super ( K2 , h7 , y4 , y5 , d1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] r ) {  <CR> Evaluation P2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L4 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> L4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String e9 , String O4 , Evaluation N8 ) {  <CR> this . senderAddr = e9 ;  <CR> this . receiverAddr = O4 ;  <CR> this . letter = N8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String H9 , String s3 , String I4 , String s0 , String Y2 ) {  <CR> this . title = H9 ;  <CR> this . receiver = s3 ;  <CR> this . content = I4 ;  <CR> this . sender = s0 ;  <CR> this . date = Y2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int y7 ) {  <CR> list [ y7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object F6 ) {  <CR> Letter R6 = ( Letter ) F6 ;  <CR> if ( this . x > R6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int h2 ) {  <CR> this . x = h2 ;  <CR> }  <CR> public static void main ( String [ ] y ) {  <CR> int y7 ;  <CR> for ( y7 = list . length - 1 ; y7 >= 0 ; y7 -- ) {  <CR> int z2 = y7 ;  <CR> Letter H0 = new Letter ( y7 ) ;  <CR> Letter U9 = new Letter ( z2 - 1 ) ;  <CR> if ( H0 . compareTo ( U9 ) == 1 )  <CR> H0 . display ( y7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 