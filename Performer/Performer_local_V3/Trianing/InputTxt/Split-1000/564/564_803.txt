 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z6 , String l7 , String u7 , String d4 , String J7 ) {  <CR> super ( z6 , l7 , u7 , d4 , J7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G3 , String G , String I4 , String C1 , String J4 ) {  <CR> super ( G3 , G , I4 , C1 , J4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] m3 ) {  <CR> Evaluation g1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D7 = new Envelop ( "Taipei" , "Kaohsiung" , g1 ) ;  <CR> D7 . display ( ) ;  <CR> }  <CR> public Envelop ( String u5 , String q1 , Evaluation W7 ) {  <CR> this . senderAddr = u5 ;  <CR> this . receiverAddr = q1 ;  <CR> this . letter = W7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String V7 , String x2 , String Y1 , String M , String A1 ) {  <CR> this . title = V7 ;  <CR> this . receiver = x2 ;  <CR> this . content = Y1 ;  <CR> this . sender = M ;  <CR> this . date = A1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int W1 ) {  <CR> this . x = W1 ;  <CR> }  <CR> public int compareTo ( Object U4 ) {  <CR> Letter t4 = ( Letter ) U4 ;  <CR> if ( this . x > t4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] u1 ) {  <CR> int q6 ;  <CR> for ( q6 = list . length - 1 ; q6 >= 0 ; q6 -- ) {  <CR> int Q9 = q6 ;  <CR> Letter s6 = new Letter ( q6 ) ;  <CR> Letter f = new Letter ( Q9 - 1 ) ;  <CR> if ( s6 . compareTo ( f ) == 1 )  <CR> s6 . display ( q6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int q6 ) {  <CR> list [ q6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 