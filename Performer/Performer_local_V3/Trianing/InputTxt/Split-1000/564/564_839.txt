 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y0 , String A0 , String v5 , String N3 , String f2 ) {  <CR> super ( Y0 , A0 , v5 , N3 , f2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L2 , String l , String M2 , String R6 , String P9 ) {  <CR> super ( L2 , l , M2 , R6 , P9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String v9 , String t9 , Evaluation j6 ) {  <CR> this . senderAddr = v9 ;  <CR> this . receiverAddr = t9 ;  <CR> this . letter = j6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] d6 ) {  <CR> Evaluation B = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o7 = new Envelop ( "Taipei" , "Kaohsiung" , B ) ;  <CR> o7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String e0 , String K , String X7 , String H , String u3 ) {  <CR> this . title = e0 ;  <CR> this . receiver = K ;  <CR> this . content = X7 ;  <CR> this . sender = H ;  <CR> this . date = u3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int V6 ) {  <CR> this . x = V6 ;  <CR> }  <CR> public void display ( int Q6 ) {  <CR> list [ Q6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] V8 ) {  <CR> int Q6 ;  <CR> for ( Q6 = list . length - 1 ; Q6 >= 0 ; Q6 -- ) {  <CR> int P9 = Q6 ;  <CR> Letter O6 = new Letter ( Q6 ) ;  <CR> Letter M5 = new Letter ( P9 - 1 ) ;  <CR> if ( O6 . compareTo ( M5 ) == 1 )  <CR> O6 . display ( Q6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object a ) {  <CR> Letter j3 = ( Letter ) a ;  <CR> if ( this . x > j3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 