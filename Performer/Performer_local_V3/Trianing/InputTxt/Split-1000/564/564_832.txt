 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S0 , String d5 , String m5 , String n4 , String P0 ) {  <CR> super ( S0 , d5 , m5 , n4 , P0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String o0 , String r4 , String H6 , String T8 , String i0 ) {  <CR> super ( o0 , r4 , H6 , T8 , i0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] E2 ) {  <CR> Evaluation W = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I = new Envelop ( "Taipei" , "Kaohsiung" , W ) ;  <CR> I . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String M7 , String V8 , Evaluation n1 ) {  <CR> this . senderAddr = M7 ;  <CR> this . receiverAddr = V8 ;  <CR> this . letter = n1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String U9 , String q4 , String M9 , String n8 , String B5 ) {  <CR> this . title = U9 ;  <CR> this . receiver = q4 ;  <CR> this . content = M9 ;  <CR> this . sender = n8 ;  <CR> this . date = B5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int M6 ) {  <CR> this . x = M6 ;  <CR> }  <CR> public int compareTo ( Object r0 ) {  <CR> Letter D0 = ( Letter ) r0 ;  <CR> if ( this . x > D0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int K3 ) {  <CR> list [ K3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] F5 ) {  <CR> int K3 ;  <CR> for ( K3 = list . length - 1 ; K3 >= 0 ; K3 -- ) {  <CR> int r8 = K3 ;  <CR> Letter D4 = new Letter ( K3 ) ;  <CR> Letter o7 = new Letter ( r8 - 1 ) ;  <CR> if ( D4 . compareTo ( o7 ) == 1 )  <CR> D4 . display ( K3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 