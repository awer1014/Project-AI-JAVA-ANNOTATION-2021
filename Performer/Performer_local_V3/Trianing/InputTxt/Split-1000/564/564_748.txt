 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K1 , String F6 , String X , String B3 , String q7 ) {  <CR> super ( K1 , F6 , X , B3 , q7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f8 , String i3 , String m2 , String L2 , String R8 ) {  <CR> super ( f8 , i3 , m2 , L2 , R8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String t , String h5 , Evaluation f8 ) {  <CR> this . senderAddr = t ;  <CR> this . receiverAddr = h5 ;  <CR> this . letter = f8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] t8 ) {  <CR> Evaluation E4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P4 = new Envelop ( "Taipei" , "Kaohsiung" , E4 ) ;  <CR> P4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String X4 , String e2 , String s1 , String q , String w8 ) {  <CR> this . title = X4 ;  <CR> this . receiver = e2 ;  <CR> this . content = s1 ;  <CR> this . sender = q ;  <CR> this . date = w8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int K5 ) {  <CR> list [ K5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] j9 ) {  <CR> int K5 ;  <CR> for ( K5 = list . length - 1 ; K5 >= 0 ; K5 -- ) {  <CR> int U = K5 ;  <CR> Letter W7 = new Letter ( K5 ) ;  <CR> Letter C = new Letter ( U - 1 ) ;  <CR> if ( W7 . compareTo ( C ) == 1 )  <CR> W7 . display ( K5 ) ;  <CR> }  <CR> }  <CR> Letter ( int j2 ) {  <CR> this . x = j2 ;  <CR> }  <CR> public int compareTo ( Object m4 ) {  <CR> Letter m0 = ( Letter ) m4 ;  <CR> if ( this . x > m0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 