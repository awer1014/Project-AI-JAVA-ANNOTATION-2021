 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e7 , String Q8 , String t2 , String y3 , String R0 ) {  <CR> super ( e7 , Q8 , t2 , y3 , R0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String g6 , String y7 , String Q3 , String p , String p3 ) {  <CR> super ( g6 , y7 , Q3 , p , p3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] K7 ) {  <CR> Evaluation J4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M5 = new Envelop ( "Taipei" , "Kaohsiung" , J4 ) ;  <CR> M5 . display ( ) ;  <CR> }  <CR> public Envelop ( String u7 , String H1 , Evaluation z3 ) {  <CR> this . senderAddr = u7 ;  <CR> this . receiverAddr = H1 ;  <CR> this . letter = z3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String b2 , String w6 , String S7 , String t , String d7 ) {  <CR> this . title = b2 ;  <CR> this . receiver = w6 ;  <CR> this . content = S7 ;  <CR> this . sender = t ;  <CR> this . date = d7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] A3 ) {  <CR> int X2 ;  <CR> for ( X2 = list . length - 1 ; X2 >= 0 ; X2 -- ) {  <CR> int x9 = X2 ;  <CR> Letter S1 = new Letter ( X2 ) ;  <CR> Letter w8 = new Letter ( x9 - 1 ) ;  <CR> if ( S1 . compareTo ( w8 ) == 1 )  <CR> S1 . display ( X2 ) ;  <CR> }  <CR> }  <CR> public void display ( int X2 ) {  <CR> list [ X2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object D6 ) {  <CR> Letter E8 = ( Letter ) D6 ;  <CR> if ( this . x > E8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int u ) {  <CR> this . x = u ;  <CR> }  <CR> }  <CR>  <EOC> 