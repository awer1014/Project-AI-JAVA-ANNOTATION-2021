 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String k9 , String t6 , String k4 , String w6 , String D5 ) {  <CR> super ( k9 , t6 , k4 , w6 , D5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y6 , String i3 , String S6 , String B9 , String i8 ) {  <CR> super ( Y6 , i3 , S6 , B9 , i8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d8 ) {  <CR> Evaluation C = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f7 = new Envelop ( "Taipei" , "Kaohsiung" , C ) ;  <CR> f7 . display ( ) ;  <CR> }  <CR> public Envelop ( String N0 , String Z4 , Evaluation K ) {  <CR> this . senderAddr = N0 ;  <CR> this . receiverAddr = Z4 ;  <CR> this . letter = K ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String u6 , String F4 , String e4 , String y4 , String c1 ) {  <CR> this . title = u6 ;  <CR> this . receiver = F4 ;  <CR> this . content = e4 ;  <CR> this . sender = y4 ;  <CR> this . date = c1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object K7 ) {  <CR> Letter s4 = ( Letter ) K7 ;  <CR> if ( this . x > s4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int o7 ) {  <CR> list [ o7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] o3 ) {  <CR> int o7 ;  <CR> for ( o7 = list . length - 1 ; o7 >= 0 ; o7 -- ) {  <CR> int B1 = o7 ;  <CR> Letter J = new Letter ( o7 ) ;  <CR> Letter r2 = new Letter ( B1 - 1 ) ;  <CR> if ( J . compareTo ( r2 ) == 1 )  <CR> J . display ( o7 ) ;  <CR> }  <CR> }  <CR> Letter ( int U2 ) {  <CR> this . x = U2 ;  <CR> }  <CR> }  <CR>  <EOC> 