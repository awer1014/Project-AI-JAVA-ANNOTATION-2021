 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String G7 , String p5 , String o6 , String h5 , String F7 ) {  <CR> super ( G7 , p5 , o6 , h5 , F7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String U9 , String X8 , String g , String k7 , String b ) {  <CR> super ( U9 , X8 , g , k7 , b ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] r8 ) {  <CR> Evaluation L8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H1 = new Envelop ( "Taipei" , "Kaohsiung" , L8 ) ;  <CR> H1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String S8 , String g8 , Evaluation b7 ) {  <CR> this . senderAddr = S8 ;  <CR> this . receiverAddr = g8 ;  <CR> this . letter = b7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String y5 , String u0 , String T8 , String B7 , String n ) {  <CR> this . title = y5 ;  <CR> this . receiver = u0 ;  <CR> this . content = T8 ;  <CR> this . sender = B7 ;  <CR> this . date = n ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] l2 ) {  <CR> int y6 ;  <CR> for ( y6 = list . length - 1 ; y6 >= 0 ; y6 -- ) {  <CR> int T7 = y6 ;  <CR> Letter A3 = new Letter ( y6 ) ;  <CR> Letter p7 = new Letter ( T7 - 1 ) ;  <CR> if ( A3 . compareTo ( p7 ) == 1 )  <CR> A3 . display ( y6 ) ;  <CR> }  <CR> }  <CR> public void display ( int y6 ) {  <CR> list [ y6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object S8 ) {  <CR> Letter C7 = ( Letter ) S8 ;  <CR> if ( this . x > C7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int q1 ) {  <CR> this . x = q1 ;  <CR> }  <CR> }  <CR>  <EOC> 