 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S1 , String r7 , String b0 , String Q2 , String e5 ) {  <CR> super ( S1 , r7 , b0 , Q2 , e5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e0 , String T2 , String C4 , String H5 , String P9 ) {  <CR> super ( e0 , T2 , C4 , H5 , P9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String H8 , String M7 , Evaluation F5 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = M7 ;  <CR> this . letter = F5 ;  <CR> }  <CR> public static void main ( String [ ] o ) {  <CR> Evaluation m = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W0 = new Envelop ( "Taipei" , "Kaohsiung" , m ) ;  <CR> W0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String V6 , String v8 , String Q1 , String V2 , String S4 ) {  <CR> this . title = V6 ;  <CR> this . receiver = v8 ;  <CR> this . content = Q1 ;  <CR> this . sender = V2 ;  <CR> this . date = S4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object c6 ) {  <CR> Letter c1 = ( Letter ) c6 ;  <CR> if ( this . x > c1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int z0 ) {  <CR> this . x = z0 ;  <CR> }  <CR> public void display ( int y9 ) {  <CR> list [ y9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] D6 ) {  <CR> int y9 ;  <CR> for ( y9 = list . length - 1 ; y9 >= 0 ; y9 -- ) {  <CR> int U0 = y9 ;  <CR> Letter A0 = new Letter ( y9 ) ;  <CR> Letter K0 = new Letter ( U0 - 1 ) ;  <CR> if ( A0 . compareTo ( K0 ) == 1 )  <CR> A0 . display ( y9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 