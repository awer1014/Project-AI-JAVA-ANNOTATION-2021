 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String S0 , String p9 , String g4 , String K7 , String i4 ) {  <CR> super ( S0 , p9 , g4 , K7 , i4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y , String i0 , String i7 , String c , String f7 ) {  <CR> super ( y , i0 , i7 , c , f7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] b0 ) {  <CR> Evaluation d7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z1 = new Envelop ( "Taipei" , "Kaohsiung" , d7 ) ;  <CR> z1 . display ( ) ;  <CR> }  <CR> public Envelop ( String f2 , String k3 , Evaluation W1 ) {  <CR> this . senderAddr = f2 ;  <CR> this . receiverAddr = k3 ;  <CR> this . letter = W1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String p2 , String q0 , String P6 , String o4 , String B9 ) {  <CR> this . title = p2 ;  <CR> this . receiver = q0 ;  <CR> this . content = P6 ;  <CR> this . sender = o4 ;  <CR> this . date = B9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int B3 ) {  <CR> list [ B3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int F8 ) {  <CR> this . x = F8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] o4 ) {  <CR> int B3 ;  <CR> for ( B3 = list . length - 1 ; B3 >= 0 ; B3 -- ) {  <CR> int i4 = B3 ;  <CR> Letter U5 = new Letter ( B3 ) ;  <CR> Letter T9 = new Letter ( i4 - 1 ) ;  <CR> if ( U5 . compareTo ( T9 ) == 1 )  <CR> U5 . display ( B3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object E2 ) {  <CR> Letter N1 = ( Letter ) E2 ;  <CR> if ( this . x > N1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 