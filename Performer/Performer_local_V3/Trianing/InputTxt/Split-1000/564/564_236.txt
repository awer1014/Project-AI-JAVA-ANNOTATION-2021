 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q0 , String v , String h8 , String K6 , String f7 ) {  <CR> super ( Q0 , v , h8 , K6 , f7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String t2 , String A , String p7 , String C9 , String C2 ) {  <CR> super ( t2 , A , p7 , C9 , C2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String b , String A3 , Evaluation N0 ) {  <CR> this . senderAddr = b ;  <CR> this . receiverAddr = A3 ;  <CR> this . letter = N0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] y ) {  <CR> Evaluation E6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E2 = new Envelop ( "Taipei" , "Kaohsiung" , E6 ) ;  <CR> E2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String B9 , String z5 , String A1 , String W , String p9 ) {  <CR> this . title = B9 ;  <CR> this . receiver = z5 ;  <CR> this . content = A1 ;  <CR> this . sender = W ;  <CR> this . date = p9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object Y9 ) {  <CR> Letter k0 = ( Letter ) Y9 ;  <CR> if ( this . x > k0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int A3 ) {  <CR> list [ A3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int y5 ) {  <CR> this . x = y5 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] z6 ) {  <CR> int A3 ;  <CR> for ( A3 = list . length - 1 ; A3 >= 0 ; A3 -- ) {  <CR> int s5 = A3 ;  <CR> Letter p7 = new Letter ( A3 ) ;  <CR> Letter q6 = new Letter ( s5 - 1 ) ;  <CR> if ( p7 . compareTo ( q6 ) == 1 )  <CR> p7 . display ( A3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 