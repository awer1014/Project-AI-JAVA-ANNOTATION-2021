 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a4 , String B4 , String G9 , String L9 , String h5 ) {  <CR> super ( a4 , B4 , G9 , L9 , h5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L6 , String T3 , String n0 , String R5 , String r3 ) {  <CR> super ( L6 , T3 , n0 , R5 , r3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B3 ) {  <CR> Evaluation D7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c3 = new Envelop ( "Taipei" , "Kaohsiung" , D7 ) ;  <CR> c3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String H5 , String K , Evaluation B7 ) {  <CR> this . senderAddr = H5 ;  <CR> this . receiverAddr = K ;  <CR> this . letter = B7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String V6 , String x2 , String v8 , String w9 , String u7 ) {  <CR> this . title = V6 ;  <CR> this . receiver = x2 ;  <CR> this . content = v8 ;  <CR> this . sender = w9 ;  <CR> this . date = u7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] w3 ) {  <CR> int x6 ;  <CR> for ( x6 = list . length - 1 ; x6 >= 0 ; x6 -- ) {  <CR> int y4 = x6 ;  <CR> Letter G6 = new Letter ( x6 ) ;  <CR> Letter H4 = new Letter ( y4 - 1 ) ;  <CR> if ( G6 . compareTo ( H4 ) == 1 )  <CR> G6 . display ( x6 ) ;  <CR> }  <CR> }  <CR> Letter ( int C2 ) {  <CR> this . x = C2 ;  <CR> }  <CR> public void display ( int x6 ) {  <CR> list [ x6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object d0 ) {  <CR> Letter Z6 = ( Letter ) d0 ;  <CR> if ( this . x > Z6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 