 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String v1 , String Q0 , String c2 , String s1 , String b3 ) {  <CR> super ( v1 , Q0 , c2 , s1 , b3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S9 , String A8 , String p2 , String r8 , String p5 ) {  <CR> super ( S9 , A8 , p2 , r8 , p5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] t4 ) {  <CR> Evaluation r0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f5 = new Envelop ( "Taipei" , "Kaohsiung" , r0 ) ;  <CR> f5 . display ( ) ;  <CR> }  <CR> public Envelop ( String A , String b3 , Evaluation T4 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = b3 ;  <CR> this . letter = T4 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String x2 , String u8 , String U7 , String k0 , String h0 ) {  <CR> this . title = x2 ;  <CR> this . receiver = u8 ;  <CR> this . content = U7 ;  <CR> this . sender = k0 ;  <CR> this . date = h0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int y0 ) {  <CR> this . x = y0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] j6 ) {  <CR> int v ;  <CR> for ( v = list . length - 1 ; v >= 0 ; v -- ) {  <CR> int n2 = v ;  <CR> Letter X0 = new Letter ( v ) ;  <CR> Letter o5 = new Letter ( n2 - 1 ) ;  <CR> if ( X0 . compareTo ( o5 ) == 1 )  <CR> X0 . display ( v ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object P0 ) {  <CR> Letter K = ( Letter ) P0 ;  <CR> if ( this . x > K . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int v ) {  <CR> list [ v ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 