 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A7 , String q , String M2 , String G , String N9 ) {  <CR> super ( A7 , q , M2 , G , N9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z1 , String v0 , String I , String S0 , String X6 ) {  <CR> super ( Z1 , v0 , I , S0 , X6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B1 ) {  <CR> Evaluation k0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F = new Envelop ( "Taipei" , "Kaohsiung" , k0 ) ;  <CR> F . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String C7 , String W7 , Evaluation N4 ) {  <CR> this . senderAddr = C7 ;  <CR> this . receiverAddr = W7 ;  <CR> this . letter = N4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String X1 , String I7 , String K , String K1 , String p1 ) {  <CR> this . title = X1 ;  <CR> this . receiver = I7 ;  <CR> this . content = K ;  <CR> this . sender = K1 ;  <CR> this . date = p1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int T1 ) {  <CR> list [ T1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Y6 ) {  <CR> this . x = Y6 ;  <CR> }  <CR> public static void main ( String [ ] M7 ) {  <CR> int T1 ;  <CR> for ( T1 = list . length - 1 ; T1 >= 0 ; T1 -- ) {  <CR> int j7 = T1 ;  <CR> Letter i0 = new Letter ( T1 ) ;  <CR> Letter e3 = new Letter ( j7 - 1 ) ;  <CR> if ( i0 . compareTo ( e3 ) == 1 )  <CR> i0 . display ( T1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object L2 ) {  <CR> Letter b4 = ( Letter ) L2 ;  <CR> if ( this . x > b4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 