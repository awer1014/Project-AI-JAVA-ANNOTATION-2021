 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L0 , String u4 , String c9 , String T4 , String F9 ) {  <CR> super ( L0 , u4 , c9 , T4 , F9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z5 , String S5 , String w2 , String a9 , String k9 ) {  <CR> super ( z5 , S5 , w2 , a9 , k9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d6 ) {  <CR> Evaluation B1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S7 = new Envelop ( "Taipei" , "Kaohsiung" , B1 ) ;  <CR> S7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String f1 , String V9 , Evaluation d5 ) {  <CR> this . senderAddr = f1 ;  <CR> this . receiverAddr = V9 ;  <CR> this . letter = d5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Z2 , String V6 , String H0 , String Z6 , String M ) {  <CR> this . title = Z2 ;  <CR> this . receiver = V6 ;  <CR> this . content = H0 ;  <CR> this . sender = Z6 ;  <CR> this . date = M ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int r2 ) {  <CR> list [ r2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object X5 ) {  <CR> Letter y6 = ( Letter ) X5 ;  <CR> if ( this . x > y6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int I ) {  <CR> this . x = I ;  <CR> }  <CR> public static void main ( String [ ] C5 ) {  <CR> int r2 ;  <CR> for ( r2 = list . length - 1 ; r2 >= 0 ; r2 -- ) {  <CR> int z3 = r2 ;  <CR> Letter M7 = new Letter ( r2 ) ;  <CR> Letter o5 = new Letter ( z3 - 1 ) ;  <CR> if ( M7 . compareTo ( o5 ) == 1 )  <CR> M7 . display ( r2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 