 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e0 , String N7 , String P4 , String M6 , String B9 ) {  <CR> super ( e0 , N7 , P4 , M6 , B9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z7 , String S1 , String o9 , String y , String r9 ) {  <CR> super ( Z7 , S1 , o9 , y , r9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] D ) {  <CR> Evaluation Y5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U9 = new Envelop ( "Taipei" , "Kaohsiung" , Y5 ) ;  <CR> U9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String W6 , String f7 , Evaluation f ) {  <CR> this . senderAddr = W6 ;  <CR> this . receiverAddr = f7 ;  <CR> this . letter = f ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String X8 , String d1 , String i1 , String e3 , String b0 ) {  <CR> this . title = X8 ;  <CR> this . receiver = d1 ;  <CR> this . content = i1 ;  <CR> this . sender = e3 ;  <CR> this . date = b0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] B4 ) {  <CR> int B1 ;  <CR> for ( B1 = list . length - 1 ; B1 >= 0 ; B1 -- ) {  <CR> int y6 = B1 ;  <CR> Letter Z9 = new Letter ( B1 ) ;  <CR> Letter J2 = new Letter ( y6 - 1 ) ;  <CR> if ( Z9 . compareTo ( J2 ) == 1 )  <CR> Z9 . display ( B1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object a5 ) {  <CR> Letter y0 = ( Letter ) a5 ;  <CR> if ( this . x > y0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int u7 ) {  <CR> this . x = u7 ;  <CR> }  <CR> public void display ( int B1 ) {  <CR> list [ B1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 