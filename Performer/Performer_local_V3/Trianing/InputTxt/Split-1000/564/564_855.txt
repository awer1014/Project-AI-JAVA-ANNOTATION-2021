 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String C3 , String G0 , String U6 , String J9 , String J1 ) {  <CR> super ( C3 , G0 , U6 , J9 , J1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y , String P9 , String x7 , String o0 , String C3 ) {  <CR> super ( y , P9 , x7 , o0 , C3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String n5 , String L7 , Evaluation z3 ) {  <CR> this . senderAddr = n5 ;  <CR> this . receiverAddr = L7 ;  <CR> this . letter = z3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] G7 ) {  <CR> Evaluation Z2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e2 = new Envelop ( "Taipei" , "Kaohsiung" , Z2 ) ;  <CR> e2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String I0 , String f1 , String Z0 , String V4 , String k1 ) {  <CR> this . title = I0 ;  <CR> this . receiver = f1 ;  <CR> this . content = Z0 ;  <CR> this . sender = V4 ;  <CR> this . date = k1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int h7 ) {  <CR> this . x = h7 ;  <CR> }  <CR> public int compareTo ( Object c0 ) {  <CR> Letter i5 = ( Letter ) c0 ;  <CR> if ( this . x > i5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int P4 ) {  <CR> list [ P4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P ) {  <CR> int P4 ;  <CR> for ( P4 = list . length - 1 ; P4 >= 0 ; P4 -- ) {  <CR> int R0 = P4 ;  <CR> Letter a0 = new Letter ( P4 ) ;  <CR> Letter O0 = new Letter ( R0 - 1 ) ;  <CR> if ( a0 . compareTo ( O0 ) == 1 )  <CR> a0 . display ( P4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 