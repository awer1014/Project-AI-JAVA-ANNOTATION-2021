 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N8 , String v9 , String t , String o8 , String S8 ) {  <CR> super ( N8 , v9 , t , o8 , S8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I2 , String D , String k3 , String e1 , String S0 ) {  <CR> super ( I2 , D , k3 , e1 , S0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g4 ) {  <CR> Evaluation c2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P6 = new Envelop ( "Taipei" , "Kaohsiung" , c2 ) ;  <CR> P6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String x3 , String k0 , Evaluation K2 ) {  <CR> this . senderAddr = x3 ;  <CR> this . receiverAddr = k0 ;  <CR> this . letter = K2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String z8 , String I5 , String Z0 , String U5 , String R6 ) {  <CR> this . title = z8 ;  <CR> this . receiver = I5 ;  <CR> this . content = Z0 ;  <CR> this . sender = U5 ;  <CR> this . date = R6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int T7 ) {  <CR> this . x = T7 ;  <CR> }  <CR> public int compareTo ( Object T5 ) {  <CR> Letter L2 = ( Letter ) T5 ;  <CR> if ( this . x > L2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] d3 ) {  <CR> int c8 ;  <CR> for ( c8 = list . length - 1 ; c8 >= 0 ; c8 -- ) {  <CR> int n = c8 ;  <CR> Letter O2 = new Letter ( c8 ) ;  <CR> Letter p7 = new Letter ( n - 1 ) ;  <CR> if ( O2 . compareTo ( p7 ) == 1 )  <CR> O2 . display ( c8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int c8 ) {  <CR> list [ c8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 