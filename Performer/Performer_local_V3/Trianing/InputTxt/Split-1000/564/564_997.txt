 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String n1 , String e7 , String B6 , String a6 , String b3 ) {  <CR> super ( n1 , e7 , B6 , a6 , b3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String J3 , String W9 , String R1 , String x9 , String d7 ) {  <CR> super ( J3 , W9 , R1 , x9 , d7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Y2 , String O2 , Evaluation e0 ) {  <CR> this . senderAddr = Y2 ;  <CR> this . receiverAddr = O2 ;  <CR> this . letter = e0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] R5 ) {  <CR> Evaluation A4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E3 = new Envelop ( "Taipei" , "Kaohsiung" , A4 ) ;  <CR> E3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String X3 , String w7 , String E9 , String t6 , String E7 ) {  <CR> this . title = X3 ;  <CR> this . receiver = w7 ;  <CR> this . content = E9 ;  <CR> this . sender = t6 ;  <CR> this . date = E7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Z8 ) {  <CR> list [ Z8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y3 ) {  <CR> int Z8 ;  <CR> for ( Z8 = list . length - 1 ; Z8 >= 0 ; Z8 -- ) {  <CR> int a5 = Z8 ;  <CR> Letter U2 = new Letter ( Z8 ) ;  <CR> Letter B4 = new Letter ( a5 - 1 ) ;  <CR> if ( U2 . compareTo ( B4 ) == 1 )  <CR> U2 . display ( Z8 ) ;  <CR> }  <CR> }  <CR> Letter ( int G9 ) {  <CR> this . x = G9 ;  <CR> }  <CR> public int compareTo ( Object V8 ) {  <CR> Letter H = ( Letter ) V8 ;  <CR> if ( this . x > H . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 