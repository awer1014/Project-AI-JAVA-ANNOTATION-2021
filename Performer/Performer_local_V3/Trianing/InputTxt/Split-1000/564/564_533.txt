 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w2 , String V9 , String T , String Q0 , String f2 ) {  <CR> super ( w2 , V9 , T , Q0 , f2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o , String A9 , String I0 , String z , String f5 ) {  <CR> super ( o , A9 , I0 , z , f5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String Z , String J , Evaluation F3 ) {  <CR> this . senderAddr = Z ;  <CR> this . receiverAddr = J ;  <CR> this . letter = F3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] k8 ) {  <CR> Evaluation g6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S4 = new Envelop ( "Taipei" , "Kaohsiung" , g6 ) ;  <CR> S4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String P , String V6 , String z , String v7 , String Q1 ) {  <CR> this . title = P ;  <CR> this . receiver = V6 ;  <CR> this . content = z ;  <CR> this . sender = v7 ;  <CR> this . date = Q1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int y5 ) {  <CR> list [ y5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int N6 ) {  <CR> this . x = N6 ;  <CR> }  <CR> public int compareTo ( Object Q5 ) {  <CR> Letter L6 = ( Letter ) Q5 ;  <CR> if ( this . x > L6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] y7 ) {  <CR> int y5 ;  <CR> for ( y5 = list . length - 1 ; y5 >= 0 ; y5 -- ) {  <CR> int E9 = y5 ;  <CR> Letter R1 = new Letter ( y5 ) ;  <CR> Letter U2 = new Letter ( E9 - 1 ) ;  <CR> if ( R1 . compareTo ( U2 ) == 1 )  <CR> R1 . display ( y5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 