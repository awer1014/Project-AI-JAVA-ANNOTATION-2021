 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i0 , String u2 , String K8 , String W4 , String Z3 ) {  <CR> super ( i0 , u2 , K8 , W4 , Z3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W7 , String L0 , String t5 , String n3 , String t2 ) {  <CR> super ( W7 , L0 , t5 , n3 , t2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Y4 , String p8 , Evaluation j1 ) {  <CR> this . senderAddr = Y4 ;  <CR> this . receiverAddr = p8 ;  <CR> this . letter = j1 ;  <CR> }  <CR> public static void main ( String [ ] r1 ) {  <CR> Evaluation n3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i9 = new Envelop ( "Taipei" , "Kaohsiung" , n3 ) ;  <CR> i9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String I4 , String f5 , String Y9 , String I7 , String X6 ) {  <CR> this . title = I4 ;  <CR> this . receiver = f5 ;  <CR> this . content = Y9 ;  <CR> this . sender = I7 ;  <CR> this . date = X6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object g5 ) {  <CR> Letter T2 = ( Letter ) g5 ;  <CR> if ( this . x > T2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] F8 ) {  <CR> int S8 ;  <CR> for ( S8 = list . length - 1 ; S8 >= 0 ; S8 -- ) {  <CR> int a2 = S8 ;  <CR> Letter e6 = new Letter ( S8 ) ;  <CR> Letter G6 = new Letter ( a2 - 1 ) ;  <CR> if ( e6 . compareTo ( G6 ) == 1 )  <CR> e6 . display ( S8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int S8 ) {  <CR> list [ S8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int Z4 ) {  <CR> this . x = Z4 ;  <CR> }  <CR> }  <CR>  <EOC> 