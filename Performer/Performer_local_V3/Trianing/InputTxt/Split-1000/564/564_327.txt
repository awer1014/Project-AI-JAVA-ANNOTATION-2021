 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W4 , String k0 , String h0 , String g9 , String N ) {  <CR> super ( W4 , k0 , h0 , g9 , N ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K , String i8 , String m4 , String G3 , String w ) {  <CR> super ( K , i8 , m4 , G3 , w ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p , String V8 , Evaluation b5 ) {  <CR> this . senderAddr = p ;  <CR> this . receiverAddr = V8 ;  <CR> this . letter = b5 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] J1 ) {  <CR> Evaluation q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q7 = new Envelop ( "Taipei" , "Kaohsiung" , q6 ) ;  <CR> q7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String U3 , String r , String t4 , String F8 , String A4 ) {  <CR> this . title = U3 ;  <CR> this . receiver = r ;  <CR> this . content = t4 ;  <CR> this . sender = F8 ;  <CR> this . date = A4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int E2 ) {  <CR> list [ E2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int q9 ) {  <CR> this . x = q9 ;  <CR> }  <CR> public int compareTo ( Object F5 ) {  <CR> Letter F = ( Letter ) F5 ;  <CR> if ( this . x > F . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] L1 ) {  <CR> int E2 ;  <CR> for ( E2 = list . length - 1 ; E2 >= 0 ; E2 -- ) {  <CR> int U1 = E2 ;  <CR> Letter u7 = new Letter ( E2 ) ;  <CR> Letter V9 = new Letter ( U1 - 1 ) ;  <CR> if ( u7 . compareTo ( V9 ) == 1 )  <CR> u7 . display ( E2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 