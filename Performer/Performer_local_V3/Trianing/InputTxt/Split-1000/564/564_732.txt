 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L2 , String i2 , String K4 , String c7 , String H0 ) {  <CR> super ( L2 , i2 , K4 , c7 , H0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B0 , String w5 , String o0 , String B6 , String P1 ) {  <CR> super ( B0 , w5 , o0 , B6 , P1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String W4 , String r0 , Evaluation q0 ) {  <CR> this . senderAddr = W4 ;  <CR> this . receiverAddr = r0 ;  <CR> this . letter = q0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] S6 ) {  <CR> Evaluation v7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l1 = new Envelop ( "Taipei" , "Kaohsiung" , v7 ) ;  <CR> l1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String l3 , String z6 , String O2 , String V2 , String T3 ) {  <CR> this . title = l3 ;  <CR> this . receiver = z6 ;  <CR> this . content = O2 ;  <CR> this . sender = V2 ;  <CR> this . date = T3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] o4 ) {  <CR> int a9 ;  <CR> for ( a9 = list . length - 1 ; a9 >= 0 ; a9 -- ) {  <CR> int w7 = a9 ;  <CR> Letter a4 = new Letter ( a9 ) ;  <CR> Letter U0 = new Letter ( w7 - 1 ) ;  <CR> if ( a4 . compareTo ( U0 ) == 1 )  <CR> a4 . display ( a9 ) ;  <CR> }  <CR> }  <CR> public void display ( int a9 ) {  <CR> list [ a9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object K6 ) {  <CR> Letter A7 = ( Letter ) K6 ;  <CR> if ( this . x > A7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int E0 ) {  <CR> this . x = E0 ;  <CR> }  <CR> }  <CR>  <EOC> 