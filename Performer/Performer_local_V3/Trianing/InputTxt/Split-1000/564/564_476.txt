 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y , String m9 , String s3 , String I6 , String W ) {  <CR> super ( y , m9 , s3 , I6 , W ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G4 , String o3 , String m0 , String M9 , String Z9 ) {  <CR> super ( G4 , o3 , m0 , M9 , Z9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String d2 , String O9 , Evaluation U0 ) {  <CR> this . senderAddr = d2 ;  <CR> this . receiverAddr = O9 ;  <CR> this . letter = U0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] m2 ) {  <CR> Evaluation V = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i5 = new Envelop ( "Taipei" , "Kaohsiung" , V ) ;  <CR> i5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String A8 , String K7 , String a1 , String P1 , String A0 ) {  <CR> this . title = A8 ;  <CR> this . receiver = K7 ;  <CR> this . content = a1 ;  <CR> this . sender = P1 ;  <CR> this . date = A0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] v ) {  <CR> int y5 ;  <CR> for ( y5 = list . length - 1 ; y5 >= 0 ; y5 -- ) {  <CR> int T5 = y5 ;  <CR> Letter l7 = new Letter ( y5 ) ;  <CR> Letter Y8 = new Letter ( T5 - 1 ) ;  <CR> if ( l7 . compareTo ( Y8 ) == 1 )  <CR> l7 . display ( y5 ) ;  <CR> }  <CR> }  <CR> public void display ( int y5 ) {  <CR> list [ y5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object W1 ) {  <CR> Letter C1 = ( Letter ) W1 ;  <CR> if ( this . x > C1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int V8 ) {  <CR> this . x = V8 ;  <CR> }  <CR> }  <CR>  <EOC> 