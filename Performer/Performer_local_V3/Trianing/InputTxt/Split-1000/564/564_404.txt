 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String m0 , String f5 , String M9 , String Q3 , String l6 ) {  <CR> super ( m0 , f5 , M9 , Q3 , l6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String U2 , String Q2 , String y5 , String G3 , String S1 ) {  <CR> super ( U2 , Q2 , y5 , G3 , S1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String A9 , String m7 , Evaluation N9 ) {  <CR> this . senderAddr = A9 ;  <CR> this . receiverAddr = m7 ;  <CR> this . letter = N9 ;  <CR> }  <CR> public static void main ( String [ ] z3 ) {  <CR> Evaluation p4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n6 = new Envelop ( "Taipei" , "Kaohsiung" , p4 ) ;  <CR> n6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String I8 , String f4 , String e7 , String W4 , String f8 ) {  <CR> this . title = I8 ;  <CR> this . receiver = f4 ;  <CR> this . content = e7 ;  <CR> this . sender = W4 ;  <CR> this . date = f8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object y5 ) {  <CR> Letter c9 = ( Letter ) y5 ;  <CR> if ( this . x > c9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int U7 ) {  <CR> this . x = U7 ;  <CR> }  <CR> public void display ( int w0 ) {  <CR> list [ w0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P ) {  <CR> int w0 ;  <CR> for ( w0 = list . length - 1 ; w0 >= 0 ; w0 -- ) {  <CR> int I = w0 ;  <CR> Letter j4 = new Letter ( w0 ) ;  <CR> Letter b8 = new Letter ( I - 1 ) ;  <CR> if ( j4 . compareTo ( b8 ) == 1 )  <CR> j4 . display ( w0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 