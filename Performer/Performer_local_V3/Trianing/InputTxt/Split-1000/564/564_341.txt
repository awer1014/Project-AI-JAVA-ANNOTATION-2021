 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v6 , String f3 , String Z1 , String Q8 , String o8 ) {  <CR> super ( v6 , f3 , Z1 , Q8 , o8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q2 , String R3 , String m9 , String q8 , String Y5 ) {  <CR> super ( q2 , R3 , m9 , q8 , Y5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] F5 ) {  <CR> Evaluation G9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y2 = new Envelop ( "Taipei" , "Kaohsiung" , G9 ) ;  <CR> y2 . display ( ) ;  <CR> }  <CR> public Envelop ( String X4 , String V4 , Evaluation C5 ) {  <CR> this . senderAddr = X4 ;  <CR> this . receiverAddr = V4 ;  <CR> this . letter = C5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String A5 , String T0 , String W4 , String p , String K6 ) {  <CR> this . title = A5 ;  <CR> this . receiver = T0 ;  <CR> this . content = W4 ;  <CR> this . sender = p ;  <CR> this . date = K6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object m4 ) {  <CR> Letter e0 = ( Letter ) m4 ;  <CR> if ( this . x > e0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int G ) {  <CR> list [ G ] . Display ( ) ;  <CR> }  <CR> Letter ( int U0 ) {  <CR> this . x = U0 ;  <CR> }  <CR> public static void main ( String [ ] l5 ) {  <CR> int G ;  <CR> for ( G = list . length - 1 ; G >= 0 ; G -- ) {  <CR> int Q9 = G ;  <CR> Letter a = new Letter ( G ) ;  <CR> Letter T1 = new Letter ( Q9 - 1 ) ;  <CR> if ( a . compareTo ( T1 ) == 1 )  <CR> a . display ( G ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 