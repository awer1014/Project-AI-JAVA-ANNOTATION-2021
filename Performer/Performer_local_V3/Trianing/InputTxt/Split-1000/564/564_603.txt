 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String z1 , String k8 , String p4 , String f1 , String x8 ) {  <CR> super ( z1 , k8 , p4 , f1 , x8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t6 , String I , String f , String F5 , String F3 ) {  <CR> super ( t6 , I , f , F5 , F3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] n4 ) {  <CR> Evaluation D7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d7 = new Envelop ( "Taipei" , "Kaohsiung" , D7 ) ;  <CR> d7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String L3 , String x1 , Evaluation J6 ) {  <CR> this . senderAddr = L3 ;  <CR> this . receiverAddr = x1 ;  <CR> this . letter = J6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String X7 , String W , String l2 , String s7 , String G0 ) {  <CR> this . title = X7 ;  <CR> this . receiver = W ;  <CR> this . content = l2 ;  <CR> this . sender = s7 ;  <CR> this . date = G0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object I ) {  <CR> Letter i9 = ( Letter ) I ;  <CR> if ( this . x > i9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] B4 ) {  <CR> int Y0 ;  <CR> for ( Y0 = list . length - 1 ; Y0 >= 0 ; Y0 -- ) {  <CR> int j = Y0 ;  <CR> Letter D5 = new Letter ( Y0 ) ;  <CR> Letter J4 = new Letter ( j - 1 ) ;  <CR> if ( D5 . compareTo ( J4 ) == 1 )  <CR> D5 . display ( Y0 ) ;  <CR> }  <CR> }  <CR> public void display ( int Y0 ) {  <CR> list [ Y0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int L ) {  <CR> this . x = L ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 