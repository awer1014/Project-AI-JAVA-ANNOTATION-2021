 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i3 , String X , String n8 , String y1 , String X7 ) {  <CR> super ( i3 , X , n8 , y1 , X7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String J2 , String S , String N9 , String w4 , String I5 ) {  <CR> super ( J2 , S , N9 , w4 , I5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String S0 , String A , Evaluation P1 ) {  <CR> this . senderAddr = S0 ;  <CR> this . receiverAddr = A ;  <CR> this . letter = P1 ;  <CR> }  <CR> public static void main ( String [ ] c ) {  <CR> Evaluation Y = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s0 = new Envelop ( "Taipei" , "Kaohsiung" , Y ) ;  <CR> s0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String d4 , String u3 , String p , String d7 , String q7 ) {  <CR> this . title = d4 ;  <CR> this . receiver = u3 ;  <CR> this . content = p ;  <CR> this . sender = d7 ;  <CR> this . date = q7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] W0 ) {  <CR> int k3 ;  <CR> for ( k3 = list . length - 1 ; k3 >= 0 ; k3 -- ) {  <CR> int P9 = k3 ;  <CR> Letter H6 = new Letter ( k3 ) ;  <CR> Letter Z6 = new Letter ( P9 - 1 ) ;  <CR> if ( H6 . compareTo ( Z6 ) == 1 )  <CR> H6 . display ( k3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object e8 ) {  <CR> Letter V9 = ( Letter ) e8 ;  <CR> if ( this . x > V9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int k3 ) {  <CR> list [ k3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int O ) {  <CR> this . x = O ;  <CR> }  <CR> }  <CR>  <EOC> 