 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String P1 , String B6 , String b3 , String F7 , String G9 ) {  <CR> super ( P1 , B6 , b3 , F7 , G9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D2 , String e5 , String U0 , String S2 , String s7 ) {  <CR> super ( D2 , e5 , U0 , S2 , s7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String O0 , String I8 , Evaluation G9 ) {  <CR> this . senderAddr = O0 ;  <CR> this . receiverAddr = I8 ;  <CR> this . letter = G9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] x5 ) {  <CR> Evaluation A9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l3 = new Envelop ( "Taipei" , "Kaohsiung" , A9 ) ;  <CR> l3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String D7 , String T3 , String M9 , String j0 , String e6 ) {  <CR> this . title = D7 ;  <CR> this . receiver = T3 ;  <CR> this . content = M9 ;  <CR> this . sender = j0 ;  <CR> this . date = e6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int v ) {  <CR> this . x = v ;  <CR> }  <CR> public void display ( int Z6 ) {  <CR> list [ Z6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] K3 ) {  <CR> int Z6 ;  <CR> for ( Z6 = list . length - 1 ; Z6 >= 0 ; Z6 -- ) {  <CR> int h3 = Z6 ;  <CR> Letter q0 = new Letter ( Z6 ) ;  <CR> Letter B = new Letter ( h3 - 1 ) ;  <CR> if ( q0 . compareTo ( B ) == 1 )  <CR> q0 . display ( Z6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object n7 ) {  <CR> Letter B1 = ( Letter ) n7 ;  <CR> if ( this . x > B1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 