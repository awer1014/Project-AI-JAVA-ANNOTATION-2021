 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g5 , String D3 , String B , String D4 , String W9 ) {  <CR> super ( g5 , D3 , B , D4 , W9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String c3 , String y1 , String x5 , String l , String w7 ) {  <CR> super ( c3 , y1 , x5 , l , w7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String r8 , String r0 , Evaluation v0 ) {  <CR> this . senderAddr = r8 ;  <CR> this . receiverAddr = r0 ;  <CR> this . letter = v0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D4 ) {  <CR> Evaluation g4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n9 = new Envelop ( "Taipei" , "Kaohsiung" , g4 ) ;  <CR> n9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String h , String g2 , String j7 , String V1 , String X1 ) {  <CR> this . title = h ;  <CR> this . receiver = g2 ;  <CR> this . content = j7 ;  <CR> this . sender = V1 ;  <CR> this . date = X1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] c1 ) {  <CR> int F ;  <CR> for ( F = list . length - 1 ; F >= 0 ; F -- ) {  <CR> int u3 = F ;  <CR> Letter W4 = new Letter ( F ) ;  <CR> Letter s9 = new Letter ( u3 - 1 ) ;  <CR> if ( W4 . compareTo ( s9 ) == 1 )  <CR> W4 . display ( F ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object U ) {  <CR> Letter n0 = ( Letter ) U ;  <CR> if ( this . x > n0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int H8 ) {  <CR> this . x = H8 ;  <CR> }  <CR> public void display ( int F ) {  <CR> list [ F ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 