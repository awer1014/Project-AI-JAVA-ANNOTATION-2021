 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q2 , String V7 , String w6 , String a4 , String b9 ) {  <CR> super ( Q2 , V7 , w6 , a4 , b9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C3 , String T8 , String W1 , String H2 , String g6 ) {  <CR> super ( C3 , T8 , W1 , H2 , g6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] q6 ) {  <CR> Evaluation b3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v0 = new Envelop ( "Taipei" , "Kaohsiung" , b3 ) ;  <CR> v0 . display ( ) ;  <CR> }  <CR> public Envelop ( String v8 , String z8 , Evaluation G8 ) {  <CR> this . senderAddr = v8 ;  <CR> this . receiverAddr = z8 ;  <CR> this . letter = G8 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Z2 , String O6 , String x3 , String d6 , String T2 ) {  <CR> this . title = Z2 ;  <CR> this . receiver = O6 ;  <CR> this . content = x3 ;  <CR> this . sender = d6 ;  <CR> this . date = T2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] b6 ) {  <CR> int r ;  <CR> for ( r = list . length - 1 ; r >= 0 ; r -- ) {  <CR> int S1 = r ;  <CR> Letter I7 = new Letter ( r ) ;  <CR> Letter q5 = new Letter ( S1 - 1 ) ;  <CR> if ( I7 . compareTo ( q5 ) == 1 )  <CR> I7 . display ( r ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object g ) {  <CR> Letter g5 = ( Letter ) g ;  <CR> if ( this . x > g5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int r ) {  <CR> list [ r ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int G9 ) {  <CR> this . x = G9 ;  <CR> }  <CR> }  <CR>  <EOC> 