 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D2 , String q1 , String I3 , String X2 , String R0 ) {  <CR> super ( D2 , q1 , I3 , X2 , R0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K3 , String X6 , String Z8 , String K0 , String o0 ) {  <CR> super ( K3 , X6 , Z8 , K0 , o0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String b6 , String G0 , Evaluation K7 ) {  <CR> this . senderAddr = b6 ;  <CR> this . receiverAddr = G0 ;  <CR> this . letter = K7 ;  <CR> }  <CR> public static void main ( String [ ] K9 ) {  <CR> Evaluation g7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L6 = new Envelop ( "Taipei" , "Kaohsiung" , g7 ) ;  <CR> L6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String h0 , String j5 , String k2 , String i4 , String T9 ) {  <CR> this . title = h0 ;  <CR> this . receiver = j5 ;  <CR> this . content = k2 ;  <CR> this . sender = i4 ;  <CR> this . date = T9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int B0 ) {  <CR> list [ B0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int L7 ) {  <CR> this . x = L7 ;  <CR> }  <CR> public int compareTo ( Object j9 ) {  <CR> Letter e5 = ( Letter ) j9 ;  <CR> if ( this . x > e5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] y9 ) {  <CR> int B0 ;  <CR> for ( B0 = list . length - 1 ; B0 >= 0 ; B0 -- ) {  <CR> int l8 = B0 ;  <CR> Letter G5 = new Letter ( B0 ) ;  <CR> Letter y = new Letter ( l8 - 1 ) ;  <CR> if ( G5 . compareTo ( y ) == 1 )  <CR> G5 . display ( B0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 