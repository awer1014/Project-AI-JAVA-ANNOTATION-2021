 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D8 , String N3 , String b , String M4 , String Y4 ) {  <CR> super ( D8 , N3 , b , M4 , Y4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S4 , String a0 , String b3 , String Y1 , String C5 ) {  <CR> super ( S4 , a0 , b3 , Y1 , C5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Z5 ) {  <CR> Evaluation r6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e4 = new Envelop ( "Taipei" , "Kaohsiung" , r6 ) ;  <CR> e4 . display ( ) ;  <CR> }  <CR> public Envelop ( String l6 , String d9 , Evaluation F8 ) {  <CR> this . senderAddr = l6 ;  <CR> this . receiverAddr = d9 ;  <CR> this . letter = F8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Y2 , String o9 , String z1 , String W0 , String u4 ) {  <CR> this . title = Y2 ;  <CR> this . receiver = o9 ;  <CR> this . content = z1 ;  <CR> this . sender = W0 ;  <CR> this . date = u4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object m ) {  <CR> Letter X1 = ( Letter ) m ;  <CR> if ( this . x > X1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int c3 ) {  <CR> this . x = c3 ;  <CR> }  <CR> public static void main ( String [ ] y2 ) {  <CR> int H1 ;  <CR> for ( H1 = list . length - 1 ; H1 >= 0 ; H1 -- ) {  <CR> int x4 = H1 ;  <CR> Letter Z8 = new Letter ( H1 ) ;  <CR> Letter g7 = new Letter ( x4 - 1 ) ;  <CR> if ( Z8 . compareTo ( g7 ) == 1 )  <CR> Z8 . display ( H1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H1 ) {  <CR> list [ H1 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 