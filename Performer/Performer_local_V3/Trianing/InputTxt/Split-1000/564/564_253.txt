 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z7 , String Z6 , String B2 , String v0 , String J4 ) {  <CR> super ( z7 , Z6 , B2 , v0 , J4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L3 , String M6 , String j7 , String y3 , String V5 ) {  <CR> super ( L3 , M6 , j7 , y3 , V5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String y6 , String h4 , Evaluation T8 ) {  <CR> this . senderAddr = y6 ;  <CR> this . receiverAddr = h4 ;  <CR> this . letter = T8 ;  <CR> }  <CR> public static void main ( String [ ] c8 ) {  <CR> Evaluation q2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N1 = new Envelop ( "Taipei" , "Kaohsiung" , q2 ) ;  <CR> N1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String u1 , String w4 , String V3 , String A8 , String h ) {  <CR> this . title = u1 ;  <CR> this . receiver = w4 ;  <CR> this . content = V3 ;  <CR> this . sender = A8 ;  <CR> this . date = h ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] L4 ) {  <CR> int c7 ;  <CR> for ( c7 = list . length - 1 ; c7 >= 0 ; c7 -- ) {  <CR> int F5 = c7 ;  <CR> Letter s0 = new Letter ( c7 ) ;  <CR> Letter d = new Letter ( F5 - 1 ) ;  <CR> if ( s0 . compareTo ( d ) == 1 )  <CR> s0 . display ( c7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int e1 ) {  <CR> this . x = e1 ;  <CR> }  <CR> public void display ( int c7 ) {  <CR> list [ c7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object x4 ) {  <CR> Letter l2 = ( Letter ) x4 ;  <CR> if ( this . x > l2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 