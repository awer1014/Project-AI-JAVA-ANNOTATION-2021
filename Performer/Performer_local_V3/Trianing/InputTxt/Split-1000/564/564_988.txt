 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J2 , String C9 , String d1 , String n9 , String R0 ) {  <CR> super ( J2 , C9 , d1 , n9 , R0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n1 , String B5 , String E5 , String d0 , String L9 ) {  <CR> super ( n1 , B5 , E5 , d0 , L9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] j7 ) {  <CR> Evaluation S1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q8 = new Envelop ( "Taipei" , "Kaohsiung" , S1 ) ;  <CR> Q8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String t7 , String a7 , Evaluation J7 ) {  <CR> this . senderAddr = t7 ;  <CR> this . receiverAddr = a7 ;  <CR> this . letter = J7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String r7 , String g6 , String V8 , String k0 , String D9 ) {  <CR> this . title = r7 ;  <CR> this . receiver = g6 ;  <CR> this . content = V8 ;  <CR> this . sender = k0 ;  <CR> this . date = D9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int L5 ) {  <CR> this . x = L5 ;  <CR> }  <CR> public void display ( int o ) {  <CR> list [ o ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object Y8 ) {  <CR> Letter v = ( Letter ) Y8 ;  <CR> if ( this . x > v . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] O7 ) {  <CR> int o ;  <CR> for ( o = list . length - 1 ; o >= 0 ; o -- ) {  <CR> int X4 = o ;  <CR> Letter Y = new Letter ( o ) ;  <CR> Letter s8 = new Letter ( X4 - 1 ) ;  <CR> if ( Y . compareTo ( s8 ) == 1 )  <CR> Y . display ( o ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 