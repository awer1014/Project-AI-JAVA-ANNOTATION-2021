 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L1 , String T2 , String b5 , String l6 , String s5 ) {  <CR> super ( L1 , T2 , b5 , l6 , s5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String d8 , String y2 , String o0 , String a6 , String Z8 ) {  <CR> super ( d8 , y2 , o0 , a6 , Z8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m1 ) {  <CR> Evaluation H5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S3 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> S3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String s1 , String W2 , Evaluation U8 ) {  <CR> this . senderAddr = s1 ;  <CR> this . receiverAddr = W2 ;  <CR> this . letter = U8 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String T9 , String D0 , String y9 , String K , String I1 ) {  <CR> this . title = T9 ;  <CR> this . receiver = D0 ;  <CR> this . content = y9 ;  <CR> this . sender = K ;  <CR> this . date = I1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Z ) {  <CR> list [ Z ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] o ) {  <CR> int Z ;  <CR> for ( Z = list . length - 1 ; Z >= 0 ; Z -- ) {  <CR> int k9 = Z ;  <CR> Letter g1 = new Letter ( Z ) ;  <CR> Letter E5 = new Letter ( k9 - 1 ) ;  <CR> if ( g1 . compareTo ( E5 ) == 1 )  <CR> g1 . display ( Z ) ;  <CR> }  <CR> }  <CR> Letter ( int U1 ) {  <CR> this . x = U1 ;  <CR> }  <CR> public int compareTo ( Object J6 ) {  <CR> Letter R1 = ( Letter ) J6 ;  <CR> if ( this . x > R1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 