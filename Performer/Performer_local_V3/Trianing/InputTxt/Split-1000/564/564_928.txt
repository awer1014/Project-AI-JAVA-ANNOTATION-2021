 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q2 , String f1 , String e4 , String O3 , String R5 ) {  <CR> super ( q2 , f1 , e4 , O3 , R5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y5 , String m , String q5 , String a6 , String C0 ) {  <CR> super ( y5 , m , q5 , a6 , C0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String O8 , String c7 , Evaluation R5 ) {  <CR> this . senderAddr = O8 ;  <CR> this . receiverAddr = c7 ;  <CR> this . letter = R5 ;  <CR> }  <CR> public static void main ( String [ ] a8 ) {  <CR> Evaluation a5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P5 = new Envelop ( "Taipei" , "Kaohsiung" , a5 ) ;  <CR> P5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String F5 , String e1 , String x4 , String h3 , String X3 ) {  <CR> this . title = F5 ;  <CR> this . receiver = e1 ;  <CR> this . content = x4 ;  <CR> this . sender = h3 ;  <CR> this . date = X3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int M7 ) {  <CR> list [ M7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y8 ) {  <CR> int M7 ;  <CR> for ( M7 = list . length - 1 ; M7 >= 0 ; M7 -- ) {  <CR> int O2 = M7 ;  <CR> Letter B2 = new Letter ( M7 ) ;  <CR> Letter C7 = new Letter ( O2 - 1 ) ;  <CR> if ( B2 . compareTo ( C7 ) == 1 )  <CR> B2 . display ( M7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object c1 ) {  <CR> Letter q9 = ( Letter ) c1 ;  <CR> if ( this . x > q9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int b ) {  <CR> this . x = b ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 