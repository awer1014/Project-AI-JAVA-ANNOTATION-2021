 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i , String Z0 , String e0 , String z7 , String k3 ) {  <CR> super ( i , Z0 , e0 , z7 , k3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String P6 , String W8 , String R2 , String v1 , String W7 ) {  <CR> super ( P6 , W8 , R2 , v1 , W7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x8 ) {  <CR> Evaluation j5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u4 = new Envelop ( "Taipei" , "Kaohsiung" , j5 ) ;  <CR> u4 . display ( ) ;  <CR> }  <CR> public Envelop ( String T5 , String w6 , Evaluation w0 ) {  <CR> this . senderAddr = T5 ;  <CR> this . receiverAddr = w6 ;  <CR> this . letter = w0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String b , String X6 , String r2 , String L2 , String I8 ) {  <CR> this . title = b ;  <CR> this . receiver = X6 ;  <CR> this . content = r2 ;  <CR> this . sender = L2 ;  <CR> this . date = I8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int L1 ) {  <CR> this . x = L1 ;  <CR> }  <CR> public void display ( int k8 ) {  <CR> list [ k8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object W4 ) {  <CR> Letter B4 = ( Letter ) W4 ;  <CR> if ( this . x > B4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] u8 ) {  <CR> int k8 ;  <CR> for ( k8 = list . length - 1 ; k8 >= 0 ; k8 -- ) {  <CR> int D6 = k8 ;  <CR> Letter C6 = new Letter ( k8 ) ;  <CR> Letter z7 = new Letter ( D6 - 1 ) ;  <CR> if ( C6 . compareTo ( z7 ) == 1 )  <CR> C6 . display ( k8 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 