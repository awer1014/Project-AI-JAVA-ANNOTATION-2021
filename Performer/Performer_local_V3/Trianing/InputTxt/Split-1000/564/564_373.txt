 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String W3 , String S4 , String W0 , String W4 , String P8 ) {  <CR> super ( W3 , S4 , W0 , W4 , P8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Q9 , String b2 , String V6 , String z9 , String Z9 ) {  <CR> super ( Q9 , b2 , V6 , z9 , Z9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] u3 ) {  <CR> Evaluation W4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n = new Envelop ( "Taipei" , "Kaohsiung" , W4 ) ;  <CR> n . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String W6 , String A , Evaluation u5 ) {  <CR> this . senderAddr = W6 ;  <CR> this . receiverAddr = A ;  <CR> this . letter = u5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String G5 , String c2 , String h8 , String S9 , String w4 ) {  <CR> this . title = G5 ;  <CR> this . receiver = c2 ;  <CR> this . content = h8 ;  <CR> this . sender = S9 ;  <CR> this . date = w4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int Y0 ) {  <CR> this . x = Y0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Q8 ) {  <CR> list [ Q8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object K9 ) {  <CR> Letter J7 = ( Letter ) K9 ;  <CR> if ( this . x > J7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] b5 ) {  <CR> int Q8 ;  <CR> for ( Q8 = list . length - 1 ; Q8 >= 0 ; Q8 -- ) {  <CR> int C5 = Q8 ;  <CR> Letter A2 = new Letter ( Q8 ) ;  <CR> Letter P2 = new Letter ( C5 - 1 ) ;  <CR> if ( A2 . compareTo ( P2 ) == 1 )  <CR> A2 . display ( Q8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 