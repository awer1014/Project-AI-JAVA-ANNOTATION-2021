 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E4 , String i0 , String b , String a8 , String J2 ) {  <CR> super ( E4 , i0 , b , a8 , J2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L3 , String K9 , String i6 , String B , String M9 ) {  <CR> super ( L3 , K9 , i6 , B , M9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String K0 , String L5 , Evaluation o7 ) {  <CR> this . senderAddr = K0 ;  <CR> this . receiverAddr = L5 ;  <CR> this . letter = o7 ;  <CR> }  <CR> public static void main ( String [ ] L1 ) {  <CR> Evaluation P8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b = new Envelop ( "Taipei" , "Kaohsiung" , P8 ) ;  <CR> b . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String S9 , String a3 , String E8 , String z2 , String R7 ) {  <CR> this . title = S9 ;  <CR> this . receiver = a3 ;  <CR> this . content = E8 ;  <CR> this . sender = z2 ;  <CR> this . date = R7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object s2 ) {  <CR> Letter d = ( Letter ) s2 ;  <CR> if ( this . x > d . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int C5 ) {  <CR> this . x = C5 ;  <CR> }  <CR> public void display ( int E1 ) {  <CR> list [ E1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] F2 ) {  <CR> int E1 ;  <CR> for ( E1 = list . length - 1 ; E1 >= 0 ; E1 -- ) {  <CR> int l4 = E1 ;  <CR> Letter k0 = new Letter ( E1 ) ;  <CR> Letter o = new Letter ( l4 - 1 ) ;  <CR> if ( k0 . compareTo ( o ) == 1 )  <CR> k0 . display ( E1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 