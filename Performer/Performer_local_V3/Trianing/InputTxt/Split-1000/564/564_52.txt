 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z5 , String I8 , String Z8 , String g7 , String Y ) {  <CR> super ( z5 , I8 , Z8 , g7 , Y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u6 , String F9 , String x4 , String k4 , String J5 ) {  <CR> super ( u6 , F9 , x4 , k4 , J5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] R2 ) {  <CR> Evaluation M4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z9 = new Envelop ( "Taipei" , "Kaohsiung" , M4 ) ;  <CR> Z9 . display ( ) ;  <CR> }  <CR> public Envelop ( String M3 , String b , Evaluation X3 ) {  <CR> this . senderAddr = M3 ;  <CR> this . receiverAddr = b ;  <CR> this . letter = X3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String K9 , String m9 , String u5 , String H0 , String w3 ) {  <CR> this . title = K9 ;  <CR> this . receiver = m9 ;  <CR> this . content = u5 ;  <CR> this . sender = H0 ;  <CR> this . date = w3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int p2 ) {  <CR> list [ p2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object J ) {  <CR> Letter j7 = ( Letter ) J ;  <CR> if ( this . x > j7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] K4 ) {  <CR> int p2 ;  <CR> for ( p2 = list . length - 1 ; p2 >= 0 ; p2 -- ) {  <CR> int O4 = p2 ;  <CR> Letter v8 = new Letter ( p2 ) ;  <CR> Letter g8 = new Letter ( O4 - 1 ) ;  <CR> if ( v8 . compareTo ( g8 ) == 1 )  <CR> v8 . display ( p2 ) ;  <CR> }  <CR> }  <CR> Letter ( int C3 ) {  <CR> this . x = C3 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 