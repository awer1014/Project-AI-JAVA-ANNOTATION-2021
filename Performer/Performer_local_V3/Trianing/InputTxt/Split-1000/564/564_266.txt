 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O2 , String a3 , String i2 , String Y5 , String q0 ) {  <CR> super ( O2 , a3 , i2 , Y5 , q0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D5 , String y0 , String u2 , String W8 , String X8 ) {  <CR> super ( D5 , y0 , u2 , W8 , X8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o6 ) {  <CR> Evaluation B5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m = new Envelop ( "Taipei" , "Kaohsiung" , B5 ) ;  <CR> m . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String X5 , String M5 , Evaluation T ) {  <CR> this . senderAddr = X5 ;  <CR> this . receiverAddr = M5 ;  <CR> this . letter = T ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String a4 , String t7 , String r9 , String y1 , String S9 ) {  <CR> this . title = a4 ;  <CR> this . receiver = t7 ;  <CR> this . content = r9 ;  <CR> this . sender = y1 ;  <CR> this . date = S9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int O9 ) {  <CR> this . x = O9 ;  <CR> }  <CR> public static void main ( String [ ] M5 ) {  <CR> int i7 ;  <CR> for ( i7 = list . length - 1 ; i7 >= 0 ; i7 -- ) {  <CR> int C = i7 ;  <CR> Letter i6 = new Letter ( i7 ) ;  <CR> Letter i5 = new Letter ( C - 1 ) ;  <CR> if ( i6 . compareTo ( i5 ) == 1 )  <CR> i6 . display ( i7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object n0 ) {  <CR> Letter v7 = ( Letter ) n0 ;  <CR> if ( this . x > v7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i7 ) {  <CR> list [ i7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 