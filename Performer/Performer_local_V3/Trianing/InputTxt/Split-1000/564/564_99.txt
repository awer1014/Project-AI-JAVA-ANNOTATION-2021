 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String J , String M5 , String s7 , String H9 , String p8 ) {  <CR> super ( J , M5 , s7 , H9 , p8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t1 , String e2 , String l4 , String C6 , String o7 ) {  <CR> super ( t1 , e2 , l4 , C6 , o7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Q7 , String w , Evaluation T7 ) {  <CR> this . senderAddr = Q7 ;  <CR> this . receiverAddr = w ;  <CR> this . letter = T7 ;  <CR> }  <CR> public static void main ( String [ ] r5 ) {  <CR> Evaluation c3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R1 = new Envelop ( "Taipei" , "Kaohsiung" , c3 ) ;  <CR> R1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String G4 , String c4 , String l5 , String N3 , String h2 ) {  <CR> this . title = G4 ;  <CR> this . receiver = c4 ;  <CR> this . content = l5 ;  <CR> this . sender = N3 ;  <CR> this . date = h2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int D0 ) {  <CR> list [ D0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object M8 ) {  <CR> Letter L2 = ( Letter ) M8 ;  <CR> if ( this . x > L2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int s2 ) {  <CR> this . x = s2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] D2 ) {  <CR> int D0 ;  <CR> for ( D0 = list . length - 1 ; D0 >= 0 ; D0 -- ) {  <CR> int u1 = D0 ;  <CR> Letter O1 = new Letter ( D0 ) ;  <CR> Letter k7 = new Letter ( u1 - 1 ) ;  <CR> if ( O1 . compareTo ( k7 ) == 1 )  <CR> O1 . display ( D0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 