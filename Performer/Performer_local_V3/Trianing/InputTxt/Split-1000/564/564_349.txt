 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String F0 , String d6 , String G4 , String M6 , String R8 ) {  <CR> super ( F0 , d6 , G4 , M6 , R8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r6 , String c6 , String j7 , String s8 , String i8 ) {  <CR> super ( r6 , c6 , j7 , s8 , i8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String L0 , String A1 , Evaluation t0 ) {  <CR> this . senderAddr = L0 ;  <CR> this . receiverAddr = A1 ;  <CR> this . letter = t0 ;  <CR> }  <CR> public static void main ( String [ ] Y ) {  <CR> Evaluation v4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h6 = new Envelop ( "Taipei" , "Kaohsiung" , v4 ) ;  <CR> h6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y9 , String s9 , String q3 , String n , String D4 ) {  <CR> this . title = Y9 ;  <CR> this . receiver = s9 ;  <CR> this . content = q3 ;  <CR> this . sender = n ;  <CR> this . date = D4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int i9 ) {  <CR> list [ i9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] R0 ) {  <CR> int i9 ;  <CR> for ( i9 = list . length - 1 ; i9 >= 0 ; i9 -- ) {  <CR> int W = i9 ;  <CR> Letter S8 = new Letter ( i9 ) ;  <CR> Letter N2 = new Letter ( W - 1 ) ;  <CR> if ( S8 . compareTo ( N2 ) == 1 )  <CR> S8 . display ( i9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object g ) {  <CR> Letter L0 = ( Letter ) g ;  <CR> if ( this . x > L0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int O ) {  <CR> this . x = O ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 