 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h2 , String s9 , String D9 , String o3 , String N9 ) {  <CR> super ( h2 , s9 , D9 , o3 , N9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q6 , String i2 , String K5 , String S7 , String I6 ) {  <CR> super ( q6 , i2 , K5 , S7 , I6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] j ) {  <CR> Evaluation S9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L3 = new Envelop ( "Taipei" , "Kaohsiung" , S9 ) ;  <CR> L3 . display ( ) ;  <CR> }  <CR> public Envelop ( String c4 , String X9 , Evaluation p6 ) {  <CR> this . senderAddr = c4 ;  <CR> this . receiverAddr = X9 ;  <CR> this . letter = p6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String z9 , String J2 , String d8 , String e8 , String J3 ) {  <CR> this . title = z9 ;  <CR> this . receiver = J2 ;  <CR> this . content = d8 ;  <CR> this . sender = e8 ;  <CR> this . date = J3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] U7 ) {  <CR> int E7 ;  <CR> for ( E7 = list . length - 1 ; E7 >= 0 ; E7 -- ) {  <CR> int F2 = E7 ;  <CR> Letter S0 = new Letter ( E7 ) ;  <CR> Letter W5 = new Letter ( F2 - 1 ) ;  <CR> if ( S0 . compareTo ( W5 ) == 1 )  <CR> S0 . display ( E7 ) ;  <CR> }  <CR> }  <CR> public void display ( int E7 ) {  <CR> list [ E7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object s9 ) {  <CR> Letter V = ( Letter ) s9 ;  <CR> if ( this . x > V . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Y4 ) {  <CR> this . x = Y4 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 