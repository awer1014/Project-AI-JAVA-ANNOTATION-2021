 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O4 , String L9 , String B , String P4 , String t ) {  <CR> super ( O4 , L9 , B , P4 , t ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X9 , String A9 , String g , String q2 , String P0 ) {  <CR> super ( X9 , A9 , g , q2 , P0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] h8 ) {  <CR> Evaluation p3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X6 = new Envelop ( "Taipei" , "Kaohsiung" , p3 ) ;  <CR> X6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String y2 , String Q6 , Evaluation B2 ) {  <CR> this . senderAddr = y2 ;  <CR> this . receiverAddr = Q6 ;  <CR> this . letter = B2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String F0 , String b9 , String k6 , String x7 , String M9 ) {  <CR> this . title = F0 ;  <CR> this . receiver = b9 ;  <CR> this . content = k6 ;  <CR> this . sender = x7 ;  <CR> this . date = M9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int a2 ) {  <CR> this . x = a2 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int b5 ) {  <CR> list [ b5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m4 ) {  <CR> int b5 ;  <CR> for ( b5 = list . length - 1 ; b5 >= 0 ; b5 -- ) {  <CR> int y2 = b5 ;  <CR> Letter S = new Letter ( b5 ) ;  <CR> Letter U7 = new Letter ( y2 - 1 ) ;  <CR> if ( S . compareTo ( U7 ) == 1 )  <CR> S . display ( b5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object L6 ) {  <CR> Letter r = ( Letter ) L6 ;  <CR> if ( this . x > r . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 