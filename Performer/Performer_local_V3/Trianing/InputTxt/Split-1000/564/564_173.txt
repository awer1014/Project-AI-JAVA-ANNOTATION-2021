 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String n6 , String W4 , String K3 , String v7 , String u9 ) {  <CR> super ( n6 , W4 , K3 , v7 , u9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String r9 , String X5 , String c4 , String L6 , String f2 ) {  <CR> super ( r9 , X5 , c4 , L6 , f2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String S6 , String h3 , Evaluation g1 ) {  <CR> this . senderAddr = S6 ;  <CR> this . receiverAddr = h3 ;  <CR> this . letter = g1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Y5 ) {  <CR> Evaluation m1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y8 = new Envelop ( "Taipei" , "Kaohsiung" , m1 ) ;  <CR> y8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String x0 , String I3 , String g1 , String f1 , String K4 ) {  <CR> this . title = x0 ;  <CR> this . receiver = I3 ;  <CR> this . content = g1 ;  <CR> this . sender = f1 ;  <CR> this . date = K4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object S3 ) {  <CR> Letter s1 = ( Letter ) S3 ;  <CR> if ( this . x > s1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int w2 ) {  <CR> this . x = w2 ;  <CR> }  <CR> public void display ( int f ) {  <CR> list [ f ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] T7 ) {  <CR> int f ;  <CR> for ( f = list . length - 1 ; f >= 0 ; f -- ) {  <CR> int c7 = f ;  <CR> Letter i1 = new Letter ( f ) ;  <CR> Letter W = new Letter ( c7 - 1 ) ;  <CR> if ( i1 . compareTo ( W ) == 1 )  <CR> i1 . display ( f ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 