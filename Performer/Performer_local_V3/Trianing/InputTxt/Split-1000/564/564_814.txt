 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b7 , String g7 , String y0 , String O0 , String e9 ) {  <CR> super ( b7 , g7 , y0 , O0 , e9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String m6 , String g9 , String q8 , String o0 , String g ) {  <CR> super ( m6 , g9 , q8 , o0 , g ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String a7 , String s5 , Evaluation L3 ) {  <CR> this . senderAddr = a7 ;  <CR> this . receiverAddr = s5 ;  <CR> this . letter = L3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] T4 ) {  <CR> Evaluation H3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h5 = new Envelop ( "Taipei" , "Kaohsiung" , H3 ) ;  <CR> h5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String p1 , String n5 , String z8 , String x7 , String D6 ) {  <CR> this . title = p1 ;  <CR> this . receiver = n5 ;  <CR> this . content = z8 ;  <CR> this . sender = x7 ;  <CR> this . date = D6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int T1 ) {  <CR> this . x = T1 ;  <CR> }  <CR> public int compareTo ( Object K4 ) {  <CR> Letter V4 = ( Letter ) K4 ;  <CR> if ( this . x > V4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] P8 ) {  <CR> int l0 ;  <CR> for ( l0 = list . length - 1 ; l0 >= 0 ; l0 -- ) {  <CR> int A7 = l0 ;  <CR> Letter R1 = new Letter ( l0 ) ;  <CR> Letter X = new Letter ( A7 - 1 ) ;  <CR> if ( R1 . compareTo ( X ) == 1 )  <CR> R1 . display ( l0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int l0 ) {  <CR> list [ l0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 