 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String l4 , String h2 , String E , String C5 , String V9 ) {  <CR> super ( l4 , h2 , E , C5 , V9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String p0 , String R , String V7 , String h0 , String k5 ) {  <CR> super ( p0 , R , V7 , h0 , k5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String W1 , String F3 , Evaluation c7 ) {  <CR> this . senderAddr = W1 ;  <CR> this . receiverAddr = F3 ;  <CR> this . letter = c7 ;  <CR> }  <CR> public static void main ( String [ ] X2 ) {  <CR> Evaluation J1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B9 = new Envelop ( "Taipei" , "Kaohsiung" , J1 ) ;  <CR> B9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String d6 , String w5 , String q5 , String R4 , String n1 ) {  <CR> this . title = d6 ;  <CR> this . receiver = w5 ;  <CR> this . content = q5 ;  <CR> this . sender = R4 ;  <CR> this . date = n1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object z5 ) {  <CR> Letter D = ( Letter ) z5 ;  <CR> if ( this . x > D . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int f4 ) {  <CR> list [ f4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int A7 ) {  <CR> this . x = A7 ;  <CR> }  <CR> public static void main ( String [ ] Q3 ) {  <CR> int f4 ;  <CR> for ( f4 = list . length - 1 ; f4 >= 0 ; f4 -- ) {  <CR> int t6 = f4 ;  <CR> Letter v0 = new Letter ( f4 ) ;  <CR> Letter p4 = new Letter ( t6 - 1 ) ;  <CR> if ( v0 . compareTo ( p4 ) == 1 )  <CR> v0 . display ( f4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 