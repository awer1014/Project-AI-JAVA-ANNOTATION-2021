 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u6 , String r5 , String y1 , String A7 , String e5 ) {  <CR> super ( u6 , r5 , y1 , A7 , e5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l0 , String d2 , String q2 , String A , String o7 ) {  <CR> super ( l0 , d2 , q2 , A , o7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] H9 ) {  <CR> Evaluation j6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s0 = new Envelop ( "Taipei" , "Kaohsiung" , j6 ) ;  <CR> s0 . display ( ) ;  <CR> }  <CR> public Envelop ( String z5 , String g7 , Evaluation y6 ) {  <CR> this . senderAddr = z5 ;  <CR> this . receiverAddr = g7 ;  <CR> this . letter = y6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String c8 , String d7 , String K0 , String g4 , String K6 ) {  <CR> this . title = c8 ;  <CR> this . receiver = d7 ;  <CR> this . content = K0 ;  <CR> this . sender = g4 ;  <CR> this . date = K6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object B8 ) {  <CR> Letter j6 = ( Letter ) B8 ;  <CR> if ( this . x > j6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int k2 ) {  <CR> this . x = k2 ;  <CR> }  <CR> public void display ( int i1 ) {  <CR> list [ i1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] T1 ) {  <CR> int i1 ;  <CR> for ( i1 = list . length - 1 ; i1 >= 0 ; i1 -- ) {  <CR> int u3 = i1 ;  <CR> Letter d7 = new Letter ( i1 ) ;  <CR> Letter z = new Letter ( u3 - 1 ) ;  <CR> if ( d7 . compareTo ( z ) == 1 )  <CR> d7 . display ( i1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 