 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b0 , String R0 , String S9 , String e1 , String w1 ) {  <CR> super ( b0 , R0 , S9 , e1 , w1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L3 , String t7 , String H6 , String H2 , String D1 ) {  <CR> super ( L3 , t7 , H6 , H2 , D1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P5 ) {  <CR> Evaluation X3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a9 = new Envelop ( "Taipei" , "Kaohsiung" , X3 ) ;  <CR> a9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String F , String P2 , Evaluation g5 ) {  <CR> this . senderAddr = F ;  <CR> this . receiverAddr = P2 ;  <CR> this . letter = g5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String h5 , String M4 , String D0 , String k0 , String K3 ) {  <CR> this . title = h5 ;  <CR> this . receiver = M4 ;  <CR> this . content = D0 ;  <CR> this . sender = k0 ;  <CR> this . date = K3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object j1 ) {  <CR> Letter q7 = ( Letter ) j1 ;  <CR> if ( this . x > q7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int M9 ) {  <CR> this . x = M9 ;  <CR> }  <CR> public void display ( int h8 ) {  <CR> list [ h8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w9 ) {  <CR> int h8 ;  <CR> for ( h8 = list . length - 1 ; h8 >= 0 ; h8 -- ) {  <CR> int K3 = h8 ;  <CR> Letter b9 = new Letter ( h8 ) ;  <CR> Letter L1 = new Letter ( K3 - 1 ) ;  <CR> if ( b9 . compareTo ( L1 ) == 1 )  <CR> b9 . display ( h8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 