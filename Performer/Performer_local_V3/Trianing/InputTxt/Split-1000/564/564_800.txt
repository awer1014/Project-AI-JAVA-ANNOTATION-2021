 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Y4 , String i7 , String I3 , String e1 , String I ) {  <CR> super ( Y4 , i7 , I3 , e1 , I ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s3 , String H4 , String K4 , String g2 , String I1 ) {  <CR> super ( s3 , H4 , K4 , g2 , I1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String a6 , String E1 , Evaluation E6 ) {  <CR> this . senderAddr = a6 ;  <CR> this . receiverAddr = E1 ;  <CR> this . letter = E6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] n5 ) {  <CR> Evaluation S9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U7 = new Envelop ( "Taipei" , "Kaohsiung" , S9 ) ;  <CR> U7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String M6 , String X7 , String y9 , String T2 , String N2 ) {  <CR> this . title = M6 ;  <CR> this . receiver = X7 ;  <CR> this . content = y9 ;  <CR> this . sender = T2 ;  <CR> this . date = N2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object N6 ) {  <CR> Letter l7 = ( Letter ) N6 ;  <CR> if ( this . x > l7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] c8 ) {  <CR> int a8 ;  <CR> for ( a8 = list . length - 1 ; a8 >= 0 ; a8 -- ) {  <CR> int L = a8 ;  <CR> Letter T = new Letter ( a8 ) ;  <CR> Letter i2 = new Letter ( L - 1 ) ;  <CR> if ( T . compareTo ( i2 ) == 1 )  <CR> T . display ( a8 ) ;  <CR> }  <CR> }  <CR> Letter ( int F7 ) {  <CR> this . x = F7 ;  <CR> }  <CR> public void display ( int a8 ) {  <CR> list [ a8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 