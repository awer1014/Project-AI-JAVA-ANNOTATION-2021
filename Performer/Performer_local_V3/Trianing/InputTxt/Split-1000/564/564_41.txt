 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o4 , String D9 , String d2 , String Y0 , String j8 ) {  <CR> super ( o4 , D9 , d2 , Y0 , j8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G8 , String K6 , String u5 , String W7 , String F8 ) {  <CR> super ( G8 , K6 , u5 , W7 , F8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] u9 ) {  <CR> Evaluation A9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f0 = new Envelop ( "Taipei" , "Kaohsiung" , A9 ) ;  <CR> f0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String w0 , String j4 , Evaluation D5 ) {  <CR> this . senderAddr = w0 ;  <CR> this . receiverAddr = j4 ;  <CR> this . letter = D5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String D6 , String H4 , String e4 , String Q6 , String Z3 ) {  <CR> this . title = D6 ;  <CR> this . receiver = H4 ;  <CR> this . content = e4 ;  <CR> this . sender = Q6 ;  <CR> this . date = Z3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z6 ) {  <CR> int P4 ;  <CR> for ( P4 = list . length - 1 ; P4 >= 0 ; P4 -- ) {  <CR> int l6 = P4 ;  <CR> Letter N6 = new Letter ( P4 ) ;  <CR> Letter V9 = new Letter ( l6 - 1 ) ;  <CR> if ( N6 . compareTo ( V9 ) == 1 )  <CR> N6 . display ( P4 ) ;  <CR> }  <CR> }  <CR> Letter ( int r7 ) {  <CR> this . x = r7 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P4 ) {  <CR> list [ P4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object u6 ) {  <CR> Letter v0 = ( Letter ) u6 ;  <CR> if ( this . x > v0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 