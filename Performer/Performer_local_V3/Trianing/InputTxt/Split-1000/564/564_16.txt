 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y8 , String M6 , String p3 , String Q7 , String C7 ) {  <CR> super ( y8 , M6 , p3 , Q7 , C7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y1 , String I3 , String z5 , String a5 , String o ) {  <CR> super ( y1 , I3 , z5 , a5 , o ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String l9 , String R3 , Evaluation a6 ) {  <CR> this . senderAddr = l9 ;  <CR> this . receiverAddr = R3 ;  <CR> this . letter = a6 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v0 ) {  <CR> Evaluation Y3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x8 = new Envelop ( "Taipei" , "Kaohsiung" , Y3 ) ;  <CR> x8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s , String o2 , String F0 , String X7 , String V4 ) {  <CR> this . title = s ;  <CR> this . receiver = o2 ;  <CR> this . content = F0 ;  <CR> this . sender = X7 ;  <CR> this . date = V4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int f7 ) {  <CR> list [ f7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w0 ) {  <CR> int f7 ;  <CR> for ( f7 = list . length - 1 ; f7 >= 0 ; f7 -- ) {  <CR> int A4 = f7 ;  <CR> Letter O0 = new Letter ( f7 ) ;  <CR> Letter e9 = new Letter ( A4 - 1 ) ;  <CR> if ( O0 . compareTo ( e9 ) == 1 )  <CR> O0 . display ( f7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object I4 ) {  <CR> Letter s7 = ( Letter ) I4 ;  <CR> if ( this . x > s7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int W9 ) {  <CR> this . x = W9 ;  <CR> }  <CR> }  <CR>  <EOC> 