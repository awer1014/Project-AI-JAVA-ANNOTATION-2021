 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y4 , String M4 , String m8 , String g4 , String W0 ) {  <CR> super ( Y4 , M4 , m8 , g4 , W0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e7 , String r1 , String J2 , String w3 , String a9 ) {  <CR> super ( e7 , r1 , J2 , w3 , a9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] u3 ) {  <CR> Evaluation Q7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y = new Envelop ( "Taipei" , "Kaohsiung" , Q7 ) ;  <CR> Y . display ( ) ;  <CR> }  <CR> public Envelop ( String b8 , String o8 , Evaluation W7 ) {  <CR> this . senderAddr = b8 ;  <CR> this . receiverAddr = o8 ;  <CR> this . letter = W7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String C5 , String j2 , String j9 , String L7 , String x3 ) {  <CR> this . title = C5 ;  <CR> this . receiver = j2 ;  <CR> this . content = j9 ;  <CR> this . sender = L7 ;  <CR> this . date = x3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int L6 ) {  <CR> list [ L6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object v9 ) {  <CR> Letter j4 = ( Letter ) v9 ;  <CR> if ( this . x > j4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int G9 ) {  <CR> this . x = G9 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] l4 ) {  <CR> int L6 ;  <CR> for ( L6 = list . length - 1 ; L6 >= 0 ; L6 -- ) {  <CR> int Y4 = L6 ;  <CR> Letter y5 = new Letter ( L6 ) ;  <CR> Letter b9 = new Letter ( Y4 - 1 ) ;  <CR> if ( y5 . compareTo ( b9 ) == 1 )  <CR> y5 . display ( L6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 