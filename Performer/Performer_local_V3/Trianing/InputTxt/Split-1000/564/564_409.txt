 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String V4 , String J9 , String N8 , String W4 , String P6 ) {  <CR> super ( V4 , J9 , N8 , W4 , P6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E3 , String K8 , String m3 , String Q0 , String d2 ) {  <CR> super ( E3 , K8 , m3 , Q0 , d2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] T5 ) {  <CR> Evaluation I2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i3 = new Envelop ( "Taipei" , "Kaohsiung" , I2 ) ;  <CR> i3 . display ( ) ;  <CR> }  <CR> public Envelop ( String K6 , String p1 , Evaluation m0 ) {  <CR> this . senderAddr = K6 ;  <CR> this . receiverAddr = p1 ;  <CR> this . letter = m0 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String N1 , String y2 , String U1 , String x5 , String t3 ) {  <CR> this . title = N1 ;  <CR> this . receiver = y2 ;  <CR> this . content = U1 ;  <CR> this . sender = x5 ;  <CR> this . date = t3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int y4 ) {  <CR> list [ y4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int H2 ) {  <CR> this . x = H2 ;  <CR> }  <CR> public int compareTo ( Object X7 ) {  <CR> Letter T9 = ( Letter ) X7 ;  <CR> if ( this . x > T9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] g4 ) {  <CR> int y4 ;  <CR> for ( y4 = list . length - 1 ; y4 >= 0 ; y4 -- ) {  <CR> int M9 = y4 ;  <CR> Letter U7 = new Letter ( y4 ) ;  <CR> Letter l1 = new Letter ( M9 - 1 ) ;  <CR> if ( U7 . compareTo ( l1 ) == 1 )  <CR> U7 . display ( y4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 