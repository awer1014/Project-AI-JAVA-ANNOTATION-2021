 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Z8 , String I9 , String t4 , String e , String r ) {  <CR> super ( Z8 , I9 , t4 , e , r ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String J6 , String B8 , String y5 , String p2 , String K7 ) {  <CR> super ( J6 , B8 , y5 , p2 , K7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String V2 , String u8 , Evaluation r5 ) {  <CR> this . senderAddr = V2 ;  <CR> this . receiverAddr = u8 ;  <CR> this . letter = r5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] P9 ) {  <CR> Evaluation e8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y9 = new Envelop ( "Taipei" , "Kaohsiung" , e8 ) ;  <CR> y9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String h , String Y0 , String g8 , String n2 , String Z8 ) {  <CR> this . title = h ;  <CR> this . receiver = Y0 ;  <CR> this . content = g8 ;  <CR> this . sender = n2 ;  <CR> this . date = Z8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] a2 ) {  <CR> int q0 ;  <CR> for ( q0 = list . length - 1 ; q0 >= 0 ; q0 -- ) {  <CR> int L3 = q0 ;  <CR> Letter e6 = new Letter ( q0 ) ;  <CR> Letter z8 = new Letter ( L3 - 1 ) ;  <CR> if ( e6 . compareTo ( z8 ) == 1 )  <CR> e6 . display ( q0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object y7 ) {  <CR> Letter G = ( Letter ) y7 ;  <CR> if ( this . x > G . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int q0 ) {  <CR> list [ q0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int n0 ) {  <CR> this . x = n0 ;  <CR> }  <CR> }  <CR>  <EOC> 