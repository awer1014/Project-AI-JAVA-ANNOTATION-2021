 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String P9 , String R9 , String E2 , String j5 , String q9 ) {  <CR> super ( P9 , R9 , E2 , j5 , q9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l3 , String n8 , String L2 , String L6 , String h4 ) {  <CR> super ( l3 , n8 , L2 , L6 , h4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q4 ) {  <CR> Evaluation g5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b2 = new Envelop ( "Taipei" , "Kaohsiung" , g5 ) ;  <CR> b2 . display ( ) ;  <CR> }  <CR> public Envelop ( String Q3 , String C3 , Evaluation H ) {  <CR> this . senderAddr = Q3 ;  <CR> this . receiverAddr = C3 ;  <CR> this . letter = H ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String L2 , String D8 , String b , String C3 , String C6 ) {  <CR> this . title = L2 ;  <CR> this . receiver = D8 ;  <CR> this . content = b ;  <CR> this . sender = C3 ;  <CR> this . date = C6 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int d6 ) {  <CR> list [ d6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int l9 ) {  <CR> this . x = l9 ;  <CR> }  <CR> public static void main ( String [ ] A2 ) {  <CR> int d6 ;  <CR> for ( d6 = list . length - 1 ; d6 >= 0 ; d6 -- ) {  <CR> int k8 = d6 ;  <CR> Letter c0 = new Letter ( d6 ) ;  <CR> Letter P0 = new Letter ( k8 - 1 ) ;  <CR> if ( c0 . compareTo ( P0 ) == 1 )  <CR> c0 . display ( d6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object X2 ) {  <CR> Letter r3 = ( Letter ) X2 ;  <CR> if ( this . x > r3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 