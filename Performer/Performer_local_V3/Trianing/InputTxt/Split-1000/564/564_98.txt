 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m6 , String z5 , String Q7 , String L3 , String P4 ) {  <CR> super ( m6 , z5 , Q7 , L3 , P4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a1 , String z9 , String m8 , String v8 , String m6 ) {  <CR> super ( a1 , z9 , m8 , v8 , m6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] v2 ) {  <CR> Evaluation w8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T4 = new Envelop ( "Taipei" , "Kaohsiung" , w8 ) ;  <CR> T4 . display ( ) ;  <CR> }  <CR> public Envelop ( String X0 , String d5 , Evaluation s6 ) {  <CR> this . senderAddr = X0 ;  <CR> this . receiverAddr = d5 ;  <CR> this . letter = s6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String L4 , String h3 , String V6 , String Y6 , String e5 ) {  <CR> this . title = L4 ;  <CR> this . receiver = h3 ;  <CR> this . content = V6 ;  <CR> this . sender = Y6 ;  <CR> this . date = e5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int I ) {  <CR> list [ I ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L7 ) {  <CR> Letter J = ( Letter ) L7 ;  <CR> if ( this . x > J . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int k8 ) {  <CR> this . x = k8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p4 ) {  <CR> int I ;  <CR> for ( I = list . length - 1 ; I >= 0 ; I -- ) {  <CR> int I0 = I ;  <CR> Letter g5 = new Letter ( I ) ;  <CR> Letter w3 = new Letter ( I0 - 1 ) ;  <CR> if ( g5 . compareTo ( w3 ) == 1 )  <CR> g5 . display ( I ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 