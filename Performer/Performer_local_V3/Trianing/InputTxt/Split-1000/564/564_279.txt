 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a3 , String Z9 , String z8 , String N4 , String K9 ) {  <CR> super ( a3 , Z9 , z8 , N4 , K9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String M6 , String Y8 , String S6 , String R4 , String A4 ) {  <CR> super ( M6 , Y8 , S6 , R4 , A4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String g1 , String Q5 , Evaluation t4 ) {  <CR> this . senderAddr = g1 ;  <CR> this . receiverAddr = Q5 ;  <CR> this . letter = t4 ;  <CR> }  <CR> public static void main ( String [ ] P ) {  <CR> Evaluation j1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B1 = new Envelop ( "Taipei" , "Kaohsiung" , j1 ) ;  <CR> B1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String U4 , String a0 , String H5 , String H2 , String A4 ) {  <CR> this . title = U4 ;  <CR> this . receiver = a0 ;  <CR> this . content = H5 ;  <CR> this . sender = H2 ;  <CR> this . date = A4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int g0 ) {  <CR> this . x = g0 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object G7 ) {  <CR> Letter P = ( Letter ) G7 ;  <CR> if ( this . x > P . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] e6 ) {  <CR> int l4 ;  <CR> for ( l4 = list . length - 1 ; l4 >= 0 ; l4 -- ) {  <CR> int Z4 = l4 ;  <CR> Letter P8 = new Letter ( l4 ) ;  <CR> Letter d = new Letter ( Z4 - 1 ) ;  <CR> if ( P8 . compareTo ( d ) == 1 )  <CR> P8 . display ( l4 ) ;  <CR> }  <CR> }  <CR> public void display ( int l4 ) {  <CR> list [ l4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 