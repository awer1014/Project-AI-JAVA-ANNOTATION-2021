 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x4 , String x0 , String e , String C9 , String H9 ) {  <CR> super ( x4 , x0 , e , C9 , H9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W0 , String O4 , String u0 , String W8 , String i8 ) {  <CR> super ( W0 , O4 , u0 , W8 , i8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P2 ) {  <CR> Evaluation Y6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b5 = new Envelop ( "Taipei" , "Kaohsiung" , Y6 ) ;  <CR> b5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String R5 , String A9 , Evaluation e2 ) {  <CR> this . senderAddr = R5 ;  <CR> this . receiverAddr = A9 ;  <CR> this . letter = e2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String m0 , String d2 , String B1 , String k2 , String T ) {  <CR> this . title = m0 ;  <CR> this . receiver = d2 ;  <CR> this . content = B1 ;  <CR> this . sender = k2 ;  <CR> this . date = T ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int j9 ) {  <CR> this . x = j9 ;  <CR> }  <CR> public void display ( int U8 ) {  <CR> list [ U8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object q4 ) {  <CR> Letter O0 = ( Letter ) q4 ;  <CR> if ( this . x > O0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] R2 ) {  <CR> int U8 ;  <CR> for ( U8 = list . length - 1 ; U8 >= 0 ; U8 -- ) {  <CR> int O2 = U8 ;  <CR> Letter c7 = new Letter ( U8 ) ;  <CR> Letter m1 = new Letter ( O2 - 1 ) ;  <CR> if ( c7 . compareTo ( m1 ) == 1 )  <CR> c7 . display ( U8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 