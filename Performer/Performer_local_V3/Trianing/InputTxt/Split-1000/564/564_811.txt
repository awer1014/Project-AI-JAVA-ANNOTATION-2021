 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t6 , String G9 , String t3 , String c5 , String W7 ) {  <CR> super ( t6 , G9 , t3 , c5 , W7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S8 , String N2 , String C , String V7 , String d2 ) {  <CR> super ( S8 , N2 , C , V7 , d2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String i8 , String m8 , Evaluation z6 ) {  <CR> this . senderAddr = i8 ;  <CR> this . receiverAddr = m8 ;  <CR> this . letter = z6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] D1 ) {  <CR> Evaluation M5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k = new Envelop ( "Taipei" , "Kaohsiung" , M5 ) ;  <CR> k . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String n2 , String F5 , String Q0 , String E9 , String Q6 ) {  <CR> this . title = n2 ;  <CR> this . receiver = F5 ;  <CR> this . content = Q0 ;  <CR> this . sender = E9 ;  <CR> this . date = Q6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int m ) {  <CR> this . x = m ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object N3 ) {  <CR> Letter m1 = ( Letter ) N3 ;  <CR> if ( this . x > m1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int l0 ) {  <CR> list [ l0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I7 ) {  <CR> int l0 ;  <CR> for ( l0 = list . length - 1 ; l0 >= 0 ; l0 -- ) {  <CR> int F9 = l0 ;  <CR> Letter q1 = new Letter ( l0 ) ;  <CR> Letter w7 = new Letter ( F9 - 1 ) ;  <CR> if ( q1 . compareTo ( w7 ) == 1 )  <CR> q1 . display ( l0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 