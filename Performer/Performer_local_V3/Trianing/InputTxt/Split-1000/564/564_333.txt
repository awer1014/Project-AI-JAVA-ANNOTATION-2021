 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String x , String v0 , String R2 , String T , String D4 ) {  <CR> super ( x , v0 , R2 , T , D4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A5 , String m3 , String v6 , String L6 , String X9 ) {  <CR> super ( A5 , m3 , v6 , L6 , X9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] N3 ) {  <CR> Evaluation o = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W7 = new Envelop ( "Taipei" , "Kaohsiung" , o ) ;  <CR> W7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String U1 , String y6 , Evaluation C5 ) {  <CR> this . senderAddr = U1 ;  <CR> this . receiverAddr = y6 ;  <CR> this . letter = C5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Q2 , String i3 , String D9 , String E9 , String X1 ) {  <CR> this . title = Q2 ;  <CR> this . receiver = i3 ;  <CR> this . content = D9 ;  <CR> this . sender = E9 ;  <CR> this . date = X1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int u4 ) {  <CR> this . x = u4 ;  <CR> }  <CR> public void display ( int g6 ) {  <CR> list [ g6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object r1 ) {  <CR> Letter V6 = ( Letter ) r1 ;  <CR> if ( this . x > V6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] z3 ) {  <CR> int g6 ;  <CR> for ( g6 = list . length - 1 ; g6 >= 0 ; g6 -- ) {  <CR> int o3 = g6 ;  <CR> Letter l9 = new Letter ( g6 ) ;  <CR> Letter x6 = new Letter ( o3 - 1 ) ;  <CR> if ( l9 . compareTo ( x6 ) == 1 )  <CR> l9 . display ( g6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 