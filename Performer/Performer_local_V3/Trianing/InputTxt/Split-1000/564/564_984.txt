 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X3 , String w1 , String g8 , String v2 , String G9 ) {  <CR> super ( X3 , w1 , g8 , v2 , G9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o1 , String j9 , String r0 , String u0 , String a4 ) {  <CR> super ( o1 , j9 , r0 , u0 , a4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] L1 ) {  <CR> Evaluation g = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q = new Envelop ( "Taipei" , "Kaohsiung" , g ) ;  <CR> q . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String F8 , String e , Evaluation s3 ) {  <CR> this . senderAddr = F8 ;  <CR> this . receiverAddr = e ;  <CR> this . letter = s3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String H1 , String L8 , String D4 , String v , String I2 ) {  <CR> this . title = H1 ;  <CR> this . receiver = L8 ;  <CR> this . content = D4 ;  <CR> this . sender = v ;  <CR> this . date = I2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] Z7 ) {  <CR> int D2 ;  <CR> for ( D2 = list . length - 1 ; D2 >= 0 ; D2 -- ) {  <CR> int N2 = D2 ;  <CR> Letter T4 = new Letter ( D2 ) ;  <CR> Letter s8 = new Letter ( N2 - 1 ) ;  <CR> if ( T4 . compareTo ( s8 ) == 1 )  <CR> T4 . display ( D2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int M ) {  <CR> this . x = M ;  <CR> }  <CR> public void display ( int D2 ) {  <CR> list [ D2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object j0 ) {  <CR> Letter n3 = ( Letter ) j0 ;  <CR> if ( this . x > n3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 