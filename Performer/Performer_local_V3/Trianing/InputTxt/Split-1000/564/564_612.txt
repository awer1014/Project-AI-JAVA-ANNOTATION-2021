 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U2 , String p6 , String q8 , String Q5 , String V7 ) {  <CR> super ( U2 , p6 , q8 , Q5 , V7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String a7 , String X1 , String B , String h1 , String o0 ) {  <CR> super ( a7 , X1 , B , h1 , o0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] q0 ) {  <CR> Evaluation H2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k9 = new Envelop ( "Taipei" , "Kaohsiung" , H2 ) ;  <CR> k9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String R0 , String W4 , Evaluation K0 ) {  <CR> this . senderAddr = R0 ;  <CR> this . receiverAddr = W4 ;  <CR> this . letter = K0 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String J1 , String U9 , String O , String P1 , String M9 ) {  <CR> this . title = J1 ;  <CR> this . receiver = U9 ;  <CR> this . content = O ;  <CR> this . sender = P1 ;  <CR> this . date = M9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int T3 ) {  <CR> this . x = T3 ;  <CR> }  <CR> public void display ( int f7 ) {  <CR> list [ f7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] B3 ) {  <CR> int f7 ;  <CR> for ( f7 = list . length - 1 ; f7 >= 0 ; f7 -- ) {  <CR> int Q9 = f7 ;  <CR> Letter H0 = new Letter ( f7 ) ;  <CR> Letter h4 = new Letter ( Q9 - 1 ) ;  <CR> if ( H0 . compareTo ( h4 ) == 1 )  <CR> H0 . display ( f7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object A4 ) {  <CR> Letter b4 = ( Letter ) A4 ;  <CR> if ( this . x > b4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 