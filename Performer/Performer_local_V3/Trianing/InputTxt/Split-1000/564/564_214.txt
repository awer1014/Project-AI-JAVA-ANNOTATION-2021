 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i4 , String c4 , String j5 , String U5 , String D7 ) {  <CR> super ( i4 , c4 , j5 , U5 , D7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D8 , String X1 , String p6 , String I2 , String v0 ) {  <CR> super ( D8 , X1 , p6 , I2 , v0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] H4 ) {  <CR> Evaluation H2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n0 = new Envelop ( "Taipei" , "Kaohsiung" , H2 ) ;  <CR> n0 . display ( ) ;  <CR> }  <CR> public Envelop ( String w3 , String t4 , Evaluation E1 ) {  <CR> this . senderAddr = w3 ;  <CR> this . receiverAddr = t4 ;  <CR> this . letter = E1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String X1 , String S8 , String o5 , String b7 , String s4 ) {  <CR> this . title = X1 ;  <CR> this . receiver = S8 ;  <CR> this . content = o5 ;  <CR> this . sender = b7 ;  <CR> this . date = s4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object G4 ) {  <CR> Letter j7 = ( Letter ) G4 ;  <CR> if ( this . x > j7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int B ) {  <CR> this . x = B ;  <CR> }  <CR> public static void main ( String [ ] p2 ) {  <CR> int d8 ;  <CR> for ( d8 = list . length - 1 ; d8 >= 0 ; d8 -- ) {  <CR> int D4 = d8 ;  <CR> Letter i4 = new Letter ( d8 ) ;  <CR> Letter I7 = new Letter ( D4 - 1 ) ;  <CR> if ( i4 . compareTo ( I7 ) == 1 )  <CR> i4 . display ( d8 ) ;  <CR> }  <CR> }  <CR> public void display ( int d8 ) {  <CR> list [ d8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 