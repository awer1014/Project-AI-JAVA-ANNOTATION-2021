 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String G9 , String W1 , String T0 , String l7 , String v2 ) {  <CR> super ( G9 , W1 , T0 , l7 , v2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S3 , String w7 , String R1 , String b0 , String v3 ) {  <CR> super ( S3 , w7 , R1 , b0 , v3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String K1 , String k1 , Evaluation g3 ) {  <CR> this . senderAddr = K1 ;  <CR> this . receiverAddr = k1 ;  <CR> this . letter = g3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Q5 ) {  <CR> Evaluation M6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V = new Envelop ( "Taipei" , "Kaohsiung" , M6 ) ;  <CR> V . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String H6 , String z5 , String T8 , String z4 , String j5 ) {  <CR> this . title = H6 ;  <CR> this . receiver = z5 ;  <CR> this . content = T8 ;  <CR> this . sender = z4 ;  <CR> this . date = j5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] I2 ) {  <CR> int g ;  <CR> for ( g = list . length - 1 ; g >= 0 ; g -- ) {  <CR> int h6 = g ;  <CR> Letter Z5 = new Letter ( g ) ;  <CR> Letter K0 = new Letter ( h6 - 1 ) ;  <CR> if ( Z5 . compareTo ( K0 ) == 1 )  <CR> Z5 . display ( g ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object P7 ) {  <CR> Letter X0 = ( Letter ) P7 ;  <CR> if ( this . x > X0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int g ) {  <CR> list [ g ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int u8 ) {  <CR> this . x = u8 ;  <CR> }  <CR> }  <CR>  <EOC> 