 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y3 , String L3 , String s9 , String Q4 , String V1 ) {  <CR> super ( Y3 , L3 , s9 , Q4 , V1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String O5 , String c8 , String o3 , String n4 , String O7 ) {  <CR> super ( O5 , c8 , o3 , n4 , O7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] A0 ) {  <CR> Evaluation C1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B8 = new Envelop ( "Taipei" , "Kaohsiung" , C1 ) ;  <CR> B8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String P , String b8 , Evaluation y7 ) {  <CR> this . senderAddr = P ;  <CR> this . receiverAddr = b8 ;  <CR> this . letter = y7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String O6 , String p7 , String I3 , String B3 , String p0 ) {  <CR> this . title = O6 ;  <CR> this . receiver = p7 ;  <CR> this . content = I3 ;  <CR> this . sender = B3 ;  <CR> this . date = p0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] T6 ) {  <CR> int Z2 ;  <CR> for ( Z2 = list . length - 1 ; Z2 >= 0 ; Z2 -- ) {  <CR> int I0 = Z2 ;  <CR> Letter d4 = new Letter ( Z2 ) ;  <CR> Letter u0 = new Letter ( I0 - 1 ) ;  <CR> if ( d4 . compareTo ( u0 ) == 1 )  <CR> d4 . display ( Z2 ) ;  <CR> }  <CR> }  <CR> Letter ( int N3 ) {  <CR> this . x = N3 ;  <CR> }  <CR> public void display ( int Z2 ) {  <CR> list [ Z2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object B8 ) {  <CR> Letter G0 = ( Letter ) B8 ;  <CR> if ( this . x > G0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 