 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K1 , String W6 , String L5 , String e7 , String V6 ) {  <CR> super ( K1 , W6 , L5 , e7 , V6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y3 , String v0 , String R6 , String b3 , String D6 ) {  <CR> super ( Y3 , v0 , R6 , b3 , D6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] H6 ) {  <CR> Evaluation v4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u = new Envelop ( "Taipei" , "Kaohsiung" , v4 ) ;  <CR> u . display ( ) ;  <CR> }  <CR> public Envelop ( String Y2 , String s7 , Evaluation E ) {  <CR> this . senderAddr = Y2 ;  <CR> this . receiverAddr = s7 ;  <CR> this . letter = E ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String R5 , String H3 , String k5 , String f5 , String n0 ) {  <CR> this . title = R5 ;  <CR> this . receiver = H3 ;  <CR> this . content = k5 ;  <CR> this . sender = f5 ;  <CR> this . date = n0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int b4 ) {  <CR> list [ b4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int I9 ) {  <CR> this . x = I9 ;  <CR> }  <CR> public int compareTo ( Object R4 ) {  <CR> Letter O8 = ( Letter ) R4 ;  <CR> if ( this . x > O8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] U5 ) {  <CR> int b4 ;  <CR> for ( b4 = list . length - 1 ; b4 >= 0 ; b4 -- ) {  <CR> int C9 = b4 ;  <CR> Letter x5 = new Letter ( b4 ) ;  <CR> Letter K1 = new Letter ( C9 - 1 ) ;  <CR> if ( x5 . compareTo ( K1 ) == 1 )  <CR> x5 . display ( b4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 