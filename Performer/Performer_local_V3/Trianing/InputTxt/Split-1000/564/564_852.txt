 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String o0 , String T8 , String x9 , String n3 , String c7 ) {  <CR> super ( o0 , T8 , x9 , n3 , c7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String b6 , String L1 , String h5 , String y5 , String t7 ) {  <CR> super ( b6 , L1 , h5 , y5 , t7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O3 ) {  <CR> Evaluation n2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L = new Envelop ( "Taipei" , "Kaohsiung" , n2 ) ;  <CR> L . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z5 , String C5 , Evaluation Z3 ) {  <CR> this . senderAddr = Z5 ;  <CR> this . receiverAddr = C5 ;  <CR> this . letter = Z3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String r , String J1 , String E5 , String V9 , String y ) {  <CR> this . title = r ;  <CR> this . receiver = J1 ;  <CR> this . content = E5 ;  <CR> this . sender = V9 ;  <CR> this . date = y ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] F5 ) {  <CR> int V7 ;  <CR> for ( V7 = list . length - 1 ; V7 >= 0 ; V7 -- ) {  <CR> int s7 = V7 ;  <CR> Letter K1 = new Letter ( V7 ) ;  <CR> Letter s5 = new Letter ( s7 - 1 ) ;  <CR> if ( K1 . compareTo ( s5 ) == 1 )  <CR> K1 . display ( V7 ) ;  <CR> }  <CR> }  <CR> public void display ( int V7 ) {  <CR> list [ V7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object u9 ) {  <CR> Letter O0 = ( Letter ) u9 ;  <CR> if ( this . x > O0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int n4 ) {  <CR> this . x = n4 ;  <CR> }  <CR> }  <CR>  <EOC> 