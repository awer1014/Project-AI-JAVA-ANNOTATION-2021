 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b , String Y8 , String q7 , String k2 , String O2 ) {  <CR> super ( b , Y8 , q7 , k2 , O2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J3 , String O , String c9 , String j6 , String u7 ) {  <CR> super ( J3 , O , c9 , j6 , u7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String b0 , String B , Evaluation K2 ) {  <CR> this . senderAddr = b0 ;  <CR> this . receiverAddr = B ;  <CR> this . letter = K2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k8 ) {  <CR> Evaluation T6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a6 = new Envelop ( "Taipei" , "Kaohsiung" , T6 ) ;  <CR> a6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String o0 , String C7 , String q0 , String t , String h2 ) {  <CR> this . title = o0 ;  <CR> this . receiver = C7 ;  <CR> this . content = q0 ;  <CR> this . sender = t ;  <CR> this . date = h2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int m ) {  <CR> list [ m ] . Display ( ) ;  <CR> }  <CR> Letter ( int b9 ) {  <CR> this . x = b9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] o1 ) {  <CR> int m ;  <CR> for ( m = list . length - 1 ; m >= 0 ; m -- ) {  <CR> int Q4 = m ;  <CR> Letter t6 = new Letter ( m ) ;  <CR> Letter X = new Letter ( Q4 - 1 ) ;  <CR> if ( t6 . compareTo ( X ) == 1 )  <CR> t6 . display ( m ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object e9 ) {  <CR> Letter M1 = ( Letter ) e9 ;  <CR> if ( this . x > M1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 