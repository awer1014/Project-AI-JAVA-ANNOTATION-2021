 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I1 , String l0 , String n , String C5 , String A2 ) {  <CR> super ( I1 , l0 , n , C5 , A2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u9 , String d4 , String V5 , String X9 , String L6 ) {  <CR> super ( u9 , d4 , V5 , X9 , L6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] y1 ) {  <CR> Evaluation R8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q7 = new Envelop ( "Taipei" , "Kaohsiung" , R8 ) ;  <CR> Q7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String d5 , String J5 , Evaluation l0 ) {  <CR> this . senderAddr = d5 ;  <CR> this . receiverAddr = J5 ;  <CR> this . letter = l0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String H4 , String R8 , String o9 , String A7 , String u7 ) {  <CR> this . title = H4 ;  <CR> this . receiver = R8 ;  <CR> this . content = o9 ;  <CR> this . sender = A7 ;  <CR> this . date = u7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int v2 ) {  <CR> this . x = v2 ;  <CR> }  <CR> public static void main ( String [ ] D4 ) {  <CR> int s2 ;  <CR> for ( s2 = list . length - 1 ; s2 >= 0 ; s2 -- ) {  <CR> int j8 = s2 ;  <CR> Letter O9 = new Letter ( s2 ) ;  <CR> Letter D0 = new Letter ( j8 - 1 ) ;  <CR> if ( O9 . compareTo ( D0 ) == 1 )  <CR> O9 . display ( s2 ) ;  <CR> }  <CR> }  <CR> public void display ( int s2 ) {  <CR> list [ s2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object q8 ) {  <CR> Letter R1 = ( Letter ) q8 ;  <CR> if ( this . x > R1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 