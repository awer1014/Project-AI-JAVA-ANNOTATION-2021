 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String c1 , String x9 , String b1 , String Z5 , String A7 ) {  <CR> super ( c1 , x9 , b1 , Z5 , A7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u3 , String k7 , String p , String d0 , String d6 ) {  <CR> super ( u3 , k7 , p , d0 , d6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String x3 , String E1 , Evaluation c8 ) {  <CR> this . senderAddr = x3 ;  <CR> this . receiverAddr = E1 ;  <CR> this . letter = c8 ;  <CR> }  <CR> public static void main ( String [ ] S0 ) {  <CR> Evaluation a3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t4 = new Envelop ( "Taipei" , "Kaohsiung" , a3 ) ;  <CR> t4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String U7 , String C3 , String r4 , String U9 , String W0 ) {  <CR> this . title = U7 ;  <CR> this . receiver = C3 ;  <CR> this . content = r4 ;  <CR> this . sender = U9 ;  <CR> this . date = W0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int I9 ) {  <CR> this . x = I9 ;  <CR> }  <CR> public static void main ( String [ ] C ) {  <CR> int n4 ;  <CR> for ( n4 = list . length - 1 ; n4 >= 0 ; n4 -- ) {  <CR> int O4 = n4 ;  <CR> Letter C4 = new Letter ( n4 ) ;  <CR> Letter E5 = new Letter ( O4 - 1 ) ;  <CR> if ( C4 . compareTo ( E5 ) == 1 )  <CR> C4 . display ( n4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object l1 ) {  <CR> Letter N2 = ( Letter ) l1 ;  <CR> if ( this . x > N2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int n4 ) {  <CR> list [ n4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 