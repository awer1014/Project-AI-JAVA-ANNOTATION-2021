 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String G2 , String q6 , String i4 , String z3 , String v6 ) {  <CR> super ( G2 , q6 , i4 , z3 , v6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n0 , String M2 , String p2 , String o6 , String l4 ) {  <CR> super ( n0 , M2 , p2 , o6 , l4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] F1 ) {  <CR> Evaluation n = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M4 = new Envelop ( "Taipei" , "Kaohsiung" , n ) ;  <CR> M4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String S6 , String d4 , Evaluation C5 ) {  <CR> this . senderAddr = S6 ;  <CR> this . receiverAddr = d4 ;  <CR> this . letter = C5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String z7 , String Y0 , String v3 , String Q8 , String g8 ) {  <CR> this . title = z7 ;  <CR> this . receiver = Y0 ;  <CR> this . content = v3 ;  <CR> this . sender = Q8 ;  <CR> this . date = g8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] V7 ) {  <CR> int L0 ;  <CR> for ( L0 = list . length - 1 ; L0 >= 0 ; L0 -- ) {  <CR> int s0 = L0 ;  <CR> Letter R4 = new Letter ( L0 ) ;  <CR> Letter c0 = new Letter ( s0 - 1 ) ;  <CR> if ( R4 . compareTo ( c0 ) == 1 )  <CR> R4 . display ( L0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int L0 ) {  <CR> list [ L0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int i8 ) {  <CR> this . x = i8 ;  <CR> }  <CR> public int compareTo ( Object e9 ) {  <CR> Letter R8 = ( Letter ) e9 ;  <CR> if ( this . x > R8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 