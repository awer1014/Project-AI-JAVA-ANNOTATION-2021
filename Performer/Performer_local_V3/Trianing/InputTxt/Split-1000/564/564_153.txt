 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T3 , String D0 , String X0 , String B5 , String W2 ) {  <CR> super ( T3 , D0 , X0 , B5 , W2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W0 , String E3 , String e7 , String K9 , String S1 ) {  <CR> super ( W0 , E3 , e7 , K9 , S1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String h6 , String Q5 , Evaluation p4 ) {  <CR> this . senderAddr = h6 ;  <CR> this . receiverAddr = Q5 ;  <CR> this . letter = p4 ;  <CR> }  <CR> public static void main ( String [ ] I0 ) {  <CR> Evaluation x2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j9 = new Envelop ( "Taipei" , "Kaohsiung" , x2 ) ;  <CR> j9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String R4 , String L3 , String X8 , String g8 , String L4 ) {  <CR> this . title = R4 ;  <CR> this . receiver = L3 ;  <CR> this . content = X8 ;  <CR> this . sender = g8 ;  <CR> this . date = L4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int a3 ) {  <CR> this . x = a3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] J1 ) {  <CR> int d0 ;  <CR> for ( d0 = list . length - 1 ; d0 >= 0 ; d0 -- ) {  <CR> int e4 = d0 ;  <CR> Letter m1 = new Letter ( d0 ) ;  <CR> Letter b = new Letter ( e4 - 1 ) ;  <CR> if ( m1 . compareTo ( b ) == 1 )  <CR> m1 . display ( d0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object w0 ) {  <CR> Letter N3 = ( Letter ) w0 ;  <CR> if ( this . x > N3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int d0 ) {  <CR> list [ d0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 