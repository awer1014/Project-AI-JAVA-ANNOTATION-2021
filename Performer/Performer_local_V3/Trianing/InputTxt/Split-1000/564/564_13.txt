 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p0 , String g3 , String p3 , String D5 , String P4 ) {  <CR> super ( p0 , g3 , p3 , D5 , P4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P3 , String Y1 , String Y , String T8 , String A1 ) {  <CR> super ( P3 , Y1 , Y , T8 , A1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String z0 , String I9 , Evaluation c4 ) {  <CR> this . senderAddr = z0 ;  <CR> this . receiverAddr = I9 ;  <CR> this . letter = c4 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J ) {  <CR> Evaluation N6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E5 = new Envelop ( "Taipei" , "Kaohsiung" , N6 ) ;  <CR> E5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String O3 , String J2 , String W2 , String f , String I1 ) {  <CR> this . title = O3 ;  <CR> this . receiver = J2 ;  <CR> this . content = W2 ;  <CR> this . sender = f ;  <CR> this . date = I1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int z0 ) {  <CR> list [ z0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L3 ) {  <CR> Letter g0 = ( Letter ) L3 ;  <CR> if ( this . x > g0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int i1 ) {  <CR> this . x = i1 ;  <CR> }  <CR> public static void main ( String [ ] q0 ) {  <CR> int z0 ;  <CR> for ( z0 = list . length - 1 ; z0 >= 0 ; z0 -- ) {  <CR> int a6 = z0 ;  <CR> Letter v1 = new Letter ( z0 ) ;  <CR> Letter d5 = new Letter ( a6 - 1 ) ;  <CR> if ( v1 . compareTo ( d5 ) == 1 )  <CR> v1 . display ( z0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 