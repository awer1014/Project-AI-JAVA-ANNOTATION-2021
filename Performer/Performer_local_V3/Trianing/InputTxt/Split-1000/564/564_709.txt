 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k6 , String J3 , String Z5 , String b6 , String D1 ) {  <CR> super ( k6 , J3 , Z5 , b6 , D1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f8 , String y2 , String I8 , String Z8 , String a9 ) {  <CR> super ( f8 , y2 , I8 , Z8 , a9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] R5 ) {  <CR> Evaluation l3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V0 = new Envelop ( "Taipei" , "Kaohsiung" , l3 ) ;  <CR> V0 . display ( ) ;  <CR> }  <CR> public Envelop ( String a , String Y3 , Evaluation y0 ) {  <CR> this . senderAddr = a ;  <CR> this . receiverAddr = Y3 ;  <CR> this . letter = y0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String z4 , String m3 , String F5 , String O6 , String d8 ) {  <CR> this . title = z4 ;  <CR> this . receiver = m3 ;  <CR> this . content = F5 ;  <CR> this . sender = O6 ;  <CR> this . date = d8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] d ) {  <CR> int a7 ;  <CR> for ( a7 = list . length - 1 ; a7 >= 0 ; a7 -- ) {  <CR> int Q1 = a7 ;  <CR> Letter C9 = new Letter ( a7 ) ;  <CR> Letter W7 = new Letter ( Q1 - 1 ) ;  <CR> if ( C9 . compareTo ( W7 ) == 1 )  <CR> C9 . display ( a7 ) ;  <CR> }  <CR> }  <CR> Letter ( int u1 ) {  <CR> this . x = u1 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object O5 ) {  <CR> Letter M = ( Letter ) O5 ;  <CR> if ( this . x > M . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int a7 ) {  <CR> list [ a7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 