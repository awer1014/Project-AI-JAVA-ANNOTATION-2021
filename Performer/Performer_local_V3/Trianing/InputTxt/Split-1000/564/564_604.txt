 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V , String D7 , String K6 , String C0 , String m7 ) {  <CR> super ( V , D7 , K6 , C0 , m7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n8 , String D4 , String Z5 , String K1 , String o ) {  <CR> super ( n8 , D4 , Z5 , K1 , o ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q6 ) {  <CR> Evaluation k1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J8 = new Envelop ( "Taipei" , "Kaohsiung" , k1 ) ;  <CR> J8 . display ( ) ;  <CR> }  <CR> public Envelop ( String s7 , String t3 , Evaluation r9 ) {  <CR> this . senderAddr = s7 ;  <CR> this . receiverAddr = t3 ;  <CR> this . letter = r9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String U2 , String h4 , String I5 , String K4 , String Q1 ) {  <CR> this . title = U2 ;  <CR> this . receiver = h4 ;  <CR> this . content = I5 ;  <CR> this . sender = K4 ;  <CR> this . date = Q1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int d8 ) {  <CR> this . x = d8 ;  <CR> }  <CR> public static void main ( String [ ] j5 ) {  <CR> int e0 ;  <CR> for ( e0 = list . length - 1 ; e0 >= 0 ; e0 -- ) {  <CR> int m7 = e0 ;  <CR> Letter m1 = new Letter ( e0 ) ;  <CR> Letter l = new Letter ( m7 - 1 ) ;  <CR> if ( m1 . compareTo ( l ) == 1 )  <CR> m1 . display ( e0 ) ;  <CR> }  <CR> }  <CR> public void display ( int e0 ) {  <CR> list [ e0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object i0 ) {  <CR> Letter D1 = ( Letter ) i0 ;  <CR> if ( this . x > D1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 