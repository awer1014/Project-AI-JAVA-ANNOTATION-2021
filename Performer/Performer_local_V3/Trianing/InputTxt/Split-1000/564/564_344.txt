 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String G2 , String L1 , String J4 , String K1 , String d1 ) {  <CR> super ( G2 , L1 , J4 , K1 , d1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String j , String F7 , String U4 , String e2 , String b3 ) {  <CR> super ( j , F7 , U4 , e2 , b3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String W5 , String e8 , Evaluation f6 ) {  <CR> this . senderAddr = W5 ;  <CR> this . receiverAddr = e8 ;  <CR> this . letter = f6 ;  <CR> }  <CR> public static void main ( String [ ] Q8 ) {  <CR> Evaluation p = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F1 = new Envelop ( "Taipei" , "Kaohsiung" , p ) ;  <CR> F1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String j5 , String D3 , String Q4 , String i0 , String U ) {  <CR> this . title = j5 ;  <CR> this . receiver = D3 ;  <CR> this . content = Q4 ;  <CR> this . sender = i0 ;  <CR> this . date = U ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object I2 ) {  <CR> Letter L8 = ( Letter ) I2 ;  <CR> if ( this . x > L8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] i8 ) {  <CR> int T5 ;  <CR> for ( T5 = list . length - 1 ; T5 >= 0 ; T5 -- ) {  <CR> int s5 = T5 ;  <CR> Letter K2 = new Letter ( T5 ) ;  <CR> Letter u1 = new Letter ( s5 - 1 ) ;  <CR> if ( K2 . compareTo ( u1 ) == 1 )  <CR> K2 . display ( T5 ) ;  <CR> }  <CR> }  <CR> Letter ( int g0 ) {  <CR> this . x = g0 ;  <CR> }  <CR> public void display ( int T5 ) {  <CR> list [ T5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 