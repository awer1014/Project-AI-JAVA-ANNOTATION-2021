 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X2 , String s6 , String l6 , String W7 , String m8 ) {  <CR> super ( X2 , s6 , l6 , W7 , m8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z4 , String M9 , String M4 , String m2 , String D6 ) {  <CR> super ( Z4 , M9 , M4 , m2 , D6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Y3 , String F9 , Evaluation x1 ) {  <CR> this . senderAddr = Y3 ;  <CR> this . receiverAddr = F9 ;  <CR> this . letter = x1 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G3 ) {  <CR> Evaluation w5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r9 = new Envelop ( "Taipei" , "Kaohsiung" , w5 ) ;  <CR> r9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String g8 , String y5 , String X , String b5 , String h9 ) {  <CR> this . title = g8 ;  <CR> this . receiver = y5 ;  <CR> this . content = X ;  <CR> this . sender = b5 ;  <CR> this . date = h9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int k8 ) {  <CR> this . x = k8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int W5 ) {  <CR> list [ W5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y3 ) {  <CR> int W5 ;  <CR> for ( W5 = list . length - 1 ; W5 >= 0 ; W5 -- ) {  <CR> int A3 = W5 ;  <CR> Letter L7 = new Letter ( W5 ) ;  <CR> Letter V9 = new Letter ( A3 - 1 ) ;  <CR> if ( L7 . compareTo ( V9 ) == 1 )  <CR> L7 . display ( W5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object X1 ) {  <CR> Letter r5 = ( Letter ) X1 ;  <CR> if ( this . x > r5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 