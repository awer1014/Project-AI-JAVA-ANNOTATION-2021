 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v5 , String u3 , String J6 , String T4 , String N1 ) {  <CR> super ( v5 , u3 , J6 , T4 , N1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String p0 , String b6 , String g9 , String d , String S7 ) {  <CR> super ( p0 , b6 , g9 , d , S7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String h6 , String Y4 , Evaluation K2 ) {  <CR> this . senderAddr = h6 ;  <CR> this . receiverAddr = Y4 ;  <CR> this . letter = K2 ;  <CR> }  <CR> public static void main ( String [ ] y2 ) {  <CR> Evaluation T8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E1 = new Envelop ( "Taipei" , "Kaohsiung" , T8 ) ;  <CR> E1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String u5 , String s0 , String d6 , String e1 , String Q3 ) {  <CR> this . title = u5 ;  <CR> this . receiver = s0 ;  <CR> this . content = d6 ;  <CR> this . sender = e1 ;  <CR> this . date = Q3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] l5 ) {  <CR> int t2 ;  <CR> for ( t2 = list . length - 1 ; t2 >= 0 ; t2 -- ) {  <CR> int r0 = t2 ;  <CR> Letter Y3 = new Letter ( t2 ) ;  <CR> Letter F8 = new Letter ( r0 - 1 ) ;  <CR> if ( Y3 . compareTo ( F8 ) == 1 )  <CR> Y3 . display ( t2 ) ;  <CR> }  <CR> }  <CR> Letter ( int H9 ) {  <CR> this . x = H9 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int t2 ) {  <CR> list [ t2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L1 ) {  <CR> Letter Q2 = ( Letter ) L1 ;  <CR> if ( this . x > Q2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 