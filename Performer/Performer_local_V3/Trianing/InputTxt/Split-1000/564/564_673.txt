 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String z2 , String J2 , String R5 , String k5 , String s1 ) {  <CR> super ( z2 , J2 , R5 , k5 , s1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String j8 , String p8 , String c1 , String r7 , String c8 ) {  <CR> super ( j8 , p8 , c1 , r7 , c8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] M6 ) {  <CR> Evaluation C = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I8 = new Envelop ( "Taipei" , "Kaohsiung" , C ) ;  <CR> I8 . display ( ) ;  <CR> }  <CR> public Envelop ( String j0 , String x1 , Evaluation I5 ) {  <CR> this . senderAddr = j0 ;  <CR> this . receiverAddr = x1 ;  <CR> this . letter = I5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String F3 , String s4 , String B8 , String R9 , String p8 ) {  <CR> this . title = F3 ;  <CR> this . receiver = s4 ;  <CR> this . content = B8 ;  <CR> this . sender = R9 ;  <CR> this . date = p8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int a5 ) {  <CR> list [ a5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p3 ) {  <CR> int a5 ;  <CR> for ( a5 = list . length - 1 ; a5 >= 0 ; a5 -- ) {  <CR> int Z9 = a5 ;  <CR> Letter g1 = new Letter ( a5 ) ;  <CR> Letter z8 = new Letter ( Z9 - 1 ) ;  <CR> if ( g1 . compareTo ( z8 ) == 1 )  <CR> g1 . display ( a5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object d5 ) {  <CR> Letter d1 = ( Letter ) d5 ;  <CR> if ( this . x > d1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int v0 ) {  <CR> this . x = v0 ;  <CR> }  <CR> }  <CR>  <EOC> 