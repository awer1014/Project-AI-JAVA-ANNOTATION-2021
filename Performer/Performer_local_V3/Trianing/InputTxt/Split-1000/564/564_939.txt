 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d8 , String x0 , String J8 , String y , String P5 ) {  <CR> super ( d8 , x0 , J8 , y , P5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z8 , String D0 , String M0 , String j0 , String b9 ) {  <CR> super ( z8 , D0 , M0 , j0 , b9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String v5 , String D7 , Evaluation R2 ) {  <CR> this . senderAddr = v5 ;  <CR> this . receiverAddr = D7 ;  <CR> this . letter = R2 ;  <CR> }  <CR> public static void main ( String [ ] i8 ) {  <CR> Evaluation i = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g5 = new Envelop ( "Taipei" , "Kaohsiung" , i ) ;  <CR> g5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String C4 , String o , String u , String V9 , String V ) {  <CR> this . title = C4 ;  <CR> this . receiver = o ;  <CR> this . content = u ;  <CR> this . sender = V9 ;  <CR> this . date = V ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object I1 ) {  <CR> Letter Y = ( Letter ) I1 ;  <CR> if ( this . x > Y . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] W8 ) {  <CR> int e8 ;  <CR> for ( e8 = list . length - 1 ; e8 >= 0 ; e8 -- ) {  <CR> int H8 = e8 ;  <CR> Letter F = new Letter ( e8 ) ;  <CR> Letter F6 = new Letter ( H8 - 1 ) ;  <CR> if ( F . compareTo ( F6 ) == 1 )  <CR> F . display ( e8 ) ;  <CR> }  <CR> }  <CR> Letter ( int H0 ) {  <CR> this . x = H0 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int e8 ) {  <CR> list [ e8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 