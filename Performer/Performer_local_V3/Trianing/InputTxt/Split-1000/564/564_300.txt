 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g8 , String q4 , String Y , String l0 , String d ) {  <CR> super ( g8 , q4 , Y , l0 , d ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z9 , String b9 , String U , String E0 , String w5 ) {  <CR> super ( Z9 , b9 , U , E0 , w5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String T3 , String L9 , Evaluation u8 ) {  <CR> this . senderAddr = T3 ;  <CR> this . receiverAddr = L9 ;  <CR> this . letter = u8 ;  <CR> }  <CR> public static void main ( String [ ] M9 ) {  <CR> Evaluation P1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p = new Envelop ( "Taipei" , "Kaohsiung" , P1 ) ;  <CR> p . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String c7 , String a5 , String V8 , String L6 , String z9 ) {  <CR> this . title = c7 ;  <CR> this . receiver = a5 ;  <CR> this . content = V8 ;  <CR> this . sender = L6 ;  <CR> this . date = z9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int T8 ) {  <CR> list [ T8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int i7 ) {  <CR> this . x = i7 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] a ) {  <CR> int T8 ;  <CR> for ( T8 = list . length - 1 ; T8 >= 0 ; T8 -- ) {  <CR> int w5 = T8 ;  <CR> Letter U1 = new Letter ( T8 ) ;  <CR> Letter u = new Letter ( w5 - 1 ) ;  <CR> if ( U1 . compareTo ( u ) == 1 )  <CR> U1 . display ( T8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object p4 ) {  <CR> Letter D2 = ( Letter ) p4 ;  <CR> if ( this . x > D2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 