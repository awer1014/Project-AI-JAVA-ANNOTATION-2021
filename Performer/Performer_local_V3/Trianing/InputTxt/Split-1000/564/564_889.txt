 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O0 , String m0 , String o0 , String b8 , String B2 ) {  <CR> super ( O0 , m0 , o0 , b8 , B2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L7 , String F5 , String H2 , String k4 , String F7 ) {  <CR> super ( L7 , F5 , H2 , k4 , F7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String c , String M9 , Evaluation L5 ) {  <CR> this . senderAddr = c ;  <CR> this . receiverAddr = M9 ;  <CR> this . letter = L5 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] m ) {  <CR> Evaluation m1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B1 = new Envelop ( "Taipei" , "Kaohsiung" , m1 ) ;  <CR> B1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String w7 , String e3 , String Y7 , String B , String n9 ) {  <CR> this . title = w7 ;  <CR> this . receiver = e3 ;  <CR> this . content = Y7 ;  <CR> this . sender = B ;  <CR> this . date = n9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] z8 ) {  <CR> int v1 ;  <CR> for ( v1 = list . length - 1 ; v1 >= 0 ; v1 -- ) {  <CR> int K = v1 ;  <CR> Letter X6 = new Letter ( v1 ) ;  <CR> Letter T9 = new Letter ( K - 1 ) ;  <CR> if ( X6 . compareTo ( T9 ) == 1 )  <CR> X6 . display ( v1 ) ;  <CR> }  <CR> }  <CR> public void display ( int v1 ) {  <CR> list [ v1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object b4 ) {  <CR> Letter y7 = ( Letter ) b4 ;  <CR> if ( this . x > y7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int a0 ) {  <CR> this . x = a0 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 