 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r2 , String y6 , String g2 , String x9 , String H9 ) {  <CR> super ( r2 , y6 , g2 , x9 , H9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V3 , String X1 , String T5 , String E4 , String o2 ) {  <CR> super ( V3 , X1 , T5 , E4 , o2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] U8 ) {  <CR> Evaluation A8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O3 = new Envelop ( "Taipei" , "Kaohsiung" , A8 ) ;  <CR> O3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String F6 , String S6 , Evaluation s ) {  <CR> this . senderAddr = F6 ;  <CR> this . receiverAddr = S6 ;  <CR> this . letter = s ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String S8 , String h0 , String F2 , String y8 , String m2 ) {  <CR> this . title = S8 ;  <CR> this . receiver = h0 ;  <CR> this . content = F2 ;  <CR> this . sender = y8 ;  <CR> this . date = m2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int I3 ) {  <CR> this . x = I3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object b5 ) {  <CR> Letter p6 = ( Letter ) b5 ;  <CR> if ( this . x > p6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int Q ) {  <CR> list [ Q ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] m6 ) {  <CR> int Q ;  <CR> for ( Q = list . length - 1 ; Q >= 0 ; Q -- ) {  <CR> int K0 = Q ;  <CR> Letter k = new Letter ( Q ) ;  <CR> Letter H7 = new Letter ( K0 - 1 ) ;  <CR> if ( k . compareTo ( H7 ) == 1 )  <CR> k . display ( Q ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 