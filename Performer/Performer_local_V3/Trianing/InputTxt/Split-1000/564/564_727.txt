 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A2 , String e , String X , String I , String o6 ) {  <CR> super ( A2 , e , X , I , o6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e2 , String X3 , String q1 , String x7 , String H3 ) {  <CR> super ( e2 , X3 , q1 , x7 , H3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String J3 , String s3 , Evaluation E5 ) {  <CR> this . senderAddr = J3 ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = E5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v4 ) {  <CR> Evaluation l7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n3 = new Envelop ( "Taipei" , "Kaohsiung" , l7 ) ;  <CR> n3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String C2 , String u6 , String s , String X3 , String T6 ) {  <CR> this . title = C2 ;  <CR> this . receiver = u6 ;  <CR> this . content = s ;  <CR> this . sender = X3 ;  <CR> this . date = T6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int i5 ) {  <CR> list [ i5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] K4 ) {  <CR> int i5 ;  <CR> for ( i5 = list . length - 1 ; i5 >= 0 ; i5 -- ) {  <CR> int R5 = i5 ;  <CR> Letter c5 = new Letter ( i5 ) ;  <CR> Letter C0 = new Letter ( R5 - 1 ) ;  <CR> if ( c5 . compareTo ( C0 ) == 1 )  <CR> c5 . display ( i5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Q ) {  <CR> this . x = Q ;  <CR> }  <CR> public int compareTo ( Object K0 ) {  <CR> Letter D0 = ( Letter ) K0 ;  <CR> if ( this . x > D0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 