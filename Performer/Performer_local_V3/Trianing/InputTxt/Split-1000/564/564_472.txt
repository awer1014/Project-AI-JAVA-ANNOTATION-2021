 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L8 , String M2 , String I0 , String x3 , String d7 ) {  <CR> super ( L8 , M2 , I0 , x3 , d7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s6 , String M0 , String a4 , String T9 , String H0 ) {  <CR> super ( s6 , M0 , a4 , T9 , H0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String Y2 , String Z5 , Evaluation q9 ) {  <CR> this . senderAddr = Y2 ;  <CR> this . receiverAddr = Z5 ;  <CR> this . letter = q9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] X ) {  <CR> Evaluation I4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r3 = new Envelop ( "Taipei" , "Kaohsiung" , I4 ) ;  <CR> r3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String R6 , String E0 , String F8 , String H , String e6 ) {  <CR> this . title = R6 ;  <CR> this . receiver = E0 ;  <CR> this . content = F8 ;  <CR> this . sender = H ;  <CR> this . date = e6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int M3 ) {  <CR> list [ M3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int M9 ) {  <CR> this . x = M9 ;  <CR> }  <CR> public static void main ( String [ ] e6 ) {  <CR> int M3 ;  <CR> for ( M3 = list . length - 1 ; M3 >= 0 ; M3 -- ) {  <CR> int z7 = M3 ;  <CR> Letter T8 = new Letter ( M3 ) ;  <CR> Letter q3 = new Letter ( z7 - 1 ) ;  <CR> if ( T8 . compareTo ( q3 ) == 1 )  <CR> T8 . display ( M3 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object Q7 ) {  <CR> Letter b7 = ( Letter ) Q7 ;  <CR> if ( this . x > b7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 