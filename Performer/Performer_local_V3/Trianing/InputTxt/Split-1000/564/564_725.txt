 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L9 , String V6 , String T6 , String u7 , String n5 ) {  <CR> super ( L9 , V6 , T6 , u7 , n5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R3 , String a0 , String y1 , String v2 , String L9 ) {  <CR> super ( R3 , a0 , y1 , v2 , L9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String q8 , String P3 , Evaluation S8 ) {  <CR> this . senderAddr = q8 ;  <CR> this . receiverAddr = P3 ;  <CR> this . letter = S8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Z9 ) {  <CR> Evaluation f = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R = new Envelop ( "Taipei" , "Kaohsiung" , f ) ;  <CR> R . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String l4 , String L6 , String m , String p , String J8 ) {  <CR> this . title = l4 ;  <CR> this . receiver = L6 ;  <CR> this . content = m ;  <CR> this . sender = p ;  <CR> this . date = J8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object G8 ) {  <CR> Letter t9 = ( Letter ) G8 ;  <CR> if ( this . x > t9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int t ) {  <CR> this . x = t ;  <CR> }  <CR> public static void main ( String [ ] a0 ) {  <CR> int c1 ;  <CR> for ( c1 = list . length - 1 ; c1 >= 0 ; c1 -- ) {  <CR> int m9 = c1 ;  <CR> Letter m7 = new Letter ( c1 ) ;  <CR> Letter V2 = new Letter ( m9 - 1 ) ;  <CR> if ( m7 . compareTo ( V2 ) == 1 )  <CR> m7 . display ( c1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int c1 ) {  <CR> list [ c1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 