 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G9 , String r5 , String x , String z1 , String i ) {  <CR> super ( G9 , r5 , x , z1 , i ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f2 , String M9 , String N1 , String m4 , String y0 ) {  <CR> super ( f2 , M9 , N1 , m4 , y0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P3 ) {  <CR> Evaluation k9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h2 = new Envelop ( "Taipei" , "Kaohsiung" , k9 ) ;  <CR> h2 . display ( ) ;  <CR> }  <CR> public Envelop ( String Y2 , String q7 , Evaluation x8 ) {  <CR> this . senderAddr = Y2 ;  <CR> this . receiverAddr = q7 ;  <CR> this . letter = x8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String v3 , String J , String x2 , String e2 , String O3 ) {  <CR> this . title = v3 ;  <CR> this . receiver = J ;  <CR> this . content = x2 ;  <CR> this . sender = e2 ;  <CR> this . date = O3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] M1 ) {  <CR> int K ;  <CR> for ( K = list . length - 1 ; K >= 0 ; K -- ) {  <CR> int R6 = K ;  <CR> Letter r2 = new Letter ( K ) ;  <CR> Letter s8 = new Letter ( R6 - 1 ) ;  <CR> if ( r2 . compareTo ( s8 ) == 1 )  <CR> r2 . display ( K ) ;  <CR> }  <CR> }  <CR> Letter ( int m9 ) {  <CR> this . x = m9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int K ) {  <CR> list [ K ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object v0 ) {  <CR> Letter Q7 = ( Letter ) v0 ;  <CR> if ( this . x > Q7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 