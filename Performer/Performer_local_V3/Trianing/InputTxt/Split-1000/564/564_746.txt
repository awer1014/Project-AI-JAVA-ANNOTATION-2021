 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W2 , String C2 , String C0 , String M6 , String U1 ) {  <CR> super ( W2 , C2 , C0 , M6 , U1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y , String A8 , String f , String u , String B2 ) {  <CR> super ( Y , A8 , f , u , B2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] w0 ) {  <CR> Evaluation e = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I5 = new Envelop ( "Taipei" , "Kaohsiung" , e ) ;  <CR> I5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String W1 , String V6 , Evaluation l0 ) {  <CR> this . senderAddr = W1 ;  <CR> this . receiverAddr = V6 ;  <CR> this . letter = l0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String S5 , String L8 , String x3 , String e8 , String l5 ) {  <CR> this . title = S5 ;  <CR> this . receiver = L8 ;  <CR> this . content = x3 ;  <CR> this . sender = e8 ;  <CR> this . date = l5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] w9 ) {  <CR> int W6 ;  <CR> for ( W6 = list . length - 1 ; W6 >= 0 ; W6 -- ) {  <CR> int R8 = W6 ;  <CR> Letter t7 = new Letter ( W6 ) ;  <CR> Letter C = new Letter ( R8 - 1 ) ;  <CR> if ( t7 . compareTo ( C ) == 1 )  <CR> t7 . display ( W6 ) ;  <CR> }  <CR> }  <CR> public void display ( int W6 ) {  <CR> list [ W6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object Y2 ) {  <CR> Letter o2 = ( Letter ) Y2 ;  <CR> if ( this . x > o2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int a4 ) {  <CR> this . x = a4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 