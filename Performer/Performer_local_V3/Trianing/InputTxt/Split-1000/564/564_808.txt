 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N7 , String M2 , String z1 , String e5 , String x0 ) {  <CR> super ( N7 , M2 , z1 , e5 , x0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K2 , String T6 , String O , String P3 , String H0 ) {  <CR> super ( K2 , T6 , O , P3 , H0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String o2 , String P5 , Evaluation i1 ) {  <CR> this . senderAddr = o2 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = i1 ;  <CR> }  <CR> public static void main ( String [ ] v3 ) {  <CR> Evaluation V0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z9 = new Envelop ( "Taipei" , "Kaohsiung" , V0 ) ;  <CR> z9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String T2 , String r9 , String R , String a0 , String Z4 ) {  <CR> this . title = T2 ;  <CR> this . receiver = r9 ;  <CR> this . content = R ;  <CR> this . sender = a0 ;  <CR> this . date = Z4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int A5 ) {  <CR> list [ A5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int t ) {  <CR> this . x = t ;  <CR> }  <CR> public static void main ( String [ ] j8 ) {  <CR> int A5 ;  <CR> for ( A5 = list . length - 1 ; A5 >= 0 ; A5 -- ) {  <CR> int a6 = A5 ;  <CR> Letter J6 = new Letter ( A5 ) ;  <CR> Letter H7 = new Letter ( a6 - 1 ) ;  <CR> if ( J6 . compareTo ( H7 ) == 1 )  <CR> J6 . display ( A5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object D6 ) {  <CR> Letter k4 = ( Letter ) D6 ;  <CR> if ( this . x > k4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 