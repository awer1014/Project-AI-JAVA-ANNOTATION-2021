 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D6 , String L8 , String U7 , String H1 , String t7 ) {  <CR> super ( D6 , L8 , U7 , H1 , t7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q2 , String M9 , String J , String I , String S0 ) {  <CR> super ( Q2 , M9 , J , I , S0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] e2 ) {  <CR> Evaluation J1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q6 = new Envelop ( "Taipei" , "Kaohsiung" , J1 ) ;  <CR> q6 . display ( ) ;  <CR> }  <CR> public Envelop ( String c , String t7 , Evaluation g6 ) {  <CR> this . senderAddr = c ;  <CR> this . receiverAddr = t7 ;  <CR> this . letter = g6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String N0 , String k7 , String Z2 , String H0 , String v5 ) {  <CR> this . title = N0 ;  <CR> this . receiver = k7 ;  <CR> this . content = Z2 ;  <CR> this . sender = H0 ;  <CR> this . date = v5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int r4 ) {  <CR> list [ r4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] t2 ) {  <CR> int r4 ;  <CR> for ( r4 = list . length - 1 ; r4 >= 0 ; r4 -- ) {  <CR> int f7 = r4 ;  <CR> Letter W7 = new Letter ( r4 ) ;  <CR> Letter S2 = new Letter ( f7 - 1 ) ;  <CR> if ( W7 . compareTo ( S2 ) == 1 )  <CR> W7 . display ( r4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object k6 ) {  <CR> Letter N8 = ( Letter ) k6 ;  <CR> if ( this . x > N8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Z7 ) {  <CR> this . x = Z7 ;  <CR> }  <CR> }  <CR>  <EOC> 