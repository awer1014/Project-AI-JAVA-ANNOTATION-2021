 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t , String R7 , String W4 , String o9 , String q1 ) {  <CR> super ( t , R7 , W4 , o9 , q1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g1 , String n3 , String H1 , String S0 , String M1 ) {  <CR> super ( g1 , n3 , H1 , S0 , M1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String i9 , String U8 , Evaluation p2 ) {  <CR> this . senderAddr = i9 ;  <CR> this . receiverAddr = U8 ;  <CR> this . letter = p2 ;  <CR> }  <CR> public static void main ( String [ ] T9 ) {  <CR> Evaluation l = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c0 = new Envelop ( "Taipei" , "Kaohsiung" , l ) ;  <CR> c0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Y9 , String G0 , String h2 , String K1 , String S7 ) {  <CR> this . title = Y9 ;  <CR> this . receiver = G0 ;  <CR> this . content = h2 ;  <CR> this . sender = K1 ;  <CR> this . date = S7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] k6 ) {  <CR> int A ;  <CR> for ( A = list . length - 1 ; A >= 0 ; A -- ) {  <CR> int A8 = A ;  <CR> Letter U9 = new Letter ( A ) ;  <CR> Letter q2 = new Letter ( A8 - 1 ) ;  <CR> if ( U9 . compareTo ( q2 ) == 1 )  <CR> U9 . display ( A ) ;  <CR> }  <CR> }  <CR> public void display ( int A ) {  <CR> list [ A ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object r0 ) {  <CR> Letter x3 = ( Letter ) r0 ;  <CR> if ( this . x > x3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int R5 ) {  <CR> this . x = R5 ;  <CR> }  <CR> }  <CR>  <EOC> 