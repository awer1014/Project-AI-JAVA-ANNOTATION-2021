 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B5 , String F9 , String u8 , String B0 , String X6 ) {  <CR> super ( B5 , F9 , u8 , B0 , X6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Q1 , String n9 , String F8 , String f2 , String b4 ) {  <CR> super ( Q1 , n9 , F8 , f2 , b4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String G6 , String a2 , Evaluation a8 ) {  <CR> this . senderAddr = G6 ;  <CR> this . receiverAddr = a2 ;  <CR> this . letter = a8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] p4 ) {  <CR> Evaluation v5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H3 = new Envelop ( "Taipei" , "Kaohsiung" , v5 ) ;  <CR> H3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String I9 , String N3 , String P6 , String U8 , String s9 ) {  <CR> this . title = I9 ;  <CR> this . receiver = N3 ;  <CR> this . content = P6 ;  <CR> this . sender = U8 ;  <CR> this . date = s9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] N0 ) {  <CR> int q1 ;  <CR> for ( q1 = list . length - 1 ; q1 >= 0 ; q1 -- ) {  <CR> int k7 = q1 ;  <CR> Letter j8 = new Letter ( q1 ) ;  <CR> Letter P3 = new Letter ( k7 - 1 ) ;  <CR> if ( j8 . compareTo ( P3 ) == 1 )  <CR> j8 . display ( q1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int q1 ) {  <CR> list [ q1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object V8 ) {  <CR> Letter e = ( Letter ) V8 ;  <CR> if ( this . x > e . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int B9 ) {  <CR> this . x = B9 ;  <CR> }  <CR> }  <CR>  <EOC> 