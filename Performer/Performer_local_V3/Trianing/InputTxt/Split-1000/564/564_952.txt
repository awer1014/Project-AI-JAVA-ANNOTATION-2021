 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String h , String h0 , String i0 , String i9 , String l ) {  <CR> super ( h , h0 , i0 , i9 , l ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q6 , String w1 , String E3 , String R4 , String s3 ) {  <CR> super ( q6 , w1 , E3 , R4 , s3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] O0 ) {  <CR> Evaluation o9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u3 = new Envelop ( "Taipei" , "Kaohsiung" , o9 ) ;  <CR> u3 . display ( ) ;  <CR> }  <CR> public Envelop ( String c0 , String t1 , Evaluation W4 ) {  <CR> this . senderAddr = c0 ;  <CR> this . receiverAddr = t1 ;  <CR> this . letter = W4 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String X7 , String y4 , String Z3 , String e6 , String m8 ) {  <CR> this . title = X7 ;  <CR> this . receiver = y4 ;  <CR> this . content = Z3 ;  <CR> this . sender = e6 ;  <CR> this . date = m8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int u9 ) {  <CR> this . x = u9 ;  <CR> }  <CR> public static void main ( String [ ] F8 ) {  <CR> int l9 ;  <CR> for ( l9 = list . length - 1 ; l9 >= 0 ; l9 -- ) {  <CR> int G9 = l9 ;  <CR> Letter N4 = new Letter ( l9 ) ;  <CR> Letter v2 = new Letter ( G9 - 1 ) ;  <CR> if ( N4 . compareTo ( v2 ) == 1 )  <CR> N4 . display ( l9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int l9 ) {  <CR> list [ l9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object c9 ) {  <CR> Letter O0 = ( Letter ) c9 ;  <CR> if ( this . x > O0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 