 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i6 , String P0 , String v2 , String k0 , String x2 ) {  <CR> super ( i6 , P0 , v2 , k0 , x2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M0 , String z5 , String a2 , String a4 , String T4 ) {  <CR> super ( M0 , z5 , a2 , a4 , T4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String q0 , String M , Evaluation s3 ) {  <CR> this . senderAddr = q0 ;  <CR> this . receiverAddr = M ;  <CR> this . letter = s3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Q4 ) {  <CR> Evaluation i4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z7 = new Envelop ( "Taipei" , "Kaohsiung" , i4 ) ;  <CR> z7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String p3 , String H9 , String B4 , String Y7 , String T6 ) {  <CR> this . title = p3 ;  <CR> this . receiver = H9 ;  <CR> this . content = B4 ;  <CR> this . sender = Y7 ;  <CR> this . date = T6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int U0 ) {  <CR> this . x = U0 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] g7 ) {  <CR> int h9 ;  <CR> for ( h9 = list . length - 1 ; h9 >= 0 ; h9 -- ) {  <CR> int A1 = h9 ;  <CR> Letter C1 = new Letter ( h9 ) ;  <CR> Letter q5 = new Letter ( A1 - 1 ) ;  <CR> if ( C1 . compareTo ( q5 ) == 1 )  <CR> C1 . display ( h9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object V0 ) {  <CR> Letter N2 = ( Letter ) V0 ;  <CR> if ( this . x > N2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int h9 ) {  <CR> list [ h9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 