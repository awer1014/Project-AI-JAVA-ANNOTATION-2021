 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G4 , String p3 , String g1 , String i2 , String Z6 ) {  <CR> super ( G4 , p3 , g1 , i2 , Z6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String K9 , String E8 , String b7 , String f9 , String m1 ) {  <CR> super ( K9 , E8 , b7 , f9 , m1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x1 ) {  <CR> Evaluation n3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o2 = new Envelop ( "Taipei" , "Kaohsiung" , n3 ) ;  <CR> o2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String z0 , String m3 , Evaluation v7 ) {  <CR> this . senderAddr = z0 ;  <CR> this . receiverAddr = m3 ;  <CR> this . letter = v7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String r2 , String m3 , String g1 , String d6 , String z7 ) {  <CR> this . title = r2 ;  <CR> this . receiver = m3 ;  <CR> this . content = g1 ;  <CR> this . sender = d6 ;  <CR> this . date = z7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int A5 ) {  <CR> list [ A5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object E1 ) {  <CR> Letter Y4 = ( Letter ) E1 ;  <CR> if ( this . x > Y4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int J8 ) {  <CR> this . x = J8 ;  <CR> }  <CR> public static void main ( String [ ] p ) {  <CR> int A5 ;  <CR> for ( A5 = list . length - 1 ; A5 >= 0 ; A5 -- ) {  <CR> int K9 = A5 ;  <CR> Letter T = new Letter ( A5 ) ;  <CR> Letter e2 = new Letter ( K9 - 1 ) ;  <CR> if ( T . compareTo ( e2 ) == 1 )  <CR> T . display ( A5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 