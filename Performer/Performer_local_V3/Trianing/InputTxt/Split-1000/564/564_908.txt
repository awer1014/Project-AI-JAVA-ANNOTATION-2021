 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String g , String L9 , String M6 , String w0 , String F0 ) {  <CR> super ( g , L9 , M6 , w0 , F0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v6 , String B2 , String D8 , String h8 , String w8 ) {  <CR> super ( v6 , B2 , D8 , h8 , w8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] r8 ) {  <CR> Evaluation y7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o6 = new Envelop ( "Taipei" , "Kaohsiung" , y7 ) ;  <CR> o6 . display ( ) ;  <CR> }  <CR> public Envelop ( String m1 , String p8 , Evaluation M2 ) {  <CR> this . senderAddr = m1 ;  <CR> this . receiverAddr = p8 ;  <CR> this . letter = M2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String U8 , String M7 , String C9 , String V7 , String k8 ) {  <CR> this . title = U8 ;  <CR> this . receiver = M7 ;  <CR> this . content = C9 ;  <CR> this . sender = V7 ;  <CR> this . date = k8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object V4 ) {  <CR> Letter l8 = ( Letter ) V4 ;  <CR> if ( this . x > l8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int s4 ) {  <CR> this . x = s4 ;  <CR> }  <CR> public static void main ( String [ ] d ) {  <CR> int U6 ;  <CR> for ( U6 = list . length - 1 ; U6 >= 0 ; U6 -- ) {  <CR> int a4 = U6 ;  <CR> Letter Z5 = new Letter ( U6 ) ;  <CR> Letter H0 = new Letter ( a4 - 1 ) ;  <CR> if ( Z5 . compareTo ( H0 ) == 1 )  <CR> Z5 . display ( U6 ) ;  <CR> }  <CR> }  <CR> public void display ( int U6 ) {  <CR> list [ U6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 