 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o1 , String s2 , String A7 , String k9 , String G3 ) {  <CR> super ( o1 , s2 , A7 , k9 , G3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G , String V8 , String l5 , String p6 , String g7 ) {  <CR> super ( G , V8 , l5 , p6 , g7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] R5 ) {  <CR> Evaluation s = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b0 = new Envelop ( "Taipei" , "Kaohsiung" , s ) ;  <CR> b0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Z0 , String I8 , Evaluation a2 ) {  <CR> this . senderAddr = Z0 ;  <CR> this . receiverAddr = I8 ;  <CR> this . letter = a2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String b3 , String c6 , String Y8 , String w3 , String E7 ) {  <CR> this . title = b3 ;  <CR> this . receiver = c6 ;  <CR> this . content = Y8 ;  <CR> this . sender = w3 ;  <CR> this . date = E7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int E6 ) {  <CR> list [ E6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U ) {  <CR> int E6 ;  <CR> for ( E6 = list . length - 1 ; E6 >= 0 ; E6 -- ) {  <CR> int z3 = E6 ;  <CR> Letter y6 = new Letter ( E6 ) ;  <CR> Letter K6 = new Letter ( z3 - 1 ) ;  <CR> if ( y6 . compareTo ( K6 ) == 1 )  <CR> y6 . display ( E6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object t ) {  <CR> Letter k4 = ( Letter ) t ;  <CR> if ( this . x > k4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int q2 ) {  <CR> this . x = q2 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 