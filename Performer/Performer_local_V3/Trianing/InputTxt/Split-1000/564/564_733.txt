 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b7 , String X5 , String r0 , String b0 , String b9 ) {  <CR> super ( b7 , X5 , r0 , b0 , b9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n7 , String O1 , String g , String M9 , String P8 ) {  <CR> super ( n7 , O1 , g , M9 , P8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String g , String z4 , Evaluation i3 ) {  <CR> this . senderAddr = g ;  <CR> this . receiverAddr = z4 ;  <CR> this . letter = i3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] c1 ) {  <CR> Evaluation O7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G6 = new Envelop ( "Taipei" , "Kaohsiung" , O7 ) ;  <CR> G6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String U4 , String Y1 , String R0 , String Q3 , String P1 ) {  <CR> this . title = U4 ;  <CR> this . receiver = Y1 ;  <CR> this . content = R0 ;  <CR> this . sender = Q3 ;  <CR> this . date = P1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object J2 ) {  <CR> Letter G3 = ( Letter ) J2 ;  <CR> if ( this . x > G3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int k0 ) {  <CR> list [ k0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int K5 ) {  <CR> this . x = K5 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] q7 ) {  <CR> int k0 ;  <CR> for ( k0 = list . length - 1 ; k0 >= 0 ; k0 -- ) {  <CR> int T9 = k0 ;  <CR> Letter E2 = new Letter ( k0 ) ;  <CR> Letter v0 = new Letter ( T9 - 1 ) ;  <CR> if ( E2 . compareTo ( v0 ) == 1 )  <CR> E2 . display ( k0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 