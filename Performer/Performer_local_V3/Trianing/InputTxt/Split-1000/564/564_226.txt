 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String j , String B1 , String N3 , String f8 , String t9 ) {  <CR> super ( j , B1 , N3 , f8 , t9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g9 , String L9 , String k9 , String Y4 , String I9 ) {  <CR> super ( g9 , L9 , k9 , Y4 , I9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P1 ) {  <CR> Evaluation e1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M6 = new Envelop ( "Taipei" , "Kaohsiung" , e1 ) ;  <CR> M6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String i1 , String N8 , Evaluation Z4 ) {  <CR> this . senderAddr = i1 ;  <CR> this . receiverAddr = N8 ;  <CR> this . letter = Z4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String r6 , String Z1 , String l5 , String a2 , String F9 ) {  <CR> this . title = r6 ;  <CR> this . receiver = Z1 ;  <CR> this . content = l5 ;  <CR> this . sender = a2 ;  <CR> this . date = F9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int C4 ) {  <CR> list [ C4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object P2 ) {  <CR> Letter w8 = ( Letter ) P2 ;  <CR> if ( this . x > w8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int N9 ) {  <CR> this . x = N9 ;  <CR> }  <CR> public static void main ( String [ ] d0 ) {  <CR> int C4 ;  <CR> for ( C4 = list . length - 1 ; C4 >= 0 ; C4 -- ) {  <CR> int K2 = C4 ;  <CR> Letter d3 = new Letter ( C4 ) ;  <CR> Letter H7 = new Letter ( K2 - 1 ) ;  <CR> if ( d3 . compareTo ( H7 ) == 1 )  <CR> d3 . display ( C4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 