 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String p6 , String S , String j8 , String v0 , String K5 ) {  <CR> super ( p6 , S , j8 , v0 , K5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J5 , String c7 , String w3 , String X7 , String A4 ) {  <CR> super ( J5 , c7 , w3 , X7 , A4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] a9 ) {  <CR> Evaluation y9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q1 = new Envelop ( "Taipei" , "Kaohsiung" , y9 ) ;  <CR> Q1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C5 , String s3 , Evaluation j5 ) {  <CR> this . senderAddr = C5 ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = j5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String C8 , String B7 , String U6 , String W1 , String a6 ) {  <CR> this . title = C8 ;  <CR> this . receiver = B7 ;  <CR> this . content = U6 ;  <CR> this . sender = W1 ;  <CR> this . date = a6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] k ) {  <CR> int e8 ;  <CR> for ( e8 = list . length - 1 ; e8 >= 0 ; e8 -- ) {  <CR> int l5 = e8 ;  <CR> Letter H1 = new Letter ( e8 ) ;  <CR> Letter C0 = new Letter ( l5 - 1 ) ;  <CR> if ( H1 . compareTo ( C0 ) == 1 )  <CR> H1 . display ( e8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int e8 ) {  <CR> list [ e8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object k0 ) {  <CR> Letter L3 = ( Letter ) k0 ;  <CR> if ( this . x > L3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int m5 ) {  <CR> this . x = m5 ;  <CR> }  <CR> }  <CR>  <EOC> 