 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b6 , String g , String O7 , String W3 , String O2 ) {  <CR> super ( b6 , g , O7 , W3 , O2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B3 , String R7 , String B8 , String N7 , String b1 ) {  <CR> super ( B3 , R7 , B8 , N7 , b1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z6 , String B6 , Evaluation b2 ) {  <CR> this . senderAddr = Z6 ;  <CR> this . receiverAddr = B6 ;  <CR> this . letter = b2 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] r6 ) {  <CR> Evaluation e3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P1 = new Envelop ( "Taipei" , "Kaohsiung" , e3 ) ;  <CR> P1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String C7 , String Y3 , String g4 , String b5 , String u6 ) {  <CR> this . title = C7 ;  <CR> this . receiver = Y3 ;  <CR> this . content = g4 ;  <CR> this . sender = b5 ;  <CR> this . date = u6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int C ) {  <CR> this . x = C ;  <CR> }  <CR> public static void main ( String [ ] j7 ) {  <CR> int i1 ;  <CR> for ( i1 = list . length - 1 ; i1 >= 0 ; i1 -- ) {  <CR> int I6 = i1 ;  <CR> Letter w8 = new Letter ( i1 ) ;  <CR> Letter Z7 = new Letter ( I6 - 1 ) ;  <CR> if ( w8 . compareTo ( Z7 ) == 1 )  <CR> w8 . display ( i1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object d6 ) {  <CR> Letter F9 = ( Letter ) d6 ;  <CR> if ( this . x > F9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i1 ) {  <CR> list [ i1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 