 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M1 , String r7 , String m3 , String z5 , String f7 ) {  <CR> super ( M1 , r7 , m3 , z5 , f7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M , String j4 , String s0 , String H2 , String X ) {  <CR> super ( M , j4 , s0 , H2 , X ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Q2 ) {  <CR> Evaluation s6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i2 = new Envelop ( "Taipei" , "Kaohsiung" , s6 ) ;  <CR> i2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String V1 , String C , Evaluation n0 ) {  <CR> this . senderAddr = V1 ;  <CR> this . receiverAddr = C ;  <CR> this . letter = n0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String x8 , String P4 , String z8 , String m6 , String k0 ) {  <CR> this . title = x8 ;  <CR> this . receiver = P4 ;  <CR> this . content = z8 ;  <CR> this . sender = m6 ;  <CR> this . date = k0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object o1 ) {  <CR> Letter T9 = ( Letter ) o1 ;  <CR> if ( this . x > T9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int j9 ) {  <CR> this . x = j9 ;  <CR> }  <CR> public static void main ( String [ ] n4 ) {  <CR> int O7 ;  <CR> for ( O7 = list . length - 1 ; O7 >= 0 ; O7 -- ) {  <CR> int a9 = O7 ;  <CR> Letter j0 = new Letter ( O7 ) ;  <CR> Letter d3 = new Letter ( a9 - 1 ) ;  <CR> if ( j0 . compareTo ( d3 ) == 1 )  <CR> j0 . display ( O7 ) ;  <CR> }  <CR> }  <CR> public void display ( int O7 ) {  <CR> list [ O7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 