 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v0 , String n4 , String E1 , String G9 , String G7 ) {  <CR> super ( v0 , n4 , E1 , G9 , G7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H2 , String N1 , String g2 , String Z2 , String K7 ) {  <CR> super ( H2 , N1 , g2 , Z2 , K7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] S2 ) {  <CR> Evaluation T5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K = new Envelop ( "Taipei" , "Kaohsiung" , T5 ) ;  <CR> K . display ( ) ;  <CR> }  <CR> public Envelop ( String F5 , String Y , Evaluation x6 ) {  <CR> this . senderAddr = F5 ;  <CR> this . receiverAddr = Y ;  <CR> this . letter = x6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String z3 , String S7 , String i6 , String W7 , String a8 ) {  <CR> this . title = z3 ;  <CR> this . receiver = S7 ;  <CR> this . content = i6 ;  <CR> this . sender = W7 ;  <CR> this . date = a8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int r8 ) {  <CR> this . x = r8 ;  <CR> }  <CR> public int compareTo ( Object c0 ) {  <CR> Letter Q9 = ( Letter ) c0 ;  <CR> if ( this . x > Q9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] X7 ) {  <CR> int b1 ;  <CR> for ( b1 = list . length - 1 ; b1 >= 0 ; b1 -- ) {  <CR> int V8 = b1 ;  <CR> Letter f7 = new Letter ( b1 ) ;  <CR> Letter g3 = new Letter ( V8 - 1 ) ;  <CR> if ( f7 . compareTo ( g3 ) == 1 )  <CR> f7 . display ( b1 ) ;  <CR> }  <CR> }  <CR> public void display ( int b1 ) {  <CR> list [ b1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 