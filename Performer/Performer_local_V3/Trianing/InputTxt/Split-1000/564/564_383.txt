 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T8 , String Q7 , String L9 , String X3 , String Y7 ) {  <CR> super ( T8 , Q7 , L9 , X3 , Y7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R0 , String d3 , String H1 , String k5 , String X ) {  <CR> super ( R0 , d3 , H1 , k5 , X ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String G6 , String a1 , Evaluation H ) {  <CR> this . senderAddr = G6 ;  <CR> this . receiverAddr = a1 ;  <CR> this . letter = H ;  <CR> }  <CR> public static void main ( String [ ] Z6 ) {  <CR> Evaluation a = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop E3 = new Envelop ( "Taipei" , "Kaohsiung" , a ) ;  <CR> E3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String c2 , String g2 , String i2 , String A8 , String n5 ) {  <CR> this . title = c2 ;  <CR> this . receiver = g2 ;  <CR> this . content = i2 ;  <CR> this . sender = A8 ;  <CR> this . date = n5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int h7 ) {  <CR> list [ h7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object x7 ) {  <CR> Letter l5 = ( Letter ) x7 ;  <CR> if ( this . x > l5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] P7 ) {  <CR> int h7 ;  <CR> for ( h7 = list . length - 1 ; h7 >= 0 ; h7 -- ) {  <CR> int V2 = h7 ;  <CR> Letter q8 = new Letter ( h7 ) ;  <CR> Letter D4 = new Letter ( V2 - 1 ) ;  <CR> if ( q8 . compareTo ( D4 ) == 1 )  <CR> q8 . display ( h7 ) ;  <CR> }  <CR> }  <CR> Letter ( int I1 ) {  <CR> this . x = I1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 