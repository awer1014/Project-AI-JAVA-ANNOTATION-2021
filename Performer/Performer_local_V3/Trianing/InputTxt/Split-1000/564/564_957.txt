 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String J0 , String X8 , String B9 , String l9 , String U4 ) {  <CR> super ( J0 , X8 , B9 , l9 , U4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String c8 , String g3 , String D6 , String S6 , String U2 ) {  <CR> super ( c8 , g3 , D6 , S6 , U2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String c1 , String Q , Evaluation a1 ) {  <CR> this . senderAddr = c1 ;  <CR> this . receiverAddr = Q ;  <CR> this . letter = a1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] g0 ) {  <CR> Evaluation P = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A8 = new Envelop ( "Taipei" , "Kaohsiung" , P ) ;  <CR> A8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String A9 , String H9 , String r1 , String V , String O ) {  <CR> this . title = A9 ;  <CR> this . receiver = H9 ;  <CR> this . content = r1 ;  <CR> this . sender = V ;  <CR> this . date = O ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object T7 ) {  <CR> Letter a = ( Letter ) T7 ;  <CR> if ( this . x > a . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int a7 ) {  <CR> this . x = a7 ;  <CR> }  <CR> public static void main ( String [ ] B1 ) {  <CR> int x4 ;  <CR> for ( x4 = list . length - 1 ; x4 >= 0 ; x4 -- ) {  <CR> int R2 = x4 ;  <CR> Letter d8 = new Letter ( x4 ) ;  <CR> Letter I6 = new Letter ( R2 - 1 ) ;  <CR> if ( d8 . compareTo ( I6 ) == 1 )  <CR> d8 . display ( x4 ) ;  <CR> }  <CR> }  <CR> public void display ( int x4 ) {  <CR> list [ x4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 