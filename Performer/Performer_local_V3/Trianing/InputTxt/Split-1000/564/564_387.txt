 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y5 , String l9 , String L , String C8 , String w7 ) {  <CR> super ( y5 , l9 , L , C8 , w7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G9 , String T4 , String l , String Z8 , String F3 ) {  <CR> super ( G9 , T4 , l , Z8 , F3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] L9 ) {  <CR> Evaluation z5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h1 = new Envelop ( "Taipei" , "Kaohsiung" , z5 ) ;  <CR> h1 . display ( ) ;  <CR> }  <CR> public Envelop ( String H3 , String P8 , Evaluation E2 ) {  <CR> this . senderAddr = H3 ;  <CR> this . receiverAddr = P8 ;  <CR> this . letter = E2 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String U0 , String T8 , String H , String l2 , String L3 ) {  <CR> this . title = U0 ;  <CR> this . receiver = T8 ;  <CR> this . content = H ;  <CR> this . sender = l2 ;  <CR> this . date = L3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int E4 ) {  <CR> this . x = E4 ;  <CR> }  <CR> public void display ( int y5 ) {  <CR> list [ y5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object v3 ) {  <CR> Letter c = ( Letter ) v3 ;  <CR> if ( this . x > c . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] V0 ) {  <CR> int y5 ;  <CR> for ( y5 = list . length - 1 ; y5 >= 0 ; y5 -- ) {  <CR> int X8 = y5 ;  <CR> Letter l4 = new Letter ( y5 ) ;  <CR> Letter Z3 = new Letter ( X8 - 1 ) ;  <CR> if ( l4 . compareTo ( Z3 ) == 1 )  <CR> l4 . display ( y5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 