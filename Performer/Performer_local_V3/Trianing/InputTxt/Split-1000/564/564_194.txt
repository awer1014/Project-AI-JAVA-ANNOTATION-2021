 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String M6 , String W9 , String J5 , String C3 , String H3 ) {  <CR> super ( M6 , W9 , J5 , C3 , H3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String c2 , String W2 , String P7 , String i6 , String i0 ) {  <CR> super ( c2 , W2 , P7 , i6 , i0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] E3 ) {  <CR> Evaluation v6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y = new Envelop ( "Taipei" , "Kaohsiung" , v6 ) ;  <CR> Y . display ( ) ;  <CR> }  <CR> public Envelop ( String W2 , String Y1 , Evaluation v3 ) {  <CR> this . senderAddr = W2 ;  <CR> this . receiverAddr = Y1 ;  <CR> this . letter = v3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String Q7 , String D3 , String N9 , String L0 , String v3 ) {  <CR> this . title = Q7 ;  <CR> this . receiver = D3 ;  <CR> this . content = N9 ;  <CR> this . sender = L0 ;  <CR> this . date = v3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int U4 ) {  <CR> list [ U4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] W4 ) {  <CR> int U4 ;  <CR> for ( U4 = list . length - 1 ; U4 >= 0 ; U4 -- ) {  <CR> int a2 = U4 ;  <CR> Letter l3 = new Letter ( U4 ) ;  <CR> Letter Z7 = new Letter ( a2 - 1 ) ;  <CR> if ( l3 . compareTo ( Z7 ) == 1 )  <CR> l3 . display ( U4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object X1 ) {  <CR> Letter f7 = ( Letter ) X1 ;  <CR> if ( this . x > f7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int c2 ) {  <CR> this . x = c2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 