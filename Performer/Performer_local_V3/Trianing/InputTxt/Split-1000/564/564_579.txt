 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x5 , String K0 , String P8 , String o1 , String v8 ) {  <CR> super ( x5 , K0 , P8 , o1 , v8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String P7 , String P , String u3 , String k4 , String u7 ) {  <CR> super ( P7 , P , u3 , k4 , u7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String I4 , String T8 , Evaluation S0 ) {  <CR> this . senderAddr = I4 ;  <CR> this . receiverAddr = T8 ;  <CR> this . letter = S0 ;  <CR> }  <CR> public static void main ( String [ ] D1 ) {  <CR> Evaluation p0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t0 = new Envelop ( "Taipei" , "Kaohsiung" , p0 ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String k9 , String u7 , String t0 , String F3 , String X9 ) {  <CR> this . title = k9 ;  <CR> this . receiver = u7 ;  <CR> this . content = t0 ;  <CR> this . sender = F3 ;  <CR> this . date = X9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] z3 ) {  <CR> int h1 ;  <CR> for ( h1 = list . length - 1 ; h1 >= 0 ; h1 -- ) {  <CR> int O2 = h1 ;  <CR> Letter M1 = new Letter ( h1 ) ;  <CR> Letter D8 = new Letter ( O2 - 1 ) ;  <CR> if ( M1 . compareTo ( D8 ) == 1 )  <CR> M1 . display ( h1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Q4 ) {  <CR> Letter n4 = ( Letter ) Q4 ;  <CR> if ( this . x > n4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int R1 ) {  <CR> this . x = R1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int h1 ) {  <CR> list [ h1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 