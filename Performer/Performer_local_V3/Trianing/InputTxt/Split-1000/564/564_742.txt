 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E1 , String p2 , String z4 , String t7 , String b ) {  <CR> super ( E1 , p2 , z4 , t7 , b ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v , String T3 , String e3 , String U1 , String Z2 ) {  <CR> super ( v , T3 , e3 , U1 , Z2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] N9 ) {  <CR> Evaluation f2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l = new Envelop ( "Taipei" , "Kaohsiung" , f2 ) ;  <CR> l . display ( ) ;  <CR> }  <CR> public Envelop ( String t6 , String g1 , Evaluation U0 ) {  <CR> this . senderAddr = t6 ;  <CR> this . receiverAddr = g1 ;  <CR> this . letter = U0 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String N1 , String d2 , String A3 , String m2 , String N3 ) {  <CR> this . title = N1 ;  <CR> this . receiver = d2 ;  <CR> this . content = A3 ;  <CR> this . sender = m2 ;  <CR> this . date = N3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int j1 ) {  <CR> this . x = j1 ;  <CR> }  <CR> public int compareTo ( Object u0 ) {  <CR> Letter g0 = ( Letter ) u0 ;  <CR> if ( this . x > g0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] J1 ) {  <CR> int f4 ;  <CR> for ( f4 = list . length - 1 ; f4 >= 0 ; f4 -- ) {  <CR> int Q3 = f4 ;  <CR> Letter h3 = new Letter ( f4 ) ;  <CR> Letter X3 = new Letter ( Q3 - 1 ) ;  <CR> if ( h3 . compareTo ( X3 ) == 1 )  <CR> h3 . display ( f4 ) ;  <CR> }  <CR> }  <CR> public void display ( int f4 ) {  <CR> list [ f4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 