 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k5 , String w5 , String w7 , String K2 , String f6 ) {  <CR> super ( k5 , w5 , w7 , K2 , f6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g6 , String a1 , String F4 , String s3 , String D4 ) {  <CR> super ( g6 , a1 , F4 , s3 , D4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] y5 ) {  <CR> Evaluation k6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V5 = new Envelop ( "Taipei" , "Kaohsiung" , k6 ) ;  <CR> V5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String D4 , String o0 , Evaluation v3 ) {  <CR> this . senderAddr = D4 ;  <CR> this . receiverAddr = o0 ;  <CR> this . letter = v3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String d9 , String G , String J4 , String N2 , String r ) {  <CR> this . title = d9 ;  <CR> this . receiver = G ;  <CR> this . content = J4 ;  <CR> this . sender = N2 ;  <CR> this . date = r ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int I7 ) {  <CR> list [ I7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int S3 ) {  <CR> this . x = S3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object E9 ) {  <CR> Letter I5 = ( Letter ) E9 ;  <CR> if ( this . x > I5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] s4 ) {  <CR> int I7 ;  <CR> for ( I7 = list . length - 1 ; I7 >= 0 ; I7 -- ) {  <CR> int F = I7 ;  <CR> Letter X9 = new Letter ( I7 ) ;  <CR> Letter M5 = new Letter ( F - 1 ) ;  <CR> if ( X9 . compareTo ( M5 ) == 1 )  <CR> X9 . display ( I7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 