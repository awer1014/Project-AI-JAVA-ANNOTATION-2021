 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D6 , String l8 , String K , String x5 , String B0 ) {  <CR> super ( D6 , l8 , K , x5 , B0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w5 , String G6 , String C1 , String F1 , String I8 ) {  <CR> super ( w5 , G6 , C1 , F1 , I8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q6 ) {  <CR> Evaluation N7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G8 = new Envelop ( "Taipei" , "Kaohsiung" , N7 ) ;  <CR> G8 . display ( ) ;  <CR> }  <CR> public Envelop ( String D6 , String m1 , Evaluation v6 ) {  <CR> this . senderAddr = D6 ;  <CR> this . receiverAddr = m1 ;  <CR> this . letter = v6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String a3 , String p3 , String R4 , String C8 , String h5 ) {  <CR> this . title = a3 ;  <CR> this . receiver = p3 ;  <CR> this . content = R4 ;  <CR> this . sender = C8 ;  <CR> this . date = h5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int j ) {  <CR> list [ j ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object g8 ) {  <CR> Letter T0 = ( Letter ) g8 ;  <CR> if ( this . x > T0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] z7 ) {  <CR> int j ;  <CR> for ( j = list . length - 1 ; j >= 0 ; j -- ) {  <CR> int W4 = j ;  <CR> Letter W5 = new Letter ( j ) ;  <CR> Letter j0 = new Letter ( W4 - 1 ) ;  <CR> if ( W5 . compareTo ( j0 ) == 1 )  <CR> W5 . display ( j ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int J6 ) {  <CR> this . x = J6 ;  <CR> }  <CR> }  <CR>  <EOC> 