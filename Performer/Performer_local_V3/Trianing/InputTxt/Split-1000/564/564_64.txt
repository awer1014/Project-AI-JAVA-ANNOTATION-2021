 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F , String V , String M4 , String i0 , String r4 ) {  <CR> super ( F , V , M4 , i0 , r4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O6 , String E4 , String v6 , String w4 , String M2 ) {  <CR> super ( O6 , E4 , v6 , w4 , M2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] j2 ) {  <CR> Evaluation w8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S2 = new Envelop ( "Taipei" , "Kaohsiung" , w8 ) ;  <CR> S2 . display ( ) ;  <CR> }  <CR> public Envelop ( String P8 , String j8 , Evaluation y0 ) {  <CR> this . senderAddr = P8 ;  <CR> this . receiverAddr = j8 ;  <CR> this . letter = y0 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String Y1 , String K8 , String x0 , String D2 , String h5 ) {  <CR> this . title = Y1 ;  <CR> this . receiver = K8 ;  <CR> this . content = x0 ;  <CR> this . sender = D2 ;  <CR> this . date = h5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int C4 ) {  <CR> this . x = C4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] q4 ) {  <CR> int O1 ;  <CR> for ( O1 = list . length - 1 ; O1 >= 0 ; O1 -- ) {  <CR> int I3 = O1 ;  <CR> Letter h1 = new Letter ( O1 ) ;  <CR> Letter i7 = new Letter ( I3 - 1 ) ;  <CR> if ( h1 . compareTo ( i7 ) == 1 )  <CR> h1 . display ( O1 ) ;  <CR> }  <CR> }  <CR> public void display ( int O1 ) {  <CR> list [ O1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object s3 ) {  <CR> Letter Y2 = ( Letter ) s3 ;  <CR> if ( this . x > Y2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 