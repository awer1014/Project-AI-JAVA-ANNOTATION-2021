 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String K8 , String j7 , String D6 , String I4 , String u ) {  <CR> super ( K8 , j7 , D6 , I4 , u ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G8 , String p3 , String i7 , String S1 , String r8 ) {  <CR> super ( G8 , p3 , i7 , S1 , r8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q1 ) {  <CR> Evaluation x = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q = new Envelop ( "Taipei" , "Kaohsiung" , x ) ;  <CR> q . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String E5 , String Y , Evaluation R0 ) {  <CR> this . senderAddr = E5 ;  <CR> this . receiverAddr = Y ;  <CR> this . letter = R0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String g0 , String l3 , String n4 , String Y5 , String l0 ) {  <CR> this . title = g0 ;  <CR> this . receiver = l3 ;  <CR> this . content = n4 ;  <CR> this . sender = Y5 ;  <CR> this . date = l0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object q7 ) {  <CR> Letter o4 = ( Letter ) q7 ;  <CR> if ( this . x > o4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] b8 ) {  <CR> int s4 ;  <CR> for ( s4 = list . length - 1 ; s4 >= 0 ; s4 -- ) {  <CR> int r9 = s4 ;  <CR> Letter Y0 = new Letter ( s4 ) ;  <CR> Letter c2 = new Letter ( r9 - 1 ) ;  <CR> if ( Y0 . compareTo ( c2 ) == 1 )  <CR> Y0 . display ( s4 ) ;  <CR> }  <CR> }  <CR> Letter ( int f5 ) {  <CR> this . x = f5 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int s4 ) {  <CR> list [ s4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 