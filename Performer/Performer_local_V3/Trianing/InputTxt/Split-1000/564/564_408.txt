 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T4 , String w9 , String d1 , String x0 , String X8 ) {  <CR> super ( T4 , w9 , d1 , x0 , X8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G , String c , String g3 , String X3 , String w3 ) {  <CR> super ( G , c , g3 , X3 , w3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m5 ) {  <CR> Evaluation z = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t1 = new Envelop ( "Taipei" , "Kaohsiung" , z ) ;  <CR> t1 . display ( ) ;  <CR> }  <CR> public Envelop ( String g4 , String h6 , Evaluation R3 ) {  <CR> this . senderAddr = g4 ;  <CR> this . receiverAddr = h6 ;  <CR> this . letter = R3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String N3 , String r3 , String z1 , String L4 , String R3 ) {  <CR> this . title = N3 ;  <CR> this . receiver = r3 ;  <CR> this . content = z1 ;  <CR> this . sender = L4 ;  <CR> this . date = R3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int g2 ) {  <CR> list [ g2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int E6 ) {  <CR> this . x = E6 ;  <CR> }  <CR> public static void main ( String [ ] M5 ) {  <CR> int g2 ;  <CR> for ( g2 = list . length - 1 ; g2 >= 0 ; g2 -- ) {  <CR> int l4 = g2 ;  <CR> Letter A2 = new Letter ( g2 ) ;  <CR> Letter h9 = new Letter ( l4 - 1 ) ;  <CR> if ( A2 . compareTo ( h9 ) == 1 )  <CR> A2 . display ( g2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Z2 ) {  <CR> Letter c2 = ( Letter ) Z2 ;  <CR> if ( this . x > c2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 