 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String e4 , String q2 , String U7 , String B0 , String y9 ) {  <CR> super ( e4 , q2 , U7 , B0 , y9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u8 , String z8 , String Y5 , String h7 , String J9 ) {  <CR> super ( u8 , z8 , Y5 , h7 , J9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] b6 ) {  <CR> Evaluation G9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K5 = new Envelop ( "Taipei" , "Kaohsiung" , G9 ) ;  <CR> K5 . display ( ) ;  <CR> }  <CR> public Envelop ( String k9 , String X3 , Evaluation H0 ) {  <CR> this . senderAddr = k9 ;  <CR> this . receiverAddr = X3 ;  <CR> this . letter = H0 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String i7 , String Y9 , String b0 , String G7 , String R3 ) {  <CR> this . title = i7 ;  <CR> this . receiver = Y9 ;  <CR> this . content = b0 ;  <CR> this . sender = G7 ;  <CR> this . date = R3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object d6 ) {  <CR> Letter w1 = ( Letter ) d6 ;  <CR> if ( this . x > w1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int l0 ) {  <CR> this . x = l0 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] c5 ) {  <CR> int j9 ;  <CR> for ( j9 = list . length - 1 ; j9 >= 0 ; j9 -- ) {  <CR> int P4 = j9 ;  <CR> Letter x4 = new Letter ( j9 ) ;  <CR> Letter O0 = new Letter ( P4 - 1 ) ;  <CR> if ( x4 . compareTo ( O0 ) == 1 )  <CR> x4 . display ( j9 ) ;  <CR> }  <CR> }  <CR> public void display ( int j9 ) {  <CR> list [ j9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 