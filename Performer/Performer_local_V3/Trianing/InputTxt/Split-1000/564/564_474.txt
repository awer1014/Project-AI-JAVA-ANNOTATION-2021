 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String q4 , String q6 , String y2 , String e , String f0 ) {  <CR> super ( q4 , q6 , y2 , e , f0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String s , String Q8 , String l6 , String s9 , String r6 ) {  <CR> super ( s , Q8 , l6 , s9 , r6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String s7 , String j7 , Evaluation E ) {  <CR> this . senderAddr = s7 ;  <CR> this . receiverAddr = j7 ;  <CR> this . letter = E ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] z9 ) {  <CR> Evaluation h2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U8 = new Envelop ( "Taipei" , "Kaohsiung" , h2 ) ;  <CR> U8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String o6 , String A6 , String m2 , String C6 , String h3 ) {  <CR> this . title = o6 ;  <CR> this . receiver = A6 ;  <CR> this . content = m2 ;  <CR> this . sender = C6 ;  <CR> this . date = h3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i0 ) {  <CR> int X1 ;  <CR> for ( X1 = list . length - 1 ; X1 >= 0 ; X1 -- ) {  <CR> int a3 = X1 ;  <CR> Letter b = new Letter ( X1 ) ;  <CR> Letter A8 = new Letter ( a3 - 1 ) ;  <CR> if ( b . compareTo ( A8 ) == 1 )  <CR> b . display ( X1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int X1 ) {  <CR> list [ X1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object k2 ) {  <CR> Letter p7 = ( Letter ) k2 ;  <CR> if ( this . x > p7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int a5 ) {  <CR> this . x = a5 ;  <CR> }  <CR> }  <CR>  <EOC> 