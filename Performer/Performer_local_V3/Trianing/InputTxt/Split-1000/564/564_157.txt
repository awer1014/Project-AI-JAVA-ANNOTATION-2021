 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D8 , String k4 , String q1 , String n8 , String Q8 ) {  <CR> super ( D8 , k4 , q1 , n8 , Q8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g2 , String e3 , String V8 , String C4 , String Z1 ) {  <CR> super ( g2 , e3 , V8 , C4 , Z1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m4 ) {  <CR> Evaluation M6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e9 = new Envelop ( "Taipei" , "Kaohsiung" , M6 ) ;  <CR> e9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String n0 , String o5 , Evaluation d3 ) {  <CR> this . senderAddr = n0 ;  <CR> this . receiverAddr = o5 ;  <CR> this . letter = d3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String K3 , String a2 , String g7 , String a0 , String p8 ) {  <CR> this . title = K3 ;  <CR> this . receiver = a2 ;  <CR> this . content = g7 ;  <CR> this . sender = a0 ;  <CR> this . date = p8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int b ) {  <CR> this . x = b ;  <CR> }  <CR> public int compareTo ( Object t0 ) {  <CR> Letter F6 = ( Letter ) t0 ;  <CR> if ( this . x > F6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int P8 ) {  <CR> list [ P8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m6 ) {  <CR> int P8 ;  <CR> for ( P8 = list . length - 1 ; P8 >= 0 ; P8 -- ) {  <CR> int G2 = P8 ;  <CR> Letter m5 = new Letter ( P8 ) ;  <CR> Letter U = new Letter ( G2 - 1 ) ;  <CR> if ( m5 . compareTo ( U ) == 1 )  <CR> m5 . display ( P8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 