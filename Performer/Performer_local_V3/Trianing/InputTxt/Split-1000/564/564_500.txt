 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Y1 , String b5 , String j2 , String N7 , String O9 ) {  <CR> super ( Y1 , b5 , j2 , N7 , O9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n5 , String d2 , String g7 , String X6 , String A7 ) {  <CR> super ( n5 , d2 , g7 , X6 , A7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String I9 , String I , Evaluation u5 ) {  <CR> this . senderAddr = I9 ;  <CR> this . receiverAddr = I ;  <CR> this . letter = u5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] a1 ) {  <CR> Evaluation t8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f6 = new Envelop ( "Taipei" , "Kaohsiung" , t8 ) ;  <CR> f6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String u , String Y6 , String m0 , String U8 , String l2 ) {  <CR> this . title = u ;  <CR> this . receiver = Y6 ;  <CR> this . content = m0 ;  <CR> this . sender = U8 ;  <CR> this . date = l2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object a2 ) {  <CR> Letter T9 = ( Letter ) a2 ;  <CR> if ( this . x > T9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] a0 ) {  <CR> int G9 ;  <CR> for ( G9 = list . length - 1 ; G9 >= 0 ; G9 -- ) {  <CR> int Y8 = G9 ;  <CR> Letter A9 = new Letter ( G9 ) ;  <CR> Letter h = new Letter ( Y8 - 1 ) ;  <CR> if ( A9 . compareTo ( h ) == 1 )  <CR> A9 . display ( G9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int G9 ) {  <CR> list [ G9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x3 ) {  <CR> this . x = x3 ;  <CR> }  <CR> }  <CR>  <EOC> 