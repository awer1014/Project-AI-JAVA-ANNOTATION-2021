 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N1 , String o7 , String W9 , String L9 , String r0 ) {  <CR> super ( N1 , o7 , W9 , L9 , r0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O5 , String T , String d8 , String p9 , String d0 ) {  <CR> super ( O5 , T , d8 , p9 , d0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String B5 , String O1 , Evaluation n8 ) {  <CR> this . senderAddr = B5 ;  <CR> this . receiverAddr = O1 ;  <CR> this . letter = n8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] W4 ) {  <CR> Evaluation K9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U7 = new Envelop ( "Taipei" , "Kaohsiung" , K9 ) ;  <CR> U7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y1 , String Q5 , String Z5 , String y4 , String Y7 ) {  <CR> this . title = Y1 ;  <CR> this . receiver = Q5 ;  <CR> this . content = Z5 ;  <CR> this . sender = y4 ;  <CR> this . date = Y7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int a0 ) {  <CR> this . x = a0 ;  <CR> }  <CR> public void display ( int l1 ) {  <CR> list [ l1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object O ) {  <CR> Letter F0 = ( Letter ) O ;  <CR> if ( this . x > F0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] q7 ) {  <CR> int l1 ;  <CR> for ( l1 = list . length - 1 ; l1 >= 0 ; l1 -- ) {  <CR> int e0 = l1 ;  <CR> Letter q0 = new Letter ( l1 ) ;  <CR> Letter B7 = new Letter ( e0 - 1 ) ;  <CR> if ( q0 . compareTo ( B7 ) == 1 )  <CR> q0 . display ( l1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 