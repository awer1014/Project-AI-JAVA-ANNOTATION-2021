 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O0 , String r9 , String l7 , String u5 , String a9 ) {  <CR> super ( O0 , r9 , l7 , u5 , a9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String g2 , String l4 , String L , String F4 , String J9 ) {  <CR> super ( g2 , l4 , L , F4 , J9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String g8 , String X6 , Evaluation o5 ) {  <CR> this . senderAddr = g8 ;  <CR> this . receiverAddr = X6 ;  <CR> this . letter = o5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] z9 ) {  <CR> Evaluation F0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V = new Envelop ( "Taipei" , "Kaohsiung" , F0 ) ;  <CR> V . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String i5 , String f1 , String n , String T , String D0 ) {  <CR> this . title = i5 ;  <CR> this . receiver = f1 ;  <CR> this . content = n ;  <CR> this . sender = T ;  <CR> this . date = D0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] R4 ) {  <CR> int G7 ;  <CR> for ( G7 = list . length - 1 ; G7 >= 0 ; G7 -- ) {  <CR> int N = G7 ;  <CR> Letter t0 = new Letter ( G7 ) ;  <CR> Letter q6 = new Letter ( N - 1 ) ;  <CR> if ( t0 . compareTo ( q6 ) == 1 )  <CR> t0 . display ( G7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int t1 ) {  <CR> this . x = t1 ;  <CR> }  <CR> public int compareTo ( Object r7 ) {  <CR> Letter V3 = ( Letter ) r7 ;  <CR> if ( this . x > V3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int G7 ) {  <CR> list [ G7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 