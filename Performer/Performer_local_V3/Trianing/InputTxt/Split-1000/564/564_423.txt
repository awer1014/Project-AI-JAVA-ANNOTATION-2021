 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X3 , String P2 , String Z5 , String h3 , String n9 ) {  <CR> super ( X3 , P2 , Z5 , h3 , n9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F0 , String P0 , String w9 , String m0 , String E9 ) {  <CR> super ( F0 , P0 , w9 , m0 , E9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String m , String Y4 , Evaluation C5 ) {  <CR> this . senderAddr = m ;  <CR> this . receiverAddr = Y4 ;  <CR> this . letter = C5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Q8 ) {  <CR> Evaluation i8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w0 = new Envelop ( "Taipei" , "Kaohsiung" , i8 ) ;  <CR> w0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String q6 , String O0 , String w4 , String e1 , String l1 ) {  <CR> this . title = q6 ;  <CR> this . receiver = O0 ;  <CR> this . content = w4 ;  <CR> this . sender = e1 ;  <CR> this . date = l1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int X6 ) {  <CR> list [ X6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object O3 ) {  <CR> Letter C = ( Letter ) O3 ;  <CR> if ( this . x > C . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] a3 ) {  <CR> int X6 ;  <CR> for ( X6 = list . length - 1 ; X6 >= 0 ; X6 -- ) {  <CR> int V4 = X6 ;  <CR> Letter N0 = new Letter ( X6 ) ;  <CR> Letter L8 = new Letter ( V4 - 1 ) ;  <CR> if ( N0 . compareTo ( L8 ) == 1 )  <CR> N0 . display ( X6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int p7 ) {  <CR> this . x = p7 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 