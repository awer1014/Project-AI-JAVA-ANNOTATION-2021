 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A7 , String t5 , String w , String Y8 , String o ) {  <CR> super ( A7 , t5 , w , Y8 , o ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H9 , String A2 , String I6 , String N2 , String j8 ) {  <CR> super ( H9 , A2 , I6 , N2 , j8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] V0 ) {  <CR> Evaluation P2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I5 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> I5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String m8 , String c1 , Evaluation y6 ) {  <CR> this . senderAddr = m8 ;  <CR> this . receiverAddr = c1 ;  <CR> this . letter = y6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String U5 , String m1 , String c6 , String f5 , String V5 ) {  <CR> this . title = U5 ;  <CR> this . receiver = m1 ;  <CR> this . content = c6 ;  <CR> this . sender = f5 ;  <CR> this . date = V5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] X3 ) {  <CR> int n8 ;  <CR> for ( n8 = list . length - 1 ; n8 >= 0 ; n8 -- ) {  <CR> int g = n8 ;  <CR> Letter A9 = new Letter ( n8 ) ;  <CR> Letter T7 = new Letter ( g - 1 ) ;  <CR> if ( A9 . compareTo ( T7 ) == 1 )  <CR> A9 . display ( n8 ) ;  <CR> }  <CR> }  <CR> public void display ( int n8 ) {  <CR> list [ n8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object z2 ) {  <CR> Letter N0 = ( Letter ) z2 ;  <CR> if ( this . x > N0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int X9 ) {  <CR> this . x = X9 ;  <CR> }  <CR> }  <CR>  <EOC> 