 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String R5 , String o3 , String r8 , String g2 , String t5 ) {  <CR> super ( R5 , o3 , r8 , g2 , t5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R8 , String h6 , String b1 , String A5 , String N6 ) {  <CR> super ( R8 , h6 , b1 , A5 , N6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] K1 ) {  <CR> Evaluation w9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j5 = new Envelop ( "Taipei" , "Kaohsiung" , w9 ) ;  <CR> j5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p5 , String Q8 , Evaluation K0 ) {  <CR> this . senderAddr = p5 ;  <CR> this . receiverAddr = Q8 ;  <CR> this . letter = K0 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String t5 , String w3 , String n , String v3 , String f1 ) {  <CR> this . title = t5 ;  <CR> this . receiver = w3 ;  <CR> this . content = n ;  <CR> this . sender = v3 ;  <CR> this . date = f1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int f4 ) {  <CR> this . x = f4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object D ) {  <CR> Letter v5 = ( Letter ) D ;  <CR> if ( this . x > v5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Z1 ) {  <CR> int T8 ;  <CR> for ( T8 = list . length - 1 ; T8 >= 0 ; T8 -- ) {  <CR> int O1 = T8 ;  <CR> Letter l1 = new Letter ( T8 ) ;  <CR> Letter t9 = new Letter ( O1 - 1 ) ;  <CR> if ( l1 . compareTo ( t9 ) == 1 )  <CR> l1 . display ( T8 ) ;  <CR> }  <CR> }  <CR> public void display ( int T8 ) {  <CR> list [ T8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 