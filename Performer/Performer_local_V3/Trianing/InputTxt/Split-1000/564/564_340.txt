 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j8 , String A4 , String m3 , String k0 , String u7 ) {  <CR> super ( j8 , A4 , m3 , k0 , u7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String o6 , String B1 , String l8 , String E , String F ) {  <CR> super ( o6 , B1 , l8 , E , F ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String F1 , String O8 , Evaluation h1 ) {  <CR> this . senderAddr = F1 ;  <CR> this . receiverAddr = O8 ;  <CR> this . letter = h1 ;  <CR> }  <CR> public static void main ( String [ ] w0 ) {  <CR> Evaluation g4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K4 = new Envelop ( "Taipei" , "Kaohsiung" , g4 ) ;  <CR> K4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String m9 , String h6 , String f7 , String n3 , String D5 ) {  <CR> this . title = m9 ;  <CR> this . receiver = h6 ;  <CR> this . content = f7 ;  <CR> this . sender = n3 ;  <CR> this . date = D5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] e8 ) {  <CR> int T4 ;  <CR> for ( T4 = list . length - 1 ; T4 >= 0 ; T4 -- ) {  <CR> int Y2 = T4 ;  <CR> Letter d4 = new Letter ( T4 ) ;  <CR> Letter Q4 = new Letter ( Y2 - 1 ) ;  <CR> if ( d4 . compareTo ( Q4 ) == 1 )  <CR> d4 . display ( T4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object d5 ) {  <CR> Letter s7 = ( Letter ) d5 ;  <CR> if ( this . x > s7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int T8 ) {  <CR> this . x = T8 ;  <CR> }  <CR> public void display ( int T4 ) {  <CR> list [ T4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 