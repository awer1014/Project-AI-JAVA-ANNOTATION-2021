 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String P5 , String T , String Y8 , String d0 , String s8 ) {  <CR> super ( P5 , T , Y8 , d0 , s8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i9 , String O4 , String X1 , String c6 , String J2 ) {  <CR> super ( i9 , O4 , X1 , c6 , J2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x9 ) {  <CR> Evaluation z5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x3 = new Envelop ( "Taipei" , "Kaohsiung" , z5 ) ;  <CR> x3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String W4 , String B3 , Evaluation d0 ) {  <CR> this . senderAddr = W4 ;  <CR> this . receiverAddr = B3 ;  <CR> this . letter = d0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String B9 , String f1 , String X , String t3 , String q5 ) {  <CR> this . title = B9 ;  <CR> this . receiver = f1 ;  <CR> this . content = X ;  <CR> this . sender = t3 ;  <CR> this . date = q5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object Z9 ) {  <CR> Letter Z3 = ( Letter ) Z9 ;  <CR> if ( this . x > Z3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int w6 ) {  <CR> list [ w6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int K1 ) {  <CR> this . x = K1 ;  <CR> }  <CR> public static void main ( String [ ] f2 ) {  <CR> int w6 ;  <CR> for ( w6 = list . length - 1 ; w6 >= 0 ; w6 -- ) {  <CR> int J = w6 ;  <CR> Letter y0 = new Letter ( w6 ) ;  <CR> Letter N9 = new Letter ( J - 1 ) ;  <CR> if ( y0 . compareTo ( N9 ) == 1 )  <CR> y0 . display ( w6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 