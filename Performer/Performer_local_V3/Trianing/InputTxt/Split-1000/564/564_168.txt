 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R7 , String i5 , String W4 , String e4 , String i0 ) {  <CR> super ( R7 , i5 , W4 , e4 , i0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q9 , String e1 , String z9 , String O8 , String I5 ) {  <CR> super ( Q9 , e1 , z9 , O8 , I5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] u4 ) {  <CR> Evaluation U3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z = new Envelop ( "Taipei" , "Kaohsiung" , U3 ) ;  <CR> z . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String o4 , String u9 , Evaluation h1 ) {  <CR> this . senderAddr = o4 ;  <CR> this . receiverAddr = u9 ;  <CR> this . letter = h1 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String E1 , String b4 , String O0 , String n5 , String T6 ) {  <CR> this . title = E1 ;  <CR> this . receiver = b4 ;  <CR> this . content = O0 ;  <CR> this . sender = n5 ;  <CR> this . date = T6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object t6 ) {  <CR> Letter s0 = ( Letter ) t6 ;  <CR> if ( this . x > s0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int I1 ) {  <CR> list [ I1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A ) {  <CR> int I1 ;  <CR> for ( I1 = list . length - 1 ; I1 >= 0 ; I1 -- ) {  <CR> int F9 = I1 ;  <CR> Letter q3 = new Letter ( I1 ) ;  <CR> Letter v6 = new Letter ( F9 - 1 ) ;  <CR> if ( q3 . compareTo ( v6 ) == 1 )  <CR> q3 . display ( I1 ) ;  <CR> }  <CR> }  <CR> Letter ( int B7 ) {  <CR> this . x = B7 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 