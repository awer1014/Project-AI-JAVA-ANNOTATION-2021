 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d1 , String q9 , String P0 , String F8 , String n4 ) {  <CR> super ( d1 , q9 , P0 , F8 , n4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W6 , String y6 , String K4 , String m9 , String o7 ) {  <CR> super ( W6 , y6 , K4 , m9 , o7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] O4 ) {  <CR> Evaluation e2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z0 = new Envelop ( "Taipei" , "Kaohsiung" , e2 ) ;  <CR> z0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String i , String W0 , Evaluation C8 ) {  <CR> this . senderAddr = i ;  <CR> this . receiverAddr = W0 ;  <CR> this . letter = C8 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String l6 , String A , String c9 , String v6 , String b4 ) {  <CR> this . title = l6 ;  <CR> this . receiver = A ;  <CR> this . content = c9 ;  <CR> this . sender = v6 ;  <CR> this . date = b4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] E8 ) {  <CR> int t4 ;  <CR> for ( t4 = list . length - 1 ; t4 >= 0 ; t4 -- ) {  <CR> int i4 = t4 ;  <CR> Letter h8 = new Letter ( t4 ) ;  <CR> Letter t2 = new Letter ( i4 - 1 ) ;  <CR> if ( h8 . compareTo ( t2 ) == 1 )  <CR> h8 . display ( t4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int t4 ) {  <CR> list [ t4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int m9 ) {  <CR> this . x = m9 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object v6 ) {  <CR> Letter Q0 = ( Letter ) v6 ;  <CR> if ( this . x > Q0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 