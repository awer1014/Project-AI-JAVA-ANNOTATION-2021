 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u , String x8 , String F0 , String Q3 , String Q2 ) {  <CR> super ( u , x8 , F0 , Q3 , Q2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String m7 , String s8 , String Z8 , String k6 , String F5 ) {  <CR> super ( m7 , s8 , Z8 , k6 , F5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String N2 , String Q9 , Evaluation a9 ) {  <CR> this . senderAddr = N2 ;  <CR> this . receiverAddr = Q9 ;  <CR> this . letter = a9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] h ) {  <CR> Evaluation m = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I7 = new Envelop ( "Taipei" , "Kaohsiung" , m ) ;  <CR> I7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String T7 , String K , String e8 , String v5 , String D3 ) {  <CR> this . title = T7 ;  <CR> this . receiver = K ;  <CR> this . content = e8 ;  <CR> this . sender = v5 ;  <CR> this . date = D3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int A4 ) {  <CR> list [ A4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] F8 ) {  <CR> int A4 ;  <CR> for ( A4 = list . length - 1 ; A4 >= 0 ; A4 -- ) {  <CR> int n4 = A4 ;  <CR> Letter L7 = new Letter ( A4 ) ;  <CR> Letter H8 = new Letter ( n4 - 1 ) ;  <CR> if ( L7 . compareTo ( H8 ) == 1 )  <CR> L7 . display ( A4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object w ) {  <CR> Letter I1 = ( Letter ) w ;  <CR> if ( this . x > I1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Z5 ) {  <CR> this . x = Z5 ;  <CR> }  <CR> }  <CR>  <EOC> 