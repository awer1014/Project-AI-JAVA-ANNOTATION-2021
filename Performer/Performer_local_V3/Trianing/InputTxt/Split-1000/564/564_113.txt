 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t , String E0 , String p6 , String U0 , String G5 ) {  <CR> super ( t , E0 , p6 , U0 , G5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String u1 , String E6 , String K7 , String k1 , String h4 ) {  <CR> super ( u1 , E6 , K7 , k1 , h4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String d4 , String c7 , Evaluation j3 ) {  <CR> this . senderAddr = d4 ;  <CR> this . receiverAddr = c7 ;  <CR> this . letter = j3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P0 ) {  <CR> Evaluation g3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b1 = new Envelop ( "Taipei" , "Kaohsiung" , g3 ) ;  <CR> b1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String m8 , String A1 , String H5 , String a8 , String n7 ) {  <CR> this . title = m8 ;  <CR> this . receiver = A1 ;  <CR> this . content = H5 ;  <CR> this . sender = a8 ;  <CR> this . date = n7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] i9 ) {  <CR> int b7 ;  <CR> for ( b7 = list . length - 1 ; b7 >= 0 ; b7 -- ) {  <CR> int g4 = b7 ;  <CR> Letter T5 = new Letter ( b7 ) ;  <CR> Letter H3 = new Letter ( g4 - 1 ) ;  <CR> if ( T5 . compareTo ( H3 ) == 1 )  <CR> T5 . display ( b7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object c0 ) {  <CR> Letter I5 = ( Letter ) c0 ;  <CR> if ( this . x > I5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int l5 ) {  <CR> this . x = l5 ;  <CR> }  <CR> public void display ( int b7 ) {  <CR> list [ b7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 