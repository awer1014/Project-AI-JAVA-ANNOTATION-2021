 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A9 , String f4 , String c1 , String R2 , String V4 ) {  <CR> super ( A9 , f4 , c1 , R2 , V4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b3 , String l6 , String M9 , String S2 , String z9 ) {  <CR> super ( b3 , l6 , M9 , S2 , z9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] r3 ) {  <CR> Evaluation r6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J2 = new Envelop ( "Taipei" , "Kaohsiung" , r6 ) ;  <CR> J2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String n3 , String r7 , Evaluation v4 ) {  <CR> this . senderAddr = n3 ;  <CR> this . receiverAddr = r7 ;  <CR> this . letter = v4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String u5 , String v2 , String A , String r , String y1 ) {  <CR> this . title = u5 ;  <CR> this . receiver = v2 ;  <CR> this . content = A ;  <CR> this . sender = r ;  <CR> this . date = y1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int B9 ) {  <CR> list [ B9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object N6 ) {  <CR> Letter p8 = ( Letter ) N6 ;  <CR> if ( this . x > p8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int h9 ) {  <CR> this . x = h9 ;  <CR> }  <CR> public static void main ( String [ ] Q2 ) {  <CR> int B9 ;  <CR> for ( B9 = list . length - 1 ; B9 >= 0 ; B9 -- ) {  <CR> int K = B9 ;  <CR> Letter w5 = new Letter ( B9 ) ;  <CR> Letter V5 = new Letter ( K - 1 ) ;  <CR> if ( w5 . compareTo ( V5 ) == 1 )  <CR> w5 . display ( B9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 