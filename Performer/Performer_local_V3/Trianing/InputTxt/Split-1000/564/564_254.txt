 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Z5 , String U8 , String B , String H6 , String E1 ) {  <CR> super ( Z5 , U8 , B , H6 , E1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r1 , String N0 , String h8 , String v5 , String l2 ) {  <CR> super ( r1 , N0 , h8 , v5 , l2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d0 ) {  <CR> Evaluation H5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C6 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> C6 . display ( ) ;  <CR> }  <CR> public Envelop ( String r2 , String a8 , Evaluation c8 ) {  <CR> this . senderAddr = r2 ;  <CR> this . receiverAddr = a8 ;  <CR> this . letter = c8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String A4 , String E6 , String z5 , String f3 , String f9 ) {  <CR> this . title = A4 ;  <CR> this . receiver = E6 ;  <CR> this . content = z5 ;  <CR> this . sender = f3 ;  <CR> this . date = f9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object U5 ) {  <CR> Letter y9 = ( Letter ) U5 ;  <CR> if ( this . x > y9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> int M7 ;  <CR> for ( M7 = list . length - 1 ; M7 >= 0 ; M7 -- ) {  <CR> int Y7 = M7 ;  <CR> Letter K7 = new Letter ( M7 ) ;  <CR> Letter D9 = new Letter ( Y7 - 1 ) ;  <CR> if ( K7 . compareTo ( D9 ) == 1 )  <CR> K7 . display ( M7 ) ;  <CR> }  <CR> }  <CR> public void display ( int M7 ) {  <CR> list [ M7 ] . Display ( ) ;  <CR> }  <CR> Letter ( int X5 ) {  <CR> this . x = X5 ;  <CR> }  <CR> }  <CR>  <EOC> 