 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y7 , String b1 , String D , String A5 , String U8 ) {  <CR> super ( y7 , b1 , D , A5 , U8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String U1 , String y0 , String s6 , String g5 , String l2 ) {  <CR> super ( U1 , y0 , s6 , g5 , l2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String M , String X9 , Evaluation n4 ) {  <CR> this . senderAddr = M ;  <CR> this . receiverAddr = X9 ;  <CR> this . letter = n4 ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> Evaluation g8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H0 = new Envelop ( "Taipei" , "Kaohsiung" , g8 ) ;  <CR> H0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String R2 , String H5 , String F0 , String K5 , String f3 ) {  <CR> this . title = R2 ;  <CR> this . receiver = H5 ;  <CR> this . content = F0 ;  <CR> this . sender = K5 ;  <CR> this . date = f3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Q3 ) {  <CR> this . x = Q3 ;  <CR> }  <CR> public int compareTo ( Object H7 ) {  <CR> Letter l9 = ( Letter ) H7 ;  <CR> if ( this . x > l9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] s9 ) {  <CR> int b9 ;  <CR> for ( b9 = list . length - 1 ; b9 >= 0 ; b9 -- ) {  <CR> int h6 = b9 ;  <CR> Letter A8 = new Letter ( b9 ) ;  <CR> Letter i3 = new Letter ( h6 - 1 ) ;  <CR> if ( A8 . compareTo ( i3 ) == 1 )  <CR> A8 . display ( b9 ) ;  <CR> }  <CR> }  <CR> public void display ( int b9 ) {  <CR> list [ b9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 