 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I2 , String B9 , String E7 , String h6 , String h7 ) {  <CR> super ( I2 , B9 , E7 , h6 , h7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String w5 , String q9 , String T7 , String v7 , String e7 ) {  <CR> super ( w5 , q9 , T7 , v7 , e7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String F2 , String u , Evaluation w6 ) {  <CR> this . senderAddr = F2 ;  <CR> this . receiverAddr = u ;  <CR> this . letter = w6 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] S ) {  <CR> Evaluation d5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j1 = new Envelop ( "Taipei" , "Kaohsiung" , d5 ) ;  <CR> j1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String M4 , String b5 , String o2 , String U , String c2 ) {  <CR> this . title = M4 ;  <CR> this . receiver = b5 ;  <CR> this . content = o2 ;  <CR> this . sender = U ;  <CR> this . date = c2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] n ) {  <CR> int b3 ;  <CR> for ( b3 = list . length - 1 ; b3 >= 0 ; b3 -- ) {  <CR> int l6 = b3 ;  <CR> Letter N8 = new Letter ( b3 ) ;  <CR> Letter B5 = new Letter ( l6 - 1 ) ;  <CR> if ( N8 . compareTo ( B5 ) == 1 )  <CR> N8 . display ( b3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int Y0 ) {  <CR> this . x = Y0 ;  <CR> }  <CR> public int compareTo ( Object C0 ) {  <CR> Letter q4 = ( Letter ) C0 ;  <CR> if ( this . x > q4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int b3 ) {  <CR> list [ b3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 