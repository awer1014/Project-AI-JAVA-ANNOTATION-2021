 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M6 , String K1 , String o3 , String E0 , String M5 ) {  <CR> super ( M6 , K1 , o3 , E0 , M5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z7 , String w0 , String g4 , String d3 , String k3 ) {  <CR> super ( Z7 , w0 , g4 , d3 , k3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q6 ) {  <CR> Evaluation A7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b0 = new Envelop ( "Taipei" , "Kaohsiung" , A7 ) ;  <CR> b0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String m4 , String e9 , Evaluation H4 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = e9 ;  <CR> this . letter = H4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String v7 , String h6 , String n7 , String X , String J ) {  <CR> this . title = v7 ;  <CR> this . receiver = h6 ;  <CR> this . content = n7 ;  <CR> this . sender = X ;  <CR> this . date = J ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int M ) {  <CR> this . x = M ;  <CR> }  <CR> public static void main ( String [ ] U ) {  <CR> int d0 ;  <CR> for ( d0 = list . length - 1 ; d0 >= 0 ; d0 -- ) {  <CR> int l8 = d0 ;  <CR> Letter h2 = new Letter ( d0 ) ;  <CR> Letter A = new Letter ( l8 - 1 ) ;  <CR> if ( h2 . compareTo ( A ) == 1 )  <CR> h2 . display ( d0 ) ;  <CR> }  <CR> }  <CR> public void display ( int d0 ) {  <CR> list [ d0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object B3 ) {  <CR> Letter p1 = ( Letter ) B3 ;  <CR> if ( this . x > p1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 