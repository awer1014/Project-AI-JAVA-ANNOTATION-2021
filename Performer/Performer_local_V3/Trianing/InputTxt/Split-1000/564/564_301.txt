 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t9 , String E9 , String r5 , String B1 , String j7 ) {  <CR> super ( t9 , E9 , r5 , B1 , j7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l1 , String r0 , String L9 , String a8 , String r7 ) {  <CR> super ( l1 , r0 , L9 , a8 , r7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String A3 , String L8 , Evaluation R6 ) {  <CR> this . senderAddr = A3 ;  <CR> this . receiverAddr = L8 ;  <CR> this . letter = R6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Z1 ) {  <CR> Evaluation N9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I3 = new Envelop ( "Taipei" , "Kaohsiung" , N9 ) ;  <CR> I3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String L8 , String X8 , String I8 , String C5 , String n ) {  <CR> this . title = L8 ;  <CR> this . receiver = X8 ;  <CR> this . content = I8 ;  <CR> this . sender = C5 ;  <CR> this . date = n ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] w5 ) {  <CR> int H1 ;  <CR> for ( H1 = list . length - 1 ; H1 >= 0 ; H1 -- ) {  <CR> int I7 = H1 ;  <CR> Letter Q0 = new Letter ( H1 ) ;  <CR> Letter X8 = new Letter ( I7 - 1 ) ;  <CR> if ( Q0 . compareTo ( X8 ) == 1 )  <CR> Q0 . display ( H1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object r5 ) {  <CR> Letter G1 = ( Letter ) r5 ;  <CR> if ( this . x > G1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int K6 ) {  <CR> this . x = K6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H1 ) {  <CR> list [ H1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 