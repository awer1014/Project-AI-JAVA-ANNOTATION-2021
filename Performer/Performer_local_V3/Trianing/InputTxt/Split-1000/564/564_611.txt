 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j6 , String O1 , String O9 , String Z5 , String j2 ) {  <CR> super ( j6 , O1 , O9 , Z5 , j2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s9 , String n2 , String H , String j9 , String c3 ) {  <CR> super ( s9 , n2 , H , j9 , c3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String o8 , String U , Evaluation V9 ) {  <CR> this . senderAddr = o8 ;  <CR> this . receiverAddr = U ;  <CR> this . letter = V9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] z1 ) {  <CR> Evaluation J4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C2 = new Envelop ( "Taipei" , "Kaohsiung" , J4 ) ;  <CR> C2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String k7 , String Q4 , String j3 , String Z5 , String n0 ) {  <CR> this . title = k7 ;  <CR> this . receiver = Q4 ;  <CR> this . content = j3 ;  <CR> this . sender = Z5 ;  <CR> this . date = n0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] B7 ) {  <CR> int M7 ;  <CR> for ( M7 = list . length - 1 ; M7 >= 0 ; M7 -- ) {  <CR> int y9 = M7 ;  <CR> Letter w9 = new Letter ( M7 ) ;  <CR> Letter o8 = new Letter ( y9 - 1 ) ;  <CR> if ( w9 . compareTo ( o8 ) == 1 )  <CR> w9 . display ( M7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int t9 ) {  <CR> this . x = t9 ;  <CR> }  <CR> public void display ( int M7 ) {  <CR> list [ M7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object T3 ) {  <CR> Letter F = ( Letter ) T3 ;  <CR> if ( this . x > F . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 