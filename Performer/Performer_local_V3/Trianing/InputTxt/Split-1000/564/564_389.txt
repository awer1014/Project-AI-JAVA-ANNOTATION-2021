 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I8 , String S2 , String Y , String N4 , String L2 ) {  <CR> super ( I8 , S2 , Y , N4 , L2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B4 , String c1 , String W2 , String P6 , String r ) {  <CR> super ( B4 , c1 , W2 , P6 , r ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q8 ) {  <CR> Evaluation u6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z9 = new Envelop ( "Taipei" , "Kaohsiung" , u6 ) ;  <CR> z9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String S1 , String J2 , Evaluation y ) {  <CR> this . senderAddr = S1 ;  <CR> this . receiverAddr = J2 ;  <CR> this . letter = y ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String N2 , String N0 , String d , String p4 , String l5 ) {  <CR> this . title = N2 ;  <CR> this . receiver = N0 ;  <CR> this . content = d ;  <CR> this . sender = p4 ;  <CR> this . date = l5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int D5 ) {  <CR> this . x = D5 ;  <CR> }  <CR> public static void main ( String [ ] r1 ) {  <CR> int a6 ;  <CR> for ( a6 = list . length - 1 ; a6 >= 0 ; a6 -- ) {  <CR> int t9 = a6 ;  <CR> Letter F2 = new Letter ( a6 ) ;  <CR> Letter r = new Letter ( t9 - 1 ) ;  <CR> if ( F2 . compareTo ( r ) == 1 )  <CR> F2 . display ( a6 ) ;  <CR> }  <CR> }  <CR> public void display ( int a6 ) {  <CR> list [ a6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object g1 ) {  <CR> Letter W5 = ( Letter ) g1 ;  <CR> if ( this . x > W5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 