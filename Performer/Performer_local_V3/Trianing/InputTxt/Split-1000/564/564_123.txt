 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y5 , String P1 , String f7 , String r6 , String J2 ) {  <CR> super ( Y5 , P1 , f7 , r6 , J2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String g6 , String B9 , String Z9 , String W6 , String g3 ) {  <CR> super ( g6 , B9 , Z9 , W6 , g3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String P6 , String w8 , Evaluation q6 ) {  <CR> this . senderAddr = P6 ;  <CR> this . receiverAddr = w8 ;  <CR> this . letter = q6 ;  <CR> }  <CR> public static void main ( String [ ] i4 ) {  <CR> Evaluation m9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L = new Envelop ( "Taipei" , "Kaohsiung" , m9 ) ;  <CR> L . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String P0 , String o2 , String t5 , String L4 , String B7 ) {  <CR> this . title = P0 ;  <CR> this . receiver = o2 ;  <CR> this . content = t5 ;  <CR> this . sender = L4 ;  <CR> this . date = B7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object x ) {  <CR> Letter y0 = ( Letter ) x ;  <CR> if ( this . x > y0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int n ) {  <CR> this . x = n ;  <CR> }  <CR> public void display ( int p9 ) {  <CR> list [ p9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] I3 ) {  <CR> int p9 ;  <CR> for ( p9 = list . length - 1 ; p9 >= 0 ; p9 -- ) {  <CR> int U0 = p9 ;  <CR> Letter l7 = new Letter ( p9 ) ;  <CR> Letter X8 = new Letter ( U0 - 1 ) ;  <CR> if ( l7 . compareTo ( X8 ) == 1 )  <CR> l7 . display ( p9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 