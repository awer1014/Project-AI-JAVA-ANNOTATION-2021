 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a5 , String M , String Z2 , String m9 , String P1 ) {  <CR> super ( a5 , M , Z2 , m9 , P1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y4 , String I5 , String Y3 , String K9 , String U7 ) {  <CR> super ( Y4 , I5 , Y3 , K9 , U7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] y8 ) {  <CR> Evaluation O8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p2 = new Envelop ( "Taipei" , "Kaohsiung" , O8 ) ;  <CR> p2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z5 , String P3 , Evaluation C9 ) {  <CR> this . senderAddr = Z5 ;  <CR> this . receiverAddr = P3 ;  <CR> this . letter = C9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String z7 , String z8 , String e , String S5 , String h5 ) {  <CR> this . title = z7 ;  <CR> this . receiver = z8 ;  <CR> this . content = e ;  <CR> this . sender = S5 ;  <CR> this . date = h5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int w1 ) {  <CR> this . x = w1 ;  <CR> }  <CR> public static void main ( String [ ] U2 ) {  <CR> int t3 ;  <CR> for ( t3 = list . length - 1 ; t3 >= 0 ; t3 -- ) {  <CR> int g8 = t3 ;  <CR> Letter A0 = new Letter ( t3 ) ;  <CR> Letter P = new Letter ( g8 - 1 ) ;  <CR> if ( A0 . compareTo ( P ) == 1 )  <CR> A0 . display ( t3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int t3 ) {  <CR> list [ t3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object n4 ) {  <CR> Letter M5 = ( Letter ) n4 ;  <CR> if ( this . x > M5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 