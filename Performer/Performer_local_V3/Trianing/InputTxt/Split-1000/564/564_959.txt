 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w , String M3 , String v6 , String O4 , String Y0 ) {  <CR> super ( w , M3 , v6 , O4 , Y0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String x5 , String G1 , String P4 , String j7 , String Q1 ) {  <CR> super ( x5 , G1 , P4 , j7 , Q1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String d0 , String f6 , Evaluation C0 ) {  <CR> this . senderAddr = d0 ;  <CR> this . receiverAddr = f6 ;  <CR> this . letter = C0 ;  <CR> }  <CR> public static void main ( String [ ] X ) {  <CR> Evaluation v1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D9 = new Envelop ( "Taipei" , "Kaohsiung" , v1 ) ;  <CR> D9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String b2 , String N1 , String M6 , String Q5 , String F0 ) {  <CR> this . title = b2 ;  <CR> this . receiver = N1 ;  <CR> this . content = M6 ;  <CR> this . sender = Q5 ;  <CR> this . date = F0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] j7 ) {  <CR> int E8 ;  <CR> for ( E8 = list . length - 1 ; E8 >= 0 ; E8 -- ) {  <CR> int P9 = E8 ;  <CR> Letter R5 = new Letter ( E8 ) ;  <CR> Letter o6 = new Letter ( P9 - 1 ) ;  <CR> if ( R5 . compareTo ( o6 ) == 1 )  <CR> R5 . display ( E8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int G6 ) {  <CR> this . x = G6 ;  <CR> }  <CR> public int compareTo ( Object O6 ) {  <CR> Letter m1 = ( Letter ) O6 ;  <CR> if ( this . x > m1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int E8 ) {  <CR> list [ E8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 