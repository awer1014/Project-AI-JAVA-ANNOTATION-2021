 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I2 , String u6 , String m2 , String z1 , String G4 ) {  <CR> super ( I2 , u6 , m2 , z1 , G4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B , String s6 , String y3 , String J5 , String B1 ) {  <CR> super ( B , s6 , y3 , J5 , B1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String n0 , String Q2 , Evaluation J ) {  <CR> this . senderAddr = n0 ;  <CR> this . receiverAddr = Q2 ;  <CR> this . letter = J ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] n ) {  <CR> Evaluation m = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F2 = new Envelop ( "Taipei" , "Kaohsiung" , m ) ;  <CR> F2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String n , String s1 , String u3 , String I8 , String s4 ) {  <CR> this . title = n ;  <CR> this . receiver = s1 ;  <CR> this . content = u3 ;  <CR> this . sender = I8 ;  <CR> this . date = s4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int T2 ) {  <CR> this . x = T2 ;  <CR> }  <CR> public void display ( int x2 ) {  <CR> list [ x2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object g1 ) {  <CR> Letter i0 = ( Letter ) g1 ;  <CR> if ( this . x > i0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] s7 ) {  <CR> int x2 ;  <CR> for ( x2 = list . length - 1 ; x2 >= 0 ; x2 -- ) {  <CR> int L7 = x2 ;  <CR> Letter r5 = new Letter ( x2 ) ;  <CR> Letter s0 = new Letter ( L7 - 1 ) ;  <CR> if ( r5 . compareTo ( s0 ) == 1 )  <CR> r5 . display ( x2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 