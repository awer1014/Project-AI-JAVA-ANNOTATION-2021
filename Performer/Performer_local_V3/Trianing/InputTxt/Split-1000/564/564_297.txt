 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V2 , String r5 , String n9 , String m9 , String N1 ) {  <CR> super ( V2 , r5 , n9 , m9 , N1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D5 , String S2 , String S6 , String I2 , String o5 ) {  <CR> super ( D5 , S2 , S6 , I2 , o5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] P1 ) {  <CR> Evaluation i1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o0 = new Envelop ( "Taipei" , "Kaohsiung" , i1 ) ;  <CR> o0 . display ( ) ;  <CR> }  <CR> public Envelop ( String R8 , String p0 , Evaluation x2 ) {  <CR> this . senderAddr = R8 ;  <CR> this . receiverAddr = p0 ;  <CR> this . letter = x2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String b1 , String K1 , String t2 , String W3 , String U5 ) {  <CR> this . title = b1 ;  <CR> this . receiver = K1 ;  <CR> this . content = t2 ;  <CR> this . sender = W3 ;  <CR> this . date = U5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object b0 ) {  <CR> Letter u3 = ( Letter ) b0 ;  <CR> if ( this . x > u3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] c ) {  <CR> int g1 ;  <CR> for ( g1 = list . length - 1 ; g1 >= 0 ; g1 -- ) {  <CR> int s3 = g1 ;  <CR> Letter M5 = new Letter ( g1 ) ;  <CR> Letter S2 = new Letter ( s3 - 1 ) ;  <CR> if ( M5 . compareTo ( S2 ) == 1 )  <CR> M5 . display ( g1 ) ;  <CR> }  <CR> }  <CR> public void display ( int g1 ) {  <CR> list [ g1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int E5 ) {  <CR> this . x = E5 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 