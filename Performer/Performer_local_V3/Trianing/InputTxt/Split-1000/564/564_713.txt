 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j1 , String u6 , String y1 , String S9 , String X2 ) {  <CR> super ( j1 , u6 , y1 , S9 , X2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E9 , String i9 , String I7 , String X9 , String d6 ) {  <CR> super ( E9 , i9 , I7 , X9 , d6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] w2 ) {  <CR> Evaluation t0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z7 = new Envelop ( "Taipei" , "Kaohsiung" , t0 ) ;  <CR> Z7 . display ( ) ;  <CR> }  <CR> public Envelop ( String f8 , String Y8 , Evaluation c2 ) {  <CR> this . senderAddr = f8 ;  <CR> this . receiverAddr = Y8 ;  <CR> this . letter = c2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String A7 , String U6 , String P0 , String e2 , String V6 ) {  <CR> this . title = A7 ;  <CR> this . receiver = U6 ;  <CR> this . content = P0 ;  <CR> this . sender = e2 ;  <CR> this . date = V6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] B7 ) {  <CR> int X2 ;  <CR> for ( X2 = list . length - 1 ; X2 >= 0 ; X2 -- ) {  <CR> int f2 = X2 ;  <CR> Letter Q9 = new Letter ( X2 ) ;  <CR> Letter w4 = new Letter ( f2 - 1 ) ;  <CR> if ( Q9 . compareTo ( w4 ) == 1 )  <CR> Q9 . display ( X2 ) ;  <CR> }  <CR> }  <CR> public void display ( int X2 ) {  <CR> list [ X2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int k8 ) {  <CR> this . x = k8 ;  <CR> }  <CR> public int compareTo ( Object K8 ) {  <CR> Letter w6 = ( Letter ) K8 ;  <CR> if ( this . x > w6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 