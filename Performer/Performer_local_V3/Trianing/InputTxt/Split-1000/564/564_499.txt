 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X4 , String B , String c2 , String v4 , String T ) {  <CR> super ( X4 , B , c2 , v4 , T ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String j7 , String j5 , String W8 , String l8 , String U5 ) {  <CR> super ( j7 , j5 , W8 , l8 , U5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p7 , String y1 , Evaluation d6 ) {  <CR> this . senderAddr = p7 ;  <CR> this . receiverAddr = y1 ;  <CR> this . letter = d6 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Y9 ) {  <CR> Evaluation e4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U1 = new Envelop ( "Taipei" , "Kaohsiung" , e4 ) ;  <CR> U1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String t7 , String f3 , String Z6 , String X4 , String g8 ) {  <CR> this . title = t7 ;  <CR> this . receiver = f3 ;  <CR> this . content = Z6 ;  <CR> this . sender = X4 ;  <CR> this . date = g8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int H8 ) {  <CR> list [ H8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int K ) {  <CR> this . x = K ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] U5 ) {  <CR> int H8 ;  <CR> for ( H8 = list . length - 1 ; H8 >= 0 ; H8 -- ) {  <CR> int W8 = H8 ;  <CR> Letter h3 = new Letter ( H8 ) ;  <CR> Letter V9 = new Letter ( W8 - 1 ) ;  <CR> if ( h3 . compareTo ( V9 ) == 1 )  <CR> h3 . display ( H8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object f7 ) {  <CR> Letter g0 = ( Letter ) f7 ;  <CR> if ( this . x > g0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 