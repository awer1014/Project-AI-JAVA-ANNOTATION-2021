 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q8 , String j1 , String F , String B0 , String s9 ) {  <CR> super ( Q8 , j1 , F , B0 , s9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String m0 , String t6 , String q1 , String u1 , String n3 ) {  <CR> super ( m0 , t6 , q1 , u1 , n3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String A , String d0 , Evaluation I2 ) {  <CR> this . senderAddr = A ;  <CR> this . receiverAddr = d0 ;  <CR> this . letter = I2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] y7 ) {  <CR> Evaluation q4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x3 = new Envelop ( "Taipei" , "Kaohsiung" , q4 ) ;  <CR> x3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String f2 , String P3 , String T6 , String n , String q5 ) {  <CR> this . title = f2 ;  <CR> this . receiver = P3 ;  <CR> this . content = T6 ;  <CR> this . sender = n ;  <CR> this . date = q5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object R7 ) {  <CR> Letter B4 = ( Letter ) R7 ;  <CR> if ( this . x > B4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int n6 ) {  <CR> list [ n6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] a8 ) {  <CR> int n6 ;  <CR> for ( n6 = list . length - 1 ; n6 >= 0 ; n6 -- ) {  <CR> int U1 = n6 ;  <CR> Letter H8 = new Letter ( n6 ) ;  <CR> Letter Y9 = new Letter ( U1 - 1 ) ;  <CR> if ( H8 . compareTo ( Y9 ) == 1 )  <CR> H8 . display ( n6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int g3 ) {  <CR> this . x = g3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 