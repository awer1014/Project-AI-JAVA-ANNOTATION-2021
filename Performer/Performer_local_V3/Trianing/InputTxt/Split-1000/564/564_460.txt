 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E7 , String x , String C4 , String R9 , String k9 ) {  <CR> super ( E7 , x , C4 , R9 , k9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L6 , String s8 , String d7 , String H8 , String L2 ) {  <CR> super ( L6 , s8 , d7 , H8 , L2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C9 , String F4 , Evaluation V ) {  <CR> this . senderAddr = C9 ;  <CR> this . receiverAddr = F4 ;  <CR> this . letter = V ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] p5 ) {  <CR> Evaluation w = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J7 = new Envelop ( "Taipei" , "Kaohsiung" , w ) ;  <CR> J7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String z9 , String V , String D5 , String G0 , String Q0 ) {  <CR> this . title = z9 ;  <CR> this . receiver = V ;  <CR> this . content = D5 ;  <CR> this . sender = G0 ;  <CR> this . date = Q0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object X ) {  <CR> Letter V0 = ( Letter ) X ;  <CR> if ( this . x > V0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int w2 ) {  <CR> this . x = w2 ;  <CR> }  <CR> public void display ( int d8 ) {  <CR> list [ d8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] f7 ) {  <CR> int d8 ;  <CR> for ( d8 = list . length - 1 ; d8 >= 0 ; d8 -- ) {  <CR> int z3 = d8 ;  <CR> Letter d5 = new Letter ( d8 ) ;  <CR> Letter X8 = new Letter ( z3 - 1 ) ;  <CR> if ( d5 . compareTo ( X8 ) == 1 )  <CR> d5 . display ( d8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 