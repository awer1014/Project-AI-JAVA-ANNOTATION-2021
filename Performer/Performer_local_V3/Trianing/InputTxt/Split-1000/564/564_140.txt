 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H9 , String z6 , String F2 , String f1 , String w7 ) {  <CR> super ( H9 , z6 , F2 , f1 , w7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C6 , String C8 , String Y8 , String i9 , String v2 ) {  <CR> super ( C6 , C8 , Y8 , i9 , v2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String x0 , String V2 , Evaluation Z6 ) {  <CR> this . senderAddr = x0 ;  <CR> this . receiverAddr = V2 ;  <CR> this . letter = Z6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S0 ) {  <CR> Evaluation s7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q0 = new Envelop ( "Taipei" , "Kaohsiung" , s7 ) ;  <CR> q0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String r3 , String C7 , String F7 , String j , String r9 ) {  <CR> this . title = r3 ;  <CR> this . receiver = C7 ;  <CR> this . content = F7 ;  <CR> this . sender = j ;  <CR> this . date = r9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int o0 ) {  <CR> this . x = o0 ;  <CR> }  <CR> public void display ( int m8 ) {  <CR> list [ m8 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] d1 ) {  <CR> int m8 ;  <CR> for ( m8 = list . length - 1 ; m8 >= 0 ; m8 -- ) {  <CR> int K = m8 ;  <CR> Letter X8 = new Letter ( m8 ) ;  <CR> Letter n2 = new Letter ( K - 1 ) ;  <CR> if ( X8 . compareTo ( n2 ) == 1 )  <CR> X8 . display ( m8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object N ) {  <CR> Letter k3 = ( Letter ) N ;  <CR> if ( this . x > k3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 