 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String c4 , String A3 , String l4 , String l8 , String J0 ) {  <CR> super ( c4 , A3 , l4 , l8 , J0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h1 , String S2 , String C6 , String Y1 , String X3 ) {  <CR> super ( h1 , S2 , C6 , Y1 , X3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Y0 ) {  <CR> Evaluation Q5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d8 = new Envelop ( "Taipei" , "Kaohsiung" , Q5 ) ;  <CR> d8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String H4 , String K1 , Evaluation C3 ) {  <CR> this . senderAddr = H4 ;  <CR> this . receiverAddr = K1 ;  <CR> this . letter = C3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String v9 , String E6 , String J3 , String X4 , String v8 ) {  <CR> this . title = v9 ;  <CR> this . receiver = E6 ;  <CR> this . content = J3 ;  <CR> this . sender = X4 ;  <CR> this . date = v8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int G3 ) {  <CR> list [ G3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int T3 ) {  <CR> this . x = T3 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] y6 ) {  <CR> int G3 ;  <CR> for ( G3 = list . length - 1 ; G3 >= 0 ; G3 -- ) {  <CR> int w7 = G3 ;  <CR> Letter u = new Letter ( G3 ) ;  <CR> Letter D0 = new Letter ( w7 - 1 ) ;  <CR> if ( u . compareTo ( D0 ) == 1 )  <CR> u . display ( G3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object X ) {  <CR> Letter Z5 = ( Letter ) X ;  <CR> if ( this . x > Z5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 