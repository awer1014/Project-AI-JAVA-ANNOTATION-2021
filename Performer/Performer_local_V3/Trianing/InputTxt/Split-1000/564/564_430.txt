 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B7 , String k4 , String F7 , String l , String n5 ) {  <CR> super ( B7 , k4 , F7 , l , n5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G8 , String f6 , String u4 , String n1 , String r8 ) {  <CR> super ( G8 , f6 , u4 , n1 , r8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] y9 ) {  <CR> Evaluation D = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h7 = new Envelop ( "Taipei" , "Kaohsiung" , D ) ;  <CR> h7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String z1 , String v2 , Evaluation Z7 ) {  <CR> this . senderAddr = z1 ;  <CR> this . receiverAddr = v2 ;  <CR> this . letter = Z7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String H0 , String d5 , String K1 , String k2 , String y3 ) {  <CR> this . title = H0 ;  <CR> this . receiver = d5 ;  <CR> this . content = K1 ;  <CR> this . sender = k2 ;  <CR> this . date = y3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int N0 ) {  <CR> this . x = N0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] J3 ) {  <CR> int V0 ;  <CR> for ( V0 = list . length - 1 ; V0 >= 0 ; V0 -- ) {  <CR> int u4 = V0 ;  <CR> Letter L7 = new Letter ( V0 ) ;  <CR> Letter v2 = new Letter ( u4 - 1 ) ;  <CR> if ( L7 . compareTo ( v2 ) == 1 )  <CR> L7 . display ( V0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object v1 ) {  <CR> Letter J5 = ( Letter ) v1 ;  <CR> if ( this . x > J5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int V0 ) {  <CR> list [ V0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 