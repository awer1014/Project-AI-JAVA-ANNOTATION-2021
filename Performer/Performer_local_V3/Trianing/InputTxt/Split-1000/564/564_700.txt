 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p6 , String o2 , String h8 , String N8 , String M7 ) {  <CR> super ( p6 , o2 , h8 , N8 , M7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String A1 , String o4 , String b8 , String X4 , String s4 ) {  <CR> super ( A1 , o4 , b8 , X4 , s4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x2 ) {  <CR> Evaluation l8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o1 = new Envelop ( "Taipei" , "Kaohsiung" , l8 ) ;  <CR> o1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String s4 , String X0 , Evaluation n9 ) {  <CR> this . senderAddr = s4 ;  <CR> this . receiverAddr = X0 ;  <CR> this . letter = n9 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String u5 , String I8 , String C5 , String X3 , String K5 ) {  <CR> this . title = u5 ;  <CR> this . receiver = I8 ;  <CR> this . content = C5 ;  <CR> this . sender = X3 ;  <CR> this . date = K5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int T1 ) {  <CR> this . x = T1 ;  <CR> }  <CR> public int compareTo ( Object M4 ) {  <CR> Letter K9 = ( Letter ) M4 ;  <CR> if ( this . x > K9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] C9 ) {  <CR> int y5 ;  <CR> for ( y5 = list . length - 1 ; y5 >= 0 ; y5 -- ) {  <CR> int e7 = y5 ;  <CR> Letter e2 = new Letter ( y5 ) ;  <CR> Letter J3 = new Letter ( e7 - 1 ) ;  <CR> if ( e2 . compareTo ( J3 ) == 1 )  <CR> e2 . display ( y5 ) ;  <CR> }  <CR> }  <CR> public void display ( int y5 ) {  <CR> list [ y5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 