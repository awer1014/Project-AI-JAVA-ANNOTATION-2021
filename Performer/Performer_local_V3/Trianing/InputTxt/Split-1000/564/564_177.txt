 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q7 , String V6 , String A0 , String a3 , String d0 ) {  <CR> super ( q7 , V6 , A0 , a3 , d0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String x8 , String k3 , String T1 , String b1 , String B8 ) {  <CR> super ( x8 , k3 , T1 , b1 , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String m9 , String Q7 , Evaluation d7 ) {  <CR> this . senderAddr = m9 ;  <CR> this . receiverAddr = Q7 ;  <CR> this . letter = d7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] I9 ) {  <CR> Evaluation r2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r1 = new Envelop ( "Taipei" , "Kaohsiung" , r2 ) ;  <CR> r1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String v5 , String N3 , String j , String S2 , String T9 ) {  <CR> this . title = v5 ;  <CR> this . receiver = N3 ;  <CR> this . content = j ;  <CR> this . sender = S2 ;  <CR> this . date = T9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object o1 ) {  <CR> Letter I4 = ( Letter ) o1 ;  <CR> if ( this . x > I4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int V6 ) {  <CR> this . x = V6 ;  <CR> }  <CR> public void display ( int p6 ) {  <CR> list [ p6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] W0 ) {  <CR> int p6 ;  <CR> for ( p6 = list . length - 1 ; p6 >= 0 ; p6 -- ) {  <CR> int n6 = p6 ;  <CR> Letter d7 = new Letter ( p6 ) ;  <CR> Letter q7 = new Letter ( n6 - 1 ) ;  <CR> if ( d7 . compareTo ( q7 ) == 1 )  <CR> d7 . display ( p6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 