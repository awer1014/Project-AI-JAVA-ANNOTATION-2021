 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V9 , String J4 , String s5 , String C8 , String B9 ) {  <CR> super ( V9 , J4 , s5 , C8 , B9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I4 , String b5 , String v1 , String u2 , String j8 ) {  <CR> super ( I4 , b5 , v1 , u2 , j8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] u8 ) {  <CR> Evaluation O7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p4 = new Envelop ( "Taipei" , "Kaohsiung" , O7 ) ;  <CR> p4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String M0 , String s5 , Evaluation r5 ) {  <CR> this . senderAddr = M0 ;  <CR> this . receiverAddr = s5 ;  <CR> this . letter = r5 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String R7 , String d8 , String X1 , String Z4 , String F5 ) {  <CR> this . title = R7 ;  <CR> this . receiver = d8 ;  <CR> this . content = X1 ;  <CR> this . sender = Z4 ;  <CR> this . date = F5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int G6 ) {  <CR> list [ G6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object U2 ) {  <CR> Letter a2 = ( Letter ) U2 ;  <CR> if ( this . x > a2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int A9 ) {  <CR> this . x = A9 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] a9 ) {  <CR> int G6 ;  <CR> for ( G6 = list . length - 1 ; G6 >= 0 ; G6 -- ) {  <CR> int h6 = G6 ;  <CR> Letter w2 = new Letter ( G6 ) ;  <CR> Letter S8 = new Letter ( h6 - 1 ) ;  <CR> if ( w2 . compareTo ( S8 ) == 1 )  <CR> w2 . display ( G6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 