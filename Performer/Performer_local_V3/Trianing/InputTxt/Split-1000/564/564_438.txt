 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A2 , String m4 , String B4 , String p6 , String H3 ) {  <CR> super ( A2 , m4 , B4 , p6 , H3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W , String D , String C4 , String U8 , String l0 ) {  <CR> super ( W , D , C4 , U8 , l0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String P , String S4 , Evaluation t ) {  <CR> this . senderAddr = P ;  <CR> this . receiverAddr = S4 ;  <CR> this . letter = t ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] i6 ) {  <CR> Evaluation H2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z3 = new Envelop ( "Taipei" , "Kaohsiung" , H2 ) ;  <CR> z3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String H0 , String T4 , String o1 , String r4 , String e9 ) {  <CR> this . title = H0 ;  <CR> this . receiver = T4 ;  <CR> this . content = o1 ;  <CR> this . sender = r4 ;  <CR> this . date = e9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int Q9 ) {  <CR> list [ Q9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] z7 ) {  <CR> int Q9 ;  <CR> for ( Q9 = list . length - 1 ; Q9 >= 0 ; Q9 -- ) {  <CR> int a2 = Q9 ;  <CR> Letter v4 = new Letter ( Q9 ) ;  <CR> Letter N7 = new Letter ( a2 - 1 ) ;  <CR> if ( v4 . compareTo ( N7 ) == 1 )  <CR> v4 . display ( Q9 ) ;  <CR> }  <CR> }  <CR> Letter ( int a5 ) {  <CR> this . x = a5 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object I6 ) {  <CR> Letter d5 = ( Letter ) I6 ;  <CR> if ( this . x > d5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 