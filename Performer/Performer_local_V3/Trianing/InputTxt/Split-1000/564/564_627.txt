 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String P3 , String n8 , String j1 , String a8 , String c8 ) {  <CR> super ( P3 , n8 , j1 , a8 , c8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s5 , String r4 , String B0 , String c1 , String I4 ) {  <CR> super ( s5 , r4 , B0 , c1 , I4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] I3 ) {  <CR> Evaluation q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A1 = new Envelop ( "Taipei" , "Kaohsiung" , q6 ) ;  <CR> A1 . display ( ) ;  <CR> }  <CR> public Envelop ( String W7 , String k , Evaluation n ) {  <CR> this . senderAddr = W7 ;  <CR> this . receiverAddr = k ;  <CR> this . letter = n ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String w4 , String b9 , String t1 , String F3 , String R9 ) {  <CR> this . title = w4 ;  <CR> this . receiver = b9 ;  <CR> this . content = t1 ;  <CR> this . sender = F3 ;  <CR> this . date = R9 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int L5 ) {  <CR> list [ L5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int K1 ) {  <CR> this . x = K1 ;  <CR> }  <CR> public int compareTo ( Object h5 ) {  <CR> Letter d6 = ( Letter ) h5 ;  <CR> if ( this . x > d6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] G4 ) {  <CR> int L5 ;  <CR> for ( L5 = list . length - 1 ; L5 >= 0 ; L5 -- ) {  <CR> int R4 = L5 ;  <CR> Letter Y3 = new Letter ( L5 ) ;  <CR> Letter P4 = new Letter ( R4 - 1 ) ;  <CR> if ( Y3 . compareTo ( P4 ) == 1 )  <CR> Y3 . display ( L5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 