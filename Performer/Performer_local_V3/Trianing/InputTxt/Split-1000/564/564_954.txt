 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String R8 , String M7 , String z4 , String x0 , String W3 ) {  <CR> super ( R8 , M7 , z4 , x0 , W3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String B9 , String y3 , String N0 , String Q9 , String M4 ) {  <CR> super ( B9 , y3 , N0 , Q9 , M4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String K6 , String f3 , Evaluation m4 ) {  <CR> this . senderAddr = K6 ;  <CR> this . receiverAddr = f3 ;  <CR> this . letter = m4 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] d8 ) {  <CR> Evaluation v0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b2 = new Envelop ( "Taipei" , "Kaohsiung" , v0 ) ;  <CR> b2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String U9 , String B9 , String B3 , String L , String d4 ) {  <CR> this . title = U9 ;  <CR> this . receiver = B9 ;  <CR> this . content = B3 ;  <CR> this . sender = L ;  <CR> this . date = d4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] V9 ) {  <CR> int z9 ;  <CR> for ( z9 = list . length - 1 ; z9 >= 0 ; z9 -- ) {  <CR> int U0 = z9 ;  <CR> Letter X3 = new Letter ( z9 ) ;  <CR> Letter m0 = new Letter ( U0 - 1 ) ;  <CR> if ( X3 . compareTo ( m0 ) == 1 )  <CR> X3 . display ( z9 ) ;  <CR> }  <CR> }  <CR> Letter ( int m6 ) {  <CR> this . x = m6 ;  <CR> }  <CR> public int compareTo ( Object l5 ) {  <CR> Letter j2 = ( Letter ) l5 ;  <CR> if ( this . x > j2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int z9 ) {  <CR> list [ z9 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 