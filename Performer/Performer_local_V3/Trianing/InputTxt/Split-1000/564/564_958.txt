 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X , String G6 , String b1 , String v2 , String C7 ) {  <CR> super ( X , G6 , b1 , v2 , C7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D3 , String N2 , String X6 , String c6 , String f7 ) {  <CR> super ( D3 , N2 , X6 , c6 , f7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] t9 ) {  <CR> Evaluation a1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x8 = new Envelop ( "Taipei" , "Kaohsiung" , a1 ) ;  <CR> x8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String W0 , String Q6 , Evaluation Z2 ) {  <CR> this . senderAddr = W0 ;  <CR> this . receiverAddr = Q6 ;  <CR> this . letter = Z2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String r7 , String X7 , String K7 , String b9 , String k0 ) {  <CR> this . title = r7 ;  <CR> this . receiver = X7 ;  <CR> this . content = K7 ;  <CR> this . sender = b9 ;  <CR> this . date = k0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int Z6 ) {  <CR> this . x = Z6 ;  <CR> }  <CR> public void display ( int d4 ) {  <CR> list [ d4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object h0 ) {  <CR> Letter H5 = ( Letter ) h0 ;  <CR> if ( this . x > H5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] y6 ) {  <CR> int d4 ;  <CR> for ( d4 = list . length - 1 ; d4 >= 0 ; d4 -- ) {  <CR> int h6 = d4 ;  <CR> Letter m = new Letter ( d4 ) ;  <CR> Letter g1 = new Letter ( h6 - 1 ) ;  <CR> if ( m . compareTo ( g1 ) == 1 )  <CR> m . display ( d4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 