 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String M6 , String m6 , String L , String O , String f7 ) {  <CR> super ( M6 , m6 , L , O , f7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String M , String G3 , String Y5 , String J3 , String o3 ) {  <CR> super ( M , G3 , Y5 , J3 , o3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String e7 , String F2 , Evaluation v ) {  <CR> this . senderAddr = e7 ;  <CR> this . receiverAddr = F2 ;  <CR> this . letter = v ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] e6 ) {  <CR> Evaluation L2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q8 = new Envelop ( "Taipei" , "Kaohsiung" , L2 ) ;  <CR> Q8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String V9 , String f2 , String E8 , String u7 , String T2 ) {  <CR> this . title = V9 ;  <CR> this . receiver = f2 ;  <CR> this . content = E8 ;  <CR> this . sender = u7 ;  <CR> this . date = T2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int e2 ) {  <CR> this . x = e2 ;  <CR> }  <CR> public int compareTo ( Object P8 ) {  <CR> Letter x5 = ( Letter ) P8 ;  <CR> if ( this . x > x5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] U1 ) {  <CR> int O ;  <CR> for ( O = list . length - 1 ; O >= 0 ; O -- ) {  <CR> int V8 = O ;  <CR> Letter J7 = new Letter ( O ) ;  <CR> Letter Q5 = new Letter ( V8 - 1 ) ;  <CR> if ( J7 . compareTo ( Q5 ) == 1 )  <CR> J7 . display ( O ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int O ) {  <CR> list [ O ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 