 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String j2 , String w2 , String M6 , String S2 , String d6 ) {  <CR> super ( j2 , w2 , M6 , S2 , d6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y8 , String k8 , String G9 , String j1 , String M7 ) {  <CR> super ( Y8 , k8 , G9 , j1 , M7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String o5 , String h1 , Evaluation r6 ) {  <CR> this . senderAddr = o5 ;  <CR> this . receiverAddr = h1 ;  <CR> this . letter = r6 ;  <CR> }  <CR> public static void main ( String [ ] o4 ) {  <CR> Evaluation w5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J4 = new Envelop ( "Taipei" , "Kaohsiung" , w5 ) ;  <CR> J4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String o6 , String N0 , String U4 , String L4 , String n7 ) {  <CR> this . title = o6 ;  <CR> this . receiver = N0 ;  <CR> this . content = U4 ;  <CR> this . sender = L4 ;  <CR> this . date = n7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int W7 ) {  <CR> list [ W7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object P0 ) {  <CR> Letter A6 = ( Letter ) P0 ;  <CR> if ( this . x > A6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int F0 ) {  <CR> this . x = F0 ;  <CR> }  <CR> public static void main ( String [ ] X ) {  <CR> int W7 ;  <CR> for ( W7 = list . length - 1 ; W7 >= 0 ; W7 -- ) {  <CR> int u7 = W7 ;  <CR> Letter Q = new Letter ( W7 ) ;  <CR> Letter m0 = new Letter ( u7 - 1 ) ;  <CR> if ( Q . compareTo ( m0 ) == 1 )  <CR> Q . display ( W7 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 