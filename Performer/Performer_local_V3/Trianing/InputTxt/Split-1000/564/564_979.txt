 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z6 , String g0 , String S9 , String b8 , String Y1 ) {  <CR> super ( z6 , g0 , S9 , b8 , Y1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I4 , String G , String q6 , String Y4 , String Y ) {  <CR> super ( I4 , G , q6 , Y4 , Y ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String R3 , String p6 , Evaluation I2 ) {  <CR> this . senderAddr = R3 ;  <CR> this . receiverAddr = p6 ;  <CR> this . letter = I2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g2 ) {  <CR> Evaluation a = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v6 = new Envelop ( "Taipei" , "Kaohsiung" , a ) ;  <CR> v6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String l8 , String b6 , String f5 , String a3 , String l3 ) {  <CR> this . title = l8 ;  <CR> this . receiver = b6 ;  <CR> this . content = f5 ;  <CR> this . sender = a3 ;  <CR> this . date = l3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] y4 ) {  <CR> int j1 ;  <CR> for ( j1 = list . length - 1 ; j1 >= 0 ; j1 -- ) {  <CR> int o2 = j1 ;  <CR> Letter O7 = new Letter ( j1 ) ;  <CR> Letter Q7 = new Letter ( o2 - 1 ) ;  <CR> if ( O7 . compareTo ( Q7 ) == 1 )  <CR> O7 . display ( j1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object j7 ) {  <CR> Letter v3 = ( Letter ) j7 ;  <CR> if ( this . x > v3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int j1 ) {  <CR> list [ j1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int C8 ) {  <CR> this . x = C8 ;  <CR> }  <CR> }  <CR>  <EOC> 