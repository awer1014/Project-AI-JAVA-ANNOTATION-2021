 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y4 , String o6 , String o4 , String k4 , String K4 ) {  <CR> super ( Y4 , o6 , o4 , k4 , K4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k2 , String c3 , String W8 , String Y9 , String g7 ) {  <CR> super ( k2 , c3 , W8 , Y9 , g7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String s9 , String z8 , Evaluation P8 ) {  <CR> this . senderAddr = s9 ;  <CR> this . receiverAddr = z8 ;  <CR> this . letter = P8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] q2 ) {  <CR> Evaluation G7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t9 = new Envelop ( "Taipei" , "Kaohsiung" , G7 ) ;  <CR> t9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String H5 , String n4 , String d4 , String L5 , String Y6 ) {  <CR> this . title = H5 ;  <CR> this . receiver = n4 ;  <CR> this . content = d4 ;  <CR> this . sender = L5 ;  <CR> this . date = Y6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] o5 ) {  <CR> int L4 ;  <CR> for ( L4 = list . length - 1 ; L4 >= 0 ; L4 -- ) {  <CR> int T2 = L4 ;  <CR> Letter f3 = new Letter ( L4 ) ;  <CR> Letter t0 = new Letter ( T2 - 1 ) ;  <CR> if ( f3 . compareTo ( t0 ) == 1 )  <CR> f3 . display ( L4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Z2 ) {  <CR> Letter F = ( Letter ) Z2 ;  <CR> if ( this . x > F . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int L4 ) {  <CR> list [ L4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int c4 ) {  <CR> this . x = c4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 