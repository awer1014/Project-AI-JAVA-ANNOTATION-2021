 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String D , String j6 , String q8 , String H6 , String w4 ) {  <CR> super ( D , j6 , q8 , H6 , w4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v7 , String d7 , String o3 , String a7 , String Y ) {  <CR> super ( v7 , d7 , o3 , a7 , Y ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String a3 , String W7 , Evaluation S3 ) {  <CR> this . senderAddr = a3 ;  <CR> this . receiverAddr = W7 ;  <CR> this . letter = S3 ;  <CR> }  <CR> public static void main ( String [ ] L5 ) {  <CR> Evaluation B2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R1 = new Envelop ( "Taipei" , "Kaohsiung" , B2 ) ;  <CR> R1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String D0 , String S8 , String D4 , String G6 , String R7 ) {  <CR> this . title = D0 ;  <CR> this . receiver = S8 ;  <CR> this . content = D4 ;  <CR> this . sender = G6 ;  <CR> this . date = R7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] j8 ) {  <CR> int X1 ;  <CR> for ( X1 = list . length - 1 ; X1 >= 0 ; X1 -- ) {  <CR> int D0 = X1 ;  <CR> Letter j4 = new Letter ( X1 ) ;  <CR> Letter c7 = new Letter ( D0 - 1 ) ;  <CR> if ( j4 . compareTo ( c7 ) == 1 )  <CR> j4 . display ( X1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int X1 ) {  <CR> list [ X1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int H3 ) {  <CR> this . x = H3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object r2 ) {  <CR> Letter u3 = ( Letter ) r2 ;  <CR> if ( this . x > u3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 