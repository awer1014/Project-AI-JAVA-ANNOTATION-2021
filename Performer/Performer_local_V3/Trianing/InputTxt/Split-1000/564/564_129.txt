 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String F , String p1 , String n8 , String T9 , String U8 ) {  <CR> super ( F , p1 , n8 , T9 , U8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String p , String F8 , String X8 , String l7 , String U9 ) {  <CR> super ( p , F8 , X8 , l7 , U9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] R0 ) {  <CR> Evaluation f7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k6 = new Envelop ( "Taipei" , "Kaohsiung" , f7 ) ;  <CR> k6 . display ( ) ;  <CR> }  <CR> public Envelop ( String D5 , String S9 , Evaluation q0 ) {  <CR> this . senderAddr = D5 ;  <CR> this . receiverAddr = S9 ;  <CR> this . letter = q0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String H , String S5 , String v0 , String S9 , String w0 ) {  <CR> this . title = H ;  <CR> this . receiver = S5 ;  <CR> this . content = v0 ;  <CR> this . sender = S9 ;  <CR> this . date = w0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int j8 ) {  <CR> this . x = j8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object R9 ) {  <CR> Letter y2 = ( Letter ) R9 ;  <CR> if ( this . x > y2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int C ) {  <CR> list [ C ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] X ) {  <CR> int C ;  <CR> for ( C = list . length - 1 ; C >= 0 ; C -- ) {  <CR> int z8 = C ;  <CR> Letter L1 = new Letter ( C ) ;  <CR> Letter R8 = new Letter ( z8 - 1 ) ;  <CR> if ( L1 . compareTo ( R8 ) == 1 )  <CR> L1 . display ( C ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 