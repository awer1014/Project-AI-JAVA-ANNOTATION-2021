 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a5 , String K1 , String Q4 , String z5 , String I ) {  <CR> super ( a5 , K1 , Q4 , z5 , I ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String T , String k5 , String l2 , String q5 , String O6 ) {  <CR> super ( T , k5 , l2 , q5 , O6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String D7 , String e1 , Evaluation U1 ) {  <CR> this . senderAddr = D7 ;  <CR> this . receiverAddr = e1 ;  <CR> this . letter = U1 ;  <CR> }  <CR> public static void main ( String [ ] c8 ) {  <CR> Evaluation o = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a1 = new Envelop ( "Taipei" , "Kaohsiung" , o ) ;  <CR> a1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String b4 , String n , String N , String n5 , String r4 ) {  <CR> this . title = b4 ;  <CR> this . receiver = n ;  <CR> this . content = N ;  <CR> this . sender = n5 ;  <CR> this . date = r4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int b8 ) {  <CR> this . x = b8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int C2 ) {  <CR> list [ C2 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D ) {  <CR> int C2 ;  <CR> for ( C2 = list . length - 1 ; C2 >= 0 ; C2 -- ) {  <CR> int L1 = C2 ;  <CR> Letter b4 = new Letter ( C2 ) ;  <CR> Letter E9 = new Letter ( L1 - 1 ) ;  <CR> if ( b4 . compareTo ( E9 ) == 1 )  <CR> b4 . display ( C2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object T2 ) {  <CR> Letter M7 = ( Letter ) T2 ;  <CR> if ( this . x > M7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 