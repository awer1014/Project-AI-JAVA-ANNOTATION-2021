 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String L9 , String e0 , String d9 , String n , String S8 ) {  <CR> super ( L9 , e0 , d9 , n , S8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a8 , String k9 , String Y3 , String J3 , String I9 ) {  <CR> super ( a8 , k9 , Y3 , J3 , I9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u ) {  <CR> Evaluation X = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e1 = new Envelop ( "Taipei" , "Kaohsiung" , X ) ;  <CR> e1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String C2 , String o2 , Evaluation R7 ) {  <CR> this . senderAddr = C2 ;  <CR> this . receiverAddr = o2 ;  <CR> this . letter = R7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String B2 , String n5 , String T3 , String H9 , String f8 ) {  <CR> this . title = B2 ;  <CR> this . receiver = n5 ;  <CR> this . content = T3 ;  <CR> this . sender = H9 ;  <CR> this . date = f8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int T2 ) {  <CR> list [ T2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object W6 ) {  <CR> Letter u = ( Letter ) W6 ;  <CR> if ( this . x > u . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] x1 ) {  <CR> int T2 ;  <CR> for ( T2 = list . length - 1 ; T2 >= 0 ; T2 -- ) {  <CR> int n7 = T2 ;  <CR> Letter x = new Letter ( T2 ) ;  <CR> Letter f9 = new Letter ( n7 - 1 ) ;  <CR> if ( x . compareTo ( f9 ) == 1 )  <CR> x . display ( T2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int U0 ) {  <CR> this . x = U0 ;  <CR> }  <CR> }  <CR>  <EOC> 