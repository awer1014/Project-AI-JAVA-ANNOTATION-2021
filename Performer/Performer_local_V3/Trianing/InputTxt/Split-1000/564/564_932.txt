 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i3 , String Z4 , String e3 , String t5 , String b ) {  <CR> super ( i3 , Z4 , e3 , t5 , b ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String d9 , String E4 , String G0 , String N2 , String K ) {  <CR> super ( d9 , E4 , G0 , N2 , K ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] r0 ) {  <CR> Evaluation o3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h2 = new Envelop ( "Taipei" , "Kaohsiung" , o3 ) ;  <CR> h2 . display ( ) ;  <CR> }  <CR> public Envelop ( String a0 , String Q7 , Evaluation N3 ) {  <CR> this . senderAddr = a0 ;  <CR> this . receiverAddr = Q7 ;  <CR> this . letter = N3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String F0 , String h4 , String w7 , String J7 , String j2 ) {  <CR> this . title = F0 ;  <CR> this . receiver = h4 ;  <CR> this . content = w7 ;  <CR> this . sender = J7 ;  <CR> this . date = j2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int X4 ) {  <CR> list [ X4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object i ) {  <CR> Letter g3 = ( Letter ) i ;  <CR> if ( this . x > g3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] A2 ) {  <CR> int X4 ;  <CR> for ( X4 = list . length - 1 ; X4 >= 0 ; X4 -- ) {  <CR> int H5 = X4 ;  <CR> Letter J8 = new Letter ( X4 ) ;  <CR> Letter N7 = new Letter ( H5 - 1 ) ;  <CR> if ( J8 . compareTo ( N7 ) == 1 )  <CR> J8 . display ( X4 ) ;  <CR> }  <CR> }  <CR> Letter ( int o5 ) {  <CR> this . x = o5 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 