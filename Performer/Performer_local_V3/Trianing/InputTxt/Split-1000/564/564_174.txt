 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i6 , String a9 , String v3 , String X0 , String a3 ) {  <CR> super ( i6 , a9 , v3 , X0 , a3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I3 , String u2 , String o7 , String G9 , String d9 ) {  <CR> super ( I3 , u2 , o7 , G9 , d9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String U8 , String y , Evaluation r9 ) {  <CR> this . senderAddr = U8 ;  <CR> this . receiverAddr = y ;  <CR> this . letter = r9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P3 ) {  <CR> Evaluation H5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B3 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> B3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String v0 , String Q8 , String M0 , String s2 , String I7 ) {  <CR> this . title = v0 ;  <CR> this . receiver = Q8 ;  <CR> this . content = M0 ;  <CR> this . sender = s2 ;  <CR> this . date = I7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int U1 ) {  <CR> this . x = U1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int f3 ) {  <CR> list [ f3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] q8 ) {  <CR> int f3 ;  <CR> for ( f3 = list . length - 1 ; f3 >= 0 ; f3 -- ) {  <CR> int J4 = f3 ;  <CR> Letter S1 = new Letter ( f3 ) ;  <CR> Letter V7 = new Letter ( J4 - 1 ) ;  <CR> if ( S1 . compareTo ( V7 ) == 1 )  <CR> S1 . display ( f3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object W1 ) {  <CR> Letter C6 = ( Letter ) W1 ;  <CR> if ( this . x > C6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 