 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y8 , String O7 , String H2 , String d9 , String a7 ) {  <CR> super ( Y8 , O7 , H2 , d9 , a7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y4 , String Y4 , String h1 , String r9 , String r5 ) {  <CR> super ( y4 , Y4 , h1 , r9 , r5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String h0 , String x4 , Evaluation p7 ) {  <CR> this . senderAddr = h0 ;  <CR> this . receiverAddr = x4 ;  <CR> this . letter = p7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] R9 ) {  <CR> Evaluation N1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k9 = new Envelop ( "Taipei" , "Kaohsiung" , N1 ) ;  <CR> k9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String p6 , String n1 , String X6 , String Y7 , String c9 ) {  <CR> this . title = p6 ;  <CR> this . receiver = n1 ;  <CR> this . content = X6 ;  <CR> this . sender = Y7 ;  <CR> this . date = c9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int z5 ) {  <CR> this . x = z5 ;  <CR> }  <CR> public int compareTo ( Object s9 ) {  <CR> Letter Q7 = ( Letter ) s9 ;  <CR> if ( this . x > Q7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] K6 ) {  <CR> int a1 ;  <CR> for ( a1 = list . length - 1 ; a1 >= 0 ; a1 -- ) {  <CR> int g7 = a1 ;  <CR> Letter n7 = new Letter ( a1 ) ;  <CR> Letter e6 = new Letter ( g7 - 1 ) ;  <CR> if ( n7 . compareTo ( e6 ) == 1 )  <CR> n7 . display ( a1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int a1 ) {  <CR> list [ a1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 