 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W9 , String f1 , String h4 , String N0 , String y0 ) {  <CR> super ( W9 , f1 , h4 , N0 , y0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String u6 , String e5 , String H8 , String j2 , String r8 ) {  <CR> super ( u6 , e5 , H8 , j2 , r8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] H8 ) {  <CR> Evaluation Z6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x7 = new Envelop ( "Taipei" , "Kaohsiung" , Z6 ) ;  <CR> x7 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String c0 , String j9 , Evaluation l4 ) {  <CR> this . senderAddr = c0 ;  <CR> this . receiverAddr = j9 ;  <CR> this . letter = l4 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String B0 , String W9 , String k1 , String V4 , String X8 ) {  <CR> this . title = B0 ;  <CR> this . receiver = W9 ;  <CR> this . content = k1 ;  <CR> this . sender = V4 ;  <CR> this . date = X8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] A9 ) {  <CR> int D5 ;  <CR> for ( D5 = list . length - 1 ; D5 >= 0 ; D5 -- ) {  <CR> int i2 = D5 ;  <CR> Letter J1 = new Letter ( D5 ) ;  <CR> Letter Q0 = new Letter ( i2 - 1 ) ;  <CR> if ( J1 . compareTo ( Q0 ) == 1 )  <CR> J1 . display ( D5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int D5 ) {  <CR> list [ D5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object a5 ) {  <CR> Letter I8 = ( Letter ) a5 ;  <CR> if ( this . x > I8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Z4 ) {  <CR> this . x = Z4 ;  <CR> }  <CR> }  <CR>  <EOC> 