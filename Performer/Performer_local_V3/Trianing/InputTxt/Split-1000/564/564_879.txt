 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u5 , String J3 , String m4 , String R7 , String l9 ) {  <CR> super ( u5 , J3 , m4 , R7 , l9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h5 , String o1 , String U9 , String L0 , String K2 ) {  <CR> super ( h5 , o1 , U9 , L0 , K2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String C6 , String m8 , Evaluation K2 ) {  <CR> this . senderAddr = C6 ;  <CR> this . receiverAddr = m8 ;  <CR> this . letter = K2 ;  <CR> }  <CR> public static void main ( String [ ] s9 ) {  <CR> Evaluation g3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W3 = new Envelop ( "Taipei" , "Kaohsiung" , g3 ) ;  <CR> W3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String k4 , String v7 , String H6 , String Z8 , String j7 ) {  <CR> this . title = k4 ;  <CR> this . receiver = v7 ;  <CR> this . content = H6 ;  <CR> this . sender = Z8 ;  <CR> this . date = j7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int A2 ) {  <CR> list [ A2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int z7 ) {  <CR> this . x = z7 ;  <CR> }  <CR> public int compareTo ( Object G ) {  <CR> Letter f9 = ( Letter ) G ;  <CR> if ( this . x > f9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] L4 ) {  <CR> int A2 ;  <CR> for ( A2 = list . length - 1 ; A2 >= 0 ; A2 -- ) {  <CR> int c8 = A2 ;  <CR> Letter Q7 = new Letter ( A2 ) ;  <CR> Letter D0 = new Letter ( c8 - 1 ) ;  <CR> if ( Q7 . compareTo ( D0 ) == 1 )  <CR> Q7 . display ( A2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 