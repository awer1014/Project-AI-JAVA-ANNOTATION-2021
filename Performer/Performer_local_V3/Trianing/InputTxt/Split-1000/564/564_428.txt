 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W8 , String c6 , String H1 , String D1 , String U3 ) {  <CR> super ( W8 , c6 , H1 , D1 , U3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String w8 , String G7 , String u , String n5 , String m5 ) {  <CR> super ( w8 , G7 , u , n5 , m5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z5 , String S9 , Evaluation G9 ) {  <CR> this . senderAddr = Z5 ;  <CR> this . receiverAddr = S9 ;  <CR> this . letter = G9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] k2 ) {  <CR> Evaluation z = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k7 = new Envelop ( "Taipei" , "Kaohsiung" , z ) ;  <CR> k7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String E4 , String q0 , String u4 , String M0 , String R2 ) {  <CR> this . title = E4 ;  <CR> this . receiver = q0 ;  <CR> this . content = u4 ;  <CR> this . sender = M0 ;  <CR> this . date = R2 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] y1 ) {  <CR> int l5 ;  <CR> for ( l5 = list . length - 1 ; l5 >= 0 ; l5 -- ) {  <CR> int S9 = l5 ;  <CR> Letter Q4 = new Letter ( l5 ) ;  <CR> Letter i5 = new Letter ( S9 - 1 ) ;  <CR> if ( Q4 . compareTo ( i5 ) == 1 )  <CR> Q4 . display ( l5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object S4 ) {  <CR> Letter V7 = ( Letter ) S4 ;  <CR> if ( this . x > V7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int j2 ) {  <CR> this . x = j2 ;  <CR> }  <CR> public void display ( int l5 ) {  <CR> list [ l5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 