 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String J1 , String d8 , String h1 , String K8 , String u3 ) {  <CR> super ( J1 , d8 , h1 , K8 , u3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K4 , String g5 , String i0 , String D2 , String f4 ) {  <CR> super ( K4 , g5 , i0 , D2 , f4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String U6 , String p3 , Evaluation Z9 ) {  <CR> this . senderAddr = U6 ;  <CR> this . receiverAddr = p3 ;  <CR> this . letter = Z9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] E4 ) {  <CR> Evaluation h5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h7 = new Envelop ( "Taipei" , "Kaohsiung" , h5 ) ;  <CR> h7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String D0 , String Q9 , String I7 , String G7 , String w4 ) {  <CR> this . title = D0 ;  <CR> this . receiver = Q9 ;  <CR> this . content = I7 ;  <CR> this . sender = G7 ;  <CR> this . date = w4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int O2 ) {  <CR> list [ O2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object e3 ) {  <CR> Letter g1 = ( Letter ) e3 ;  <CR> if ( this . x > g1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] X7 ) {  <CR> int O2 ;  <CR> for ( O2 = list . length - 1 ; O2 >= 0 ; O2 -- ) {  <CR> int O7 = O2 ;  <CR> Letter o7 = new Letter ( O2 ) ;  <CR> Letter k5 = new Letter ( O7 - 1 ) ;  <CR> if ( o7 . compareTo ( k5 ) == 1 )  <CR> o7 . display ( O2 ) ;  <CR> }  <CR> }  <CR> Letter ( int R9 ) {  <CR> this . x = R9 ;  <CR> }  <CR> }  <CR>  <EOC> 