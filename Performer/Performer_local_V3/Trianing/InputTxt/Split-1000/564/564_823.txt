 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j7 , String P0 , String E1 , String v6 , String t2 ) {  <CR> super ( j7 , P0 , E1 , v6 , t2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String l9 , String J3 , String R3 , String E5 , String U5 ) {  <CR> super ( l9 , J3 , R3 , E5 , U5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String F , String z , Evaluation I7 ) {  <CR> this . senderAddr = F ;  <CR> this . receiverAddr = z ;  <CR> this . letter = I7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] T0 ) {  <CR> Evaluation F8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F6 = new Envelop ( "Taipei" , "Kaohsiung" , F8 ) ;  <CR> F6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String z3 , String S8 , String X6 , String I5 , String P8 ) {  <CR> this . title = z3 ;  <CR> this . receiver = S8 ;  <CR> this . content = X6 ;  <CR> this . sender = I5 ;  <CR> this . date = P8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int z0 ) {  <CR> list [ z0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object b0 ) {  <CR> Letter S9 = ( Letter ) b0 ;  <CR> if ( this . x > S9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] q2 ) {  <CR> int z0 ;  <CR> for ( z0 = list . length - 1 ; z0 >= 0 ; z0 -- ) {  <CR> int J1 = z0 ;  <CR> Letter Z7 = new Letter ( z0 ) ;  <CR> Letter e3 = new Letter ( J1 - 1 ) ;  <CR> if ( Z7 . compareTo ( e3 ) == 1 )  <CR> Z7 . display ( z0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int M3 ) {  <CR> this . x = M3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 