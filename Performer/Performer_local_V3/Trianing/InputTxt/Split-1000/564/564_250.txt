 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y2 , String t1 , String q1 , String e1 , String X1 ) {  <CR> super ( y2 , t1 , q1 , e1 , X1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k2 , String R , String A2 , String E7 , String p8 ) {  <CR> super ( k2 , R , A2 , E7 , p8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] W0 ) {  <CR> Evaluation B = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U3 = new Envelop ( "Taipei" , "Kaohsiung" , B ) ;  <CR> U3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String a1 , String x5 , Evaluation O5 ) {  <CR> this . senderAddr = a1 ;  <CR> this . receiverAddr = x5 ;  <CR> this . letter = O5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String g8 , String F2 , String y7 , String o6 , String R0 ) {  <CR> this . title = g8 ;  <CR> this . receiver = F2 ;  <CR> this . content = y7 ;  <CR> this . sender = o6 ;  <CR> this . date = R0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] i5 ) {  <CR> int i4 ;  <CR> for ( i4 = list . length - 1 ; i4 >= 0 ; i4 -- ) {  <CR> int W0 = i4 ;  <CR> Letter e6 = new Letter ( i4 ) ;  <CR> Letter S7 = new Letter ( W0 - 1 ) ;  <CR> if ( e6 . compareTo ( S7 ) == 1 )  <CR> e6 . display ( i4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int i4 ) {  <CR> list [ i4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x3 ) {  <CR> this . x = x3 ;  <CR> }  <CR> public int compareTo ( Object L3 ) {  <CR> Letter N4 = ( Letter ) L3 ;  <CR> if ( this . x > N4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 