 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c1 , String o5 , String l9 , String J5 , String Q0 ) {  <CR> super ( c1 , o5 , l9 , J5 , Q0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J9 , String D9 , String d , String j3 , String G5 ) {  <CR> super ( J9 , D9 , d , j3 , G5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x8 ) {  <CR> Evaluation b3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I0 = new Envelop ( "Taipei" , "Kaohsiung" , b3 ) ;  <CR> I0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String u0 , String b5 , Evaluation z7 ) {  <CR> this . senderAddr = u0 ;  <CR> this . receiverAddr = b5 ;  <CR> this . letter = z7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String m4 , String p3 , String M6 , String Y4 , String x2 ) {  <CR> this . title = m4 ;  <CR> this . receiver = p3 ;  <CR> this . content = M6 ;  <CR> this . sender = Y4 ;  <CR> this . date = x2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object J ) {  <CR> Letter U1 = ( Letter ) J ;  <CR> if ( this . x > U1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int k ) {  <CR> this . x = k ;  <CR> }  <CR> public static void main ( String [ ] Z3 ) {  <CR> int M ;  <CR> for ( M = list . length - 1 ; M >= 0 ; M -- ) {  <CR> int c6 = M ;  <CR> Letter f = new Letter ( M ) ;  <CR> Letter I3 = new Letter ( c6 - 1 ) ;  <CR> if ( f . compareTo ( I3 ) == 1 )  <CR> f . display ( M ) ;  <CR> }  <CR> }  <CR> public void display ( int M ) {  <CR> list [ M ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 