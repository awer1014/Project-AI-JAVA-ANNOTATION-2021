 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o2 , String h9 , String G6 , String g4 , String r2 ) {  <CR> super ( o2 , h9 , G6 , g4 , r2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H5 , String e3 , String U8 , String E1 , String j2 ) {  <CR> super ( H5 , e3 , U8 , E1 , j2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Z7 , String o0 , Evaluation c ) {  <CR> this . senderAddr = Z7 ;  <CR> this . receiverAddr = o0 ;  <CR> this . letter = c ;  <CR> }  <CR> public static void main ( String [ ] D5 ) {  <CR> Evaluation t1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p9 = new Envelop ( "Taipei" , "Kaohsiung" , t1 ) ;  <CR> p9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String n2 , String q8 , String o6 , String A6 , String x4 ) {  <CR> this . title = n2 ;  <CR> this . receiver = q8 ;  <CR> this . content = o6 ;  <CR> this . sender = A6 ;  <CR> this . date = x4 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object o3 ) {  <CR> Letter g4 = ( Letter ) o3 ;  <CR> if ( this . x > g4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] q2 ) {  <CR> int q8 ;  <CR> for ( q8 = list . length - 1 ; q8 >= 0 ; q8 -- ) {  <CR> int m5 = q8 ;  <CR> Letter E1 = new Letter ( q8 ) ;  <CR> Letter d5 = new Letter ( m5 - 1 ) ;  <CR> if ( E1 . compareTo ( d5 ) == 1 )  <CR> E1 . display ( q8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int L9 ) {  <CR> this . x = L9 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int q8 ) {  <CR> list [ q8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 