 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String P8 , String b6 , String g3 , String A0 , String v8 ) {  <CR> super ( P8 , b6 , g3 , A0 , v8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B3 , String A7 , String p0 , String L5 , String N0 ) {  <CR> super ( B3 , A7 , p0 , L5 , N0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String O1 , String e3 , Evaluation l2 ) {  <CR> this . senderAddr = O1 ;  <CR> this . receiverAddr = e3 ;  <CR> this . letter = l2 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] w8 ) {  <CR> Evaluation T5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h9 = new Envelop ( "Taipei" , "Kaohsiung" , T5 ) ;  <CR> h9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String G9 , String R9 , String u7 , String S6 , String h3 ) {  <CR> this . title = G9 ;  <CR> this . receiver = R9 ;  <CR> this . content = u7 ;  <CR> this . sender = S6 ;  <CR> this . date = h3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int o3 ) {  <CR> this . x = o3 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object O1 ) {  <CR> Letter x5 = ( Letter ) O1 ;  <CR> if ( this . x > x5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int p0 ) {  <CR> list [ p0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Z2 ) {  <CR> int p0 ;  <CR> for ( p0 = list . length - 1 ; p0 >= 0 ; p0 -- ) {  <CR> int r5 = p0 ;  <CR> Letter l0 = new Letter ( p0 ) ;  <CR> Letter V4 = new Letter ( r5 - 1 ) ;  <CR> if ( l0 . compareTo ( V4 ) == 1 )  <CR> l0 . display ( p0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 