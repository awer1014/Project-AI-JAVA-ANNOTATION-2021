 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E0 , String p8 , String R , String j6 , String A2 ) {  <CR> super ( E0 , p8 , R , j6 , A2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y8 , String F3 , String R2 , String j7 , String o0 ) {  <CR> super ( Y8 , F3 , R2 , j7 , o0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] d8 ) {  <CR> Evaluation p5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B6 = new Envelop ( "Taipei" , "Kaohsiung" , p5 ) ;  <CR> B6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Y4 , String R7 , Evaluation m7 ) {  <CR> this . senderAddr = Y4 ;  <CR> this . receiverAddr = R7 ;  <CR> this . letter = m7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String E5 , String v1 , String Z6 , String k0 , String R0 ) {  <CR> this . title = E5 ;  <CR> this . receiver = v1 ;  <CR> this . content = Z6 ;  <CR> this . sender = k0 ;  <CR> this . date = R0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object c8 ) {  <CR> Letter Z3 = ( Letter ) c8 ;  <CR> if ( this . x > Z3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int p7 ) {  <CR> list [ p7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] W6 ) {  <CR> int p7 ;  <CR> for ( p7 = list . length - 1 ; p7 >= 0 ; p7 -- ) {  <CR> int J9 = p7 ;  <CR> Letter t9 = new Letter ( p7 ) ;  <CR> Letter u2 = new Letter ( J9 - 1 ) ;  <CR> if ( t9 . compareTo ( u2 ) == 1 )  <CR> t9 . display ( p7 ) ;  <CR> }  <CR> }  <CR> Letter ( int O8 ) {  <CR> this . x = O8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 