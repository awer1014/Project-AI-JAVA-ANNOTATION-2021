 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F9 , String T6 , String u4 , String S7 , String M6 ) {  <CR> super ( F9 , T6 , u4 , S7 , M6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Z3 , String E8 , String Z5 , String B1 , String l0 ) {  <CR> super ( Z3 , E8 , Z5 , B1 , l0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String I8 , String r , Evaluation Y7 ) {  <CR> this . senderAddr = I8 ;  <CR> this . receiverAddr = r ;  <CR> this . letter = Y7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] S6 ) {  <CR> Evaluation e0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h7 = new Envelop ( "Taipei" , "Kaohsiung" , e0 ) ;  <CR> h7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String U1 , String c3 , String t1 , String h3 , String m7 ) {  <CR> this . title = U1 ;  <CR> this . receiver = c3 ;  <CR> this . content = t1 ;  <CR> this . sender = h3 ;  <CR> this . date = m7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int E3 ) {  <CR> list [ E3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int i0 ) {  <CR> this . x = i0 ;  <CR> }  <CR> public static void main ( String [ ] E0 ) {  <CR> int E3 ;  <CR> for ( E3 = list . length - 1 ; E3 >= 0 ; E3 -- ) {  <CR> int Y5 = E3 ;  <CR> Letter R6 = new Letter ( E3 ) ;  <CR> Letter m = new Letter ( Y5 - 1 ) ;  <CR> if ( R6 . compareTo ( m ) == 1 )  <CR> R6 . display ( E3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object F2 ) {  <CR> Letter K2 = ( Letter ) F2 ;  <CR> if ( this . x > K2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 