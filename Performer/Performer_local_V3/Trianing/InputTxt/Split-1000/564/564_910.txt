 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String x8 , String c , String H3 , String O8 , String q0 ) {  <CR> super ( x8 , c , H3 , O8 , q0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String N0 , String I6 , String E3 , String Y2 , String r ) {  <CR> super ( N0 , I6 , E3 , Y2 , r ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] v ) {  <CR> Evaluation A3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q4 = new Envelop ( "Taipei" , "Kaohsiung" , A3 ) ;  <CR> Q4 . display ( ) ;  <CR> }  <CR> public Envelop ( String a2 , String o1 , Evaluation a8 ) {  <CR> this . senderAddr = a2 ;  <CR> this . receiverAddr = o1 ;  <CR> this . letter = a8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String s8 , String f4 , String K3 , String f1 , String f7 ) {  <CR> this . title = s8 ;  <CR> this . receiver = f4 ;  <CR> this . content = K3 ;  <CR> this . sender = f1 ;  <CR> this . date = f7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int B3 ) {  <CR> this . x = B3 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int x6 ) {  <CR> list [ x6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object E0 ) {  <CR> Letter q = ( Letter ) E0 ;  <CR> if ( this . x > q . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] n9 ) {  <CR> int x6 ;  <CR> for ( x6 = list . length - 1 ; x6 >= 0 ; x6 -- ) {  <CR> int L9 = x6 ;  <CR> Letter y3 = new Letter ( x6 ) ;  <CR> Letter H9 = new Letter ( L9 - 1 ) ;  <CR> if ( y3 . compareTo ( H9 ) == 1 )  <CR> y3 . display ( x6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 