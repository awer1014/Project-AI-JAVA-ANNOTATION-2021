 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V6 , String G2 , String K6 , String I8 , String W4 ) {  <CR> super ( V6 , G2 , K6 , I8 , W4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String o0 , String A1 , String t7 , String v2 , String t1 ) {  <CR> super ( o0 , A1 , t7 , v2 , t1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] n1 ) {  <CR> Evaluation d5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I2 = new Envelop ( "Taipei" , "Kaohsiung" , d5 ) ;  <CR> I2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p4 , String i9 , Evaluation K3 ) {  <CR> this . senderAddr = p4 ;  <CR> this . receiverAddr = i9 ;  <CR> this . letter = K3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String j5 , String B5 , String f1 , String b3 , String y9 ) {  <CR> this . title = j5 ;  <CR> this . receiver = B5 ;  <CR> this . content = f1 ;  <CR> this . sender = b3 ;  <CR> this . date = y9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] n0 ) {  <CR> int e ;  <CR> for ( e = list . length - 1 ; e >= 0 ; e -- ) {  <CR> int D = e ;  <CR> Letter U = new Letter ( e ) ;  <CR> Letter P9 = new Letter ( D - 1 ) ;  <CR> if ( U . compareTo ( P9 ) == 1 )  <CR> U . display ( e ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object o7 ) {  <CR> Letter J6 = ( Letter ) o7 ;  <CR> if ( this . x > J6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int d8 ) {  <CR> this . x = d8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int e ) {  <CR> list [ e ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 