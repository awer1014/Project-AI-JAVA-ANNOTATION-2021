 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G4 , String l5 , String c4 , String F8 , String C5 ) {  <CR> super ( G4 , l5 , c4 , F8 , C5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z7 , String g2 , String y6 , String M3 , String D8 ) {  <CR> super ( z7 , g2 , y6 , M3 , D8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String O1 , String y5 , Evaluation B ) {  <CR> this . senderAddr = O1 ;  <CR> this . receiverAddr = y5 ;  <CR> this . letter = B ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] M2 ) {  <CR> Evaluation N2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o9 = new Envelop ( "Taipei" , "Kaohsiung" , N2 ) ;  <CR> o9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String C , String b9 , String o6 , String i3 , String s1 ) {  <CR> this . title = C ;  <CR> this . receiver = b9 ;  <CR> this . content = o6 ;  <CR> this . sender = i3 ;  <CR> this . date = s1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int Y4 ) {  <CR> this . x = Y4 ;  <CR> }  <CR> public void display ( int G5 ) {  <CR> list [ G5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L8 ) {  <CR> Letter B4 = ( Letter ) L8 ;  <CR> if ( this . x > B4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] W0 ) {  <CR> int G5 ;  <CR> for ( G5 = list . length - 1 ; G5 >= 0 ; G5 -- ) {  <CR> int A4 = G5 ;  <CR> Letter Y3 = new Letter ( G5 ) ;  <CR> Letter g1 = new Letter ( A4 - 1 ) ;  <CR> if ( Y3 . compareTo ( g1 ) == 1 )  <CR> Y3 . display ( G5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 