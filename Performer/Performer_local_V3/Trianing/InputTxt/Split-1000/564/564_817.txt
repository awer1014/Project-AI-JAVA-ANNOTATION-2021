 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x , String d3 , String S6 , String n6 , String E ) {  <CR> super ( x , d3 , S6 , n6 , E ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h9 , String x1 , String O0 , String V9 , String U2 ) {  <CR> super ( h9 , x1 , O0 , V9 , U2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String f9 , String t1 , Evaluation k7 ) {  <CR> this . senderAddr = f9 ;  <CR> this . receiverAddr = t1 ;  <CR> this . letter = k7 ;  <CR> }  <CR> public static void main ( String [ ] e0 ) {  <CR> Evaluation i = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O9 = new Envelop ( "Taipei" , "Kaohsiung" , i ) ;  <CR> O9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String R0 , String z1 , String V1 , String r1 , String c6 ) {  <CR> this . title = R0 ;  <CR> this . receiver = z1 ;  <CR> this . content = V1 ;  <CR> this . sender = r1 ;  <CR> this . date = c6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int T3 ) {  <CR> list [ T3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int c4 ) {  <CR> this . x = c4 ;  <CR> }  <CR> public static void main ( String [ ] S9 ) {  <CR> int T3 ;  <CR> for ( T3 = list . length - 1 ; T3 >= 0 ; T3 -- ) {  <CR> int b8 = T3 ;  <CR> Letter t = new Letter ( T3 ) ;  <CR> Letter O6 = new Letter ( b8 - 1 ) ;  <CR> if ( t . compareTo ( O6 ) == 1 )  <CR> t . display ( T3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object N8 ) {  <CR> Letter H4 = ( Letter ) N8 ;  <CR> if ( this . x > H4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 