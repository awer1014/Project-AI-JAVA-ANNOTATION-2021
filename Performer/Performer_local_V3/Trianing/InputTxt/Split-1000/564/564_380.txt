 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b1 , String N7 , String H0 , String x8 , String S9 ) {  <CR> super ( b1 , N7 , H0 , x8 , S9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String i4 , String m5 , String T2 , String X3 , String b5 ) {  <CR> super ( i4 , m5 , T2 , X3 , b5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] p ) {  <CR> Evaluation G4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e2 = new Envelop ( "Taipei" , "Kaohsiung" , G4 ) ;  <CR> e2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String o4 , String W7 , Evaluation n1 ) {  <CR> this . senderAddr = o4 ;  <CR> this . receiverAddr = W7 ;  <CR> this . letter = n1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String r4 , String S4 , String X2 , String u2 , String K0 ) {  <CR> this . title = r4 ;  <CR> this . receiver = S4 ;  <CR> this . content = X2 ;  <CR> this . sender = u2 ;  <CR> this . date = K0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int d1 ) {  <CR> this . x = d1 ;  <CR> }  <CR> public int compareTo ( Object D ) {  <CR> Letter F0 = ( Letter ) D ;  <CR> if ( this . x > F0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int t2 ) {  <CR> list [ t2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] b9 ) {  <CR> int t2 ;  <CR> for ( t2 = list . length - 1 ; t2 >= 0 ; t2 -- ) {  <CR> int C3 = t2 ;  <CR> Letter C5 = new Letter ( t2 ) ;  <CR> Letter m5 = new Letter ( C3 - 1 ) ;  <CR> if ( C5 . compareTo ( m5 ) == 1 )  <CR> C5 . display ( t2 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 