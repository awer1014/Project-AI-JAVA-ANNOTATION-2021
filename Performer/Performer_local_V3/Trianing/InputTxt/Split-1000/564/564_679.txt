 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a8 , String F7 , String g0 , String k0 , String z2 ) {  <CR> super ( a8 , F7 , g0 , k0 , z2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L2 , String S3 , String C9 , String V5 , String I4 ) {  <CR> super ( L2 , S3 , C9 , V5 , I4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] w8 ) {  <CR> Evaluation N8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m4 = new Envelop ( "Taipei" , "Kaohsiung" , N8 ) ;  <CR> m4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String c0 , String u2 , Evaluation E7 ) {  <CR> this . senderAddr = c0 ;  <CR> this . receiverAddr = u2 ;  <CR> this . letter = E7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String d9 , String G8 , String f3 , String R5 , String k3 ) {  <CR> this . title = d9 ;  <CR> this . receiver = G8 ;  <CR> this . content = f3 ;  <CR> this . sender = R5 ;  <CR> this . date = k3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] C5 ) {  <CR> int n5 ;  <CR> for ( n5 = list . length - 1 ; n5 >= 0 ; n5 -- ) {  <CR> int b6 = n5 ;  <CR> Letter y4 = new Letter ( n5 ) ;  <CR> Letter G = new Letter ( b6 - 1 ) ;  <CR> if ( y4 . compareTo ( G ) == 1 )  <CR> y4 . display ( n5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object R7 ) {  <CR> Letter x5 = ( Letter ) R7 ;  <CR> if ( this . x > x5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int n5 ) {  <CR> list [ n5 ] . Display ( ) ;  <CR> }  <CR> Letter ( int p8 ) {  <CR> this . x = p8 ;  <CR> }  <CR> }  <CR>  <EOC> 