 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F2 , String A1 , String B4 , String k2 , String k3 ) {  <CR> super ( F2 , A1 , B4 , k2 , k3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String n7 , String p8 , String o4 , String R2 , String i6 ) {  <CR> super ( n7 , p8 , o4 , R2 , i6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String q3 , String E0 , Evaluation v2 ) {  <CR> this . senderAddr = q3 ;  <CR> this . receiverAddr = E0 ;  <CR> this . letter = v2 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Q3 ) {  <CR> Evaluation U8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I3 = new Envelop ( "Taipei" , "Kaohsiung" , U8 ) ;  <CR> I3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String u5 , String Z2 , String K1 , String N7 , String c4 ) {  <CR> this . title = u5 ;  <CR> this . receiver = Z2 ;  <CR> this . content = K1 ;  <CR> this . sender = N7 ;  <CR> this . date = c4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] u4 ) {  <CR> int x8 ;  <CR> for ( x8 = list . length - 1 ; x8 >= 0 ; x8 -- ) {  <CR> int Y1 = x8 ;  <CR> Letter N0 = new Letter ( x8 ) ;  <CR> Letter m6 = new Letter ( Y1 - 1 ) ;  <CR> if ( N0 . compareTo ( m6 ) == 1 )  <CR> N0 . display ( x8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object x0 ) {  <CR> Letter A5 = ( Letter ) x0 ;  <CR> if ( this . x > A5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int l6 ) {  <CR> this . x = l6 ;  <CR> }  <CR> public void display ( int x8 ) {  <CR> list [ x8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 