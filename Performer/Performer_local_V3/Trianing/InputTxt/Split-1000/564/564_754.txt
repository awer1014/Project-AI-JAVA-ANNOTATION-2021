 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x2 , String p1 , String z3 , String W , String r9 ) {  <CR> super ( x2 , p1 , z3 , W , r9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K9 , String e2 , String k5 , String e0 , String M ) {  <CR> super ( K9 , e2 , k5 , e0 , M ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String V9 , String M6 , Evaluation f ) {  <CR> this . senderAddr = V9 ;  <CR> this . receiverAddr = M6 ;  <CR> this . letter = f ;  <CR> }  <CR> public static void main ( String [ ] O8 ) {  <CR> Evaluation v5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n1 = new Envelop ( "Taipei" , "Kaohsiung" , v5 ) ;  <CR> n1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String T3 , String q5 , String R6 , String p0 , String W0 ) {  <CR> this . title = T3 ;  <CR> this . receiver = q5 ;  <CR> this . content = R6 ;  <CR> this . sender = p0 ;  <CR> this . date = W0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] L0 ) {  <CR> int e7 ;  <CR> for ( e7 = list . length - 1 ; e7 >= 0 ; e7 -- ) {  <CR> int L2 = e7 ;  <CR> Letter H7 = new Letter ( e7 ) ;  <CR> Letter l = new Letter ( L2 - 1 ) ;  <CR> if ( H7 . compareTo ( l ) == 1 )  <CR> H7 . display ( e7 ) ;  <CR> }  <CR> }  <CR> Letter ( int n8 ) {  <CR> this . x = n8 ;  <CR> }  <CR> public int compareTo ( Object r6 ) {  <CR> Letter X7 = ( Letter ) r6 ;  <CR> if ( this . x > X7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int e7 ) {  <CR> list [ e7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 