 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H9 , String f2 , String P4 , String b7 , String c9 ) {  <CR> super ( H9 , f2 , P4 , b7 , c9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String b1 , String t1 , String g4 , String k1 , String j0 ) {  <CR> super ( b1 , t1 , g4 , k1 , j0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String c , String p7 , Evaluation a8 ) {  <CR> this . senderAddr = c ;  <CR> this . receiverAddr = p7 ;  <CR> this . letter = a8 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S5 ) {  <CR> Evaluation y0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A8 = new Envelop ( "Taipei" , "Kaohsiung" , y0 ) ;  <CR> A8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String s7 , String M5 , String r9 , String t6 , String T1 ) {  <CR> this . title = s7 ;  <CR> this . receiver = M5 ;  <CR> this . content = r9 ;  <CR> this . sender = t6 ;  <CR> this . date = T1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object c7 ) {  <CR> Letter J7 = ( Letter ) c7 ;  <CR> if ( this . x > J7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] L6 ) {  <CR> int L5 ;  <CR> for ( L5 = list . length - 1 ; L5 >= 0 ; L5 -- ) {  <CR> int t7 = L5 ;  <CR> Letter d5 = new Letter ( L5 ) ;  <CR> Letter W7 = new Letter ( t7 - 1 ) ;  <CR> if ( d5 . compareTo ( W7 ) == 1 )  <CR> d5 . display ( L5 ) ;  <CR> }  <CR> }  <CR> Letter ( int V ) {  <CR> this . x = V ;  <CR> }  <CR> public void display ( int L5 ) {  <CR> list [ L5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 