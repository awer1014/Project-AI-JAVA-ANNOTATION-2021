 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String h0 , String v3 , String z5 , String g1 , String f1 ) {  <CR> super ( h0 , v3 , z5 , g1 , f1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L3 , String z7 , String r , String F2 , String b3 ) {  <CR> super ( L3 , z7 , r , F2 , b3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] i7 ) {  <CR> Evaluation a0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y6 = new Envelop ( "Taipei" , "Kaohsiung" , a0 ) ;  <CR> Y6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String e0 , String A1 , Evaluation N9 ) {  <CR> this . senderAddr = e0 ;  <CR> this . receiverAddr = A1 ;  <CR> this . letter = N9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String y2 , String y6 , String Q4 , String G6 , String u7 ) {  <CR> this . title = y2 ;  <CR> this . receiver = y6 ;  <CR> this . content = Q4 ;  <CR> this . sender = G6 ;  <CR> this . date = u7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int o3 ) {  <CR> list [ o3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object q0 ) {  <CR> Letter n6 = ( Letter ) q0 ;  <CR> if ( this . x > n6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] d6 ) {  <CR> int o3 ;  <CR> for ( o3 = list . length - 1 ; o3 >= 0 ; o3 -- ) {  <CR> int C8 = o3 ;  <CR> Letter x8 = new Letter ( o3 ) ;  <CR> Letter G2 = new Letter ( C8 - 1 ) ;  <CR> if ( x8 . compareTo ( G2 ) == 1 )  <CR> x8 . display ( o3 ) ;  <CR> }  <CR> }  <CR> Letter ( int r2 ) {  <CR> this . x = r2 ;  <CR> }  <CR> }  <CR>  <EOC> 