 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c8 , String w1 , String y1 , String v8 , String G2 ) {  <CR> super ( c8 , w1 , y1 , v8 , G2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G0 , String v , String P5 , String Z9 , String I9 ) {  <CR> super ( G0 , v , P5 , Z9 , I9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Y3 ) {  <CR> Evaluation q2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K4 = new Envelop ( "Taipei" , "Kaohsiung" , q2 ) ;  <CR> K4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String c1 , String h3 , Evaluation n7 ) {  <CR> this . senderAddr = c1 ;  <CR> this . receiverAddr = h3 ;  <CR> this . letter = n7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String y2 , String e , String h , String g5 , String t2 ) {  <CR> this . title = y2 ;  <CR> this . receiver = e ;  <CR> this . content = h ;  <CR> this . sender = g5 ;  <CR> this . date = t2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int r9 ) {  <CR> list [ r9 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int V8 ) {  <CR> this . x = V8 ;  <CR> }  <CR> public static void main ( String [ ] D9 ) {  <CR> int r9 ;  <CR> for ( r9 = list . length - 1 ; r9 >= 0 ; r9 -- ) {  <CR> int e9 = r9 ;  <CR> Letter M2 = new Letter ( r9 ) ;  <CR> Letter J9 = new Letter ( e9 - 1 ) ;  <CR> if ( M2 . compareTo ( J9 ) == 1 )  <CR> M2 . display ( r9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object l9 ) {  <CR> Letter g = ( Letter ) l9 ;  <CR> if ( this . x > g . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 