 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R3 , String K6 , String S2 , String Z1 , String B6 ) {  <CR> super ( R3 , K6 , S2 , Z1 , B6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r3 , String Z4 , String J5 , String o4 , String X6 ) {  <CR> super ( r3 , Z4 , J5 , o4 , X6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String b7 , String p3 , Evaluation a2 ) {  <CR> this . senderAddr = b7 ;  <CR> this . receiverAddr = p3 ;  <CR> this . letter = a2 ;  <CR> }  <CR> public static void main ( String [ ] Z8 ) {  <CR> Evaluation U4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w3 = new Envelop ( "Taipei" , "Kaohsiung" , U4 ) ;  <CR> w3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String U3 , String a7 , String L8 , String N1 , String G8 ) {  <CR> this . title = U3 ;  <CR> this . receiver = a7 ;  <CR> this . content = L8 ;  <CR> this . sender = N1 ;  <CR> this . date = G8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int d4 ) {  <CR> list [ d4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] l6 ) {  <CR> int d4 ;  <CR> for ( d4 = list . length - 1 ; d4 >= 0 ; d4 -- ) {  <CR> int P6 = d4 ;  <CR> Letter S8 = new Letter ( d4 ) ;  <CR> Letter B1 = new Letter ( P6 - 1 ) ;  <CR> if ( S8 . compareTo ( B1 ) == 1 )  <CR> S8 . display ( d4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object t0 ) {  <CR> Letter A2 = ( Letter ) t0 ;  <CR> if ( this . x > A2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int H4 ) {  <CR> this . x = H4 ;  <CR> }  <CR> }  <CR>  <EOC> 