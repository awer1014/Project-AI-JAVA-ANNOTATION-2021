 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U8 , String P8 , String S5 , String B0 , String f5 ) {  <CR> super ( U8 , P8 , S5 , B0 , f5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W6 , String y6 , String G8 , String i7 , String w1 ) {  <CR> super ( W6 , y6 , G8 , i7 , w1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String S0 , String J0 , Evaluation Z5 ) {  <CR> this . senderAddr = S0 ;  <CR> this . receiverAddr = J0 ;  <CR> this . letter = Z5 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S4 ) {  <CR> Evaluation a0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S8 = new Envelop ( "Taipei" , "Kaohsiung" , a0 ) ;  <CR> S8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String h3 , String w4 , String q8 , String r3 , String N6 ) {  <CR> this . title = h3 ;  <CR> this . receiver = w4 ;  <CR> this . content = q8 ;  <CR> this . sender = r3 ;  <CR> this . date = N6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int a5 ) {  <CR> list [ a5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int u5 ) {  <CR> this . x = u5 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] v ) {  <CR> int a5 ;  <CR> for ( a5 = list . length - 1 ; a5 >= 0 ; a5 -- ) {  <CR> int D8 = a5 ;  <CR> Letter g1 = new Letter ( a5 ) ;  <CR> Letter N5 = new Letter ( D8 - 1 ) ;  <CR> if ( g1 . compareTo ( N5 ) == 1 )  <CR> g1 . display ( a5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object y0 ) {  <CR> Letter O8 = ( Letter ) y0 ;  <CR> if ( this . x > O8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 