 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String a1 , String L5 , String O1 , String W , String X1 ) {  <CR> super ( a1 , L5 , O1 , W , X1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String a2 , String e1 , String B8 , String T , String Y ) {  <CR> super ( a2 , e1 , B8 , T , Y ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String M9 , String p8 , Evaluation v1 ) {  <CR> this . senderAddr = M9 ;  <CR> this . receiverAddr = p8 ;  <CR> this . letter = v1 ;  <CR> }  <CR> public static void main ( String [ ] S7 ) {  <CR> Evaluation S0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t9 = new Envelop ( "Taipei" , "Kaohsiung" , S0 ) ;  <CR> t9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String g3 , String G9 , String W3 , String u7 , String f1 ) {  <CR> this . title = g3 ;  <CR> this . receiver = G9 ;  <CR> this . content = W3 ;  <CR> this . sender = u7 ;  <CR> this . date = f1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int C ) {  <CR> this . x = C ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int X6 ) {  <CR> list [ X6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object E2 ) {  <CR> Letter H7 = ( Letter ) E2 ;  <CR> if ( this . x > H7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] a0 ) {  <CR> int X6 ;  <CR> for ( X6 = list . length - 1 ; X6 >= 0 ; X6 -- ) {  <CR> int e3 = X6 ;  <CR> Letter l7 = new Letter ( X6 ) ;  <CR> Letter Z1 = new Letter ( e3 - 1 ) ;  <CR> if ( l7 . compareTo ( Z1 ) == 1 )  <CR> l7 . display ( X6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 