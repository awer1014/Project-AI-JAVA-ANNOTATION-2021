 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O , String v1 , String T , String B0 , String r2 ) {  <CR> super ( O , v1 , T , B0 , r2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F8 , String e1 , String F6 , String V4 , String q7 ) {  <CR> super ( F8 , e1 , F6 , V4 , q7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String R0 , String a2 , Evaluation u8 ) {  <CR> this . senderAddr = R0 ;  <CR> this . receiverAddr = a2 ;  <CR> this . letter = u8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] G1 ) {  <CR> Evaluation G0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S5 = new Envelop ( "Taipei" , "Kaohsiung" , G0 ) ;  <CR> S5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String E , String x5 , String T , String f6 , String J9 ) {  <CR> this . title = E ;  <CR> this . receiver = x5 ;  <CR> this . content = T ;  <CR> this . sender = f6 ;  <CR> this . date = J9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int f7 ) {  <CR> this . x = f7 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] O8 ) {  <CR> int A1 ;  <CR> for ( A1 = list . length - 1 ; A1 >= 0 ; A1 -- ) {  <CR> int P = A1 ;  <CR> Letter Y4 = new Letter ( A1 ) ;  <CR> Letter C = new Letter ( P - 1 ) ;  <CR> if ( Y4 . compareTo ( C ) == 1 )  <CR> Y4 . display ( A1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object t6 ) {  <CR> Letter a5 = ( Letter ) t6 ;  <CR> if ( this . x > a5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int A1 ) {  <CR> list [ A1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 