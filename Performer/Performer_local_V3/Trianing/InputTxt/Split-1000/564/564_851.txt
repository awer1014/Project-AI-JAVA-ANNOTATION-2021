 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String R , String L6 , String Z6 , String F5 , String U6 ) {  <CR> super ( R , L6 , Z6 , F5 , U6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String K2 , String x6 , String t9 , String V0 , String u9 ) {  <CR> super ( K2 , x6 , t9 , V0 , u9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] w7 ) {  <CR> Evaluation e7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j1 = new Envelop ( "Taipei" , "Kaohsiung" , e7 ) ;  <CR> j1 . display ( ) ;  <CR> }  <CR> public Envelop ( String I9 , String B , Evaluation J ) {  <CR> this . senderAddr = I9 ;  <CR> this . receiverAddr = B ;  <CR> this . letter = J ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String w1 , String i0 , String f6 , String s5 , String a8 ) {  <CR> this . title = w1 ;  <CR> this . receiver = i0 ;  <CR> this . content = f6 ;  <CR> this . sender = s5 ;  <CR> this . date = a8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int n3 ) {  <CR> list [ n3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int S6 ) {  <CR> this . x = S6 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] m ) {  <CR> int n3 ;  <CR> for ( n3 = list . length - 1 ; n3 >= 0 ; n3 -- ) {  <CR> int S4 = n3 ;  <CR> Letter K1 = new Letter ( n3 ) ;  <CR> Letter V7 = new Letter ( S4 - 1 ) ;  <CR> if ( K1 . compareTo ( V7 ) == 1 )  <CR> K1 . display ( n3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object t8 ) {  <CR> Letter e1 = ( Letter ) t8 ;  <CR> if ( this . x > e1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 