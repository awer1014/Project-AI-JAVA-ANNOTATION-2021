 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String c3 , String A , String j4 , String S7 , String s0 ) {  <CR> super ( c3 , A , j4 , S7 , s0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String A0 , String W6 , String F2 , String q2 , String B8 ) {  <CR> super ( A0 , W6 , F2 , q2 , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] M9 ) {  <CR> Evaluation h5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop C1 = new Envelop ( "Taipei" , "Kaohsiung" , h5 ) ;  <CR> C1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String u6 , String h0 , Evaluation P6 ) {  <CR> this . senderAddr = u6 ;  <CR> this . receiverAddr = h0 ;  <CR> this . letter = P6 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String p8 , String h3 , String y7 , String T , String V4 ) {  <CR> this . title = p8 ;  <CR> this . receiver = h3 ;  <CR> this . content = y7 ;  <CR> this . sender = T ;  <CR> this . date = V4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object l1 ) {  <CR> Letter t8 = ( Letter ) l1 ;  <CR> if ( this . x > t8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int P9 ) {  <CR> this . x = P9 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int N ) {  <CR> list [ N ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P3 ) {  <CR> int N ;  <CR> for ( N = list . length - 1 ; N >= 0 ; N -- ) {  <CR> int G5 = N ;  <CR> Letter J2 = new Letter ( N ) ;  <CR> Letter w5 = new Letter ( G5 - 1 ) ;  <CR> if ( J2 . compareTo ( w5 ) == 1 )  <CR> J2 . display ( N ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 