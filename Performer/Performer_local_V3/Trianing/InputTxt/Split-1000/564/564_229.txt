 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M4 , String m8 , String f3 , String e5 , String b2 ) {  <CR> super ( M4 , m8 , f3 , e5 , b2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X6 , String m3 , String g4 , String w1 , String D6 ) {  <CR> super ( X6 , m3 , g4 , w1 , D6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] E5 ) {  <CR> Evaluation g = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l6 = new Envelop ( "Taipei" , "Kaohsiung" , g ) ;  <CR> l6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String j2 , String a5 , Evaluation M1 ) {  <CR> this . senderAddr = j2 ;  <CR> this . receiverAddr = a5 ;  <CR> this . letter = M1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String W , String Z7 , String Q3 , String b7 , String A6 ) {  <CR> this . title = W ;  <CR> this . receiver = Z7 ;  <CR> this . content = Q3 ;  <CR> this . sender = b7 ;  <CR> this . date = A6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int B6 ) {  <CR> this . x = B6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object D ) {  <CR> Letter R = ( Letter ) D ;  <CR> if ( this . x > R . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] v7 ) {  <CR> int U2 ;  <CR> for ( U2 = list . length - 1 ; U2 >= 0 ; U2 -- ) {  <CR> int z6 = U2 ;  <CR> Letter M6 = new Letter ( U2 ) ;  <CR> Letter q0 = new Letter ( z6 - 1 ) ;  <CR> if ( M6 . compareTo ( q0 ) == 1 )  <CR> M6 . display ( U2 ) ;  <CR> }  <CR> }  <CR> public void display ( int U2 ) {  <CR> list [ U2 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 