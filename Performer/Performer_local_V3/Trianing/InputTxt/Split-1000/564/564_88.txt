 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T5 , String t4 , String B5 , String Q9 , String l9 ) {  <CR> super ( T5 , t4 , B5 , Q9 , l9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q5 , String o7 , String d3 , String f , String c5 ) {  <CR> super ( Q5 , o7 , d3 , f , c5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] D3 ) {  <CR> Evaluation A9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B1 = new Envelop ( "Taipei" , "Kaohsiung" , A9 ) ;  <CR> B1 . display ( ) ;  <CR> }  <CR> public Envelop ( String e5 , String f1 , Evaluation s2 ) {  <CR> this . senderAddr = e5 ;  <CR> this . receiverAddr = f1 ;  <CR> this . letter = s2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String V2 , String I1 , String k7 , String Y0 , String Z0 ) {  <CR> this . title = V2 ;  <CR> this . receiver = I1 ;  <CR> this . content = k7 ;  <CR> this . sender = Y0 ;  <CR> this . date = Z0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int N7 ) {  <CR> list [ N7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p0 ) {  <CR> int N7 ;  <CR> for ( N7 = list . length - 1 ; N7 >= 0 ; N7 -- ) {  <CR> int y4 = N7 ;  <CR> Letter g1 = new Letter ( N7 ) ;  <CR> Letter V9 = new Letter ( y4 - 1 ) ;  <CR> if ( g1 . compareTo ( V9 ) == 1 )  <CR> g1 . display ( N7 ) ;  <CR> }  <CR> }  <CR> Letter ( int K0 ) {  <CR> this . x = K0 ;  <CR> }  <CR> public int compareTo ( Object y2 ) {  <CR> Letter N3 = ( Letter ) y2 ;  <CR> if ( this . x > N3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 