 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String V6 , String Q7 , String H1 , String v2 , String b7 ) {  <CR> super ( V6 , Q7 , H1 , v2 , b7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String d2 , String Y6 , String p5 , String V1 , String I5 ) {  <CR> super ( d2 , Y6 , p5 , V1 , I5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] b3 ) {  <CR> Evaluation b = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K0 = new Envelop ( "Taipei" , "Kaohsiung" , b ) ;  <CR> K0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Q9 , String w7 , Evaluation w4 ) {  <CR> this . senderAddr = Q9 ;  <CR> this . receiverAddr = w7 ;  <CR> this . letter = w4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String P6 , String a2 , String f1 , String Z2 , String I7 ) {  <CR> this . title = P6 ;  <CR> this . receiver = a2 ;  <CR> this . content = f1 ;  <CR> this . sender = Z2 ;  <CR> this . date = I7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object u9 ) {  <CR> Letter U7 = ( Letter ) u9 ;  <CR> if ( this . x > U7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] M8 ) {  <CR> int Y3 ;  <CR> for ( Y3 = list . length - 1 ; Y3 >= 0 ; Y3 -- ) {  <CR> int K9 = Y3 ;  <CR> Letter W0 = new Letter ( Y3 ) ;  <CR> Letter g0 = new Letter ( K9 - 1 ) ;  <CR> if ( W0 . compareTo ( g0 ) == 1 )  <CR> W0 . display ( Y3 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int O2 ) {  <CR> this . x = O2 ;  <CR> }  <CR> public void display ( int Y3 ) {  <CR> list [ Y3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 