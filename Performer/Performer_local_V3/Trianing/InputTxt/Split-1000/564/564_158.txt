 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J8 , String Q , String p9 , String e6 , String g8 ) {  <CR> super ( J8 , Q , p9 , e6 , g8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y0 , String X , String z5 , String V , String i1 ) {  <CR> super ( Y0 , X , z5 , V , i1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String E9 , String Y5 , Evaluation m1 ) {  <CR> this . senderAddr = E9 ;  <CR> this . receiverAddr = Y5 ;  <CR> this . letter = m1 ;  <CR> }  <CR> public static void main ( String [ ] p2 ) {  <CR> Evaluation F5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a5 = new Envelop ( "Taipei" , "Kaohsiung" , F5 ) ;  <CR> a5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String w , String F2 , String r6 , String f , String d2 ) {  <CR> this . title = w ;  <CR> this . receiver = F2 ;  <CR> this . content = r6 ;  <CR> this . sender = f ;  <CR> this . date = d2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] g0 ) {  <CR> int R8 ;  <CR> for ( R8 = list . length - 1 ; R8 >= 0 ; R8 -- ) {  <CR> int L5 = R8 ;  <CR> Letter B3 = new Letter ( R8 ) ;  <CR> Letter H = new Letter ( L5 - 1 ) ;  <CR> if ( B3 . compareTo ( H ) == 1 )  <CR> B3 . display ( R8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object Q1 ) {  <CR> Letter S8 = ( Letter ) Q1 ;  <CR> if ( this . x > S8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int m4 ) {  <CR> this . x = m4 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int R8 ) {  <CR> list [ R8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 