 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p7 , String a7 , String V8 , String r9 , String L6 ) {  <CR> super ( p7 , a7 , V8 , r9 , L6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r , String d6 , String N0 , String L9 , String a2 ) {  <CR> super ( r , d6 , N0 , L9 , a2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] L0 ) {  <CR> Evaluation r5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w7 = new Envelop ( "Taipei" , "Kaohsiung" , r5 ) ;  <CR> w7 . display ( ) ;  <CR> }  <CR> public Envelop ( String e3 , String R8 , Evaluation p4 ) {  <CR> this . senderAddr = e3 ;  <CR> this . receiverAddr = R8 ;  <CR> this . letter = p4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String v2 , String t0 , String R3 , String W7 , String B1 ) {  <CR> this . title = v2 ;  <CR> this . receiver = t0 ;  <CR> this . content = R3 ;  <CR> this . sender = W7 ;  <CR> this . date = B1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object q7 ) {  <CR> Letter D2 = ( Letter ) q7 ;  <CR> if ( this . x > D2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int n7 ) {  <CR> list [ n7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Z5 ) {  <CR> int n7 ;  <CR> for ( n7 = list . length - 1 ; n7 >= 0 ; n7 -- ) {  <CR> int o2 = n7 ;  <CR> Letter F2 = new Letter ( n7 ) ;  <CR> Letter r6 = new Letter ( o2 - 1 ) ;  <CR> if ( F2 . compareTo ( r6 ) == 1 )  <CR> F2 . display ( n7 ) ;  <CR> }  <CR> }  <CR> Letter ( int W2 ) {  <CR> this . x = W2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 