 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String V6 , String P1 , String E5 , String x2 , String P ) {  <CR> super ( V6 , P1 , E5 , x2 , P ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String W5 , String V6 , String G8 , String J1 , String U9 ) {  <CR> super ( W5 , V6 , G8 , J1 , U9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] B7 ) {  <CR> Evaluation q5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x6 = new Envelop ( "Taipei" , "Kaohsiung" , q5 ) ;  <CR> x6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String r6 , String f7 , Evaluation v7 ) {  <CR> this . senderAddr = r6 ;  <CR> this . receiverAddr = f7 ;  <CR> this . letter = v7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String e7 , String v3 , String s8 , String W3 , String d0 ) {  <CR> this . title = e7 ;  <CR> this . receiver = v3 ;  <CR> this . content = s8 ;  <CR> this . sender = W3 ;  <CR> this . date = d0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] R8 ) {  <CR> int z3 ;  <CR> for ( z3 = list . length - 1 ; z3 >= 0 ; z3 -- ) {  <CR> int Q9 = z3 ;  <CR> Letter n7 = new Letter ( z3 ) ;  <CR> Letter z4 = new Letter ( Q9 - 1 ) ;  <CR> if ( n7 . compareTo ( z4 ) == 1 )  <CR> n7 . display ( z3 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int z3 ) {  <CR> list [ z3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object t ) {  <CR> Letter T = ( Letter ) t ;  <CR> if ( this . x > T . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int D3 ) {  <CR> this . x = D3 ;  <CR> }  <CR> }  <CR>  <EOC> 