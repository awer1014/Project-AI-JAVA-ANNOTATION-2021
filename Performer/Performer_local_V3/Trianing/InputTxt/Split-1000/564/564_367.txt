 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w4 , String A5 , String y8 , String t1 , String Y9 ) {  <CR> super ( w4 , A5 , y8 , t1 , Y9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String a , String n1 , String G1 , String v7 , String t5 ) {  <CR> super ( a , n1 , G1 , v7 , t5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String C8 , String V9 , Evaluation t8 ) {  <CR> this . senderAddr = C8 ;  <CR> this . receiverAddr = V9 ;  <CR> this . letter = t8 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] e2 ) {  <CR> Evaluation O1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d3 = new Envelop ( "Taipei" , "Kaohsiung" , O1 ) ;  <CR> d3 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String m0 , String Z9 , String i8 , String K , String A0 ) {  <CR> this . title = m0 ;  <CR> this . receiver = Z9 ;  <CR> this . content = i8 ;  <CR> this . sender = K ;  <CR> this . date = A0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] F1 ) {  <CR> int U8 ;  <CR> for ( U8 = list . length - 1 ; U8 >= 0 ; U8 -- ) {  <CR> int k9 = U8 ;  <CR> Letter d6 = new Letter ( U8 ) ;  <CR> Letter h5 = new Letter ( k9 - 1 ) ;  <CR> if ( d6 . compareTo ( h5 ) == 1 )  <CR> d6 . display ( U8 ) ;  <CR> }  <CR> }  <CR> public void display ( int U8 ) {  <CR> list [ U8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object Y2 ) {  <CR> Letter W = ( Letter ) Y2 ;  <CR> if ( this . x > W . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int L6 ) {  <CR> this . x = L6 ;  <CR> }  <CR> }  <CR>  <EOC> 