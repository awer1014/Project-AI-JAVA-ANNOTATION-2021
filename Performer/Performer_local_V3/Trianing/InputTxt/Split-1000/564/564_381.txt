 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U6 , String b7 , String A9 , String l7 , String d ) {  <CR> super ( U6 , b7 , A9 , l7 , d ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String r0 , String L1 , String l9 , String s4 , String I8 ) {  <CR> super ( r0 , L1 , l9 , s4 , I8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String R7 , String e2 , Evaluation u5 ) {  <CR> this . senderAddr = R7 ;  <CR> this . receiverAddr = e2 ;  <CR> this . letter = u5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] U0 ) {  <CR> Evaluation q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q7 = new Envelop ( "Taipei" , "Kaohsiung" , q6 ) ;  <CR> q7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String n9 , String p9 , String V8 , String W1 , String z6 ) {  <CR> this . title = n9 ;  <CR> this . receiver = p9 ;  <CR> this . content = V8 ;  <CR> this . sender = W1 ;  <CR> this . date = z6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int R4 ) {  <CR> this . x = R4 ;  <CR> }  <CR> public int compareTo ( Object L9 ) {  <CR> Letter e5 = ( Letter ) L9 ;  <CR> if ( this . x > e5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] m5 ) {  <CR> int g7 ;  <CR> for ( g7 = list . length - 1 ; g7 >= 0 ; g7 -- ) {  <CR> int t2 = g7 ;  <CR> Letter e1 = new Letter ( g7 ) ;  <CR> Letter y7 = new Letter ( t2 - 1 ) ;  <CR> if ( e1 . compareTo ( y7 ) == 1 )  <CR> e1 . display ( g7 ) ;  <CR> }  <CR> }  <CR> public void display ( int g7 ) {  <CR> list [ g7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 