 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x5 , String O0 , String R6 , String H5 , String R2 ) {  <CR> super ( x5 , O0 , R6 , H5 , R2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String c5 , String x7 , String M7 , String i6 , String R3 ) {  <CR> super ( c5 , x7 , M7 , i6 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] s0 ) {  <CR> Evaluation U5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o3 = new Envelop ( "Taipei" , "Kaohsiung" , U5 ) ;  <CR> o3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String a , String Q4 , Evaluation w5 ) {  <CR> this . senderAddr = a ;  <CR> this . receiverAddr = Q4 ;  <CR> this . letter = w5 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String h3 , String S4 , String q6 , String M1 , String l0 ) {  <CR> this . title = h3 ;  <CR> this . receiver = S4 ;  <CR> this . content = q6 ;  <CR> this . sender = M1 ;  <CR> this . date = l0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] s3 ) {  <CR> int q ;  <CR> for ( q = list . length - 1 ; q >= 0 ; q -- ) {  <CR> int x6 = q ;  <CR> Letter f4 = new Letter ( q ) ;  <CR> Letter K = new Letter ( x6 - 1 ) ;  <CR> if ( f4 . compareTo ( K ) == 1 )  <CR> f4 . display ( q ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int q ) {  <CR> list [ q ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object b4 ) {  <CR> Letter z2 = ( Letter ) b4 ;  <CR> if ( this . x > z2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int i3 ) {  <CR> this . x = i3 ;  <CR> }  <CR> }  <CR>  <EOC> 