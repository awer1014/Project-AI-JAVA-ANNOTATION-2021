 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String l3 , String z7 , String I2 , String n8 , String x6 ) {  <CR> super ( l3 , z7 , I2 , n8 , x6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V9 , String X3 , String D , String y8 , String K8 ) {  <CR> super ( V9 , X3 , D , y8 , K8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] w ) {  <CR> Evaluation X4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t9 = new Envelop ( "Taipei" , "Kaohsiung" , X4 ) ;  <CR> t9 . display ( ) ;  <CR> }  <CR> public Envelop ( String L7 , String a , Evaluation E3 ) {  <CR> this . senderAddr = L7 ;  <CR> this . receiverAddr = a ;  <CR> this . letter = E3 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String i9 , String A4 , String s2 , String t1 , String R6 ) {  <CR> this . title = i9 ;  <CR> this . receiver = A4 ;  <CR> this . content = s2 ;  <CR> this . sender = t1 ;  <CR> this . date = R6 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int r0 ) {  <CR> list [ r0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] M5 ) {  <CR> int r0 ;  <CR> for ( r0 = list . length - 1 ; r0 >= 0 ; r0 -- ) {  <CR> int B0 = r0 ;  <CR> Letter Q9 = new Letter ( r0 ) ;  <CR> Letter x9 = new Letter ( B0 - 1 ) ;  <CR> if ( Q9 . compareTo ( x9 ) == 1 )  <CR> Q9 . display ( r0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object m0 ) {  <CR> Letter z4 = ( Letter ) m0 ;  <CR> if ( this . x > z4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int j3 ) {  <CR> this . x = j3 ;  <CR> }  <CR> }  <CR>  <EOC> 