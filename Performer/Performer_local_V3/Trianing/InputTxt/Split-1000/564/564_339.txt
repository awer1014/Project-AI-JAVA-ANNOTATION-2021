 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String b , String f , String B4 , String i0 , String c4 ) {  <CR> super ( b , f , B4 , i0 , c4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R7 , String i5 , String j6 , String d , String E3 ) {  <CR> super ( R7 , i5 , j6 , d , E3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String x7 , String T7 , Evaluation U2 ) {  <CR> this . senderAddr = x7 ;  <CR> this . receiverAddr = T7 ;  <CR> this . letter = U2 ;  <CR> }  <CR> public static void main ( String [ ] z1 ) {  <CR> Evaluation c6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V7 = new Envelop ( "Taipei" , "Kaohsiung" , c6 ) ;  <CR> V7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String b9 , String I4 , String X6 , String N0 , String e5 ) {  <CR> this . title = b9 ;  <CR> this . receiver = I4 ;  <CR> this . content = X6 ;  <CR> this . sender = N0 ;  <CR> this . date = e5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object L4 ) {  <CR> Letter c9 = ( Letter ) L4 ;  <CR> if ( this . x > c9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int C5 ) {  <CR> this . x = C5 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] Z ) {  <CR> int K8 ;  <CR> for ( K8 = list . length - 1 ; K8 >= 0 ; K8 -- ) {  <CR> int Q = K8 ;  <CR> Letter H7 = new Letter ( K8 ) ;  <CR> Letter A = new Letter ( Q - 1 ) ;  <CR> if ( H7 . compareTo ( A ) == 1 )  <CR> H7 . display ( K8 ) ;  <CR> }  <CR> }  <CR> public void display ( int K8 ) {  <CR> list [ K8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 