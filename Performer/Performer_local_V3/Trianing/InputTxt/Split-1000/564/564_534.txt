 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A0 , String u4 , String r , String z4 , String a6 ) {  <CR> super ( A0 , u4 , r , z4 , a6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String r9 , String w , String u , String s3 , String Z8 ) {  <CR> super ( r9 , w , u , s3 , Z8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String d6 , String x1 , Evaluation R0 ) {  <CR> this . senderAddr = d6 ;  <CR> this . receiverAddr = x1 ;  <CR> this . letter = R0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] g2 ) {  <CR> Evaluation w4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e = new Envelop ( "Taipei" , "Kaohsiung" , w4 ) ;  <CR> e . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Q8 , String t2 , String R , String W2 , String B9 ) {  <CR> this . title = Q8 ;  <CR> this . receiver = t2 ;  <CR> this . content = R ;  <CR> this . sender = W2 ;  <CR> this . date = B9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int V6 ) {  <CR> list [ V6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object N5 ) {  <CR> Letter v6 = ( Letter ) N5 ;  <CR> if ( this . x > v6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] j0 ) {  <CR> int V6 ;  <CR> for ( V6 = list . length - 1 ; V6 >= 0 ; V6 -- ) {  <CR> int G1 = V6 ;  <CR> Letter S8 = new Letter ( V6 ) ;  <CR> Letter N8 = new Letter ( G1 - 1 ) ;  <CR> if ( S8 . compareTo ( N8 ) == 1 )  <CR> S8 . display ( V6 ) ;  <CR> }  <CR> }  <CR> Letter ( int n ) {  <CR> this . x = n ;  <CR> }  <CR> }  <CR>  <EOC> 