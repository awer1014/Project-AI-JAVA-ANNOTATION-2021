 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X3 , String f1 , String G6 , String E7 , String B2 ) {  <CR> super ( X3 , f1 , G6 , E7 , B2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String e1 , String Z2 , String W4 , String g7 , String h2 ) {  <CR> super ( e1 , Z2 , W4 , g7 , h2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String H0 , String m7 , Evaluation P6 ) {  <CR> this . senderAddr = H0 ;  <CR> this . receiverAddr = m7 ;  <CR> this . letter = P6 ;  <CR> }  <CR> public static void main ( String [ ] B0 ) {  <CR> Evaluation Q6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D2 = new Envelop ( "Taipei" , "Kaohsiung" , Q6 ) ;  <CR> D2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String v7 , String K , String G6 , String n9 , String D3 ) {  <CR> this . title = v7 ;  <CR> this . receiver = K ;  <CR> this . content = G6 ;  <CR> this . sender = n9 ;  <CR> this . date = D3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int V2 ) {  <CR> list [ V2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int m0 ) {  <CR> this . x = m0 ;  <CR> }  <CR> public static void main ( String [ ] a1 ) {  <CR> int V2 ;  <CR> for ( V2 = list . length - 1 ; V2 >= 0 ; V2 -- ) {  <CR> int F4 = V2 ;  <CR> Letter I6 = new Letter ( V2 ) ;  <CR> Letter X7 = new Letter ( F4 - 1 ) ;  <CR> if ( I6 . compareTo ( X7 ) == 1 )  <CR> I6 . display ( V2 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object H ) {  <CR> Letter l4 = ( Letter ) H ;  <CR> if ( this . x > l4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 