 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String S8 , String N9 , String C7 , String g5 , String w ) {  <CR> super ( S8 , N9 , C7 , g5 , w ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q5 , String m1 , String V , String L3 , String p ) {  <CR> super ( q5 , m1 , V , L3 , p ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String k0 , String k6 , Evaluation F7 ) {  <CR> this . senderAddr = k0 ;  <CR> this . receiverAddr = k6 ;  <CR> this . letter = F7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] R2 ) {  <CR> Evaluation E3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i8 = new Envelop ( "Taipei" , "Kaohsiung" , E3 ) ;  <CR> i8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String t , String q3 , String a0 , String Y1 , String E6 ) {  <CR> this . title = t ;  <CR> this . receiver = q3 ;  <CR> this . content = a0 ;  <CR> this . sender = Y1 ;  <CR> this . date = E6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int I3 ) {  <CR> list [ I3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] g ) {  <CR> int I3 ;  <CR> for ( I3 = list . length - 1 ; I3 >= 0 ; I3 -- ) {  <CR> int Z3 = I3 ;  <CR> Letter x6 = new Letter ( I3 ) ;  <CR> Letter e2 = new Letter ( Z3 - 1 ) ;  <CR> if ( x6 . compareTo ( e2 ) == 1 )  <CR> x6 . display ( I3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object x3 ) {  <CR> Letter B3 = ( Letter ) x3 ;  <CR> if ( this . x > B3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int H4 ) {  <CR> this . x = H4 ;  <CR> }  <CR> }  <CR>  <EOC> 