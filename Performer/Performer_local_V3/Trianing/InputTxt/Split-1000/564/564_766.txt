 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G , String K3 , String S2 , String r9 , String G1 ) {  <CR> super ( G , K3 , S2 , r9 , G1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String H7 , String O2 , String M5 , String n1 , String j0 ) {  <CR> super ( H7 , O2 , M5 , n1 , j0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String K8 , String Q , Evaluation h7 ) {  <CR> this . senderAddr = K8 ;  <CR> this . receiverAddr = Q ;  <CR> this . letter = h7 ;  <CR> }  <CR> public static void main ( String [ ] R0 ) {  <CR> Evaluation E7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g9 = new Envelop ( "Taipei" , "Kaohsiung" , E7 ) ;  <CR> g9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String y0 , String F6 , String c2 , String G9 , String y ) {  <CR> this . title = y0 ;  <CR> this . receiver = F6 ;  <CR> this . content = c2 ;  <CR> this . sender = G9 ;  <CR> this . date = y ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object u6 ) {  <CR> Letter U9 = ( Letter ) u6 ;  <CR> if ( this . x > U9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int I3 ) {  <CR> list [ I3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] f3 ) {  <CR> int I3 ;  <CR> for ( I3 = list . length - 1 ; I3 >= 0 ; I3 -- ) {  <CR> int A = I3 ;  <CR> Letter h5 = new Letter ( I3 ) ;  <CR> Letter p = new Letter ( A - 1 ) ;  <CR> if ( h5 . compareTo ( p ) == 1 )  <CR> h5 . display ( I3 ) ;  <CR> }  <CR> }  <CR> Letter ( int Q6 ) {  <CR> this . x = Q6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 