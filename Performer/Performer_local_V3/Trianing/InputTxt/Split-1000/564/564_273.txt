 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String w2 , String W8 , String E0 , String a0 , String S1 ) {  <CR> super ( w2 , W8 , E0 , a0 , S1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L0 , String q8 , String g5 , String z9 , String H1 ) {  <CR> super ( L0 , q8 , g5 , z9 , H1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String N5 , String v8 , Evaluation k8 ) {  <CR> this . senderAddr = N5 ;  <CR> this . receiverAddr = v8 ;  <CR> this . letter = k8 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] t4 ) {  <CR> Evaluation f4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J8 = new Envelop ( "Taipei" , "Kaohsiung" , f4 ) ;  <CR> J8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s2 , String Q2 , String X9 , String l3 , String G9 ) {  <CR> this . title = s2 ;  <CR> this . receiver = Q2 ;  <CR> this . content = X9 ;  <CR> this . sender = l3 ;  <CR> this . date = G9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] e0 ) {  <CR> int n4 ;  <CR> for ( n4 = list . length - 1 ; n4 >= 0 ; n4 -- ) {  <CR> int q2 = n4 ;  <CR> Letter Y3 = new Letter ( n4 ) ;  <CR> Letter P7 = new Letter ( q2 - 1 ) ;  <CR> if ( Y3 . compareTo ( P7 ) == 1 )  <CR> Y3 . display ( n4 ) ;  <CR> }  <CR> }  <CR> public void display ( int n4 ) {  <CR> list [ n4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int u3 ) {  <CR> this . x = u3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object a ) {  <CR> Letter s1 = ( Letter ) a ;  <CR> if ( this . x > s1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 