 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m7 , String A1 , String c7 , String S4 , String X1 ) {  <CR> super ( m7 , A1 , c7 , S4 , X1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v9 , String E6 , String s9 , String z4 , String u0 ) {  <CR> super ( v9 , E6 , s9 , z4 , u0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] x ) {  <CR> Evaluation u3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s7 = new Envelop ( "Taipei" , "Kaohsiung" , u3 ) ;  <CR> s7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String x7 , String b7 , Evaluation t7 ) {  <CR> this . senderAddr = x7 ;  <CR> this . receiverAddr = b7 ;  <CR> this . letter = t7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String V9 , String r , String Q0 , String S5 , String H4 ) {  <CR> this . title = V9 ;  <CR> this . receiver = r ;  <CR> this . content = Q0 ;  <CR> this . sender = S5 ;  <CR> this . date = H4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int k4 ) {  <CR> list [ k4 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] X ) {  <CR> int k4 ;  <CR> for ( k4 = list . length - 1 ; k4 >= 0 ; k4 -- ) {  <CR> int v0 = k4 ;  <CR> Letter c = new Letter ( k4 ) ;  <CR> Letter j8 = new Letter ( v0 - 1 ) ;  <CR> if ( c . compareTo ( j8 ) == 1 )  <CR> c . display ( k4 ) ;  <CR> }  <CR> }  <CR> Letter ( int k3 ) {  <CR> this . x = k3 ;  <CR> }  <CR> public int compareTo ( Object I ) {  <CR> Letter x8 = ( Letter ) I ;  <CR> if ( this . x > x8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 