 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H , String l , String U2 , String a3 , String h3 ) {  <CR> super ( H , l , U2 , a3 , h3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String P1 , String D7 , String O8 , String P , String C4 ) {  <CR> super ( P1 , D7 , O8 , P , C4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String c9 , String g7 , Evaluation C6 ) {  <CR> this . senderAddr = c9 ;  <CR> this . receiverAddr = g7 ;  <CR> this . letter = C6 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] X0 ) {  <CR> Evaluation Z4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P2 = new Envelop ( "Taipei" , "Kaohsiung" , Z4 ) ;  <CR> P2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String O5 , String i8 , String R2 , String G , String v4 ) {  <CR> this . title = O5 ;  <CR> this . receiver = i8 ;  <CR> this . content = R2 ;  <CR> this . sender = G ;  <CR> this . date = v4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int f5 ) {  <CR> list [ f5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object y6 ) {  <CR> Letter e0 = ( Letter ) y6 ;  <CR> if ( this . x > e0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] R9 ) {  <CR> int f5 ;  <CR> for ( f5 = list . length - 1 ; f5 >= 0 ; f5 -- ) {  <CR> int p9 = f5 ;  <CR> Letter d9 = new Letter ( f5 ) ;  <CR> Letter u6 = new Letter ( p9 - 1 ) ;  <CR> if ( d9 . compareTo ( u6 ) == 1 )  <CR> d9 . display ( f5 ) ;  <CR> }  <CR> }  <CR> Letter ( int z2 ) {  <CR> this . x = z2 ;  <CR> }  <CR> }  <CR>  <EOC> 