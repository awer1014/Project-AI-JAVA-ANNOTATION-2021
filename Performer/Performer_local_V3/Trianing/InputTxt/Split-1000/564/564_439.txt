 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K , String W , String z1 , String S5 , String D3 ) {  <CR> super ( K , W , z1 , S5 , D3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String v4 , String Z8 , String U6 , String W9 , String r9 ) {  <CR> super ( v4 , Z8 , U6 , W9 , r9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G1 ) {  <CR> Evaluation P = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d7 = new Envelop ( "Taipei" , "Kaohsiung" , P ) ;  <CR> d7 . display ( ) ;  <CR> }  <CR> public Envelop ( String Q9 , String J8 , Evaluation D7 ) {  <CR> this . senderAddr = Q9 ;  <CR> this . receiverAddr = J8 ;  <CR> this . letter = D7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String x8 , String b , String w7 , String I4 , String o1 ) {  <CR> this . title = x8 ;  <CR> this . receiver = b ;  <CR> this . content = w7 ;  <CR> this . sender = I4 ;  <CR> this . date = o1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H3 ) {  <CR> list [ H3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int t2 ) {  <CR> this . x = t2 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] J5 ) {  <CR> int H3 ;  <CR> for ( H3 = list . length - 1 ; H3 >= 0 ; H3 -- ) {  <CR> int u4 = H3 ;  <CR> Letter B1 = new Letter ( H3 ) ;  <CR> Letter l8 = new Letter ( u4 - 1 ) ;  <CR> if ( B1 . compareTo ( l8 ) == 1 )  <CR> B1 . display ( H3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object A1 ) {  <CR> Letter O3 = ( Letter ) A1 ;  <CR> if ( this . x > O3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 