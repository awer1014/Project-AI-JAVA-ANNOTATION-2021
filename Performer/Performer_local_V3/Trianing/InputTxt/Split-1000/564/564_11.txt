 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String g , String z0 , String N3 , String n0 , String G4 ) {  <CR> super ( g , z0 , N3 , n0 , G4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S4 , String y6 , String d4 , String f9 , String x9 ) {  <CR> super ( S4 , y6 , d4 , f9 , x9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String u9 , String x9 , Evaluation F8 ) {  <CR> this . senderAddr = u9 ;  <CR> this . receiverAddr = x9 ;  <CR> this . letter = F8 ;  <CR> }  <CR> public static void main ( String [ ] p7 ) {  <CR> Evaluation s4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B3 = new Envelop ( "Taipei" , "Kaohsiung" , s4 ) ;  <CR> B3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String v , String l6 , String g1 , String N6 , String g7 ) {  <CR> this . title = v ;  <CR> this . receiver = l6 ;  <CR> this . content = g1 ;  <CR> this . sender = N6 ;  <CR> this . date = g7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object z8 ) {  <CR> Letter Y1 = ( Letter ) z8 ;  <CR> if ( this . x > Y1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int v2 ) {  <CR> this . x = v2 ;  <CR> }  <CR> public static void main ( String [ ] s0 ) {  <CR> int h4 ;  <CR> for ( h4 = list . length - 1 ; h4 >= 0 ; h4 -- ) {  <CR> int j7 = h4 ;  <CR> Letter T3 = new Letter ( h4 ) ;  <CR> Letter C1 = new Letter ( j7 - 1 ) ;  <CR> if ( T3 . compareTo ( C1 ) == 1 )  <CR> T3 . display ( h4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int h4 ) {  <CR> list [ h4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 