 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X , String l2 , String q3 , String p7 , String x5 ) {  <CR> super ( X , l2 , q3 , p7 , x5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h2 , String p9 , String p7 , String E , String t5 ) {  <CR> super ( h2 , p9 , p7 , E , t5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String Q0 , String O7 , Evaluation h7 ) {  <CR> this . senderAddr = Q0 ;  <CR> this . receiverAddr = O7 ;  <CR> this . letter = h7 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] i3 ) {  <CR> Evaluation T2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q1 = new Envelop ( "Taipei" , "Kaohsiung" , T2 ) ;  <CR> q1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String N , String S6 , String I4 , String s5 , String b4 ) {  <CR> this . title = N ;  <CR> this . receiver = S6 ;  <CR> this . content = I4 ;  <CR> this . sender = s5 ;  <CR> this . date = b4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int Z7 ) {  <CR> list [ Z7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object r5 ) {  <CR> Letter X8 = ( Letter ) r5 ;  <CR> if ( this . x > X8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int t0 ) {  <CR> this . x = t0 ;  <CR> }  <CR> public static void main ( String [ ] w6 ) {  <CR> int Z7 ;  <CR> for ( Z7 = list . length - 1 ; Z7 >= 0 ; Z7 -- ) {  <CR> int O2 = Z7 ;  <CR> Letter f4 = new Letter ( Z7 ) ;  <CR> Letter d = new Letter ( O2 - 1 ) ;  <CR> if ( f4 . compareTo ( d ) == 1 )  <CR> f4 . display ( Z7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 