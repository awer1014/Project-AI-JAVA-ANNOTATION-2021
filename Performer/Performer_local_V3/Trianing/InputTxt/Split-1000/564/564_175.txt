 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N4 , String m1 , String y0 , String j2 , String S7 ) {  <CR> super ( N4 , m1 , y0 , j2 , S7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W2 , String t9 , String a8 , String k2 , String o4 ) {  <CR> super ( W2 , t9 , a8 , k2 , o4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String J8 , String g9 , Evaluation V9 ) {  <CR> this . senderAddr = J8 ;  <CR> this . receiverAddr = g9 ;  <CR> this . letter = V9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g3 ) {  <CR> Evaluation X5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v2 = new Envelop ( "Taipei" , "Kaohsiung" , X5 ) ;  <CR> v2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String P7 , String M , String J4 , String k4 , String a6 ) {  <CR> this . title = P7 ;  <CR> this . receiver = M ;  <CR> this . content = J4 ;  <CR> this . sender = k4 ;  <CR> this . date = a6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int M2 ) {  <CR> this . x = M2 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int r ) {  <CR> list [ r ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object W6 ) {  <CR> Letter H1 = ( Letter ) W6 ;  <CR> if ( this . x > H1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] g2 ) {  <CR> int r ;  <CR> for ( r = list . length - 1 ; r >= 0 ; r -- ) {  <CR> int e9 = r ;  <CR> Letter S8 = new Letter ( r ) ;  <CR> Letter D2 = new Letter ( e9 - 1 ) ;  <CR> if ( S8 . compareTo ( D2 ) == 1 )  <CR> S8 . display ( r ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 