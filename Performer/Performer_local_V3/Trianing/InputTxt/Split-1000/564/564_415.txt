 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x5 , String P1 , String O3 , String Y5 , String G4 ) {  <CR> super ( x5 , P1 , O3 , Y5 , G4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String i3 , String W2 , String S2 , String p0 , String O0 ) {  <CR> super ( i3 , W2 , S2 , p0 , O0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String K4 , String F6 , Evaluation F8 ) {  <CR> this . senderAddr = K4 ;  <CR> this . receiverAddr = F6 ;  <CR> this . letter = F8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U8 ) {  <CR> Evaluation X5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R0 = new Envelop ( "Taipei" , "Kaohsiung" , X5 ) ;  <CR> R0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String V2 , String L5 , String m7 , String w6 , String H1 ) {  <CR> this . title = V2 ;  <CR> this . receiver = L5 ;  <CR> this . content = m7 ;  <CR> this . sender = w6 ;  <CR> this . date = H1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int y0 ) {  <CR> this . x = y0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int y4 ) {  <CR> list [ y4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object W1 ) {  <CR> Letter U2 = ( Letter ) W1 ;  <CR> if ( this . x > U2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] Z ) {  <CR> int y4 ;  <CR> for ( y4 = list . length - 1 ; y4 >= 0 ; y4 -- ) {  <CR> int G0 = y4 ;  <CR> Letter H2 = new Letter ( y4 ) ;  <CR> Letter O1 = new Letter ( G0 - 1 ) ;  <CR> if ( H2 . compareTo ( O1 ) == 1 )  <CR> H2 . display ( y4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 