 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a3 , String Z3 , String A6 , String j8 , String T6 ) {  <CR> super ( a3 , Z3 , A6 , j8 , T6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q8 , String N8 , String i7 , String a2 , String t8 ) {  <CR> super ( Q8 , N8 , i7 , a2 , t8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String L7 , String e8 , Evaluation t2 ) {  <CR> this . senderAddr = L7 ;  <CR> this . receiverAddr = e8 ;  <CR> this . letter = t2 ;  <CR> }  <CR> public static void main ( String [ ] r1 ) {  <CR> Evaluation H1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j4 = new Envelop ( "Taipei" , "Kaohsiung" , H1 ) ;  <CR> j4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Y6 , String Q8 , String i2 , String K4 , String p ) {  <CR> this . title = Y6 ;  <CR> this . receiver = Q8 ;  <CR> this . content = i2 ;  <CR> this . sender = K4 ;  <CR> this . date = p ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int A0 ) {  <CR> this . x = A0 ;  <CR> }  <CR> public void display ( int p8 ) {  <CR> list [ p8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object x5 ) {  <CR> Letter K8 = ( Letter ) x5 ;  <CR> if ( this . x > K8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] d ) {  <CR> int p8 ;  <CR> for ( p8 = list . length - 1 ; p8 >= 0 ; p8 -- ) {  <CR> int j3 = p8 ;  <CR> Letter Z7 = new Letter ( p8 ) ;  <CR> Letter V6 = new Letter ( j3 - 1 ) ;  <CR> if ( Z7 . compareTo ( V6 ) == 1 )  <CR> Z7 . display ( p8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 