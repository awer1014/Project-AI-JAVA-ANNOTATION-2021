 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N7 , String R8 , String P4 , String K2 , String F7 ) {  <CR> super ( N7 , R8 , P4 , K2 , F7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String A4 , String I7 , String H3 , String u2 , String N7 ) {  <CR> super ( A4 , I7 , H3 , u2 , N7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String n9 , String d9 , Evaluation D9 ) {  <CR> this . senderAddr = n9 ;  <CR> this . receiverAddr = d9 ;  <CR> this . letter = D9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] f1 ) {  <CR> Evaluation F6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M0 = new Envelop ( "Taipei" , "Kaohsiung" , F6 ) ;  <CR> M0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String w2 , String V3 , String X3 , String s1 , String o0 ) {  <CR> this . title = w2 ;  <CR> this . receiver = V3 ;  <CR> this . content = X3 ;  <CR> this . sender = s1 ;  <CR> this . date = o0 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] A ) {  <CR> int u8 ;  <CR> for ( u8 = list . length - 1 ; u8 >= 0 ; u8 -- ) {  <CR> int v6 = u8 ;  <CR> Letter s7 = new Letter ( u8 ) ;  <CR> Letter T6 = new Letter ( v6 - 1 ) ;  <CR> if ( s7 . compareTo ( T6 ) == 1 )  <CR> s7 . display ( u8 ) ;  <CR> }  <CR> }  <CR> public void display ( int u8 ) {  <CR> list [ u8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object R5 ) {  <CR> Letter X9 = ( Letter ) R5 ;  <CR> if ( this . x > X9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int W3 ) {  <CR> this . x = W3 ;  <CR> }  <CR> }  <CR>  <EOC> 