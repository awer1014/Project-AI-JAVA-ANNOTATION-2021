 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z2 , String C7 , String q6 , String m2 , String A3 ) {  <CR> super ( Z2 , C7 , q6 , m2 , A3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f3 , String g8 , String O9 , String y5 , String I2 ) {  <CR> super ( f3 , g8 , O9 , y5 , I2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O3 ) {  <CR> Evaluation l9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N5 = new Envelop ( "Taipei" , "Kaohsiung" , l9 ) ;  <CR> N5 . display ( ) ;  <CR> }  <CR> public Envelop ( String J3 , String R9 , Evaluation c2 ) {  <CR> this . senderAddr = J3 ;  <CR> this . receiverAddr = R9 ;  <CR> this . letter = c2 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String A7 , String L2 , String H5 , String w1 , String N0 ) {  <CR> this . title = A7 ;  <CR> this . receiver = L2 ;  <CR> this . content = H5 ;  <CR> this . sender = w1 ;  <CR> this . date = N0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] A7 ) {  <CR> int r6 ;  <CR> for ( r6 = list . length - 1 ; r6 >= 0 ; r6 -- ) {  <CR> int v3 = r6 ;  <CR> Letter i7 = new Letter ( r6 ) ;  <CR> Letter A8 = new Letter ( v3 - 1 ) ;  <CR> if ( i7 . compareTo ( A8 ) == 1 )  <CR> i7 . display ( r6 ) ;  <CR> }  <CR> }  <CR> public void display ( int r6 ) {  <CR> list [ r6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int M3 ) {  <CR> this . x = M3 ;  <CR> }  <CR> public int compareTo ( Object f5 ) {  <CR> Letter Y8 = ( Letter ) f5 ;  <CR> if ( this . x > Y8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 