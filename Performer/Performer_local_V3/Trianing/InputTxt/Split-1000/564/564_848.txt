 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o8 , String r7 , String V7 , String G2 , String E2 ) {  <CR> super ( o8 , r7 , V7 , G2 , E2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F3 , String n2 , String u0 , String e8 , String C7 ) {  <CR> super ( F3 , n2 , u0 , e8 , C7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String q3 , String A9 , Evaluation B1 ) {  <CR> this . senderAddr = q3 ;  <CR> this . receiverAddr = A9 ;  <CR> this . letter = B1 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] d9 ) {  <CR> Evaluation P6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o9 = new Envelop ( "Taipei" , "Kaohsiung" , P6 ) ;  <CR> o9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Z0 , String k9 , String q3 , String T2 , String G0 ) {  <CR> this . title = Z0 ;  <CR> this . receiver = k9 ;  <CR> this . content = q3 ;  <CR> this . sender = T2 ;  <CR> this . date = G0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] a2 ) {  <CR> int Z0 ;  <CR> for ( Z0 = list . length - 1 ; Z0 >= 0 ; Z0 -- ) {  <CR> int n2 = Z0 ;  <CR> Letter x5 = new Letter ( Z0 ) ;  <CR> Letter C2 = new Letter ( n2 - 1 ) ;  <CR> if ( x5 . compareTo ( C2 ) == 1 )  <CR> x5 . display ( Z0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int w1 ) {  <CR> this . x = w1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object k7 ) {  <CR> Letter g9 = ( Letter ) k7 ;  <CR> if ( this . x > g9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int Z0 ) {  <CR> list [ Z0 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 