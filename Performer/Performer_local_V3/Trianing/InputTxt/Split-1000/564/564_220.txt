 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String e1 , String f7 , String Z5 , String X1 , String J7 ) {  <CR> super ( e1 , f7 , Z5 , X1 , J7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v5 , String l6 , String F2 , String s3 , String q ) {  <CR> super ( v5 , l6 , F2 , s3 , q ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String N8 , String o1 , Evaluation F8 ) {  <CR> this . senderAddr = N8 ;  <CR> this . receiverAddr = o1 ;  <CR> this . letter = F8 ;  <CR> }  <CR> public static void main ( String [ ] z9 ) {  <CR> Evaluation W8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y2 = new Envelop ( "Taipei" , "Kaohsiung" , W8 ) ;  <CR> y2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String w2 , String Y7 , String X8 , String J4 , String n6 ) {  <CR> this . title = w2 ;  <CR> this . receiver = Y7 ;  <CR> this . content = X8 ;  <CR> this . sender = J4 ;  <CR> this . date = n6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] q0 ) {  <CR> int u1 ;  <CR> for ( u1 = list . length - 1 ; u1 >= 0 ; u1 -- ) {  <CR> int r0 = u1 ;  <CR> Letter P4 = new Letter ( u1 ) ;  <CR> Letter h6 = new Letter ( r0 - 1 ) ;  <CR> if ( P4 . compareTo ( h6 ) == 1 )  <CR> P4 . display ( u1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object K ) {  <CR> Letter j3 = ( Letter ) K ;  <CR> if ( this . x > j3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int q8 ) {  <CR> this . x = q8 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int u1 ) {  <CR> list [ u1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 