 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String x6 , String p1 , String X2 , String z7 , String F4 ) {  <CR> super ( x6 , p1 , X2 , z7 , F4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D7 , String b9 , String P1 , String j , String g2 ) {  <CR> super ( D7 , b9 , P1 , j , g2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String X3 , String e5 , Evaluation y2 ) {  <CR> this . senderAddr = X3 ;  <CR> this . receiverAddr = e5 ;  <CR> this . letter = y2 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Z6 ) {  <CR> Evaluation H4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m0 = new Envelop ( "Taipei" , "Kaohsiung" , H4 ) ;  <CR> m0 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String V0 , String g7 , String C5 , String l9 , String R7 ) {  <CR> this . title = V0 ;  <CR> this . receiver = g7 ;  <CR> this . content = C5 ;  <CR> this . sender = l9 ;  <CR> this . date = R7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int i3 ) {  <CR> this . x = i3 ;  <CR> }  <CR> public void display ( int A7 ) {  <CR> list [ A7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] T5 ) {  <CR> int A7 ;  <CR> for ( A7 = list . length - 1 ; A7 >= 0 ; A7 -- ) {  <CR> int d5 = A7 ;  <CR> Letter h = new Letter ( A7 ) ;  <CR> Letter d3 = new Letter ( d5 - 1 ) ;  <CR> if ( h . compareTo ( d3 ) == 1 )  <CR> h . display ( A7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object d4 ) {  <CR> Letter E6 = ( Letter ) d4 ;  <CR> if ( this . x > E6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 