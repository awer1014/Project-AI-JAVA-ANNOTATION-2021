 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B4 , String p3 , String O8 , String X9 , String L0 ) {  <CR> super ( B4 , p3 , O8 , X9 , L0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String O3 , String d5 , String P3 , String r4 , String q1 ) {  <CR> super ( O3 , d5 , P3 , r4 , q1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] l8 ) {  <CR> Evaluation k1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W6 = new Envelop ( "Taipei" , "Kaohsiung" , k1 ) ;  <CR> W6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String k4 , String j , Evaluation y ) {  <CR> this . senderAddr = k4 ;  <CR> this . receiverAddr = j ;  <CR> this . letter = y ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String I7 , String H7 , String Z3 , String g0 , String V3 ) {  <CR> this . title = I7 ;  <CR> this . receiver = H7 ;  <CR> this . content = Z3 ;  <CR> this . sender = g0 ;  <CR> this . date = V3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object x7 ) {  <CR> Letter o9 = ( Letter ) x7 ;  <CR> if ( this . x > o9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int J6 ) {  <CR> list [ J6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] O ) {  <CR> int J6 ;  <CR> for ( J6 = list . length - 1 ; J6 >= 0 ; J6 -- ) {  <CR> int m5 = J6 ;  <CR> Letter V4 = new Letter ( J6 ) ;  <CR> Letter H5 = new Letter ( m5 - 1 ) ;  <CR> if ( V4 . compareTo ( H5 ) == 1 )  <CR> V4 . display ( J6 ) ;  <CR> }  <CR> }  <CR> Letter ( int m2 ) {  <CR> this . x = m2 ;  <CR> }  <CR> }  <CR>  <EOC> 