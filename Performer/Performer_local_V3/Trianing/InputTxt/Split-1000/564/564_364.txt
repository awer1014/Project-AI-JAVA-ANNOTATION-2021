 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t7 , String M3 , String p0 , String l8 , String R2 ) {  <CR> super ( t7 , M3 , p0 , l8 , R2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b2 , String m2 , String t0 , String N0 , String h6 ) {  <CR> super ( b2 , m2 , t0 , N0 , h6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] A7 ) {  <CR> Evaluation u1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o = new Envelop ( "Taipei" , "Kaohsiung" , u1 ) ;  <CR> o . display ( ) ;  <CR> }  <CR> public Envelop ( String q1 , String P4 , Evaluation N5 ) {  <CR> this . senderAddr = q1 ;  <CR> this . receiverAddr = P4 ;  <CR> this . letter = N5 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String j6 , String r7 , String V0 , String g9 , String D9 ) {  <CR> this . title = j6 ;  <CR> this . receiver = r7 ;  <CR> this . content = V0 ;  <CR> this . sender = g9 ;  <CR> this . date = D9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int X ) {  <CR> this . x = X ;  <CR> }  <CR> public int compareTo ( Object D ) {  <CR> Letter c4 = ( Letter ) D ;  <CR> if ( this . x > c4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] f ) {  <CR> int f9 ;  <CR> for ( f9 = list . length - 1 ; f9 >= 0 ; f9 -- ) {  <CR> int p2 = f9 ;  <CR> Letter J0 = new Letter ( f9 ) ;  <CR> Letter K1 = new Letter ( p2 - 1 ) ;  <CR> if ( J0 . compareTo ( K1 ) == 1 )  <CR> J0 . display ( f9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public void display ( int f9 ) {  <CR> list [ f9 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 