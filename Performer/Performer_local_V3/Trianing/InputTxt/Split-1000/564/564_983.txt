 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v0 , String I9 , String S4 , String D1 , String F6 ) {  <CR> super ( v0 , I9 , S4 , D1 , F6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H8 , String Q1 , String l , String J7 , String C8 ) {  <CR> super ( H8 , Q1 , l , J7 , C8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] R0 ) {  <CR> Evaluation s8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N5 = new Envelop ( "Taipei" , "Kaohsiung" , s8 ) ;  <CR> N5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String H5 , String n , Evaluation M7 ) {  <CR> this . senderAddr = H5 ;  <CR> this . receiverAddr = n ;  <CR> this . letter = M7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String g8 , String l2 , String d , String C0 , String e1 ) {  <CR> this . title = g8 ;  <CR> this . receiver = l2 ;  <CR> this . content = d ;  <CR> this . sender = C0 ;  <CR> this . date = e1 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object v ) {  <CR> Letter G3 = ( Letter ) v ;  <CR> if ( this . x > G3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int H3 ) {  <CR> list [ H3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C3 ) {  <CR> int H3 ;  <CR> for ( H3 = list . length - 1 ; H3 >= 0 ; H3 -- ) {  <CR> int O7 = H3 ;  <CR> Letter z9 = new Letter ( H3 ) ;  <CR> Letter S5 = new Letter ( O7 - 1 ) ;  <CR> if ( z9 . compareTo ( S5 ) == 1 )  <CR> z9 . display ( H3 ) ;  <CR> }  <CR> }  <CR> Letter ( int m6 ) {  <CR> this . x = m6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 