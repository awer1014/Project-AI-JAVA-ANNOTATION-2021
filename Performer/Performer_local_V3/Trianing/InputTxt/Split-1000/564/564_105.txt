 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String i3 , String j8 , String t4 , String C8 , String A4 ) {  <CR> super ( i3 , j8 , t4 , C8 , A4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String x0 , String H7 , String r8 , String A6 , String X8 ) {  <CR> super ( x0 , H7 , r8 , A6 , X8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String i2 , String q5 , Evaluation J5 ) {  <CR> this . senderAddr = i2 ;  <CR> this . receiverAddr = q5 ;  <CR> this . letter = J5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] z2 ) {  <CR> Evaluation w8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T2 = new Envelop ( "Taipei" , "Kaohsiung" , w8 ) ;  <CR> T2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String K9 , String c1 , String e1 , String O9 , String D0 ) {  <CR> this . title = K9 ;  <CR> this . receiver = c1 ;  <CR> this . content = e1 ;  <CR> this . sender = O9 ;  <CR> this . date = D0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] c9 ) {  <CR> int n4 ;  <CR> for ( n4 = list . length - 1 ; n4 >= 0 ; n4 -- ) {  <CR> int L5 = n4 ;  <CR> Letter c3 = new Letter ( n4 ) ;  <CR> Letter W3 = new Letter ( L5 - 1 ) ;  <CR> if ( c3 . compareTo ( W3 ) == 1 )  <CR> c3 . display ( n4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object Q6 ) {  <CR> Letter d4 = ( Letter ) Q6 ;  <CR> if ( this . x > d4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int n4 ) {  <CR> list [ n4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int f7 ) {  <CR> this . x = f7 ;  <CR> }  <CR> }  <CR>  <EOC> 