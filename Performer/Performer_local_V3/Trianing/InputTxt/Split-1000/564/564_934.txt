 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String O , String O5 , String O4 , String k4 , String z5 ) {  <CR> super ( O , O5 , O4 , k4 , z5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String h9 , String S4 , String g , String H4 , String a ) {  <CR> super ( h9 , S4 , g , H4 , a ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String G9 , String F7 , Evaluation d ) {  <CR> this . senderAddr = G9 ;  <CR> this . receiverAddr = F7 ;  <CR> this . letter = d ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] j9 ) {  <CR> Evaluation O = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G5 = new Envelop ( "Taipei" , "Kaohsiung" , O ) ;  <CR> G5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String o9 , String S3 , String L1 , String B4 , String H2 ) {  <CR> this . title = o9 ;  <CR> this . receiver = S3 ;  <CR> this . content = L1 ;  <CR> this . sender = B4 ;  <CR> this . date = H2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object r9 ) {  <CR> Letter u8 = ( Letter ) r9 ;  <CR> if ( this . x > u8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int p4 ) {  <CR> list [ p4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o5 ) {  <CR> int p4 ;  <CR> for ( p4 = list . length - 1 ; p4 >= 0 ; p4 -- ) {  <CR> int C4 = p4 ;  <CR> Letter S9 = new Letter ( p4 ) ;  <CR> Letter W4 = new Letter ( C4 - 1 ) ;  <CR> if ( S9 . compareTo ( W4 ) == 1 )  <CR> S9 . display ( p4 ) ;  <CR> }  <CR> }  <CR> Letter ( int q0 ) {  <CR> this . x = q0 ;  <CR> }  <CR> }  <CR>  <EOC> 