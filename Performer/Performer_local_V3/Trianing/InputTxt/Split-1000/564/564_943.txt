 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O8 , String c4 , String o8 , String S8 , String w4 ) {  <CR> super ( O8 , c4 , o8 , S8 , w4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s9 , String W7 , String Q4 , String j6 , String P ) {  <CR> super ( s9 , W7 , Q4 , j6 , P ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] S4 ) {  <CR> Evaluation O0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop J8 = new Envelop ( "Taipei" , "Kaohsiung" , O0 ) ;  <CR> J8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String G7 , String e1 , Evaluation v7 ) {  <CR> this . senderAddr = G7 ;  <CR> this . receiverAddr = e1 ;  <CR> this . letter = v7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Z3 , String a1 , String O1 , String D7 , String X ) {  <CR> this . title = Z3 ;  <CR> this . receiver = a1 ;  <CR> this . content = O1 ;  <CR> this . sender = D7 ;  <CR> this . date = X ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object q3 ) {  <CR> Letter r7 = ( Letter ) q3 ;  <CR> if ( this . x > r7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int E5 ) {  <CR> list [ E5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O8 ) {  <CR> int E5 ;  <CR> for ( E5 = list . length - 1 ; E5 >= 0 ; E5 -- ) {  <CR> int L1 = E5 ;  <CR> Letter w5 = new Letter ( E5 ) ;  <CR> Letter u0 = new Letter ( L1 - 1 ) ;  <CR> if ( w5 . compareTo ( u0 ) == 1 )  <CR> w5 . display ( E5 ) ;  <CR> }  <CR> }  <CR> Letter ( int B6 ) {  <CR> this . x = B6 ;  <CR> }  <CR> }  <CR>  <EOC> 