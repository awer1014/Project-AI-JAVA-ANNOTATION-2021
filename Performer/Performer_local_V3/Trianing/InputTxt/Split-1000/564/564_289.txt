 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String K4 , String d0 , String J9 , String r6 , String i4 ) {  <CR> super ( K4 , d0 , J9 , r6 , i4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s5 , String m6 , String w1 , String a8 , String L1 ) {  <CR> super ( s5 , m6 , w1 , a8 , L1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] j4 ) {  <CR> Evaluation H5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h5 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> h5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String x , String M3 , Evaluation C8 ) {  <CR> this . senderAddr = x ;  <CR> this . receiverAddr = M3 ;  <CR> this . letter = C8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String P5 , String F2 , String Y0 , String j4 , String t7 ) {  <CR> this . title = P5 ;  <CR> this . receiver = F2 ;  <CR> this . content = Y0 ;  <CR> this . sender = j4 ;  <CR> this . date = t7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] q2 ) {  <CR> int p0 ;  <CR> for ( p0 = list . length - 1 ; p0 >= 0 ; p0 -- ) {  <CR> int n6 = p0 ;  <CR> Letter n4 = new Letter ( p0 ) ;  <CR> Letter r9 = new Letter ( n6 - 1 ) ;  <CR> if ( n4 . compareTo ( r9 ) == 1 )  <CR> n4 . display ( p0 ) ;  <CR> }  <CR> }  <CR> public void display ( int p0 ) {  <CR> list [ p0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object r4 ) {  <CR> Letter d5 = ( Letter ) r4 ;  <CR> if ( this . x > d5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int X2 ) {  <CR> this . x = X2 ;  <CR> }  <CR> }  <CR>  <EOC> 