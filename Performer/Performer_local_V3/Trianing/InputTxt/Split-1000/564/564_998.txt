 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U , String W1 , String v1 , String o2 , String Y7 ) {  <CR> super ( U , W1 , v1 , o2 , Y7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String H1 , String D5 , String p0 , String X5 , String L9 ) {  <CR> super ( H1 , D5 , p0 , X5 , L9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P5 ) {  <CR> Evaluation a3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y6 = new Envelop ( "Taipei" , "Kaohsiung" , a3 ) ;  <CR> y6 . display ( ) ;  <CR> }  <CR> public Envelop ( String k4 , String s3 , Evaluation m3 ) {  <CR> this . senderAddr = k4 ;  <CR> this . receiverAddr = s3 ;  <CR> this . letter = m3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String z7 , String s5 , String t4 , String p , String d8 ) {  <CR> this . title = z7 ;  <CR> this . receiver = s5 ;  <CR> this . content = t4 ;  <CR> this . sender = p ;  <CR> this . date = d8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] o5 ) {  <CR> int f7 ;  <CR> for ( f7 = list . length - 1 ; f7 >= 0 ; f7 -- ) {  <CR> int i2 = f7 ;  <CR> Letter a1 = new Letter ( f7 ) ;  <CR> Letter t0 = new Letter ( i2 - 1 ) ;  <CR> if ( a1 . compareTo ( t0 ) == 1 )  <CR> a1 . display ( f7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object K8 ) {  <CR> Letter e9 = ( Letter ) K8 ;  <CR> if ( this . x > e9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int k6 ) {  <CR> this . x = k6 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int f7 ) {  <CR> list [ f7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 