 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o8 , String X4 , String H9 , String g7 , String n7 ) {  <CR> super ( o8 , X4 , H9 , g7 , n7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z8 , String C1 , String W , String D0 , String u2 ) {  <CR> super ( z8 , C1 , W , D0 , u2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] l0 ) {  <CR> Evaluation d1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r3 = new Envelop ( "Taipei" , "Kaohsiung" , d1 ) ;  <CR> r3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String n7 , String S6 , Evaluation v7 ) {  <CR> this . senderAddr = n7 ;  <CR> this . receiverAddr = S6 ;  <CR> this . letter = v7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String B8 , String d7 , String M8 , String T2 , String f0 ) {  <CR> this . title = B8 ;  <CR> this . receiver = d7 ;  <CR> this . content = M8 ;  <CR> this . sender = T2 ;  <CR> this . date = f0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int y1 ) {  <CR> this . x = y1 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object h5 ) {  <CR> Letter j7 = ( Letter ) h5 ;  <CR> if ( this . x > j7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int l2 ) {  <CR> list [ l2 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E9 ) {  <CR> int l2 ;  <CR> for ( l2 = list . length - 1 ; l2 >= 0 ; l2 -- ) {  <CR> int C7 = l2 ;  <CR> Letter D1 = new Letter ( l2 ) ;  <CR> Letter U8 = new Letter ( C7 - 1 ) ;  <CR> if ( D1 . compareTo ( U8 ) == 1 )  <CR> D1 . display ( l2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 