 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B6 , String S9 , String t , String r0 , String b7 ) {  <CR> super ( B6 , S9 , t , r0 , b7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b7 , String A2 , String S4 , String k4 , String i8 ) {  <CR> super ( b7 , A2 , S4 , k4 , i8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] v4 ) {  <CR> Evaluation B1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m5 = new Envelop ( "Taipei" , "Kaohsiung" , B1 ) ;  <CR> m5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String t0 , String Z0 , Evaluation Y6 ) {  <CR> this . senderAddr = t0 ;  <CR> this . receiverAddr = Z0 ;  <CR> this . letter = Y6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String F6 , String L0 , String P9 , String W1 , String z5 ) {  <CR> this . title = F6 ;  <CR> this . receiver = L0 ;  <CR> this . content = P9 ;  <CR> this . sender = W1 ;  <CR> this . date = z5 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object B1 ) {  <CR> Letter d3 = ( Letter ) B1 ;  <CR> if ( this . x > d3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] C2 ) {  <CR> int c6 ;  <CR> for ( c6 = list . length - 1 ; c6 >= 0 ; c6 -- ) {  <CR> int p5 = c6 ;  <CR> Letter W0 = new Letter ( c6 ) ;  <CR> Letter G = new Letter ( p5 - 1 ) ;  <CR> if ( W0 . compareTo ( G ) == 1 )  <CR> W0 . display ( c6 ) ;  <CR> }  <CR> }  <CR> Letter ( int a4 ) {  <CR> this . x = a4 ;  <CR> }  <CR> public void display ( int c6 ) {  <CR> list [ c6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 