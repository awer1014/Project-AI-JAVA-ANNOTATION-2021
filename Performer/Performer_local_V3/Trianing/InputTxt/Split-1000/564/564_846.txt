 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D , String B3 , String Q9 , String u4 , String A7 ) {  <CR> super ( D , B3 , Q9 , u4 , A7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String d2 , String Q8 , String d4 , String i0 , String R3 ) {  <CR> super ( d2 , Q8 , d4 , i0 , R3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m3 ) {  <CR> Evaluation V1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U0 = new Envelop ( "Taipei" , "Kaohsiung" , V1 ) ;  <CR> U0 . display ( ) ;  <CR> }  <CR> public Envelop ( String F6 , String k7 , Evaluation A7 ) {  <CR> this . senderAddr = F6 ;  <CR> this . receiverAddr = k7 ;  <CR> this . letter = A7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String f4 , String B0 , String Q5 , String Y0 , String E2 ) {  <CR> this . title = f4 ;  <CR> this . receiver = B0 ;  <CR> this . content = Q5 ;  <CR> this . sender = Y0 ;  <CR> this . date = E2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object L0 ) {  <CR> Letter c = ( Letter ) L0 ;  <CR> if ( this . x > c . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] z9 ) {  <CR> int j6 ;  <CR> for ( j6 = list . length - 1 ; j6 >= 0 ; j6 -- ) {  <CR> int p8 = j6 ;  <CR> Letter u6 = new Letter ( j6 ) ;  <CR> Letter T2 = new Letter ( p8 - 1 ) ;  <CR> if ( u6 . compareTo ( T2 ) == 1 )  <CR> u6 . display ( j6 ) ;  <CR> }  <CR> }  <CR> Letter ( int v1 ) {  <CR> this . x = v1 ;  <CR> }  <CR> public void display ( int j6 ) {  <CR> list [ j6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 