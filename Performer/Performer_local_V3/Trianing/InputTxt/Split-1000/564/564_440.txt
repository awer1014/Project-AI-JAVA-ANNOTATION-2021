 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X9 , String g4 , String Z7 , String W5 , String G7 ) {  <CR> super ( X9 , g4 , Z7 , W5 , G7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String l5 , String L6 , String L2 , String h4 , String r9 ) {  <CR> super ( l5 , L6 , L2 , h4 , r9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String g4 , String h6 , Evaluation g ) {  <CR> this . senderAddr = g4 ;  <CR> this . receiverAddr = h6 ;  <CR> this . letter = g ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] z7 ) {  <CR> Evaluation t5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N = new Envelop ( "Taipei" , "Kaohsiung" , t5 ) ;  <CR> N . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String R , String l3 , String M4 , String u8 , String A3 ) {  <CR> this . title = R ;  <CR> this . receiver = l3 ;  <CR> this . content = M4 ;  <CR> this . sender = u8 ;  <CR> this . date = A3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int V5 ) {  <CR> this . x = V5 ;  <CR> }  <CR> public int compareTo ( Object b8 ) {  <CR> Letter r8 = ( Letter ) b8 ;  <CR> if ( this . x > r8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int r3 ) {  <CR> list [ r3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] j2 ) {  <CR> int r3 ;  <CR> for ( r3 = list . length - 1 ; r3 >= 0 ; r3 -- ) {  <CR> int y4 = r3 ;  <CR> Letter x = new Letter ( r3 ) ;  <CR> Letter y8 = new Letter ( y4 - 1 ) ;  <CR> if ( x . compareTo ( y8 ) == 1 )  <CR> x . display ( r3 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 