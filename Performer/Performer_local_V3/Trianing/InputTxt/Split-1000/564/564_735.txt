 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d7 , String q9 , String z4 , String X6 , String Z5 ) {  <CR> super ( d7 , q9 , z4 , X6 , Z5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String H8 , String a0 , String V0 , String F3 , String g0 ) {  <CR> super ( H8 , a0 , V0 , F3 , g0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String p9 , String I9 , Evaluation j7 ) {  <CR> this . senderAddr = p9 ;  <CR> this . receiverAddr = I9 ;  <CR> this . letter = j7 ;  <CR> }  <CR> public static void main ( String [ ] R9 ) {  <CR> Evaluation H6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o8 = new Envelop ( "Taipei" , "Kaohsiung" , H6 ) ;  <CR> o8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String M4 , String C6 , String R1 , String L4 , String m5 ) {  <CR> this . title = M4 ;  <CR> this . receiver = C6 ;  <CR> this . content = R1 ;  <CR> this . sender = L4 ;  <CR> this . date = m5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] n3 ) {  <CR> int B1 ;  <CR> for ( B1 = list . length - 1 ; B1 >= 0 ; B1 -- ) {  <CR> int h6 = B1 ;  <CR> Letter D9 = new Letter ( B1 ) ;  <CR> Letter J0 = new Letter ( h6 - 1 ) ;  <CR> if ( D9 . compareTo ( J0 ) == 1 )  <CR> D9 . display ( B1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object k6 ) {  <CR> Letter W7 = ( Letter ) k6 ;  <CR> if ( this . x > W7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int B1 ) {  <CR> list [ B1 ] . Display ( ) ;  <CR> }  <CR> Letter ( int P4 ) {  <CR> this . x = P4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 