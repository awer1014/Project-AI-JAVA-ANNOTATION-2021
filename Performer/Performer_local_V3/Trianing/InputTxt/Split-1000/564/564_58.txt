 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d , String m8 , String n5 , String U6 , String p1 ) {  <CR> super ( d , m8 , n5 , U6 , p1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a4 , String X2 , String x5 , String R3 , String E9 ) {  <CR> super ( a4 , X2 , x5 , R3 , E9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] g1 ) {  <CR> Evaluation u = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b9 = new Envelop ( "Taipei" , "Kaohsiung" , u ) ;  <CR> b9 . display ( ) ;  <CR> }  <CR> public Envelop ( String H3 , String l2 , Evaluation r0 ) {  <CR> this . senderAddr = H3 ;  <CR> this . receiverAddr = l2 ;  <CR> this . letter = r0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String O6 , String s0 , String M3 , String w , String A6 ) {  <CR> this . title = O6 ;  <CR> this . receiver = s0 ;  <CR> this . content = M3 ;  <CR> this . sender = w ;  <CR> this . date = A6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int R8 ) {  <CR> this . x = R8 ;  <CR> }  <CR> public static void main ( String [ ] q8 ) {  <CR> int O3 ;  <CR> for ( O3 = list . length - 1 ; O3 >= 0 ; O3 -- ) {  <CR> int Y3 = O3 ;  <CR> Letter Q9 = new Letter ( O3 ) ;  <CR> Letter A7 = new Letter ( Y3 - 1 ) ;  <CR> if ( Q9 . compareTo ( A7 ) == 1 )  <CR> Q9 . display ( O3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object T5 ) {  <CR> Letter F8 = ( Letter ) T5 ;  <CR> if ( this . x > F8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int O3 ) {  <CR> list [ O3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 