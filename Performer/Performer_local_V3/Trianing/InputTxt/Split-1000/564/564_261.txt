 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G6 , String B8 , String q3 , String Z6 , String W1 ) {  <CR> super ( G6 , B8 , q3 , Z6 , W1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X0 , String c9 , String b9 , String t9 , String v8 ) {  <CR> super ( X0 , c9 , b9 , t9 , v8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] W9 ) {  <CR> Evaluation m9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j5 = new Envelop ( "Taipei" , "Kaohsiung" , m9 ) ;  <CR> j5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String i5 , String P0 , Evaluation M1 ) {  <CR> this . senderAddr = i5 ;  <CR> this . receiverAddr = P0 ;  <CR> this . letter = M1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String z6 , String S1 , String K2 , String H9 , String o8 ) {  <CR> this . title = z6 ;  <CR> this . receiver = S1 ;  <CR> this . content = K2 ;  <CR> this . sender = H9 ;  <CR> this . date = o8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int q5 ) {  <CR> this . x = q5 ;  <CR> }  <CR> public static void main ( String [ ] E1 ) {  <CR> int X7 ;  <CR> for ( X7 = list . length - 1 ; X7 >= 0 ; X7 -- ) {  <CR> int a3 = X7 ;  <CR> Letter n7 = new Letter ( X7 ) ;  <CR> Letter p2 = new Letter ( a3 - 1 ) ;  <CR> if ( n7 . compareTo ( p2 ) == 1 )  <CR> n7 . display ( X7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object V4 ) {  <CR> Letter N8 = ( Letter ) V4 ;  <CR> if ( this . x > N8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int X7 ) {  <CR> list [ X7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 