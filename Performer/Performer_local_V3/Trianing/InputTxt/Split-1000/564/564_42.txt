 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r7 , String J8 , String h9 , String q5 , String T2 ) {  <CR> super ( r7 , J8 , h9 , q5 , T2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String X8 , String q4 , String p3 , String W6 , String L2 ) {  <CR> super ( X8 , q4 , p3 , W6 , L2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String M6 , String i7 , Evaluation k3 ) {  <CR> this . senderAddr = M6 ;  <CR> this . receiverAddr = i7 ;  <CR> this . letter = k3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] A9 ) {  <CR> Evaluation Y4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop x3 = new Envelop ( "Taipei" , "Kaohsiung" , Y4 ) ;  <CR> x3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String U0 , String H5 , String t9 , String n8 , String N6 ) {  <CR> this . title = U0 ;  <CR> this . receiver = H5 ;  <CR> this . content = t9 ;  <CR> this . sender = n8 ;  <CR> this . date = N6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P8 ) {  <CR> list [ P8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] K3 ) {  <CR> int P8 ;  <CR> for ( P8 = list . length - 1 ; P8 >= 0 ; P8 -- ) {  <CR> int F8 = P8 ;  <CR> Letter M7 = new Letter ( P8 ) ;  <CR> Letter B2 = new Letter ( F8 - 1 ) ;  <CR> if ( M7 . compareTo ( B2 ) == 1 )  <CR> M7 . display ( P8 ) ;  <CR> }  <CR> }  <CR> Letter ( int d9 ) {  <CR> this . x = d9 ;  <CR> }  <CR> public int compareTo ( Object X0 ) {  <CR> Letter W6 = ( Letter ) X0 ;  <CR> if ( this . x > W6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 