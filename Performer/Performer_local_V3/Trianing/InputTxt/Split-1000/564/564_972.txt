 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L3 , String k1 , String D5 , String T3 , String X1 ) {  <CR> super ( L3 , k1 , D5 , T3 , X1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String D5 , String M1 , String X , String u6 , String A5 ) {  <CR> super ( D5 , M1 , X , u6 , A5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] O2 ) {  <CR> Evaluation B8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O9 = new Envelop ( "Taipei" , "Kaohsiung" , B8 ) ;  <CR> O9 . display ( ) ;  <CR> }  <CR> public Envelop ( String l4 , String f1 , Evaluation h8 ) {  <CR> this . senderAddr = l4 ;  <CR> this . receiverAddr = f1 ;  <CR> this . letter = h8 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String C4 , String T , String S3 , String c4 , String r5 ) {  <CR> this . title = C4 ;  <CR> this . receiver = T ;  <CR> this . content = S3 ;  <CR> this . sender = c4 ;  <CR> this . date = r5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] m2 ) {  <CR> int K7 ;  <CR> for ( K7 = list . length - 1 ; K7 >= 0 ; K7 -- ) {  <CR> int s6 = K7 ;  <CR> Letter Y2 = new Letter ( K7 ) ;  <CR> Letter u7 = new Letter ( s6 - 1 ) ;  <CR> if ( Y2 . compareTo ( u7 ) == 1 )  <CR> Y2 . display ( K7 ) ;  <CR> }  <CR> }  <CR> public void display ( int K7 ) {  <CR> list [ K7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int V8 ) {  <CR> this . x = V8 ;  <CR> }  <CR> public int compareTo ( Object a5 ) {  <CR> Letter Q0 = ( Letter ) a5 ;  <CR> if ( this . x > Q0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 