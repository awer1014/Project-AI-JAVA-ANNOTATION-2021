 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z0 , String C3 , String T4 , String t2 , String d8 ) {  <CR> super ( Z0 , C3 , T4 , t2 , d8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S2 , String M2 , String u8 , String F6 , String e8 ) {  <CR> super ( S2 , M2 , u8 , F6 , e8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] G7 ) {  <CR> Evaluation K8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H0 = new Envelop ( "Taipei" , "Kaohsiung" , K8 ) ;  <CR> H0 . display ( ) ;  <CR> }  <CR> public Envelop ( String S5 , String o9 , Evaluation B2 ) {  <CR> this . senderAddr = S5 ;  <CR> this . receiverAddr = o9 ;  <CR> this . letter = B2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String V1 , String b7 , String f , String u8 , String U9 ) {  <CR> this . title = V1 ;  <CR> this . receiver = b7 ;  <CR> this . content = f ;  <CR> this . sender = u8 ;  <CR> this . date = U9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object O7 ) {  <CR> Letter v7 = ( Letter ) O7 ;  <CR> if ( this . x > v7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int W4 ) {  <CR> this . x = W4 ;  <CR> }  <CR> public static void main ( String [ ] H2 ) {  <CR> int a7 ;  <CR> for ( a7 = list . length - 1 ; a7 >= 0 ; a7 -- ) {  <CR> int X6 = a7 ;  <CR> Letter D7 = new Letter ( a7 ) ;  <CR> Letter S7 = new Letter ( X6 - 1 ) ;  <CR> if ( D7 . compareTo ( S7 ) == 1 )  <CR> D7 . display ( a7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int a7 ) {  <CR> list [ a7 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 