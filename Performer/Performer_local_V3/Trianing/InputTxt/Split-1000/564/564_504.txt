 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D3 , String j2 , String M9 , String o7 , String M6 ) {  <CR> super ( D3 , j2 , M9 , o7 , M6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Q9 , String d8 , String H2 , String Q3 , String u5 ) {  <CR> super ( Q9 , d8 , H2 , Q3 , u5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String u2 , String N9 , Evaluation X8 ) {  <CR> this . senderAddr = u2 ;  <CR> this . receiverAddr = N9 ;  <CR> this . letter = X8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] m5 ) {  <CR> Evaluation G = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H6 = new Envelop ( "Taipei" , "Kaohsiung" , G ) ;  <CR> H6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String a4 , String H7 , String T7 , String B5 , String V9 ) {  <CR> this . title = a4 ;  <CR> this . receiver = H7 ;  <CR> this . content = T7 ;  <CR> this . sender = B5 ;  <CR> this . date = V9 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int r5 ) {  <CR> list [ r5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object p0 ) {  <CR> Letter T2 = ( Letter ) p0 ;  <CR> if ( this . x > T2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int o5 ) {  <CR> this . x = o5 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] I0 ) {  <CR> int r5 ;  <CR> for ( r5 = list . length - 1 ; r5 >= 0 ; r5 -- ) {  <CR> int m2 = r5 ;  <CR> Letter r2 = new Letter ( r5 ) ;  <CR> Letter h9 = new Letter ( m2 - 1 ) ;  <CR> if ( r2 . compareTo ( h9 ) == 1 )  <CR> r2 . display ( r5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 