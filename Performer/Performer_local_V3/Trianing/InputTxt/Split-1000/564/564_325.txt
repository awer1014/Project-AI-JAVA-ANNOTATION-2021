 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z7 , String p6 , String z5 , String y8 , String O ) {  <CR> super ( Z7 , p6 , z5 , y8 , O ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t5 , String k , String P5 , String m , String f4 ) {  <CR> super ( t5 , k , P5 , m , f4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String e3 , String Z2 , Evaluation H9 ) {  <CR> this . senderAddr = e3 ;  <CR> this . receiverAddr = Z2 ;  <CR> this . letter = H9 ;  <CR> }  <CR> public static void main ( String [ ] S ) {  <CR> Evaluation m2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop w9 = new Envelop ( "Taipei" , "Kaohsiung" , m2 ) ;  <CR> w9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String V , String U8 , String a0 , String x , String P ) {  <CR> this . title = V ;  <CR> this . receiver = U8 ;  <CR> this . content = a0 ;  <CR> this . sender = x ;  <CR> this . date = P ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int P ) {  <CR> this . x = P ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object P6 ) {  <CR> Letter R8 = ( Letter ) P6 ;  <CR> if ( this . x > R8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] m5 ) {  <CR> int R4 ;  <CR> for ( R4 = list . length - 1 ; R4 >= 0 ; R4 -- ) {  <CR> int G4 = R4 ;  <CR> Letter F7 = new Letter ( R4 ) ;  <CR> Letter A2 = new Letter ( G4 - 1 ) ;  <CR> if ( F7 . compareTo ( A2 ) == 1 )  <CR> F7 . display ( R4 ) ;  <CR> }  <CR> }  <CR> public void display ( int R4 ) {  <CR> list [ R4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 