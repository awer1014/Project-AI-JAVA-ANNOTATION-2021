 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X0 , String F1 , String D2 , String t5 , String H2 ) {  <CR> super ( X0 , F1 , D2 , t5 , H2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String J7 , String l2 , String A7 , String h7 , String S9 ) {  <CR> super ( J7 , l2 , A7 , h7 , S9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] W6 ) {  <CR> Evaluation Z5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M5 = new Envelop ( "Taipei" , "Kaohsiung" , Z5 ) ;  <CR> M5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String s , String U , Evaluation T ) {  <CR> this . senderAddr = s ;  <CR> this . receiverAddr = U ;  <CR> this . letter = T ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String l6 , String M2 , String u3 , String s4 , String Z8 ) {  <CR> this . title = l6 ;  <CR> this . receiver = M2 ;  <CR> this . content = u3 ;  <CR> this . sender = s4 ;  <CR> this . date = Z8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] o6 ) {  <CR> int P6 ;  <CR> for ( P6 = list . length - 1 ; P6 >= 0 ; P6 -- ) {  <CR> int o7 = P6 ;  <CR> Letter J = new Letter ( P6 ) ;  <CR> Letter U7 = new Letter ( o7 - 1 ) ;  <CR> if ( J . compareTo ( U7 ) == 1 )  <CR> J . display ( P6 ) ;  <CR> }  <CR> }  <CR> public void display ( int P6 ) {  <CR> list [ P6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object F8 ) {  <CR> Letter C8 = ( Letter ) F8 ;  <CR> if ( this . x > C8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int e1 ) {  <CR> this . x = e1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 