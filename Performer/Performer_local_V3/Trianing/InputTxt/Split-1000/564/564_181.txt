 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String v1 , String g0 , String p2 , String v3 , String w6 ) {  <CR> super ( v1 , g0 , p2 , v3 , w6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String D0 , String S8 , String e2 , String F9 , String R0 ) {  <CR> super ( D0 , S8 , e2 , F9 , R0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String e3 , String O5 , Evaluation j3 ) {  <CR> this . senderAddr = e3 ;  <CR> this . receiverAddr = O5 ;  <CR> this . letter = j3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] r1 ) {  <CR> Evaluation w3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z1 = new Envelop ( "Taipei" , "Kaohsiung" , w3 ) ;  <CR> z1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String M7 , String H6 , String n0 , String q0 , String O2 ) {  <CR> this . title = M7 ;  <CR> this . receiver = H6 ;  <CR> this . content = n0 ;  <CR> this . sender = q0 ;  <CR> this . date = O2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int T3 ) {  <CR> list [ T3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k5 ) {  <CR> int T3 ;  <CR> for ( T3 = list . length - 1 ; T3 >= 0 ; T3 -- ) {  <CR> int Y6 = T3 ;  <CR> Letter r5 = new Letter ( T3 ) ;  <CR> Letter u5 = new Letter ( Y6 - 1 ) ;  <CR> if ( r5 . compareTo ( u5 ) == 1 )  <CR> r5 . display ( T3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object R3 ) {  <CR> Letter z3 = ( Letter ) R3 ;  <CR> if ( this . x > z3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int m3 ) {  <CR> this . x = m3 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 