 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String w , String h6 , String i8 , String G2 , String n3 ) {  <CR> super ( w , h6 , i8 , G2 , n3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S , String x7 , String Y7 , String v5 , String d2 ) {  <CR> super ( S , x7 , Y7 , v5 , d2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String l3 , String Z0 , Evaluation c4 ) {  <CR> this . senderAddr = l3 ;  <CR> this . receiverAddr = Z0 ;  <CR> this . letter = c4 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] K ) {  <CR> Evaluation e1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G4 = new Envelop ( "Taipei" , "Kaohsiung" , e1 ) ;  <CR> G4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String I5 , String m2 , String U2 , String y8 , String F0 ) {  <CR> this . title = I5 ;  <CR> this . receiver = m2 ;  <CR> this . content = U2 ;  <CR> this . sender = y8 ;  <CR> this . date = F0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int i2 ) {  <CR> this . x = i2 ;  <CR> }  <CR> public int compareTo ( Object I4 ) {  <CR> Letter W5 = ( Letter ) I4 ;  <CR> if ( this . x > W5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int l1 ) {  <CR> list [ l1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v8 ) {  <CR> int l1 ;  <CR> for ( l1 = list . length - 1 ; l1 >= 0 ; l1 -- ) {  <CR> int q7 = l1 ;  <CR> Letter x4 = new Letter ( l1 ) ;  <CR> Letter z7 = new Letter ( q7 - 1 ) ;  <CR> if ( x4 . compareTo ( z7 ) == 1 )  <CR> x4 . display ( l1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 