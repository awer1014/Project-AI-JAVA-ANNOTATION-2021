 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u6 , String w3 , String k6 , String L , String A7 ) {  <CR> super ( u6 , w3 , k6 , L , A7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String K1 , String N7 , String x , String Y3 , String Q3 ) {  <CR> super ( K1 , N7 , x , Y3 , Q3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String a9 , String X8 , Evaluation v9 ) {  <CR> this . senderAddr = a9 ;  <CR> this . receiverAddr = X8 ;  <CR> this . letter = v9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] d2 ) {  <CR> Evaluation E2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p9 = new Envelop ( "Taipei" , "Kaohsiung" , E2 ) ;  <CR> p9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String H2 , String A1 , String N9 , String I , String Q2 ) {  <CR> this . title = H2 ;  <CR> this . receiver = A1 ;  <CR> this . content = N9 ;  <CR> this . sender = I ;  <CR> this . date = Q2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object N7 ) {  <CR> Letter b4 = ( Letter ) N7 ;  <CR> if ( this . x > b4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int A6 ) {  <CR> list [ A6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] M2 ) {  <CR> int A6 ;  <CR> for ( A6 = list . length - 1 ; A6 >= 0 ; A6 -- ) {  <CR> int U = A6 ;  <CR> Letter m = new Letter ( A6 ) ;  <CR> Letter a7 = new Letter ( U - 1 ) ;  <CR> if ( m . compareTo ( a7 ) == 1 )  <CR> m . display ( A6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int v1 ) {  <CR> this . x = v1 ;  <CR> }  <CR> }  <CR>  <EOC> 