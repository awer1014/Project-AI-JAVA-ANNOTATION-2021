 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String u9 , String x3 , String H6 , String z5 , String B5 ) {  <CR> super ( u9 , x3 , H6 , z5 , B5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I5 , String s9 , String O1 , String J , String l8 ) {  <CR> super ( I5 , s9 , O1 , J , l8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String m6 , String J7 , Evaluation K6 ) {  <CR> this . senderAddr = m6 ;  <CR> this . receiverAddr = J7 ;  <CR> this . letter = K6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] M7 ) {  <CR> Evaluation o4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o2 = new Envelop ( "Taipei" , "Kaohsiung" , o4 ) ;  <CR> o2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String q9 , String l1 , String K8 , String W6 , String s2 ) {  <CR> this . title = q9 ;  <CR> this . receiver = l1 ;  <CR> this . content = K8 ;  <CR> this . sender = W6 ;  <CR> this . date = s2 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object h7 ) {  <CR> Letter D2 = ( Letter ) h7 ;  <CR> if ( this . x > D2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int N8 ) {  <CR> this . x = N8 ;  <CR> }  <CR> public void display ( int A7 ) {  <CR> list [ A7 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] B3 ) {  <CR> int A7 ;  <CR> for ( A7 = list . length - 1 ; A7 >= 0 ; A7 -- ) {  <CR> int g8 = A7 ;  <CR> Letter q0 = new Letter ( A7 ) ;  <CR> Letter b4 = new Letter ( g8 - 1 ) ;  <CR> if ( q0 . compareTo ( b4 ) == 1 )  <CR> q0 . display ( A7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 