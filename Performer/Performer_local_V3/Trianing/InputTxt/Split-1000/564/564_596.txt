 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x8 , String a1 , String B2 , String l8 , String s5 ) {  <CR> super ( x8 , a1 , B2 , l8 , s5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F7 , String J6 , String e6 , String U1 , String M6 ) {  <CR> super ( F7 , J6 , e6 , U1 , M6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] v6 ) {  <CR> Evaluation P3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q1 = new Envelop ( "Taipei" , "Kaohsiung" , P3 ) ;  <CR> Q1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String D3 , String V , Evaluation K9 ) {  <CR> this . senderAddr = D3 ;  <CR> this . receiverAddr = V ;  <CR> this . letter = K9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String O , String h , String c2 , String k5 , String a7 ) {  <CR> this . title = O ;  <CR> this . receiver = h ;  <CR> this . content = c2 ;  <CR> this . sender = k5 ;  <CR> this . date = a7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] W1 ) {  <CR> int t4 ;  <CR> for ( t4 = list . length - 1 ; t4 >= 0 ; t4 -- ) {  <CR> int K3 = t4 ;  <CR> Letter b4 = new Letter ( t4 ) ;  <CR> Letter U = new Letter ( K3 - 1 ) ;  <CR> if ( b4 . compareTo ( U ) == 1 )  <CR> b4 . display ( t4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object n7 ) {  <CR> Letter X2 = ( Letter ) n7 ;  <CR> if ( this . x > X2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int t4 ) {  <CR> list [ t4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int X8 ) {  <CR> this . x = X8 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 