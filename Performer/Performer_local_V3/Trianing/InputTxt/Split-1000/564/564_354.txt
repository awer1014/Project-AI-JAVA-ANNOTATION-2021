 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c9 , String u9 , String f4 , String A6 , String H1 ) {  <CR> super ( c9 , u9 , f4 , A6 , H1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q4 , String O0 , String N0 , String Y , String v7 ) {  <CR> super ( q4 , O0 , N0 , Y , v7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String c0 , String O , Evaluation e4 ) {  <CR> this . senderAddr = c0 ;  <CR> this . receiverAddr = O ;  <CR> this . letter = e4 ;  <CR> }  <CR> public static void main ( String [ ] g5 ) {  <CR> Evaluation A7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b = new Envelop ( "Taipei" , "Kaohsiung" , A7 ) ;  <CR> b . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String S4 , String F7 , String i8 , String j7 , String L5 ) {  <CR> this . title = S4 ;  <CR> this . receiver = F7 ;  <CR> this . content = i8 ;  <CR> this . sender = j7 ;  <CR> this . date = L5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int P8 ) {  <CR> list [ P8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] Q9 ) {  <CR> int P8 ;  <CR> for ( P8 = list . length - 1 ; P8 >= 0 ; P8 -- ) {  <CR> int B6 = P8 ;  <CR> Letter P9 = new Letter ( P8 ) ;  <CR> Letter u3 = new Letter ( B6 - 1 ) ;  <CR> if ( P9 . compareTo ( u3 ) == 1 )  <CR> P9 . display ( P8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object I1 ) {  <CR> Letter k5 = ( Letter ) I1 ;  <CR> if ( this . x > k5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int x6 ) {  <CR> this . x = x6 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 