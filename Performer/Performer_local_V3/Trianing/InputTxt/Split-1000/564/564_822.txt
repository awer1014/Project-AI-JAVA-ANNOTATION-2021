 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String V8 , String o0 , String q9 , String q8 , String h7 ) {  <CR> super ( V8 , o0 , q9 , q8 , h7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String K6 , String J4 , String z4 , String k7 , String d5 ) {  <CR> super ( K6 , J4 , z4 , k7 , d5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String K8 , String x7 , Evaluation m9 ) {  <CR> this . senderAddr = K8 ;  <CR> this . receiverAddr = x7 ;  <CR> this . letter = m9 ;  <CR> }  <CR> public static void main ( String [ ] o4 ) {  <CR> Evaluation j3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O5 = new Envelop ( "Taipei" , "Kaohsiung" , j3 ) ;  <CR> O5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String E5 , String o0 , String m2 , String Y , String j3 ) {  <CR> this . title = E5 ;  <CR> this . receiver = o0 ;  <CR> this . content = m2 ;  <CR> this . sender = Y ;  <CR> this . date = j3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int S6 ) {  <CR> list [ S6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J3 ) {  <CR> int S6 ;  <CR> for ( S6 = list . length - 1 ; S6 >= 0 ; S6 -- ) {  <CR> int q1 = S6 ;  <CR> Letter S = new Letter ( S6 ) ;  <CR> Letter M = new Letter ( q1 - 1 ) ;  <CR> if ( S . compareTo ( M ) == 1 )  <CR> S . display ( S6 ) ;  <CR> }  <CR> }  <CR> Letter ( int Y9 ) {  <CR> this . x = Y9 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object v6 ) {  <CR> Letter y2 = ( Letter ) v6 ;  <CR> if ( this . x > y2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 