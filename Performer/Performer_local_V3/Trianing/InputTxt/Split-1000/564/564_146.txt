 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String u2 , String d5 , String t3 , String c7 , String R ) {  <CR> super ( u2 , d5 , t3 , c7 , R ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String u0 , String n9 , String o5 , String F7 , String T7 ) {  <CR> super ( u0 , n9 , o5 , F7 , T7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String G0 , String Q9 , Evaluation o9 ) {  <CR> this . senderAddr = G0 ;  <CR> this . receiverAddr = Q9 ;  <CR> this . letter = o9 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] q5 ) {  <CR> Evaluation F5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K7 = new Envelop ( "Taipei" , "Kaohsiung" , F5 ) ;  <CR> K7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String x9 , String j0 , String f7 , String E4 , String O4 ) {  <CR> this . title = x9 ;  <CR> this . receiver = j0 ;  <CR> this . content = f7 ;  <CR> this . sender = E4 ;  <CR> this . date = O4 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] E4 ) {  <CR> int t0 ;  <CR> for ( t0 = list . length - 1 ; t0 >= 0 ; t0 -- ) {  <CR> int g3 = t0 ;  <CR> Letter j5 = new Letter ( t0 ) ;  <CR> Letter Q4 = new Letter ( g3 - 1 ) ;  <CR> if ( j5 . compareTo ( Q4 ) == 1 )  <CR> j5 . display ( t0 ) ;  <CR> }  <CR> }  <CR> Letter ( int L6 ) {  <CR> this . x = L6 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object O3 ) {  <CR> Letter w = ( Letter ) O3 ;  <CR> if ( this . x > w . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int t0 ) {  <CR> list [ t0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 