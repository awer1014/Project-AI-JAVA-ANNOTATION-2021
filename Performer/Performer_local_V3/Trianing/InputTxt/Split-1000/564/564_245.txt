 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g6 , String c2 , String P9 , String R8 , String X ) {  <CR> super ( g6 , c2 , P9 , R8 , X ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String q8 , String F0 , String v6 , String p2 , String A2 ) {  <CR> super ( q8 , F0 , v6 , p2 , A2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String l5 , String O5 , Evaluation w8 ) {  <CR> this . senderAddr = l5 ;  <CR> this . receiverAddr = O5 ;  <CR> this . letter = w8 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] c2 ) {  <CR> Evaluation M3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V5 = new Envelop ( "Taipei" , "Kaohsiung" , M3 ) ;  <CR> V5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String b0 , String V4 , String k1 , String a1 , String H9 ) {  <CR> this . title = b0 ;  <CR> this . receiver = V4 ;  <CR> this . content = k1 ;  <CR> this . sender = a1 ;  <CR> this . date = H9 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int w6 ) {  <CR> list [ w6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] u7 ) {  <CR> int w6 ;  <CR> for ( w6 = list . length - 1 ; w6 >= 0 ; w6 -- ) {  <CR> int i6 = w6 ;  <CR> Letter G0 = new Letter ( w6 ) ;  <CR> Letter L8 = new Letter ( i6 - 1 ) ;  <CR> if ( G0 . compareTo ( L8 ) == 1 )  <CR> G0 . display ( w6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object y1 ) {  <CR> Letter h4 = ( Letter ) y1 ;  <CR> if ( this . x > h4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int P1 ) {  <CR> this . x = P1 ;  <CR> }  <CR> }  <CR>  <EOC> 