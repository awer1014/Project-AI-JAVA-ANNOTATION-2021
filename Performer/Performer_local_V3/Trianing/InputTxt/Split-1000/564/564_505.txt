 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x3 , String T4 , String J1 , String r0 , String N ) {  <CR> super ( x3 , T4 , J1 , r0 , N ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String C0 , String T3 , String E7 , String V8 , String L2 ) {  <CR> super ( C0 , T3 , E7 , V8 , L2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String s , String i5 , Evaluation u9 ) {  <CR> this . senderAddr = s ;  <CR> this . receiverAddr = i5 ;  <CR> this . letter = u9 ;  <CR> }  <CR> public static void main ( String [ ] O9 ) {  <CR> Evaluation c8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T1 = new Envelop ( "Taipei" , "Kaohsiung" , c8 ) ;  <CR> T1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Q , String D , String d7 , String b6 , String Y7 ) {  <CR> this . title = Q ;  <CR> this . receiver = D ;  <CR> this . content = d7 ;  <CR> this . sender = b6 ;  <CR> this . date = Y7 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int r5 ) {  <CR> this . x = r5 ;  <CR> }  <CR> public int compareTo ( Object Y0 ) {  <CR> Letter k = ( Letter ) Y0 ;  <CR> if ( this . x > k . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] f6 ) {  <CR> int F8 ;  <CR> for ( F8 = list . length - 1 ; F8 >= 0 ; F8 -- ) {  <CR> int o1 = F8 ;  <CR> Letter q4 = new Letter ( F8 ) ;  <CR> Letter v6 = new Letter ( o1 - 1 ) ;  <CR> if ( q4 . compareTo ( v6 ) == 1 )  <CR> q4 . display ( F8 ) ;  <CR> }  <CR> }  <CR> public void display ( int F8 ) {  <CR> list [ F8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 