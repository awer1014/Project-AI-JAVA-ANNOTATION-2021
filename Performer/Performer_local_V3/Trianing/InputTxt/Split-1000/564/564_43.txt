 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H8 , String K5 , String p3 , String T1 , String a7 ) {  <CR> super ( H8 , K5 , p3 , T1 , a7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G1 , String u7 , String J9 , String b0 , String l0 ) {  <CR> super ( G1 , u7 , J9 , b0 , l0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String U7 , String G5 , Evaluation A9 ) {  <CR> this . senderAddr = U7 ;  <CR> this . receiverAddr = G5 ;  <CR> this . letter = A9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] K5 ) {  <CR> Evaluation F8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p4 = new Envelop ( "Taipei" , "Kaohsiung" , F8 ) ;  <CR> p4 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String Q0 , String U3 , String l , String l7 , String u ) {  <CR> this . title = Q0 ;  <CR> this . receiver = U3 ;  <CR> this . content = l ;  <CR> this . sender = l7 ;  <CR> this . date = u ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int M ) {  <CR> list [ M ] . Display ( ) ;  <CR> }  <CR> Letter ( int d9 ) {  <CR> this . x = d9 ;  <CR> }  <CR> public static void main ( String [ ] O ) {  <CR> int M ;  <CR> for ( M = list . length - 1 ; M >= 0 ; M -- ) {  <CR> int R8 = M ;  <CR> Letter n = new Letter ( M ) ;  <CR> Letter c2 = new Letter ( R8 - 1 ) ;  <CR> if ( n . compareTo ( c2 ) == 1 )  <CR> n . display ( M ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object i3 ) {  <CR> Letter X2 = ( Letter ) i3 ;  <CR> if ( this . x > X2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 