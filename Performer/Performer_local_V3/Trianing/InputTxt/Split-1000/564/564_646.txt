 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I6 , String u8 , String q , String k8 , String F0 ) {  <CR> super ( I6 , u8 , q , k8 , F0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W9 , String X8 , String E7 , String U , String y3 ) {  <CR> super ( W9 , X8 , E7 , U , y3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] W3 ) {  <CR> Evaluation G2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g1 = new Envelop ( "Taipei" , "Kaohsiung" , G2 ) ;  <CR> g1 . display ( ) ;  <CR> }  <CR> public Envelop ( String K7 , String S0 , Evaluation x ) {  <CR> this . senderAddr = K7 ;  <CR> this . receiverAddr = S0 ;  <CR> this . letter = x ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String f1 , String p8 , String r7 , String J4 , String m3 ) {  <CR> this . title = f1 ;  <CR> this . receiver = p8 ;  <CR> this . content = r7 ;  <CR> this . sender = J4 ;  <CR> this . date = m3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int A9 ) {  <CR> this . x = A9 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int H5 ) {  <CR> list [ H5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O8 ) {  <CR> int H5 ;  <CR> for ( H5 = list . length - 1 ; H5 >= 0 ; H5 -- ) {  <CR> int F5 = H5 ;  <CR> Letter T4 = new Letter ( H5 ) ;  <CR> Letter c3 = new Letter ( F5 - 1 ) ;  <CR> if ( T4 . compareTo ( c3 ) == 1 )  <CR> T4 . display ( H5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object a3 ) {  <CR> Letter n6 = ( Letter ) a3 ;  <CR> if ( this . x > n6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 