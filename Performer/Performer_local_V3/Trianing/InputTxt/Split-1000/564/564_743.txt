 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t9 , String s9 , String Q8 , String v8 , String j7 ) {  <CR> super ( t9 , s9 , Q8 , v8 , j7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String p8 , String k3 , String F3 , String c1 , String Y9 ) {  <CR> super ( p8 , k3 , F3 , c1 , Y9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Z3 , String x3 , Evaluation q2 ) {  <CR> this . senderAddr = Z3 ;  <CR> this . receiverAddr = x3 ;  <CR> this . letter = q2 ;  <CR> }  <CR> public static void main ( String [ ] b7 ) {  <CR> Evaluation n8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h2 = new Envelop ( "Taipei" , "Kaohsiung" , n8 ) ;  <CR> h2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s , String t5 , String n8 , String U5 , String O ) {  <CR> this . title = s ;  <CR> this . receiver = t5 ;  <CR> this . content = n8 ;  <CR> this . sender = U5 ;  <CR> this . date = O ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int f4 ) {  <CR> list [ f4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object O0 ) {  <CR> Letter S3 = ( Letter ) O0 ;  <CR> if ( this . x > S3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int p8 ) {  <CR> this . x = p8 ;  <CR> }  <CR> public static void main ( String [ ] F8 ) {  <CR> int f4 ;  <CR> for ( f4 = list . length - 1 ; f4 >= 0 ; f4 -- ) {  <CR> int w3 = f4 ;  <CR> Letter E3 = new Letter ( f4 ) ;  <CR> Letter g0 = new Letter ( w3 - 1 ) ;  <CR> if ( E3 . compareTo ( g0 ) == 1 )  <CR> E3 . display ( f4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 