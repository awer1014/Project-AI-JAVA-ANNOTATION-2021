 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String e2 , String q3 , String g2 , String t , String a3 ) {  <CR> super ( e2 , q3 , g2 , t , a3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y2 , String e0 , String z7 , String I7 , String T4 ) {  <CR> super ( y2 , e0 , z7 , I7 , T4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String L6 , String v , Evaluation K0 ) {  <CR> this . senderAddr = L6 ;  <CR> this . receiverAddr = v ;  <CR> this . letter = K0 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] F7 ) {  <CR> Evaluation G9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop q = new Envelop ( "Taipei" , "Kaohsiung" , G9 ) ;  <CR> q . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String H4 , String k7 , String S5 , String M3 , String m9 ) {  <CR> this . title = H4 ;  <CR> this . receiver = k7 ;  <CR> this . content = S5 ;  <CR> this . sender = M3 ;  <CR> this . date = m9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int V2 ) {  <CR> this . x = V2 ;  <CR> }  <CR> public static void main ( String [ ] s ) {  <CR> int A8 ;  <CR> for ( A8 = list . length - 1 ; A8 >= 0 ; A8 -- ) {  <CR> int l2 = A8 ;  <CR> Letter B0 = new Letter ( A8 ) ;  <CR> Letter u9 = new Letter ( l2 - 1 ) ;  <CR> if ( B0 . compareTo ( u9 ) == 1 )  <CR> B0 . display ( A8 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object P3 ) {  <CR> Letter r5 = ( Letter ) P3 ;  <CR> if ( this . x > r5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int A8 ) {  <CR> list [ A8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 