 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z7 , String F3 , String N6 , String a7 , String q1 ) {  <CR> super ( z7 , F3 , N6 , a7 , q1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String c3 , String O4 , String l1 , String I8 , String U3 ) {  <CR> super ( c3 , O4 , l1 , I8 , U3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] p9 ) {  <CR> Evaluation Y2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i5 = new Envelop ( "Taipei" , "Kaohsiung" , Y2 ) ;  <CR> i5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String b8 , String W5 , Evaluation J8 ) {  <CR> this . senderAddr = b8 ;  <CR> this . receiverAddr = W5 ;  <CR> this . letter = J8 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String k7 , String e7 , String M9 , String G2 , String Q6 ) {  <CR> this . title = k7 ;  <CR> this . receiver = e7 ;  <CR> this . content = M9 ;  <CR> this . sender = G2 ;  <CR> this . date = Q6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] c4 ) {  <CR> int a1 ;  <CR> for ( a1 = list . length - 1 ; a1 >= 0 ; a1 -- ) {  <CR> int o0 = a1 ;  <CR> Letter P = new Letter ( a1 ) ;  <CR> Letter n9 = new Letter ( o0 - 1 ) ;  <CR> if ( P . compareTo ( n9 ) == 1 )  <CR> P . display ( a1 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int h9 ) {  <CR> this . x = h9 ;  <CR> }  <CR> public int compareTo ( Object T8 ) {  <CR> Letter Z8 = ( Letter ) T8 ;  <CR> if ( this . x > Z8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int a1 ) {  <CR> list [ a1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 