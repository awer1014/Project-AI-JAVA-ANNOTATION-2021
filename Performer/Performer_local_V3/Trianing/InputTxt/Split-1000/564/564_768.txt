 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d0 , String s9 , String N8 , String x , String p ) {  <CR> super ( d0 , s9 , N8 , x , p ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R3 , String n2 , String X5 , String Q8 , String X8 ) {  <CR> super ( R3 , n2 , X5 , Q8 , X8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Z , String k4 , Evaluation s2 ) {  <CR> this . senderAddr = Z ;  <CR> this . receiverAddr = k4 ;  <CR> this . letter = s2 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] o ) {  <CR> Evaluation z2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r9 = new Envelop ( "Taipei" , "Kaohsiung" , z2 ) ;  <CR> r9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String o4 , String d , String m9 , String o , String L8 ) {  <CR> this . title = o4 ;  <CR> this . receiver = d ;  <CR> this . content = m9 ;  <CR> this . sender = o ;  <CR> this . date = L8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object R9 ) {  <CR> Letter n = ( Letter ) R9 ;  <CR> if ( this . x > n . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int H3 ) {  <CR> list [ H3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int T ) {  <CR> this . x = T ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] T2 ) {  <CR> int H3 ;  <CR> for ( H3 = list . length - 1 ; H3 >= 0 ; H3 -- ) {  <CR> int V5 = H3 ;  <CR> Letter a6 = new Letter ( H3 ) ;  <CR> Letter B6 = new Letter ( V5 - 1 ) ;  <CR> if ( a6 . compareTo ( B6 ) == 1 )  <CR> a6 . display ( H3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 