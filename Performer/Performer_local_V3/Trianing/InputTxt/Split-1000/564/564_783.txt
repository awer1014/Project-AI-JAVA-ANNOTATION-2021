 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String K5 , String k7 , String l0 , String p6 , String b9 ) {  <CR> super ( K5 , k7 , l0 , p6 , b9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String O1 , String S5 , String n4 , String r3 , String y2 ) {  <CR> super ( O1 , S5 , n4 , r3 , y2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String k8 , String l8 , Evaluation l3 ) {  <CR> this . senderAddr = k8 ;  <CR> this . receiverAddr = l8 ;  <CR> this . letter = l3 ;  <CR> }  <CR> public static void main ( String [ ] S5 ) {  <CR> Evaluation v8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o7 = new Envelop ( "Taipei" , "Kaohsiung" , v8 ) ;  <CR> o7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String i3 , String f5 , String D5 , String c9 , String C2 ) {  <CR> this . title = i3 ;  <CR> this . receiver = f5 ;  <CR> this . content = D5 ;  <CR> this . sender = c9 ;  <CR> this . date = C2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object W ) {  <CR> Letter D = ( Letter ) W ;  <CR> if ( this . x > D . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int T5 ) {  <CR> list [ T5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v7 ) {  <CR> int T5 ;  <CR> for ( T5 = list . length - 1 ; T5 >= 0 ; T5 -- ) {  <CR> int N2 = T5 ;  <CR> Letter I5 = new Letter ( T5 ) ;  <CR> Letter q3 = new Letter ( N2 - 1 ) ;  <CR> if ( I5 . compareTo ( q3 ) == 1 )  <CR> I5 . display ( T5 ) ;  <CR> }  <CR> }  <CR> Letter ( int y ) {  <CR> this . x = y ;  <CR> }  <CR> }  <CR>  <EOC> 