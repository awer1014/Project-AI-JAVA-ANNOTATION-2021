 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String a2 , String H0 , String w2 , String o1 , String Z5 ) {  <CR> super ( a2 , H0 , w2 , o1 , Z5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M3 , String d6 , String z6 , String D , String E4 ) {  <CR> super ( M3 , d6 , z6 , D , E4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] h7 ) {  <CR> Evaluation d4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop T7 = new Envelop ( "Taipei" , "Kaohsiung" , d4 ) ;  <CR> T7 . display ( ) ;  <CR> }  <CR> public Envelop ( String I3 , String e4 , Evaluation u8 ) {  <CR> this . senderAddr = I3 ;  <CR> this . receiverAddr = e4 ;  <CR> this . letter = u8 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String u , String p , String F3 , String G1 , String p1 ) {  <CR> this . title = u ;  <CR> this . receiver = p ;  <CR> this . content = F3 ;  <CR> this . sender = G1 ;  <CR> this . date = p1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] n8 ) {  <CR> int W8 ;  <CR> for ( W8 = list . length - 1 ; W8 >= 0 ; W8 -- ) {  <CR> int o4 = W8 ;  <CR> Letter T4 = new Letter ( W8 ) ;  <CR> Letter F7 = new Letter ( o4 - 1 ) ;  <CR> if ( T4 . compareTo ( F7 ) == 1 )  <CR> T4 . display ( W8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object X9 ) {  <CR> Letter H3 = ( Letter ) X9 ;  <CR> if ( this . x > H3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int W8 ) {  <CR> list [ W8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int v6 ) {  <CR> this . x = v6 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 