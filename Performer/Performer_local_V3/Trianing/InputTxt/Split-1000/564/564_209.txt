 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String A4 , String B4 , String h6 , String G2 , String b9 ) {  <CR> super ( A4 , B4 , h6 , G2 , b9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g6 , String r2 , String v , String E0 , String Q ) {  <CR> super ( g6 , r2 , v , E0 , Q ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] a5 ) {  <CR> Evaluation C1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z2 = new Envelop ( "Taipei" , "Kaohsiung" , C1 ) ;  <CR> z2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String e1 , String g5 , Evaluation x9 ) {  <CR> this . senderAddr = e1 ;  <CR> this . receiverAddr = g5 ;  <CR> this . letter = x9 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String d0 , String U9 , String l , String k2 , String r4 ) {  <CR> this . title = d0 ;  <CR> this . receiver = U9 ;  <CR> this . content = l ;  <CR> this . sender = k2 ;  <CR> this . date = r4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object H8 ) {  <CR> Letter B4 = ( Letter ) H8 ;  <CR> if ( this . x > B4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int V0 ) {  <CR> list [ V0 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int z3 ) {  <CR> this . x = z3 ;  <CR> }  <CR> public static void main ( String [ ] s ) {  <CR> int V0 ;  <CR> for ( V0 = list . length - 1 ; V0 >= 0 ; V0 -- ) {  <CR> int A3 = V0 ;  <CR> Letter Y0 = new Letter ( V0 ) ;  <CR> Letter B1 = new Letter ( A3 - 1 ) ;  <CR> if ( Y0 . compareTo ( B1 ) == 1 )  <CR> Y0 . display ( V0 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 