 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String z , String k , String D9 , String r0 , String r6 ) {  <CR> super ( z , k , D9 , r0 , r6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String U7 , String h9 , String y8 , String l8 , String v7 ) {  <CR> super ( U7 , h9 , y8 , l8 , v7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String e3 , String i4 , Evaluation T3 ) {  <CR> this . senderAddr = e3 ;  <CR> this . receiverAddr = i4 ;  <CR> this . letter = T3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o2 ) {  <CR> Evaluation X2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop F1 = new Envelop ( "Taipei" , "Kaohsiung" , X2 ) ;  <CR> F1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String z1 , String h5 , String D0 , String m5 , String R0 ) {  <CR> this . title = z1 ;  <CR> this . receiver = h5 ;  <CR> this . content = D0 ;  <CR> this . sender = m5 ;  <CR> this . date = R0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] R ) {  <CR> int K8 ;  <CR> for ( K8 = list . length - 1 ; K8 >= 0 ; K8 -- ) {  <CR> int h4 = K8 ;  <CR> Letter l3 = new Letter ( K8 ) ;  <CR> Letter V2 = new Letter ( h4 - 1 ) ;  <CR> if ( l3 . compareTo ( V2 ) == 1 )  <CR> l3 . display ( K8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object Q7 ) {  <CR> Letter I = ( Letter ) Q7 ;  <CR> if ( this . x > I . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int F1 ) {  <CR> this . x = F1 ;  <CR> }  <CR> public void display ( int K8 ) {  <CR> list [ K8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 