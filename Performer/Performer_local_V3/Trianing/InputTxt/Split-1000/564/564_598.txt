 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String g3 , String e6 , String B6 , String d7 , String J4 ) {  <CR> super ( g3 , e6 , B6 , d7 , J4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String w5 , String C , String z , String N6 , String r ) {  <CR> super ( w5 , C , z , N6 , r ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String V , String t6 , Evaluation X1 ) {  <CR> this . senderAddr = V ;  <CR> this . receiverAddr = t6 ;  <CR> this . letter = X1 ;  <CR> }  <CR> public static void main ( String [ ] U1 ) {  <CR> Evaluation H7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V3 = new Envelop ( "Taipei" , "Kaohsiung" , H7 ) ;  <CR> V3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String L , String O5 , String M3 , String v4 , String X1 ) {  <CR> this . title = L ;  <CR> this . receiver = O5 ;  <CR> this . content = M3 ;  <CR> this . sender = v4 ;  <CR> this . date = X1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int w8 ) {  <CR> list [ w8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int f5 ) {  <CR> this . x = f5 ;  <CR> }  <CR> public int compareTo ( Object F ) {  <CR> Letter q5 = ( Letter ) F ;  <CR> if ( this . x > q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] B2 ) {  <CR> int w8 ;  <CR> for ( w8 = list . length - 1 ; w8 >= 0 ; w8 -- ) {  <CR> int v0 = w8 ;  <CR> Letter j9 = new Letter ( w8 ) ;  <CR> Letter b6 = new Letter ( v0 - 1 ) ;  <CR> if ( j9 . compareTo ( b6 ) == 1 )  <CR> j9 . display ( w8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 