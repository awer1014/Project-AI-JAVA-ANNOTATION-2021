 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String P3 , String Y1 , String F5 , String q8 , String Q0 ) {  <CR> super ( P3 , Y1 , F5 , q8 , Q0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String X2 , String W5 , String f7 , String I7 , String B6 ) {  <CR> super ( X2 , W5 , f7 , I7 , B6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] X2 ) {  <CR> Evaluation U7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L1 = new Envelop ( "Taipei" , "Kaohsiung" , U7 ) ;  <CR> L1 . display ( ) ;  <CR> }  <CR> public Envelop ( String m4 , String Z2 , Evaluation v9 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = Z2 ;  <CR> this . letter = v9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String R1 , String f3 , String E5 , String b2 , String t3 ) {  <CR> this . title = R1 ;  <CR> this . receiver = f3 ;  <CR> this . content = E5 ;  <CR> this . sender = b2 ;  <CR> this . date = t3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] U ) {  <CR> int G7 ;  <CR> for ( G7 = list . length - 1 ; G7 >= 0 ; G7 -- ) {  <CR> int O = G7 ;  <CR> Letter G2 = new Letter ( G7 ) ;  <CR> Letter F3 = new Letter ( O - 1 ) ;  <CR> if ( G2 . compareTo ( F3 ) == 1 )  <CR> G2 . display ( G7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int G5 ) {  <CR> this . x = G5 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object q0 ) {  <CR> Letter E9 = ( Letter ) q0 ;  <CR> if ( this . x > E9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int G7 ) {  <CR> list [ G7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 