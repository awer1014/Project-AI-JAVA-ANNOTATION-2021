 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N6 , String Y , String b7 , String L1 , String z3 ) {  <CR> super ( N6 , Y , b7 , L1 , z3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String p4 , String K , String e0 , String k8 , String G ) {  <CR> super ( p4 , K , e0 , k8 , G ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String l0 , String P7 , Evaluation g9 ) {  <CR> this . senderAddr = l0 ;  <CR> this . receiverAddr = P7 ;  <CR> this . letter = g9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] J5 ) {  <CR> Evaluation E8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u1 = new Envelop ( "Taipei" , "Kaohsiung" , E8 ) ;  <CR> u1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String O1 , String u9 , String R2 , String I3 , String V3 ) {  <CR> this . title = O1 ;  <CR> this . receiver = u9 ;  <CR> this . content = R2 ;  <CR> this . sender = I3 ;  <CR> this . date = V3 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int M1 ) {  <CR> this . x = M1 ;  <CR> }  <CR> public int compareTo ( Object K7 ) {  <CR> Letter v2 = ( Letter ) K7 ;  <CR> if ( this . x > v2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int M9 ) {  <CR> list [ M9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] k5 ) {  <CR> int M9 ;  <CR> for ( M9 = list . length - 1 ; M9 >= 0 ; M9 -- ) {  <CR> int i9 = M9 ;  <CR> Letter G5 = new Letter ( M9 ) ;  <CR> Letter k0 = new Letter ( i9 - 1 ) ;  <CR> if ( G5 . compareTo ( k0 ) == 1 )  <CR> G5 . display ( M9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 