 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G0 , String B5 , String s3 , String L7 , String n1 ) {  <CR> super ( G0 , B5 , s3 , L7 , n1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String T , String I4 , String U7 , String a5 , String k3 ) {  <CR> super ( T , I4 , U7 , a5 , k3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] H4 ) {  <CR> Evaluation A8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P2 = new Envelop ( "Taipei" , "Kaohsiung" , A8 ) ;  <CR> P2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String k2 , String o9 , Evaluation W6 ) {  <CR> this . senderAddr = k2 ;  <CR> this . receiverAddr = o9 ;  <CR> this . letter = W6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String J1 , String d6 , String R1 , String O6 , String g3 ) {  <CR> this . title = J1 ;  <CR> this . receiver = d6 ;  <CR> this . content = R1 ;  <CR> this . sender = O6 ;  <CR> this . date = g3 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int G9 ) {  <CR> list [ G9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int J5 ) {  <CR> this . x = J5 ;  <CR> }  <CR> public static void main ( String [ ] O ) {  <CR> int G9 ;  <CR> for ( G9 = list . length - 1 ; G9 >= 0 ; G9 -- ) {  <CR> int i4 = G9 ;  <CR> Letter C1 = new Letter ( G9 ) ;  <CR> Letter r8 = new Letter ( i4 - 1 ) ;  <CR> if ( C1 . compareTo ( r8 ) == 1 )  <CR> C1 . display ( G9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object X3 ) {  <CR> Letter n2 = ( Letter ) X3 ;  <CR> if ( this . x > n2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 