 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Y4 , String T4 , String d , String h0 , String s0 ) {  <CR> super ( Y4 , T4 , d , h0 , s0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String H6 , String N8 , String V5 , String k2 , String X9 ) {  <CR> super ( H6 , N8 , V5 , k2 , X9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] B9 ) {  <CR> Evaluation P2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h8 = new Envelop ( "Taipei" , "Kaohsiung" , P2 ) ;  <CR> h8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String U9 , String y6 , Evaluation x8 ) {  <CR> this . senderAddr = U9 ;  <CR> this . receiverAddr = y6 ;  <CR> this . letter = x8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String Y0 , String n3 , String I6 , String A8 , String C6 ) {  <CR> this . title = Y0 ;  <CR> this . receiver = n3 ;  <CR> this . content = I6 ;  <CR> this . sender = A8 ;  <CR> this . date = C6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object B0 ) {  <CR> Letter E3 = ( Letter ) B0 ;  <CR> if ( this . x > E3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P5 ) {  <CR> list [ P5 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int O8 ) {  <CR> this . x = O8 ;  <CR> }  <CR> public static void main ( String [ ] W8 ) {  <CR> int P5 ;  <CR> for ( P5 = list . length - 1 ; P5 >= 0 ; P5 -- ) {  <CR> int U4 = P5 ;  <CR> Letter G8 = new Letter ( P5 ) ;  <CR> Letter H9 = new Letter ( U4 - 1 ) ;  <CR> if ( G8 . compareTo ( H9 ) == 1 )  <CR> G8 . display ( P5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 