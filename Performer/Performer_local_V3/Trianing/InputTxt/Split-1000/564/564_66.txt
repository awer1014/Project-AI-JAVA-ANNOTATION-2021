 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y7 , String L1 , String Z , String p4 , String e9 ) {  <CR> super ( y7 , L1 , Z , p4 , e9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String g8 , String E1 , String L7 , String z3 , String C0 ) {  <CR> super ( g8 , E1 , L7 , z3 , C0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String G5 , String B8 , Evaluation z8 ) {  <CR> this . senderAddr = G5 ;  <CR> this . receiverAddr = B8 ;  <CR> this . letter = z8 ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> Evaluation G6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b = new Envelop ( "Taipei" , "Kaohsiung" , G6 ) ;  <CR> b . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String j7 , String a1 , String P3 , String I0 , String a4 ) {  <CR> this . title = j7 ;  <CR> this . receiver = a1 ;  <CR> this . content = P3 ;  <CR> this . sender = I0 ;  <CR> this . date = a4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object D7 ) {  <CR> Letter e5 = ( Letter ) D7 ;  <CR> if ( this . x > e5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int b9 ) {  <CR> this . x = b9 ;  <CR> }  <CR> public static void main ( String [ ] J1 ) {  <CR> int b4 ;  <CR> for ( b4 = list . length - 1 ; b4 >= 0 ; b4 -- ) {  <CR> int G8 = b4 ;  <CR> Letter c9 = new Letter ( b4 ) ;  <CR> Letter s9 = new Letter ( G8 - 1 ) ;  <CR> if ( c9 . compareTo ( s9 ) == 1 )  <CR> c9 . display ( b4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int b4 ) {  <CR> list [ b4 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 