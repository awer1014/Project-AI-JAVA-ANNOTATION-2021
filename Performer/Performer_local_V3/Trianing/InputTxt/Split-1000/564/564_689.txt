 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k8 , String u3 , String W7 , String p0 , String W5 ) {  <CR> super ( k8 , u3 , W7 , p0 , W5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z0 , String X7 , String p , String v0 , String E9 ) {  <CR> super ( Z0 , X7 , p , v0 , E9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String E1 , String x2 , Evaluation C7 ) {  <CR> this . senderAddr = E1 ;  <CR> this . receiverAddr = x2 ;  <CR> this . letter = C7 ;  <CR> }  <CR> public static void main ( String [ ] O7 ) {  <CR> Evaluation a7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P4 = new Envelop ( "Taipei" , "Kaohsiung" , a7 ) ;  <CR> P4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String z7 , String y6 , String P9 , String I2 , String Y1 ) {  <CR> this . title = z7 ;  <CR> this . receiver = y6 ;  <CR> this . content = P9 ;  <CR> this . sender = I2 ;  <CR> this . date = Y1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] N8 ) {  <CR> int p8 ;  <CR> for ( p8 = list . length - 1 ; p8 >= 0 ; p8 -- ) {  <CR> int l8 = p8 ;  <CR> Letter E6 = new Letter ( p8 ) ;  <CR> Letter G7 = new Letter ( l8 - 1 ) ;  <CR> if ( E6 . compareTo ( G7 ) == 1 )  <CR> E6 . display ( p8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int p8 ) {  <CR> list [ p8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int M0 ) {  <CR> this . x = M0 ;  <CR> }  <CR> public int compareTo ( Object Q5 ) {  <CR> Letter v5 = ( Letter ) Q5 ;  <CR> if ( this . x > v5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 