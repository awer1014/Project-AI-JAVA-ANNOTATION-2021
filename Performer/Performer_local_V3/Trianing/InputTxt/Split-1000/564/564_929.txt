 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String O2 , String h9 , String m3 , String g8 , String U3 ) {  <CR> super ( O2 , h9 , m3 , g8 , U3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q3 , String h5 , String R9 , String q7 , String K7 ) {  <CR> super ( q3 , h5 , R9 , q7 , K7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String s0 , String Q1 , Evaluation d9 ) {  <CR> this . senderAddr = s0 ;  <CR> this . receiverAddr = Q1 ;  <CR> this . letter = d9 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q2 ) {  <CR> Evaluation b0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K = new Envelop ( "Taipei" , "Kaohsiung" , b0 ) ;  <CR> K . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String u9 , String F6 , String e2 , String X0 , String r9 ) {  <CR> this . title = u9 ;  <CR> this . receiver = F6 ;  <CR> this . content = e2 ;  <CR> this . sender = X0 ;  <CR> this . date = r9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int W4 ) {  <CR> list [ W4 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object m6 ) {  <CR> Letter A1 = ( Letter ) m6 ;  <CR> if ( this . x > A1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int a3 ) {  <CR> this . x = a3 ;  <CR> }  <CR> public static void main ( String [ ] C1 ) {  <CR> int W4 ;  <CR> for ( W4 = list . length - 1 ; W4 >= 0 ; W4 -- ) {  <CR> int x2 = W4 ;  <CR> Letter P = new Letter ( W4 ) ;  <CR> Letter z9 = new Letter ( x2 - 1 ) ;  <CR> if ( P . compareTo ( z9 ) == 1 )  <CR> P . display ( W4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 