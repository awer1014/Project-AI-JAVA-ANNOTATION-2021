 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String m9 , String b6 , String h3 , String O2 , String a0 ) {  <CR> super ( m9 , b6 , h3 , O2 , a0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String v5 , String V5 , String A , String h5 , String g1 ) {  <CR> super ( v5 , V5 , A , h5 , g1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String R9 , String p9 , Evaluation f1 ) {  <CR> this . senderAddr = R9 ;  <CR> this . receiverAddr = p9 ;  <CR> this . letter = f1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w3 ) {  <CR> Evaluation e9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W0 = new Envelop ( "Taipei" , "Kaohsiung" , e9 ) ;  <CR> W0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String J6 , String Z9 , String T4 , String p6 , String Y ) {  <CR> this . title = J6 ;  <CR> this . receiver = Z9 ;  <CR> this . content = T4 ;  <CR> this . sender = p6 ;  <CR> this . date = Y ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int G ) {  <CR> list [ G ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D5 ) {  <CR> int G ;  <CR> for ( G = list . length - 1 ; G >= 0 ; G -- ) {  <CR> int T8 = G ;  <CR> Letter b0 = new Letter ( G ) ;  <CR> Letter m9 = new Letter ( T8 - 1 ) ;  <CR> if ( b0 . compareTo ( m9 ) == 1 )  <CR> b0 . display ( G ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object v0 ) {  <CR> Letter g2 = ( Letter ) v0 ;  <CR> if ( this . x > g2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int P ) {  <CR> this . x = P ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 