 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R , String O6 , String C2 , String W0 , String X3 ) {  <CR> super ( R , O6 , C2 , W0 , X3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String b1 , String W0 , String s0 , String e9 , String J1 ) {  <CR> super ( b1 , W0 , s0 , e9 , J1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String I4 , String q9 , Evaluation P7 ) {  <CR> this . senderAddr = I4 ;  <CR> this . receiverAddr = q9 ;  <CR> this . letter = P7 ;  <CR> }  <CR> public static void main ( String [ ] t3 ) {  <CR> Evaluation z4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m6 = new Envelop ( "Taipei" , "Kaohsiung" , z4 ) ;  <CR> m6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String N5 , String m7 , String W5 , String f3 , String k1 ) {  <CR> this . title = N5 ;  <CR> this . receiver = m7 ;  <CR> this . content = W5 ;  <CR> this . sender = f3 ;  <CR> this . date = k1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t7 ) {  <CR> this . x = t7 ;  <CR> }  <CR> public void display ( int a7 ) {  <CR> list [ a7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object C6 ) {  <CR> Letter C2 = ( Letter ) C6 ;  <CR> if ( this . x > C2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] g9 ) {  <CR> int a7 ;  <CR> for ( a7 = list . length - 1 ; a7 >= 0 ; a7 -- ) {  <CR> int B7 = a7 ;  <CR> Letter v8 = new Letter ( a7 ) ;  <CR> Letter x7 = new Letter ( B7 - 1 ) ;  <CR> if ( v8 . compareTo ( x7 ) == 1 )  <CR> v8 . display ( a7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 