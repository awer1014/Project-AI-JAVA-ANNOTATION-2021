 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String l3 , String A3 , String f5 , String p0 , String L4 ) {  <CR> super ( l3 , A3 , f5 , p0 , L4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String d6 , String f2 , String B7 , String r3 , String T8 ) {  <CR> super ( d6 , f2 , B7 , r3 , T8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String E3 , String W8 , Evaluation n ) {  <CR> this . senderAddr = E3 ;  <CR> this . receiverAddr = W8 ;  <CR> this . letter = n ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] q6 ) {  <CR> Evaluation J0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z3 = new Envelop ( "Taipei" , "Kaohsiung" , J0 ) ;  <CR> z3 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String f2 , String T3 , String p8 , String m8 , String u ) {  <CR> this . title = f2 ;  <CR> this . receiver = T3 ;  <CR> this . content = p8 ;  <CR> this . sender = m8 ;  <CR> this . date = u ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] N9 ) {  <CR> int N8 ;  <CR> for ( N8 = list . length - 1 ; N8 >= 0 ; N8 -- ) {  <CR> int I7 = N8 ;  <CR> Letter c2 = new Letter ( N8 ) ;  <CR> Letter e3 = new Letter ( I7 - 1 ) ;  <CR> if ( c2 . compareTo ( e3 ) == 1 )  <CR> c2 . display ( N8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int D2 ) {  <CR> this . x = D2 ;  <CR> }  <CR> public void display ( int N8 ) {  <CR> list [ N8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object i2 ) {  <CR> Letter L7 = ( Letter ) i2 ;  <CR> if ( this . x > L7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 