 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D2 , String Y0 , String I2 , String m3 , String W ) {  <CR> super ( D2 , Y0 , I2 , m3 , W ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String x3 , String l , String j2 , String f0 , String l8 ) {  <CR> super ( x3 , l , j2 , f0 , l8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] U9 ) {  <CR> Evaluation X3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop o1 = new Envelop ( "Taipei" , "Kaohsiung" , X3 ) ;  <CR> o1 . display ( ) ;  <CR> }  <CR> public Envelop ( String y5 , String E1 , Evaluation G1 ) {  <CR> this . senderAddr = y5 ;  <CR> this . receiverAddr = E1 ;  <CR> this . letter = G1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String k , String D9 , String t7 , String j8 , String r4 ) {  <CR> this . title = k ;  <CR> this . receiver = D9 ;  <CR> this . content = t7 ;  <CR> this . sender = j8 ;  <CR> this . date = r4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int s2 ) {  <CR> list [ s2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] b6 ) {  <CR> int s2 ;  <CR> for ( s2 = list . length - 1 ; s2 >= 0 ; s2 -- ) {  <CR> int U7 = s2 ;  <CR> Letter I8 = new Letter ( s2 ) ;  <CR> Letter a7 = new Letter ( U7 - 1 ) ;  <CR> if ( I8 . compareTo ( a7 ) == 1 )  <CR> I8 . display ( s2 ) ;  <CR> }  <CR> }  <CR> Letter ( int p5 ) {  <CR> this . x = p5 ;  <CR> }  <CR> public int compareTo ( Object E0 ) {  <CR> Letter e3 = ( Letter ) E0 ;  <CR> if ( this . x > e3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 