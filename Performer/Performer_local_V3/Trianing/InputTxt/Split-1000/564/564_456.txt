 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String v6 , String r , String W7 , String y8 , String c6 ) {  <CR> super ( v6 , r , W7 , y8 , c6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y8 , String J0 , String k , String w4 , String m ) {  <CR> super ( Y8 , J0 , k , w4 , m ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String k9 , String d1 , Evaluation I9 ) {  <CR> this . senderAddr = k9 ;  <CR> this . receiverAddr = d1 ;  <CR> this . letter = I9 ;  <CR> }  <CR> public static void main ( String [ ] Z9 ) {  <CR> Evaluation b9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop b7 = new Envelop ( "Taipei" , "Kaohsiung" , b9 ) ;  <CR> b7 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String D5 , String R0 , String W3 , String s3 , String X7 ) {  <CR> this . title = D5 ;  <CR> this . receiver = R0 ;  <CR> this . content = W3 ;  <CR> this . sender = s3 ;  <CR> this . date = X7 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object f6 ) {  <CR> Letter V3 = ( Letter ) f6 ;  <CR> if ( this . x > V3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int r2 ) {  <CR> this . x = r2 ;  <CR> }  <CR> public void display ( int W3 ) {  <CR> list [ W3 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] Y ) {  <CR> int W3 ;  <CR> for ( W3 = list . length - 1 ; W3 >= 0 ; W3 -- ) {  <CR> int b9 = W3 ;  <CR> Letter P = new Letter ( W3 ) ;  <CR> Letter K0 = new Letter ( b9 - 1 ) ;  <CR> if ( P . compareTo ( K0 ) == 1 )  <CR> P . display ( W3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 