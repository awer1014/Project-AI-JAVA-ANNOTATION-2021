 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String R8 , String Z5 , String L , String r3 , String l6 ) {  <CR> super ( R8 , Z5 , L , r3 , l6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String V3 , String k2 , String e4 , String X6 , String l3 ) {  <CR> super ( V3 , k2 , e4 , X6 , l3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] i ) {  <CR> Evaluation S7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z7 = new Envelop ( "Taipei" , "Kaohsiung" , S7 ) ;  <CR> z7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String z2 , String g0 , Evaluation A4 ) {  <CR> this . senderAddr = z2 ;  <CR> this . receiverAddr = g0 ;  <CR> this . letter = A4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String p5 , String b2 , String u6 , String r5 , String v2 ) {  <CR> this . title = p5 ;  <CR> this . receiver = b2 ;  <CR> this . content = u6 ;  <CR> this . sender = r5 ;  <CR> this . date = v2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object T4 ) {  <CR> Letter Q5 = ( Letter ) T4 ;  <CR> if ( this . x > Q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] K7 ) {  <CR> int v6 ;  <CR> for ( v6 = list . length - 1 ; v6 >= 0 ; v6 -- ) {  <CR> int R4 = v6 ;  <CR> Letter q1 = new Letter ( v6 ) ;  <CR> Letter S2 = new Letter ( R4 - 1 ) ;  <CR> if ( q1 . compareTo ( S2 ) == 1 )  <CR> q1 . display ( v6 ) ;  <CR> }  <CR> }  <CR> Letter ( int I0 ) {  <CR> this . x = I0 ;  <CR> }  <CR> public void display ( int v6 ) {  <CR> list [ v6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 