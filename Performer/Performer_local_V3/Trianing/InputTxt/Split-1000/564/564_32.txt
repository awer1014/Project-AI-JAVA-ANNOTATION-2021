 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x7 , String I7 , String H7 , String W5 , String M0 ) {  <CR> super ( x7 , I7 , H7 , W5 , M0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String n1 , String n7 , String s2 , String m0 , String F3 ) {  <CR> super ( n1 , n7 , s2 , m0 , F3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String n4 , String j9 , Evaluation v ) {  <CR> this . senderAddr = n4 ;  <CR> this . receiverAddr = j9 ;  <CR> this . letter = v ;  <CR> }  <CR> public static void main ( String [ ] Z3 ) {  <CR> Evaluation g7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v5 = new Envelop ( "Taipei" , "Kaohsiung" , g7 ) ;  <CR> v5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String W7 , String E7 , String X3 , String J9 , String V2 ) {  <CR> this . title = W7 ;  <CR> this . receiver = E7 ;  <CR> this . content = X3 ;  <CR> this . sender = J9 ;  <CR> this . date = V2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] S0 ) {  <CR> int T ;  <CR> for ( T = list . length - 1 ; T >= 0 ; T -- ) {  <CR> int h2 = T ;  <CR> Letter S = new Letter ( T ) ;  <CR> Letter e = new Letter ( h2 - 1 ) ;  <CR> if ( S . compareTo ( e ) == 1 )  <CR> S . display ( T ) ;  <CR> }  <CR> }  <CR> public void display ( int T ) {  <CR> list [ T ] . Display ( ) ;  <CR> }  <CR> Letter ( int y1 ) {  <CR> this . x = y1 ;  <CR> }  <CR> public int compareTo ( Object Y1 ) {  <CR> Letter n4 = ( Letter ) Y1 ;  <CR> if ( this . x > n4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 