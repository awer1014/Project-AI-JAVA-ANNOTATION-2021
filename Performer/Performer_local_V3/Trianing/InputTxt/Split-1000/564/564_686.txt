 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B9 , String T7 , String y0 , String l2 , String c4 ) {  <CR> super ( B9 , T7 , y0 , l2 , c4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y0 , String x9 , String v8 , String F2 , String K8 ) {  <CR> super ( Y0 , x9 , v8 , F2 , K8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String C8 , String U5 , Evaluation Y ) {  <CR> this . senderAddr = C8 ;  <CR> this . receiverAddr = U5 ;  <CR> this . letter = Y ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] S9 ) {  <CR> Evaluation X1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c6 = new Envelop ( "Taipei" , "Kaohsiung" , X1 ) ;  <CR> c6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String F9 , String s3 , String Q8 , String s6 , String b5 ) {  <CR> this . title = F9 ;  <CR> this . receiver = s3 ;  <CR> this . content = Q8 ;  <CR> this . sender = s6 ;  <CR> this . date = b5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Q1 ) {  <CR> this . x = Q1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int c3 ) {  <CR> list [ c3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object H9 ) {  <CR> Letter S7 = ( Letter ) H9 ;  <CR> if ( this . x > S7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Y4 ) {  <CR> int c3 ;  <CR> for ( c3 = list . length - 1 ; c3 >= 0 ; c3 -- ) {  <CR> int y2 = c3 ;  <CR> Letter N9 = new Letter ( c3 ) ;  <CR> Letter k2 = new Letter ( y2 - 1 ) ;  <CR> if ( N9 . compareTo ( k2 ) == 1 )  <CR> N9 . display ( c3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 