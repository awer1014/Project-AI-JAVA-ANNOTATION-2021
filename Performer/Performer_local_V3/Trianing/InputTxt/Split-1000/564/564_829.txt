 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String R4 , String A4 , String l4 , String R6 , String N7 ) {  <CR> super ( R4 , A4 , l4 , R6 , N7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y8 , String d2 , String d9 , String M3 , String K0 ) {  <CR> super ( y8 , d2 , d9 , M3 , K0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] W ) {  <CR> Evaluation A = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A6 = new Envelop ( "Taipei" , "Kaohsiung" , A ) ;  <CR> A6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C0 , String Q8 , Evaluation P4 ) {  <CR> this . senderAddr = C0 ;  <CR> this . receiverAddr = Q8 ;  <CR> this . letter = P4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String z1 , String Y8 , String K0 , String v , String o7 ) {  <CR> this . title = z1 ;  <CR> this . receiver = Y8 ;  <CR> this . content = K0 ;  <CR> this . sender = v ;  <CR> this . date = o7 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] x ) {  <CR> int t0 ;  <CR> for ( t0 = list . length - 1 ; t0 >= 0 ; t0 -- ) {  <CR> int t3 = t0 ;  <CR> Letter q7 = new Letter ( t0 ) ;  <CR> Letter q3 = new Letter ( t3 - 1 ) ;  <CR> if ( q7 . compareTo ( q3 ) == 1 )  <CR> q7 . display ( t0 ) ;  <CR> }  <CR> }  <CR> public void display ( int t0 ) {  <CR> list [ t0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object g5 ) {  <CR> Letter V3 = ( Letter ) g5 ;  <CR> if ( this . x > V3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int f ) {  <CR> this . x = f ;  <CR> }  <CR> }  <CR>  <EOC> 