 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k1 , String m9 , String H6 , String n7 , String V7 ) {  <CR> super ( k1 , m9 , H6 , n7 , V7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String T1 , String J3 , String S5 , String d4 , String p9 ) {  <CR> super ( T1 , J3 , S5 , d4 , p9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] b7 ) {  <CR> Evaluation J1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop l5 = new Envelop ( "Taipei" , "Kaohsiung" , J1 ) ;  <CR> l5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String C7 , String b4 , Evaluation N0 ) {  <CR> this . senderAddr = C7 ;  <CR> this . receiverAddr = b4 ;  <CR> this . letter = N0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String w9 , String s3 , String S2 , String z6 , String D0 ) {  <CR> this . title = w9 ;  <CR> this . receiver = s3 ;  <CR> this . content = S2 ;  <CR> this . sender = z6 ;  <CR> this . date = D0 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int d2 ) {  <CR> this . x = d2 ;  <CR> }  <CR> public static void main ( String [ ] q2 ) {  <CR> int w2 ;  <CR> for ( w2 = list . length - 1 ; w2 >= 0 ; w2 -- ) {  <CR> int M3 = w2 ;  <CR> Letter L3 = new Letter ( w2 ) ;  <CR> Letter B = new Letter ( M3 - 1 ) ;  <CR> if ( L3 . compareTo ( B ) == 1 )  <CR> L3 . display ( w2 ) ;  <CR> }  <CR> }  <CR> public void display ( int w2 ) {  <CR> list [ w2 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object c7 ) {  <CR> Letter W3 = ( Letter ) c7 ;  <CR> if ( this . x > W3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 