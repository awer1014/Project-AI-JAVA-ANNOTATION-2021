 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N2 , String w6 , String I8 , String D2 , String L2 ) {  <CR> super ( N2 , w6 , I8 , D2 , L2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String t8 , String M3 , String Z7 , String I5 , String D9 ) {  <CR> super ( t8 , M3 , Z7 , I5 , D9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String f6 , String y1 , Evaluation M3 ) {  <CR> this . senderAddr = f6 ;  <CR> this . receiverAddr = y1 ;  <CR> this . letter = M3 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] f1 ) {  <CR> Evaluation n1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g4 = new Envelop ( "Taipei" , "Kaohsiung" , n1 ) ;  <CR> g4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String y9 , String g4 , String H8 , String e9 , String a8 ) {  <CR> this . title = y9 ;  <CR> this . receiver = g4 ;  <CR> this . content = H8 ;  <CR> this . sender = e9 ;  <CR> this . date = a8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object S1 ) {  <CR> Letter R6 = ( Letter ) S1 ;  <CR> if ( this . x > R6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int R9 ) {  <CR> this . x = R9 ;  <CR> }  <CR> public void display ( int O5 ) {  <CR> list [ O5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] t9 ) {  <CR> int O5 ;  <CR> for ( O5 = list . length - 1 ; O5 >= 0 ; O5 -- ) {  <CR> int K4 = O5 ;  <CR> Letter b8 = new Letter ( O5 ) ;  <CR> Letter t1 = new Letter ( K4 - 1 ) ;  <CR> if ( b8 . compareTo ( t1 ) == 1 )  <CR> b8 . display ( O5 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 