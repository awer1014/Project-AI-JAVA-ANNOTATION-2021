 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String N3 , String w , String q1 , String Z5 , String S0 ) {  <CR> super ( N3 , w , q1 , Z5 , S0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String r0 , String L6 , String N4 , String T5 , String K1 ) {  <CR> super ( r0 , L6 , N4 , T5 , K1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] B4 ) {  <CR> Evaluation F6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c4 = new Envelop ( "Taipei" , "Kaohsiung" , F6 ) ;  <CR> c4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Y7 , String f5 , Evaluation p1 ) {  <CR> this . senderAddr = Y7 ;  <CR> this . receiverAddr = f5 ;  <CR> this . letter = p1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String B2 , String P9 , String j4 , String T0 , String d5 ) {  <CR> this . title = B2 ;  <CR> this . receiver = P9 ;  <CR> this . content = j4 ;  <CR> this . sender = T0 ;  <CR> this . date = d5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] m4 ) {  <CR> int C1 ;  <CR> for ( C1 = list . length - 1 ; C1 >= 0 ; C1 -- ) {  <CR> int O7 = C1 ;  <CR> Letter U3 = new Letter ( C1 ) ;  <CR> Letter k1 = new Letter ( O7 - 1 ) ;  <CR> if ( U3 . compareTo ( k1 ) == 1 )  <CR> U3 . display ( C1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object m3 ) {  <CR> Letter r5 = ( Letter ) m3 ;  <CR> if ( this . x > r5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int N9 ) {  <CR> this . x = N9 ;  <CR> }  <CR> public void display ( int C1 ) {  <CR> list [ C1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 