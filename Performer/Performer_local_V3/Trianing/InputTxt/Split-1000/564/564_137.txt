 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Y6 , String u3 , String H1 , String W , String C5 ) {  <CR> super ( Y6 , u3 , H1 , W , C5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String m1 , String d , String E5 , String O4 , String w2 ) {  <CR> super ( m1 , d , E5 , O4 , w2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String p2 , String g0 , Evaluation n0 ) {  <CR> this . senderAddr = p2 ;  <CR> this . receiverAddr = g0 ;  <CR> this . letter = n0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O5 ) {  <CR> Evaluation U9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p9 = new Envelop ( "Taipei" , "Kaohsiung" , U9 ) ;  <CR> p9 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String d7 , String x5 , String Y4 , String d8 , String W1 ) {  <CR> this . title = d7 ;  <CR> this . receiver = x5 ;  <CR> this . content = Y4 ;  <CR> this . sender = d8 ;  <CR> this . date = W1 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int N7 ) {  <CR> list [ N7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object t2 ) {  <CR> Letter n0 = ( Letter ) t2 ;  <CR> if ( this . x > n0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] u4 ) {  <CR> int N7 ;  <CR> for ( N7 = list . length - 1 ; N7 >= 0 ; N7 -- ) {  <CR> int G5 = N7 ;  <CR> Letter T8 = new Letter ( N7 ) ;  <CR> Letter a0 = new Letter ( G5 - 1 ) ;  <CR> if ( T8 . compareTo ( a0 ) == 1 )  <CR> T8 . display ( N7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int S5 ) {  <CR> this . x = S5 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 