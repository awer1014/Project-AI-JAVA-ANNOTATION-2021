 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String F7 , String o1 , String p9 , String a4 , String b0 ) {  <CR> super ( F7 , o1 , p9 , a4 , b0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String R0 , String Z6 , String R9 , String F , String K2 ) {  <CR> super ( R0 , Z6 , R9 , F , K2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String x , String W3 , Evaluation J9 ) {  <CR> this . senderAddr = x ;  <CR> this . receiverAddr = W3 ;  <CR> this . letter = J9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w4 ) {  <CR> Evaluation l7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m9 = new Envelop ( "Taipei" , "Kaohsiung" , l7 ) ;  <CR> m9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String a1 , String U8 , String j , String G6 , String Z3 ) {  <CR> this . title = a1 ;  <CR> this . receiver = U8 ;  <CR> this . content = j ;  <CR> this . sender = G6 ;  <CR> this . date = Z3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int B4 ) {  <CR> this . x = B4 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] j5 ) {  <CR> int E3 ;  <CR> for ( E3 = list . length - 1 ; E3 >= 0 ; E3 -- ) {  <CR> int k7 = E3 ;  <CR> Letter M5 = new Letter ( E3 ) ;  <CR> Letter Y4 = new Letter ( k7 - 1 ) ;  <CR> if ( M5 . compareTo ( Y4 ) == 1 )  <CR> M5 . display ( E3 ) ;  <CR> }  <CR> }  <CR> public void display ( int E3 ) {  <CR> list [ E3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object L7 ) {  <CR> Letter W6 = ( Letter ) L7 ;  <CR> if ( this . x > W6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 