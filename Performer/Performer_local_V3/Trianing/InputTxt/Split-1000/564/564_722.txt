 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d4 , String d8 , String b4 , String y2 , String p5 ) {  <CR> super ( d4 , d8 , b4 , y2 , p5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G5 , String c1 , String z8 , String h6 , String w6 ) {  <CR> super ( G5 , c1 , z8 , h6 , w6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String v6 , String m9 , Evaluation c8 ) {  <CR> this . senderAddr = v6 ;  <CR> this . receiverAddr = m9 ;  <CR> this . letter = c8 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k3 ) {  <CR> Evaluation t8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop N4 = new Envelop ( "Taipei" , "Kaohsiung" , t8 ) ;  <CR> N4 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String E7 , String d , String B9 , String V5 , String m6 ) {  <CR> this . title = E7 ;  <CR> this . receiver = d ;  <CR> this . content = B9 ;  <CR> this . sender = V5 ;  <CR> this . date = m6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] C6 ) {  <CR> int t ;  <CR> for ( t = list . length - 1 ; t >= 0 ; t -- ) {  <CR> int z6 = t ;  <CR> Letter C9 = new Letter ( t ) ;  <CR> Letter t3 = new Letter ( z6 - 1 ) ;  <CR> if ( C9 . compareTo ( t3 ) == 1 )  <CR> C9 . display ( t ) ;  <CR> }  <CR> }  <CR> Letter ( int X ) {  <CR> this . x = X ;  <CR> }  <CR> public void display ( int t ) {  <CR> list [ t ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object k6 ) {  <CR> Letter A7 = ( Letter ) k6 ;  <CR> if ( this . x > A7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 