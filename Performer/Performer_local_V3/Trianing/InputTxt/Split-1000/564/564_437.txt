 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String h6 , String B1 , String A , String x2 , String N7 ) {  <CR> super ( h6 , B1 , A , x2 , N7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String E2 , String b1 , String Q8 , String y1 , String s2 ) {  <CR> super ( E2 , b1 , Q8 , y1 , s2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String H8 , String Q9 , Evaluation n3 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = Q9 ;  <CR> this . letter = n3 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] j3 ) {  <CR> Evaluation f3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z6 = new Envelop ( "Taipei" , "Kaohsiung" , f3 ) ;  <CR> Z6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String N , String M , String m2 , String b4 , String w ) {  <CR> this . title = N ;  <CR> this . receiver = M ;  <CR> this . content = m2 ;  <CR> this . sender = b4 ;  <CR> this . date = w ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int m4 ) {  <CR> list [ m4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] M5 ) {  <CR> int m4 ;  <CR> for ( m4 = list . length - 1 ; m4 >= 0 ; m4 -- ) {  <CR> int a0 = m4 ;  <CR> Letter L2 = new Letter ( m4 ) ;  <CR> Letter e1 = new Letter ( a0 - 1 ) ;  <CR> if ( L2 . compareTo ( e1 ) == 1 )  <CR> L2 . display ( m4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object T4 ) {  <CR> Letter Q5 = ( Letter ) T4 ;  <CR> if ( this . x > Q5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int s8 ) {  <CR> this . x = s8 ;  <CR> }  <CR> }  <CR>  <EOC> 