 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M , String q0 , String j , String x9 , String u3 ) {  <CR> super ( M , q0 , j , x9 , u3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String t2 , String M9 , String D1 , String q7 , String m9 ) {  <CR> super ( t2 , M9 , D1 , q7 , m9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String Q0 , String E5 , Evaluation O0 ) {  <CR> this . senderAddr = Q0 ;  <CR> this . receiverAddr = E5 ;  <CR> this . letter = O0 ;  <CR> }  <CR> public static void main ( String [ ] g1 ) {  <CR> Evaluation r2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop D5 = new Envelop ( "Taipei" , "Kaohsiung" , r2 ) ;  <CR> D5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String G3 , String z2 , String D6 , String L4 , String X1 ) {  <CR> this . title = G3 ;  <CR> this . receiver = z2 ;  <CR> this . content = D6 ;  <CR> this . sender = L4 ;  <CR> this . date = X1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] V7 ) {  <CR> int w3 ;  <CR> for ( w3 = list . length - 1 ; w3 >= 0 ; w3 -- ) {  <CR> int P0 = w3 ;  <CR> Letter Z3 = new Letter ( w3 ) ;  <CR> Letter U8 = new Letter ( P0 - 1 ) ;  <CR> if ( Z3 . compareTo ( U8 ) == 1 )  <CR> Z3 . display ( w3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object R0 ) {  <CR> Letter T4 = ( Letter ) R0 ;  <CR> if ( this . x > T4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int w3 ) {  <CR> list [ w3 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int I2 ) {  <CR> this . x = I2 ;  <CR> }  <CR> }  <CR>  <EOC> 