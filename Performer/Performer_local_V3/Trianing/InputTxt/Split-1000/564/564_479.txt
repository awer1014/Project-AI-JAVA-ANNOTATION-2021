 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T0 , String o4 , String t , String o1 , String m8 ) {  <CR> super ( T0 , o4 , t , o1 , m8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String J5 , String M0 , String M , String V0 , String b1 ) {  <CR> super ( J5 , M0 , M , V0 , b1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] t ) {  <CR> Evaluation a1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B8 = new Envelop ( "Taipei" , "Kaohsiung" , a1 ) ;  <CR> B8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String q9 , String u8 , Evaluation X0 ) {  <CR> this . senderAddr = q9 ;  <CR> this . receiverAddr = u8 ;  <CR> this . letter = X0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String A6 , String Z6 , String E , String q5 , String s8 ) {  <CR> this . title = A6 ;  <CR> this . receiver = Z6 ;  <CR> this . content = E ;  <CR> this . sender = q5 ;  <CR> this . date = s8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] d5 ) {  <CR> int V ;  <CR> for ( V = list . length - 1 ; V >= 0 ; V -- ) {  <CR> int k = V ;  <CR> Letter u8 = new Letter ( V ) ;  <CR> Letter o = new Letter ( k - 1 ) ;  <CR> if ( u8 . compareTo ( o ) == 1 )  <CR> u8 . display ( V ) ;  <CR> }  <CR> }  <CR> Letter ( int X2 ) {  <CR> this . x = X2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int V ) {  <CR> list [ V ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object T2 ) {  <CR> Letter n4 = ( Letter ) T2 ;  <CR> if ( this . x > n4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 