 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String o5 , String P5 , String X1 , String V1 , String m5 ) {  <CR> super ( o5 , P5 , X1 , V1 , m5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R6 , String H2 , String M3 , String K7 , String o ) {  <CR> super ( R6 , H2 , M3 , K7 , o ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] r6 ) {  <CR> Evaluation I9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t0 = new Envelop ( "Taipei" , "Kaohsiung" , I9 ) ;  <CR> t0 . display ( ) ;  <CR> }  <CR> public Envelop ( String f9 , String g7 , Evaluation Q8 ) {  <CR> this . senderAddr = f9 ;  <CR> this . receiverAddr = g7 ;  <CR> this . letter = Q8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String u0 , String E4 , String H , String z7 , String g3 ) {  <CR> this . title = u0 ;  <CR> this . receiver = E4 ;  <CR> this . content = H ;  <CR> this . sender = z7 ;  <CR> this . date = g3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int j5 ) {  <CR> this . x = j5 ;  <CR> }  <CR> public static void main ( String [ ] b1 ) {  <CR> int V3 ;  <CR> for ( V3 = list . length - 1 ; V3 >= 0 ; V3 -- ) {  <CR> int A5 = V3 ;  <CR> Letter b5 = new Letter ( V3 ) ;  <CR> Letter u4 = new Letter ( A5 - 1 ) ;  <CR> if ( b5 . compareTo ( u4 ) == 1 )  <CR> b5 . display ( V3 ) ;  <CR> }  <CR> }  <CR> public void display ( int V3 ) {  <CR> list [ V3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object b2 ) {  <CR> Letter r8 = ( Letter ) b2 ;  <CR> if ( this . x > r8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 