 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String J1 , String h5 , String e5 , String Z9 , String U2 ) {  <CR> super ( J1 , h5 , e5 , Z9 , U2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String d6 , String Z2 , String z8 , String b0 , String X ) {  <CR> super ( d6 , Z2 , z8 , b0 , X ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] N2 ) {  <CR> Evaluation O2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop O8 = new Envelop ( "Taipei" , "Kaohsiung" , O2 ) ;  <CR> O8 . display ( ) ;  <CR> }  <CR> public Envelop ( String L0 , String J , Evaluation N1 ) {  <CR> this . senderAddr = L0 ;  <CR> this . receiverAddr = J ;  <CR> this . letter = N1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String f3 , String v4 , String Q3 , String j2 , String i6 ) {  <CR> this . title = f3 ;  <CR> this . receiver = v4 ;  <CR> this . content = Q3 ;  <CR> this . sender = j2 ;  <CR> this . date = i6 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int h5 ) {  <CR> this . x = h5 ;  <CR> }  <CR> public void display ( int F5 ) {  <CR> list [ F5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I1 ) {  <CR> int F5 ;  <CR> for ( F5 = list . length - 1 ; F5 >= 0 ; F5 -- ) {  <CR> int l = F5 ;  <CR> Letter S2 = new Letter ( F5 ) ;  <CR> Letter W0 = new Letter ( l - 1 ) ;  <CR> if ( S2 . compareTo ( W0 ) == 1 )  <CR> S2 . display ( F5 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object o1 ) {  <CR> Letter B2 = ( Letter ) o1 ;  <CR> if ( this . x > B2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 