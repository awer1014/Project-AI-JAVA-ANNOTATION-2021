 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String D4 , String i6 , String x5 , String g3 , String z2 ) {  <CR> super ( D4 , i6 , x5 , g3 , z2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F5 , String P6 , String W4 , String L , String y4 ) {  <CR> super ( F5 , P6 , W4 , L , y4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String t3 , String O6 , Evaluation F7 ) {  <CR> this . senderAddr = t3 ;  <CR> this . receiverAddr = O6 ;  <CR> this . letter = F7 ;  <CR> }  <CR> public static void main ( String [ ] A1 ) {  <CR> Evaluation g1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d4 = new Envelop ( "Taipei" , "Kaohsiung" , g1 ) ;  <CR> d4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String g5 , String B7 , String S6 , String Q5 , String j8 ) {  <CR> this . title = g5 ;  <CR> this . receiver = B7 ;  <CR> this . content = S6 ;  <CR> this . sender = Q5 ;  <CR> this . date = j8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] S3 ) {  <CR> int k3 ;  <CR> for ( k3 = list . length - 1 ; k3 >= 0 ; k3 -- ) {  <CR> int A4 = k3 ;  <CR> Letter U = new Letter ( k3 ) ;  <CR> Letter E = new Letter ( A4 - 1 ) ;  <CR> if ( U . compareTo ( E ) == 1 )  <CR> U . display ( k3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object i ) {  <CR> Letter N4 = ( Letter ) i ;  <CR> if ( this . x > N4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int W ) {  <CR> this . x = W ;  <CR> }  <CR> public void display ( int k3 ) {  <CR> list [ k3 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 