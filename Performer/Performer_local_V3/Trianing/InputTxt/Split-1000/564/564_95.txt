 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String P1 , String o2 , String l , String S9 , String D7 ) {  <CR> super ( P1 , o2 , l , S9 , D7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R8 , String R0 , String u3 , String i0 , String U1 ) {  <CR> super ( R8 , R0 , u3 , i0 , U1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String b7 , String H3 , Evaluation C8 ) {  <CR> this . senderAddr = b7 ;  <CR> this . receiverAddr = H3 ;  <CR> this . letter = C8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] r6 ) {  <CR> Evaluation l = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y1 = new Envelop ( "Taipei" , "Kaohsiung" , l ) ;  <CR> Y1 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String k1 , String Z6 , String z3 , String M0 , String x ) {  <CR> this . title = k1 ;  <CR> this . receiver = Z6 ;  <CR> this . content = z3 ;  <CR> this . sender = M0 ;  <CR> this . date = x ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Q ) {  <CR> this . x = Q ;  <CR> }  <CR> public static void main ( String [ ] w7 ) {  <CR> int L8 ;  <CR> for ( L8 = list . length - 1 ; L8 >= 0 ; L8 -- ) {  <CR> int w5 = L8 ;  <CR> Letter o7 = new Letter ( L8 ) ;  <CR> Letter X2 = new Letter ( w5 - 1 ) ;  <CR> if ( o7 . compareTo ( X2 ) == 1 )  <CR> o7 . display ( L8 ) ;  <CR> }  <CR> }  <CR> public void display ( int L8 ) {  <CR> list [ L8 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object W0 ) {  <CR> Letter o2 = ( Letter ) W0 ;  <CR> if ( this . x > o2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 