 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String I4 , String T3 , String j4 , String T1 , String g9 ) {  <CR> super ( I4 , T3 , j4 , T1 , g9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e1 , String b7 , String r1 , String C9 , String h5 ) {  <CR> super ( e1 , b7 , r1 , C9 , h5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] o1 ) {  <CR> Evaluation g4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u7 = new Envelop ( "Taipei" , "Kaohsiung" , g4 ) ;  <CR> u7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String o9 , String u2 , Evaluation H9 ) {  <CR> this . senderAddr = o9 ;  <CR> this . receiverAddr = u2 ;  <CR> this . letter = H9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String T , String T4 , String O7 , String B6 , String r5 ) {  <CR> this . title = T ;  <CR> this . receiver = T4 ;  <CR> this . content = O7 ;  <CR> this . sender = B6 ;  <CR> this . date = r5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object O8 ) {  <CR> Letter H1 = ( Letter ) O8 ;  <CR> if ( this . x > H1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] N5 ) {  <CR> int A6 ;  <CR> for ( A6 = list . length - 1 ; A6 >= 0 ; A6 -- ) {  <CR> int V2 = A6 ;  <CR> Letter B0 = new Letter ( A6 ) ;  <CR> Letter t4 = new Letter ( V2 - 1 ) ;  <CR> if ( B0 . compareTo ( t4 ) == 1 )  <CR> B0 . display ( A6 ) ;  <CR> }  <CR> }  <CR> public void display ( int A6 ) {  <CR> list [ A6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int F8 ) {  <CR> this . x = F8 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 