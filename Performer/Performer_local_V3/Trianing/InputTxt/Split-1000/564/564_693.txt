 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u7 , String x4 , String e3 , String E3 , String Z4 ) {  <CR> super ( u7 , x4 , e3 , E3 , Z4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G , String M1 , String f2 , String m8 , String b7 ) {  <CR> super ( G , M1 , f2 , m8 , b7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] b1 ) {  <CR> Evaluation P3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y5 = new Envelop ( "Taipei" , "Kaohsiung" , P3 ) ;  <CR> Y5 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String I5 , String E9 , Evaluation X2 ) {  <CR> this . senderAddr = I5 ;  <CR> this . receiverAddr = E9 ;  <CR> this . letter = X2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String q3 , String v7 , String J2 , String E7 , String f0 ) {  <CR> this . title = q3 ;  <CR> this . receiver = v7 ;  <CR> this . content = J2 ;  <CR> this . sender = E7 ;  <CR> this . date = f0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object o2 ) {  <CR> Letter X0 = ( Letter ) o2 ;  <CR> if ( this . x > X0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int O2 ) {  <CR> this . x = O2 ;  <CR> }  <CR> public void display ( int l6 ) {  <CR> list [ l6 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] Q ) {  <CR> int l6 ;  <CR> for ( l6 = list . length - 1 ; l6 >= 0 ; l6 -- ) {  <CR> int a2 = l6 ;  <CR> Letter T9 = new Letter ( l6 ) ;  <CR> Letter G8 = new Letter ( a2 - 1 ) ;  <CR> if ( T9 . compareTo ( G8 ) == 1 )  <CR> T9 . display ( l6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 