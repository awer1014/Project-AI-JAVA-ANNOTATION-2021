 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N6 , String e , String L , String t0 , String U2 ) {  <CR> super ( N6 , e , L , t0 , U2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Q2 , String I2 , String Z0 , String q4 , String X9 ) {  <CR> super ( Q2 , I2 , Z0 , q4 , X9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String w8 , String r5 , Evaluation k8 ) {  <CR> this . senderAddr = w8 ;  <CR> this . receiverAddr = r5 ;  <CR> this . letter = k8 ;  <CR> }  <CR> public static void main ( String [ ] m8 ) {  <CR> Evaluation A6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop B5 = new Envelop ( "Taipei" , "Kaohsiung" , A6 ) ;  <CR> B5 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String w3 , String t0 , String x7 , String g4 , String F7 ) {  <CR> this . title = w3 ;  <CR> this . receiver = t0 ;  <CR> this . content = x7 ;  <CR> this . sender = g4 ;  <CR> this . date = F7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] k9 ) {  <CR> int o9 ;  <CR> for ( o9 = list . length - 1 ; o9 >= 0 ; o9 -- ) {  <CR> int Z9 = o9 ;  <CR> Letter W1 = new Letter ( o9 ) ;  <CR> Letter e4 = new Letter ( Z9 - 1 ) ;  <CR> if ( W1 . compareTo ( e4 ) == 1 )  <CR> W1 . display ( o9 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object N0 ) {  <CR> Letter h1 = ( Letter ) N0 ;  <CR> if ( this . x > h1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int o9 ) {  <CR> list [ o9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int p8 ) {  <CR> this . x = p8 ;  <CR> }  <CR> }  <CR>  <EOC> 