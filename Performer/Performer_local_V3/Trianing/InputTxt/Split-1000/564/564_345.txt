 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String h8 , String V7 , String E1 , String V5 , String u8 ) {  <CR> super ( h8 , V7 , E1 , V5 , u8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E3 , String u1 , String f8 , String K2 , String q9 ) {  <CR> super ( E3 , u1 , f8 , K2 , q9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] g ) {  <CR> Evaluation M1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L2 = new Envelop ( "Taipei" , "Kaohsiung" , M1 ) ;  <CR> L2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String M4 , String b6 , Evaluation x1 ) {  <CR> this . senderAddr = M4 ;  <CR> this . receiverAddr = b6 ;  <CR> this . letter = x1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String z8 , String p3 , String s6 , String M6 , String G4 ) {  <CR> this . title = z8 ;  <CR> this . receiver = p3 ;  <CR> this . content = s6 ;  <CR> this . sender = M6 ;  <CR> this . date = G4 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object H0 ) {  <CR> Letter R2 = ( Letter ) H0 ;  <CR> if ( this . x > R2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int Q7 ) {  <CR> this . x = Q7 ;  <CR> }  <CR> public void display ( int U0 ) {  <CR> list [ U0 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] g2 ) {  <CR> int U0 ;  <CR> for ( U0 = list . length - 1 ; U0 >= 0 ; U0 -- ) {  <CR> int b9 = U0 ;  <CR> Letter s6 = new Letter ( U0 ) ;  <CR> Letter m9 = new Letter ( b9 - 1 ) ;  <CR> if ( s6 . compareTo ( m9 ) == 1 )  <CR> s6 . display ( U0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 