 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String E , String s7 , String n9 , String D5 , String C0 ) {  <CR> super ( E , s7 , n9 , D5 , C0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String z9 , String l8 , String w3 , String P5 , String R7 ) {  <CR> super ( z9 , l8 , w3 , P5 , R7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] j5 ) {  <CR> Evaluation B1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p3 = new Envelop ( "Taipei" , "Kaohsiung" , B1 ) ;  <CR> p3 . display ( ) ;  <CR> }  <CR> public Envelop ( String F8 , String i , Evaluation t6 ) {  <CR> this . senderAddr = F8 ;  <CR> this . receiverAddr = i ;  <CR> this . letter = t6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String m7 , String u2 , String e7 , String w9 , String y3 ) {  <CR> this . title = m7 ;  <CR> this . receiver = u2 ;  <CR> this . content = e7 ;  <CR> this . sender = w9 ;  <CR> this . date = y3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object X2 ) {  <CR> Letter F0 = ( Letter ) X2 ;  <CR> if ( this . x > F0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] Y2 ) {  <CR> int U4 ;  <CR> for ( U4 = list . length - 1 ; U4 >= 0 ; U4 -- ) {  <CR> int k2 = U4 ;  <CR> Letter n0 = new Letter ( U4 ) ;  <CR> Letter q9 = new Letter ( k2 - 1 ) ;  <CR> if ( n0 . compareTo ( q9 ) == 1 )  <CR> n0 . display ( U4 ) ;  <CR> }  <CR> }  <CR> public void display ( int U4 ) {  <CR> list [ U4 ] . Display ( ) ;  <CR> }  <CR> Letter ( int M7 ) {  <CR> this . x = M7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 