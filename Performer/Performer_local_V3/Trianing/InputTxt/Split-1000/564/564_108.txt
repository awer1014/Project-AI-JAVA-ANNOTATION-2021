 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M1 , String k6 , String H8 , String U6 , String z7 ) {  <CR> super ( M1 , k6 , H8 , U6 , z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String G5 , String h4 , String u2 , String m9 , String L7 ) {  <CR> super ( G5 , h4 , u2 , m9 , L7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] e1 ) {  <CR> Evaluation G9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H9 = new Envelop ( "Taipei" , "Kaohsiung" , G9 ) ;  <CR> H9 . display ( ) ;  <CR> }  <CR> public Envelop ( String C3 , String l3 , Evaluation p9 ) {  <CR> this . senderAddr = C3 ;  <CR> this . receiverAddr = l3 ;  <CR> this . letter = p9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String h8 , String Q , String M5 , String S9 , String t9 ) {  <CR> this . title = h8 ;  <CR> this . receiver = Q ;  <CR> this . content = M5 ;  <CR> this . sender = S9 ;  <CR> this . date = t9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object b ) {  <CR> Letter X7 = ( Letter ) b ;  <CR> if ( this . x > X7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] K ) {  <CR> int h ;  <CR> for ( h = list . length - 1 ; h >= 0 ; h -- ) {  <CR> int V5 = h ;  <CR> Letter V6 = new Letter ( h ) ;  <CR> Letter w9 = new Letter ( V5 - 1 ) ;  <CR> if ( V6 . compareTo ( w9 ) == 1 )  <CR> V6 . display ( h ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int h ) {  <CR> list [ h ] . Display ( ) ;  <CR> }  <CR> Letter ( int Y2 ) {  <CR> this . x = Y2 ;  <CR> }  <CR> }  <CR>  <EOC> 