 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String m7 , String Y6 , String Y2 , String r5 , String o5 ) {  <CR> super ( m7 , Y6 , Y2 , r5 , o5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String d7 , String K4 , String q , String Q3 , String l7 ) {  <CR> super ( d7 , K4 , q , Q3 , l7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String m4 , String K8 , Evaluation x8 ) {  <CR> this . senderAddr = m4 ;  <CR> this . receiverAddr = K8 ;  <CR> this . letter = x8 ;  <CR> }  <CR> public static void main ( String [ ] t2 ) {  <CR> Evaluation Z4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j7 = new Envelop ( "Taipei" , "Kaohsiung" , Z4 ) ;  <CR> j7 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s2 , String K9 , String K6 , String Z3 , String o3 ) {  <CR> this . title = s2 ;  <CR> this . receiver = K9 ;  <CR> this . content = K6 ;  <CR> this . sender = Z3 ;  <CR> this . date = o3 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] u8 ) {  <CR> int G6 ;  <CR> for ( G6 = list . length - 1 ; G6 >= 0 ; G6 -- ) {  <CR> int W6 = G6 ;  <CR> Letter S1 = new Letter ( G6 ) ;  <CR> Letter A = new Letter ( W6 - 1 ) ;  <CR> if ( S1 . compareTo ( A ) == 1 )  <CR> S1 . display ( G6 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object T0 ) {  <CR> Letter w7 = ( Letter ) T0 ;  <CR> if ( this . x > w7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int V1 ) {  <CR> this . x = V1 ;  <CR> }  <CR> public void display ( int G6 ) {  <CR> list [ G6 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 