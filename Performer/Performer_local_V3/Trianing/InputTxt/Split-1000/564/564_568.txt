 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String c2 , String X1 , String e8 , String t9 , String S8 ) {  <CR> super ( c2 , X1 , e8 , t9 , S8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E7 , String N8 , String P5 , String r9 , String h0 ) {  <CR> super ( E7 , N8 , P5 , r9 , h0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String X7 , String s1 , Evaluation q6 ) {  <CR> this . senderAddr = X7 ;  <CR> this . receiverAddr = s1 ;  <CR> this . letter = q6 ;  <CR> }  <CR> public static void main ( String [ ] E5 ) {  <CR> Evaluation I2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Y9 = new Envelop ( "Taipei" , "Kaohsiung" , I2 ) ;  <CR> Y9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String P1 , String U , String y0 , String f2 , String J8 ) {  <CR> this . title = P1 ;  <CR> this . receiver = U ;  <CR> this . content = y0 ;  <CR> this . sender = f2 ;  <CR> this . date = J8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object b0 ) {  <CR> Letter K4 = ( Letter ) b0 ;  <CR> if ( this . x > K4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] l1 ) {  <CR> int c ;  <CR> for ( c = list . length - 1 ; c >= 0 ; c -- ) {  <CR> int F5 = c ;  <CR> Letter P0 = new Letter ( c ) ;  <CR> Letter c7 = new Letter ( F5 - 1 ) ;  <CR> if ( P0 . compareTo ( c7 ) == 1 )  <CR> P0 . display ( c ) ;  <CR> }  <CR> }  <CR> public void display ( int c ) {  <CR> list [ c ] . Display ( ) ;  <CR> }  <CR> Letter ( int e4 ) {  <CR> this . x = e4 ;  <CR> }  <CR> }  <CR>  <EOC> 