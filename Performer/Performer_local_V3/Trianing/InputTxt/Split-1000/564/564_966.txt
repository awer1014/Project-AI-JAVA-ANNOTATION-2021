 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String j6 , String B7 , String l4 , String P7 , String o2 ) {  <CR> super ( j6 , B7 , l4 , P7 , o2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Y , String W1 , String O8 , String n2 , String I2 ) {  <CR> super ( Y , W1 , O8 , n2 , I2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d0 ) {  <CR> Evaluation O4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v3 = new Envelop ( "Taipei" , "Kaohsiung" , O4 ) ;  <CR> v3 . display ( ) ;  <CR> }  <CR> public Envelop ( String U2 , String O , Evaluation V1 ) {  <CR> this . senderAddr = U2 ;  <CR> this . receiverAddr = O ;  <CR> this . letter = V1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String p7 , String Z9 , String v0 , String D6 , String A5 ) {  <CR> this . title = p7 ;  <CR> this . receiver = Z9 ;  <CR> this . content = v0 ;  <CR> this . sender = D6 ;  <CR> this . date = A5 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object W ) {  <CR> Letter R2 = ( Letter ) W ;  <CR> if ( this . x > R2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int r3 ) {  <CR> list [ r3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> int r3 ;  <CR> for ( r3 = list . length - 1 ; r3 >= 0 ; r3 -- ) {  <CR> int P8 = r3 ;  <CR> Letter X5 = new Letter ( r3 ) ;  <CR> Letter U9 = new Letter ( P8 - 1 ) ;  <CR> if ( X5 . compareTo ( U9 ) == 1 )  <CR> X5 . display ( r3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int i2 ) {  <CR> this . x = i2 ;  <CR> }  <CR> }  <CR>  <EOC> 