 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String X2 , String p2 , String q8 , String q9 , String M9 ) {  <CR> super ( X2 , p2 , q8 , q9 , M9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f , String n4 , String N , String I4 , String t1 ) {  <CR> super ( f , n4 , N , I4 , t1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] L7 ) {  <CR> Evaluation e1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop L6 = new Envelop ( "Taipei" , "Kaohsiung" , e1 ) ;  <CR> L6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String C4 , String o4 , Evaluation N ) {  <CR> this . senderAddr = C4 ;  <CR> this . receiverAddr = o4 ;  <CR> this . letter = N ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String C6 , String s8 , String j8 , String L1 , String u0 ) {  <CR> this . title = C6 ;  <CR> this . receiver = s8 ;  <CR> this . content = j8 ;  <CR> this . sender = L1 ;  <CR> this . date = u0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] P3 ) {  <CR> int c6 ;  <CR> for ( c6 = list . length - 1 ; c6 >= 0 ; c6 -- ) {  <CR> int A9 = c6 ;  <CR> Letter z6 = new Letter ( c6 ) ;  <CR> Letter R8 = new Letter ( A9 - 1 ) ;  <CR> if ( z6 . compareTo ( R8 ) == 1 )  <CR> z6 . display ( c6 ) ;  <CR> }  <CR> }  <CR> public void display ( int c6 ) {  <CR> list [ c6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int Z2 ) {  <CR> this . x = Z2 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object c3 ) {  <CR> Letter i7 = ( Letter ) c3 ;  <CR> if ( this . x > i7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 