 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String U , String f4 , String P3 , String t2 , String h4 ) {  <CR> super ( U , f4 , P3 , t2 , h4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E2 , String j , String K5 , String C1 , String h8 ) {  <CR> super ( E2 , j , K5 , C1 , h8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] r4 ) {  <CR> Evaluation Q2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Q3 = new Envelop ( "Taipei" , "Kaohsiung" , Q2 ) ;  <CR> Q3 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String f2 , String K3 , Evaluation Z5 ) {  <CR> this . senderAddr = f2 ;  <CR> this . receiverAddr = K3 ;  <CR> this . letter = Z5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String u2 , String J0 , String C2 , String I5 , String j1 ) {  <CR> this . title = u2 ;  <CR> this . receiver = J0 ;  <CR> this . content = C2 ;  <CR> this . sender = I5 ;  <CR> this . date = j1 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object r6 ) {  <CR> Letter W6 = ( Letter ) r6 ;  <CR> if ( this . x > W6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int i1 ) {  <CR> list [ i1 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] G1 ) {  <CR> int i1 ;  <CR> for ( i1 = list . length - 1 ; i1 >= 0 ; i1 -- ) {  <CR> int l5 = i1 ;  <CR> Letter b0 = new Letter ( i1 ) ;  <CR> Letter h7 = new Letter ( l5 - 1 ) ;  <CR> if ( b0 . compareTo ( h7 ) == 1 )  <CR> b0 . display ( i1 ) ;  <CR> }  <CR> }  <CR> Letter ( int F5 ) {  <CR> this . x = F5 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 