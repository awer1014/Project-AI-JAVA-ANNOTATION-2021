 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t7 , String C5 , String X0 , String H1 , String n ) {  <CR> super ( t7 , C5 , X0 , H1 , n ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F0 , String v7 , String e1 , String K6 , String w7 ) {  <CR> super ( F0 , v7 , e1 , K6 , w7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] i4 ) {  <CR> Evaluation l0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop y8 = new Envelop ( "Taipei" , "Kaohsiung" , l0 ) ;  <CR> y8 . display ( ) ;  <CR> }  <CR> public Envelop ( String K1 , String n4 , Evaluation o9 ) {  <CR> this . senderAddr = K1 ;  <CR> this . receiverAddr = n4 ;  <CR> this . letter = o9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String M1 , String g1 , String r8 , String a9 , String o6 ) {  <CR> this . title = M1 ;  <CR> this . receiver = g1 ;  <CR> this . content = r8 ;  <CR> this . sender = a9 ;  <CR> this . date = o6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int o1 ) {  <CR> list [ o1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object q6 ) {  <CR> Letter H6 = ( Letter ) q6 ;  <CR> if ( this . x > H6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int k4 ) {  <CR> this . x = k4 ;  <CR> }  <CR> public static void main ( String [ ] G8 ) {  <CR> int o1 ;  <CR> for ( o1 = list . length - 1 ; o1 >= 0 ; o1 -- ) {  <CR> int U6 = o1 ;  <CR> Letter n = new Letter ( o1 ) ;  <CR> Letter j3 = new Letter ( U6 - 1 ) ;  <CR> if ( n . compareTo ( j3 ) == 1 )  <CR> n . display ( o1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 