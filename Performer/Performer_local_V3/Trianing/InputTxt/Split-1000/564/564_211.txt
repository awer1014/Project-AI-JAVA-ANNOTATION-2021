 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String A0 , String P , String k1 , String r1 , String x3 ) {  <CR> super ( A0 , P , k1 , r1 , x3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I2 , String k0 , String j6 , String X1 , String c7 ) {  <CR> super ( I2 , k0 , j6 , X1 , c7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String j8 , String s9 , Evaluation e2 ) {  <CR> this . senderAddr = j8 ;  <CR> this . receiverAddr = s9 ;  <CR> this . letter = e2 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] R3 ) {  <CR> Evaluation h9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop p6 = new Envelop ( "Taipei" , "Kaohsiung" , h9 ) ;  <CR> p6 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String b3 , String k4 , String v8 , String C4 , String p7 ) {  <CR> this . title = b3 ;  <CR> this . receiver = k4 ;  <CR> this . content = v8 ;  <CR> this . sender = C4 ;  <CR> this . date = p7 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int q8 ) {  <CR> this . x = q8 ;  <CR> }  <CR> public int compareTo ( Object r2 ) {  <CR> Letter q7 = ( Letter ) r2 ;  <CR> if ( this . x > q7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int n4 ) {  <CR> list [ n4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] f2 ) {  <CR> int n4 ;  <CR> for ( n4 = list . length - 1 ; n4 >= 0 ; n4 -- ) {  <CR> int H5 = n4 ;  <CR> Letter b9 = new Letter ( n4 ) ;  <CR> Letter q = new Letter ( H5 - 1 ) ;  <CR> if ( b9 . compareTo ( q ) == 1 )  <CR> b9 . display ( n4 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 