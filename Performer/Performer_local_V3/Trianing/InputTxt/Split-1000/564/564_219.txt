 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String I1 , String r , String x6 , String N0 , String O9 ) {  <CR> super ( I1 , r , x6 , N0 , O9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String J5 , String K7 , String h0 , String T3 , String u9 ) {  <CR> super ( J5 , K7 , h0 , T3 , u9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String u2 , String v5 , Evaluation V9 ) {  <CR> this . senderAddr = u2 ;  <CR> this . receiverAddr = v5 ;  <CR> this . letter = V9 ;  <CR> }  <CR> public static void main ( String [ ] x3 ) {  <CR> Evaluation c6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R4 = new Envelop ( "Taipei" , "Kaohsiung" , c6 ) ;  <CR> R4 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String L6 , String B4 , String X1 , String p8 , String y4 ) {  <CR> this . title = L6 ;  <CR> this . receiver = B4 ;  <CR> this . content = X1 ;  <CR> this . sender = p8 ;  <CR> this . date = y4 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int n9 ) {  <CR> this . x = n9 ;  <CR> }  <CR> public static void main ( String [ ] g7 ) {  <CR> int N6 ;  <CR> for ( N6 = list . length - 1 ; N6 >= 0 ; N6 -- ) {  <CR> int F4 = N6 ;  <CR> Letter d8 = new Letter ( N6 ) ;  <CR> Letter c0 = new Letter ( F4 - 1 ) ;  <CR> if ( d8 . compareTo ( c0 ) == 1 )  <CR> d8 . display ( N6 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public void display ( int N6 ) {  <CR> list [ N6 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object m4 ) {  <CR> Letter i7 = ( Letter ) m4 ;  <CR> if ( this . x > i7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 