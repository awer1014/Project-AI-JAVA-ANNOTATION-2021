 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N8 , String T2 , String F9 , String F6 , String R4 ) {  <CR> super ( N8 , T2 , F9 , F6 , R4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String A7 , String O2 , String k4 , String j9 , String E3 ) {  <CR> super ( A7 , O2 , k4 , j9 , E3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String O6 , String S4 , Evaluation Y1 ) {  <CR> this . senderAddr = O6 ;  <CR> this . receiverAddr = S4 ;  <CR> this . letter = Y1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G8 ) {  <CR> Evaluation W = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop n6 = new Envelop ( "Taipei" , "Kaohsiung" , W ) ;  <CR> n6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String W9 , String H5 , String V4 , String C9 , String I6 ) {  <CR> this . title = W9 ;  <CR> this . receiver = H5 ;  <CR> this . content = V4 ;  <CR> this . sender = C9 ;  <CR> this . date = I6 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int c7 ) {  <CR> list [ c7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object H1 ) {  <CR> Letter o = ( Letter ) H1 ;  <CR> if ( this . x > o . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int b6 ) {  <CR> this . x = b6 ;  <CR> }  <CR> public static void main ( String [ ] M7 ) {  <CR> int c7 ;  <CR> for ( c7 = list . length - 1 ; c7 >= 0 ; c7 -- ) {  <CR> int Y1 = c7 ;  <CR> Letter E3 = new Letter ( c7 ) ;  <CR> Letter v3 = new Letter ( Y1 - 1 ) ;  <CR> if ( E3 . compareTo ( v3 ) == 1 )  <CR> E3 . display ( c7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 