 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Z9 , String z2 , String Z6 , String n7 , String A4 ) {  <CR> super ( Z9 , z2 , Z6 , n7 , A4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String L6 , String Z5 , String O5 , String p5 , String j3 ) {  <CR> super ( L6 , Z5 , O5 , p5 , j3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String M0 , String Y1 , Evaluation E7 ) {  <CR> this . senderAddr = M0 ;  <CR> this . receiverAddr = Y1 ;  <CR> this . letter = E7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] Y7 ) {  <CR> Evaluation j = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v8 = new Envelop ( "Taipei" , "Kaohsiung" , j ) ;  <CR> v8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String C7 , String Y , String j , String X4 , String X5 ) {  <CR> this . title = C7 ;  <CR> this . receiver = Y ;  <CR> this . content = j ;  <CR> this . sender = X4 ;  <CR> this . date = X5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int r7 ) {  <CR> list [ r7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] s9 ) {  <CR> int r7 ;  <CR> for ( r7 = list . length - 1 ; r7 >= 0 ; r7 -- ) {  <CR> int U6 = r7 ;  <CR> Letter J4 = new Letter ( r7 ) ;  <CR> Letter A6 = new Letter ( U6 - 1 ) ;  <CR> if ( J4 . compareTo ( A6 ) == 1 )  <CR> J4 . display ( r7 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object y4 ) {  <CR> Letter W9 = ( Letter ) y4 ;  <CR> if ( this . x > W9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int a5 ) {  <CR> this . x = a5 ;  <CR> }  <CR> }  <CR>  <EOC> 