 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String W8 , String z9 , String i9 , String z2 , String G6 ) {  <CR> super ( W8 , z9 , i9 , z2 , G6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a9 , String w8 , String m6 , String I9 , String I8 ) {  <CR> super ( a9 , w8 , m6 , I9 , I8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String J1 , String a0 , Evaluation K9 ) {  <CR> this . senderAddr = J1 ;  <CR> this . receiverAddr = a0 ;  <CR> this . letter = K9 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] E2 ) {  <CR> Evaluation N0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop H0 = new Envelop ( "Taipei" , "Kaohsiung" , N0 ) ;  <CR> H0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String P7 , String w9 , String p8 , String u2 , String D ) {  <CR> this . title = P7 ;  <CR> this . receiver = w9 ;  <CR> this . content = p8 ;  <CR> this . sender = u2 ;  <CR> this . date = D ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object t3 ) {  <CR> Letter q8 = ( Letter ) t3 ;  <CR> if ( this . x > q8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] O9 ) {  <CR> int O1 ;  <CR> for ( O1 = list . length - 1 ; O1 >= 0 ; O1 -- ) {  <CR> int i4 = O1 ;  <CR> Letter b2 = new Letter ( O1 ) ;  <CR> Letter D1 = new Letter ( i4 - 1 ) ;  <CR> if ( b2 . compareTo ( D1 ) == 1 )  <CR> b2 . display ( O1 ) ;  <CR> }  <CR> }  <CR> Letter ( int G7 ) {  <CR> this . x = G7 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int O1 ) {  <CR> list [ O1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 