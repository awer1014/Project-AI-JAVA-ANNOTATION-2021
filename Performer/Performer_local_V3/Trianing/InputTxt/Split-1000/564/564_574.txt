 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String H4 , String f4 , String F6 , String t7 , String m6 ) {  <CR> super ( H4 , f4 , F6 , t7 , m6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String F9 , String t5 , String j2 , String W7 , String i8 ) {  <CR> super ( F9 , t5 , j2 , W7 , i8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> public Envelop ( String U9 , String U0 , Evaluation m ) {  <CR> this . senderAddr = U9 ;  <CR> this . receiverAddr = U0 ;  <CR> this . letter = m ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A ) {  <CR> Evaluation b1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop R0 = new Envelop ( "Taipei" , "Kaohsiung" , b1 ) ;  <CR> R0 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String B5 , String z3 , String b5 , String e8 , String t5 ) {  <CR> this . title = B5 ;  <CR> this . receiver = z3 ;  <CR> this . content = b5 ;  <CR> this . sender = e8 ;  <CR> this . date = t5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int F8 ) {  <CR> this . x = F8 ;  <CR> }  <CR> public static void main ( String [ ] z ) {  <CR> int i5 ;  <CR> for ( i5 = list . length - 1 ; i5 >= 0 ; i5 -- ) {  <CR> int d0 = i5 ;  <CR> Letter y9 = new Letter ( i5 ) ;  <CR> Letter N5 = new Letter ( d0 - 1 ) ;  <CR> if ( y9 . compareTo ( N5 ) == 1 )  <CR> y9 . display ( i5 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object S1 ) {  <CR> Letter r7 = ( Letter ) S1 ;  <CR> if ( this . x > r7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int i5 ) {  <CR> list [ i5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 