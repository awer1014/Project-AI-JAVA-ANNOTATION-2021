 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E6 , String g0 , String k1 , String d6 , String k3 ) {  <CR> super ( E6 , g0 , k1 , d6 , k3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f , String s5 , String t0 , String S9 , String T0 ) {  <CR> super ( f , s5 , t0 , S9 , T0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String S5 , String d7 , Evaluation D ) {  <CR> this . senderAddr = S5 ;  <CR> this . receiverAddr = d7 ;  <CR> this . letter = D ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] j6 ) {  <CR> Evaluation h8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g6 = new Envelop ( "Taipei" , "Kaohsiung" , h8 ) ;  <CR> g6 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String f3 , String O3 , String i1 , String z5 , String u5 ) {  <CR> this . title = f3 ;  <CR> this . receiver = O3 ;  <CR> this . content = i1 ;  <CR> this . sender = z5 ;  <CR> this . date = u5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int c1 ) {  <CR> list [ c1 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> Letter ( int O8 ) {  <CR> this . x = O8 ;  <CR> }  <CR> public int compareTo ( Object X9 ) {  <CR> Letter a8 = ( Letter ) X9 ;  <CR> if ( this . x > a8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] w8 ) {  <CR> int c1 ;  <CR> for ( c1 = list . length - 1 ; c1 >= 0 ; c1 -- ) {  <CR> int m8 = c1 ;  <CR> Letter G7 = new Letter ( c1 ) ;  <CR> Letter c5 = new Letter ( m8 - 1 ) ;  <CR> if ( G7 . compareTo ( c5 ) == 1 )  <CR> G7 . display ( c1 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 