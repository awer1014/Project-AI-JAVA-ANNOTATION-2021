 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T7 , String Y3 , String Q2 , String u8 , String T5 ) {  <CR> super ( T7 , Y3 , Q2 , u8 , T5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String d7 , String M8 , String Q5 , String I3 , String y3 ) {  <CR> super ( d7 , M8 , Q5 , I3 , y3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] Y4 ) {  <CR> Evaluation H = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U2 = new Envelop ( "Taipei" , "Kaohsiung" , H ) ;  <CR> U2 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String H0 , String k2 , Evaluation t0 ) {  <CR> this . senderAddr = H0 ;  <CR> this . receiverAddr = k2 ;  <CR> this . letter = t0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Q8 , String x0 , String O9 , String F5 , String W2 ) {  <CR> this . title = Q8 ;  <CR> this . receiver = x0 ;  <CR> this . content = O9 ;  <CR> this . sender = F5 ;  <CR> this . date = W2 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int I3 ) {  <CR> list [ I3 ] . Display ( ) ;  <CR> }  <CR> Letter ( int i1 ) {  <CR> this . x = i1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] p9 ) {  <CR> int I3 ;  <CR> for ( I3 = list . length - 1 ; I3 >= 0 ; I3 -- ) {  <CR> int D9 = I3 ;  <CR> Letter D2 = new Letter ( I3 ) ;  <CR> Letter B6 = new Letter ( D9 - 1 ) ;  <CR> if ( D2 . compareTo ( B6 ) == 1 )  <CR> D2 . display ( I3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object T5 ) {  <CR> Letter W1 = ( Letter ) T5 ;  <CR> if ( this . x > W1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 