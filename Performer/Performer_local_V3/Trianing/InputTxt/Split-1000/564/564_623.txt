 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X4 , String F2 , String k5 , String q , String B0 ) {  <CR> super ( X4 , F2 , k5 , q , B0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f , String a , String B , String z4 , String M5 ) {  <CR> super ( f , a , B , z4 , M5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String E7 , String o8 , Evaluation L1 ) {  <CR> this . senderAddr = E7 ;  <CR> this . receiverAddr = o8 ;  <CR> this . letter = L1 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] k6 ) {  <CR> Evaluation t8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I0 = new Envelop ( "Taipei" , "Kaohsiung" , t8 ) ;  <CR> I0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String F1 , String F5 , String Z3 , String H9 , String Z7 ) {  <CR> this . title = F1 ;  <CR> this . receiver = F5 ;  <CR> this . content = Z3 ;  <CR> this . sender = H9 ;  <CR> this . date = Z7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int h4 ) {  <CR> list [ h4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] f5 ) {  <CR> int h4 ;  <CR> for ( h4 = list . length - 1 ; h4 >= 0 ; h4 -- ) {  <CR> int e7 = h4 ;  <CR> Letter i3 = new Letter ( h4 ) ;  <CR> Letter w8 = new Letter ( e7 - 1 ) ;  <CR> if ( i3 . compareTo ( w8 ) == 1 )  <CR> i3 . display ( h4 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object L4 ) {  <CR> Letter Z9 = ( Letter ) L4 ;  <CR> if ( this . x > Z9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int p6 ) {  <CR> this . x = p6 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 