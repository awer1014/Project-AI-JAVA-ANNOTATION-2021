 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String v9 , String W7 , String r2 , String w7 , String T3 ) {  <CR> super ( v9 , W7 , r2 , w7 , T3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B5 , String b3 , String W6 , String A9 , String B8 ) {  <CR> super ( B5 , b3 , W6 , A9 , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] A7 ) {  <CR> Evaluation N6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s2 = new Envelop ( "Taipei" , "Kaohsiung" , N6 ) ;  <CR> s2 . display ( ) ;  <CR> }  <CR> public Envelop ( String Q7 , String V6 , Evaluation G2 ) {  <CR> this . senderAddr = Q7 ;  <CR> this . receiverAddr = V6 ;  <CR> this . letter = G2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String T , String l4 , String b , String m1 , String n ) {  <CR> this . title = T ;  <CR> this . receiver = l4 ;  <CR> this . content = b ;  <CR> this . sender = m1 ;  <CR> this . date = n ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] f5 ) {  <CR> int l8 ;  <CR> for ( l8 = list . length - 1 ; l8 >= 0 ; l8 -- ) {  <CR> int q = l8 ;  <CR> Letter r = new Letter ( l8 ) ;  <CR> Letter N2 = new Letter ( q - 1 ) ;  <CR> if ( r . compareTo ( N2 ) == 1 )  <CR> r . display ( l8 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int l8 ) {  <CR> list [ l8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int e0 ) {  <CR> this . x = e0 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object B9 ) {  <CR> Letter K2 = ( Letter ) B9 ;  <CR> if ( this . x > K2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 