 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x8 , String E8 , String G9 , String U1 , String s4 ) {  <CR> super ( x8 , E8 , G9 , U1 , s4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String O7 , String W7 , String N2 , String x6 , String y ) {  <CR> super ( O7 , W7 , N2 , x6 , y ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String v6 , String p5 , Evaluation d3 ) {  <CR> this . senderAddr = v6 ;  <CR> this . receiverAddr = p5 ;  <CR> this . letter = d3 ;  <CR> }  <CR> public static void main ( String [ ] f3 ) {  <CR> Evaluation k1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e1 = new Envelop ( "Taipei" , "Kaohsiung" , k1 ) ;  <CR> e1 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String K7 , String P3 , String L7 , String i , String R5 ) {  <CR> this . title = K7 ;  <CR> this . receiver = P3 ;  <CR> this . content = L7 ;  <CR> this . sender = i ;  <CR> this . date = R5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object z1 ) {  <CR> Letter P7 = ( Letter ) z1 ;  <CR> if ( this . x > P7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] I8 ) {  <CR> int y9 ;  <CR> for ( y9 = list . length - 1 ; y9 >= 0 ; y9 -- ) {  <CR> int e2 = y9 ;  <CR> Letter i0 = new Letter ( y9 ) ;  <CR> Letter W4 = new Letter ( e2 - 1 ) ;  <CR> if ( i0 . compareTo ( W4 ) == 1 )  <CR> i0 . display ( y9 ) ;  <CR> }  <CR> }  <CR> public void display ( int y9 ) {  <CR> list [ y9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int x8 ) {  <CR> this . x = x8 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 