 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String d , String B9 , String Y , String k7 , String B7 ) {  <CR> super ( d , B9 , Y , k7 , B7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String w5 , String i3 , String Y3 , String D6 , String R5 ) {  <CR> super ( w5 , i3 , Y3 , D6 , R5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String H7 , String v4 , Evaluation o0 ) {  <CR> this . senderAddr = H7 ;  <CR> this . receiverAddr = v4 ;  <CR> this . letter = o0 ;  <CR> }  <CR> public static void main ( String [ ] G ) {  <CR> Evaluation M8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g2 = new Envelop ( "Taipei" , "Kaohsiung" , M8 ) ;  <CR> g2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String O3 , String Z8 , String f7 , String R7 , String D2 ) {  <CR> this . title = O3 ;  <CR> this . receiver = Z8 ;  <CR> this . content = f7 ;  <CR> this . sender = R7 ;  <CR> this . date = D2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int G1 ) {  <CR> this . x = G1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object G3 ) {  <CR> Letter o1 = ( Letter ) G3 ;  <CR> if ( this . x > o1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int g5 ) {  <CR> list [ g5 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o9 ) {  <CR> int g5 ;  <CR> for ( g5 = list . length - 1 ; g5 >= 0 ; g5 -- ) {  <CR> int x4 = g5 ;  <CR> Letter c4 = new Letter ( g5 ) ;  <CR> Letter p7 = new Letter ( x4 - 1 ) ;  <CR> if ( c4 . compareTo ( p7 ) == 1 )  <CR> c4 . display ( g5 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 