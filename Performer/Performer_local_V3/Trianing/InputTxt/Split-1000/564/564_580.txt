 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String X5 , String V9 , String W7 , String G9 , String o8 ) {  <CR> super ( X5 , V9 , W7 , G9 , o8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String A , String L8 , String D , String b9 , String I1 ) {  <CR> super ( A , L8 , D , b9 , I1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String G , String g , Evaluation P8 ) {  <CR> this . senderAddr = G ;  <CR> this . receiverAddr = g ;  <CR> this . letter = P8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] G9 ) {  <CR> Evaluation z6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z8 = new Envelop ( "Taipei" , "Kaohsiung" , z6 ) ;  <CR> z8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String O3 , String S2 , String c8 , String Z9 , String q8 ) {  <CR> this . title = O3 ;  <CR> this . receiver = S2 ;  <CR> this . content = c8 ;  <CR> this . sender = Z9 ;  <CR> this . date = q8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int i5 ) {  <CR> this . x = i5 ;  <CR> }  <CR> public static void main ( String [ ] J5 ) {  <CR> int T5 ;  <CR> for ( T5 = list . length - 1 ; T5 >= 0 ; T5 -- ) {  <CR> int T = T5 ;  <CR> Letter K4 = new Letter ( T5 ) ;  <CR> Letter d4 = new Letter ( T - 1 ) ;  <CR> if ( K4 . compareTo ( d4 ) == 1 )  <CR> K4 . display ( T5 ) ;  <CR> }  <CR> }  <CR> public void display ( int T5 ) {  <CR> list [ T5 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object B9 ) {  <CR> Letter W = ( Letter ) B9 ;  <CR> if ( this . x > W . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 