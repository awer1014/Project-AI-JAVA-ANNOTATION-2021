 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String J3 , String Q , String d8 , String H4 , String w1 ) {  <CR> super ( J3 , Q , d8 , H4 , w1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z6 , String u8 , String F5 , String D3 , String Y6 ) {  <CR> super ( Z6 , u8 , F5 , D3 , Y6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v2 ) {  <CR> Evaluation u1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u7 = new Envelop ( "Taipei" , "Kaohsiung" , u1 ) ;  <CR> u7 . display ( ) ;  <CR> }  <CR> public Envelop ( String Z8 , String P5 , Evaluation W9 ) {  <CR> this . senderAddr = Z8 ;  <CR> this . receiverAddr = P5 ;  <CR> this . letter = W9 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String o8 , String i , String c6 , String w , String U7 ) {  <CR> this . title = o8 ;  <CR> this . receiver = i ;  <CR> this . content = c6 ;  <CR> this . sender = w ;  <CR> this . date = U7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int n8 ) {  <CR> list [ n8 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object e1 ) {  <CR> Letter K8 = ( Letter ) e1 ;  <CR> if ( this . x > K8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int v9 ) {  <CR> this . x = v9 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] h3 ) {  <CR> int n8 ;  <CR> for ( n8 = list . length - 1 ; n8 >= 0 ; n8 -- ) {  <CR> int a3 = n8 ;  <CR> Letter X7 = new Letter ( n8 ) ;  <CR> Letter e = new Letter ( a3 - 1 ) ;  <CR> if ( X7 . compareTo ( e ) == 1 )  <CR> X7 . display ( n8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 