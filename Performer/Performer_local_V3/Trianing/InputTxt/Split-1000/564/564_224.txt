 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String j5 , String x3 , String F5 , String w2 , String u4 ) {  <CR> super ( j5 , x3 , F5 , w2 , u4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String f9 , String y1 , String V2 , String w9 , String b8 ) {  <CR> super ( f9 , y1 , V2 , w9 , b8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String l1 , String E1 , Evaluation B2 ) {  <CR> this . senderAddr = l1 ;  <CR> this . receiverAddr = E1 ;  <CR> this . letter = B2 ;  <CR> }  <CR> public static void main ( String [ ] A2 ) {  <CR> Evaluation i0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P9 = new Envelop ( "Taipei" , "Kaohsiung" , i0 ) ;  <CR> P9 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String P9 , String c2 , String z0 , String I9 , String F6 ) {  <CR> this . title = P9 ;  <CR> this . receiver = c2 ;  <CR> this . content = z0 ;  <CR> this . sender = I9 ;  <CR> this . date = F6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int D2 ) {  <CR> list [ D2 ] . Display ( ) ;  <CR> }  <CR> Letter ( int v1 ) {  <CR> this . x = v1 ;  <CR> }  <CR> public static void main ( String [ ] J3 ) {  <CR> int D2 ;  <CR> for ( D2 = list . length - 1 ; D2 >= 0 ; D2 -- ) {  <CR> int e6 = D2 ;  <CR> Letter D1 = new Letter ( D2 ) ;  <CR> Letter H3 = new Letter ( e6 - 1 ) ;  <CR> if ( D1 . compareTo ( H3 ) == 1 )  <CR> D1 . display ( D2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object s9 ) {  <CR> Letter C2 = ( Letter ) s9 ;  <CR> if ( this . x > C2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 