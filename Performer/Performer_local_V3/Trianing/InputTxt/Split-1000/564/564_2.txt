 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Q1 , String T2 , String v4 , String t7 , String n ) {  <CR> super ( Q1 , T2 , v4 , t7 , n ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L0 , String y8 , String u9 , String K0 , String K6 ) {  <CR> super ( L0 , y8 , u9 , K0 , K6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String D4 , String A4 , Evaluation A3 ) {  <CR> this . senderAddr = D4 ;  <CR> this . receiverAddr = A4 ;  <CR> this . letter = A3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] m7 ) {  <CR> Evaluation j8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop t6 = new Envelop ( "Taipei" , "Kaohsiung" , j8 ) ;  <CR> t6 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String e0 , String e3 , String q1 , String m5 , String P1 ) {  <CR> this . title = e0 ;  <CR> this . receiver = e3 ;  <CR> this . content = q1 ;  <CR> this . sender = m5 ;  <CR> this . date = P1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int n7 ) {  <CR> this . x = n7 ;  <CR> }  <CR> public static void main ( String [ ] Z2 ) {  <CR> int B9 ;  <CR> for ( B9 = list . length - 1 ; B9 >= 0 ; B9 -- ) {  <CR> int S3 = B9 ;  <CR> Letter m7 = new Letter ( B9 ) ;  <CR> Letter Q0 = new Letter ( S3 - 1 ) ;  <CR> if ( m7 . compareTo ( Q0 ) == 1 )  <CR> m7 . display ( B9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object F8 ) {  <CR> Letter I0 = ( Letter ) F8 ;  <CR> if ( this . x > I0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int B9 ) {  <CR> list [ B9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 