 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N6 , String K2 , String G , String q5 , String F8 ) {  <CR> super ( N6 , K2 , G , q5 , F8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String S7 , String M5 , String q4 , String T8 , String m9 ) {  <CR> super ( S7 , M5 , q4 , T8 , m9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String v3 , String P4 , Evaluation H9 ) {  <CR> this . senderAddr = v3 ;  <CR> this . receiverAddr = P4 ;  <CR> this . letter = H9 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] P5 ) {  <CR> Evaluation P9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop r5 = new Envelop ( "Taipei" , "Kaohsiung" , P9 ) ;  <CR> r5 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String b4 , String s3 , String R2 , String Z7 , String W4 ) {  <CR> this . title = b4 ;  <CR> this . receiver = s3 ;  <CR> this . content = R2 ;  <CR> this . sender = Z7 ;  <CR> this . date = W4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int t0 ) {  <CR> list [ t0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int R2 ) {  <CR> this . x = R2 ;  <CR> }  <CR> public int compareTo ( Object M6 ) {  <CR> Letter i8 = ( Letter ) M6 ;  <CR> if ( this . x > i8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public static void main ( String [ ] Y3 ) {  <CR> int t0 ;  <CR> for ( t0 = list . length - 1 ; t0 >= 0 ; t0 -- ) {  <CR> int C4 = t0 ;  <CR> Letter z4 = new Letter ( t0 ) ;  <CR> Letter N9 = new Letter ( C4 - 1 ) ;  <CR> if ( z4 . compareTo ( N9 ) == 1 )  <CR> z4 . display ( t0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 