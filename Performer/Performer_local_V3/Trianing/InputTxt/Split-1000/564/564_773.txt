 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Q2 , String M , String g7 , String n7 , String Q ) {  <CR> super ( Q2 , M , g7 , n7 , Q ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String C2 , String r1 , String W0 , String G , String i2 ) {  <CR> super ( C2 , r1 , W0 , G , i2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String c0 , String t , Evaluation G9 ) {  <CR> this . senderAddr = c0 ;  <CR> this . receiverAddr = t ;  <CR> this . letter = G9 ;  <CR> }  <CR> public static void main ( String [ ] F8 ) {  <CR> Evaluation s6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W = new Envelop ( "Taipei" , "Kaohsiung" , s6 ) ;  <CR> W . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String E5 , String W4 , String S6 , String M0 , String I0 ) {  <CR> this . title = E5 ;  <CR> this . receiver = W4 ;  <CR> this . content = S6 ;  <CR> this . sender = M0 ;  <CR> this . date = I0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int O6 ) {  <CR> list [ O6 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] C5 ) {  <CR> int O6 ;  <CR> for ( O6 = list . length - 1 ; O6 >= 0 ; O6 -- ) {  <CR> int I9 = O6 ;  <CR> Letter r7 = new Letter ( O6 ) ;  <CR> Letter Q8 = new Letter ( I9 - 1 ) ;  <CR> if ( r7 . compareTo ( Q8 ) == 1 )  <CR> r7 . display ( O6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int k5 ) {  <CR> this . x = k5 ;  <CR> }  <CR> public int compareTo ( Object b ) {  <CR> Letter I6 = ( Letter ) b ;  <CR> if ( this . x > I6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 