 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String G2 , String T3 , String s4 , String M2 , String E8 ) {  <CR> super ( G2 , T3 , s4 , M2 , E8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String x7 , String Q5 , String U , String J4 , String u7 ) {  <CR> super ( x7 , Q5 , U , J4 , u7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] v0 ) {  <CR> Evaluation b8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop v2 = new Envelop ( "Taipei" , "Kaohsiung" , b8 ) ;  <CR> v2 . display ( ) ;  <CR> }  <CR> public Envelop ( String u9 , String z9 , Evaluation Z2 ) {  <CR> this . senderAddr = u9 ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = Z2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String v6 , String z4 , String o , String H5 , String g8 ) {  <CR> this . title = v6 ;  <CR> this . receiver = z4 ;  <CR> this . content = o ;  <CR> this . sender = H5 ;  <CR> this . date = g8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int t3 ) {  <CR> this . x = t3 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] F9 ) {  <CR> int N1 ;  <CR> for ( N1 = list . length - 1 ; N1 >= 0 ; N1 -- ) {  <CR> int s9 = N1 ;  <CR> Letter l9 = new Letter ( N1 ) ;  <CR> Letter U = new Letter ( s9 - 1 ) ;  <CR> if ( l9 . compareTo ( U ) == 1 )  <CR> l9 . display ( N1 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object p8 ) {  <CR> Letter b3 = ( Letter ) p8 ;  <CR> if ( this . x > b3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int N1 ) {  <CR> list [ N1 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 