 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String i2 , String h6 , String D0 , String P6 , String g8 ) {  <CR> super ( i2 , h6 , D0 , P6 , g8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String Z3 , String S5 , String r1 , String X4 , String l0 ) {  <CR> super ( Z3 , S5 , r1 , X4 , l0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String w7 , String E2 , Evaluation L3 ) {  <CR> this . senderAddr = w7 ;  <CR> this . receiverAddr = E2 ;  <CR> this . letter = L3 ;  <CR> }  <CR> public static void main ( String [ ] Z5 ) {  <CR> Evaluation L9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u8 = new Envelop ( "Taipei" , "Kaohsiung" , L9 ) ;  <CR> u8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String I6 , String l6 , String w4 , String E3 , String s3 ) {  <CR> this . title = I6 ;  <CR> this . receiver = l6 ;  <CR> this . content = w4 ;  <CR> this . sender = E3 ;  <CR> this . date = s3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] S9 ) {  <CR> int G0 ;  <CR> for ( G0 = list . length - 1 ; G0 >= 0 ; G0 -- ) {  <CR> int t6 = G0 ;  <CR> Letter d9 = new Letter ( G0 ) ;  <CR> Letter R9 = new Letter ( t6 - 1 ) ;  <CR> if ( d9 . compareTo ( R9 ) == 1 )  <CR> d9 . display ( G0 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object K9 ) {  <CR> Letter M5 = ( Letter ) K9 ;  <CR> if ( this . x > M5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int G0 ) {  <CR> list [ G0 ] . Display ( ) ;  <CR> }  <CR> Letter ( int J2 ) {  <CR> this . x = J2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 