 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String N5 , String N6 , String s , String R6 , String o ) {  <CR> super ( N5 , N6 , s , R6 , o ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String k9 , String C8 , String J5 , String s3 , String X5 ) {  <CR> super ( k9 , C8 , J5 , s3 , X5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] L ) {  <CR> Evaluation H9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u7 = new Envelop ( "Taipei" , "Kaohsiung" , H9 ) ;  <CR> u7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String O3 , String L1 , Evaluation F4 ) {  <CR> this . senderAddr = O3 ;  <CR> this . receiverAddr = L1 ;  <CR> this . letter = F4 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String M1 , String h , String J3 , String a9 , String P0 ) {  <CR> this . title = M1 ;  <CR> this . receiver = h ;  <CR> this . content = J3 ;  <CR> this . sender = a9 ;  <CR> this . date = P0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object q6 ) {  <CR> Letter v1 = ( Letter ) q6 ;  <CR> if ( this . x > v1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int F2 ) {  <CR> this . x = F2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int E0 ) {  <CR> list [ E0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] d ) {  <CR> int E0 ;  <CR> for ( E0 = list . length - 1 ; E0 >= 0 ; E0 -- ) {  <CR> int a9 = E0 ;  <CR> Letter r3 = new Letter ( E0 ) ;  <CR> Letter B8 = new Letter ( a9 - 1 ) ;  <CR> if ( r3 . compareTo ( B8 ) == 1 )  <CR> r3 . display ( E0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 