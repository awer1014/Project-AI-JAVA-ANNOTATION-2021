 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String L8 , String Z3 , String Y4 , String v0 , String v ) {  <CR> super ( L8 , Z3 , Y4 , v0 , v ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String w8 , String R0 , String U0 , String e1 , String e ) {  <CR> super ( w8 , R0 , U0 , e1 , e ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] E3 ) {  <CR> Evaluation K0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop c2 = new Envelop ( "Taipei" , "Kaohsiung" , K0 ) ;  <CR> c2 . display ( ) ;  <CR> }  <CR> public Envelop ( String n , String V8 , Evaluation B6 ) {  <CR> this . senderAddr = n ;  <CR> this . receiverAddr = V8 ;  <CR> this . letter = B6 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String d2 , String K6 , String j , String d0 , String l5 ) {  <CR> this . title = d2 ;  <CR> this . receiver = K6 ;  <CR> this . content = j ;  <CR> this . sender = d0 ;  <CR> this . date = l5 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object A8 ) {  <CR> Letter C7 = ( Letter ) A8 ;  <CR> if ( this . x > C7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int R1 ) {  <CR> this . x = R1 ;  <CR> }  <CR> public void display ( int M0 ) {  <CR> list [ M0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I ) {  <CR> int M0 ;  <CR> for ( M0 = list . length - 1 ; M0 >= 0 ; M0 -- ) {  <CR> int t1 = M0 ;  <CR> Letter h6 = new Letter ( M0 ) ;  <CR> Letter g2 = new Letter ( t1 - 1 ) ;  <CR> if ( h6 . compareTo ( g2 ) == 1 )  <CR> h6 . display ( M0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 