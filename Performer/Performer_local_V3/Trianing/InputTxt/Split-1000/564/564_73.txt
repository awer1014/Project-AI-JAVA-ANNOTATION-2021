 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String c , String A3 , String b4 , String c1 , String M0 ) {  <CR> super ( c , A3 , b4 , c1 , M0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String I6 , String g6 , String P5 , String a6 , String A4 ) {  <CR> super ( I6 , g6 , P5 , a6 , A4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] L7 ) {  <CR> Evaluation R8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z6 = new Envelop ( "Taipei" , "Kaohsiung" , R8 ) ;  <CR> z6 . display ( ) ;  <CR> }  <CR> public Envelop ( String k9 , String j , Evaluation B5 ) {  <CR> this . senderAddr = k9 ;  <CR> this . receiverAddr = j ;  <CR> this . letter = B5 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y0 , String z3 , String t0 , String u8 , String q8 ) {  <CR> this . title = Y0 ;  <CR> this . receiver = z3 ;  <CR> this . content = t0 ;  <CR> this . sender = u8 ;  <CR> this . date = q8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int I3 ) {  <CR> list [ I3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object q5 ) {  <CR> Letter M7 = ( Letter ) q5 ;  <CR> if ( this . x > M7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] P6 ) {  <CR> int I3 ;  <CR> for ( I3 = list . length - 1 ; I3 >= 0 ; I3 -- ) {  <CR> int s3 = I3 ;  <CR> Letter x1 = new Letter ( I3 ) ;  <CR> Letter Z6 = new Letter ( s3 - 1 ) ;  <CR> if ( x1 . compareTo ( Z6 ) == 1 )  <CR> x1 . display ( I3 ) ;  <CR> }  <CR> }  <CR> Letter ( int P7 ) {  <CR> this . x = P7 ;  <CR> }  <CR> }  <CR>  <EOC> 