 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String b , String a1 , String C3 , String P9 , String t4 ) {  <CR> super ( b , a1 , C3 , P9 , t4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String j3 , String C0 , String d3 , String W4 , String r9 ) {  <CR> super ( j3 , C0 , d3 , W4 , r9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String g8 , String k4 , Evaluation Z1 ) {  <CR> this . senderAddr = g8 ;  <CR> this . receiverAddr = k4 ;  <CR> this . letter = Z1 ;  <CR> }  <CR> public static void main ( String [ ] j5 ) {  <CR> Evaluation o3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M1 = new Envelop ( "Taipei" , "Kaohsiung" , o3 ) ;  <CR> M1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String v8 , String g5 , String k8 , String X , String k1 ) {  <CR> this . title = v8 ;  <CR> this . receiver = g5 ;  <CR> this . content = k8 ;  <CR> this . sender = X ;  <CR> this . date = k1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] A3 ) {  <CR> int d7 ;  <CR> for ( d7 = list . length - 1 ; d7 >= 0 ; d7 -- ) {  <CR> int F3 = d7 ;  <CR> Letter j8 = new Letter ( d7 ) ;  <CR> Letter e6 = new Letter ( F3 - 1 ) ;  <CR> if ( j8 . compareTo ( e6 ) == 1 )  <CR> j8 . display ( d7 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int H3 ) {  <CR> this . x = H3 ;  <CR> }  <CR> public int compareTo ( Object e1 ) {  <CR> Letter P1 = ( Letter ) e1 ;  <CR> if ( this . x > P1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int d7 ) {  <CR> list [ d7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 