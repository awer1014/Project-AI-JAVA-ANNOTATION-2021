 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y6 , String V0 , String Y6 , String r4 , String R ) {  <CR> super ( y6 , V0 , Y6 , r4 , R ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y8 , String S3 , String K0 , String s6 , String R5 ) {  <CR> super ( y8 , S3 , K0 , s6 , R5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Z9 ) {  <CR> Evaluation z7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m1 = new Envelop ( "Taipei" , "Kaohsiung" , z7 ) ;  <CR> m1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String t1 , String F6 , Evaluation y5 ) {  <CR> this . senderAddr = t1 ;  <CR> this . receiverAddr = F6 ;  <CR> this . letter = y5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String y2 , String s5 , String E6 , String Z2 , String R3 ) {  <CR> this . title = y2 ;  <CR> this . receiver = s5 ;  <CR> this . content = E6 ;  <CR> this . sender = Z2 ;  <CR> this . date = R3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int w ) {  <CR> this . x = w ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int Y0 ) {  <CR> list [ Y0 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object Y9 ) {  <CR> Letter d8 = ( Letter ) Y9 ;  <CR> if ( this . x > d8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] Z0 ) {  <CR> int Y0 ;  <CR> for ( Y0 = list . length - 1 ; Y0 >= 0 ; Y0 -- ) {  <CR> int a1 = Y0 ;  <CR> Letter E2 = new Letter ( Y0 ) ;  <CR> Letter B6 = new Letter ( a1 - 1 ) ;  <CR> if ( E2 . compareTo ( B6 ) == 1 )  <CR> E2 . display ( Y0 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 