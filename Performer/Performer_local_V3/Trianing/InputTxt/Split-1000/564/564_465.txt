 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String M3 , String e6 , String N6 , String f8 , String k4 ) {  <CR> super ( M3 , e6 , N6 , f8 , k4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W9 , String f4 , String O7 , String P5 , String B8 ) {  <CR> super ( W9 , f4 , O7 , P5 , B8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String l1 , String W4 , Evaluation n6 ) {  <CR> this . senderAddr = l1 ;  <CR> this . receiverAddr = W4 ;  <CR> this . letter = n6 ;  <CR> }  <CR> public static void main ( String [ ] Z6 ) {  <CR> Evaluation V2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop u8 = new Envelop ( "Taipei" , "Kaohsiung" , V2 ) ;  <CR> u8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String d9 , String b7 , String q2 , String e3 , String d0 ) {  <CR> this . title = d9 ;  <CR> this . receiver = b7 ;  <CR> this . content = q2 ;  <CR> this . sender = e3 ;  <CR> this . date = d0 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int L9 ) {  <CR> list [ L9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object B5 ) {  <CR> Letter Y5 = ( Letter ) B5 ;  <CR> if ( this . x > Y5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> Letter ( int v2 ) {  <CR> this . x = v2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] X0 ) {  <CR> int L9 ;  <CR> for ( L9 = list . length - 1 ; L9 >= 0 ; L9 -- ) {  <CR> int R5 = L9 ;  <CR> Letter i6 = new Letter ( L9 ) ;  <CR> Letter N2 = new Letter ( R5 - 1 ) ;  <CR> if ( i6 . compareTo ( N2 ) == 1 )  <CR> i6 . display ( L9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 