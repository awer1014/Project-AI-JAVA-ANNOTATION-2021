 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String W6 , String D6 , String m7 , String P2 , String o8 ) {  <CR> super ( W6 , D6 , m7 , P2 , o8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String y9 , String t4 , String v4 , String W5 , String c3 ) {  <CR> super ( y9 , t4 , v4 , W5 , c3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String l8 , String g1 , Evaluation h9 ) {  <CR> this . senderAddr = l8 ;  <CR> this . receiverAddr = g1 ;  <CR> this . letter = h9 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] R ) {  <CR> Evaluation A8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop X = new Envelop ( "Taipei" , "Kaohsiung" , A8 ) ;  <CR> X . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Q8 , String u6 , String o7 , String P7 , String v5 ) {  <CR> this . title = Q8 ;  <CR> this . receiver = u6 ;  <CR> this . content = o7 ;  <CR> this . sender = P7 ;  <CR> this . date = v5 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object G9 ) {  <CR> Letter O7 = ( Letter ) G9 ;  <CR> if ( this . x > O7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int B9 ) {  <CR> this . x = B9 ;  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] S7 ) {  <CR> int l7 ;  <CR> for ( l7 = list . length - 1 ; l7 >= 0 ; l7 -- ) {  <CR> int I7 = l7 ;  <CR> Letter u4 = new Letter ( l7 ) ;  <CR> Letter o1 = new Letter ( I7 - 1 ) ;  <CR> if ( u4 . compareTo ( o1 ) == 1 )  <CR> u4 . display ( l7 ) ;  <CR> }  <CR> }  <CR> public void display ( int l7 ) {  <CR> list [ l7 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 