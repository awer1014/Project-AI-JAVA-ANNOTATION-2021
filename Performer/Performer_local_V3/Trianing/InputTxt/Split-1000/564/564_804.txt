 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String Q0 , String V2 , String J5 , String r9 , String i3 ) {  <CR> super ( Q0 , V2 , J5 , r9 , i3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String G , String A9 , String D9 , String T0 , String h5 ) {  <CR> super ( G , A9 , D9 , T0 , h5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String T4 , String E , Evaluation S9 ) {  <CR> this . senderAddr = T4 ;  <CR> this . receiverAddr = E ;  <CR> this . letter = S9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] h9 ) {  <CR> Evaluation M = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop e2 = new Envelop ( "Taipei" , "Kaohsiung" , M ) ;  <CR> e2 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String X7 , String r9 , String K3 , String E , String l1 ) {  <CR> this . title = X7 ;  <CR> this . receiver = r9 ;  <CR> this . content = K3 ;  <CR> this . sender = E ;  <CR> this . date = l1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] r6 ) {  <CR> int a3 ;  <CR> for ( a3 = list . length - 1 ; a3 >= 0 ; a3 -- ) {  <CR> int b9 = a3 ;  <CR> Letter s6 = new Letter ( a3 ) ;  <CR> Letter N1 = new Letter ( b9 - 1 ) ;  <CR> if ( s6 . compareTo ( N1 ) == 1 )  <CR> s6 . display ( a3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int w3 ) {  <CR> this . x = w3 ;  <CR> }  <CR> public int compareTo ( Object l9 ) {  <CR> Letter m1 = ( Letter ) l9 ;  <CR> if ( this . x > m1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int a3 ) {  <CR> list [ a3 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 