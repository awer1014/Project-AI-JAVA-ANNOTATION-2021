 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String d3 , String U , String G4 , String n6 , String f0 ) {  <CR> super ( d3 , U , G4 , n6 , f0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String W2 , String m6 , String F8 , String X7 , String R4 ) {  <CR> super ( W2 , m6 , F8 , X7 , R4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String l3 , String w1 , Evaluation t ) {  <CR> this . senderAddr = l3 ;  <CR> this . receiverAddr = w1 ;  <CR> this . letter = t ;  <CR> }  <CR> public static void main ( String [ ] s3 ) {  <CR> Evaluation U6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d9 = new Envelop ( "Taipei" , "Kaohsiung" , U6 ) ;  <CR> d9 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String c1 , String W9 , String l2 , String l3 , String b4 ) {  <CR> this . title = c1 ;  <CR> this . receiver = W9 ;  <CR> this . content = l2 ;  <CR> this . sender = l3 ;  <CR> this . date = b4 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] X1 ) {  <CR> int S6 ;  <CR> for ( S6 = list . length - 1 ; S6 >= 0 ; S6 -- ) {  <CR> int k6 = S6 ;  <CR> Letter n8 = new Letter ( S6 ) ;  <CR> Letter Q8 = new Letter ( k6 - 1 ) ;  <CR> if ( n8 . compareTo ( Q8 ) == 1 )  <CR> n8 . display ( S6 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object J5 ) {  <CR> Letter b4 = ( Letter ) J5 ;  <CR> if ( this . x > b4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int S6 ) {  <CR> list [ S6 ] . Display ( ) ;  <CR> }  <CR> Letter ( int K9 ) {  <CR> this . x = K9 ;  <CR> }  <CR> }  <CR>  <EOC> 