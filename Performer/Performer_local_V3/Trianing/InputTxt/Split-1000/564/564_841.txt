 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Q0 , String u , String L4 , String J8 , String l4 ) {  <CR> super ( Q0 , u , L4 , J8 , l4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String U6 , String w6 , String i4 , String G , String D0 ) {  <CR> super ( U6 , w6 , i4 , G , D0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] q9 ) {  <CR> Evaluation u = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a0 = new Envelop ( "Taipei" , "Kaohsiung" , u ) ;  <CR> a0 . display ( ) ;  <CR> }  <CR> public Envelop ( String d , String A3 , Evaluation k0 ) {  <CR> this . senderAddr = d ;  <CR> this . receiverAddr = A3 ;  <CR> this . letter = k0 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String Q , String O6 , String L3 , String O1 , String S3 ) {  <CR> this . title = Q ;  <CR> this . receiver = O6 ;  <CR> this . content = L3 ;  <CR> this . sender = O1 ;  <CR> this . date = S3 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int m ) {  <CR> list [ m ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] l2 ) {  <CR> int m ;  <CR> for ( m = list . length - 1 ; m >= 0 ; m -- ) {  <CR> int p7 = m ;  <CR> Letter j = new Letter ( m ) ;  <CR> Letter Z1 = new Letter ( p7 - 1 ) ;  <CR> if ( j . compareTo ( Z1 ) == 1 )  <CR> j . display ( m ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object y6 ) {  <CR> Letter V = ( Letter ) y6 ;  <CR> if ( this . x > V . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int r6 ) {  <CR> this . x = r6 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 