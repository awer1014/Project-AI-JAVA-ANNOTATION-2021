 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S1 , String t1 , String r9 , String C2 , String o4 ) {  <CR> super ( S1 , t1 , r9 , C2 , o4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String b3 , String P8 , String p1 , String T1 , String T6 ) {  <CR> super ( b3 , P8 , p1 , T1 , T6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String E8 , String Z2 , Evaluation T4 ) {  <CR> this . senderAddr = E8 ;  <CR> this . receiverAddr = Z2 ;  <CR> this . letter = T4 ;  <CR> }  <CR> public static void main ( String [ ] j8 ) {  <CR> Evaluation z = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop P8 = new Envelop ( "Taipei" , "Kaohsiung" , z ) ;  <CR> P8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String Q8 , String N4 , String S7 , String H6 , String t8 ) {  <CR> this . title = Q8 ;  <CR> this . receiver = N4 ;  <CR> this . content = S7 ;  <CR> this . sender = H6 ;  <CR> this . date = t8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] r4 ) {  <CR> int R1 ;  <CR> for ( R1 = list . length - 1 ; R1 >= 0 ; R1 -- ) {  <CR> int t4 = R1 ;  <CR> Letter L = new Letter ( R1 ) ;  <CR> Letter T8 = new Letter ( t4 - 1 ) ;  <CR> if ( L . compareTo ( T8 ) == 1 )  <CR> L . display ( R1 ) ;  <CR> }  <CR> }  <CR> public void display ( int R1 ) {  <CR> list [ R1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object T4 ) {  <CR> Letter S6 = ( Letter ) T4 ;  <CR> if ( this . x > S6 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int D3 ) {  <CR> this . x = D3 ;  <CR> }  <CR> }  <CR>  <EOC> 