 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T , String m6 , String O7 , String y3 , String a8 ) {  <CR> super ( T , m6 , O7 , y3 , a8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String N3 , String l6 , String q4 , String h , String C8 ) {  <CR> super ( N3 , l6 , q4 , h , C8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String a5 , String N1 , Evaluation P ) {  <CR> this . senderAddr = a5 ;  <CR> this . receiverAddr = N1 ;  <CR> this . letter = P ;  <CR> }  <CR> public static void main ( String [ ] C1 ) {  <CR> Evaluation p1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z1 = new Envelop ( "Taipei" , "Kaohsiung" , p1 ) ;  <CR> Z1 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String P0 , String T8 , String B1 , String e4 , String c ) {  <CR> this . title = P0 ;  <CR> this . receiver = T8 ;  <CR> this . content = B1 ;  <CR> this . sender = e4 ;  <CR> this . date = c ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int F2 ) {  <CR> list [ F2 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] L0 ) {  <CR> int F2 ;  <CR> for ( F2 = list . length - 1 ; F2 >= 0 ; F2 -- ) {  <CR> int C3 = F2 ;  <CR> Letter R9 = new Letter ( F2 ) ;  <CR> Letter c7 = new Letter ( C3 - 1 ) ;  <CR> if ( R9 . compareTo ( c7 ) == 1 )  <CR> R9 . display ( F2 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object X7 ) {  <CR> Letter o7 = ( Letter ) X7 ;  <CR> if ( this . x > o7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int D0 ) {  <CR> this . x = D0 ;  <CR> }  <CR> }  <CR>  <EOC> 