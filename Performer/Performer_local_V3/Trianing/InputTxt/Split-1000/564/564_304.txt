 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String x3 , String g8 , String S9 , String O0 , String z7 ) {  <CR> super ( x3 , g8 , S9 , O0 , z7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String h , String b9 , String H5 , String b4 , String D ) {  <CR> super ( h , b9 , H5 , b4 , D ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d8 ) {  <CR> Evaluation r9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop h4 = new Envelop ( "Taipei" , "Kaohsiung" , r9 ) ;  <CR> h4 . display ( ) ;  <CR> }  <CR> public Envelop ( String P7 , String v1 , Evaluation K8 ) {  <CR> this . senderAddr = P7 ;  <CR> this . receiverAddr = v1 ;  <CR> this . letter = K8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String Y3 , String B1 , String S7 , String h1 , String m3 ) {  <CR> this . title = Y3 ;  <CR> this . receiver = B1 ;  <CR> this . content = S7 ;  <CR> this . sender = h1 ;  <CR> this . date = m3 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int U8 ) {  <CR> list [ U8 ] . Display ( ) ;  <CR> }  <CR> Letter ( int A4 ) {  <CR> this . x = A4 ;  <CR> }  <CR> public int compareTo ( Object z2 ) {  <CR> Letter y2 = ( Letter ) z2 ;  <CR> if ( this . x > y2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] l3 ) {  <CR> int U8 ;  <CR> for ( U8 = list . length - 1 ; U8 >= 0 ; U8 -- ) {  <CR> int c4 = U8 ;  <CR> Letter F5 = new Letter ( U8 ) ;  <CR> Letter u4 = new Letter ( c4 - 1 ) ;  <CR> if ( F5 . compareTo ( u4 ) == 1 )  <CR> F5 . display ( U8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 