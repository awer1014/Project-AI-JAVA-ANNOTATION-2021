 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S8 , String U2 , String a , String S9 , String w9 ) {  <CR> super ( S8 , U2 , a , S9 , w9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String q2 , String v9 , String P6 , String K8 , String w8 ) {  <CR> super ( q2 , v9 , P6 , K8 , w8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] o0 ) {  <CR> Evaluation k0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m9 = new Envelop ( "Taipei" , "Kaohsiung" , k0 ) ;  <CR> m9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String E4 , String b5 , Evaluation c5 ) {  <CR> this . senderAddr = E4 ;  <CR> this . receiverAddr = b5 ;  <CR> this . letter = c5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String a6 , String N , String m2 , String C0 , String y0 ) {  <CR> this . title = a6 ;  <CR> this . receiver = N ;  <CR> this . content = m2 ;  <CR> this . sender = C0 ;  <CR> this . date = y0 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int P4 ) {  <CR> this . x = P4 ;  <CR> }  <CR> public int compareTo ( Object F8 ) {  <CR> Letter a7 = ( Letter ) F8 ;  <CR> if ( this . x > a7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int o6 ) {  <CR> list [ o6 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p9 ) {  <CR> int o6 ;  <CR> for ( o6 = list . length - 1 ; o6 >= 0 ; o6 -- ) {  <CR> int n0 = o6 ;  <CR> Letter V4 = new Letter ( o6 ) ;  <CR> Letter P7 = new Letter ( n0 - 1 ) ;  <CR> if ( V4 . compareTo ( P7 ) == 1 )  <CR> V4 . display ( o6 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 