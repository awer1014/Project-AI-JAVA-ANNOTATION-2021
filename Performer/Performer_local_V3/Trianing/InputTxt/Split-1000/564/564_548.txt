 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String H5 , String l3 , String m8 , String w2 , String D3 ) {  <CR> super ( H5 , l3 , m8 , w2 , D3 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L5 , String E7 , String a4 , String C1 , String z4 ) {  <CR> super ( L5 , E7 , a4 , C1 , z4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] g9 ) {  <CR> Evaluation K4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m8 = new Envelop ( "Taipei" , "Kaohsiung" , K4 ) ;  <CR> m8 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String o3 , String r4 , Evaluation H1 ) {  <CR> this . senderAddr = o3 ;  <CR> this . receiverAddr = r4 ;  <CR> this . letter = H1 ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String N3 , String A5 , String Z0 , String v1 , String w8 ) {  <CR> this . title = N3 ;  <CR> this . receiver = A5 ;  <CR> this . content = Z0 ;  <CR> this . sender = v1 ;  <CR> this . date = w8 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] s7 ) {  <CR> int G1 ;  <CR> for ( G1 = list . length - 1 ; G1 >= 0 ; G1 -- ) {  <CR> int K = G1 ;  <CR> Letter Z5 = new Letter ( G1 ) ;  <CR> Letter a = new Letter ( K - 1 ) ;  <CR> if ( Z5 . compareTo ( a ) == 1 )  <CR> Z5 . display ( G1 ) ;  <CR> }  <CR> }  <CR> public void display ( int G1 ) {  <CR> list [ G1 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object M4 ) {  <CR> Letter d3 = ( Letter ) M4 ;  <CR> if ( this . x > d3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int z0 ) {  <CR> this . x = z0 ;  <CR> }  <CR> }  <CR>  <EOC> 