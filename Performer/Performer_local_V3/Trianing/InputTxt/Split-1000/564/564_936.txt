 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String k9 , String K0 , String Z4 , String W8 , String Z5 ) {  <CR> super ( k9 , K0 , Z4 , W8 , Z5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String B , String Q9 , String m9 , String l1 , String f ) {  <CR> super ( B , Q9 , m9 , l1 , f ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] w8 ) {  <CR> Evaluation l4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop M8 = new Envelop ( "Taipei" , "Kaohsiung" , l4 ) ;  <CR> M8 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String q2 , String M3 , Evaluation q6 ) {  <CR> this . senderAddr = q2 ;  <CR> this . receiverAddr = M3 ;  <CR> this . letter = q6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String t6 , String N6 , String E6 , String l1 , String m7 ) {  <CR> this . title = t6 ;  <CR> this . receiver = N6 ;  <CR> this . content = E6 ;  <CR> this . sender = l1 ;  <CR> this . date = m7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public int compareTo ( Object D6 ) {  <CR> Letter A = ( Letter ) D6 ;  <CR> if ( this . x > A . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] p7 ) {  <CR> int e5 ;  <CR> for ( e5 = list . length - 1 ; e5 >= 0 ; e5 -- ) {  <CR> int A3 = e5 ;  <CR> Letter C8 = new Letter ( e5 ) ;  <CR> Letter L4 = new Letter ( A3 - 1 ) ;  <CR> if ( C8 . compareTo ( L4 ) == 1 )  <CR> C8 . display ( e5 ) ;  <CR> }  <CR> }  <CR> Letter ( int k8 ) {  <CR> this . x = k8 ;  <CR> }  <CR> public void display ( int e5 ) {  <CR> list [ e5 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 