 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String t3 , String x1 , String V3 , String b8 , String h5 ) {  <CR> super ( t3 , x1 , V3 , b8 , h5 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String R2 , String l6 , String n , String p3 , String X4 ) {  <CR> super ( R2 , l6 , n , p3 , X4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] Q4 ) {  <CR> Evaluation p8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z7 = new Envelop ( "Taipei" , "Kaohsiung" , p8 ) ;  <CR> z7 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String B1 , String G9 , Evaluation t8 ) {  <CR> this . senderAddr = B1 ;  <CR> this . receiverAddr = G9 ;  <CR> this . letter = t8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String g4 , String T8 , String t1 , String Z0 , String M8 ) {  <CR> this . title = g4 ;  <CR> this . receiver = T8 ;  <CR> this . content = t1 ;  <CR> this . sender = Z0 ;  <CR> this . date = M8 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public void display ( int B2 ) {  <CR> list [ B2 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object B0 ) {  <CR> Letter E2 = ( Letter ) B0 ;  <CR> if ( this . x > E2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] h ) {  <CR> int B2 ;  <CR> for ( B2 = list . length - 1 ; B2 >= 0 ; B2 -- ) {  <CR> int U8 = B2 ;  <CR> Letter e = new Letter ( B2 ) ;  <CR> Letter b9 = new Letter ( U8 - 1 ) ;  <CR> if ( e . compareTo ( b9 ) == 1 )  <CR> e . display ( B2 ) ;  <CR> }  <CR> }  <CR> Letter ( int m4 ) {  <CR> this . x = m4 ;  <CR> }  <CR> }  <CR>  <EOC> 