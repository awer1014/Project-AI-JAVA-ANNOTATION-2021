 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y7 , String H2 , String s6 , String V0 , String G0 ) {  <CR> super ( y7 , H2 , s6 , V0 , G0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I9 , String Q9 , String o3 , String r5 , String W4 ) {  <CR> super ( I9 , Q9 , o3 , r5 , W4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String A3 , String r7 , Evaluation p4 ) {  <CR> this . senderAddr = A3 ;  <CR> this . receiverAddr = r7 ;  <CR> this . letter = p4 ;  <CR> }  <CR> public static void main ( String [ ] b5 ) {  <CR> Evaluation S = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop U4 = new Envelop ( "Taipei" , "Kaohsiung" , S ) ;  <CR> U4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String Z0 , String T6 , String G4 , String N5 , String M5 ) {  <CR> this . title = Z0 ;  <CR> this . receiver = T6 ;  <CR> this . content = G4 ;  <CR> this . sender = N5 ;  <CR> this . date = M5 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int m4 ) {  <CR> list [ m4 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C8 ) {  <CR> int m4 ;  <CR> for ( m4 = list . length - 1 ; m4 >= 0 ; m4 -- ) {  <CR> int t3 = m4 ;  <CR> Letter p6 = new Letter ( m4 ) ;  <CR> Letter U5 = new Letter ( t3 - 1 ) ;  <CR> if ( p6 . compareTo ( U5 ) == 1 )  <CR> p6 . display ( m4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int N7 ) {  <CR> this . x = N7 ;  <CR> }  <CR> public int compareTo ( Object N3 ) {  <CR> Letter d9 = ( Letter ) N3 ;  <CR> if ( this . x > d9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 