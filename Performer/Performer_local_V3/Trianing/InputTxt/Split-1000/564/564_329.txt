 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String M7 , String x3 , String f3 , String P5 , String H7 ) {  <CR> super ( M7 , x3 , f3 , P5 , H7 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String t3 , String J1 , String c7 , String Z9 , String h4 ) {  <CR> super ( t3 , J1 , c7 , Z9 , h4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] m ) {  <CR> Evaluation w6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop s0 = new Envelop ( "Taipei" , "Kaohsiung" , w6 ) ;  <CR> s0 . display ( ) ;  <CR> }  <CR> public Envelop ( String i7 , String E0 , Evaluation f7 ) {  <CR> this . senderAddr = i7 ;  <CR> this . receiverAddr = E0 ;  <CR> this . letter = f7 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String H3 , String u0 , String d9 , String G0 , String A9 ) {  <CR> this . title = H3 ;  <CR> this . receiver = u0 ;  <CR> this . content = d9 ;  <CR> this . sender = G0 ;  <CR> this . date = A9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] q2 ) {  <CR> int N7 ;  <CR> for ( N7 = list . length - 1 ; N7 >= 0 ; N7 -- ) {  <CR> int S7 = N7 ;  <CR> Letter Z8 = new Letter ( N7 ) ;  <CR> Letter A0 = new Letter ( S7 - 1 ) ;  <CR> if ( Z8 . compareTo ( A0 ) == 1 )  <CR> Z8 . display ( N7 ) ;  <CR> }  <CR> }  <CR> public void display ( int N7 ) {  <CR> list [ N7 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object E5 ) {  <CR> Letter K9 = ( Letter ) E5 ;  <CR> if ( this . x > K9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int k0 ) {  <CR> this . x = k0 ;  <CR> }  <CR> }  <CR>  <EOC> 