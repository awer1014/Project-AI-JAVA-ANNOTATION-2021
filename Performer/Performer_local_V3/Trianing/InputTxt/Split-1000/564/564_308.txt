 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String r , String n8 , String h9 , String f3 , String j1 ) {  <CR> super ( r , n8 , h9 , f3 , j1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String V8 , String Y4 , String d1 , String O1 , String m6 ) {  <CR> super ( V8 , Y4 , d1 , O1 , m6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P1 ) {  <CR> Evaluation K6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop S1 = new Envelop ( "Taipei" , "Kaohsiung" , K6 ) ;  <CR> S1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String Q3 , String g6 , Evaluation j3 ) {  <CR> this . senderAddr = Q3 ;  <CR> this . receiverAddr = g6 ;  <CR> this . letter = j3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String W6 , String G5 , String W8 , String N4 , String g2 ) {  <CR> this . title = W6 ;  <CR> this . receiver = G5 ;  <CR> this . content = W8 ;  <CR> this . sender = N4 ;  <CR> this . date = g2 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int a7 ) {  <CR> list [ a7 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object N ) {  <CR> Letter E4 = ( Letter ) N ;  <CR> if ( this . x > E4 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int T2 ) {  <CR> this . x = T2 ;  <CR> }  <CR> public static void main ( String [ ] x6 ) {  <CR> int a7 ;  <CR> for ( a7 = list . length - 1 ; a7 >= 0 ; a7 -- ) {  <CR> int H2 = a7 ;  <CR> Letter t9 = new Letter ( a7 ) ;  <CR> Letter g1 = new Letter ( H2 - 1 ) ;  <CR> if ( t9 . compareTo ( g1 ) == 1 )  <CR> t9 . display ( a7 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 