 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String S1 , String X , String s2 , String Y3 , String C9 ) {  <CR> super ( S1 , X , s2 , Y3 , C9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String u5 , String V5 , String q8 , String r2 , String w8 ) {  <CR> super ( u5 , V5 , q8 , r2 , w8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] B5 ) {  <CR> Evaluation t9 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k0 = new Envelop ( "Taipei" , "Kaohsiung" , t9 ) ;  <CR> k0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String a2 , String z9 , Evaluation G5 ) {  <CR> this . senderAddr = a2 ;  <CR> this . receiverAddr = z9 ;  <CR> this . letter = G5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String Q0 , String a , String S8 , String Y8 , String V1 ) {  <CR> this . title = Q0 ;  <CR> this . receiver = a ;  <CR> this . content = S8 ;  <CR> this . sender = Y8 ;  <CR> this . date = V1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] q4 ) {  <CR> int t9 ;  <CR> for ( t9 = list . length - 1 ; t9 >= 0 ; t9 -- ) {  <CR> int b5 = t9 ;  <CR> Letter F8 = new Letter ( t9 ) ;  <CR> Letter i5 = new Letter ( b5 - 1 ) ;  <CR> if ( F8 . compareTo ( i5 ) == 1 )  <CR> F8 . display ( t9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object M2 ) {  <CR> Letter l5 = ( Letter ) M2 ;  <CR> if ( this . x > l5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> public void display ( int t9 ) {  <CR> list [ t9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int v7 ) {  <CR> this . x = v7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 