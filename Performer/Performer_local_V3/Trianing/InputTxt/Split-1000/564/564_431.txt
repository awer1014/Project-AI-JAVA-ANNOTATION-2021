 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String p9 , String y6 , String T4 , String c5 , String x9 ) {  <CR> super ( p9 , y6 , T4 , c5 , x9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String s4 , String G4 , String L8 , String c4 , String E0 ) {  <CR> super ( s4 , G4 , L8 , c4 , E0 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String z7 , String r5 , Evaluation R1 ) {  <CR> this . senderAddr = z7 ;  <CR> this . receiverAddr = r5 ;  <CR> this . letter = R1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] c8 ) {  <CR> Evaluation z1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop f6 = new Envelop ( "Taipei" , "Kaohsiung" , z1 ) ;  <CR> f6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String a8 , String E0 , String O6 , String i4 , String T9 ) {  <CR> this . title = a8 ;  <CR> this . receiver = E0 ;  <CR> this . content = O6 ;  <CR> this . sender = i4 ;  <CR> this . date = T9 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] d0 ) {  <CR> int R4 ;  <CR> for ( R4 = list . length - 1 ; R4 >= 0 ; R4 -- ) {  <CR> int y6 = R4 ;  <CR> Letter d2 = new Letter ( R4 ) ;  <CR> Letter A = new Letter ( y6 - 1 ) ;  <CR> if ( d2 . compareTo ( A ) == 1 )  <CR> d2 . display ( R4 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int j6 ) {  <CR> this . x = j6 ;  <CR> }  <CR> public int compareTo ( Object A0 ) {  <CR> Letter O7 = ( Letter ) A0 ;  <CR> if ( this . x > O7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int R4 ) {  <CR> list [ R4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 