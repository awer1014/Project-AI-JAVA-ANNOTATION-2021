 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String y8 , String d4 , String I2 , String X4 , String q6 ) {  <CR> super ( y8 , d4 , I2 , X4 , q6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String Y1 , String l9 , String E4 , String j , String b4 ) {  <CR> super ( Y1 , l9 , E4 , j , b4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] d ) {  <CR> Evaluation H5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop W8 = new Envelop ( "Taipei" , "Kaohsiung" , H5 ) ;  <CR> W8 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String D0 , String m6 , Evaluation Z ) {  <CR> this . senderAddr = D0 ;  <CR> this . receiverAddr = m6 ;  <CR> this . letter = Z ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String r8 , String Z , String z6 , String r , String h7 ) {  <CR> this . title = r8 ;  <CR> this . receiver = Z ;  <CR> this . content = z6 ;  <CR> this . sender = r ;  <CR> this . date = h7 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public int compareTo ( Object W5 ) {  <CR> Letter s5 = ( Letter ) W5 ;  <CR> if ( this . x > s5 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] G0 ) {  <CR> int b1 ;  <CR> for ( b1 = list . length - 1 ; b1 >= 0 ; b1 -- ) {  <CR> int c8 = b1 ;  <CR> Letter r1 = new Letter ( b1 ) ;  <CR> Letter j7 = new Letter ( c8 - 1 ) ;  <CR> if ( r1 . compareTo ( j7 ) == 1 )  <CR> r1 . display ( b1 ) ;  <CR> }  <CR> }  <CR> Letter ( int y7 ) {  <CR> this . x = y7 ;  <CR> }  <CR> public void display ( int b1 ) {  <CR> list [ b1 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> }  <CR>  <EOC> 