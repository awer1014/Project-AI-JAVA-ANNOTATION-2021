 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String e3 , String I5 , String J , String Q2 , String d ) {  <CR> super ( e3 , I5 , J , Q2 , d ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String E0 , String Z5 , String L8 , String S0 , String z9 ) {  <CR> super ( E0 , Z5 , L8 , S0 , z9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public Envelop ( String W5 , String Z8 , Evaluation k2 ) {  <CR> this . senderAddr = W5 ;  <CR> this . receiverAddr = Z8 ;  <CR> this . letter = k2 ;  <CR> }  <CR> public static void main ( String [ ] G8 ) {  <CR> Evaluation i5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop K2 = new Envelop ( "Taipei" , "Kaohsiung" , i5 ) ;  <CR> K2 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String u , String h4 , String s5 , String S9 , String U ) {  <CR> this . title = u ;  <CR> this . receiver = h4 ;  <CR> this . content = s5 ;  <CR> this . sender = S9 ;  <CR> this . date = U ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int i3 ) {  <CR> this . x = i3 ;  <CR> }  <CR> public void display ( int M9 ) {  <CR> list [ M9 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] r4 ) {  <CR> int M9 ;  <CR> for ( M9 = list . length - 1 ; M9 >= 0 ; M9 -- ) {  <CR> int O9 = M9 ;  <CR> Letter b7 = new Letter ( M9 ) ;  <CR> Letter O0 = new Letter ( O9 - 1 ) ;  <CR> if ( b7 . compareTo ( O0 ) == 1 )  <CR> b7 . display ( M9 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object m2 ) {  <CR> Letter s7 = ( Letter ) m2 ;  <CR> if ( this . x > s7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 