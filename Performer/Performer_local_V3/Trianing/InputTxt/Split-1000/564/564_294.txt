 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String B0 , String N1 , String Z6 , String L3 , String E0 ) {  <CR> super ( B0 , N1 , Z6 , L3 , E0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String z1 , String F9 , String z5 , String Y0 , String t9 ) {  <CR> super ( z1 , F9 , z5 , Y0 , t9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] i1 ) {  <CR> Evaluation q4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d0 = new Envelop ( "Taipei" , "Kaohsiung" , q4 ) ;  <CR> d0 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String f5 , String s0 , Evaluation n3 ) {  <CR> this . senderAddr = f5 ;  <CR> this . receiverAddr = s0 ;  <CR> this . letter = n3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String B9 , String y , String B1 , String F1 , String T4 ) {  <CR> this . title = B9 ;  <CR> this . receiver = y ;  <CR> this . content = B1 ;  <CR> this . sender = F1 ;  <CR> this . date = T4 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int J0 ) {  <CR> this . x = J0 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] p9 ) {  <CR> int Q5 ;  <CR> for ( Q5 = list . length - 1 ; Q5 >= 0 ; Q5 -- ) {  <CR> int p7 = Q5 ;  <CR> Letter K7 = new Letter ( Q5 ) ;  <CR> Letter E4 = new Letter ( p7 - 1 ) ;  <CR> if ( K7 . compareTo ( E4 ) == 1 )  <CR> K7 . display ( Q5 ) ;  <CR> }  <CR> }  <CR> public void display ( int Q5 ) {  <CR> list [ Q5 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object B1 ) {  <CR> Letter w2 = ( Letter ) B1 ;  <CR> if ( this . x > w2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 