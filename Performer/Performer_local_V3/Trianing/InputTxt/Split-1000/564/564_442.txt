 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String e2 , String R , String h8 , String T5 , String J3 ) {  <CR> super ( e2 , R , h8 , T5 , J3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String F2 , String u , String f6 , String g1 , String O3 ) {  <CR> super ( F2 , u , f6 , g1 , O3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o7 ) {  <CR> Evaluation C7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop g2 = new Envelop ( "Taipei" , "Kaohsiung" , C7 ) ;  <CR> g2 . display ( ) ;  <CR> }  <CR> public Envelop ( String i3 , String n1 , Evaluation N5 ) {  <CR> this . senderAddr = i3 ;  <CR> this . receiverAddr = n1 ;  <CR> this . letter = N5 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String O6 , String r0 , String D5 , String D3 , String L8 ) {  <CR> this . title = O6 ;  <CR> this . receiver = r0 ;  <CR> this . content = D5 ;  <CR> this . sender = D3 ;  <CR> this . date = L8 ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> Letter ( int G8 ) {  <CR> this . x = G8 ;  <CR> }  <CR> public int compareTo ( Object g4 ) {  <CR> Letter H1 = ( Letter ) g4 ;  <CR> if ( this . x > H1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int q9 ) {  <CR> list [ q9 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] P8 ) {  <CR> int q9 ;  <CR> for ( q9 = list . length - 1 ; q9 >= 0 ; q9 -- ) {  <CR> int N9 = q9 ;  <CR> Letter J0 = new Letter ( q9 ) ;  <CR> Letter V9 = new Letter ( N9 - 1 ) ;  <CR> if ( J0 . compareTo ( V9 ) == 1 )  <CR> J0 . display ( q9 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 