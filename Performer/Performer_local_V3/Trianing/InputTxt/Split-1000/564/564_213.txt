 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String t2 , String M , String w5 , String N6 , String M2 ) {  <CR> super ( t2 , M , w5 , N6 , M2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String u , String B6 , String u3 , String X , String h1 ) {  <CR> super ( u , B6 , u3 , X , h1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String t7 , String z0 , Evaluation G8 ) {  <CR> this . senderAddr = t7 ;  <CR> this . receiverAddr = z0 ;  <CR> this . letter = G8 ;  <CR> }  <CR> public static void main ( String [ ] l3 ) {  <CR> Evaluation U2 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop a6 = new Envelop ( "Taipei" , "Kaohsiung" , U2 ) ;  <CR> a6 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String x4 , String i0 , String V2 , String y4 , String o1 ) {  <CR> this . title = x4 ;  <CR> this . receiver = i0 ;  <CR> this . content = V2 ;  <CR> this . sender = y4 ;  <CR> this . date = o1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int R3 ) {  <CR> this . x = R3 ;  <CR> }  <CR> public int compareTo ( Object m1 ) {  <CR> Letter t2 = ( Letter ) m1 ;  <CR> if ( this . x > t2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int z0 ) {  <CR> list [ z0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] I6 ) {  <CR> int z0 ;  <CR> for ( z0 = list . length - 1 ; z0 >= 0 ; z0 -- ) {  <CR> int g5 = z0 ;  <CR> Letter a0 = new Letter ( z0 ) ;  <CR> Letter v5 = new Letter ( g5 - 1 ) ;  <CR> if ( a0 . compareTo ( v5 ) == 1 )  <CR> a0 . display ( z0 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 