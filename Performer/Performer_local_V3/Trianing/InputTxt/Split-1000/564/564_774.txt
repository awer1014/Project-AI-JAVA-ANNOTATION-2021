 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String T7 , String Y2 , String S4 , String P7 , String B4 ) {  <CR> super ( T7 , Y2 , S4 , P7 , B4 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String K1 , String K3 , String E4 , String F8 , String B2 ) {  <CR> super ( K1 , K3 , E4 , F8 , B2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String U , String q8 , Evaluation l8 ) {  <CR> this . senderAddr = U ;  <CR> this . receiverAddr = q8 ;  <CR> this . letter = l8 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] r ) {  <CR> Evaluation l4 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop i2 = new Envelop ( "Taipei" , "Kaohsiung" , l4 ) ;  <CR> i2 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String U5 , String I3 , String P , String t1 , String X6 ) {  <CR> this . title = U5 ;  <CR> this . receiver = I3 ;  <CR> this . content = P ;  <CR> this . sender = t1 ;  <CR> this . date = X6 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int u7 ) {  <CR> this . x = u7 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] I4 ) {  <CR> int l9 ;  <CR> for ( l9 = list . length - 1 ; l9 >= 0 ; l9 -- ) {  <CR> int N5 = l9 ;  <CR> Letter C6 = new Letter ( l9 ) ;  <CR> Letter s8 = new Letter ( N5 - 1 ) ;  <CR> if ( C6 . compareTo ( s8 ) == 1 )  <CR> C6 . display ( l9 ) ;  <CR> }  <CR> }  <CR> public void display ( int l9 ) {  <CR> list [ l9 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object V8 ) {  <CR> Letter E1 = ( Letter ) V8 ;  <CR> if ( this . x > E1 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 