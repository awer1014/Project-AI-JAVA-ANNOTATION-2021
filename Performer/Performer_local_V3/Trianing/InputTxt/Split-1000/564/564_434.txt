 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String B9 , String E , String q2 , String P8 , String M8 ) {  <CR> super ( B9 , E , q2 , P8 , M8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String S7 , String p5 , String G5 , String e7 , String r7 ) {  <CR> super ( S7 , p5 , G5 , e7 , r7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String W7 , String T0 , Evaluation a4 ) {  <CR> this . senderAddr = W7 ;  <CR> this . receiverAddr = T0 ;  <CR> this . letter = a4 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] l0 ) {  <CR> Evaluation f8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop j4 = new Envelop ( "Taipei" , "Kaohsiung" , f8 ) ;  <CR> j4 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String E9 , String p3 , String e1 , String E4 , String f8 ) {  <CR> this . title = E9 ;  <CR> this . receiver = p3 ;  <CR> this . content = e1 ;  <CR> this . sender = E4 ;  <CR> this . date = f8 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static void main ( String [ ] j9 ) {  <CR> int z9 ;  <CR> for ( z9 = list . length - 1 ; z9 >= 0 ; z9 -- ) {  <CR> int h5 = z9 ;  <CR> Letter K3 = new Letter ( z9 ) ;  <CR> Letter C1 = new Letter ( h5 - 1 ) ;  <CR> if ( K3 . compareTo ( C1 ) == 1 )  <CR> K3 . display ( z9 ) ;  <CR> }  <CR> }  <CR> public void display ( int z9 ) {  <CR> list [ z9 ] . Display ( ) ;  <CR> }  <CR> Letter ( int w1 ) {  <CR> this . x = w1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object f ) {  <CR> Letter N8 = ( Letter ) f ;  <CR> if ( this . x > N8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 