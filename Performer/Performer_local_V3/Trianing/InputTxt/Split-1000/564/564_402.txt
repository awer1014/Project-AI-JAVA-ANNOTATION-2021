 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String T2 , String d4 , String e8 , String m6 , String j2 ) {  <CR> super ( T2 , d4 , e8 , m6 , j2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String e3 , String Z6 , String E3 , String d6 , String J2 ) {  <CR> super ( e3 , Z6 , E3 , d6 , J2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] O4 ) {  <CR> Evaluation A1 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop d8 = new Envelop ( "Taipei" , "Kaohsiung" , A1 ) ;  <CR> d8 . display ( ) ;  <CR> }  <CR> public Envelop ( String H8 , String Q , Evaluation d7 ) {  <CR> this . senderAddr = H8 ;  <CR> this . receiverAddr = Q ;  <CR> this . letter = d7 ;  <CR> }  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String F6 , String e5 , String E4 , String J2 , String n1 ) {  <CR> this . title = F6 ;  <CR> this . receiver = e5 ;  <CR> this . content = E4 ;  <CR> this . sender = J2 ;  <CR> this . date = n1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int p0 ) {  <CR> list [ p0 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] s9 ) {  <CR> int p0 ;  <CR> for ( p0 = list . length - 1 ; p0 >= 0 ; p0 -- ) {  <CR> int c8 = p0 ;  <CR> Letter K0 = new Letter ( p0 ) ;  <CR> Letter z6 = new Letter ( c8 - 1 ) ;  <CR> if ( K0 . compareTo ( z6 ) == 1 )  <CR> K0 . display ( p0 ) ;  <CR> }  <CR> }  <CR> Letter ( int g2 ) {  <CR> this . x = g2 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object F7 ) {  <CR> Letter m7 = ( Letter ) F7 ;  <CR> if ( this . x > m7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> }  <CR>  <EOC> 