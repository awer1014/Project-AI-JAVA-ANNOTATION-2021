 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String u6 , String Y6 , String D8 , String V3 , String X1 ) {  <CR> super ( u6 , Y6 , D8 , V3 , X1 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String a4 , String V1 , String P4 , String s0 , String Q3 ) {  <CR> super ( a4 , V1 , P4 , s0 , Q3 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String j9 , String S , Evaluation Q ) {  <CR> this . senderAddr = j9 ;  <CR> this . receiverAddr = S ;  <CR> this . letter = Q ;  <CR> }  <CR> public static void main ( String [ ] K3 ) {  <CR> Evaluation B7 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop G = new Envelop ( "Taipei" , "Kaohsiung" , B7 ) ;  <CR> G . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String u8 , String S4 , String X3 , String j6 , String h7 ) {  <CR> this . title = u8 ;  <CR> this . receiver = S4 ;  <CR> this . content = X3 ;  <CR> this . sender = j6 ;  <CR> this . date = h7 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int y2 ) {  <CR> list [ y2 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] T3 ) {  <CR> int y2 ;  <CR> for ( y2 = list . length - 1 ; y2 >= 0 ; y2 -- ) {  <CR> int w0 = y2 ;  <CR> Letter S7 = new Letter ( y2 ) ;  <CR> Letter N8 = new Letter ( w0 - 1 ) ;  <CR> if ( S7 . compareTo ( N8 ) == 1 )  <CR> S7 . display ( y2 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int E4 ) {  <CR> this . x = E4 ;  <CR> }  <CR> public int compareTo ( Object y9 ) {  <CR> Letter s7 = ( Letter ) y9 ;  <CR> if ( this . x > s7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 