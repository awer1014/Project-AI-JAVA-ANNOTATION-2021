 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String s2 , String B1 , String a5 , String n0 , String l6 ) {  <CR> super ( s2 , B1 , a5 , n0 , l6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String E , String D1 , String t8 , String C9 , String K1 ) {  <CR> super ( E , D1 , t8 , C9 , K1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> public Envelop ( String R , String V6 , Evaluation O8 ) {  <CR> this . senderAddr = R ;  <CR> this . receiverAddr = V6 ;  <CR> this . letter = O8 ;  <CR> }  <CR> public static void main ( String [ ] F1 ) {  <CR> Evaluation V0 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A8 = new Envelop ( "Taipei" , "Kaohsiung" , V0 ) ;  <CR> A8 . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public Evaluation ( String m , String x6 , String A8 , String B , String q1 ) {  <CR> this . title = m ;  <CR> this . receiver = x6 ;  <CR> this . content = A8 ;  <CR> this . sender = B ;  <CR> this . date = q1 ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] J9 ) {  <CR> int E8 ;  <CR> for ( E8 = list . length - 1 ; E8 >= 0 ; E8 -- ) {  <CR> int y3 = E8 ;  <CR> Letter x8 = new Letter ( E8 ) ;  <CR> Letter m = new Letter ( y3 - 1 ) ;  <CR> if ( x8 . compareTo ( m ) == 1 )  <CR> x8 . display ( E8 ) ;  <CR> }  <CR> }  <CR> Letter ( int M0 ) {  <CR> this . x = M0 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object p7 ) {  <CR> Letter C2 = ( Letter ) p7 ;  <CR> if ( this . x > C2 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int E8 ) {  <CR> list [ E8 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 