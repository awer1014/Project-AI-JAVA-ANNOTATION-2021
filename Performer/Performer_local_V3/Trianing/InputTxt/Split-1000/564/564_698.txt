 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String G6 , String o6 , String j0 , String W1 , String w2 ) {  <CR> super ( G6 , o6 , j0 , W1 , w2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L7 , String a , String I3 , String y5 , String G9 ) {  <CR> super ( L7 , a , I3 , y5 , G9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] x3 ) {  <CR> Evaluation V5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop m9 = new Envelop ( "Taipei" , "Kaohsiung" , V5 ) ;  <CR> m9 . display ( ) ;  <CR> }  <CR> public Envelop ( String M8 , String Z3 , Evaluation S0 ) {  <CR> this . senderAddr = M8 ;  <CR> this . receiverAddr = Z3 ;  <CR> this . letter = S0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public Evaluation ( String V3 , String F5 , String w1 , String H7 , String V1 ) {  <CR> this . title = V3 ;  <CR> this . receiver = F5 ;  <CR> this . content = w1 ;  <CR> this . sender = H7 ;  <CR> this . date = V1 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> private int x ;  <CR> public static void main ( String [ ] W3 ) {  <CR> int a4 ;  <CR> for ( a4 = list . length - 1 ; a4 >= 0 ; a4 -- ) {  <CR> int q = a4 ;  <CR> Letter E1 = new Letter ( a4 ) ;  <CR> Letter x8 = new Letter ( q - 1 ) ;  <CR> if ( E1 . compareTo ( x8 ) == 1 )  <CR> E1 . display ( a4 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object P5 ) {  <CR> Letter B3 = ( Letter ) P5 ;  <CR> if ( this . x > B3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int r4 ) {  <CR> this . x = r4 ;  <CR> }  <CR> public void display ( int a4 ) {  <CR> list [ a4 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 