 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String m , String I7 , String o5 , String I4 , String O1 ) {  <CR> super ( m , I7 , o5 , I4 , O1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public EnglishLetter ( String y7 , String M2 , String H2 , String I9 , String T2 ) {  <CR> super ( y7 , M2 , H2 , I9 , T2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] G9 ) {  <CR> Evaluation Z = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop I9 = new Envelop ( "Taipei" , "Kaohsiung" , Z ) ;  <CR> I9 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> public Envelop ( String t5 , String Q1 , Evaluation O2 ) {  <CR> this . senderAddr = t5 ;  <CR> this . receiverAddr = Q1 ;  <CR> this . letter = O2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String N , String N7 , String n4 , String c6 , String O8 ) {  <CR> this . title = N ;  <CR> this . receiver = N7 ;  <CR> this . content = n4 ;  <CR> this . sender = c6 ;  <CR> this . date = O8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int R2 ) {  <CR> this . x = R2 ;  <CR> }  <CR> public static void main ( String [ ] q9 ) {  <CR> int P3 ;  <CR> for ( P3 = list . length - 1 ; P3 >= 0 ; P3 -- ) {  <CR> int y4 = P3 ;  <CR> Letter v9 = new Letter ( P3 ) ;  <CR> Letter I8 = new Letter ( y4 - 1 ) ;  <CR> if ( v9 . compareTo ( I8 ) == 1 )  <CR> v9 . display ( P3 ) ;  <CR> }  <CR> }  <CR> public int compareTo ( Object G2 ) {  <CR> Letter P8 = ( Letter ) G2 ;  <CR> if ( this . x > P8 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int P3 ) {  <CR> list [ P3 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> }  <CR>  <EOC> 