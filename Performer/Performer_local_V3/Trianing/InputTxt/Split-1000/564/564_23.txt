 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q , String r0 , String W2 , String y0 , String n5 ) {  <CR> super ( q , r0 , W2 , y0 , n5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String L5 , String V4 , String S5 , String d2 , String i6 ) {  <CR> super ( L5 , V4 , S5 , d2 , i6 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] x4 ) {  <CR> Evaluation g5 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop Z5 = new Envelop ( "Taipei" , "Kaohsiung" , g5 ) ;  <CR> Z5 . display ( ) ;  <CR> }  <CR> public Envelop ( String b1 , String s1 , Evaluation Q3 ) {  <CR> this . senderAddr = b1 ;  <CR> this . receiverAddr = s1 ;  <CR> this . letter = Q3 ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String G4 , String o2 , String D1 , String x8 , String w2 ) {  <CR> this . title = G4 ;  <CR> this . receiver = o2 ;  <CR> this . content = D1 ;  <CR> this . sender = x8 ;  <CR> this . date = w2 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int e8 ) {  <CR> list [ e8 ] . Display ( ) ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> Letter ( int Z7 ) {  <CR> this . x = Z7 ;  <CR> }  <CR> public int compareTo ( Object I3 ) {  <CR> Letter T9 = ( Letter ) I3 ;  <CR> if ( this . x > T9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public static void main ( String [ ] T8 ) {  <CR> int e8 ;  <CR> for ( e8 = list . length - 1 ; e8 >= 0 ; e8 -- ) {  <CR> int b9 = e8 ;  <CR> Letter K = new Letter ( e8 ) ;  <CR> Letter Y0 = new Letter ( b9 - 1 ) ;  <CR> if ( K . compareTo ( Y0 ) == 1 )  <CR> K . display ( e8 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 