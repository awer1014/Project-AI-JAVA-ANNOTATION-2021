 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String E5 , String w6 , String o4 , String h0 , String K8 ) {  <CR> super ( E5 , w6 , o4 , h0 , K8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String M7 , String T7 , String g5 , String G5 , String p8 ) {  <CR> super ( M7 , T7 , g5 , G5 , p8 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String K8 , String i4 , Evaluation r2 ) {  <CR> this . senderAddr = K8 ;  <CR> this . receiverAddr = i4 ;  <CR> this . letter = r2 ;  <CR> }  <CR> Evaluation letter ;  <CR> public static void main ( String [ ] l0 ) {  <CR> Evaluation S = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z5 = new Envelop ( "Taipei" , "Kaohsiung" , S ) ;  <CR> z5 . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String N5 , String X2 , String O3 , String x9 , String o0 ) {  <CR> this . title = N5 ;  <CR> this . receiver = X2 ;  <CR> this . content = O3 ;  <CR> this . sender = x9 ;  <CR> this . date = o0 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public void display ( int N3 ) {  <CR> list [ N3 ] . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] g5 ) {  <CR> int N3 ;  <CR> for ( N3 = list . length - 1 ; N3 >= 0 ; N3 -- ) {  <CR> int Y1 = N3 ;  <CR> Letter O6 = new Letter ( N3 ) ;  <CR> Letter e0 = new Letter ( Y1 - 1 ) ;  <CR> if ( O6 . compareTo ( e0 ) == 1 )  <CR> O6 . display ( N3 ) ;  <CR> }  <CR> }  <CR> private int x ;  <CR> Letter ( int X2 ) {  <CR> this . x = X2 ;  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public int compareTo ( Object e6 ) {  <CR> Letter F0 = ( Letter ) e6 ;  <CR> if ( this . x > F0 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> }  <CR>  <EOC> 