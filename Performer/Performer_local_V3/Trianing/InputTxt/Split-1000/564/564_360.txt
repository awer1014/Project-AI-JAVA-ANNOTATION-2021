 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String q8 , String C2 , String J6 , String Y4 , String w0 ) {  <CR> super ( q8 , C2 , J6 , Y4 , w0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String f9 , String W4 , String Q , String c4 , String B1 ) {  <CR> super ( f9 , W4 , Q , c4 , B1 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> public static void main ( String [ ] z9 ) {  <CR> Evaluation f8 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop V0 = new Envelop ( "Taipei" , "Kaohsiung" , f8 ) ;  <CR> V0 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String q0 , String B2 , Evaluation e5 ) {  <CR> this . senderAddr = q0 ;  <CR> this . receiverAddr = B2 ;  <CR> this . letter = e5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public Evaluation ( String e4 , String h7 , String F4 , String W7 , String o9 ) {  <CR> this . title = e4 ;  <CR> this . receiver = h7 ;  <CR> this . content = F4 ;  <CR> this . sender = W7 ;  <CR> this . date = o9 ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> Letter ( int p8 ) {  <CR> this . x = p8 ;  <CR> }  <CR> public static void main ( String [ ] v9 ) {  <CR> int C1 ;  <CR> for ( C1 = list . length - 1 ; C1 >= 0 ; C1 -- ) {  <CR> int p2 = C1 ;  <CR> Letter l5 = new Letter ( C1 ) ;  <CR> Letter M0 = new Letter ( p2 - 1 ) ;  <CR> if ( l5 . compareTo ( M0 ) == 1 )  <CR> l5 . display ( C1 ) ;  <CR> }  <CR> }  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> private int x ;  <CR> public int compareTo ( Object s2 ) {  <CR> Letter H9 = ( Letter ) s2 ;  <CR> if ( this . x > H9 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int C1 ) {  <CR> list [ C1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 