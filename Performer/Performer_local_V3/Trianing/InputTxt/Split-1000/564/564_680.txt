 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String Z0 , String h , String w , String m2 , String h8 ) {  <CR> super ( Z0 , h , w , m2 , h8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String o2 , String z4 , String z , String w4 , String y2 ) {  <CR> super ( o2 , z4 , z , w4 , y2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String g0 , String Q7 , Evaluation m4 ) {  <CR> this . senderAddr = g0 ;  <CR> this . receiverAddr = Q7 ;  <CR> this . letter = m4 ;  <CR> }  <CR> public static void main ( String [ ] n2 ) {  <CR> Evaluation T6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop z3 = new Envelop ( "Taipei" , "Kaohsiung" , T6 ) ;  <CR> z3 . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> protected String title , receiver , content , sender , date ;  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> public Evaluation ( String w3 , String C6 , String c5 , String b7 , String Q8 ) {  <CR> this . title = w3 ;  <CR> this . receiver = C6 ;  <CR> this . content = c5 ;  <CR> this . sender = b7 ;  <CR> this . date = Q8 ;  <CR> }  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public static void main ( String [ ] O1 ) {  <CR> int F1 ;  <CR> for ( F1 = list . length - 1 ; F1 >= 0 ; F1 -- ) {  <CR> int N4 = F1 ;  <CR> Letter J7 = new Letter ( F1 ) ;  <CR> Letter Y0 = new Letter ( N4 - 1 ) ;  <CR> if ( J7 . compareTo ( Y0 ) == 1 )  <CR> J7 . display ( F1 ) ;  <CR> }  <CR> }  <CR> Letter ( int i3 ) {  <CR> this . x = i3 ;  <CR> }  <CR> private int x ;  <CR> public int compareTo ( Object h8 ) {  <CR> Letter d7 = ( Letter ) h8 ;  <CR> if ( this . x > d7 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int F1 ) {  <CR> list [ F1 ] . Display ( ) ;  <CR> }  <CR> }  <CR>  <EOC> 