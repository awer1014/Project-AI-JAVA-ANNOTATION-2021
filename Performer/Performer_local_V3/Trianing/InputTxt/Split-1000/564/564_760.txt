 <BOC> public class ChineseLetter extends Evaluation {  <CR> public ChineseLetter ( String y7 , String D5 , String L8 , String K1 , String b2 ) {  <CR> super ( y7 , D5 , L8 , K1 , b2 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String I0 , String z2 , String O , String x8 , String X ) {  <CR> super ( I0 , z2 , O , x8 , X ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public Envelop ( String O6 , String l1 , Evaluation I ) {  <CR> this . senderAddr = O6 ;  <CR> this . receiverAddr = l1 ;  <CR> this . letter = I ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public static void main ( String [ ] o9 ) {  <CR> Evaluation F6 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop A1 = new Envelop ( "Taipei" , "Kaohsiung" , F6 ) ;  <CR> A1 . display ( ) ;  <CR> }  <CR> Evaluation letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Evaluation ( String s3 , String s9 , String y4 , String x0 , String u1 ) {  <CR> this . title = s3 ;  <CR> this . receiver = s9 ;  <CR> this . content = y4 ;  <CR> this . sender = x0 ;  <CR> this . date = u1 ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> public void display ( int m3 ) {  <CR> list [ m3 ] . Display ( ) ;  <CR> }  <CR> public int compareTo ( Object G8 ) {  <CR> Letter K = ( Letter ) G8 ;  <CR> if ( this . x > K . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> Letter ( int f1 ) {  <CR> this . x = f1 ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] B2 ) {  <CR> int m3 ;  <CR> for ( m3 = list . length - 1 ; m3 >= 0 ; m3 -- ) {  <CR> int V7 = m3 ;  <CR> Letter q3 = new Letter ( m3 ) ;  <CR> Letter u9 = new Letter ( V7 - 1 ) ;  <CR> if ( q3 . compareTo ( u9 ) == 1 )  <CR> q3 . display ( m3 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 