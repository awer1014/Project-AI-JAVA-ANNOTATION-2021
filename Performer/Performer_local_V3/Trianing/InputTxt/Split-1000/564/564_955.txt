 <BOC> public class ChineseLetter extends Evaluation {  <CR> public void Display ( ) {  <CR> System . out . println ( getReceiver ( ) + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( getSender ( ) + " 敬上" ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> public ChineseLetter ( String C9 , String M6 , String r3 , String C3 , String r6 ) {  <CR> super ( C9 , M6 , r3 , C3 , r6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Evaluation {  <CR> public EnglishLetter ( String g6 , String F8 , String X1 , String B8 , String S9 ) {  <CR> super ( g6 , F8 , X1 , B8 , S9 ) ;  <CR> }  <CR> public void Display ( ) {  <CR> System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( getSender ( ) ) ;  <CR> System . out . println ( getDate ( ) ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> public static void main ( String [ ] g7 ) {  <CR> Evaluation I3 = new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) ;  <CR> Envelop k = new Envelop ( "Taipei" , "Kaohsiung" , I3 ) ;  <CR> k . display ( ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr ) ;  <CR> System . out . println ( "To: " + receiverAddr ) ;  <CR> letter . Display ( ) ;  <CR> }  <CR> public Envelop ( String H3 , String a , Evaluation M1 ) {  <CR> this . senderAddr = H3 ;  <CR> this . receiverAddr = a ;  <CR> this . letter = M1 ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Evaluation letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Evaluation {  <CR> public String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String title , receiver , content , sender , date ;  <CR> public String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract protected void Display ( ) ;  <CR> public Evaluation ( String s9 , String w0 , String d8 , String E0 , String p8 ) {  <CR> this . title = s9 ;  <CR> this . receiver = w0 ;  <CR> this . content = d8 ;  <CR> this . sender = E0 ;  <CR> this . date = p8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Letter implements Comparable {  <CR> public static Evaluation [ ] list = { new ChineseLetter ( "教授" , "朱" , "很高興跟您連絡" , "豐緒" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "2018/07/05" ) } ;  <CR> Letter ( int F0 ) {  <CR> this . x = F0 ;  <CR> }  <CR> public int compareTo ( Object P5 ) {  <CR> Letter k3 = ( Letter ) P5 ;  <CR> if ( this . x > k3 . x ) return 1 ;  <CR> else return - 1 ;  <CR> }  <CR> public void display ( int W9 ) {  <CR> list [ W9 ] . Display ( ) ;  <CR> }  <CR> private int x ;  <CR> public static void main ( String [ ] E3 ) {  <CR> int W9 ;  <CR> for ( W9 = list . length - 1 ; W9 >= 0 ; W9 -- ) {  <CR> int T9 = W9 ;  <CR> Letter o7 = new Letter ( W9 ) ;  <CR> Letter L1 = new Letter ( T9 - 1 ) ;  <CR> if ( o7 . compareTo ( L1 ) == 1 )  <CR> o7 . display ( W9 ) ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 