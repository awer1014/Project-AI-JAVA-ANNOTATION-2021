 <BOC> import java . util . Arrays ;  <CR> public class Card {  <CR> public static void main ( String e2 ) {  <CR> Arrays . sort ( list ) ;  <CR> for ( Letter o2 : list )  <CR> o2 . display ( ) ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> ChineseLetter ( String O8 , String c2 , String t6 , String f1 , String G7 ) {  <CR> super ( O8 , c2 , t6 , f1 , G7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String N5 , String n9 , String o1 , String u0 , String b8 ) {  <CR> super ( N5 , n9 , o1 , u0 , b8 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter implements Comparable {  <CR> Letter ( String f9 , String H1 , String S1 , String K4 , String w3 ) {  <CR> this . title = f9 ;  <CR> this . receiver = H1 ;  <CR> this . content = S1 ;  <CR> this . sender = K4 ;  <CR> this . date = w3 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> public int compareTo ( Object v1 ) {  <CR> Letter C1 = ( Letter ) v1 ;  <CR> if ( Integer . parseInt ( this . getDate ( ) ) < Integer . parseInt ( C1 . getDate ( ) ) ) {  <CR> return 1 ;  <CR> }  <CR> else if ( Integer . parseInt ( this . getDate ( ) ) > Integer . parseInt ( C1 . getDate ( ) ) ) {  <CR> return - 1 ;  <CR> }  <CR> else {  <CR> return 0 ;  <CR> }  <CR> }  <CR> abstract void display ( ) ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> }  <CR>  <EOC> 