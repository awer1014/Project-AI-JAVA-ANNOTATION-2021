 <BOC> import java . util . Arrays ;  <CR> public class Card {  <CR> public static void main ( String e ) {  <CR> Arrays . sort ( list ) ;  <CR> for ( Letter O4 : list )  <CR> O4 . display ( ) ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> ChineseLetter ( String q4 , String r0 , String A0 , String V2 , String a8 ) {  <CR> super ( q4 , r0 , A0 , V2 , a8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String h7 , String W6 , String j , String B5 , String r7 ) {  <CR> super ( h7 , W6 , j , B5 , r7 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter implements Comparable {  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract void display ( ) ;  <CR> String title , receiver , content , sender , date ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> Letter ( String g6 , String I5 , String h0 , String Y4 , String s2 ) {  <CR> this . title = g6 ;  <CR> this . receiver = I5 ;  <CR> this . content = h0 ;  <CR> this . sender = Y4 ;  <CR> this . date = s2 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public int compareTo ( Object E3 ) {  <CR> Letter H1 = ( Letter ) E3 ;  <CR> if ( Integer . parseInt ( this . getDate ( ) ) < Integer . parseInt ( H1 . getDate ( ) ) ) {  <CR> return 1 ;  <CR> }  <CR> else if ( Integer . parseInt ( this . getDate ( ) ) > Integer . parseInt ( H1 . getDate ( ) ) ) {  <CR> return - 1 ;  <CR> }  <CR> else {  <CR> return 0 ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 