 <BOC> import java . util . Arrays ;  <CR> public class Card {  <CR> public static void main ( String p6 ) {  <CR> Arrays . sort ( list ) ;  <CR> for ( Letter M6 : list )  <CR> M6 . display ( ) ;  <CR> }  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> ChineseLetter ( String r3 , String q9 , String M4 , String z4 , String D6 ) {  <CR> super ( r3 , q9 , M4 , z4 , D6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> EnglishLetter ( String l4 , String D9 , String t9 , String e9 , String K8 ) {  <CR> super ( l4 , D9 , t9 , e9 , K8 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter implements Comparable {  <CR> String title , receiver , content , sender , date ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String M4 , String Q7 , String N , String B6 , String L2 ) {  <CR> this . title = M4 ;  <CR> this . receiver = Q7 ;  <CR> this . content = N ;  <CR> this . sender = B6 ;  <CR> this . date = L2 ;  <CR> }  <CR> abstract void display ( ) ;  <CR> public int compareTo ( Object P3 ) {  <CR> Letter Q9 = ( Letter ) P3 ;  <CR> if ( Integer . parseInt ( this . getDate ( ) ) < Integer . parseInt ( Q9 . getDate ( ) ) ) {  <CR> return 1 ;  <CR> }  <CR> else if ( Integer . parseInt ( this . getDate ( ) ) > Integer . parseInt ( Q9 . getDate ( ) ) ) {  <CR> return - 1 ;  <CR> }  <CR> else {  <CR> return 0 ;  <CR> }  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> }  <CR>  <EOC> 