 <BOC> import java . util . Arrays ;  <CR> public class Card {  <CR> static Letter [ ] list = { new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "20190105" ) , new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "20181101" ) , new EnglishLetter ( "Professor" , "Liu" , "I am sorry!" , "K. Ming" , "20180705" ) } ;  <CR> public static void main ( String i8 ) {  <CR> Arrays . sort ( list ) ;  <CR> for ( Letter g : list )  <CR> g . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String n , String O8 , String y7 , String G2 , String S3 ) {  <CR> super ( n , O8 , y7 , G2 , S3 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> EnglishLetter ( String p4 , String a2 , String W5 , String G3 , String V ) {  <CR> super ( p4 , a2 , W5 , G3 , V ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter implements Comparable {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract void display ( ) ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> Letter ( String t6 , String y7 , String B6 , String K2 , String t8 ) {  <CR> this . title = t6 ;  <CR> this . receiver = y7 ;  <CR> this . content = B6 ;  <CR> this . sender = K2 ;  <CR> this . date = t8 ;  <CR> }  <CR> String title , receiver , content , sender , date ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> public int compareTo ( Object M2 ) {  <CR> Letter k1 = ( Letter ) M2 ;  <CR> if ( Integer . parseInt ( this . getDate ( ) ) < Integer . parseInt ( k1 . getDate ( ) ) ) {  <CR> return 1 ;  <CR> }  <CR> else if ( Integer . parseInt ( this . getDate ( ) ) > Integer . parseInt ( k1 . getDate ( ) ) ) {  <CR> return - 1 ;  <CR> }  <CR> else {  <CR> return 0 ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 