 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String R7 , String K6 ) {  <CR> this . id = R7 ;  <CR> this . tel = K6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] k ) {  <CR> String R7 ;  <CR> String K6 ;  <CR> Scanner v2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> R7 = v2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> K6 = v2 . nextLine ( ) ;  <CR> Keeper f = new Keeper ( R7 , K6 ) ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> public static void main ( String [ ] K1 ) {  <CR> String l4 ;  <CR> String Z6 ;  <CR> String d6 ;  <CR> String x0 ;  <CR> String a5 ;  <CR> Scanner M4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> x0 = M4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> a5 = M4 . nextLine ( ) ;  <CR> Keeper y6 = new Keeper ( x0 , a5 ) ;  <CR> Scanner M4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> l4 = M4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> d6 = M4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> Z6 = M4 . nextLine ( ) ;  <CR> pet N0 = new pet ( l4 , Z6 , d6 , y6 ) ;  <CR> String H5 = N0 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + H5 ) ;  <CR> }  <CR> String name ;  <CR> String pid ;  <CR> static int count ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String type ;  <CR> void Pet ( String l4 , String Z6 , String d6 , Keeper M1 ) {  <CR> count ++ ;  <CR> this . pid = l4 ;  <CR> this . name = Z6 ;  <CR> this . type = d6 ;  <CR> this . keeper = M1 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> Keeper keeper ;  <CR> }  <CR>  <EOC> 