 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String O8 , String x7 ) {  <CR> this . id = O8 ;  <CR> this . tel = x7 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> public static void main ( String [ ] m2 ) {  <CR> String O8 ;  <CR> String x7 ;  <CR> Scanner W9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> O8 = W9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> x7 = W9 . nextLine ( ) ;  <CR> Keeper v = new Keeper ( O8 , x7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> Keeper keeper ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> static int count ;  <CR> void Pet ( String N5 , String x6 , String I4 , Keeper I3 ) {  <CR> count ++ ;  <CR> this . pid = N5 ;  <CR> this . name = x6 ;  <CR> this . type = I4 ;  <CR> this . keeper = I3 ;  <CR> }  <CR> String name ;  <CR> public static void main ( String [ ] C ) {  <CR> String N5 ;  <CR> String x6 ;  <CR> String I4 ;  <CR> String p1 ;  <CR> String T1 ;  <CR> Scanner K5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> p1 = K5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> T1 = K5 . nextLine ( ) ;  <CR> Keeper T0 = new Keeper ( p1 , T1 ) ;  <CR> Scanner K5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> N5 = K5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> I4 = K5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> x6 = K5 . nextLine ( ) ;  <CR> pet H2 = new pet ( N5 , x6 , I4 , T0 ) ;  <CR> String F = H2 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + F ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> String type ;  <CR> }  <CR>  <EOC> 