 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> public static void main ( String [ ] N7 ) {  <CR> String e3 ;  <CR> String w3 ;  <CR> Scanner C = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> e3 = C . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> w3 = C . nextLine ( ) ;  <CR> Keeper u = new Keeper ( e3 , w3 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> void Keeper ( String e3 , String w3 ) {  <CR> this . id = e3 ;  <CR> this . tel = w3 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> String type ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> public static void main ( String [ ] t4 ) {  <CR> String F7 ;  <CR> String X3 ;  <CR> String A ;  <CR> String K5 ;  <CR> String E8 ;  <CR> Scanner O0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> K5 = O0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> E8 = O0 . nextLine ( ) ;  <CR> Keeper P = new Keeper ( K5 , E8 ) ;  <CR> Scanner O0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> F7 = O0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> A = O0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> X3 = O0 . nextLine ( ) ;  <CR> pet F3 = new pet ( F7 , X3 , A , P ) ;  <CR> String S4 = F3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + S4 ) ;  <CR> }  <CR> String name ;  <CR> void Pet ( String F7 , String X3 , String A , Keeper F9 ) {  <CR> count ++ ;  <CR> this . pid = F7 ;  <CR> this . name = X3 ;  <CR> this . type = A ;  <CR> this . keeper = F9 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> static int count ;  <CR> }  <CR>  <EOC> 