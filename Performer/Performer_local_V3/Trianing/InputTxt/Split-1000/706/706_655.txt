 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> public static void main ( String [ ] h4 ) {  <CR> String S8 ;  <CR> String p8 ;  <CR> Scanner E9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> S8 = E9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> p8 = E9 . nextLine ( ) ;  <CR> Keeper b1 = new Keeper ( S8 , p8 ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String S8 , String p8 ) {  <CR> this . id = S8 ;  <CR> this . tel = p8 ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> void Pet ( String b9 , String A1 , String d2 , Keeper S1 ) {  <CR> count ++ ;  <CR> this . pid = b9 ;  <CR> this . name = A1 ;  <CR> this . type = d2 ;  <CR> this . keeper = S1 ;  <CR> }  <CR> String type ;  <CR> public static void main ( String [ ] R9 ) {  <CR> String b9 ;  <CR> String A1 ;  <CR> String d2 ;  <CR> String e4 ;  <CR> String C ;  <CR> Scanner J0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> e4 = J0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> C = J0 . nextLine ( ) ;  <CR> Keeper Q2 = new Keeper ( e4 , C ) ;  <CR> Scanner J0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> b9 = J0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> d2 = J0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> A1 = J0 . nextLine ( ) ;  <CR> pet Z6 = new pet ( b9 , A1 , d2 , Q2 ) ;  <CR> String j = Z6 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + j ) ;  <CR> }  <CR> String pid ;  <CR> static int count ;  <CR> String name ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 