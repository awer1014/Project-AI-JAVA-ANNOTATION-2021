 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> public static void main ( String [ ] W9 ) {  <CR> String t1 ;  <CR> String e6 ;  <CR> Scanner c6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> t1 = c6 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> e6 = c6 . nextLine ( ) ;  <CR> Keeper v3 = new Keeper ( t1 , e6 ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String t1 , String e6 ) {  <CR> this . id = t1 ;  <CR> this . tel = e6 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> public static void main ( String [ ] I ) {  <CR> String n0 ;  <CR> String Q7 ;  <CR> String j0 ;  <CR> String W5 ;  <CR> String w8 ;  <CR> Scanner d5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> W5 = d5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> w8 = d5 . nextLine ( ) ;  <CR> Keeper i5 = new Keeper ( W5 , w8 ) ;  <CR> Scanner d5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> n0 = d5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> j0 = d5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> Q7 = d5 . nextLine ( ) ;  <CR> pet A5 = new pet ( n0 , Q7 , j0 , i5 ) ;  <CR> String L5 = A5 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + L5 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> static int count ;  <CR> Keeper keeper ;  <CR> void Pet ( String n0 , String Q7 , String j0 , Keeper Y5 ) {  <CR> count ++ ;  <CR> this . pid = n0 ;  <CR> this . name = Q7 ;  <CR> this . type = j0 ;  <CR> this . keeper = Y5 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> String type ;  <CR> }  <CR>  <EOC> 