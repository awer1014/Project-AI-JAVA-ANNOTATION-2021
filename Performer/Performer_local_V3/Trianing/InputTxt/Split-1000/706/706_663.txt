 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String J9 , String R6 ) {  <CR> this . id = J9 ;  <CR> this . tel = R6 ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] n1 ) {  <CR> String J9 ;  <CR> String R6 ;  <CR> Scanner z = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> J9 = z . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> R6 = z . nextLine ( ) ;  <CR> Keeper Z1 = new Keeper ( J9 , R6 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> void Pet ( String L5 , String o , String N , Keeper H7 ) {  <CR> count ++ ;  <CR> this . pid = L5 ;  <CR> this . name = o ;  <CR> this . type = N ;  <CR> this . keeper = H7 ;  <CR> }  <CR> public static void main ( String [ ] t2 ) {  <CR> String L5 ;  <CR> String o ;  <CR> String N ;  <CR> String G5 ;  <CR> String S1 ;  <CR> Scanner a9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> G5 = a9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> S1 = a9 . nextLine ( ) ;  <CR> Keeper u1 = new Keeper ( G5 , S1 ) ;  <CR> Scanner a9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> L5 = a9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> N = a9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> o = a9 . nextLine ( ) ;  <CR> pet L6 = new pet ( L5 , o , N , u1 ) ;  <CR> String n1 = L6 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + n1 ) ;  <CR> }  <CR> static int count ;  <CR> String name ;  <CR> String type ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 