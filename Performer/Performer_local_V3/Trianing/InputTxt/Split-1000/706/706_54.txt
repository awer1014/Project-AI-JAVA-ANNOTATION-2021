 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> public static void main ( String [ ] W2 ) {  <CR> String y3 ;  <CR> String D0 ;  <CR> Scanner j2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> y3 = j2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> D0 = j2 . nextLine ( ) ;  <CR> Keeper L = new Keeper ( y3 , D0 ) ;  <CR> }  <CR> String tel ;  <CR> void Keeper ( String y3 , String D0 ) {  <CR> this . id = y3 ;  <CR> this . tel = D0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> Keeper keeper ;  <CR> static int count ;  <CR> public static void main ( String [ ] F7 ) {  <CR> String Z ;  <CR> String K1 ;  <CR> String i3 ;  <CR> String V8 ;  <CR> String A ;  <CR> Scanner H5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> V8 = H5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> A = H5 . nextLine ( ) ;  <CR> Keeper a8 = new Keeper ( V8 , A ) ;  <CR> Scanner H5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> Z = H5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> i3 = H5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> K1 = H5 . nextLine ( ) ;  <CR> pet Y9 = new pet ( Z , K1 , i3 , a8 ) ;  <CR> String M3 = Y9 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + M3 ) ;  <CR> }  <CR> String type ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> void Pet ( String Z , String K1 , String i3 , Keeper K0 ) {  <CR> count ++ ;  <CR> this . pid = Z ;  <CR> this . name = K1 ;  <CR> this . type = i3 ;  <CR> this . keeper = K0 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 