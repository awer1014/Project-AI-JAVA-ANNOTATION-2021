 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> void Keeper ( String h9 , String x1 ) {  <CR> this . id = h9 ;  <CR> this . tel = x1 ;  <CR> }  <CR> public static void main ( String [ ] X8 ) {  <CR> String h9 ;  <CR> String x1 ;  <CR> Scanner t0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> h9 = t0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> x1 = t0 . nextLine ( ) ;  <CR> Keeper N5 = new Keeper ( h9 , x1 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> Keeper keeper ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String type ;  <CR> public static void main ( String [ ] k6 ) {  <CR> String K5 ;  <CR> String E ;  <CR> String V7 ;  <CR> String E6 ;  <CR> String l6 ;  <CR> Scanner B5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> E6 = B5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> l6 = B5 . nextLine ( ) ;  <CR> Keeper n6 = new Keeper ( E6 , l6 ) ;  <CR> Scanner B5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> K5 = B5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> V7 = B5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> E = B5 . nextLine ( ) ;  <CR> pet O8 = new pet ( K5 , E , V7 , n6 ) ;  <CR> String X8 = O8 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + X8 ) ;  <CR> }  <CR> String name ;  <CR> static int count ;  <CR> String pid ;  <CR> void Pet ( String K5 , String E , String V7 , Keeper U7 ) {  <CR> count ++ ;  <CR> this . pid = K5 ;  <CR> this . name = E ;  <CR> this . type = V7 ;  <CR> this . keeper = U7 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 