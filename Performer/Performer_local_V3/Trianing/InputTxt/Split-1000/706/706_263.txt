 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> public static void main ( String [ ] j1 ) {  <CR> String n7 ;  <CR> String Q8 ;  <CR> Scanner e5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> n7 = e5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> Q8 = e5 . nextLine ( ) ;  <CR> Keeper j8 = new Keeper ( n7 , Q8 ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String n7 , String Q8 ) {  <CR> this . id = n7 ;  <CR> this . tel = Q8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> Keeper keeper ;  <CR> void Pet ( String v5 , String E7 , String B8 , Keeper x0 ) {  <CR> count ++ ;  <CR> this . pid = v5 ;  <CR> this . name = E7 ;  <CR> this . type = B8 ;  <CR> this . keeper = x0 ;  <CR> }  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String type ;  <CR> public static void main ( String [ ] u5 ) {  <CR> String v5 ;  <CR> String E7 ;  <CR> String B8 ;  <CR> String L7 ;  <CR> String f0 ;  <CR> Scanner X2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> L7 = X2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> f0 = X2 . nextLine ( ) ;  <CR> Keeper M7 = new Keeper ( L7 , f0 ) ;  <CR> Scanner X2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> v5 = X2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> B8 = X2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> E7 = X2 . nextLine ( ) ;  <CR> pet M5 = new pet ( v5 , E7 , B8 , M7 ) ;  <CR> String I3 = M5 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + I3 ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> static int count ;  <CR> String pid ;  <CR> }  <CR>  <EOC> 