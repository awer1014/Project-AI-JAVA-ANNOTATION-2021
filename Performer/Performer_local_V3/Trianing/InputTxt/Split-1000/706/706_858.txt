 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> String tel ;  <CR> public static void main ( String [ ] M8 ) {  <CR> String E7 ;  <CR> String U8 ;  <CR> Scanner V5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> E7 = V5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> U8 = V5 . nextLine ( ) ;  <CR> Keeper T7 = new Keeper ( E7 , U8 ) ;  <CR> }  <CR> void Keeper ( String E7 , String U8 ) {  <CR> this . id = E7 ;  <CR> this . tel = U8 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String g1 , String F4 , String i , Keeper c6 ) {  <CR> count ++ ;  <CR> this . pid = g1 ;  <CR> this . name = F4 ;  <CR> this . type = i ;  <CR> this . keeper = c6 ;  <CR> }  <CR> public static void main ( String [ ] I1 ) {  <CR> String g1 ;  <CR> String F4 ;  <CR> String i ;  <CR> String o4 ;  <CR> String Z6 ;  <CR> Scanner C3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> o4 = C3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> Z6 = C3 . nextLine ( ) ;  <CR> Keeper W0 = new Keeper ( o4 , Z6 ) ;  <CR> Scanner C3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> g1 = C3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> i = C3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> F4 = C3 . nextLine ( ) ;  <CR> pet Y3 = new pet ( g1 , F4 , i , W0 ) ;  <CR> String C4 = Y3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + C4 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> String type ;  <CR> String pid ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> Keeper keeper ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 