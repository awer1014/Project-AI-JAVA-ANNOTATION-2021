 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] Z8 ) {  <CR> String I7 ;  <CR> String m0 ;  <CR> Scanner A8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> I7 = A8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> m0 = A8 . nextLine ( ) ;  <CR> Keeper k5 = new Keeper ( I7 , m0 ) ;  <CR> }  <CR> void Keeper ( String I7 , String m0 ) {  <CR> this . id = I7 ;  <CR> this . tel = m0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String name ;  <CR> void Pet ( String E6 , String r9 , String f6 , Keeper Q4 ) {  <CR> count ++ ;  <CR> this . pid = E6 ;  <CR> this . name = r9 ;  <CR> this . type = f6 ;  <CR> this . keeper = Q4 ;  <CR> }  <CR> static int count ;  <CR> public static void main ( String [ ] Q3 ) {  <CR> String E6 ;  <CR> String r9 ;  <CR> String f6 ;  <CR> String I7 ;  <CR> String e8 ;  <CR> Scanner p3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> I7 = p3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> e8 = p3 . nextLine ( ) ;  <CR> Keeper g = new Keeper ( I7 , e8 ) ;  <CR> Scanner p3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> E6 = p3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> f6 = p3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> r9 = p3 . nextLine ( ) ;  <CR> pet j3 = new pet ( E6 , r9 , f6 , g ) ;  <CR> String s0 = j3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + s0 ) ;  <CR> }  <CR> String type ;  <CR> String pid ;  <CR> Keeper keeper ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 