 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] o0 ) {  <CR> String y7 ;  <CR> String f4 ;  <CR> Scanner U7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> y7 = U7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> f4 = U7 . nextLine ( ) ;  <CR> Keeper G0 = new Keeper ( y7 , f4 ) ;  <CR> }  <CR> void Keeper ( String y7 , String f4 ) {  <CR> this . id = y7 ;  <CR> this . tel = f4 ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> static int count ;  <CR> public static void main ( String [ ] t9 ) {  <CR> String v7 ;  <CR> String I9 ;  <CR> String j0 ;  <CR> String o2 ;  <CR> String k8 ;  <CR> Scanner E0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> o2 = E0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> k8 = E0 . nextLine ( ) ;  <CR> Keeper w6 = new Keeper ( o2 , k8 ) ;  <CR> Scanner E0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> v7 = E0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> j0 = E0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> I9 = E0 . nextLine ( ) ;  <CR> pet i9 = new pet ( v7 , I9 , j0 , w6 ) ;  <CR> String b5 = i9 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + b5 ) ;  <CR> }  <CR> String pid ;  <CR> Keeper keeper ;  <CR> String type ;  <CR> String name ;  <CR> void Pet ( String v7 , String I9 , String j0 , Keeper k3 ) {  <CR> count ++ ;  <CR> this . pid = v7 ;  <CR> this . name = I9 ;  <CR> this . type = j0 ;  <CR> this . keeper = k3 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 