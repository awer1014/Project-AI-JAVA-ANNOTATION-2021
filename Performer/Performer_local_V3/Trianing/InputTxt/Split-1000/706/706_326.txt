 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String V3 , String O7 ) {  <CR> this . id = V3 ;  <CR> this . tel = O7 ;  <CR> }  <CR> public static void main ( String [ ] q6 ) {  <CR> String V3 ;  <CR> String O7 ;  <CR> Scanner O2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> V3 = O2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> O7 = O2 . nextLine ( ) ;  <CR> Keeper y1 = new Keeper ( V3 , O7 ) ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String T2 , String R3 , String Z6 , Keeper I3 ) {  <CR> count ++ ;  <CR> this . pid = T2 ;  <CR> this . name = R3 ;  <CR> this . type = Z6 ;  <CR> this . keeper = I3 ;  <CR> }  <CR> String name ;  <CR> public static void main ( String [ ] X3 ) {  <CR> String T2 ;  <CR> String R3 ;  <CR> String Z6 ;  <CR> String h8 ;  <CR> String I2 ;  <CR> Scanner y3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> h8 = y3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> I2 = y3 . nextLine ( ) ;  <CR> Keeper i5 = new Keeper ( h8 , I2 ) ;  <CR> Scanner y3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> T2 = y3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> Z6 = y3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> R3 = y3 . nextLine ( ) ;  <CR> pet F2 = new pet ( T2 , R3 , Z6 , i5 ) ;  <CR> String r7 = F2 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + r7 ) ;  <CR> }  <CR> String type ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 