 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> void Keeper ( String r6 , String A4 ) {  <CR> this . id = r6 ;  <CR> this . tel = A4 ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] d0 ) {  <CR> String r6 ;  <CR> String A4 ;  <CR> Scanner J7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> r6 = J7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> A4 = J7 . nextLine ( ) ;  <CR> Keeper j8 = new Keeper ( r6 , A4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> static int count ;  <CR> String name ;  <CR> String type ;  <CR> void Pet ( String N7 , String l1 , String q , Keeper O9 ) {  <CR> count ++ ;  <CR> this . pid = N7 ;  <CR> this . name = l1 ;  <CR> this . type = q ;  <CR> this . keeper = O9 ;  <CR> }  <CR> public static void main ( String [ ] a1 ) {  <CR> String N7 ;  <CR> String l1 ;  <CR> String q ;  <CR> String b0 ;  <CR> String E6 ;  <CR> Scanner M6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> b0 = M6 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> E6 = M6 . nextLine ( ) ;  <CR> Keeper u7 = new Keeper ( b0 , E6 ) ;  <CR> Scanner M6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> N7 = M6 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> q = M6 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> l1 = M6 . nextLine ( ) ;  <CR> pet P3 = new pet ( N7 , l1 , q , u7 ) ;  <CR> String o7 = P3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + o7 ) ;  <CR> }  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> }  <CR>  <EOC> 