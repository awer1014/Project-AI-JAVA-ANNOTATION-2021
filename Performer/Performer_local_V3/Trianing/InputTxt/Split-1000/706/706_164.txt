 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> public static void main ( String [ ] F3 ) {  <CR> String r8 ;  <CR> String d6 ;  <CR> Scanner h5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> r8 = h5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> d6 = h5 . nextLine ( ) ;  <CR> Keeper U0 = new Keeper ( r8 , d6 ) ;  <CR> }  <CR> void Keeper ( String r8 , String d6 ) {  <CR> this . id = r8 ;  <CR> this . tel = d6 ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> void Pet ( String I2 , String g5 , String B7 , Keeper T4 ) {  <CR> count ++ ;  <CR> this . pid = I2 ;  <CR> this . name = g5 ;  <CR> this . type = B7 ;  <CR> this . keeper = T4 ;  <CR> }  <CR> String name ;  <CR> public static void main ( String [ ] i5 ) {  <CR> String I2 ;  <CR> String g5 ;  <CR> String B7 ;  <CR> String P0 ;  <CR> String A2 ;  <CR> Scanner W0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> P0 = W0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> A2 = W0 . nextLine ( ) ;  <CR> Keeper w2 = new Keeper ( P0 , A2 ) ;  <CR> Scanner W0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> I2 = W0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> B7 = W0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> g5 = W0 . nextLine ( ) ;  <CR> pet E6 = new pet ( I2 , g5 , B7 , w2 ) ;  <CR> String a6 = E6 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + a6 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> Keeper keeper ;  <CR> }  <CR>  <EOC> 