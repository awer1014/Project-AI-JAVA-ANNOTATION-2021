 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String P6 , String r ) {  <CR> this . id = P6 ;  <CR> this . tel = r ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] d1 ) {  <CR> String P6 ;  <CR> String r ;  <CR> Scanner N = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> P6 = N . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> r = N . nextLine ( ) ;  <CR> Keeper z = new Keeper ( P6 , r ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String type ;  <CR> public static void main ( String [ ] s1 ) {  <CR> String E5 ;  <CR> String I3 ;  <CR> String m6 ;  <CR> String D0 ;  <CR> String J5 ;  <CR> Scanner y7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> D0 = y7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> J5 = y7 . nextLine ( ) ;  <CR> Keeper D1 = new Keeper ( D0 , J5 ) ;  <CR> Scanner y7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> E5 = y7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> m6 = y7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> I3 = y7 . nextLine ( ) ;  <CR> pet H = new pet ( E5 , I3 , m6 , D1 ) ;  <CR> String a6 = H . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + a6 ) ;  <CR> }  <CR> Keeper keeper ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> static int count ;  <CR> void Pet ( String E5 , String I3 , String m6 , Keeper V1 ) {  <CR> count ++ ;  <CR> this . pid = E5 ;  <CR> this . name = I3 ;  <CR> this . type = m6 ;  <CR> this . keeper = V1 ;  <CR> }  <CR> String name ;  <CR> String pid ;  <CR> }  <CR>  <EOC> 