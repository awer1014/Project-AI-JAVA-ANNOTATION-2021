 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String c5 , String n9 ) {  <CR> this . id = c5 ;  <CR> this . tel = n9 ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] a5 ) {  <CR> String c5 ;  <CR> String n9 ;  <CR> Scanner P4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> c5 = P4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> n9 = P4 . nextLine ( ) ;  <CR> Keeper q6 = new Keeper ( c5 , n9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> Keeper keeper ;  <CR> String name ;  <CR> public static void main ( String [ ] f3 ) {  <CR> String d8 ;  <CR> String K0 ;  <CR> String i3 ;  <CR> String C4 ;  <CR> String Q4 ;  <CR> Scanner m5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> C4 = m5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> Q4 = m5 . nextLine ( ) ;  <CR> Keeper G3 = new Keeper ( C4 , Q4 ) ;  <CR> Scanner m5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> d8 = m5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> i3 = m5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> K0 = m5 . nextLine ( ) ;  <CR> pet D3 = new pet ( d8 , K0 , i3 , G3 ) ;  <CR> String q8 = D3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + q8 ) ;  <CR> }  <CR> void Pet ( String d8 , String K0 , String i3 , Keeper V8 ) {  <CR> count ++ ;  <CR> this . pid = d8 ;  <CR> this . name = K0 ;  <CR> this . type = i3 ;  <CR> this . keeper = V8 ;  <CR> }  <CR> static int count ;  <CR> String type ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> }  <CR>  <EOC> 