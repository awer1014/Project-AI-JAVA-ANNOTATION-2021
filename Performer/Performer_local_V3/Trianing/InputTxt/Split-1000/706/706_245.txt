 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] M8 ) {  <CR> String m4 ;  <CR> String X8 ;  <CR> Scanner q2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> m4 = q2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> X8 = q2 . nextLine ( ) ;  <CR> Keeper X0 = new Keeper ( m4 , X8 ) ;  <CR> }  <CR> void Keeper ( String m4 , String X8 ) {  <CR> this . id = m4 ;  <CR> this . tel = X8 ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> public static void main ( String [ ] D3 ) {  <CR> String k3 ;  <CR> String u4 ;  <CR> String g9 ;  <CR> String U8 ;  <CR> String E9 ;  <CR> Scanner Z5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> U8 = Z5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> E9 = Z5 . nextLine ( ) ;  <CR> Keeper Q = new Keeper ( U8 , E9 ) ;  <CR> Scanner Z5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> k3 = Z5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> g9 = Z5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> u4 = Z5 . nextLine ( ) ;  <CR> pet X1 = new pet ( k3 , u4 , g9 , Q ) ;  <CR> String P5 = X1 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + P5 ) ;  <CR> }  <CR> void Pet ( String k3 , String u4 , String g9 , Keeper w0 ) {  <CR> count ++ ;  <CR> this . pid = k3 ;  <CR> this . name = u4 ;  <CR> this . type = g9 ;  <CR> this . keeper = w0 ;  <CR> }  <CR> String pid ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String type ;  <CR> }  <CR>  <EOC> 