 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> public static void main ( String [ ] o3 ) {  <CR> String g8 ;  <CR> String c2 ;  <CR> Scanner Y6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> g8 = Y6 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> c2 = Y6 . nextLine ( ) ;  <CR> Keeper A4 = new Keeper ( g8 , c2 ) ;  <CR> }  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> void Keeper ( String g8 , String c2 ) {  <CR> this . id = g8 ;  <CR> this . tel = c2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String name ;  <CR> void Pet ( String F4 , String A5 , String O3 , Keeper R1 ) {  <CR> count ++ ;  <CR> this . pid = F4 ;  <CR> this . name = A5 ;  <CR> this . type = O3 ;  <CR> this . keeper = R1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> static int count ;  <CR> String pid ;  <CR> public static void main ( String [ ] J4 ) {  <CR> String F4 ;  <CR> String A5 ;  <CR> String O3 ;  <CR> String w4 ;  <CR> String l6 ;  <CR> Scanner t2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> w4 = t2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> l6 = t2 . nextLine ( ) ;  <CR> Keeper V2 = new Keeper ( w4 , l6 ) ;  <CR> Scanner t2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> F4 = t2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> O3 = t2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> A5 = t2 . nextLine ( ) ;  <CR> pet o7 = new pet ( F4 , A5 , O3 , V2 ) ;  <CR> String i6 = o7 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + i6 ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String type ;  <CR> Keeper keeper ;  <CR> }  <CR>  <EOC> 