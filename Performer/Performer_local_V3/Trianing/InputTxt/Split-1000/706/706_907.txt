 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> void Keeper ( String n3 , String Q5 ) {  <CR> this . id = n3 ;  <CR> this . tel = Q5 ;  <CR> }  <CR> public static void main ( String [ ] b0 ) {  <CR> String n3 ;  <CR> String Q5 ;  <CR> Scanner I8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> n3 = I8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> Q5 = I8 . nextLine ( ) ;  <CR> Keeper o9 = new Keeper ( n3 , Q5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String type ;  <CR> Keeper keeper ;  <CR> void Pet ( String m3 , String u6 , String B8 , Keeper N7 ) {  <CR> count ++ ;  <CR> this . pid = m3 ;  <CR> this . name = u6 ;  <CR> this . type = B8 ;  <CR> this . keeper = N7 ;  <CR> }  <CR> public static void main ( String [ ] F7 ) {  <CR> String m3 ;  <CR> String u6 ;  <CR> String B8 ;  <CR> String W2 ;  <CR> String p1 ;  <CR> Scanner B2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> W2 = B2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> p1 = B2 . nextLine ( ) ;  <CR> Keeper B1 = new Keeper ( W2 , p1 ) ;  <CR> Scanner B2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> m3 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> B8 = B2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> u6 = B2 . nextLine ( ) ;  <CR> pet p5 = new pet ( m3 , u6 , B8 , B1 ) ;  <CR> String C7 = p5 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + C7 ) ;  <CR> }  <CR> static int count ;  <CR> String name ;  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 