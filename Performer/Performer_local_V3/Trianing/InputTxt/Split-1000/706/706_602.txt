 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> public static void main ( String [ ] i2 ) {  <CR> String V9 ;  <CR> String g0 ;  <CR> Scanner r4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> V9 = r4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> g0 = r4 . nextLine ( ) ;  <CR> Keeper h5 = new Keeper ( V9 , g0 ) ;  <CR> }  <CR> void Keeper ( String V9 , String g0 ) {  <CR> this . id = V9 ;  <CR> this . tel = g0 ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String q5 , String K3 , String Q3 , Keeper F2 ) {  <CR> count ++ ;  <CR> this . pid = q5 ;  <CR> this . name = K3 ;  <CR> this . type = Q3 ;  <CR> this . keeper = F2 ;  <CR> }  <CR> static int count ;  <CR> public static void main ( String [ ] q4 ) {  <CR> String q5 ;  <CR> String K3 ;  <CR> String Q3 ;  <CR> String T7 ;  <CR> String j6 ;  <CR> Scanner K9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> T7 = K9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> j6 = K9 . nextLine ( ) ;  <CR> Keeper k3 = new Keeper ( T7 , j6 ) ;  <CR> Scanner K9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> q5 = K9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> Q3 = K9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> K3 = K9 . nextLine ( ) ;  <CR> pet d = new pet ( q5 , K3 , Q3 , k3 ) ;  <CR> String c2 = d . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + c2 ) ;  <CR> }  <CR> String type ;  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> Keeper keeper ;  <CR> String name ;  <CR> }  <CR>  <EOC> 