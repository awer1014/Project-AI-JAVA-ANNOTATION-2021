 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String Q2 , String i6 ) {  <CR> this . id = Q2 ;  <CR> this . tel = i6 ;  <CR> }  <CR> public static void main ( String [ ] T9 ) {  <CR> String Q2 ;  <CR> String i6 ;  <CR> Scanner T8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> Q2 = T8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> i6 = T8 . nextLine ( ) ;  <CR> Keeper m6 = new Keeper ( Q2 , i6 ) ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String D8 , String l0 , String S5 , Keeper n2 ) {  <CR> count ++ ;  <CR> this . pid = D8 ;  <CR> this . name = l0 ;  <CR> this . type = S5 ;  <CR> this . keeper = n2 ;  <CR> }  <CR> Keeper keeper ;  <CR> String type ;  <CR> String pid ;  <CR> static int count ;  <CR> public static void main ( String [ ] R8 ) {  <CR> String D8 ;  <CR> String l0 ;  <CR> String S5 ;  <CR> String L4 ;  <CR> String P8 ;  <CR> Scanner r0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> L4 = r0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> P8 = r0 . nextLine ( ) ;  <CR> Keeper X0 = new Keeper ( L4 , P8 ) ;  <CR> Scanner r0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> D8 = r0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> S5 = r0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> l0 = r0 . nextLine ( ) ;  <CR> pet s6 = new pet ( D8 , l0 , S5 , X0 ) ;  <CR> String L = s6 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + L ) ;  <CR> }  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 