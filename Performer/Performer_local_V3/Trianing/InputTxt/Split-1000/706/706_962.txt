 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> public static void main ( String [ ] V8 ) {  <CR> String B0 ;  <CR> String W0 ;  <CR> Scanner I8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> B0 = I8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> W0 = I8 . nextLine ( ) ;  <CR> Keeper S1 = new Keeper ( B0 , W0 ) ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String B0 , String W0 ) {  <CR> this . id = B0 ;  <CR> this . tel = W0 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> public static void main ( String [ ] n5 ) {  <CR> String z6 ;  <CR> String N2 ;  <CR> String m1 ;  <CR> String P7 ;  <CR> String d9 ;  <CR> Scanner b2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> P7 = b2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> d9 = b2 . nextLine ( ) ;  <CR> Keeper G9 = new Keeper ( P7 , d9 ) ;  <CR> Scanner b2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> z6 = b2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> m1 = b2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> N2 = b2 . nextLine ( ) ;  <CR> pet T6 = new pet ( z6 , N2 , m1 , G9 ) ;  <CR> String X2 = T6 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + X2 ) ;  <CR> }  <CR> String type ;  <CR> void Pet ( String z6 , String N2 , String m1 , Keeper l4 ) {  <CR> count ++ ;  <CR> this . pid = z6 ;  <CR> this . name = N2 ;  <CR> this . type = m1 ;  <CR> this . keeper = l4 ;  <CR> }  <CR> String name ;  <CR> static int count ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 