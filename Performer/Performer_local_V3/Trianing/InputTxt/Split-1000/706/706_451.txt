 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> String tel ;  <CR> void Keeper ( String e0 , String T2 ) {  <CR> this . id = e0 ;  <CR> this . tel = T2 ;  <CR> }  <CR> public static void main ( String [ ] E1 ) {  <CR> String e0 ;  <CR> String T2 ;  <CR> Scanner W6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> e0 = W6 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> T2 = W6 . nextLine ( ) ;  <CR> Keeper G5 = new Keeper ( e0 , T2 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String l1 , String h3 , String H6 , Keeper B5 ) {  <CR> count ++ ;  <CR> this . pid = l1 ;  <CR> this . name = h3 ;  <CR> this . type = H6 ;  <CR> this . keeper = B5 ;  <CR> }  <CR> String type ;  <CR> static int count ;  <CR> public static void main ( String [ ] M9 ) {  <CR> String l1 ;  <CR> String h3 ;  <CR> String H6 ;  <CR> String L0 ;  <CR> String G4 ;  <CR> Scanner t8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> L0 = t8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> G4 = t8 . nextLine ( ) ;  <CR> Keeper g9 = new Keeper ( L0 , G4 ) ;  <CR> Scanner t8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> l1 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> H6 = t8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> h3 = t8 . nextLine ( ) ;  <CR> pet k3 = new pet ( l1 , h3 , H6 , g9 ) ;  <CR> String Y6 = k3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + Y6 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> Keeper keeper ;  <CR> String pid ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 