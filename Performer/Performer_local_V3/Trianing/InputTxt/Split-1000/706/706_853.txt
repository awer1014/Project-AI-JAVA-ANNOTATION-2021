 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> public static void main ( String [ ] R1 ) {  <CR> String g ;  <CR> String n7 ;  <CR> Scanner t = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> g = t . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> n7 = t . nextLine ( ) ;  <CR> Keeper J1 = new Keeper ( g , n7 ) ;  <CR> }  <CR> void Keeper ( String g , String n7 ) {  <CR> this . id = g ;  <CR> this . tel = n7 ;  <CR> }  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> public static void main ( String [ ] t3 ) {  <CR> String u2 ;  <CR> String c8 ;  <CR> String X8 ;  <CR> String T1 ;  <CR> String a8 ;  <CR> Scanner J1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> T1 = J1 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> a8 = J1 . nextLine ( ) ;  <CR> Keeper d2 = new Keeper ( T1 , a8 ) ;  <CR> Scanner J1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> u2 = J1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> X8 = J1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> c8 = J1 . nextLine ( ) ;  <CR> pet W5 = new pet ( u2 , c8 , X8 , d2 ) ;  <CR> String P5 = W5 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + P5 ) ;  <CR> }  <CR> Keeper keeper ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String name ;  <CR> void Pet ( String u2 , String c8 , String X8 , Keeper M6 ) {  <CR> count ++ ;  <CR> this . pid = u2 ;  <CR> this . name = c8 ;  <CR> this . type = X8 ;  <CR> this . keeper = M6 ;  <CR> }  <CR> static int count ;  <CR> String type ;  <CR> }  <CR>  <EOC> 