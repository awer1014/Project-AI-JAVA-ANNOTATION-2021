 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String c0 , String X5 ) {  <CR> this . id = c0 ;  <CR> this . tel = X5 ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] u7 ) {  <CR> String c0 ;  <CR> String X5 ;  <CR> Scanner J3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> c0 = J3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> X5 = J3 . nextLine ( ) ;  <CR> Keeper H3 = new Keeper ( c0 , X5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> public static void main ( String [ ] y2 ) {  <CR> String o4 ;  <CR> String s1 ;  <CR> String C0 ;  <CR> String T8 ;  <CR> String j1 ;  <CR> Scanner y1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> T8 = y1 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> j1 = y1 . nextLine ( ) ;  <CR> Keeper e3 = new Keeper ( T8 , j1 ) ;  <CR> Scanner y1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> o4 = y1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> C0 = y1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> s1 = y1 . nextLine ( ) ;  <CR> pet w4 = new pet ( o4 , s1 , C0 , e3 ) ;  <CR> String Z = w4 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + Z ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> Keeper keeper ;  <CR> void Pet ( String o4 , String s1 , String C0 , Keeper M8 ) {  <CR> count ++ ;  <CR> this . pid = o4 ;  <CR> this . name = s1 ;  <CR> this . type = C0 ;  <CR> this . keeper = M8 ;  <CR> }  <CR> static int count ;  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> }  <CR>  <EOC> 