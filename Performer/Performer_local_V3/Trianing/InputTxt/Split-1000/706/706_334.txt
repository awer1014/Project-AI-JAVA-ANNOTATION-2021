 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String S1 , String o3 ) {  <CR> this . id = S1 ;  <CR> this . tel = o3 ;  <CR> }  <CR> public static void main ( String [ ] C8 ) {  <CR> String S1 ;  <CR> String o3 ;  <CR> Scanner h3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> S1 = h3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> o3 = h3 . nextLine ( ) ;  <CR> Keeper C0 = new Keeper ( S1 , o3 ) ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String type ;  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> public static void main ( String [ ] u7 ) {  <CR> String X6 ;  <CR> String y6 ;  <CR> String q ;  <CR> String F3 ;  <CR> String V8 ;  <CR> Scanner V4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> F3 = V4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> V8 = V4 . nextLine ( ) ;  <CR> Keeper U7 = new Keeper ( F3 , V8 ) ;  <CR> Scanner V4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X6 = V4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> q = V4 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> y6 = V4 . nextLine ( ) ;  <CR> pet L4 = new pet ( X6 , y6 , q , U7 ) ;  <CR> String A0 = L4 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + A0 ) ;  <CR> }  <CR> String pid ;  <CR> Keeper keeper ;  <CR> static int count ;  <CR> void Pet ( String X6 , String y6 , String q , Keeper b4 ) {  <CR> count ++ ;  <CR> this . pid = X6 ;  <CR> this . name = y6 ;  <CR> this . type = q ;  <CR> this . keeper = b4 ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 