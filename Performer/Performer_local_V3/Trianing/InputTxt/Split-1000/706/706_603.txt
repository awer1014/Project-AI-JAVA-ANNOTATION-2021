 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> void Keeper ( String I0 , String E3 ) {  <CR> this . id = I0 ;  <CR> this . tel = E3 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] E2 ) {  <CR> String I0 ;  <CR> String E3 ;  <CR> Scanner T3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> I0 = T3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> E3 = T3 . nextLine ( ) ;  <CR> Keeper V2 = new Keeper ( I0 , E3 ) ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String t8 , String i4 , String R6 , Keeper U9 ) {  <CR> count ++ ;  <CR> this . pid = t8 ;  <CR> this . name = i4 ;  <CR> this . type = R6 ;  <CR> this . keeper = U9 ;  <CR> }  <CR> Keeper keeper ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> String type ;  <CR> public static void main ( String [ ] R3 ) {  <CR> String t8 ;  <CR> String i4 ;  <CR> String R6 ;  <CR> String m7 ;  <CR> String v1 ;  <CR> Scanner D2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> m7 = D2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> v1 = D2 . nextLine ( ) ;  <CR> Keeper T0 = new Keeper ( m7 , v1 ) ;  <CR> Scanner D2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> t8 = D2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> R6 = D2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> i4 = D2 . nextLine ( ) ;  <CR> pet G8 = new pet ( t8 , i4 , R6 , T0 ) ;  <CR> String x4 = G8 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + x4 ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 