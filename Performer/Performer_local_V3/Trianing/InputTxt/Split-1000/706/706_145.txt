 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String n9 , String y9 ) {  <CR> this . id = n9 ;  <CR> this . tel = y9 ;  <CR> }  <CR> public static void main ( String [ ] X9 ) {  <CR> String n9 ;  <CR> String y9 ;  <CR> Scanner L2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> n9 = L2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> y9 = L2 . nextLine ( ) ;  <CR> Keeper Z2 = new Keeper ( n9 , y9 ) ;  <CR> }  <CR> String id ;  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> void Pet ( String c9 , String S6 , String Z2 , Keeper H9 ) {  <CR> count ++ ;  <CR> this . pid = c9 ;  <CR> this . name = S6 ;  <CR> this . type = Z2 ;  <CR> this . keeper = H9 ;  <CR> }  <CR> public static void main ( String [ ] n3 ) {  <CR> String c9 ;  <CR> String S6 ;  <CR> String Z2 ;  <CR> String p1 ;  <CR> String o1 ;  <CR> Scanner O2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> p1 = O2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> o1 = O2 . nextLine ( ) ;  <CR> Keeper N1 = new Keeper ( p1 , o1 ) ;  <CR> Scanner O2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> c9 = O2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> Z2 = O2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> S6 = O2 . nextLine ( ) ;  <CR> pet S8 = new pet ( c9 , S6 , Z2 , N1 ) ;  <CR> String A8 = S8 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + A8 ) ;  <CR> }  <CR> static int count ;  <CR> String type ;  <CR> String name ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> Keeper keeper ;  <CR> String pid ;  <CR> }  <CR>  <EOC> 