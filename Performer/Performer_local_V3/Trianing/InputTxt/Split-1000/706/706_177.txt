 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String p0 , String F2 ) {  <CR> this . id = p0 ;  <CR> this . tel = F2 ;  <CR> }  <CR> String id ;  <CR> String tel ;  <CR> public static void main ( String [ ] U8 ) {  <CR> String p0 ;  <CR> String F2 ;  <CR> Scanner k9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> p0 = k9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> F2 = k9 . nextLine ( ) ;  <CR> Keeper J7 = new Keeper ( p0 , F2 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String type ;  <CR> public static void main ( String [ ] n4 ) {  <CR> String d0 ;  <CR> String G0 ;  <CR> String s9 ;  <CR> String E5 ;  <CR> String H4 ;  <CR> Scanner V8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> E5 = V8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> H4 = V8 . nextLine ( ) ;  <CR> Keeper j9 = new Keeper ( E5 , H4 ) ;  <CR> Scanner V8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> d0 = V8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> s9 = V8 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> G0 = V8 . nextLine ( ) ;  <CR> pet D2 = new pet ( d0 , G0 , s9 , j9 ) ;  <CR> String e4 = D2 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + e4 ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> void Pet ( String d0 , String G0 , String s9 , Keeper S0 ) {  <CR> count ++ ;  <CR> this . pid = d0 ;  <CR> this . name = G0 ;  <CR> this . type = s9 ;  <CR> this . keeper = S0 ;  <CR> }  <CR> static int count ;  <CR> Keeper keeper ;  <CR> String pid ;  <CR> }  <CR>  <EOC> 