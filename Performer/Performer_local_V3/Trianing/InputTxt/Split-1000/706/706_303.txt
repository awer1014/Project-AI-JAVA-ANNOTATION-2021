 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> public static void main ( String [ ] Q2 ) {  <CR> String C9 ;  <CR> String G2 ;  <CR> Scanner M8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> C9 = M8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> G2 = M8 . nextLine ( ) ;  <CR> Keeper r4 = new Keeper ( C9 , G2 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String C9 , String G2 ) {  <CR> this . id = C9 ;  <CR> this . tel = G2 ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String E3 , String B3 , String m7 , Keeper R0 ) {  <CR> count ++ ;  <CR> this . pid = E3 ;  <CR> this . name = B3 ;  <CR> this . type = m7 ;  <CR> this . keeper = R0 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> public static void main ( String [ ] C3 ) {  <CR> String E3 ;  <CR> String B3 ;  <CR> String m7 ;  <CR> String o4 ;  <CR> String n2 ;  <CR> Scanner P2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> o4 = P2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> n2 = P2 . nextLine ( ) ;  <CR> Keeper K3 = new Keeper ( o4 , n2 ) ;  <CR> Scanner P2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> E3 = P2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> m7 = P2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> B3 = P2 . nextLine ( ) ;  <CR> pet Z8 = new pet ( E3 , B3 , m7 , K3 ) ;  <CR> String P = Z8 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + P ) ;  <CR> }  <CR> String name ;  <CR> static int count ;  <CR> String pid ;  <CR> Keeper keeper ;  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 