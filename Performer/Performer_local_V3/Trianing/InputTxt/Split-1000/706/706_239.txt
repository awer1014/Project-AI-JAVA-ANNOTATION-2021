 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> void Keeper ( String Y0 , String p6 ) {  <CR> this . id = Y0 ;  <CR> this . tel = p6 ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] D6 ) {  <CR> String Y0 ;  <CR> String p6 ;  <CR> Scanner q2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> Y0 = q2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> p6 = q2 . nextLine ( ) ;  <CR> Keeper E2 = new Keeper ( Y0 , p6 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String D8 , String M0 , String s , Keeper N ) {  <CR> count ++ ;  <CR> this . pid = D8 ;  <CR> this . name = M0 ;  <CR> this . type = s ;  <CR> this . keeper = N ;  <CR> }  <CR> public static void main ( String [ ] X ) {  <CR> String D8 ;  <CR> String M0 ;  <CR> String s ;  <CR> String Q4 ;  <CR> String P7 ;  <CR> Scanner O = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> Q4 = O . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> P7 = O . nextLine ( ) ;  <CR> Keeper L3 = new Keeper ( Q4 , P7 ) ;  <CR> Scanner O = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> D8 = O . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> s = O . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> M0 = O . nextLine ( ) ;  <CR> pet H0 = new pet ( D8 , M0 , s , L3 ) ;  <CR> String c = H0 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + c ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> static int count ;  <CR> String name ;  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> }  <CR>  <EOC> 