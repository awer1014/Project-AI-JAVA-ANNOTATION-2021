 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> String tel ;  <CR> void Keeper ( String G , String t6 ) {  <CR> this . id = G ;  <CR> this . tel = t6 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] m3 ) {  <CR> String G ;  <CR> String t6 ;  <CR> Scanner T5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> G = T5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> t6 = T5 . nextLine ( ) ;  <CR> Keeper h6 = new Keeper ( G , t6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String name ;  <CR> public static void main ( String [ ] s9 ) {  <CR> String X2 ;  <CR> String r6 ;  <CR> String y2 ;  <CR> String Q4 ;  <CR> String u2 ;  <CR> Scanner R3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> Q4 = R3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> u2 = R3 . nextLine ( ) ;  <CR> Keeper S0 = new Keeper ( Q4 , u2 ) ;  <CR> Scanner R3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X2 = R3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> y2 = R3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> r6 = R3 . nextLine ( ) ;  <CR> pet n5 = new pet ( X2 , r6 , y2 , S0 ) ;  <CR> String S7 = n5 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + S7 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> Keeper keeper ;  <CR> void Pet ( String X2 , String r6 , String y2 , Keeper o3 ) {  <CR> count ++ ;  <CR> this . pid = X2 ;  <CR> this . name = r6 ;  <CR> this . type = y2 ;  <CR> this . keeper = o3 ;  <CR> }  <CR> String type ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 