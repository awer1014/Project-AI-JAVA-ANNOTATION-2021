 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String G1 , String d0 ) {  <CR> this . id = G1 ;  <CR> this . tel = d0 ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] y6 ) {  <CR> String G1 ;  <CR> String d0 ;  <CR> Scanner E3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> G1 = E3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> d0 = E3 . nextLine ( ) ;  <CR> Keeper H0 = new Keeper ( G1 , d0 ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> static int count ;  <CR> String name ;  <CR> public static void main ( String [ ] l8 ) {  <CR> String X6 ;  <CR> String j8 ;  <CR> String e1 ;  <CR> String n3 ;  <CR> String d2 ;  <CR> Scanner q5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> n3 = q5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> d2 = q5 . nextLine ( ) ;  <CR> Keeper E3 = new Keeper ( n3 , d2 ) ;  <CR> Scanner q5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X6 = q5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> e1 = q5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> j8 = q5 . nextLine ( ) ;  <CR> pet H4 = new pet ( X6 , j8 , e1 , E3 ) ;  <CR> String I = H4 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + I ) ;  <CR> }  <CR> void Pet ( String X6 , String j8 , String e1 , Keeper F3 ) {  <CR> count ++ ;  <CR> this . pid = X6 ;  <CR> this . name = j8 ;  <CR> this . type = e1 ;  <CR> this . keeper = F3 ;  <CR> }  <CR> Keeper keeper ;  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 