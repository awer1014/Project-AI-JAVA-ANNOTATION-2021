 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String V6 , String B3 ) {  <CR> this . id = V6 ;  <CR> this . tel = B3 ;  <CR> }  <CR> public static void main ( String [ ] Y2 ) {  <CR> String V6 ;  <CR> String B3 ;  <CR> Scanner l = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> V6 = l . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> B3 = l . nextLine ( ) ;  <CR> Keeper F9 = new Keeper ( V6 , B3 ) ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String name ;  <CR> public static void main ( String [ ] E1 ) {  <CR> String Y9 ;  <CR> String c0 ;  <CR> String W5 ;  <CR> String k6 ;  <CR> String e4 ;  <CR> Scanner m7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> k6 = m7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> e4 = m7 . nextLine ( ) ;  <CR> Keeper L7 = new Keeper ( k6 , e4 ) ;  <CR> Scanner m7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> Y9 = m7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> W5 = m7 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> c0 = m7 . nextLine ( ) ;  <CR> pet U1 = new pet ( Y9 , c0 , W5 , L7 ) ;  <CR> String z1 = U1 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + z1 ) ;  <CR> }  <CR> String pid ;  <CR> String type ;  <CR> void Pet ( String Y9 , String c0 , String W5 , Keeper q2 ) {  <CR> count ++ ;  <CR> this . pid = Y9 ;  <CR> this . name = c0 ;  <CR> this . type = W5 ;  <CR> this . keeper = q2 ;  <CR> }  <CR> Keeper keeper ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 