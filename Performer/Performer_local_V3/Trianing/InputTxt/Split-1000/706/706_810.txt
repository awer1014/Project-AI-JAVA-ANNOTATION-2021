 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> void Keeper ( String g0 , String R5 ) {  <CR> this . id = g0 ;  <CR> this . tel = R5 ;  <CR> }  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> public static void main ( String [ ] I4 ) {  <CR> String g0 ;  <CR> String R5 ;  <CR> Scanner I0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> g0 = I0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> R5 = I0 . nextLine ( ) ;  <CR> Keeper Y4 = new Keeper ( g0 , R5 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String pid ;  <CR> static int count ;  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> void Pet ( String W6 , String Y4 , String X6 , Keeper g4 ) {  <CR> count ++ ;  <CR> this . pid = W6 ;  <CR> this . name = Y4 ;  <CR> this . type = X6 ;  <CR> this . keeper = g4 ;  <CR> }  <CR> public static void main ( String [ ] v ) {  <CR> String W6 ;  <CR> String Y4 ;  <CR> String X6 ;  <CR> String n1 ;  <CR> String E2 ;  <CR> Scanner K5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> n1 = K5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> E2 = K5 . nextLine ( ) ;  <CR> Keeper V0 = new Keeper ( n1 , E2 ) ;  <CR> Scanner K5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> W6 = K5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> X6 = K5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> Y4 = K5 . nextLine ( ) ;  <CR> pet y1 = new pet ( W6 , Y4 , X6 , V0 ) ;  <CR> String h3 = y1 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + h3 ) ;  <CR> }  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String type ;  <CR> }  <CR>  <EOC> 