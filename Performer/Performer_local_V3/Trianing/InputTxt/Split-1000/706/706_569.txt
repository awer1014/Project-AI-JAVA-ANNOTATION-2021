 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String o6 , String v9 ) {  <CR> this . id = o6 ;  <CR> this . tel = v9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] o0 ) {  <CR> String o6 ;  <CR> String v9 ;  <CR> Scanner z1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> o6 = z1 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> v9 = z1 . nextLine ( ) ;  <CR> Keeper p1 = new Keeper ( o6 , v9 ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> public static void main ( String [ ] t6 ) {  <CR> String X6 ;  <CR> String N7 ;  <CR> String h1 ;  <CR> String o1 ;  <CR> String v3 ;  <CR> Scanner L6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> o1 = L6 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> v3 = L6 . nextLine ( ) ;  <CR> Keeper D9 = new Keeper ( o1 , v3 ) ;  <CR> Scanner L6 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X6 = L6 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> h1 = L6 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> N7 = L6 . nextLine ( ) ;  <CR> pet D5 = new pet ( X6 , N7 , h1 , D9 ) ;  <CR> String r8 = D5 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + r8 ) ;  <CR> }  <CR> void Pet ( String X6 , String N7 , String h1 , Keeper K5 ) {  <CR> count ++ ;  <CR> this . pid = X6 ;  <CR> this . name = N7 ;  <CR> this . type = h1 ;  <CR> this . keeper = K5 ;  <CR> }  <CR> String type ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 