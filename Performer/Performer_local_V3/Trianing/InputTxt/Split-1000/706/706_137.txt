 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String P7 , String B0 ) {  <CR> this . id = P7 ;  <CR> this . tel = B0 ;  <CR> }  <CR> public static void main ( String [ ] K9 ) {  <CR> String P7 ;  <CR> String B0 ;  <CR> Scanner i = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> P7 = i . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> B0 = i . nextLine ( ) ;  <CR> Keeper N1 = new Keeper ( P7 , B0 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> public static void main ( String [ ] C3 ) {  <CR> String z ;  <CR> String H4 ;  <CR> String Y3 ;  <CR> String p5 ;  <CR> String r0 ;  <CR> Scanner N9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> p5 = N9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> r0 = N9 . nextLine ( ) ;  <CR> Keeper u0 = new Keeper ( p5 , r0 ) ;  <CR> Scanner N9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> z = N9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> Y3 = N9 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> H4 = N9 . nextLine ( ) ;  <CR> pet Y0 = new pet ( z , H4 , Y3 , u0 ) ;  <CR> String e2 = Y0 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + e2 ) ;  <CR> }  <CR> static int count ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String type ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> void Pet ( String z , String H4 , String Y3 , Keeper t7 ) {  <CR> count ++ ;  <CR> this . pid = z ;  <CR> this . name = H4 ;  <CR> this . type = Y3 ;  <CR> this . keeper = t7 ;  <CR> }  <CR> String name ;  <CR> Keeper keeper ;  <CR> }  <CR>  <EOC> 