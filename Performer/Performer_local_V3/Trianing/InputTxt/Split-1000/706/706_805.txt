 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> public static void main ( String [ ] J1 ) {  <CR> String q5 ;  <CR> String e0 ;  <CR> Scanner x2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> q5 = x2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> e0 = x2 . nextLine ( ) ;  <CR> Keeper v8 = new Keeper ( q5 , e0 ) ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String q5 , String e0 ) {  <CR> this . id = q5 ;  <CR> this . tel = e0 ;  <CR> }  <CR> String id ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> void Pet ( String V8 , String F , String v2 , Keeper p1 ) {  <CR> count ++ ;  <CR> this . pid = V8 ;  <CR> this . name = F ;  <CR> this . type = v2 ;  <CR> this . keeper = p1 ;  <CR> }  <CR> static int count ;  <CR> public static void main ( String [ ] s0 ) {  <CR> String V8 ;  <CR> String F ;  <CR> String v2 ;  <CR> String I4 ;  <CR> String t7 ;  <CR> Scanner l3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> I4 = l3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> t7 = l3 . nextLine ( ) ;  <CR> Keeper D1 = new Keeper ( I4 , t7 ) ;  <CR> Scanner l3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> V8 = l3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> v2 = l3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> F = l3 . nextLine ( ) ;  <CR> pet s7 = new pet ( V8 , F , v2 , D1 ) ;  <CR> String M5 = s7 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + M5 ) ;  <CR> }  <CR> String name ;  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> }  <CR>  <EOC> 