 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String m0 , String d ) {  <CR> this . id = m0 ;  <CR> this . tel = d ;  <CR> }  <CR> public static void main ( String [ ] a ) {  <CR> String m0 ;  <CR> String d ;  <CR> Scanner L7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> m0 = L7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> d = L7 . nextLine ( ) ;  <CR> Keeper n4 = new Keeper ( m0 , d ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String name ;  <CR> public static void main ( String [ ] I9 ) {  <CR> String A2 ;  <CR> String U1 ;  <CR> String H4 ;  <CR> String S7 ;  <CR> String y1 ;  <CR> Scanner J5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> S7 = J5 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> y1 = J5 . nextLine ( ) ;  <CR> Keeper R3 = new Keeper ( S7 , y1 ) ;  <CR> Scanner J5 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> A2 = J5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> H4 = J5 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> U1 = J5 . nextLine ( ) ;  <CR> pet u0 = new pet ( A2 , U1 , H4 , R3 ) ;  <CR> String L1 = u0 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + L1 ) ;  <CR> }  <CR> String type ;  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> static int count ;  <CR> void Pet ( String A2 , String U1 , String H4 , Keeper j1 ) {  <CR> count ++ ;  <CR> this . pid = A2 ;  <CR> this . name = U1 ;  <CR> this . type = H4 ;  <CR> this . keeper = j1 ;  <CR> }  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 