 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String c0 , String U9 ) {  <CR> this . id = c0 ;  <CR> this . tel = U9 ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] N ) {  <CR> String c0 ;  <CR> String U9 ;  <CR> Scanner e1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> c0 = e1 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> U9 = e1 . nextLine ( ) ;  <CR> Keeper J5 = new Keeper ( c0 , U9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> public static void main ( String [ ] z1 ) {  <CR> String Q1 ;  <CR> String n7 ;  <CR> String E5 ;  <CR> String w ;  <CR> String Z3 ;  <CR> Scanner p1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> w = p1 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> Z3 = p1 . nextLine ( ) ;  <CR> Keeper h1 = new Keeper ( w , Z3 ) ;  <CR> Scanner p1 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> Q1 = p1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> E5 = p1 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> n7 = p1 . nextLine ( ) ;  <CR> pet L3 = new pet ( Q1 , n7 , E5 , h1 ) ;  <CR> String Q = L3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + Q ) ;  <CR> }  <CR> String pid ;  <CR> String name ;  <CR> void Pet ( String Q1 , String n7 , String E5 , Keeper Q4 ) {  <CR> count ++ ;  <CR> this . pid = Q1 ;  <CR> this . name = n7 ;  <CR> this . type = E5 ;  <CR> this . keeper = Q4 ;  <CR> }  <CR> String type ;  <CR> Keeper keeper ;  <CR> static int count ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 