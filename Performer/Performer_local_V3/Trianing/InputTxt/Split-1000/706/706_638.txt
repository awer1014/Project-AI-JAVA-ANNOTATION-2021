 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void Keeper ( String b9 , String I2 ) {  <CR> this . id = b9 ;  <CR> this . tel = I2 ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> public static void main ( String [ ] E9 ) {  <CR> String b9 ;  <CR> String I2 ;  <CR> Scanner h8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> b9 = h8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> I2 = h8 . nextLine ( ) ;  <CR> Keeper F = new Keeper ( b9 , I2 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> String name ;  <CR> public static void main ( String [ ] t8 ) {  <CR> String M8 ;  <CR> String r9 ;  <CR> String M1 ;  <CR> String d9 ;  <CR> String v ;  <CR> Scanner b3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> d9 = b3 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> v = b3 . nextLine ( ) ;  <CR> Keeper g1 = new Keeper ( d9 , v ) ;  <CR> Scanner b3 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> M8 = b3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> M1 = b3 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> r9 = b3 . nextLine ( ) ;  <CR> pet a8 = new pet ( M8 , r9 , M1 , g1 ) ;  <CR> String A4 = a8 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + A4 ) ;  <CR> }  <CR> String pid ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String type ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> void Pet ( String M8 , String r9 , String M1 , Keeper E1 ) {  <CR> count ++ ;  <CR> this . pid = M8 ;  <CR> this . name = r9 ;  <CR> this . type = M1 ;  <CR> this . keeper = E1 ;  <CR> }  <CR> Keeper keeper ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 