 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String tel ;  <CR> void Keeper ( String P0 , String C4 ) {  <CR> this . id = P0 ;  <CR> this . tel = C4 ;  <CR> }  <CR> String id ;  <CR> public static void main ( String [ ] D1 ) {  <CR> String P0 ;  <CR> String C4 ;  <CR> Scanner r9 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> P0 = r9 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> C4 = r9 . nextLine ( ) ;  <CR> Keeper y1 = new Keeper ( P0 , C4 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> void Pet ( String q8 , String K8 , String x6 , Keeper I4 ) {  <CR> count ++ ;  <CR> this . pid = q8 ;  <CR> this . name = K8 ;  <CR> this . type = x6 ;  <CR> this . keeper = I4 ;  <CR> }  <CR> Keeper keeper ;  <CR> public static void main ( String [ ] C1 ) {  <CR> String q8 ;  <CR> String K8 ;  <CR> String x6 ;  <CR> String c5 ;  <CR> String v0 ;  <CR> Scanner V0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> c5 = V0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> v0 = V0 . nextLine ( ) ;  <CR> Keeper z1 = new Keeper ( c5 , v0 ) ;  <CR> Scanner V0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> q8 = V0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> x6 = V0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> K8 = V0 . nextLine ( ) ;  <CR> pet W9 = new pet ( q8 , K8 , x6 , z1 ) ;  <CR> String P3 = W9 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + P3 ) ;  <CR> }  <CR> String type ;  <CR> String name ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> static int count ;  <CR> String pid ;  <CR> }  <CR>  <EOC> 