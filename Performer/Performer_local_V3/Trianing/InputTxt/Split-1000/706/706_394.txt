 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String j0 , String j9 ) {  <CR> this . id = j0 ;  <CR> this . tel = j9 ;  <CR> }  <CR> public static void main ( String [ ] K ) {  <CR> String j0 ;  <CR> String j9 ;  <CR> Scanner Z8 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> j0 = Z8 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> j9 = Z8 . nextLine ( ) ;  <CR> Keeper Z9 = new Keeper ( j0 , j9 ) ;  <CR> }  <CR> String tel ;  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> String pid ;  <CR> public static void main ( String [ ] T1 ) {  <CR> String X8 ;  <CR> String m9 ;  <CR> String q2 ;  <CR> String b3 ;  <CR> String G ;  <CR> Scanner L2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> b3 = L2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> G = L2 . nextLine ( ) ;  <CR> Keeper G2 = new Keeper ( b3 , G ) ;  <CR> Scanner L2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X8 = L2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> q2 = L2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> m9 = L2 . nextLine ( ) ;  <CR> pet w7 = new pet ( X8 , m9 , q2 , G2 ) ;  <CR> String p1 = w7 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + p1 ) ;  <CR> }  <CR> String type ;  <CR> Keeper keeper ;  <CR> String name ;  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> void Pet ( String X8 , String m9 , String q2 , Keeper j ) {  <CR> count ++ ;  <CR> this . pid = X8 ;  <CR> this . name = m9 ;  <CR> this . type = q2 ;  <CR> this . keeper = j ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 