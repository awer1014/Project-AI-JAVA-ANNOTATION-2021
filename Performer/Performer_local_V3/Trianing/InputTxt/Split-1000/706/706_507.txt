 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> String id ;  <CR> public static void main ( String [ ] U6 ) {  <CR> String Q3 ;  <CR> String A2 ;  <CR> Scanner F0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> Q3 = F0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> A2 = F0 . nextLine ( ) ;  <CR> Keeper r2 = new Keeper ( Q3 , A2 ) ;  <CR> }  <CR> String tel ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String Q3 , String A2 ) {  <CR> this . id = Q3 ;  <CR> this . tel = A2 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> static int count ;  <CR> String name ;  <CR> void Pet ( String c4 , String z0 , String O3 , Keeper L7 ) {  <CR> count ++ ;  <CR> this . pid = c4 ;  <CR> this . name = z0 ;  <CR> this . type = O3 ;  <CR> this . keeper = L7 ;  <CR> }  <CR> public static void main ( String [ ] M8 ) {  <CR> String c4 ;  <CR> String z0 ;  <CR> String O3 ;  <CR> String e8 ;  <CR> String A1 ;  <CR> Scanner Y2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> e8 = Y2 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> A1 = Y2 . nextLine ( ) ;  <CR> Keeper R8 = new Keeper ( e8 , A1 ) ;  <CR> Scanner Y2 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> c4 = Y2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> O3 = Y2 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> z0 = Y2 . nextLine ( ) ;  <CR> pet E3 = new pet ( c4 , z0 , O3 , R8 ) ;  <CR> String m4 = E3 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + m4 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String type ;  <CR> }  <CR>  <EOC> 