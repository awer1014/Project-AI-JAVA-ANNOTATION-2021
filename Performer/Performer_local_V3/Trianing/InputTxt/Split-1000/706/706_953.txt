 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> String id ;  <CR> void Keeper ( String f5 , String p7 ) {  <CR> this . id = f5 ;  <CR> this . tel = p7 ;  <CR> }  <CR> String tel ;  <CR> public static void main ( String [ ] Y4 ) {  <CR> String f5 ;  <CR> String p7 ;  <CR> Scanner E4 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> f5 = E4 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> p7 = E4 . nextLine ( ) ;  <CR> Keeper d3 = new Keeper ( f5 , p7 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> String pid ;  <CR> String type ;  <CR> public static void main ( String [ ] V7 ) {  <CR> String X6 ;  <CR> String N ;  <CR> String g9 ;  <CR> String m8 ;  <CR> String d ;  <CR> Scanner H0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> m8 = H0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> d = H0 . nextLine ( ) ;  <CR> Keeper L9 = new Keeper ( m8 , d ) ;  <CR> Scanner H0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> X6 = H0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> g9 = H0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> N = H0 . nextLine ( ) ;  <CR> pet P9 = new pet ( X6 , N , g9 , L9 ) ;  <CR> String P2 = P9 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + P2 ) ;  <CR> }  <CR> String name ;  <CR> void Pet ( String X6 , String N , String g9 , Keeper w5 ) {  <CR> count ++ ;  <CR> this . pid = X6 ;  <CR> this . name = N ;  <CR> this . type = g9 ;  <CR> this . keeper = w5 ;  <CR> }  <CR> static int count ;  <CR> Keeper keeper ;  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> }  <CR>  <EOC> 