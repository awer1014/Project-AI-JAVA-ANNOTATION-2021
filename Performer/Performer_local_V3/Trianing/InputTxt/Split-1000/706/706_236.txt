 <BOC> import java . util . Scanner ;  <CR> public class Keeper {  <CR> public static void main ( String [ ] X0 ) {  <CR> String b0 ;  <CR> String Y5 ;  <CR> Scanner G7 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> b0 = G7 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> Y5 = G7 . nextLine ( ) ;  <CR> Keeper T0 = new Keeper ( b0 , Y5 ) ;  <CR> }  <CR> String tel ;  <CR> String id ;  <CR> void display ( ) {  <CR> System . out . println ( "請輸入飼主身份證字號:" + id ) ;  <CR> System . out . println ( "請輸入飼主身份證字號:" + tel ) ;  <CR> }  <CR> void Keeper ( String b0 , String Y5 ) {  <CR> this . id = b0 ;  <CR> this . tel = Y5 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> import java . util . Scanner ;  <CR> public class pet {  <CR> void Pet ( String D6 , String f4 , String U6 , Keeper q2 ) {  <CR> count ++ ;  <CR> this . pid = D6 ;  <CR> this . name = f4 ;  <CR> this . type = U6 ;  <CR> this . keeper = q2 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "寵物種類:" + pid ) ;  <CR> System . out . println ( "寵物編號:" + type ) ;  <CR> System . out . println ( "寵物名稱:" + name ) ;  <CR> keeper . display ( ) ;  <CR> }  <CR> Keeper keeper ;  <CR> String name ;  <CR> String type ;  <CR> public static void main ( String [ ] h9 ) {  <CR> String D6 ;  <CR> String f4 ;  <CR> String U6 ;  <CR> String B9 ;  <CR> String j5 ;  <CR> Scanner E0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "飼主身份證字號:" ) ;  <CR> B9 = E0 . nextLine ( ) ;  <CR> System . out . println ( "飼主電話:" ) ;  <CR> j5 = E0 . nextLine ( ) ;  <CR> Keeper j2 = new Keeper ( B9 , j5 ) ;  <CR> Scanner E0 = new Scanner ( System . in ) ;  <CR> System . out . println ( "請輸入寵物種類:" ) ;  <CR> D6 = E0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物編號:" ) ;  <CR> U6 = E0 . nextLine ( ) ;  <CR> System . out . println ( "請輸入寵物名稱:" ) ;  <CR> f4 = E0 . nextLine ( ) ;  <CR> pet n4 = new pet ( D6 , f4 , U6 , j2 ) ;  <CR> String q1 = n4 . Speak ( ) ;  <CR> System . out . println ( "您的寵物叫聲是:" + q1 ) ;  <CR> }  <CR> String Speak ( ) {  <CR> if ( pid . equals ( "貓" ) ) {  <CR> return "喵喵" ;  <CR> }  <CR> else if ( pid . equals ( "狗" ) ) {  <CR> return "汪汪" ;  <CR> }  <CR> }  <CR> String pid ;  <CR> static int count ;  <CR> }  <CR>  <EOC> 