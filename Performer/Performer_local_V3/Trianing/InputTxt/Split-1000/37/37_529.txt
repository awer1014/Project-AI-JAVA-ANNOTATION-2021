 <BOC> public class ChineseLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> ChineseLetter ( String B2 , String Q2 , String M9 , String W5 , String N ) {  <CR> super ( B2 , Q2 , M9 , W5 , N ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> EnglishLetter ( String c , String O9 , String Y9 , String f , String d9 ) {  <CR> super ( c , O9 , Y9 , f , d9 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String i9 , String t7 , Letter z9 ) {  <CR> this . senderAddr = i9 ;  <CR> this . receiverAddr = t7 ;  <CR> this . letter = z9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> System . out . println ( "信件內容: " ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> protected String content ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String date ;  <CR> public Letter ( String v9 , String T , String b1 , String I6 , String c6 ) {  <CR> this . title = v9 ;  <CR> this . receiver = T ;  <CR> this . content = b1 ;  <CR> this . sender = I6 ;  <CR> this . date = c6 ;  <CR> }  <CR> protected String sender ;  <CR> protected String receiver ;  <CR> protected String title ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 