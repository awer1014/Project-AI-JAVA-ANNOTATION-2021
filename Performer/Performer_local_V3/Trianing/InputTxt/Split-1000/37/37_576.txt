 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String X1 , String p , String Z2 , String P , String i ) {  <CR> super ( X1 , p , Z2 , P , i ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k4 , String B5 , String L4 , String K7 , String u ) {  <CR> super ( k4 , B5 , L4 , K7 , u ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String z6 , String E , Letter o9 ) {  <CR> this . senderAddr = z6 ;  <CR> this . receiverAddr = E ;  <CR> this . letter = o9 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> System . out . println ( "信件內容: " ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> Letter letter ;  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> protected String date ;  <CR> protected String sender ;  <CR> protected String receiver ;  <CR> protected String title ;  <CR> public Letter ( String M7 , String z6 , String u0 , String R9 , String D5 ) {  <CR> this . title = M7 ;  <CR> this . receiver = z6 ;  <CR> this . content = u0 ;  <CR> this . sender = R9 ;  <CR> this . date = D5 ;  <CR> }  <CR> protected String content ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 