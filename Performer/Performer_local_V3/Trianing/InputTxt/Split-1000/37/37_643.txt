 <BOC> public class ChineseLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> ChineseLetter ( String O1 , String a0 , String T0 , String j9 , String l ) {  <CR> super ( O1 , a0 , T0 , j9 , l ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String k4 , String c0 , String S6 , String T3 , String z ) {  <CR> super ( k4 , c0 , S6 , T3 , z ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String n3 , String X8 , Letter G1 ) {  <CR> this . senderAddr = n3 ;  <CR> this . receiverAddr = X8 ;  <CR> this . letter = G1 ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> System . out . println ( "信件內容: " ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> protected String content ;  <CR> protected String date ;  <CR> protected String sender ;  <CR> protected String receiver ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> protected String title ;  <CR> public Letter ( String L4 , String f2 , String L1 , String J8 , String J2 ) {  <CR> this . title = L4 ;  <CR> this . receiver = f2 ;  <CR> this . content = L1 ;  <CR> this . sender = J8 ;  <CR> this . date = J2 ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 