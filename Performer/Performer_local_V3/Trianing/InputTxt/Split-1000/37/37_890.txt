 <BOC> public class ChineseLetter extends Letter {  <CR> ChineseLetter ( String e5 , String R5 , String K9 , String u6 , String a0 ) {  <CR> super ( e5 , R5 , K9 , u6 , a0 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String o5 , String E6 , String h , String D4 , String I ) {  <CR> super ( o5 , E6 , h , D4 , I ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> System . out . println ( "信件內容: " ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> Letter letter ;  <CR> Envelop ( String B2 , String G8 , Letter l8 ) {  <CR> this . senderAddr = B2 ;  <CR> this . receiverAddr = G8 ;  <CR> this . letter = l8 ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> protected String date ;  <CR> protected String title ;  <CR> protected String content ;  <CR> public Letter ( String a2 , String M5 , String i3 , String R4 , String w4 ) {  <CR> this . title = a2 ;  <CR> this . receiver = M5 ;  <CR> this . content = i3 ;  <CR> this . sender = R4 ;  <CR> this . date = w4 ;  <CR> }  <CR> protected String sender ;  <CR> protected String receiver ;  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 