 <BOC> public class ChineseLetter extends Letter {  <CR> void display ( ) {  <CR> System . out . println ( receiver + " " + title + ", 您好" ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( sender + " 敬上" ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> ChineseLetter ( String Q , String f5 , String a1 , String p6 , String M6 ) {  <CR> super ( Q , f5 , a1 , p6 , M6 ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class EnglishLetter extends Letter {  <CR> EnglishLetter ( String S3 , String e2 , String g6 , String O3 , String E9 ) {  <CR> super ( S3 , e2 , g6 , O3 , E9 ) ;  <CR> }  <CR> void display ( ) {  <CR> System . out . println ( "Dear " + receiver + " " + title ) ;  <CR> System . out . println ( content ) ;  <CR> System . out . println ( "Sincerely" ) ;  <CR> System . out . println ( sender ) ;  <CR> System . out . println ( date ) ;  <CR> }  <CR> }  <CR>  <EOC>  <BOC> public class Envelop {  <CR> Envelop ( String J4 , String K0 , Letter K5 ) {  <CR> this . senderAddr = J4 ;  <CR> this . receiverAddr = K0 ;  <CR> this . letter = K5 ;  <CR> }  <CR> Letter letter ;  <CR> void display ( ) {  <CR> System . out . println ( "From: " + senderAddr + ", " + letter . sender ) ;  <CR> System . out . println ( "To: " + receiverAddr + ", " + letter . receiver + " " + letter . title ) ;  <CR> System . out . println ( "信件內容: " ) ;  <CR> letter . display ( ) ;  <CR> }  <CR> String senderAddr , receiverAddr ;  <CR> }  <CR>  <EOC>  <BOC> abstract public class Letter {  <CR> protected String date ;  <CR> protected String receiver ;  <CR> String getReceiver ( ) {  <CR> return receiver ;  <CR> }  <CR> public Letter ( String A2 , String T1 , String S5 , String S4 , String x4 ) {  <CR> this . title = A2 ;  <CR> this . receiver = T1 ;  <CR> this . content = S5 ;  <CR> this . sender = S4 ;  <CR> this . date = x4 ;  <CR> }  <CR> protected String sender ;  <CR> protected String content ;  <CR> protected String title ;  <CR> String getDate ( ) {  <CR> return date ;  <CR> }  <CR> String getSender ( ) {  <CR> return sender ;  <CR> }  <CR> abstract public void display ( ) ;  <CR> }  <CR>  <EOC> 