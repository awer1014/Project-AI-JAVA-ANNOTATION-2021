 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicChineseLetter(Stringa0,Stringv8,Stringq2,StringH5,StringR6){ <CR> super(a0,v8,q2,H5,R6); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> publicEnglishLetter(Stringv1,StringO8,StringS9,StringX0,StringV3){ <CR> super(v1,O8,S9,X0,V3); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> protectedStringcontent; <CR> publicintcompareTo(Letterh4){ <CR> String[]X7=date.split("/"),r7=h4.getDate().split("/"); <CR> for(intY5=0;Y5<X7.length;Y5++){ <CR> if(Integer.parseInt(X7[Y5])>Integer.parseInt(r7[Y5]))return1; <CR> elseif(Integer.parseInt(X7[Y5])<Integer.parseInt(r7[Y5]))return-1; <CR> } <CR> return0; <CR> } <CR> abstractpublicvoiddisplay(); <CR> publicLetter(Stringu9,StringK1,StringC2,Stringu3,Stringo4){ <CR> this.title=u9; <CR> this.receiver=K1; <CR> this.content=C2; <CR> this.sender=u3; <CR> this.date=o4; <CR> } <CR> protectedStringsender; <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> protectedStringreceiver; <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> protectedStringdate; <CR> protectedStringtitle; <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]J0){ <CR> Letter[]n8={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(n8); <CR> for(intB0=0;B0<n8.length;B0++){ <CR> if(B0!=0) <CR> System.out.println("==========="); <CR> n8[B0].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 