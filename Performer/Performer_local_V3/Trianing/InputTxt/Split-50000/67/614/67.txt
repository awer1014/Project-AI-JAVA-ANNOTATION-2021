 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> publicChineseLetter(StringW4,StringC7,StringB7,Stringf8,Stringc6){ <CR> super(W4,C7,B7,f8,c6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicEnglishLetter(Stringt1,StringJ6,StringR,Stringx7,Stringb2){ <CR> super(t1,J6,R,x7,b2); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> protectedStringsender; <CR> protectedStringdate; <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> publicintcompareTo(Lettero2){ <CR> String[]u2=date.split("/"),t9=o2.getDate().split("/"); <CR> for(intV=0;V<u2.length;V++){ <CR> if(Integer.parseInt(u2[V])>Integer.parseInt(t9[V]))return1; <CR> elseif(Integer.parseInt(u2[V])<Integer.parseInt(t9[V]))return-1; <CR> } <CR> return0; <CR> } <CR> protectedStringcontent; <CR> protectedStringtitle; <CR> publicLetter(Stringz5,Stringr2,Stringj6,StringZ4,StringR5){ <CR> this.title=z5; <CR> this.receiver=r2; <CR> this.content=j6; <CR> this.sender=Z4; <CR> this.date=R5; <CR> } <CR> abstractpublicvoiddisplay(); <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> protectedStringreceiver; <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]d6){ <CR> Letter[]f0={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(f0); <CR> for(intn8=0;n8<f0.length;n8++){ <CR> if(n8!=0) <CR> System.out.println("==========="); <CR> f0[n8].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 