 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicChineseLetter(Stringh4,StringF,Stringi6,Stringv3,Stringw9){ <CR> super(h4,F,i6,v3,w9); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> publicEnglishLetter(StringD3,Stringn6,Stringb9,StringZ,Stringz3){ <CR> super(D3,n6,b9,Z,z3); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> publicLetter(StringL2,StringB5,StringH0,StringI9,StringD1){ <CR> this.title=L2; <CR> this.receiver=B5; <CR> this.content=H0; <CR> this.sender=I9; <CR> this.date=D1; <CR> } <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> protectedStringcontent; <CR> protectedStringsender; <CR> protectedStringreceiver; <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> abstractpublicvoiddisplay(); <CR> protectedStringdate; <CR> protectedStringtitle; <CR> publicintcompareTo(LetterW1){ <CR> String[]y4=date.split("/"),k1=W1.getDate().split("/"); <CR> for(intS3=0;S3<y4.length;S3++){ <CR> if(Integer.parseInt(y4[S3])>Integer.parseInt(k1[S3]))return1; <CR> elseif(Integer.parseInt(y4[S3])<Integer.parseInt(k1[S3]))return-1; <CR> } <CR> return0; <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]m2){ <CR> Letter[]n1={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(n1); <CR> for(intd8=0;d8<n1.length;d8++){ <CR> if(d8!=0) <CR> System.out.println("==========="); <CR> n1[d8].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 