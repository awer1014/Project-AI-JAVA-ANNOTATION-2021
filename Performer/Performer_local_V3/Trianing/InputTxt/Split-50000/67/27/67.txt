 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicChineseLetter(StringA2,StringI6,Stringk0,StringQ2,Stringw7){ <CR> super(A2,I6,k0,Q2,w7); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicEnglishLetter(Stringe4,StringK5,Stringy6,StringY6,Stringx8){ <CR> super(e4,K5,y6,Y6,x8); <CR> } <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> protectedStringreceiver; <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> publicintcompareTo(LetterX9){ <CR> String[]R1=date.split("/"),y7=X9.getDate().split("/"); <CR> for(intC6=0;C6<R1.length;C6++){ <CR> if(Integer.parseInt(R1[C6])>Integer.parseInt(y7[C6]))return1; <CR> elseif(Integer.parseInt(R1[C6])<Integer.parseInt(y7[C6]))return-1; <CR> } <CR> return0; <CR> } <CR> abstractpublicvoiddisplay(); <CR> publicLetter(Stringf5,StringH8,Strings8,StringU5,StringX1){ <CR> this.title=f5; <CR> this.receiver=H8; <CR> this.content=s8; <CR> this.sender=U5; <CR> this.date=X1; <CR> } <CR> protectedStringcontent; <CR> protectedStringtitle; <CR> protectedStringdate; <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> protectedStringsender; <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]i2){ <CR> Letter[]M1={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(M1); <CR> for(intq8=0;q8<M1.length;q8++){ <CR> if(q8!=0) <CR> System.out.println("==========="); <CR> M1[q8].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 