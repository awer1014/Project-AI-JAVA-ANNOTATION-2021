 <BOC> publicclassChineseLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println(receiver+" "+title+",您好"); <CR> System.out.println(content); <CR> System.out.println(sender+" 敬上"); <CR> System.out.println(date); <CR> } <CR> publicChineseLetter(StringN0,Stringd6,StringL1,StringD9,Stringe0){ <CR> super(N0,d6,L1,D9,e0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassEnglishLetterextendsLetter{ <CR> publicvoiddisplay(){ <CR> System.out.println("Dear "+title+" "+receiver+","); <CR> System.out.println(content); <CR> System.out.println("Sincerely\n"+sender); <CR> System.out.println(date); <CR> } <CR> publicEnglishLetter(Stringk9,Stringx7,StringY3,Stringf0,Stringl4){ <CR> super(k9,x7,Y3,f0,l4); <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassLetterimplementsComparable<Letter>{ <CR> StringgetSender(){ <CR> returnsender; <CR> } <CR> protectedStringreceiver; <CR> StringgetReceiver(){ <CR> returnreceiver; <CR> } <CR> StringgetDate(){ <CR> returndate; <CR> } <CR> protectedStringdate; <CR> protectedStringtitle; <CR> abstractpublicvoiddisplay(); <CR> protectedStringsender; <CR> publicLetter(StringZ4,StringU5,StringL3,StringD8,StringA5){ <CR> this.title=Z4; <CR> this.receiver=U5; <CR> this.content=L3; <CR> this.sender=D8; <CR> this.date=A5; <CR> } <CR> publicintcompareTo(Letterm9){ <CR> String[]N4=date.split("/"),t8=m9.getDate().split("/"); <CR> for(intB5=0;B5<N4.length;B5++){ <CR> if(Integer.parseInt(N4[B5])>Integer.parseInt(t8[B5]))return1; <CR> elseif(Integer.parseInt(N4[B5])<Integer.parseInt(t8[B5]))return-1; <CR> } <CR> return0; <CR> } <CR> StringgetTitle(){ <CR> returntitle; <CR> } <CR> protectedStringcontent; <CR> } <CR>  <EOC>  <BOC> importjava.util.*; <CR> importjava.util.Arrays; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]S5){ <CR> Letter[]l8={newChineseLetter("教授","王","很高興跟您連絡","銘哥","2019/01/05"),newEnglishLetter("Professor","Wang","I am glad to write to you!","J. J. Lin","2018/11/01"),newEnglishLetter("Professor","Liu","I am sorry!","K. Ming","2018/07/05")}; <CR> Arrays.sort(l8); <CR> for(intO8=0;O8<l8.length;O8++){ <CR> if(O8!=0) <CR> System.out.println("==========="); <CR> l8[O8].display(); <CR> } <CR> } <CR> } <CR>  <EOC> 