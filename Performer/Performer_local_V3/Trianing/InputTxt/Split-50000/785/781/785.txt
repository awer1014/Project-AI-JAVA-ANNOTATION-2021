 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringX8){ <CR> super(X8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]e2){ <CR> StringB0,b2; <CR> doubleY0,E5; <CR> System.out.println("請輸入學生學號: "); <CR> B0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> b2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Y0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> E5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr3=newStudent(B0,b2,Y0,E5); <CR> r3.setid(B0); <CR> r3.setname(b2); <CR> r3.setscore(Y0); <CR> r3.setsw(E5); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intY0=0; <CR> do <CR> { <CR> Y0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Y0>3||Y0<1); <CR> returnmapTest(Y0); <CR> } <CR> staticTestmapTest(intY0){ <CR> TestM7=null; <CR> switch(Y0){ <CR> case1: <CR> M7=newExam("Exam"); <CR> break; <CR> case2: <CR> M7=newHomework("Homework"); <CR> break; <CR> case3: <CR> M7=newReport("Report"); <CR> break; <CR> } <CR> returnM7; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringI5){ <CR> super(I5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringe7){ <CR> super(e7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleV0){ <CR> score=V0; <CR> } <CR> Stringname; <CR> voidsetsw(doubleV0){ <CR> sw=V0; <CR> } <CR> voidsetid(StringV0){ <CR> id=V0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublescore; <CR> Student(StringA7,Stringv7,doubled2,doubleK3){ <CR> this.id=A7; <CR> this.name=v7; <CR> this.score=d2; <CR> this.sw=K3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringV0){ <CR> name=V0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringT3){ <CR> this.name=T3; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 