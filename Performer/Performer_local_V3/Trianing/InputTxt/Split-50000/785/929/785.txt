 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS7){ <CR> super(S7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intg7){ <CR> Testg0=null; <CR> switch(g7){ <CR> case1: <CR> g0=newExam("Exam"); <CR> break; <CR> case2: <CR> g0=newHomework("Homework"); <CR> break; <CR> case3: <CR> g0=newReport("Report"); <CR> break; <CR> } <CR> returng0; <CR> } <CR> publicstaticvoidmain(String[]n8){ <CR> StringL1,x1; <CR> doubleg7,C5; <CR> System.out.println("請輸入學生學號: "); <CR> L1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> x1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> g7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf7=newStudent(L1,x1,g7,C5); <CR> f7.setid(L1); <CR> f7.setname(x1); <CR> f7.setscore(g7); <CR> f7.setsw(C5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intg7=0; <CR> do <CR> { <CR> g7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(g7>3||g7<1); <CR> returnmapTest(g7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringx6){ <CR> super(x6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringb8){ <CR> super(b8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleK1){ <CR> score=K1; <CR> } <CR> Student(StringF6,Stringp1,doubled5,doubleG4){ <CR> this.id=F6; <CR> this.name=p1; <CR> this.score=d5; <CR> this.sw=G4; <CR> } <CR> Stringname; <CR> voidsetsw(doubleK1){ <CR> sw=K1; <CR> } <CR> voidsetname(StringK1){ <CR> name=K1; <CR> } <CR> doublesw; <CR> doublescore; <CR> voidsetid(StringK1){ <CR> id=K1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringY5){ <CR> this.name=Y5; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 