 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringF){ <CR> super(F); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]E){ <CR> Stringq2,T; <CR> doubleO1,R5; <CR> System.out.println("請輸入學生學號: "); <CR> q2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> T=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentu8=newStudent(q2,T,O1,R5); <CR> u8.setid(q2); <CR> u8.setname(T); <CR> u8.setscore(O1); <CR> u8.setsw(R5); <CR> } <CR> staticTestmapTest(intO1){ <CR> Testb1=null; <CR> switch(O1){ <CR> case1: <CR> b1=newExam("Exam"); <CR> break; <CR> case2: <CR> b1=newHomework("Homework"); <CR> break; <CR> case3: <CR> b1=newReport("Report"); <CR> break; <CR> } <CR> returnb1; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO1=0; <CR> do <CR> { <CR> O1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O1>3||O1<1); <CR> returnmapTest(O1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa9){ <CR> super(a9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringu6){ <CR> super(u6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Strings0){ <CR> id=s0; <CR> } <CR> Stringid; <CR> doublesw; <CR> voidsetscore(doubles0){ <CR> score=s0; <CR> } <CR> voidsetname(Strings0){ <CR> name=s0; <CR> } <CR> voidsetsw(doubles0){ <CR> sw=s0; <CR> } <CR> Stringname; <CR> Student(StringB0,StringH0,doubleT3,doubleQ3){ <CR> this.id=B0; <CR> this.name=H0; <CR> this.score=T3; <CR> this.sw=Q3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringM8){ <CR> this.name=M8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 