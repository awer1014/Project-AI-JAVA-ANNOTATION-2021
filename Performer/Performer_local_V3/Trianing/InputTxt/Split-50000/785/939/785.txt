 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringT5){ <CR> super(T5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]u9){ <CR> StringB0,Z0; <CR> doubleP5,d9; <CR> System.out.println("請輸入學生學號: "); <CR> B0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Z0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> P5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> d9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentT3=newStudent(B0,Z0,P5,d9); <CR> T3.setid(B0); <CR> T3.setname(Z0); <CR> T3.setscore(P5); <CR> T3.setsw(d9); <CR> } <CR> staticTestmapTest(intP5){ <CR> TestA2=null; <CR> switch(P5){ <CR> case1: <CR> A2=newExam("Exam"); <CR> break; <CR> case2: <CR> A2=newHomework("Homework"); <CR> break; <CR> case3: <CR> A2=newReport("Report"); <CR> break; <CR> } <CR> returnA2; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intP5=0; <CR> do <CR> { <CR> P5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(P5>3||P5<1); <CR> returnmapTest(P5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringg1){ <CR> super(g1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringr5){ <CR> super(r5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublec5){ <CR> sw=c5; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetid(Stringc5){ <CR> id=c5; <CR> } <CR> Student(StringN9,StringS6,doublef1,doublel){ <CR> this.id=N9; <CR> this.name=S6; <CR> this.score=f1; <CR> this.sw=l; <CR> } <CR> voidsetname(Stringc5){ <CR> name=c5; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> Stringname; <CR> voidsetscore(doublec5){ <CR> score=c5; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringO0){ <CR> this.name=O0; <CR> } <CR> } <CR>  <EOC> 