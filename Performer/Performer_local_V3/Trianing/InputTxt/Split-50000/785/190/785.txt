 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringA4){ <CR> super(A4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intp0){ <CR> Testl9=null; <CR> switch(p0){ <CR> case1: <CR> l9=newExam("Exam"); <CR> break; <CR> case2: <CR> l9=newHomework("Homework"); <CR> break; <CR> case3: <CR> l9=newReport("Report"); <CR> break; <CR> } <CR> returnl9; <CR> } <CR> publicstaticvoidmain(String[]U7){ <CR> StringN4,j6; <CR> doublep0,H5; <CR> System.out.println("請輸入學生學號: "); <CR> N4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> j6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> p0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> H5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentI4=newStudent(N4,j6,p0,H5); <CR> I4.setid(N4); <CR> I4.setname(j6); <CR> I4.setscore(p0); <CR> I4.setsw(H5); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intp0=0; <CR> do <CR> { <CR> p0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(p0>3||p0<1); <CR> returnmapTest(p0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringk5){ <CR> super(k5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringp3){ <CR> super(p3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Strings0){ <CR> name=s0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubles0){ <CR> score=s0; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetsw(doubles0){ <CR> sw=s0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringc8,Stringe1,doubley7,doublem1){ <CR> this.id=c8; <CR> this.name=e1; <CR> this.score=y7; <CR> this.sw=m1; <CR> } <CR> voidsetid(Strings0){ <CR> id=s0; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringv8){ <CR> this.name=v8; <CR> } <CR> } <CR>  <EOC> 