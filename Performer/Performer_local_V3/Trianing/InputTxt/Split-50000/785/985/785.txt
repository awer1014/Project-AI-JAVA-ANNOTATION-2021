 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringP9){ <CR> super(P9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]h6){ <CR> Stringy4,q; <CR> doublel0,o1; <CR> System.out.println("請輸入學生學號: "); <CR> y4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> l0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> o1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentv0=newStudent(y4,q,l0,o1); <CR> v0.setid(y4); <CR> v0.setname(q); <CR> v0.setscore(l0); <CR> v0.setsw(o1); <CR> } <CR> staticTestmapTest(intl0){ <CR> Testz6=null; <CR> switch(l0){ <CR> case1: <CR> z6=newExam("Exam"); <CR> break; <CR> case2: <CR> z6=newHomework("Homework"); <CR> break; <CR> case3: <CR> z6=newReport("Report"); <CR> break; <CR> } <CR> returnz6; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intl0=0; <CR> do <CR> { <CR> l0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(l0>3||l0<1); <CR> returnmapTest(l0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringK4){ <CR> super(K4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringz0){ <CR> super(z0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringS9){ <CR> id=S9; <CR> } <CR> voidsetsw(doubleS9){ <CR> sw=S9; <CR> } <CR> Student(Stringj3,Stringw0,doublew6,doubleC1){ <CR> this.id=j3; <CR> this.name=w0; <CR> this.score=w6; <CR> this.sw=C1; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleS9){ <CR> score=S9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringS9){ <CR> name=S9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Stringid; <CR> Stringname; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringb3){ <CR> this.name=b3; <CR> } <CR> } <CR>  <EOC> 