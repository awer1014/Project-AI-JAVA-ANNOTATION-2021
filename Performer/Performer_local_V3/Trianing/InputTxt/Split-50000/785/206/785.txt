 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringy1){ <CR> super(y1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intD1=0; <CR> do <CR> { <CR> D1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(D1>3||D1<1); <CR> returnmapTest(D1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]e5){ <CR> Strings1,d5; <CR> doubleD1,Z8; <CR> System.out.println("請輸入學生學號: "); <CR> s1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> d5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> D1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentk8=newStudent(s1,d5,D1,Z8); <CR> k8.setid(s1); <CR> k8.setname(d5); <CR> k8.setscore(D1); <CR> k8.setsw(Z8); <CR> } <CR> staticTestmapTest(intD1){ <CR> Testo8=null; <CR> switch(D1){ <CR> case1: <CR> o8=newExam("Exam"); <CR> break; <CR> case2: <CR> o8=newHomework("Homework"); <CR> break; <CR> case3: <CR> o8=newReport("Report"); <CR> break; <CR> } <CR> returno8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringj5){ <CR> super(j5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi5){ <CR> super(i5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> doublesw; <CR> Student(Stringc4,StringU9,doublez4,doubley9){ <CR> this.id=c4; <CR> this.name=U9; <CR> this.score=z4; <CR> this.sw=y9; <CR> } <CR> voidsetid(Stringr5){ <CR> id=r5; <CR> } <CR> voidsetscore(doubler5){ <CR> score=r5; <CR> } <CR> voidsetname(Stringr5){ <CR> name=r5; <CR> } <CR> voidsetsw(doubler5){ <CR> sw=r5; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringi8){ <CR> this.name=i8; <CR> } <CR> } <CR>  <EOC> 