 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx5){ <CR> super(x5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]U4){ <CR> Stringk1,K3; <CR> doubleq0,Z2; <CR> System.out.println("請輸入學生學號: "); <CR> k1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> K3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> q0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentO5=newStudent(k1,K3,q0,Z2); <CR> O5.setid(k1); <CR> O5.setname(K3); <CR> O5.setscore(q0); <CR> O5.setsw(Z2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intq0=0; <CR> do <CR> { <CR> q0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(q0>3||q0<1); <CR> returnmapTest(q0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intq0){ <CR> Testx1=null; <CR> switch(q0){ <CR> case1: <CR> x1=newExam("Exam"); <CR> break; <CR> case2: <CR> x1=newHomework("Homework"); <CR> break; <CR> case3: <CR> x1=newReport("Report"); <CR> break; <CR> } <CR> returnx1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringq2){ <CR> super(q2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringG9){ <CR> super(G9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> voidsetsw(doublep2){ <CR> sw=p2; <CR> } <CR> doublesw; <CR> Student(StringC7,StringE7,doublex0,doubleh2){ <CR> this.id=C7; <CR> this.name=E7; <CR> this.score=x0; <CR> this.sw=h2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublep2){ <CR> score=p2; <CR> } <CR> voidsetid(Stringp2){ <CR> id=p2; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(Stringp2){ <CR> name=p2; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringx2){ <CR> this.name=x2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 