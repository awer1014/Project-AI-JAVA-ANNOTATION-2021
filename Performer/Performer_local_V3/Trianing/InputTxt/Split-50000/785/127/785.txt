 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringv4){ <CR> super(v4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intv4){ <CR> TestC2=null; <CR> switch(v4){ <CR> case1: <CR> C2=newExam("Exam"); <CR> break; <CR> case2: <CR> C2=newHomework("Homework"); <CR> break; <CR> case3: <CR> C2=newReport("Report"); <CR> break; <CR> } <CR> returnC2; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]k4){ <CR> Stringf8,D7; <CR> doublev4,X7; <CR> System.out.println("請輸入學生學號: "); <CR> f8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> D7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> v4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> X7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentT4=newStudent(f8,D7,v4,X7); <CR> T4.setid(f8); <CR> T4.setname(D7); <CR> T4.setscore(v4); <CR> T4.setsw(X7); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intv4=0; <CR> do <CR> { <CR> v4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(v4>3||v4<1); <CR> returnmapTest(v4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringN8){ <CR> super(N8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE1){ <CR> super(E1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringI4){ <CR> id=I4; <CR> } <CR> doublesw; <CR> Student(Stringe5,Stringm2,doubleH0,doubleo2){ <CR> this.id=e5; <CR> this.name=m2; <CR> this.score=H0; <CR> this.sw=o2; <CR> } <CR> Stringname; <CR> voidsetscore(doubleI4){ <CR> score=I4; <CR> } <CR> voidsetname(StringI4){ <CR> name=I4; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubleI4){ <CR> sw=I4; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX2){ <CR> this.name=X2; <CR> } <CR> } <CR>  <EOC> 