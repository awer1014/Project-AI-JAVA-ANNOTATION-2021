 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringX7){ <CR> super(X7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inti6=0; <CR> do <CR> { <CR> i6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(i6>3||i6<1); <CR> returnmapTest(i6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(inti6){ <CR> Testl1=null; <CR> switch(i6){ <CR> case1: <CR> l1=newExam("Exam"); <CR> break; <CR> case2: <CR> l1=newHomework("Homework"); <CR> break; <CR> case3: <CR> l1=newReport("Report"); <CR> break; <CR> } <CR> returnl1; <CR> } <CR> publicstaticvoidmain(String[]e7){ <CR> Stringc1,x8; <CR> doublei6,E1; <CR> System.out.println("請輸入學生學號: "); <CR> c1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> x8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> i6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> E1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX1=newStudent(c1,x8,i6,E1); <CR> X1.setid(c1); <CR> X1.setname(x8); <CR> X1.setscore(i6); <CR> X1.setsw(E1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringv4){ <CR> super(v4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringD0){ <CR> super(D0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleb){ <CR> score=b; <CR> } <CR> voidsetname(Stringb){ <CR> name=b; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringb){ <CR> id=b; <CR> } <CR> doublescore; <CR> Student(StringW5,StringX,doubleG5,doublex5){ <CR> this.id=W5; <CR> this.name=X; <CR> this.score=G5; <CR> this.sw=x5; <CR> } <CR> doublesw; <CR> voidsetsw(doubleb){ <CR> sw=b; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringi3){ <CR> this.name=i3; <CR> } <CR> } <CR>  <EOC> 