 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringj){ <CR> super(j); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intJ6=0; <CR> do <CR> { <CR> J6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(J6>3||J6<1); <CR> returnmapTest(J6); <CR> } <CR> publicstaticvoidmain(String[]n6){ <CR> Stringe0,e; <CR> doubleJ6,O8; <CR> System.out.println("請輸入學生學號: "); <CR> e0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> J6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentS1=newStudent(e0,e,J6,O8); <CR> S1.setid(e0); <CR> S1.setname(e); <CR> S1.setscore(J6); <CR> S1.setsw(O8); <CR> } <CR> staticTestmapTest(intJ6){ <CR> Testz0=null; <CR> switch(J6){ <CR> case1: <CR> z0=newExam("Exam"); <CR> break; <CR> case2: <CR> z0=newHomework("Homework"); <CR> break; <CR> case3: <CR> z0=newReport("Report"); <CR> break; <CR> } <CR> returnz0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringx9){ <CR> super(x9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringb9){ <CR> super(b9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleU6){ <CR> sw=U6; <CR> } <CR> voidsetname(StringU6){ <CR> name=U6; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringB8,Stringd2,doubleU9,doubleP9){ <CR> this.id=B8; <CR> this.name=d2; <CR> this.score=U9; <CR> this.sw=P9; <CR> } <CR> doublesw; <CR> doublescore; <CR> Stringid; <CR> voidsetid(StringU6){ <CR> id=U6; <CR> } <CR> voidsetscore(doubleU6){ <CR> score=U6; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringh6){ <CR> this.name=h6; <CR> } <CR> } <CR>  <EOC> 