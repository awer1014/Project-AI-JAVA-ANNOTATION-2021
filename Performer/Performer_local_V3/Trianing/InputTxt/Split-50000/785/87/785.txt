 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringb5){ <CR> super(b5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]G4){ <CR> Stringl0,H8; <CR> doubleT,M2; <CR> System.out.println("請輸入學生學號: "); <CR> l0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> H8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentW4=newStudent(l0,H8,T,M2); <CR> W4.setid(l0); <CR> W4.setname(H8); <CR> W4.setscore(T); <CR> W4.setsw(M2); <CR> } <CR> staticTestmapTest(intT){ <CR> Tests1=null; <CR> switch(T){ <CR> case1: <CR> s1=newExam("Exam"); <CR> break; <CR> case2: <CR> s1=newHomework("Homework"); <CR> break; <CR> case3: <CR> s1=newReport("Report"); <CR> break; <CR> } <CR> returns1; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT=0; <CR> do <CR> { <CR> T=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T>3||T<1); <CR> returnmapTest(T); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringM6){ <CR> super(M6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringn9){ <CR> super(n9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleU1){ <CR> sw=U1; <CR> } <CR> Stringid; <CR> voidsetscore(doubleU1){ <CR> score=U1; <CR> } <CR> voidsetid(StringU1){ <CR> id=U1; <CR> } <CR> doublesw; <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringU1){ <CR> name=U1; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringz4,StringE2,doublez,doubleX9){ <CR> this.id=z4; <CR> this.name=E2; <CR> this.score=z; <CR> this.sw=X9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringO9){ <CR> this.name=O9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 