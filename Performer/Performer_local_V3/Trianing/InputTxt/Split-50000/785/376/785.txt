 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr3){ <CR> super(r3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intG4){ <CR> TestI8=null; <CR> switch(G4){ <CR> case1: <CR> I8=newExam("Exam"); <CR> break; <CR> case2: <CR> I8=newHomework("Homework"); <CR> break; <CR> case3: <CR> I8=newReport("Report"); <CR> break; <CR> } <CR> returnI8; <CR> } <CR> publicstaticvoidmain(String[]E3){ <CR> StringP9,I0; <CR> doubleG4,R2; <CR> System.out.println("請輸入學生學號: "); <CR> P9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> I0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentk1=newStudent(P9,I0,G4,R2); <CR> k1.setid(P9); <CR> k1.setname(I0); <CR> k1.setscore(G4); <CR> k1.setsw(R2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG4=0; <CR> do <CR> { <CR> G4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G4>3||G4<1); <CR> returnmapTest(G4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringh3){ <CR> super(h3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringU3){ <CR> super(U3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringJ7){ <CR> name=J7; <CR> } <CR> voidsetsw(doubleJ7){ <CR> sw=J7; <CR> } <CR> Student(StringN,StringW5,doubleH3,doubleC){ <CR> this.id=N; <CR> this.name=W5; <CR> this.score=H3; <CR> this.sw=C; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> doublesw; <CR> voidsetscore(doubleJ7){ <CR> score=J7; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> voidsetid(StringJ7){ <CR> id=J7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringc3){ <CR> this.name=c3; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 