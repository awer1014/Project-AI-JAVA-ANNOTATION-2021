 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo7){ <CR> super(o7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]M){ <CR> Strings4,X1; <CR> doubleh8,u9; <CR> System.out.println("請輸入學生學號: "); <CR> s4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> X1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> h8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> u9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studente4=newStudent(s4,X1,h8,u9); <CR> e4.setid(s4); <CR> e4.setname(X1); <CR> e4.setscore(h8); <CR> e4.setsw(u9); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inth8=0; <CR> do <CR> { <CR> h8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(h8>3||h8<1); <CR> returnmapTest(h8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(inth8){ <CR> TestD2=null; <CR> switch(h8){ <CR> case1: <CR> D2=newExam("Exam"); <CR> break; <CR> case2: <CR> D2=newHomework("Homework"); <CR> break; <CR> case3: <CR> D2=newReport("Report"); <CR> break; <CR> } <CR> returnD2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringu4){ <CR> super(u4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringW8){ <CR> super(W8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringE7,Stringe3,doubleZ3,doubleM8){ <CR> this.id=E7; <CR> this.name=e3; <CR> this.score=Z3; <CR> this.sw=M8; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleA1){ <CR> score=A1; <CR> } <CR> voidsetsw(doubleA1){ <CR> sw=A1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublesw; <CR> voidsetname(StringA1){ <CR> name=A1; <CR> } <CR> voidsetid(StringA1){ <CR> id=A1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringf2){ <CR> this.name=f2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 