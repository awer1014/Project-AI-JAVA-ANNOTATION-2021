 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringi8){ <CR> super(i8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]J){ <CR> StringB3,q3; <CR> doubleN,U1; <CR> System.out.println("請輸入學生學號: "); <CR> B3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> N=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> U1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentb2=newStudent(B3,q3,N,U1); <CR> b2.setid(B3); <CR> b2.setname(q3); <CR> b2.setscore(N); <CR> b2.setsw(U1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intN){ <CR> TestZ=null; <CR> switch(N){ <CR> case1: <CR> Z=newExam("Exam"); <CR> break; <CR> case2: <CR> Z=newHomework("Homework"); <CR> break; <CR> case3: <CR> Z=newReport("Report"); <CR> break; <CR> } <CR> returnZ; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intN=0; <CR> do <CR> { <CR> N=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(N>3||N<1); <CR> returnmapTest(N); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings7){ <CR> super(s7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringu2){ <CR> super(u2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringE5){ <CR> name=E5; <CR> } <CR> Student(Stringc9,Stringh3,doubleY5,doubleB8){ <CR> this.id=c9; <CR> this.name=h3; <CR> this.score=Y5; <CR> this.sw=B8; <CR> } <CR> Stringid; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleE5){ <CR> sw=E5; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(StringE5){ <CR> id=E5; <CR> } <CR> voidsetscore(doubleE5){ <CR> score=E5; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringg8){ <CR> this.name=g8; <CR> } <CR> } <CR>  <EOC> 