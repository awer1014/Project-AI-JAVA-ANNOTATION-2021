 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr7){ <CR> super(r7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intf8){ <CR> TestS=null; <CR> switch(f8){ <CR> case1: <CR> S=newExam("Exam"); <CR> break; <CR> case2: <CR> S=newHomework("Homework"); <CR> break; <CR> case3: <CR> S=newReport("Report"); <CR> break; <CR> } <CR> returnS; <CR> } <CR> publicstaticvoidmain(String[]T){ <CR> StringA4,p5; <CR> doublef8,F4; <CR> System.out.println("請輸入學生學號: "); <CR> A4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> p5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentG0=newStudent(A4,p5,f8,F4); <CR> G0.setid(A4); <CR> G0.setname(p5); <CR> G0.setscore(f8); <CR> G0.setsw(F4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf8=0; <CR> do <CR> { <CR> f8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f8>3||f8<1); <CR> returnmapTest(f8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringZ3){ <CR> super(Z3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringZ6){ <CR> super(Z6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetname(StringR2){ <CR> name=R2; <CR> } <CR> Stringname; <CR> Student(Stringc,Stringw4,doublet2,doubleH3){ <CR> this.id=c; <CR> this.name=w4; <CR> this.score=t2; <CR> this.sw=H3; <CR> } <CR> voidsetscore(doubleR2){ <CR> score=R2; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleR2){ <CR> sw=R2; <CR> } <CR> doublescore; <CR> voidsetid(StringR2){ <CR> id=R2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringL5){ <CR> this.name=L5; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 