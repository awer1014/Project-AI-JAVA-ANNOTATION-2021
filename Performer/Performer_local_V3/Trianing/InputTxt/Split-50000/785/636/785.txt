 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringM4){ <CR> super(M4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(inty2){ <CR> TestH9=null; <CR> switch(y2){ <CR> case1: <CR> H9=newExam("Exam"); <CR> break; <CR> case2: <CR> H9=newHomework("Homework"); <CR> break; <CR> case3: <CR> H9=newReport("Report"); <CR> break; <CR> } <CR> returnH9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]n1){ <CR> StringG4,K9; <CR> doubley2,z6; <CR> System.out.println("請輸入學生學號: "); <CR> G4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> K9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> y2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> z6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studento1=newStudent(G4,K9,y2,z6); <CR> o1.setid(G4); <CR> o1.setname(K9); <CR> o1.setscore(y2); <CR> o1.setsw(z6); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inty2=0; <CR> do <CR> { <CR> y2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(y2>3||y2<1); <CR> returnmapTest(y2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringe2){ <CR> super(e2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringn6){ <CR> super(n6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> voidsetname(Stringo7){ <CR> name=o7; <CR> } <CR> voidsetsw(doubleo7){ <CR> sw=o7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleo7){ <CR> score=o7; <CR> } <CR> voidsetid(Stringo7){ <CR> id=o7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> Stringid; <CR> Student(Stringp4,Stringw8,doubleB6,doubleL6){ <CR> this.id=p4; <CR> this.name=w8; <CR> this.score=B6; <CR> this.sw=L6; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk0){ <CR> this.name=k0; <CR> } <CR> } <CR>  <EOC> 