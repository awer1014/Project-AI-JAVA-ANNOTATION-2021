 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS6){ <CR> super(S6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intX3=0; <CR> do <CR> { <CR> X3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(X3>3||X3<1); <CR> returnmapTest(X3); <CR> } <CR> staticTestmapTest(intX3){ <CR> Testg5=null; <CR> switch(X3){ <CR> case1: <CR> g5=newExam("Exam"); <CR> break; <CR> case2: <CR> g5=newHomework("Homework"); <CR> break; <CR> case3: <CR> g5=newReport("Report"); <CR> break; <CR> } <CR> returng5; <CR> } <CR> publicstaticvoidmain(String[]k3){ <CR> Strings6,T; <CR> doubleX3,k0; <CR> System.out.println("請輸入學生學號: "); <CR> s6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> T=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> X3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> k0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentD3=newStudent(s6,T,X3,k0); <CR> D3.setid(s6); <CR> D3.setname(T); <CR> D3.setscore(X3); <CR> D3.setsw(k0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn1){ <CR> super(n1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringd9){ <CR> super(d9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> voidsetid(StringB0){ <CR> id=B0; <CR> } <CR> voidsetscore(doubleB0){ <CR> score=B0; <CR> } <CR> voidsetname(StringB0){ <CR> name=B0; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleB0){ <CR> sw=B0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(StringP4,Stringj6,doublee9,doubleA4){ <CR> this.id=P4; <CR> this.name=j6; <CR> this.score=e9; <CR> this.sw=A4; <CR> } <CR> Stringname; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringm7){ <CR> this.name=m7; <CR> } <CR> } <CR>  <EOC> 