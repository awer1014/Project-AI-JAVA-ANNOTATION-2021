 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringL){ <CR> super(L); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]E0){ <CR> Stringv0,H; <CR> doubleo8,X3; <CR> System.out.println("請輸入學生學號: "); <CR> v0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> H=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> o8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> X3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentJ5=newStudent(v0,H,o8,X3); <CR> J5.setid(v0); <CR> J5.setname(H); <CR> J5.setscore(o8); <CR> J5.setsw(X3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> into8=0; <CR> do <CR> { <CR> o8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(o8>3||o8<1); <CR> returnmapTest(o8); <CR> } <CR> staticTestmapTest(into8){ <CR> TestZ6=null; <CR> switch(o8){ <CR> case1: <CR> Z6=newExam("Exam"); <CR> break; <CR> case2: <CR> Z6=newHomework("Homework"); <CR> break; <CR> case3: <CR> Z6=newReport("Report"); <CR> break; <CR> } <CR> returnZ6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringy2){ <CR> super(y2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringv6){ <CR> super(v6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetsw(doublev){ <CR> sw=v; <CR> } <CR> Stringid; <CR> voidsetname(Stringv){ <CR> name=v; <CR> } <CR> voidsetscore(doublev){ <CR> score=v; <CR> } <CR> Student(Stringw5,Stringy3,doublee,doublek5){ <CR> this.id=w5; <CR> this.name=y3; <CR> this.score=e; <CR> this.sw=k5; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringv){ <CR> id=v; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk2){ <CR> this.name=k2; <CR> } <CR> } <CR>  <EOC> 