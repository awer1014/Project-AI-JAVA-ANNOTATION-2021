 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg1){ <CR> super(g1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intE0){ <CR> Testr9=null; <CR> switch(E0){ <CR> case1: <CR> r9=newExam("Exam"); <CR> break; <CR> case2: <CR> r9=newHomework("Homework"); <CR> break; <CR> case3: <CR> r9=newReport("Report"); <CR> break; <CR> } <CR> returnr9; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intE0=0; <CR> do <CR> { <CR> E0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(E0>3||E0<1); <CR> returnmapTest(E0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]w){ <CR> Stringh0,s8; <CR> doubleE0,O1; <CR> System.out.println("請輸入學生學號: "); <CR> h0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> s8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> E0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentK8=newStudent(h0,s8,E0,O1); <CR> K8.setid(h0); <CR> K8.setname(s8); <CR> K8.setscore(E0); <CR> K8.setsw(O1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringN3){ <CR> super(N3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringv7){ <CR> super(v7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringX7){ <CR> name=X7; <CR> } <CR> doublesw; <CR> voidsetsw(doubleX7){ <CR> sw=X7; <CR> } <CR> Student(Stringq4,StringH8,doubleM6,doubleO0){ <CR> this.id=q4; <CR> this.name=H8; <CR> this.score=M6; <CR> this.sw=O0; <CR> } <CR> Stringid; <CR> voidsetscore(doubleX7){ <CR> score=X7; <CR> } <CR> voidsetid(StringX7){ <CR> id=X7; <CR> } <CR> Stringname; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringH9){ <CR> this.name=H9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 