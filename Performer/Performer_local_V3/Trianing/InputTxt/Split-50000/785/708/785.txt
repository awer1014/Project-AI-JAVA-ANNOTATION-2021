 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo1){ <CR> super(o1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]a5){ <CR> Strings5,r; <CR> doubleA,k2; <CR> System.out.println("請輸入學生學號: "); <CR> s5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> k2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf3=newStudent(s5,r,A,k2); <CR> f3.setid(s5); <CR> f3.setname(r); <CR> f3.setscore(A); <CR> f3.setsw(k2); <CR> } <CR> staticTestmapTest(intA){ <CR> TestX=null; <CR> switch(A){ <CR> case1: <CR> X=newExam("Exam"); <CR> break; <CR> case2: <CR> X=newHomework("Homework"); <CR> break; <CR> case3: <CR> X=newReport("Report"); <CR> break; <CR> } <CR> returnX; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA=0; <CR> do <CR> { <CR> A=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A>3||A<1); <CR> returnmapTest(A); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringw8){ <CR> super(w8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringT1){ <CR> super(T1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> Student(Stringy7,StringH4,doubleO8,doublet8){ <CR> this.id=y7; <CR> this.name=H4; <CR> this.score=O8; <CR> this.sw=t8; <CR> } <CR> Stringid; <CR> voidsetid(Stringu0){ <CR> id=u0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringu0){ <CR> name=u0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> voidsetscore(doubleu0){ <CR> score=u0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetsw(doubleu0){ <CR> sw=u0; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringr1){ <CR> this.name=r1; <CR> } <CR> } <CR>  <EOC> 