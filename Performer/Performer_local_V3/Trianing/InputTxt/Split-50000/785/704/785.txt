 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringz6){ <CR> super(z6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]G2){ <CR> Stringh2,k0; <CR> doubleo2,S6; <CR> System.out.println("請輸入學生學號: "); <CR> h2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> k0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> o2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> S6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentA5=newStudent(h2,k0,o2,S6); <CR> A5.setid(h2); <CR> A5.setname(k0); <CR> A5.setscore(o2); <CR> A5.setsw(S6); <CR> } <CR> staticTestmapTest(into2){ <CR> Testh7=null; <CR> switch(o2){ <CR> case1: <CR> h7=newExam("Exam"); <CR> break; <CR> case2: <CR> h7=newHomework("Homework"); <CR> break; <CR> case3: <CR> h7=newReport("Report"); <CR> break; <CR> } <CR> returnh7; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> into2=0; <CR> do <CR> { <CR> o2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(o2>3||o2<1); <CR> returnmapTest(o2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringH7){ <CR> super(H7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP5){ <CR> super(P5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublec2){ <CR> score=c2; <CR> } <CR> voidsetname(Stringc2){ <CR> name=c2; <CR> } <CR> Stringid; <CR> voidsetid(Stringc2){ <CR> id=c2; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublec2){ <CR> sw=c2; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> Student(StringS5,StringD8,doubleX0,doublee2){ <CR> this.id=S5; <CR> this.name=D8; <CR> this.score=X0; <CR> this.sw=e2; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringz){ <CR> this.name=z; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 