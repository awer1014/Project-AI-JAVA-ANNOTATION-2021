 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringM8){ <CR> super(M8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intd7){ <CR> Testx=null; <CR> switch(d7){ <CR> case1: <CR> x=newExam("Exam"); <CR> break; <CR> case2: <CR> x=newHomework("Homework"); <CR> break; <CR> case3: <CR> x=newReport("Report"); <CR> break; <CR> } <CR> returnx; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]i5){ <CR> Stringr0,h5; <CR> doubled7,l2; <CR> System.out.println("請輸入學生學號: "); <CR> r0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> h5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> d7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> l2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenth9=newStudent(r0,h5,d7,l2); <CR> h9.setid(r0); <CR> h9.setname(h5); <CR> h9.setscore(d7); <CR> h9.setsw(l2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intd7=0; <CR> do <CR> { <CR> d7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(d7>3||d7<1); <CR> returnmapTest(d7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd3){ <CR> super(d3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringM5){ <CR> super(M5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringU2,Stringl9,doubleP9,doublea5){ <CR> this.id=U2; <CR> this.name=l9; <CR> this.score=P9; <CR> this.sw=a5; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubler4){ <CR> score=r4; <CR> } <CR> voidsetname(Stringr4){ <CR> name=r4; <CR> } <CR> voidsetsw(doubler4){ <CR> sw=r4; <CR> } <CR> voidsetid(Stringr4){ <CR> id=r4; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringH0){ <CR> this.name=H0; <CR> } <CR> } <CR>  <EOC> 