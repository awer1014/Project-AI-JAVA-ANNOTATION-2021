 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringv7){ <CR> super(v7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]J1){ <CR> Stringa4,q6; <CR> doubleR8,Z0; <CR> System.out.println("請輸入學生學號: "); <CR> a4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> R8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentT8=newStudent(a4,q6,R8,Z0); <CR> T8.setid(a4); <CR> T8.setname(q6); <CR> T8.setscore(R8); <CR> T8.setsw(Z0); <CR> } <CR> staticTestmapTest(intR8){ <CR> Testt0=null; <CR> switch(R8){ <CR> case1: <CR> t0=newExam("Exam"); <CR> break; <CR> case2: <CR> t0=newHomework("Homework"); <CR> break; <CR> case3: <CR> t0=newReport("Report"); <CR> break; <CR> } <CR> returnt0; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intR8=0; <CR> do <CR> { <CR> R8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(R8>3||R8<1); <CR> returnmapTest(R8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringP){ <CR> super(P); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringl4){ <CR> super(l4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleK0){ <CR> score=K0; <CR> } <CR> voidsetid(StringK0){ <CR> id=K0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublesw; <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleK0){ <CR> sw=K0; <CR> } <CR> Student(Stringj9,StringG9,doubleC0,doublef){ <CR> this.id=j9; <CR> this.name=G9; <CR> this.score=C0; <CR> this.sw=f; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringK0){ <CR> name=K0; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX){ <CR> this.name=X; <CR> } <CR> } <CR>  <EOC> 