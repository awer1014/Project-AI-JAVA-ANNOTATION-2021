 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringe3){ <CR> super(e3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intZ1=0; <CR> do <CR> { <CR> Z1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Z1>3||Z1<1); <CR> returnmapTest(Z1); <CR> } <CR> staticTestmapTest(intZ1){ <CR> TestV1=null; <CR> switch(Z1){ <CR> case1: <CR> V1=newExam("Exam"); <CR> break; <CR> case2: <CR> V1=newHomework("Homework"); <CR> break; <CR> case3: <CR> V1=newReport("Report"); <CR> break; <CR> } <CR> returnV1; <CR> } <CR> publicstaticvoidmain(String[]i6){ <CR> Stringi,U5; <CR> doubleZ1,N2; <CR> System.out.println("請輸入學生學號: "); <CR> i=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> U5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Z1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentO8=newStudent(i,U5,Z1,N2); <CR> O8.setid(i); <CR> O8.setname(U5); <CR> O8.setscore(Z1); <CR> O8.setsw(N2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringI8){ <CR> super(I8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringc1){ <CR> super(c1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringx8){ <CR> name=x8; <CR> } <CR> voidsetscore(doublex8){ <CR> score=x8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublex8){ <CR> sw=x8; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringq0,Stringo5,doublep1,doubleU4){ <CR> this.id=q0; <CR> this.name=o5; <CR> this.score=p1; <CR> this.sw=U4; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringx8){ <CR> id=x8; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringn2){ <CR> this.name=n2; <CR> } <CR> } <CR>  <EOC> 