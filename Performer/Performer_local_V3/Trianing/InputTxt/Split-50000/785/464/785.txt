 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk1){ <CR> super(k1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]a0){ <CR> Stringj9,W; <CR> doubleG4,C; <CR> System.out.println("請輸入學生學號: "); <CR> j9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> W=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentk9=newStudent(j9,W,G4,C); <CR> k9.setid(j9); <CR> k9.setname(W); <CR> k9.setscore(G4); <CR> k9.setsw(C); <CR> } <CR> staticTestmapTest(intG4){ <CR> TestQ3=null; <CR> switch(G4){ <CR> case1: <CR> Q3=newExam("Exam"); <CR> break; <CR> case2: <CR> Q3=newHomework("Homework"); <CR> break; <CR> case3: <CR> Q3=newReport("Report"); <CR> break; <CR> } <CR> returnQ3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG4=0; <CR> do <CR> { <CR> G4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G4>3||G4<1); <CR> returnmapTest(G4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringU9){ <CR> super(U9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx9){ <CR> super(x9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringI5){ <CR> name=I5; <CR> } <CR> voidsetid(StringI5){ <CR> id=I5; <CR> } <CR> Stringid; <CR> voidsetsw(doubleI5){ <CR> sw=I5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> voidsetscore(doubleI5){ <CR> score=I5; <CR> } <CR> Student(StringD,StringS1,doubleA3,doublec9){ <CR> this.id=D; <CR> this.name=S1; <CR> this.score=A3; <CR> this.sw=c9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringm4){ <CR> this.name=m4; <CR> } <CR> } <CR>  <EOC> 