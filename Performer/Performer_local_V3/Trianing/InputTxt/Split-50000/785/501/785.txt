 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringY7){ <CR> super(Y7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]z7){ <CR> StringE0,y; <CR> doubleY3,O3; <CR> System.out.println("請輸入學生學號: "); <CR> E0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> y=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Y3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentV0=newStudent(E0,y,Y3,O3); <CR> V0.setid(E0); <CR> V0.setname(y); <CR> V0.setscore(Y3); <CR> V0.setsw(O3); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intY3=0; <CR> do <CR> { <CR> Y3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Y3>3||Y3<1); <CR> returnmapTest(Y3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intY3){ <CR> Testx8=null; <CR> switch(Y3){ <CR> case1: <CR> x8=newExam("Exam"); <CR> break; <CR> case2: <CR> x8=newHomework("Homework"); <CR> break; <CR> case3: <CR> x8=newReport("Report"); <CR> break; <CR> } <CR> returnx8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringq8){ <CR> super(q8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringa3){ <CR> super(a3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> voidsetsw(doubler3){ <CR> sw=r3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetid(Stringr3){ <CR> id=r3; <CR> } <CR> voidsetscore(doubler3){ <CR> score=r3; <CR> } <CR> voidsetname(Stringr3){ <CR> name=r3; <CR> } <CR> Student(Stringb6,StringK5,doubleV7,doubleU3){ <CR> this.id=b6; <CR> this.name=K5; <CR> this.score=V7; <CR> this.sw=U3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk6){ <CR> this.name=k6; <CR> } <CR> } <CR>  <EOC> 