 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr4){ <CR> super(r4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intE8){ <CR> Testi9=null; <CR> switch(E8){ <CR> case1: <CR> i9=newExam("Exam"); <CR> break; <CR> case2: <CR> i9=newHomework("Homework"); <CR> break; <CR> case3: <CR> i9=newReport("Report"); <CR> break; <CR> } <CR> returni9; <CR> } <CR> publicstaticvoidmain(String[]B6){ <CR> Stringy4,d3; <CR> doubleE8,G7; <CR> System.out.println("請輸入學生學號: "); <CR> y4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> d3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> E8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> G7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentg6=newStudent(y4,d3,E8,G7); <CR> g6.setid(y4); <CR> g6.setname(d3); <CR> g6.setscore(E8); <CR> g6.setsw(G7); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intE8=0; <CR> do <CR> { <CR> E8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(E8>3||E8<1); <CR> returnmapTest(E8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringl4){ <CR> super(l4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringL){ <CR> super(L); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringi5,StringD1,doubleR4,doublek1){ <CR> this.id=i5; <CR> this.name=D1; <CR> this.score=R4; <CR> this.sw=k1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetid(Stringe1){ <CR> id=e1; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublee1){ <CR> score=e1; <CR> } <CR> voidsetname(Stringe1){ <CR> name=e1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetsw(doublee1){ <CR> sw=e1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringN9){ <CR> this.name=N9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 