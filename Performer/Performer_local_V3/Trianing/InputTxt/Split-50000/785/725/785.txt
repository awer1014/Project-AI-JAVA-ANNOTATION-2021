 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringc2){ <CR> super(c2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intB9=0; <CR> do <CR> { <CR> B9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(B9>3||B9<1); <CR> returnmapTest(B9); <CR> } <CR> publicstaticvoidmain(String[]S){ <CR> StringS8,H4; <CR> doubleB9,I2; <CR> System.out.println("請輸入學生學號: "); <CR> S8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> H4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> B9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> I2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp6=newStudent(S8,H4,B9,I2); <CR> p6.setid(S8); <CR> p6.setname(H4); <CR> p6.setscore(B9); <CR> p6.setsw(I2); <CR> } <CR> staticTestmapTest(intB9){ <CR> Testq8=null; <CR> switch(B9){ <CR> case1: <CR> q8=newExam("Exam"); <CR> break; <CR> case2: <CR> q8=newHomework("Homework"); <CR> break; <CR> case3: <CR> q8=newReport("Report"); <CR> break; <CR> } <CR> returnq8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd6){ <CR> super(d6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringS3){ <CR> super(S3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringm3){ <CR> id=m3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringk9,Stringy9,doubleM3,doublew8){ <CR> this.id=k9; <CR> this.name=y9; <CR> this.score=M3; <CR> this.sw=w8; <CR> } <CR> Stringname; <CR> Stringid; <CR> voidsetscore(doublem3){ <CR> score=m3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringm3){ <CR> name=m3; <CR> } <CR> doublesw; <CR> voidsetsw(doublem3){ <CR> sw=m3; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringv9){ <CR> this.name=v9; <CR> } <CR> } <CR>  <EOC> 