 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS6){ <CR> super(S6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intL3){ <CR> TestF0=null; <CR> switch(L3){ <CR> case1: <CR> F0=newExam("Exam"); <CR> break; <CR> case2: <CR> F0=newHomework("Homework"); <CR> break; <CR> case3: <CR> F0=newReport("Report"); <CR> break; <CR> } <CR> returnF0; <CR> } <CR> publicstaticvoidmain(String[]N9){ <CR> Stringo5,V4; <CR> doubleL3,Z6; <CR> System.out.println("請輸入學生學號: "); <CR> o5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> V4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> L3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentB2=newStudent(o5,V4,L3,Z6); <CR> B2.setid(o5); <CR> B2.setname(V4); <CR> B2.setscore(L3); <CR> B2.setsw(Z6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intL3=0; <CR> do <CR> { <CR> L3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(L3>3||L3<1); <CR> returnmapTest(L3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringW2){ <CR> super(W2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringC9){ <CR> super(C9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublem4){ <CR> score=m4; <CR> } <CR> voidsetname(Stringm4){ <CR> name=m4; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doublem4){ <CR> sw=m4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(StringD6,Stringi4,doublee,doubles8){ <CR> this.id=D6; <CR> this.name=i4; <CR> this.score=e; <CR> this.sw=s8; <CR> } <CR> doublescore; <CR> voidsetid(Stringm4){ <CR> id=m4; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringN){ <CR> this.name=N; <CR> } <CR> } <CR>  <EOC> 