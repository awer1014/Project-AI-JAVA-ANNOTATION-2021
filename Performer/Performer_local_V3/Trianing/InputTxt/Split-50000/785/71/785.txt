 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringC7){ <CR> super(C7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]j1){ <CR> StringD9,J7; <CR> doublee4,U3; <CR> System.out.println("請輸入學生學號: "); <CR> D9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> J7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> e4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> U3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentd7=newStudent(D9,J7,e4,U3); <CR> d7.setid(D9); <CR> d7.setname(J7); <CR> d7.setscore(e4); <CR> d7.setsw(U3); <CR> } <CR> staticTestmapTest(inte4){ <CR> TestY6=null; <CR> switch(e4){ <CR> case1: <CR> Y6=newExam("Exam"); <CR> break; <CR> case2: <CR> Y6=newHomework("Homework"); <CR> break; <CR> case3: <CR> Y6=newReport("Report"); <CR> break; <CR> } <CR> returnY6; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inte4=0; <CR> do <CR> { <CR> e4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(e4>3||e4<1); <CR> returnmapTest(e4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringT3){ <CR> super(T3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringT4){ <CR> super(T4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringu7){ <CR> id=u7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleu7){ <CR> sw=u7; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> Stringid; <CR> voidsetscore(doubleu7){ <CR> score=u7; <CR> } <CR> voidsetname(Stringu7){ <CR> name=u7; <CR> } <CR> Stringname; <CR> Student(StringP,StringW7,doubles7,doubleu1){ <CR> this.id=P; <CR> this.name=W7; <CR> this.score=s7; <CR> this.sw=u1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringt0){ <CR> this.name=t0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 