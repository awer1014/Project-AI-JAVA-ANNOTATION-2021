 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringY2){ <CR> super(Y2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf1=0; <CR> do <CR> { <CR> f1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f1>3||f1<1); <CR> returnmapTest(f1); <CR> } <CR> publicstaticvoidmain(String[]n8){ <CR> StringM6,G6; <CR> doublef1,x5; <CR> System.out.println("請輸入學生學號: "); <CR> M6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> G6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> x5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentD8=newStudent(M6,G6,f1,x5); <CR> D8.setid(M6); <CR> D8.setname(G6); <CR> D8.setscore(f1); <CR> D8.setsw(x5); <CR> } <CR> staticTestmapTest(intf1){ <CR> Testy1=null; <CR> switch(f1){ <CR> case1: <CR> y1=newExam("Exam"); <CR> break; <CR> case2: <CR> y1=newHomework("Homework"); <CR> break; <CR> case3: <CR> y1=newReport("Report"); <CR> break; <CR> } <CR> returny1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp0){ <CR> super(p0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR9){ <CR> super(R9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Stringname; <CR> voidsetname(StringQ8){ <CR> name=Q8; <CR> } <CR> voidsetid(StringQ8){ <CR> id=Q8; <CR> } <CR> Student(StringX2,StringN7,doubleT,doubleQ7){ <CR> this.id=X2; <CR> this.name=N7; <CR> this.score=T; <CR> this.sw=Q7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> Stringid; <CR> voidsetscore(doubleQ8){ <CR> score=Q8; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleQ8){ <CR> sw=Q8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringX7){ <CR> this.name=X7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 