 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringE5){ <CR> super(E5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intN0=0; <CR> do <CR> { <CR> N0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(N0>3||N0<1); <CR> returnmapTest(N0); <CR> } <CR> publicstaticvoidmain(String[]V5){ <CR> StringO1,V6; <CR> doubleN0,B7; <CR> System.out.println("請輸入學生學號: "); <CR> O1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> V6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> N0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> B7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentH6=newStudent(O1,V6,N0,B7); <CR> H6.setid(O1); <CR> H6.setname(V6); <CR> H6.setscore(N0); <CR> H6.setsw(B7); <CR> } <CR> staticTestmapTest(intN0){ <CR> TestY1=null; <CR> switch(N0){ <CR> case1: <CR> Y1=newExam("Exam"); <CR> break; <CR> case2: <CR> Y1=newHomework("Homework"); <CR> break; <CR> case3: <CR> Y1=newReport("Report"); <CR> break; <CR> } <CR> returnY1; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringN8){ <CR> super(N8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringa){ <CR> super(a); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringX3){ <CR> id=X3; <CR> } <CR> doublescore; <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubleX3){ <CR> sw=X3; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(Stringh7,StringA4,doubleP4,doublem2){ <CR> this.id=h7; <CR> this.name=A4; <CR> this.score=P4; <CR> this.sw=m2; <CR> } <CR> voidsetname(StringX3){ <CR> name=X3; <CR> } <CR> voidsetscore(doubleX3){ <CR> score=X3; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringS0){ <CR> this.name=S0; <CR> } <CR> } <CR>  <EOC> 