 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringa1){ <CR> super(a1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intb8=0; <CR> do <CR> { <CR> b8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(b8>3||b8<1); <CR> returnmapTest(b8); <CR> } <CR> publicstaticvoidmain(String[]W7){ <CR> Stringv4,e1; <CR> doubleb8,x5; <CR> System.out.println("請輸入學生學號: "); <CR> v4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> b8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> x5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentv2=newStudent(v4,e1,b8,x5); <CR> v2.setid(v4); <CR> v2.setname(e1); <CR> v2.setscore(b8); <CR> v2.setsw(x5); <CR> } <CR> staticTestmapTest(intb8){ <CR> TestO=null; <CR> switch(b8){ <CR> case1: <CR> O=newExam("Exam"); <CR> break; <CR> case2: <CR> O=newHomework("Homework"); <CR> break; <CR> case3: <CR> O=newReport("Report"); <CR> break; <CR> } <CR> returnO; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringl1){ <CR> super(l1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringw2){ <CR> super(w2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleD0){ <CR> sw=D0; <CR> } <CR> doublesw; <CR> voidsetid(StringD0){ <CR> id=D0; <CR> } <CR> voidsetname(StringD0){ <CR> name=D0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringk5,Stringa6,doubleD6,doublec2){ <CR> this.id=k5; <CR> this.name=a6; <CR> this.score=D6; <CR> this.sw=c2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleD0){ <CR> score=D0; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringe){ <CR> this.name=e; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 