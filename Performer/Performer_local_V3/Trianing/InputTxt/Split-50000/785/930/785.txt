 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringe7){ <CR> super(e7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intV9){ <CR> TestY=null; <CR> switch(V9){ <CR> case1: <CR> Y=newExam("Exam"); <CR> break; <CR> case2: <CR> Y=newHomework("Homework"); <CR> break; <CR> case3: <CR> Y=newReport("Report"); <CR> break; <CR> } <CR> returnY; <CR> } <CR> publicstaticvoidmain(String[]k6){ <CR> StringK5,T2; <CR> doubleV9,U0; <CR> System.out.println("請輸入學生學號: "); <CR> K5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> T2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> U0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentK2=newStudent(K5,T2,V9,U0); <CR> K2.setid(K5); <CR> K2.setname(T2); <CR> K2.setscore(V9); <CR> K2.setsw(U0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV9=0; <CR> do <CR> { <CR> V9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V9>3||V9<1); <CR> returnmapTest(V9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF6){ <CR> super(F6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringv1){ <CR> super(v1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleX6){ <CR> sw=X6; <CR> } <CR> voidsetid(StringX6){ <CR> id=X6; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleX6){ <CR> score=X6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> voidsetname(StringX6){ <CR> name=X6; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringR5,Stringv4,doubleo2,doubleI7){ <CR> this.id=R5; <CR> this.name=v4; <CR> this.score=o2; <CR> this.sw=I7; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringn){ <CR> this.name=n; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 