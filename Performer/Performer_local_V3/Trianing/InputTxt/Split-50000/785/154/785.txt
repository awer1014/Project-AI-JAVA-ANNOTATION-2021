 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk9){ <CR> super(k9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA8=0; <CR> do <CR> { <CR> A8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A8>3||A8<1); <CR> returnmapTest(A8); <CR> } <CR> publicstaticvoidmain(String[]y5){ <CR> StringT6,s; <CR> doubleA8,k5; <CR> System.out.println("請輸入學生學號: "); <CR> T6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> s=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> k5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta7=newStudent(T6,s,A8,k5); <CR> a7.setid(T6); <CR> a7.setname(s); <CR> a7.setscore(A8); <CR> a7.setsw(k5); <CR> } <CR> staticTestmapTest(intA8){ <CR> Testu5=null; <CR> switch(A8){ <CR> case1: <CR> u5=newExam("Exam"); <CR> break; <CR> case2: <CR> u5=newHomework("Homework"); <CR> break; <CR> case3: <CR> u5=newReport("Report"); <CR> break; <CR> } <CR> returnu5; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringg1){ <CR> super(g1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringm0){ <CR> super(m0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetscore(doubleR6){ <CR> score=R6; <CR> } <CR> Stringid; <CR> voidsetsw(doubleR6){ <CR> sw=R6; <CR> } <CR> Student(StringX8,Stringo,doubleD0,doublez9){ <CR> this.id=X8; <CR> this.name=o; <CR> this.score=D0; <CR> this.sw=z9; <CR> } <CR> voidsetname(StringR6){ <CR> name=R6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringR6){ <CR> id=R6; <CR> } <CR> Stringname; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringT8){ <CR> this.name=T8; <CR> } <CR> } <CR>  <EOC> 