 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringa6){ <CR> super(a6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]i3){ <CR> Stringg3,M9; <CR> doublez3,E4; <CR> System.out.println("請輸入學生學號: "); <CR> g3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> M9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> z3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> E4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentT2=newStudent(g3,M9,z3,E4); <CR> T2.setid(g3); <CR> T2.setname(M9); <CR> T2.setscore(z3); <CR> T2.setsw(E4); <CR> } <CR> staticTestmapTest(intz3){ <CR> TestN1=null; <CR> switch(z3){ <CR> case1: <CR> N1=newExam("Exam"); <CR> break; <CR> case2: <CR> N1=newHomework("Homework"); <CR> break; <CR> case3: <CR> N1=newReport("Report"); <CR> break; <CR> } <CR> returnN1; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intz3=0; <CR> do <CR> { <CR> z3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(z3>3||z3<1); <CR> returnmapTest(z3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringJ1){ <CR> super(J1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi0){ <CR> super(i0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringg1,Stringc5,doubleP1,doublee){ <CR> this.id=g1; <CR> this.name=c5; <CR> this.score=P1; <CR> this.sw=e; <CR> } <CR> voidsetid(Stringp2){ <CR> id=p2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublep2){ <CR> sw=p2; <CR> } <CR> doublescore; <CR> voidsetscore(doublep2){ <CR> score=p2; <CR> } <CR> Stringid; <CR> voidsetname(Stringp2){ <CR> name=p2; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringj1){ <CR> this.name=j1; <CR> } <CR> } <CR>  <EOC> 