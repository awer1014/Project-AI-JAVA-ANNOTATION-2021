 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringp2){ <CR> super(p2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]K){ <CR> Stringa2,Q5; <CR> doubleY,O1; <CR> System.out.println("請輸入學生學號: "); <CR> a2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Y=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP8=newStudent(a2,Q5,Y,O1); <CR> P8.setid(a2); <CR> P8.setname(Q5); <CR> P8.setscore(Y); <CR> P8.setsw(O1); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intY=0; <CR> do <CR> { <CR> Y=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Y>3||Y<1); <CR> returnmapTest(Y); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intY){ <CR> TestI2=null; <CR> switch(Y){ <CR> case1: <CR> I2=newExam("Exam"); <CR> break; <CR> case2: <CR> I2=newHomework("Homework"); <CR> break; <CR> case3: <CR> I2=newReport("Report"); <CR> break; <CR> } <CR> returnI2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringv4){ <CR> super(v4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN5){ <CR> super(N5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringn7,StringC2,doubleh5,doubleR4){ <CR> this.id=n7; <CR> this.name=C2; <CR> this.score=h5; <CR> this.sw=R4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetname(Stringw9){ <CR> name=w9; <CR> } <CR> voidsetid(Stringw9){ <CR> id=w9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> voidsetsw(doublew9){ <CR> sw=w9; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doublew9){ <CR> score=w9; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringG){ <CR> this.name=G; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 