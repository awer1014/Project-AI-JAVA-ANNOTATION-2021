 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringU4){ <CR> super(U4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intZ1=0; <CR> do <CR> { <CR> Z1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Z1>3||Z1<1); <CR> returnmapTest(Z1); <CR> } <CR> publicstaticvoidmain(String[]A1){ <CR> Stringw,q1; <CR> doubleZ1,A6; <CR> System.out.println("請輸入學生學號: "); <CR> w=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Z1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> A6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentd=newStudent(w,q1,Z1,A6); <CR> d.setid(w); <CR> d.setname(q1); <CR> d.setscore(Z1); <CR> d.setsw(A6); <CR> } <CR> staticTestmapTest(intZ1){ <CR> Testu0=null; <CR> switch(Z1){ <CR> case1: <CR> u0=newExam("Exam"); <CR> break; <CR> case2: <CR> u0=newHomework("Homework"); <CR> break; <CR> case3: <CR> u0=newReport("Report"); <CR> break; <CR> } <CR> returnu0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringu9){ <CR> super(u9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR){ <CR> super(R); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublef0){ <CR> sw=f0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetscore(doublef0){ <CR> score=f0; <CR> } <CR> Student(StringB9,StringG3,doubleK,doubleY9){ <CR> this.id=B9; <CR> this.name=G3; <CR> this.score=K; <CR> this.sw=Y9; <CR> } <CR> Stringname; <CR> voidsetname(Stringf0){ <CR> name=f0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetid(Stringf0){ <CR> id=f0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringa9){ <CR> this.name=a9; <CR> } <CR> } <CR>  <EOC> 