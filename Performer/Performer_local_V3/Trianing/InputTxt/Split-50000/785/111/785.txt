 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringO4){ <CR> super(O4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intE8=0; <CR> do <CR> { <CR> E8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(E8>3||E8<1); <CR> returnmapTest(E8); <CR> } <CR> staticTestmapTest(intE8){ <CR> TestJ8=null; <CR> switch(E8){ <CR> case1: <CR> J8=newExam("Exam"); <CR> break; <CR> case2: <CR> J8=newHomework("Homework"); <CR> break; <CR> case3: <CR> J8=newReport("Report"); <CR> break; <CR> } <CR> returnJ8; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]T8){ <CR> Stringq3,f1; <CR> doubleE8,o9; <CR> System.out.println("請輸入學生學號: "); <CR> q3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> f1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> E8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> o9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr3=newStudent(q3,f1,E8,o9); <CR> r3.setid(q3); <CR> r3.setname(f1); <CR> r3.setscore(E8); <CR> r3.setsw(o9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn9){ <CR> super(n9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR3){ <CR> super(R3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublew5){ <CR> score=w5; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetsw(doublew5){ <CR> sw=w5; <CR> } <CR> voidsetid(Stringw5){ <CR> id=w5; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringw5){ <CR> name=w5; <CR> } <CR> Student(Stringj1,Stringi2,doubleS9,doubleN8){ <CR> this.id=j1; <CR> this.name=i2; <CR> this.score=S9; <CR> this.sw=N8; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringR8){ <CR> this.name=R8; <CR> } <CR> } <CR>  <EOC> 