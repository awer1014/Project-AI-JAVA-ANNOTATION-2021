 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringJ6){ <CR> super(J6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intB4=0; <CR> do <CR> { <CR> B4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(B4>3||B4<1); <CR> returnmapTest(B4); <CR> } <CR> publicstaticvoidmain(String[]D4){ <CR> Stringc,C9; <CR> doubleB4,i2; <CR> System.out.println("請輸入學生學號: "); <CR> c=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> C9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> B4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> i2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentk=newStudent(c,C9,B4,i2); <CR> k.setid(c); <CR> k.setname(C9); <CR> k.setscore(B4); <CR> k.setsw(i2); <CR> } <CR> staticTestmapTest(intB4){ <CR> Testq8=null; <CR> switch(B4){ <CR> case1: <CR> q8=newExam("Exam"); <CR> break; <CR> case2: <CR> q8=newHomework("Homework"); <CR> break; <CR> case3: <CR> q8=newReport("Report"); <CR> break; <CR> } <CR> returnq8; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringL){ <CR> super(L); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE9){ <CR> super(E9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleG0){ <CR> sw=G0; <CR> } <CR> Student(Stringi0,Stringf0,doubleS4,doubleh){ <CR> this.id=i0; <CR> this.name=f0; <CR> this.score=S4; <CR> this.sw=h; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleG0){ <CR> score=G0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetname(StringG0){ <CR> name=G0; <CR> } <CR> voidsetid(StringG0){ <CR> id=G0; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringl){ <CR> this.name=l; <CR> } <CR> } <CR>  <EOC> 