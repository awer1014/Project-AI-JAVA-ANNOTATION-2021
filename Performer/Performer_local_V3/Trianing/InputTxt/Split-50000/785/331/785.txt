 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringO3){ <CR> super(O3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]k7){ <CR> StringF8,q5; <CR> doubleC1,R8; <CR> System.out.println("請輸入學生學號: "); <CR> F8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> C1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentQ1=newStudent(F8,q5,C1,R8); <CR> Q1.setid(F8); <CR> Q1.setname(q5); <CR> Q1.setscore(C1); <CR> Q1.setsw(R8); <CR> } <CR> staticTestmapTest(intC1){ <CR> Testu=null; <CR> switch(C1){ <CR> case1: <CR> u=newExam("Exam"); <CR> break; <CR> case2: <CR> u=newHomework("Homework"); <CR> break; <CR> case3: <CR> u=newReport("Report"); <CR> break; <CR> } <CR> returnu; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intC1=0; <CR> do <CR> { <CR> C1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(C1>3||C1<1); <CR> returnmapTest(C1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE6){ <CR> super(E6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringV0){ <CR> super(V0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(Stringz){ <CR> name=z; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublez){ <CR> sw=z; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Stringid; <CR> Student(StringF1,Stringu6,doublen8,doubleR1){ <CR> this.id=F1; <CR> this.name=u6; <CR> this.score=n8; <CR> this.sw=R1; <CR> } <CR> voidsetscore(doublez){ <CR> score=z; <CR> } <CR> voidsetid(Stringz){ <CR> id=z; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringB8){ <CR> this.name=B8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 