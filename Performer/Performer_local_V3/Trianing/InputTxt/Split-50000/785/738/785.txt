 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx){ <CR> super(x); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]b2){ <CR> Stringz9,L7; <CR> doubleB2,I6; <CR> System.out.println("請輸入學生學號: "); <CR> z9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> L7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> B2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> I6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentu7=newStudent(z9,L7,B2,I6); <CR> u7.setid(z9); <CR> u7.setname(L7); <CR> u7.setscore(B2); <CR> u7.setsw(I6); <CR> } <CR> staticTestmapTest(intB2){ <CR> TestK8=null; <CR> switch(B2){ <CR> case1: <CR> K8=newExam("Exam"); <CR> break; <CR> case2: <CR> K8=newHomework("Homework"); <CR> break; <CR> case3: <CR> K8=newReport("Report"); <CR> break; <CR> } <CR> returnK8; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intB2=0; <CR> do <CR> { <CR> B2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(B2>3||B2<1); <CR> returnmapTest(B2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringm7){ <CR> super(m7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringa8){ <CR> super(a8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleE2){ <CR> sw=E2; <CR> } <CR> Student(StringK2,Stringi6,doubley,doublei){ <CR> this.id=K2; <CR> this.name=i6; <CR> this.score=y; <CR> this.sw=i; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringE2){ <CR> id=E2; <CR> } <CR> doublescore; <CR> voidsetscore(doubleE2){ <CR> score=E2; <CR> } <CR> doublesw; <CR> voidsetname(StringE2){ <CR> name=E2; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringT1){ <CR> this.name=T1; <CR> } <CR> } <CR>  <EOC> 