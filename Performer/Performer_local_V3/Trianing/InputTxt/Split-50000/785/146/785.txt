 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS8){ <CR> super(S8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intQ7){ <CR> Testz8=null; <CR> switch(Q7){ <CR> case1: <CR> z8=newExam("Exam"); <CR> break; <CR> case2: <CR> z8=newHomework("Homework"); <CR> break; <CR> case3: <CR> z8=newReport("Report"); <CR> break; <CR> } <CR> returnz8; <CR> } <CR> publicstaticvoidmain(String[]d2){ <CR> StringS6,C1; <CR> doubleQ7,C4; <CR> System.out.println("請輸入學生學號: "); <CR> S6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> C1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Q7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentL7=newStudent(S6,C1,Q7,C4); <CR> L7.setid(S6); <CR> L7.setname(C1); <CR> L7.setscore(Q7); <CR> L7.setsw(C4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intQ7=0; <CR> do <CR> { <CR> Q7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Q7>3||Q7<1); <CR> returnmapTest(Q7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF){ <CR> super(F); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi1){ <CR> super(i1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(StringV9){ <CR> id=V9; <CR> } <CR> Stringname; <CR> doublescore; <CR> Student(Stringo4,StringW6,doublej7,doubleL2){ <CR> this.id=o4; <CR> this.name=W6; <CR> this.score=j7; <CR> this.sw=L2; <CR> } <CR> doublesw; <CR> voidsetname(StringV9){ <CR> name=V9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleV9){ <CR> score=V9; <CR> } <CR> voidsetsw(doubleV9){ <CR> sw=V9; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringI5){ <CR> this.name=I5; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 