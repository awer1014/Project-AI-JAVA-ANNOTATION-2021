 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringn){ <CR> super(n); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT=0; <CR> do <CR> { <CR> T=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T>3||T<1); <CR> returnmapTest(T); <CR> } <CR> publicstaticvoidmain(String[]S9){ <CR> Stringd3,y3; <CR> doubleT,h1; <CR> System.out.println("請輸入學生學號: "); <CR> d3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> y3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> h1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Students5=newStudent(d3,y3,T,h1); <CR> s5.setid(d3); <CR> s5.setname(y3); <CR> s5.setscore(T); <CR> s5.setsw(h1); <CR> } <CR> staticTestmapTest(intT){ <CR> TestP3=null; <CR> switch(T){ <CR> case1: <CR> P3=newExam("Exam"); <CR> break; <CR> case2: <CR> P3=newHomework("Homework"); <CR> break; <CR> case3: <CR> P3=newReport("Report"); <CR> break; <CR> } <CR> returnP3; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringU2){ <CR> super(U2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringS0){ <CR> super(S0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> voidsetsw(doubleD3){ <CR> sw=D3; <CR> } <CR> Student(StringT7,Stringz6,doublev3,doublej6){ <CR> this.id=T7; <CR> this.name=z6; <CR> this.score=v3; <CR> this.sw=j6; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> voidsetname(StringD3){ <CR> name=D3; <CR> } <CR> voidsetscore(doubleD3){ <CR> score=D3; <CR> } <CR> voidsetid(StringD3){ <CR> id=D3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringd3){ <CR> this.name=d3; <CR> } <CR> } <CR>  <EOC> 