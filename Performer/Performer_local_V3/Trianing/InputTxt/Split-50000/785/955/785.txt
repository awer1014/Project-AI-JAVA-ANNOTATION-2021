 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg0){ <CR> super(g0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intX5=0; <CR> do <CR> { <CR> X5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(X5>3||X5<1); <CR> returnmapTest(X5); <CR> } <CR> publicstaticvoidmain(String[]y7){ <CR> StringG7,c8; <CR> doubleX5,A2; <CR> System.out.println("請輸入學生學號: "); <CR> G7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> c8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> X5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> A2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentY5=newStudent(G7,c8,X5,A2); <CR> Y5.setid(G7); <CR> Y5.setname(c8); <CR> Y5.setscore(X5); <CR> Y5.setsw(A2); <CR> } <CR> staticTestmapTest(intX5){ <CR> TestE7=null; <CR> switch(X5){ <CR> case1: <CR> E7=newExam("Exam"); <CR> break; <CR> case2: <CR> E7=newHomework("Homework"); <CR> break; <CR> case3: <CR> E7=newReport("Report"); <CR> break; <CR> } <CR> returnE7; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings3){ <CR> super(s3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN3){ <CR> super(N3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringh,Stringm3,doubleN9,doubleP3){ <CR> this.id=h; <CR> this.name=m3; <CR> this.score=N9; <CR> this.sw=P3; <CR> } <CR> voidsetscore(doublea2){ <CR> score=a2; <CR> } <CR> voidsetname(Stringa2){ <CR> name=a2; <CR> } <CR> doublesw; <CR> Stringid; <CR> voidsetid(Stringa2){ <CR> id=a2; <CR> } <CR> voidsetsw(doublea2){ <CR> sw=a2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringn7){ <CR> this.name=n7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 