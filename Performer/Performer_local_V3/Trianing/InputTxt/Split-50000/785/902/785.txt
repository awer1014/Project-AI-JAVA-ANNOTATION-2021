 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringe0){ <CR> super(e0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intJ2){ <CR> TestE2=null; <CR> switch(J2){ <CR> case1: <CR> E2=newExam("Exam"); <CR> break; <CR> case2: <CR> E2=newHomework("Homework"); <CR> break; <CR> case3: <CR> E2=newReport("Report"); <CR> break; <CR> } <CR> returnE2; <CR> } <CR> publicstaticvoidmain(String[]y6){ <CR> StringP4,z; <CR> doubleJ2,N9; <CR> System.out.println("請輸入學生學號: "); <CR> P4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> z=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> J2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentq9=newStudent(P4,z,J2,N9); <CR> q9.setid(P4); <CR> q9.setname(z); <CR> q9.setscore(J2); <CR> q9.setsw(N9); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intJ2=0; <CR> do <CR> { <CR> J2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(J2>3||J2<1); <CR> returnmapTest(J2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn5){ <CR> super(n5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringD1){ <CR> super(D1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringb,Stringn5,doublez0,doubleU6){ <CR> this.id=b; <CR> this.name=n5; <CR> this.score=z0; <CR> this.sw=U6; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringm1){ <CR> name=m1; <CR> } <CR> Stringid; <CR> voidsetid(Stringm1){ <CR> id=m1; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublem1){ <CR> sw=m1; <CR> } <CR> voidsetscore(doublem1){ <CR> score=m1; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringg8){ <CR> this.name=g8; <CR> } <CR> } <CR>  <EOC> 