 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh5){ <CR> super(h5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intc0){ <CR> TestL1=null; <CR> switch(c0){ <CR> case1: <CR> L1=newExam("Exam"); <CR> break; <CR> case2: <CR> L1=newHomework("Homework"); <CR> break; <CR> case3: <CR> L1=newReport("Report"); <CR> break; <CR> } <CR> returnL1; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]G7){ <CR> Stringn,X2; <CR> doublec0,N4; <CR> System.out.println("請輸入學生學號: "); <CR> n=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> X2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> c0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP2=newStudent(n,X2,c0,N4); <CR> P2.setid(n); <CR> P2.setname(X2); <CR> P2.setscore(c0); <CR> P2.setsw(N4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intc0=0; <CR> do <CR> { <CR> c0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(c0>3||c0<1); <CR> returnmapTest(c0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd6){ <CR> super(d6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringg7){ <CR> super(g7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringG4,Stringe5,doubleM9,doubleT9){ <CR> this.id=G4; <CR> this.name=e5; <CR> this.score=M9; <CR> this.sw=T9; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringf9){ <CR> name=f9; <CR> } <CR> Stringid; <CR> voidsetscore(doublef9){ <CR> score=f9; <CR> } <CR> doublesw; <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringf9){ <CR> id=f9; <CR> } <CR> voidsetsw(doublef9){ <CR> sw=f9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringn){ <CR> this.name=n; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 