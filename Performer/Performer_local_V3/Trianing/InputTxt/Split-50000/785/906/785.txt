 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringm9){ <CR> super(m9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intu=0; <CR> do <CR> { <CR> u=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(u>3||u<1); <CR> returnmapTest(u); <CR> } <CR> publicstaticvoidmain(String[]Q1){ <CR> Stringm7,z6; <CR> doubleu,U; <CR> System.out.println("請輸入學生學號: "); <CR> m7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> z6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> u=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> U=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx2=newStudent(m7,z6,u,U); <CR> x2.setid(m7); <CR> x2.setname(z6); <CR> x2.setscore(u); <CR> x2.setsw(U); <CR> } <CR> staticTestmapTest(intu){ <CR> Testq1=null; <CR> switch(u){ <CR> case1: <CR> q1=newExam("Exam"); <CR> break; <CR> case2: <CR> q1=newHomework("Homework"); <CR> break; <CR> case3: <CR> q1=newReport("Report"); <CR> break; <CR> } <CR> returnq1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringk6){ <CR> super(k6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringB5){ <CR> super(B5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Student(StringU5,Stringf0,doublel1,doubleD1){ <CR> this.id=U5; <CR> this.name=f0; <CR> this.score=l1; <CR> this.sw=D1; <CR> } <CR> voidsetid(Strings7){ <CR> id=s7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(Strings7){ <CR> name=s7; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubles7){ <CR> score=s7; <CR> } <CR> doublescore; <CR> voidsetsw(doubles7){ <CR> sw=s7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringc1){ <CR> this.name=c1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 