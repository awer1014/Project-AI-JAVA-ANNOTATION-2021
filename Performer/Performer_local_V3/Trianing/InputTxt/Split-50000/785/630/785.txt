 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringM3){ <CR> super(M3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intA7){ <CR> TestA4=null; <CR> switch(A7){ <CR> case1: <CR> A4=newExam("Exam"); <CR> break; <CR> case2: <CR> A4=newHomework("Homework"); <CR> break; <CR> case3: <CR> A4=newReport("Report"); <CR> break; <CR> } <CR> returnA4; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]j){ <CR> StringU2,r8; <CR> doubleA7,e0; <CR> System.out.println("請輸入學生學號: "); <CR> U2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> e0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx5=newStudent(U2,r8,A7,e0); <CR> x5.setid(U2); <CR> x5.setname(r8); <CR> x5.setscore(A7); <CR> x5.setsw(e0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA7=0; <CR> do <CR> { <CR> A7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A7>3||A7<1); <CR> returnmapTest(A7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringW9){ <CR> super(W9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringM6){ <CR> super(M6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> voidsetname(StringE){ <CR> name=E; <CR> } <CR> voidsetsw(doubleE){ <CR> sw=E; <CR> } <CR> voidsetid(StringE){ <CR> id=E; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringt3,StringC9,doubleg5,doublez3){ <CR> this.id=t3; <CR> this.name=C9; <CR> this.score=g5; <CR> this.sw=z3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleE){ <CR> score=E; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringn9){ <CR> this.name=n9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 