 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr5){ <CR> super(r5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intp8=0; <CR> do <CR> { <CR> p8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(p8>3||p8<1); <CR> returnmapTest(p8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intp8){ <CR> Testc9=null; <CR> switch(p8){ <CR> case1: <CR> c9=newExam("Exam"); <CR> break; <CR> case2: <CR> c9=newHomework("Homework"); <CR> break; <CR> case3: <CR> c9=newReport("Report"); <CR> break; <CR> } <CR> returnc9; <CR> } <CR> publicstaticvoidmain(String[]t5){ <CR> StringS2,u9; <CR> doublep8,L6; <CR> System.out.println("請輸入學生學號: "); <CR> S2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> u9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> p8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> L6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studente5=newStudent(S2,u9,p8,L6); <CR> e5.setid(S2); <CR> e5.setname(u9); <CR> e5.setscore(p8); <CR> e5.setsw(L6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringh8){ <CR> super(h8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringG){ <CR> super(G); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringq1,StringX6,doubleq4,doublej2){ <CR> this.id=q1; <CR> this.name=X6; <CR> this.score=q4; <CR> this.sw=j2; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublez8){ <CR> sw=z8; <CR> } <CR> voidsetid(Stringz8){ <CR> id=z8; <CR> } <CR> voidsetname(Stringz8){ <CR> name=z8; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetscore(doublez8){ <CR> score=z8; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringE4){ <CR> this.name=E4; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 