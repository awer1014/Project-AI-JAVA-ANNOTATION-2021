 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg8){ <CR> super(g8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intt8){ <CR> Testi6=null; <CR> switch(t8){ <CR> case1: <CR> i6=newExam("Exam"); <CR> break; <CR> case2: <CR> i6=newHomework("Homework"); <CR> break; <CR> case3: <CR> i6=newReport("Report"); <CR> break; <CR> } <CR> returni6; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]E6){ <CR> StringV8,M8; <CR> doublet8,F6; <CR> System.out.println("請輸入學生學號: "); <CR> V8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> M8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> t8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentm3=newStudent(V8,M8,t8,F6); <CR> m3.setid(V8); <CR> m3.setname(M8); <CR> m3.setscore(t8); <CR> m3.setsw(F6); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intt8=0; <CR> do <CR> { <CR> t8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(t8>3||t8<1); <CR> returnmapTest(t8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa0){ <CR> super(a0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringw9){ <CR> super(w9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringC8){ <CR> id=C8; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetscore(doubleC8){ <CR> score=C8; <CR> } <CR> Student(Stringj9,Stringu5,doublen5,doubley){ <CR> this.id=j9; <CR> this.name=u5; <CR> this.score=n5; <CR> this.sw=y; <CR> } <CR> voidsetname(StringC8){ <CR> name=C8; <CR> } <CR> Stringid; <CR> voidsetsw(doubleC8){ <CR> sw=C8; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringZ9){ <CR> this.name=Z9; <CR> } <CR> } <CR>  <EOC> 