 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringY7){ <CR> super(Y7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intV){ <CR> Tests7=null; <CR> switch(V){ <CR> case1: <CR> s7=newExam("Exam"); <CR> break; <CR> case2: <CR> s7=newHomework("Homework"); <CR> break; <CR> case3: <CR> s7=newReport("Report"); <CR> break; <CR> } <CR> returns7; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV=0; <CR> do <CR> { <CR> V=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V>3||V<1); <CR> returnmapTest(V); <CR> } <CR> publicstaticvoidmain(String[]R3){ <CR> Stringa9,D6; <CR> doubleV,z0; <CR> System.out.println("請輸入學生學號: "); <CR> a9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> D6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> z0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentH5=newStudent(a9,D6,V,z0); <CR> H5.setid(a9); <CR> H5.setname(D6); <CR> H5.setscore(V); <CR> H5.setsw(z0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringB4){ <CR> super(B4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringd9){ <CR> super(d9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringQ2){ <CR> name=Q2; <CR> } <CR> voidsetsw(doubleQ2){ <CR> sw=Q2; <CR> } <CR> voidsetid(StringQ2){ <CR> id=Q2; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublesw; <CR> voidsetscore(doubleQ2){ <CR> score=Q2; <CR> } <CR> Student(Stringx0,Stringc6,doubleJ6,doublef){ <CR> this.id=x0; <CR> this.name=c6; <CR> this.score=J6; <CR> this.sw=f; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringK9){ <CR> this.name=K9; <CR> } <CR> } <CR>  <EOC> 