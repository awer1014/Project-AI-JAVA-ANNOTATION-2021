 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx1){ <CR> super(x1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]K){ <CR> Stringn5,p2; <CR> doubleN1,s5; <CR> System.out.println("請輸入學生學號: "); <CR> n5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> p2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> N1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> s5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenti5=newStudent(n5,p2,N1,s5); <CR> i5.setid(n5); <CR> i5.setname(p2); <CR> i5.setscore(N1); <CR> i5.setsw(s5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intN1){ <CR> TestK4=null; <CR> switch(N1){ <CR> case1: <CR> K4=newExam("Exam"); <CR> break; <CR> case2: <CR> K4=newHomework("Homework"); <CR> break; <CR> case3: <CR> K4=newReport("Report"); <CR> break; <CR> } <CR> returnK4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intN1=0; <CR> do <CR> { <CR> N1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(N1>3||N1<1); <CR> returnmapTest(N1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringI7){ <CR> super(I7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Strings1){ <CR> super(s1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringw4){ <CR> id=w4; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringw4){ <CR> name=w4; <CR> } <CR> voidsetsw(doublew4){ <CR> sw=w4; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringd6,StringJ1,doubleq7,doublet3){ <CR> this.id=d6; <CR> this.name=J1; <CR> this.score=q7; <CR> this.sw=t3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> voidsetscore(doublew4){ <CR> score=w4; <CR> } <CR> Stringid; <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringt0){ <CR> this.name=t0; <CR> } <CR> } <CR>  <EOC> 