 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringc7){ <CR> super(c7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intk0){ <CR> Testf3=null; <CR> switch(k0){ <CR> case1: <CR> f3=newExam("Exam"); <CR> break; <CR> case2: <CR> f3=newHomework("Homework"); <CR> break; <CR> case3: <CR> f3=newReport("Report"); <CR> break; <CR> } <CR> returnf3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intk0=0; <CR> do <CR> { <CR> k0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(k0>3||k0<1); <CR> returnmapTest(k0); <CR> } <CR> publicstaticvoidmain(String[]x9){ <CR> StringV3,v9; <CR> doublek0,n3; <CR> System.out.println("請輸入學生學號: "); <CR> V3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> v9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> k0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentl9=newStudent(V3,v9,k0,n3); <CR> l9.setid(V3); <CR> l9.setname(v9); <CR> l9.setscore(k0); <CR> l9.setsw(n3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringB9){ <CR> super(B9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringY){ <CR> super(Y); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringg7){ <CR> name=g7; <CR> } <CR> voidsetid(Stringg7){ <CR> id=g7; <CR> } <CR> doublesw; <CR> doublescore; <CR> Student(Stringz4,Stringx7,doubleY,doubleq0){ <CR> this.id=z4; <CR> this.name=x7; <CR> this.score=Y; <CR> this.sw=q0; <CR> } <CR> voidsetscore(doubleg7){ <CR> score=g7; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleg7){ <CR> sw=g7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringM0){ <CR> this.name=M0; <CR> } <CR> } <CR>  <EOC> 