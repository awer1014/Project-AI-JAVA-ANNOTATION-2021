 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr8){ <CR> super(r8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(inth7){ <CR> TestF1=null; <CR> switch(h7){ <CR> case1: <CR> F1=newExam("Exam"); <CR> break; <CR> case2: <CR> F1=newHomework("Homework"); <CR> break; <CR> case3: <CR> F1=newReport("Report"); <CR> break; <CR> } <CR> returnF1; <CR> } <CR> publicstaticvoidmain(String[]Y4){ <CR> StringD5,u7; <CR> doubleh7,c3; <CR> System.out.println("請輸入學生學號: "); <CR> D5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> u7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> h7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> c3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentb9=newStudent(D5,u7,h7,c3); <CR> b9.setid(D5); <CR> b9.setname(u7); <CR> b9.setscore(h7); <CR> b9.setsw(c3); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inth7=0; <CR> do <CR> { <CR> h7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(h7>3||h7<1); <CR> returnmapTest(h7); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringB6){ <CR> super(B6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringe8){ <CR> super(e8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> voidsetsw(doublep5){ <CR> sw=p5; <CR> } <CR> voidsetid(Stringp5){ <CR> id=p5; <CR> } <CR> doublesw; <CR> Stringname; <CR> voidsetname(Stringp5){ <CR> name=p5; <CR> } <CR> Stringid; <CR> voidsetscore(doublep5){ <CR> score=p5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(StringZ4,StringY7,doubleZ7,doublem4){ <CR> this.id=Z4; <CR> this.name=Y7; <CR> this.score=Z7; <CR> this.sw=m4; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringp3){ <CR> this.name=p3; <CR> } <CR> } <CR>  <EOC> 