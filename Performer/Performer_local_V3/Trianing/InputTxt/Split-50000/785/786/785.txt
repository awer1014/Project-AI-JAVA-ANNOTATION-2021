 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg2){ <CR> super(g2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]r0){ <CR> StringW9,j7; <CR> doubleu3,Q8; <CR> System.out.println("請輸入學生學號: "); <CR> W9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> j7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> u3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Q8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentc5=newStudent(W9,j7,u3,Q8); <CR> c5.setid(W9); <CR> c5.setname(j7); <CR> c5.setscore(u3); <CR> c5.setsw(Q8); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intu3=0; <CR> do <CR> { <CR> u3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(u3>3||u3<1); <CR> returnmapTest(u3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intu3){ <CR> TestC9=null; <CR> switch(u3){ <CR> case1: <CR> C9=newExam("Exam"); <CR> break; <CR> case2: <CR> C9=newHomework("Homework"); <CR> break; <CR> case3: <CR> C9=newReport("Report"); <CR> break; <CR> } <CR> returnC9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF1){ <CR> super(F1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringc8){ <CR> super(c8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringl6,StringG3,doubleC9,doubley){ <CR> this.id=l6; <CR> this.name=G3; <CR> this.score=C9; <CR> this.sw=y; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringD9){ <CR> name=D9; <CR> } <CR> voidsetsw(doubleD9){ <CR> sw=D9; <CR> } <CR> voidsetid(StringD9){ <CR> id=D9; <CR> } <CR> voidsetscore(doubleD9){ <CR> score=D9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringz9){ <CR> this.name=z9; <CR> } <CR> } <CR>  <EOC> 