 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringW9){ <CR> super(W9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intI3){ <CR> Tests2=null; <CR> switch(I3){ <CR> case1: <CR> s2=newExam("Exam"); <CR> break; <CR> case2: <CR> s2=newHomework("Homework"); <CR> break; <CR> case3: <CR> s2=newReport("Report"); <CR> break; <CR> } <CR> returns2; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]L2){ <CR> StringB2,J5; <CR> doubleI3,e2; <CR> System.out.println("請輸入學生學號: "); <CR> B2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> J5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> I3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> e2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentj0=newStudent(B2,J5,I3,e2); <CR> j0.setid(B2); <CR> j0.setname(J5); <CR> j0.setscore(I3); <CR> j0.setsw(e2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intI3=0; <CR> do <CR> { <CR> I3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(I3>3||I3<1); <CR> returnmapTest(I3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringr4){ <CR> super(r4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringA3){ <CR> super(A3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleG){ <CR> score=G; <CR> } <CR> doublesw; <CR> Stringid; <CR> Student(Stringz,Stringb2,doublej3,doubled8){ <CR> this.id=z; <CR> this.name=b2; <CR> this.score=j3; <CR> this.sw=d8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleG){ <CR> sw=G; <CR> } <CR> doublescore; <CR> voidsetid(StringG){ <CR> id=G; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringG){ <CR> name=G; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringO1){ <CR> this.name=O1; <CR> } <CR> } <CR>  <EOC> 