 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringA4){ <CR> super(A4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intt=0; <CR> do <CR> { <CR> t=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(t>3||t<1); <CR> returnmapTest(t); <CR> } <CR> staticTestmapTest(intt){ <CR> TestM9=null; <CR> switch(t){ <CR> case1: <CR> M9=newExam("Exam"); <CR> break; <CR> case2: <CR> M9=newHomework("Homework"); <CR> break; <CR> case3: <CR> M9=newReport("Report"); <CR> break; <CR> } <CR> returnM9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]k0){ <CR> Stringw,b6; <CR> doublet,M2; <CR> System.out.println("請輸入學生學號: "); <CR> w=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> b6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> t=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentD3=newStudent(w,b6,t,M2); <CR> D3.setid(w); <CR> D3.setname(b6); <CR> D3.setscore(t); <CR> D3.setsw(M2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringX0){ <CR> super(X0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringA0){ <CR> super(A0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> voidsetscore(doubleF2){ <CR> score=F2; <CR> } <CR> voidsetsw(doubleF2){ <CR> sw=F2; <CR> } <CR> Stringid; <CR> Student(StringF9,StringI6,doubleU7,doubled8){ <CR> this.id=F9; <CR> this.name=I6; <CR> this.score=U7; <CR> this.sw=d8; <CR> } <CR> voidsetname(StringF2){ <CR> name=F2; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(StringF2){ <CR> id=F2; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringQ1){ <CR> this.name=Q1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 