 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringz){ <CR> super(z); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]b6){ <CR> StringC2,i6; <CR> doubleG0,u4; <CR> System.out.println("請輸入學生學號: "); <CR> C2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> i6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> u4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentc3=newStudent(C2,i6,G0,u4); <CR> c3.setid(C2); <CR> c3.setname(i6); <CR> c3.setscore(G0); <CR> c3.setsw(u4); <CR> } <CR> staticTestmapTest(intG0){ <CR> TestM6=null; <CR> switch(G0){ <CR> case1: <CR> M6=newExam("Exam"); <CR> break; <CR> case2: <CR> M6=newHomework("Homework"); <CR> break; <CR> case3: <CR> M6=newReport("Report"); <CR> break; <CR> } <CR> returnM6; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG0=0; <CR> do <CR> { <CR> G0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G0>3||G0<1); <CR> returnmapTest(G0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt7){ <CR> super(t7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringm){ <CR> super(m); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleV7){ <CR> sw=V7; <CR> } <CR> doublescore; <CR> voidsetscore(doubleV7){ <CR> score=V7; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringV7){ <CR> name=V7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> voidsetid(StringV7){ <CR> id=V7; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Student(StringV4,Stringz2,doubles3,doubleo8){ <CR> this.id=V4; <CR> this.name=z2; <CR> this.score=s3; <CR> this.sw=o8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringi8){ <CR> this.name=i8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 