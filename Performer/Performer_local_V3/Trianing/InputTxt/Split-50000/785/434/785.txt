 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg0){ <CR> super(g0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]K0){ <CR> StringK9,q3; <CR> doubleG0,n0; <CR> System.out.println("請輸入學生學號: "); <CR> K9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentj6=newStudent(K9,q3,G0,n0); <CR> j6.setid(K9); <CR> j6.setname(q3); <CR> j6.setscore(G0); <CR> j6.setsw(n0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG0=0; <CR> do <CR> { <CR> G0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G0>3||G0<1); <CR> returnmapTest(G0); <CR> } <CR> staticTestmapTest(intG0){ <CR> TestU0=null; <CR> switch(G0){ <CR> case1: <CR> U0=newExam("Exam"); <CR> break; <CR> case2: <CR> U0=newHomework("Homework"); <CR> break; <CR> case3: <CR> U0=newReport("Report"); <CR> break; <CR> } <CR> returnU0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringl4){ <CR> super(l4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringg2){ <CR> super(g2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> voidsetscore(doubleG7){ <CR> score=G7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringG7){ <CR> id=G7; <CR> } <CR> Stringid; <CR> Student(Stringt6,StringH6,doubleE8,doubles4){ <CR> this.id=t6; <CR> this.name=H6; <CR> this.score=E8; <CR> this.sw=s4; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> voidsetsw(doubleG7){ <CR> sw=G7; <CR> } <CR> doublescore; <CR> voidsetname(StringG7){ <CR> name=G7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringz){ <CR> this.name=z; <CR> } <CR> } <CR>  <EOC> 