 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringI){ <CR> super(I); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]Y0){ <CR> StringG5,Z0; <CR> doubleJ0,C1; <CR> System.out.println("請輸入學生學號: "); <CR> G5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Z0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> J0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentN7=newStudent(G5,Z0,J0,C1); <CR> N7.setid(G5); <CR> N7.setname(Z0); <CR> N7.setscore(J0); <CR> N7.setsw(C1); <CR> } <CR> staticTestmapTest(intJ0){ <CR> Testj7=null; <CR> switch(J0){ <CR> case1: <CR> j7=newExam("Exam"); <CR> break; <CR> case2: <CR> j7=newHomework("Homework"); <CR> break; <CR> case3: <CR> j7=newReport("Report"); <CR> break; <CR> } <CR> returnj7; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intJ0=0; <CR> do <CR> { <CR> J0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(J0>3||J0<1); <CR> returnmapTest(J0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringW1){ <CR> super(W1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE0){ <CR> super(E0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringg5){ <CR> name=g5; <CR> } <CR> doublescore; <CR> voidsetid(Stringg5){ <CR> id=g5; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleg5){ <CR> sw=g5; <CR> } <CR> voidsetscore(doubleg5){ <CR> score=g5; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> Student(Stringz,StringL5,doubleK2,doublee4){ <CR> this.id=z; <CR> this.name=L5; <CR> this.score=K2; <CR> this.sw=e4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringL8){ <CR> this.name=L8; <CR> } <CR> } <CR>  <EOC> 