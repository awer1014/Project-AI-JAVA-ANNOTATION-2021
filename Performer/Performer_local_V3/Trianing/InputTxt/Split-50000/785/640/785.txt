 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringA5){ <CR> super(A5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intj1){ <CR> TestM4=null; <CR> switch(j1){ <CR> case1: <CR> M4=newExam("Exam"); <CR> break; <CR> case2: <CR> M4=newHomework("Homework"); <CR> break; <CR> case3: <CR> M4=newReport("Report"); <CR> break; <CR> } <CR> returnM4; <CR> } <CR> publicstaticvoidmain(String[]l9){ <CR> StringG7,P5; <CR> doublej1,J0; <CR> System.out.println("請輸入學生學號: "); <CR> G7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> P5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> j1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> J0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf7=newStudent(G7,P5,j1,J0); <CR> f7.setid(G7); <CR> f7.setname(P5); <CR> f7.setscore(j1); <CR> f7.setsw(J0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intj1=0; <CR> do <CR> { <CR> j1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(j1>3||j1<1); <CR> returnmapTest(j1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringh7){ <CR> super(h7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi8){ <CR> super(i8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> voidsetname(Stringc9){ <CR> name=c9; <CR> } <CR> Stringname; <CR> voidsetsw(doublec9){ <CR> sw=c9; <CR> } <CR> doublesw; <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(StringG7,Stringe4,doubleU2,doubleh0){ <CR> this.id=G7; <CR> this.name=e4; <CR> this.score=U2; <CR> this.sw=h0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublec9){ <CR> score=c9; <CR> } <CR> voidsetid(Stringc9){ <CR> id=c9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX4){ <CR> this.name=X4; <CR> } <CR> } <CR>  <EOC> 