 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringi4){ <CR> super(i4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA8=0; <CR> do <CR> { <CR> A8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A8>3||A8<1); <CR> returnmapTest(A8); <CR> } <CR> publicstaticvoidmain(String[]k3){ <CR> StringD2,Q8; <CR> doubleA8,p9; <CR> System.out.println("請輸入學生學號: "); <CR> D2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> p9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP4=newStudent(D2,Q8,A8,p9); <CR> P4.setid(D2); <CR> P4.setname(Q8); <CR> P4.setscore(A8); <CR> P4.setsw(p9); <CR> } <CR> staticTestmapTest(intA8){ <CR> Testf1=null; <CR> switch(A8){ <CR> case1: <CR> f1=newExam("Exam"); <CR> break; <CR> case2: <CR> f1=newHomework("Homework"); <CR> break; <CR> case3: <CR> f1=newReport("Report"); <CR> break; <CR> } <CR> returnf1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringi9){ <CR> super(i9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringe4){ <CR> super(e4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> voidsetscore(doubleo8){ <CR> score=o8; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringo8){ <CR> name=o8; <CR> } <CR> Student(Stringi6,Stringr5,doubleU4,doubleD){ <CR> this.id=i6; <CR> this.name=r5; <CR> this.score=U4; <CR> this.sw=D; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> doublesw; <CR> voidsetid(Stringo8){ <CR> id=o8; <CR> } <CR> voidsetsw(doubleo8){ <CR> sw=o8; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringt8){ <CR> this.name=t8; <CR> } <CR> } <CR>  <EOC> 