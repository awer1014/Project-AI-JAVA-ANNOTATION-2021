 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringU9){ <CR> super(U9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]o4){ <CR> Stringy6,y9; <CR> doublef,V5; <CR> System.out.println("請輸入學生學號: "); <CR> y6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> y9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> V5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentU4=newStudent(y6,y9,f,V5); <CR> U4.setid(y6); <CR> U4.setname(y9); <CR> U4.setscore(f); <CR> U4.setsw(V5); <CR> } <CR> staticTestmapTest(intf){ <CR> TestF1=null; <CR> switch(f){ <CR> case1: <CR> F1=newExam("Exam"); <CR> break; <CR> case2: <CR> F1=newHomework("Homework"); <CR> break; <CR> case3: <CR> F1=newReport("Report"); <CR> break; <CR> } <CR> returnF1; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf=0; <CR> do <CR> { <CR> f=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f>3||f<1); <CR> returnmapTest(f); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd3){ <CR> super(d3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringY1){ <CR> super(Y1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleQ5){ <CR> sw=Q5; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublesw; <CR> voidsetscore(doubleQ5){ <CR> score=Q5; <CR> } <CR> doublescore; <CR> voidsetname(StringQ5){ <CR> name=Q5; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringQ5){ <CR> id=Q5; <CR> } <CR> Student(StringG3,StringJ3,doubleQ7,doubleg1){ <CR> this.id=G3; <CR> this.name=J3; <CR> this.score=Q7; <CR> this.sw=g1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringQ0){ <CR> this.name=Q0; <CR> } <CR> } <CR>  <EOC> 