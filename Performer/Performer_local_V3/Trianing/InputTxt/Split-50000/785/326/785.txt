 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringl7){ <CR> super(l7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intp8){ <CR> Tests0=null; <CR> switch(p8){ <CR> case1: <CR> s0=newExam("Exam"); <CR> break; <CR> case2: <CR> s0=newHomework("Homework"); <CR> break; <CR> case3: <CR> s0=newReport("Report"); <CR> break; <CR> } <CR> returns0; <CR> } <CR> publicstaticvoidmain(String[]X9){ <CR> Stringc2,K6; <CR> doublep8,P6; <CR> System.out.println("請輸入學生學號: "); <CR> c2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> K6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> p8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> P6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX5=newStudent(c2,K6,p8,P6); <CR> X5.setid(c2); <CR> X5.setname(K6); <CR> X5.setscore(p8); <CR> X5.setsw(P6); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intp8=0; <CR> do <CR> { <CR> p8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(p8>3||p8<1); <CR> returnmapTest(p8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringX8){ <CR> super(X8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringV8){ <CR> super(V8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> voidsetid(Stringq){ <CR> id=q; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringF7,StringZ1,doublez3,doublec0){ <CR> this.id=F7; <CR> this.name=Z1; <CR> this.score=z3; <CR> this.sw=c0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> voidsetsw(doubleq){ <CR> sw=q; <CR> } <CR> doublesw; <CR> voidsetname(Stringq){ <CR> name=q; <CR> } <CR> Stringname; <CR> voidsetscore(doubleq){ <CR> score=q; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringE2){ <CR> this.name=E2; <CR> } <CR> } <CR>  <EOC> 