 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringi4){ <CR> super(i4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]H2){ <CR> Stringd4,A4; <CR> doubleY7,m0; <CR> System.out.println("請輸入學生學號: "); <CR> d4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> A4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Y7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> m0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP6=newStudent(d4,A4,Y7,m0); <CR> P6.setid(d4); <CR> P6.setname(A4); <CR> P6.setscore(Y7); <CR> P6.setsw(m0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intY7=0; <CR> do <CR> { <CR> Y7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Y7>3||Y7<1); <CR> returnmapTest(Y7); <CR> } <CR> staticTestmapTest(intY7){ <CR> TestX4=null; <CR> switch(Y7){ <CR> case1: <CR> X4=newExam("Exam"); <CR> break; <CR> case2: <CR> X4=newHomework("Homework"); <CR> break; <CR> case3: <CR> X4=newReport("Report"); <CR> break; <CR> } <CR> returnX4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringu9){ <CR> super(u9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringH){ <CR> super(H); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleB6){ <CR> score=B6; <CR> } <CR> doublescore; <CR> Student(StringL5,StringN5,doubleT3,doubleh9){ <CR> this.id=L5; <CR> this.name=N5; <CR> this.score=T3; <CR> this.sw=h9; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleB6){ <CR> sw=B6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringB6){ <CR> name=B6; <CR> } <CR> voidsetid(StringB6){ <CR> id=B6; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringY4){ <CR> this.name=Y4; <CR> } <CR> } <CR>  <EOC> 