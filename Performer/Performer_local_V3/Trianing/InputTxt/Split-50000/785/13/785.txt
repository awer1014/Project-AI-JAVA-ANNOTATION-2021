 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringW8){ <CR> super(W8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intG){ <CR> TestA6=null; <CR> switch(G){ <CR> case1: <CR> A6=newExam("Exam"); <CR> break; <CR> case2: <CR> A6=newHomework("Homework"); <CR> break; <CR> case3: <CR> A6=newReport("Report"); <CR> break; <CR> } <CR> returnA6; <CR> } <CR> publicstaticvoidmain(String[]e6){ <CR> StringF,N0; <CR> doubleG,c3; <CR> System.out.println("請輸入學生學號: "); <CR> F=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> c3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentV=newStudent(F,N0,G,c3); <CR> V.setid(F); <CR> V.setname(N0); <CR> V.setscore(G); <CR> V.setsw(c3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG=0; <CR> do <CR> { <CR> G=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G>3||G<1); <CR> returnmapTest(G); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringM){ <CR> super(M); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringU0){ <CR> super(U0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringP2){ <CR> id=P2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> voidsetsw(doubleP2){ <CR> sw=P2; <CR> } <CR> voidsetscore(doubleP2){ <CR> score=P2; <CR> } <CR> Student(Stringx7,Stringw0,doubled8,doubleG8){ <CR> this.id=x7; <CR> this.name=w0; <CR> this.score=d8; <CR> this.sw=G8; <CR> } <CR> voidsetname(StringP2){ <CR> name=P2; <CR> } <CR> doublesw; <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringZ3){ <CR> this.name=Z3; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 