 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringd1){ <CR> super(d1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]u5){ <CR> Stringj0,E; <CR> doubleG6,F3; <CR> System.out.println("請輸入學生學號: "); <CR> j0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX2=newStudent(j0,E,G6,F3); <CR> X2.setid(j0); <CR> X2.setname(E); <CR> X2.setscore(G6); <CR> X2.setsw(F3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG6=0; <CR> do <CR> { <CR> G6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G6>3||G6<1); <CR> returnmapTest(G6); <CR> } <CR> staticTestmapTest(intG6){ <CR> Testp9=null; <CR> switch(G6){ <CR> case1: <CR> p9=newExam("Exam"); <CR> break; <CR> case2: <CR> p9=newHomework("Homework"); <CR> break; <CR> case3: <CR> p9=newReport("Report"); <CR> break; <CR> } <CR> returnp9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringu){ <CR> super(u); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR3){ <CR> super(R3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringG8){ <CR> name=G8; <CR> } <CR> voidsetscore(doubleG8){ <CR> score=G8; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublesw; <CR> voidsetsw(doubleG8){ <CR> sw=G8; <CR> } <CR> Student(Stringj,StringY2,doubleI8,doubleX2){ <CR> this.id=j; <CR> this.name=Y2; <CR> this.score=I8; <CR> this.sw=X2; <CR> } <CR> voidsetid(StringG8){ <CR> id=G8; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringj7){ <CR> this.name=j7; <CR> } <CR> } <CR>  <EOC> 