 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo6){ <CR> super(o6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intr9){ <CR> TestN1=null; <CR> switch(r9){ <CR> case1: <CR> N1=newExam("Exam"); <CR> break; <CR> case2: <CR> N1=newHomework("Homework"); <CR> break; <CR> case3: <CR> N1=newReport("Report"); <CR> break; <CR> } <CR> returnN1; <CR> } <CR> publicstaticvoidmain(String[]R6){ <CR> StringT,c0; <CR> doubler9,w4; <CR> System.out.println("請輸入學生學號: "); <CR> T=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> c0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> r9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> w4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentz4=newStudent(T,c0,r9,w4); <CR> z4.setid(T); <CR> z4.setname(c0); <CR> z4.setscore(r9); <CR> z4.setsw(w4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intr9=0; <CR> do <CR> { <CR> r9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(r9>3||r9<1); <CR> returnmapTest(r9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringC9){ <CR> super(C9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringg0){ <CR> super(g0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringK6){ <CR> id=K6; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringK6){ <CR> name=K6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleK6){ <CR> score=K6; <CR> } <CR> voidsetsw(doubleK6){ <CR> sw=K6; <CR> } <CR> doublesw; <CR> Stringid; <CR> Stringname; <CR> Student(Stringg2,StringN0,doublep6,doubleV2){ <CR> this.id=g2; <CR> this.name=N0; <CR> this.score=p6; <CR> this.sw=V2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringA9){ <CR> this.name=A9; <CR> } <CR> } <CR>  <EOC> 