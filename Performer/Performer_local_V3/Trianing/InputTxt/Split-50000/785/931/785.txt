 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx0){ <CR> super(x0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]m4){ <CR> StringX1,f8; <CR> doublez2,M7; <CR> System.out.println("請輸入學生學號: "); <CR> X1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> f8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> z2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentq=newStudent(X1,f8,z2,M7); <CR> q.setid(X1); <CR> q.setname(f8); <CR> q.setscore(z2); <CR> q.setsw(M7); <CR> } <CR> staticTestmapTest(intz2){ <CR> TestG2=null; <CR> switch(z2){ <CR> case1: <CR> G2=newExam("Exam"); <CR> break; <CR> case2: <CR> G2=newHomework("Homework"); <CR> break; <CR> case3: <CR> G2=newReport("Report"); <CR> break; <CR> } <CR> returnG2; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intz2=0; <CR> do <CR> { <CR> z2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(z2>3||z2<1); <CR> returnmapTest(z2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa4){ <CR> super(a4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringq1){ <CR> super(q1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Student(Stringr0,Stringb6,doubleg5,doubleR0){ <CR> this.id=r0; <CR> this.name=b6; <CR> this.score=g5; <CR> this.sw=R0; <CR> } <CR> voidsetid(Stringz){ <CR> id=z; <CR> } <CR> voidsetsw(doublez){ <CR> sw=z; <CR> } <CR> voidsetscore(doublez){ <CR> score=z; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringz){ <CR> name=z; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Strings6){ <CR> this.name=s6; <CR> } <CR> } <CR>  <EOC> 