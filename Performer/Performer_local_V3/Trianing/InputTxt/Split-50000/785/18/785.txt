 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringD0){ <CR> super(D0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]s7){ <CR> Stringr3,l3; <CR> doublep,m; <CR> System.out.println("請輸入學生學號: "); <CR> r3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> l3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> p=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> m=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Students3=newStudent(r3,l3,p,m); <CR> s3.setid(r3); <CR> s3.setname(l3); <CR> s3.setscore(p); <CR> s3.setsw(m); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intp=0; <CR> do <CR> { <CR> p=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(p>3||p<1); <CR> returnmapTest(p); <CR> } <CR> staticTestmapTest(intp){ <CR> TestL7=null; <CR> switch(p){ <CR> case1: <CR> L7=newExam("Exam"); <CR> break; <CR> case2: <CR> L7=newHomework("Homework"); <CR> break; <CR> case3: <CR> L7=newReport("Report"); <CR> break; <CR> } <CR> returnL7; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringy4){ <CR> super(y4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringW0){ <CR> super(W0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringM0){ <CR> id=M0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleM0){ <CR> sw=M0; <CR> } <CR> Student(StringV4,StringP1,doubleL,doubleG0){ <CR> this.id=V4; <CR> this.name=P1; <CR> this.score=L; <CR> this.sw=G0; <CR> } <CR> doublesw; <CR> voidsetscore(doubleM0){ <CR> score=M0; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> voidsetname(StringM0){ <CR> name=M0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringU7){ <CR> this.name=U7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 