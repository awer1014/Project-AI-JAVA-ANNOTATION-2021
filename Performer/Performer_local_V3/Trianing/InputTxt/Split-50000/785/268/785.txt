 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringH0){ <CR> super(H0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO8=0; <CR> do <CR> { <CR> O8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O8>3||O8<1); <CR> returnmapTest(O8); <CR> } <CR> staticTestmapTest(intO8){ <CR> TestG1=null; <CR> switch(O8){ <CR> case1: <CR> G1=newExam("Exam"); <CR> break; <CR> case2: <CR> G1=newHomework("Homework"); <CR> break; <CR> case3: <CR> G1=newReport("Report"); <CR> break; <CR> } <CR> returnG1; <CR> } <CR> publicstaticvoidmain(String[]V5){ <CR> Stringh4,W6; <CR> doubleO8,A6; <CR> System.out.println("請輸入學生學號: "); <CR> h4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> W6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> A6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta1=newStudent(h4,W6,O8,A6); <CR> a1.setid(h4); <CR> a1.setname(W6); <CR> a1.setscore(O8); <CR> a1.setsw(A6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringq6){ <CR> super(q6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringX7){ <CR> super(X7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringV1){ <CR> id=V1; <CR> } <CR> voidsetsw(doubleV1){ <CR> sw=V1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetscore(doubleV1){ <CR> score=V1; <CR> } <CR> Stringname; <CR> voidsetname(StringV1){ <CR> name=V1; <CR> } <CR> doublesw; <CR> Student(StringU3,StringP4,doubleB6,doubleC3){ <CR> this.id=U3; <CR> this.name=P4; <CR> this.score=B6; <CR> this.sw=C3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX5){ <CR> this.name=X5; <CR> } <CR> } <CR>  <EOC> 