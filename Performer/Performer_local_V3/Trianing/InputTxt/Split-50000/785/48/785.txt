 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringP3){ <CR> super(P3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]V6){ <CR> Strings2,c5; <CR> doublea,p8; <CR> System.out.println("請輸入學生學號: "); <CR> s2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> c5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> a=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> p8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx2=newStudent(s2,c5,a,p8); <CR> x2.setid(s2); <CR> x2.setname(c5); <CR> x2.setscore(a); <CR> x2.setsw(p8); <CR> } <CR> staticTestmapTest(inta){ <CR> TestY0=null; <CR> switch(a){ <CR> case1: <CR> Y0=newExam("Exam"); <CR> break; <CR> case2: <CR> Y0=newHomework("Homework"); <CR> break; <CR> case3: <CR> Y0=newReport("Report"); <CR> break; <CR> } <CR> returnY0; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inta=0; <CR> do <CR> { <CR> a=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(a>3||a<1); <CR> returnmapTest(a); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringL9){ <CR> super(L9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP5){ <CR> super(P5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> voidsetsw(doublem5){ <CR> sw=m5; <CR> } <CR> doublesw; <CR> doublescore; <CR> voidsetname(Stringm5){ <CR> name=m5; <CR> } <CR> Student(StringJ9,StringH0,doublef6,doublep9){ <CR> this.id=J9; <CR> this.name=H0; <CR> this.score=f6; <CR> this.sw=p9; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringm5){ <CR> id=m5; <CR> } <CR> voidsetscore(doublem5){ <CR> score=m5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringl2){ <CR> this.name=l2; <CR> } <CR> } <CR>  <EOC> 