 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringD5){ <CR> super(D5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intP4){ <CR> Testn4=null; <CR> switch(P4){ <CR> case1: <CR> n4=newExam("Exam"); <CR> break; <CR> case2: <CR> n4=newHomework("Homework"); <CR> break; <CR> case3: <CR> n4=newReport("Report"); <CR> break; <CR> } <CR> returnn4; <CR> } <CR> publicstaticvoidmain(String[]P0){ <CR> StringQ8,E8; <CR> doubleP4,N5; <CR> System.out.println("請輸入學生學號: "); <CR> Q8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> P4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentL8=newStudent(Q8,E8,P4,N5); <CR> L8.setid(Q8); <CR> L8.setname(E8); <CR> L8.setscore(P4); <CR> L8.setsw(N5); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intP4=0; <CR> do <CR> { <CR> P4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(P4>3||P4<1); <CR> returnmapTest(P4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringA1){ <CR> super(A1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringV8){ <CR> super(V8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringf0,Stringc6,doubleW2,doubleg3){ <CR> this.id=f0; <CR> this.name=c6; <CR> this.score=W2; <CR> this.sw=g3; <CR> } <CR> Stringid; <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringX9){ <CR> name=X9; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleX9){ <CR> score=X9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringX9){ <CR> id=X9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> voidsetsw(doubleX9){ <CR> sw=X9; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringz1){ <CR> this.name=z1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 