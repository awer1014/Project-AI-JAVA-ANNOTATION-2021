 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringm){ <CR> super(m); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]f0){ <CR> Stringv,U3; <CR> doubleH4,R2; <CR> System.out.println("請輸入學生學號: "); <CR> v=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> U3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> H4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentD=newStudent(v,U3,H4,R2); <CR> D.setid(v); <CR> D.setname(U3); <CR> D.setscore(H4); <CR> D.setsw(R2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intH4=0; <CR> do <CR> { <CR> H4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(H4>3||H4<1); <CR> returnmapTest(H4); <CR> } <CR> staticTestmapTest(intH4){ <CR> Testl5=null; <CR> switch(H4){ <CR> case1: <CR> l5=newExam("Exam"); <CR> break; <CR> case2: <CR> l5=newHomework("Homework"); <CR> break; <CR> case3: <CR> l5=newReport("Report"); <CR> break; <CR> } <CR> returnl5; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd0){ <CR> super(d0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringg1){ <CR> super(g1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> voidsetid(StringG8){ <CR> id=G8; <CR> } <CR> doublesw; <CR> Stringname; <CR> voidsetname(StringG8){ <CR> name=G8; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(StringJ6,Stringj2,doubleY2,doublek4){ <CR> this.id=J6; <CR> this.name=j2; <CR> this.score=Y2; <CR> this.sw=k4; <CR> } <CR> doublescore; <CR> voidsetsw(doubleG8){ <CR> sw=G8; <CR> } <CR> voidsetscore(doubleG8){ <CR> score=G8; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringw1){ <CR> this.name=w1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 