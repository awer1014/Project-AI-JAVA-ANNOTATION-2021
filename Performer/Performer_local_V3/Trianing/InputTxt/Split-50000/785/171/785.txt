 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringF7){ <CR> super(F7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intD=0; <CR> do <CR> { <CR> D=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(D>3||D<1); <CR> returnmapTest(D); <CR> } <CR> staticTestmapTest(intD){ <CR> TestR7=null; <CR> switch(D){ <CR> case1: <CR> R7=newExam("Exam"); <CR> break; <CR> case2: <CR> R7=newHomework("Homework"); <CR> break; <CR> case3: <CR> R7=newReport("Report"); <CR> break; <CR> } <CR> returnR7; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]G1){ <CR> StringT5,O5; <CR> doubleD,O7; <CR> System.out.println("請輸入學生學號: "); <CR> T5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> O5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> D=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentR6=newStudent(T5,O5,D,O7); <CR> R6.setid(T5); <CR> R6.setname(O5); <CR> R6.setscore(D); <CR> R6.setsw(O7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn6){ <CR> super(n6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringD2){ <CR> super(D2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetsw(doublez8){ <CR> sw=z8; <CR> } <CR> voidsetscore(doublez8){ <CR> score=z8; <CR> } <CR> voidsetname(Stringz8){ <CR> name=z8; <CR> } <CR> Stringname; <CR> Student(StringR2,Stringa2,doubleN1,doublec){ <CR> this.id=R2; <CR> this.name=a2; <CR> this.score=N1; <CR> this.sw=c; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(Stringz8){ <CR> id=z8; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringA7){ <CR> this.name=A7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 