 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringM8){ <CR> super(M8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA3=0; <CR> do <CR> { <CR> A3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A3>3||A3<1); <CR> returnmapTest(A3); <CR> } <CR> publicstaticvoidmain(String[]Z8){ <CR> StringG2,V4; <CR> doubleA3,R6; <CR> System.out.println("請輸入學生學號: "); <CR> G2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> V4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ3=newStudent(G2,V4,A3,R6); <CR> Z3.setid(G2); <CR> Z3.setname(V4); <CR> Z3.setscore(A3); <CR> Z3.setsw(R6); <CR> } <CR> staticTestmapTest(intA3){ <CR> Testa3=null; <CR> switch(A3){ <CR> case1: <CR> a3=newExam("Exam"); <CR> break; <CR> case2: <CR> a3=newHomework("Homework"); <CR> break; <CR> case3: <CR> a3=newReport("Report"); <CR> break; <CR> } <CR> returna3; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringr4){ <CR> super(r4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringW7){ <CR> super(W7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublem){ <CR> sw=m; <CR> } <CR> Student(Stringo3,StringM5,doublem2,doubleO){ <CR> this.id=o3; <CR> this.name=M5; <CR> this.score=m2; <CR> this.sw=O; <CR> } <CR> Stringname; <CR> voidsetscore(doublem){ <CR> score=m; <CR> } <CR> doublesw; <CR> voidsetname(Stringm){ <CR> name=m; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringm){ <CR> id=m; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringv){ <CR> this.name=v; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 