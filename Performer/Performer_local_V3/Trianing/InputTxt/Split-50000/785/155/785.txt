 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk0){ <CR> super(k0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]C3){ <CR> StringO9,J4; <CR> doublei,K5; <CR> System.out.println("請輸入學生學號: "); <CR> O9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> J4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> i=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> K5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentB9=newStudent(O9,J4,i,K5); <CR> B9.setid(O9); <CR> B9.setname(J4); <CR> B9.setscore(i); <CR> B9.setsw(K5); <CR> } <CR> staticTestmapTest(inti){ <CR> Testn4=null; <CR> switch(i){ <CR> case1: <CR> n4=newExam("Exam"); <CR> break; <CR> case2: <CR> n4=newHomework("Homework"); <CR> break; <CR> case3: <CR> n4=newReport("Report"); <CR> break; <CR> } <CR> returnn4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inti=0; <CR> do <CR> { <CR> i=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(i>3||i<1); <CR> returnmapTest(i); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd){ <CR> super(d); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringH5){ <CR> super(H5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> Stringname; <CR> doublescore; <CR> voidsetname(Stringi){ <CR> name=i; <CR> } <CR> voidsetsw(doublei){ <CR> sw=i; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(Stringi){ <CR> id=i; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(StringD4,StringN7,doubleX8,doublez){ <CR> this.id=D4; <CR> this.name=N7; <CR> this.score=X8; <CR> this.sw=z; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doublei){ <CR> score=i; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringd7){ <CR> this.name=d7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 