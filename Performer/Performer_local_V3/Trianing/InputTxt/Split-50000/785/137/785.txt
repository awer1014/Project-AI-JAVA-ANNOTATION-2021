 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringQ6){ <CR> super(Q6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]G){ <CR> Stringw4,K2; <CR> doubleO0,h; <CR> System.out.println("請輸入學生學號: "); <CR> w4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> K2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> h=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenty7=newStudent(w4,K2,O0,h); <CR> y7.setid(w4); <CR> y7.setname(K2); <CR> y7.setscore(O0); <CR> y7.setsw(h); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intO0){ <CR> Testu8=null; <CR> switch(O0){ <CR> case1: <CR> u8=newExam("Exam"); <CR> break; <CR> case2: <CR> u8=newHomework("Homework"); <CR> break; <CR> case3: <CR> u8=newReport("Report"); <CR> break; <CR> } <CR> returnu8; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO0=0; <CR> do <CR> { <CR> O0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O0>3||O0<1); <CR> returnmapTest(O0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringe4){ <CR> super(e4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringW){ <CR> super(W); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doublez7){ <CR> sw=z7; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetid(Stringz7){ <CR> id=z7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(StringW,Stringq5,doubleM,doubleY1){ <CR> this.id=W; <CR> this.name=q5; <CR> this.score=M; <CR> this.sw=Y1; <CR> } <CR> voidsetscore(doublez7){ <CR> score=z7; <CR> } <CR> doublesw; <CR> voidsetname(Stringz7){ <CR> name=z7; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringb9){ <CR> this.name=b9; <CR> } <CR> } <CR>  <EOC> 