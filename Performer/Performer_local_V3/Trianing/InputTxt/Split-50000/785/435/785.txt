 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringW9){ <CR> super(W9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]A0){ <CR> StringQ2,g9; <CR> doubled9,Y4; <CR> System.out.println("請輸入學生學號: "); <CR> Q2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> g9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> d9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Y4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentW1=newStudent(Q2,g9,d9,Y4); <CR> W1.setid(Q2); <CR> W1.setname(g9); <CR> W1.setscore(d9); <CR> W1.setsw(Y4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intd9=0; <CR> do <CR> { <CR> d9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(d9>3||d9<1); <CR> returnmapTest(d9); <CR> } <CR> staticTestmapTest(intd9){ <CR> Testq4=null; <CR> switch(d9){ <CR> case1: <CR> q4=newExam("Exam"); <CR> break; <CR> case2: <CR> q4=newHomework("Homework"); <CR> break; <CR> case3: <CR> q4=newReport("Report"); <CR> break; <CR> } <CR> returnq4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt){ <CR> super(t); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringl9){ <CR> super(l9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> Student(StringO6,StringI5,doublei1,doubleS0){ <CR> this.id=O6; <CR> this.name=I5; <CR> this.score=i1; <CR> this.sw=S0; <CR> } <CR> voidsetname(Stringf4){ <CR> name=f4; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublef4){ <CR> score=f4; <CR> } <CR> Stringname; <CR> voidsetid(Stringf4){ <CR> id=f4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublef4){ <CR> sw=f4; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringe9){ <CR> this.name=e9; <CR> } <CR> } <CR>  <EOC> 