 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringj1){ <CR> super(j1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU9=0; <CR> do <CR> { <CR> U9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U9>3||U9<1); <CR> returnmapTest(U9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intU9){ <CR> Testk7=null; <CR> switch(U9){ <CR> case1: <CR> k7=newExam("Exam"); <CR> break; <CR> case2: <CR> k7=newHomework("Homework"); <CR> break; <CR> case3: <CR> k7=newReport("Report"); <CR> break; <CR> } <CR> returnk7; <CR> } <CR> publicstaticvoidmain(String[]i2){ <CR> Stringj2,S6; <CR> doubleU9,O5; <CR> System.out.println("請輸入學生學號: "); <CR> j2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> S6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentt0=newStudent(j2,S6,U9,O5); <CR> t0.setid(j2); <CR> t0.setname(S6); <CR> t0.setscore(U9); <CR> t0.setsw(O5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringw0){ <CR> super(w0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx6){ <CR> super(x6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doublet9){ <CR> score=t9; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetid(Stringt9){ <CR> id=t9; <CR> } <CR> Student(Stringz2,Stringi2,doubleD9,doublej5){ <CR> this.id=z2; <CR> this.name=i2; <CR> this.score=D9; <CR> this.sw=j5; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringt9){ <CR> name=t9; <CR> } <CR> voidsetsw(doublet9){ <CR> sw=t9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringe){ <CR> this.name=e; <CR> } <CR> } <CR>  <EOC> 