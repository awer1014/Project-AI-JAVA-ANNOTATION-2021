 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringA7){ <CR> super(A7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intz5=0; <CR> do <CR> { <CR> z5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(z5>3||z5<1); <CR> returnmapTest(z5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intz5){ <CR> Testx8=null; <CR> switch(z5){ <CR> case1: <CR> x8=newExam("Exam"); <CR> break; <CR> case2: <CR> x8=newHomework("Homework"); <CR> break; <CR> case3: <CR> x8=newReport("Report"); <CR> break; <CR> } <CR> returnx8; <CR> } <CR> publicstaticvoidmain(String[]S){ <CR> StringQ6,q4; <CR> doublez5,q8; <CR> System.out.println("請輸入學生學號: "); <CR> Q6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> q4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> z5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> q8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studento2=newStudent(Q6,q4,z5,q8); <CR> o2.setid(Q6); <CR> o2.setname(q4); <CR> o2.setscore(z5); <CR> o2.setsw(q8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringo7){ <CR> super(o7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx1){ <CR> super(x1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubler2){ <CR> score=r2; <CR> } <CR> doublescore; <CR> voidsetname(Stringr2){ <CR> name=r2; <CR> } <CR> voidsetsw(doubler2){ <CR> sw=r2; <CR> } <CR> Stringname; <CR> Student(StringK6,Stringr8,doubleJ0,doublez9){ <CR> this.id=K6; <CR> this.name=r8; <CR> this.score=J0; <CR> this.sw=z9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringr2){ <CR> id=r2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringN8){ <CR> this.name=N8; <CR> } <CR> } <CR>  <EOC> 