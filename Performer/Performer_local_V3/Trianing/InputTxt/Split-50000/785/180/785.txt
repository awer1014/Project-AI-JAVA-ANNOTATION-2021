 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx4){ <CR> super(x4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intF3=0; <CR> do <CR> { <CR> F3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(F3>3||F3<1); <CR> returnmapTest(F3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]a0){ <CR> Stringt1,E9; <CR> doubleF3,M; <CR> System.out.println("請輸入學生學號: "); <CR> t1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> F3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentA7=newStudent(t1,E9,F3,M); <CR> A7.setid(t1); <CR> A7.setname(E9); <CR> A7.setscore(F3); <CR> A7.setsw(M); <CR> } <CR> staticTestmapTest(intF3){ <CR> TestO5=null; <CR> switch(F3){ <CR> case1: <CR> O5=newExam("Exam"); <CR> break; <CR> case2: <CR> O5=newHomework("Homework"); <CR> break; <CR> case3: <CR> O5=newReport("Report"); <CR> break; <CR> } <CR> returnO5; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringO8){ <CR> super(O8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringL8){ <CR> super(L8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringF4,Stringr5,doublem6,doublel3){ <CR> this.id=F4; <CR> this.name=r5; <CR> this.score=m6; <CR> this.sw=l3; <CR> } <CR> voidsetid(Stringm0){ <CR> id=m0; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetscore(doublem0){ <CR> score=m0; <CR> } <CR> doublescore; <CR> voidsetname(Stringm0){ <CR> name=m0; <CR> } <CR> voidsetsw(doublem0){ <CR> sw=m0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringO2){ <CR> this.name=O2; <CR> } <CR> } <CR>  <EOC> 