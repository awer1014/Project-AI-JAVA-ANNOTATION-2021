 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringM9){ <CR> super(M9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]m8){ <CR> Stringl5,T; <CR> doubleT0,g2; <CR> System.out.println("請輸入學生學號: "); <CR> l5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> T=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentv5=newStudent(l5,T,T0,g2); <CR> v5.setid(l5); <CR> v5.setname(T); <CR> v5.setscore(T0); <CR> v5.setsw(g2); <CR> } <CR> staticTestmapTest(intT0){ <CR> TestB4=null; <CR> switch(T0){ <CR> case1: <CR> B4=newExam("Exam"); <CR> break; <CR> case2: <CR> B4=newHomework("Homework"); <CR> break; <CR> case3: <CR> B4=newReport("Report"); <CR> break; <CR> } <CR> returnB4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT0=0; <CR> do <CR> { <CR> T0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T0>3||T0<1); <CR> returnmapTest(T0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn6){ <CR> super(n6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringK){ <CR> super(K); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleV9){ <CR> score=V9; <CR> } <CR> voidsetname(StringV9){ <CR> name=V9; <CR> } <CR> Student(StringW6,Stringj,doublev2,doublep6){ <CR> this.id=W6; <CR> this.name=j; <CR> this.score=v2; <CR> this.sw=p6; <CR> } <CR> voidsetid(StringV9){ <CR> id=V9; <CR> } <CR> voidsetsw(doubleV9){ <CR> sw=V9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringm){ <CR> this.name=m; <CR> } <CR> } <CR>  <EOC> 