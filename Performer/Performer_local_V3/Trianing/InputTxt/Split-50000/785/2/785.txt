 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringc9){ <CR> super(c9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]c2){ <CR> StringT6,R0; <CR> doublex1,W7; <CR> System.out.println("請輸入學生學號: "); <CR> T6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> R0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> x1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf4=newStudent(T6,R0,x1,W7); <CR> f4.setid(T6); <CR> f4.setname(R0); <CR> f4.setscore(x1); <CR> f4.setsw(W7); <CR> } <CR> staticTestmapTest(intx1){ <CR> Testx=null; <CR> switch(x1){ <CR> case1: <CR> x=newExam("Exam"); <CR> break; <CR> case2: <CR> x=newHomework("Homework"); <CR> break; <CR> case3: <CR> x=newReport("Report"); <CR> break; <CR> } <CR> returnx; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intx1=0; <CR> do <CR> { <CR> x1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(x1>3||x1<1); <CR> returnmapTest(x1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringr9){ <CR> super(r9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringd8){ <CR> super(d8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringi4){ <CR> name=i4; <CR> } <CR> voidsetsw(doublei4){ <CR> sw=i4; <CR> } <CR> Stringid; <CR> voidsetid(Stringi4){ <CR> id=i4; <CR> } <CR> doublescore; <CR> Stringname; <CR> Student(Stringg9,Stringq6,doublef0,doubleZ0){ <CR> this.id=g9; <CR> this.name=q6; <CR> this.score=f0; <CR> this.sw=Z0; <CR> } <CR> doublesw; <CR> voidsetscore(doublei4){ <CR> score=i4; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringO){ <CR> this.name=O; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 