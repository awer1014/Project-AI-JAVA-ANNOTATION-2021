 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringU1){ <CR> super(U1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intl2){ <CR> Testp2=null; <CR> switch(l2){ <CR> case1: <CR> p2=newExam("Exam"); <CR> break; <CR> case2: <CR> p2=newHomework("Homework"); <CR> break; <CR> case3: <CR> p2=newReport("Report"); <CR> break; <CR> } <CR> returnp2; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intl2=0; <CR> do <CR> { <CR> l2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(l2>3||l2<1); <CR> returnmapTest(l2); <CR> } <CR> publicstaticvoidmain(String[]Z5){ <CR> Stringj1,n1; <CR> doublel2,Q1; <CR> System.out.println("請輸入學生學號: "); <CR> j1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> n1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> l2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Q1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentV2=newStudent(j1,n1,l2,Q1); <CR> V2.setid(j1); <CR> V2.setname(n1); <CR> V2.setscore(l2); <CR> V2.setsw(Q1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringO){ <CR> super(O); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN5){ <CR> super(N5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublescore; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> voidsetid(StringL1){ <CR> id=L1; <CR> } <CR> voidsetsw(doubleL1){ <CR> sw=L1; <CR> } <CR> Student(StringG2,StringI,doubleo2,doublev5){ <CR> this.id=G2; <CR> this.name=I; <CR> this.score=o2; <CR> this.sw=v5; <CR> } <CR> voidsetscore(doubleL1){ <CR> score=L1; <CR> } <CR> voidsetname(StringL1){ <CR> name=L1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringI2){ <CR> this.name=I2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 