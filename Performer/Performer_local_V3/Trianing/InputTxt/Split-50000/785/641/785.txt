 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringJ8){ <CR> super(J8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]Y9){ <CR> StringR1,J4; <CR> doubleR4,r3; <CR> System.out.println("請輸入學生學號: "); <CR> R1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> J4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> R4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> r3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenti1=newStudent(R1,J4,R4,r3); <CR> i1.setid(R1); <CR> i1.setname(J4); <CR> i1.setscore(R4); <CR> i1.setsw(r3); <CR> } <CR> staticTestmapTest(intR4){ <CR> TestH0=null; <CR> switch(R4){ <CR> case1: <CR> H0=newExam("Exam"); <CR> break; <CR> case2: <CR> H0=newHomework("Homework"); <CR> break; <CR> case3: <CR> H0=newReport("Report"); <CR> break; <CR> } <CR> returnH0; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intR4=0; <CR> do <CR> { <CR> R4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(R4>3||R4<1); <CR> returnmapTest(R4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringG5){ <CR> super(G5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringc3){ <CR> super(c3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringW9,Stringg,doublez6,doubleY6){ <CR> this.id=W9; <CR> this.name=g; <CR> this.score=z6; <CR> this.sw=Y6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringO8){ <CR> id=O8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringO8){ <CR> name=O8; <CR> } <CR> voidsetsw(doubleO8){ <CR> sw=O8; <CR> } <CR> voidsetscore(doubleO8){ <CR> score=O8; <CR> } <CR> doublesw; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringA){ <CR> this.name=A; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 