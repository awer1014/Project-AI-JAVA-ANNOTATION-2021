 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringz2){ <CR> super(z2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]e2){ <CR> StringH9,T; <CR> doublet5,V1; <CR> System.out.println("請輸入學生學號: "); <CR> H9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> T=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> t5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> V1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentS9=newStudent(H9,T,t5,V1); <CR> S9.setid(H9); <CR> S9.setname(T); <CR> S9.setscore(t5); <CR> S9.setsw(V1); <CR> } <CR> staticTestmapTest(intt5){ <CR> TestM=null; <CR> switch(t5){ <CR> case1: <CR> M=newExam("Exam"); <CR> break; <CR> case2: <CR> M=newHomework("Homework"); <CR> break; <CR> case3: <CR> M=newReport("Report"); <CR> break; <CR> } <CR> returnM; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intt5=0; <CR> do <CR> { <CR> t5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(t5>3||t5<1); <CR> returnmapTest(t5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp3){ <CR> super(p3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringF8){ <CR> super(F8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doublei9){ <CR> score=i9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringm7,Stringu,doubleY1,doubleZ4){ <CR> this.id=m7; <CR> this.name=u; <CR> this.score=Y1; <CR> this.sw=Z4; <CR> } <CR> voidsetid(Stringi9){ <CR> id=i9; <CR> } <CR> Stringname; <CR> voidsetsw(doublei9){ <CR> sw=i9; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringi9){ <CR> name=i9; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringn9){ <CR> this.name=n9; <CR> } <CR> } <CR>  <EOC> 