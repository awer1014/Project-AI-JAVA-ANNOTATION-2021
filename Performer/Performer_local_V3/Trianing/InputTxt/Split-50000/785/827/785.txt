 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringR5){ <CR> super(R5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intb3=0; <CR> do <CR> { <CR> b3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(b3>3||b3<1); <CR> returnmapTest(b3); <CR> } <CR> staticTestmapTest(intb3){ <CR> Testz0=null; <CR> switch(b3){ <CR> case1: <CR> z0=newExam("Exam"); <CR> break; <CR> case2: <CR> z0=newHomework("Homework"); <CR> break; <CR> case3: <CR> z0=newReport("Report"); <CR> break; <CR> } <CR> returnz0; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]B3){ <CR> StringR7,C3; <CR> doubleb3,k9; <CR> System.out.println("請輸入學生學號: "); <CR> R7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> C3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> b3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> k9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentS3=newStudent(R7,C3,b3,k9); <CR> S3.setid(R7); <CR> S3.setname(C3); <CR> S3.setscore(b3); <CR> S3.setsw(k9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringj1){ <CR> super(j1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR6){ <CR> super(R6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> Student(Stringo2,Stringi1,doubleM4,doubleV6){ <CR> this.id=o2; <CR> this.name=i1; <CR> this.score=M4; <CR> this.sw=V6; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Strings2){ <CR> name=s2; <CR> } <CR> voidsetscore(doubles2){ <CR> score=s2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Strings2){ <CR> id=s2; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetsw(doubles2){ <CR> sw=s2; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringx5){ <CR> this.name=x5; <CR> } <CR> } <CR>  <EOC> 