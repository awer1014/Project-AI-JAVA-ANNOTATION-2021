 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh2){ <CR> super(h2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intw){ <CR> Testf0=null; <CR> switch(w){ <CR> case1: <CR> f0=newExam("Exam"); <CR> break; <CR> case2: <CR> f0=newHomework("Homework"); <CR> break; <CR> case3: <CR> f0=newReport("Report"); <CR> break; <CR> } <CR> returnf0; <CR> } <CR> publicstaticvoidmain(String[]L1){ <CR> StringJ3,O4; <CR> doublew,K1; <CR> System.out.println("請輸入學生學號: "); <CR> J3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> O4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> w=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> K1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta5=newStudent(J3,O4,w,K1); <CR> a5.setid(J3); <CR> a5.setname(O4); <CR> a5.setscore(w); <CR> a5.setsw(K1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intw=0; <CR> do <CR> { <CR> w=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(w>3||w<1); <CR> returnmapTest(w); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn0){ <CR> super(n0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringo3){ <CR> super(o3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringd8,StringX1,doubleZ,doubleb6){ <CR> this.id=d8; <CR> this.name=X1; <CR> this.score=Z; <CR> this.sw=b6; <CR> } <CR> doublesw; <CR> Stringid; <CR> doublescore; <CR> voidsetname(Stringh){ <CR> name=h; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleh){ <CR> sw=h; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringh){ <CR> id=h; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleh){ <CR> score=h; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringn8){ <CR> this.name=n8; <CR> } <CR> } <CR>  <EOC> 