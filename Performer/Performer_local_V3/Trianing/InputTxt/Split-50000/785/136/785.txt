 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringc){ <CR> super(c); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]r6){ <CR> Stringl2,t1; <CR> doublea5,Z1; <CR> System.out.println("請輸入學生學號: "); <CR> l2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> t1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> a5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentb2=newStudent(l2,t1,a5,Z1); <CR> b2.setid(l2); <CR> b2.setname(t1); <CR> b2.setscore(a5); <CR> b2.setsw(Z1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inta5=0; <CR> do <CR> { <CR> a5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(a5>3||a5<1); <CR> returnmapTest(a5); <CR> } <CR> staticTestmapTest(inta5){ <CR> Testc3=null; <CR> switch(a5){ <CR> case1: <CR> c3=newExam("Exam"); <CR> break; <CR> case2: <CR> c3=newHomework("Homework"); <CR> break; <CR> case3: <CR> c3=newReport("Report"); <CR> break; <CR> } <CR> returnc3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringS1){ <CR> super(S1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringm2){ <CR> super(m2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Stringname; <CR> Student(Stringt,Stringg2,doublek5,doubleZ8){ <CR> this.id=t; <CR> this.name=g2; <CR> this.score=k5; <CR> this.sw=Z8; <CR> } <CR> voidsetid(Stringw3){ <CR> id=w3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doublew3){ <CR> score=w3; <CR> } <CR> voidsetname(Stringw3){ <CR> name=w3; <CR> } <CR> Stringid; <CR> doublescore; <CR> voidsetsw(doublew3){ <CR> sw=w3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringC7){ <CR> this.name=C7; <CR> } <CR> } <CR>  <EOC> 