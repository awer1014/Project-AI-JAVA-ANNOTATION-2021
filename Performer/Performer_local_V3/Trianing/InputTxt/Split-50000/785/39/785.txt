 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr1){ <CR> super(r1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]G2){ <CR> StringR3,e0; <CR> doublex,I0; <CR> System.out.println("請輸入學生學號: "); <CR> R3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> x=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> I0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf2=newStudent(R3,e0,x,I0); <CR> f2.setid(R3); <CR> f2.setname(e0); <CR> f2.setscore(x); <CR> f2.setsw(I0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intx=0; <CR> do <CR> { <CR> x=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(x>3||x<1); <CR> returnmapTest(x); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intx){ <CR> TestG1=null; <CR> switch(x){ <CR> case1: <CR> G1=newExam("Exam"); <CR> break; <CR> case2: <CR> G1=newHomework("Homework"); <CR> break; <CR> case3: <CR> G1=newReport("Report"); <CR> break; <CR> } <CR> returnG1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringB6){ <CR> super(B6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringF6){ <CR> super(F6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringE8){ <CR> name=E8; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublescore; <CR> Student(Stringn0,StringE3,doubleV9,doublel7){ <CR> this.id=n0; <CR> this.name=E3; <CR> this.score=V9; <CR> this.sw=l7; <CR> } <CR> voidsetscore(doubleE8){ <CR> score=E8; <CR> } <CR> Stringname; <CR> voidsetsw(doubleE8){ <CR> sw=E8; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(StringE8){ <CR> id=E8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringy3){ <CR> this.name=y3; <CR> } <CR> } <CR>  <EOC> 