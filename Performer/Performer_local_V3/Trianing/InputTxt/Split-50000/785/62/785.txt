 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringB0){ <CR> super(B0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intW6){ <CR> TestK8=null; <CR> switch(W6){ <CR> case1: <CR> K8=newExam("Exam"); <CR> break; <CR> case2: <CR> K8=newHomework("Homework"); <CR> break; <CR> case3: <CR> K8=newReport("Report"); <CR> break; <CR> } <CR> returnK8; <CR> } <CR> publicstaticvoidmain(String[]i8){ <CR> StringT5,r0; <CR> doubleW6,J3; <CR> System.out.println("請輸入學生學號: "); <CR> T5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> W6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> J3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentc6=newStudent(T5,r0,W6,J3); <CR> c6.setid(T5); <CR> c6.setname(r0); <CR> c6.setscore(W6); <CR> c6.setsw(J3); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intW6=0; <CR> do <CR> { <CR> W6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(W6>3||W6<1); <CR> returnmapTest(W6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringe){ <CR> super(e); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringT){ <CR> super(T); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> doublescore; <CR> Stringid; <CR> Student(StringK0,Stringh4,doubleB4,doubleN5){ <CR> this.id=K0; <CR> this.name=h4; <CR> this.score=B4; <CR> this.sw=N5; <CR> } <CR> voidsetid(StringN1){ <CR> id=N1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleN1){ <CR> score=N1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringN1){ <CR> name=N1; <CR> } <CR> doublesw; <CR> voidsetsw(doubleN1){ <CR> sw=N1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringS3){ <CR> this.name=S3; <CR> } <CR> } <CR>  <EOC> 