 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringy5){ <CR> super(y5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf9=0; <CR> do <CR> { <CR> f9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f9>3||f9<1); <CR> returnmapTest(f9); <CR> } <CR> publicstaticvoidmain(String[]T9){ <CR> Stringq3,J; <CR> doublef9,q4; <CR> System.out.println("請輸入學生學號: "); <CR> q3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> J=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> q4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ=newStudent(q3,J,f9,q4); <CR> Z.setid(q3); <CR> Z.setname(J); <CR> Z.setscore(f9); <CR> Z.setsw(q4); <CR> } <CR> staticTestmapTest(intf9){ <CR> TestK2=null; <CR> switch(f9){ <CR> case1: <CR> K2=newExam("Exam"); <CR> break; <CR> case2: <CR> K2=newHomework("Homework"); <CR> break; <CR> case3: <CR> K2=newReport("Report"); <CR> break; <CR> } <CR> returnK2; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa1){ <CR> super(a1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringj2){ <CR> super(j2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> doublesw; <CR> Stringid; <CR> voidsetid(Stringf0){ <CR> id=f0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublef0){ <CR> score=f0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringd,StringY8,doubleq7,doubleE4){ <CR> this.id=d; <CR> this.name=Y8; <CR> this.score=q7; <CR> this.sw=E4; <CR> } <CR> Stringname; <CR> voidsetsw(doublef0){ <CR> sw=f0; <CR> } <CR> voidsetname(Stringf0){ <CR> name=f0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringS7){ <CR> this.name=S7; <CR> } <CR> } <CR>  <EOC> 