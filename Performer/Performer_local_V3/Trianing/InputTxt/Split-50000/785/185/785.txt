 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx2){ <CR> super(x2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO5=0; <CR> do <CR> { <CR> O5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O5>3||O5<1); <CR> returnmapTest(O5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]i8){ <CR> Stringh,z5; <CR> doubleO5,p2; <CR> System.out.println("請輸入學生學號: "); <CR> h=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> z5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> p2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentU6=newStudent(h,z5,O5,p2); <CR> U6.setid(h); <CR> U6.setname(z5); <CR> U6.setscore(O5); <CR> U6.setsw(p2); <CR> } <CR> staticTestmapTest(intO5){ <CR> TestA4=null; <CR> switch(O5){ <CR> case1: <CR> A4=newExam("Exam"); <CR> break; <CR> case2: <CR> A4=newHomework("Homework"); <CR> break; <CR> case3: <CR> A4=newReport("Report"); <CR> break; <CR> } <CR> returnA4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa3){ <CR> super(a3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx7){ <CR> super(x7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleH7){ <CR> sw=H7; <CR> } <CR> voidsetname(StringH7){ <CR> name=H7; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleH7){ <CR> score=H7; <CR> } <CR> Student(Stringi4,StringQ4,doublel0,doubleE2){ <CR> this.id=i4; <CR> this.name=Q4; <CR> this.score=l0; <CR> this.sw=E2; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> voidsetid(StringH7){ <CR> id=H7; <CR> } <CR> Stringname; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringR){ <CR> this.name=R; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 