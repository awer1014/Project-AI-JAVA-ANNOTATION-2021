 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringH0){ <CR> super(H0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]I){ <CR> Stringf4,G; <CR> doubled3,H1; <CR> System.out.println("請輸入學生學號: "); <CR> f4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> G=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> d3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> H1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentG7=newStudent(f4,G,d3,H1); <CR> G7.setid(f4); <CR> G7.setname(G); <CR> G7.setscore(d3); <CR> G7.setsw(H1); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intd3=0; <CR> do <CR> { <CR> d3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(d3>3||d3<1); <CR> returnmapTest(d3); <CR> } <CR> staticTestmapTest(intd3){ <CR> TestR=null; <CR> switch(d3){ <CR> case1: <CR> R=newExam("Exam"); <CR> break; <CR> case2: <CR> R=newHomework("Homework"); <CR> break; <CR> case3: <CR> R=newReport("Report"); <CR> break; <CR> } <CR> returnR; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringu1){ <CR> super(u1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringQ3){ <CR> super(Q3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(StringC7,StringP5,doublet8,doubleW3){ <CR> this.id=C7; <CR> this.name=P5; <CR> this.score=t8; <CR> this.sw=W3; <CR> } <CR> Stringname; <CR> voidsetname(Strings2){ <CR> name=s2; <CR> } <CR> voidsetid(Strings2){ <CR> id=s2; <CR> } <CR> voidsetsw(doubles2){ <CR> sw=s2; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubles2){ <CR> score=s2; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringw2){ <CR> this.name=w2; <CR> } <CR> } <CR>  <EOC> 