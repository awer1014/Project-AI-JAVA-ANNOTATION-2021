 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringq8){ <CR> super(q8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(inte2){ <CR> TestG4=null; <CR> switch(e2){ <CR> case1: <CR> G4=newExam("Exam"); <CR> break; <CR> case2: <CR> G4=newHomework("Homework"); <CR> break; <CR> case3: <CR> G4=newReport("Report"); <CR> break; <CR> } <CR> returnG4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inte2=0; <CR> do <CR> { <CR> e2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(e2>3||e2<1); <CR> returnmapTest(e2); <CR> } <CR> publicstaticvoidmain(String[]B2){ <CR> Strings1,k0; <CR> doublee2,V0; <CR> System.out.println("請輸入學生學號: "); <CR> s1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> k0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> e2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> V0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentI4=newStudent(s1,k0,e2,V0); <CR> I4.setid(s1); <CR> I4.setname(k0); <CR> I4.setscore(e2); <CR> I4.setsw(V0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringL1){ <CR> super(L1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringO1){ <CR> super(O1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringX8,StringN3,doublet,doublei7){ <CR> this.id=X8; <CR> this.name=N3; <CR> this.score=t; <CR> this.sw=i7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(StringT7){ <CR> id=T7; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleT7){ <CR> score=T7; <CR> } <CR> Stringname; <CR> voidsetname(StringT7){ <CR> name=T7; <CR> } <CR> voidsetsw(doubleT7){ <CR> sw=T7; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringr0){ <CR> this.name=r0; <CR> } <CR> } <CR>  <EOC> 