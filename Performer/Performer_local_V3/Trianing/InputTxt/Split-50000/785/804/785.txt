 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringZ9){ <CR> super(Z9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]g3){ <CR> Stringa,Q7; <CR> doubleT3,F8; <CR> System.out.println("請輸入學生學號: "); <CR> a=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ2=newStudent(a,Q7,T3,F8); <CR> Z2.setid(a); <CR> Z2.setname(Q7); <CR> Z2.setscore(T3); <CR> Z2.setsw(F8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intT3){ <CR> Testu4=null; <CR> switch(T3){ <CR> case1: <CR> u4=newExam("Exam"); <CR> break; <CR> case2: <CR> u4=newHomework("Homework"); <CR> break; <CR> case3: <CR> u4=newReport("Report"); <CR> break; <CR> } <CR> returnu4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT3=0; <CR> do <CR> { <CR> T3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T3>3||T3<1); <CR> returnmapTest(T3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringo0){ <CR> super(o0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringB6){ <CR> super(B6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> Student(Stringx3,StringH9,doubleD4,doubleF){ <CR> this.id=x3; <CR> this.name=H9; <CR> this.score=D4; <CR> this.sw=F; <CR> } <CR> voidsetscore(doubleD7){ <CR> score=D7; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> voidsetsw(doubleD7){ <CR> sw=D7; <CR> } <CR> doublesw; <CR> voidsetname(StringD7){ <CR> name=D7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringD7){ <CR> id=D7; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringr2){ <CR> this.name=r2; <CR> } <CR> } <CR>  <EOC> 