 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringO4){ <CR> super(O4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intk2=0; <CR> do <CR> { <CR> k2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(k2>3||k2<1); <CR> returnmapTest(k2); <CR> } <CR> publicstaticvoidmain(String[]n){ <CR> Stringm0,A7; <CR> doublek2,f5; <CR> System.out.println("請輸入學生學號: "); <CR> m0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> A7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> k2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> f5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentL1=newStudent(m0,A7,k2,f5); <CR> L1.setid(m0); <CR> L1.setname(A7); <CR> L1.setscore(k2); <CR> L1.setsw(f5); <CR> } <CR> staticTestmapTest(intk2){ <CR> TestM5=null; <CR> switch(k2){ <CR> case1: <CR> M5=newExam("Exam"); <CR> break; <CR> case2: <CR> M5=newHomework("Homework"); <CR> break; <CR> case3: <CR> M5=newReport("Report"); <CR> break; <CR> } <CR> returnM5; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringI1){ <CR> super(I1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringI9){ <CR> super(I9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleH2){ <CR> score=H2; <CR> } <CR> voidsetsw(doubleH2){ <CR> sw=H2; <CR> } <CR> Stringname; <CR> doublesw; <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringd3,Stringl2,doubleT2,doublek0){ <CR> this.id=d3; <CR> this.name=l2; <CR> this.score=T2; <CR> this.sw=k0; <CR> } <CR> voidsetname(StringH2){ <CR> name=H2; <CR> } <CR> voidsetid(StringH2){ <CR> id=H2; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringo1){ <CR> this.name=o1; <CR> } <CR> } <CR>  <EOC> 