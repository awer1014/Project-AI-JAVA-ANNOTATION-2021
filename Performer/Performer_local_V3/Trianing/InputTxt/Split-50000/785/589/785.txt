 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringt){ <CR> super(t); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intP7){ <CR> TestC3=null; <CR> switch(P7){ <CR> case1: <CR> C3=newExam("Exam"); <CR> break; <CR> case2: <CR> C3=newHomework("Homework"); <CR> break; <CR> case3: <CR> C3=newReport("Report"); <CR> break; <CR> } <CR> returnC3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intP7=0; <CR> do <CR> { <CR> P7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(P7>3||P7<1); <CR> returnmapTest(P7); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]A5){ <CR> StringI3,g; <CR> doubleP7,d; <CR> System.out.println("請輸入學生學號: "); <CR> I3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> g=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> P7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> d=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentl2=newStudent(I3,g,P7,d); <CR> l2.setid(I3); <CR> l2.setname(g); <CR> l2.setscore(P7); <CR> l2.setsw(d); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringJ8){ <CR> super(J8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE2){ <CR> super(E2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubler5){ <CR> score=r5; <CR> } <CR> Stringname; <CR> voidsetsw(doubler5){ <CR> sw=r5; <CR> } <CR> Student(StringJ8,StringW4,doublep1,doubleI){ <CR> this.id=J8; <CR> this.name=W4; <CR> this.score=p1; <CR> this.sw=I; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringr5){ <CR> id=r5; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringr5){ <CR> name=r5; <CR> } <CR> Stringid; <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringB){ <CR> this.name=B; <CR> } <CR> } <CR>  <EOC> 