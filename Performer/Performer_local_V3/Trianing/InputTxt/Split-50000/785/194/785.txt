 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx1){ <CR> super(x1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intx7){ <CR> TestT2=null; <CR> switch(x7){ <CR> case1: <CR> T2=newExam("Exam"); <CR> break; <CR> case2: <CR> T2=newHomework("Homework"); <CR> break; <CR> case3: <CR> T2=newReport("Report"); <CR> break; <CR> } <CR> returnT2; <CR> } <CR> publicstaticvoidmain(String[]p2){ <CR> Stringy1,K; <CR> doublex7,Q0; <CR> System.out.println("請輸入學生學號: "); <CR> y1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> K=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> x7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Q0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ6=newStudent(y1,K,x7,Q0); <CR> Z6.setid(y1); <CR> Z6.setname(K); <CR> Z6.setscore(x7); <CR> Z6.setsw(Q0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intx7=0; <CR> do <CR> { <CR> x7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(x7>3||x7<1); <CR> returnmapTest(x7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringK8){ <CR> super(K8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringS3){ <CR> super(S3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Student(Stringt7,Stringj5,doubleS9,doubleD3){ <CR> this.id=t7; <CR> this.name=j5; <CR> this.score=S9; <CR> this.sw=D3; <CR> } <CR> doublescore; <CR> voidsetname(StringF7){ <CR> name=F7; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetscore(doubleF7){ <CR> score=F7; <CR> } <CR> voidsetsw(doubleF7){ <CR> sw=F7; <CR> } <CR> voidsetid(StringF7){ <CR> id=F7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringD9){ <CR> this.name=D9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 