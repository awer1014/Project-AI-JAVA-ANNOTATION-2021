 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringI9){ <CR> super(I9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]s3){ <CR> Stringt5,e1; <CR> doubleu3,t9; <CR> System.out.println("請輸入學生學號: "); <CR> t5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> u3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> t9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentv8=newStudent(t5,e1,u3,t9); <CR> v8.setid(t5); <CR> v8.setname(e1); <CR> v8.setscore(u3); <CR> v8.setsw(t9); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intu3=0; <CR> do <CR> { <CR> u3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(u3>3||u3<1); <CR> returnmapTest(u3); <CR> } <CR> staticTestmapTest(intu3){ <CR> TestQ5=null; <CR> switch(u3){ <CR> case1: <CR> Q5=newExam("Exam"); <CR> break; <CR> case2: <CR> Q5=newHomework("Homework"); <CR> break; <CR> case3: <CR> Q5=newReport("Report"); <CR> break; <CR> } <CR> returnQ5; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringW0){ <CR> super(W0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringu){ <CR> super(u); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleV9){ <CR> score=V9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetid(StringV9){ <CR> id=V9; <CR> } <CR> doublesw; <CR> voidsetsw(doubleV9){ <CR> sw=V9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringE2,StringA,doubleJ0,doublee9){ <CR> this.id=E2; <CR> this.name=A; <CR> this.score=J0; <CR> this.sw=e9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringV9){ <CR> name=V9; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Strings){ <CR> this.name=s; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 