 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringb2){ <CR> super(b2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intu4=0; <CR> do <CR> { <CR> u4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(u4>3||u4<1); <CR> returnmapTest(u4); <CR> } <CR> publicstaticvoidmain(String[]c7){ <CR> StringC9,l7; <CR> doubleu4,w6; <CR> System.out.println("請輸入學生學號: "); <CR> C9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> l7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> u4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> w6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentG7=newStudent(C9,l7,u4,w6); <CR> G7.setid(C9); <CR> G7.setname(l7); <CR> G7.setscore(u4); <CR> G7.setsw(w6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intu4){ <CR> TestV0=null; <CR> switch(u4){ <CR> case1: <CR> V0=newExam("Exam"); <CR> break; <CR> case2: <CR> V0=newHomework("Homework"); <CR> break; <CR> case3: <CR> V0=newReport("Report"); <CR> break; <CR> } <CR> returnV0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringA4){ <CR> super(A4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringe){ <CR> super(e); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubley){ <CR> score=y; <CR> } <CR> Stringid; <CR> Student(StringE9,StringW0,doublew5,doubleD1){ <CR> this.id=E9; <CR> this.name=W0; <CR> this.score=w5; <CR> this.sw=D1; <CR> } <CR> voidsetid(Stringy){ <CR> id=y; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> doublescore; <CR> voidsetname(Stringy){ <CR> name=y; <CR> } <CR> voidsetsw(doubley){ <CR> sw=y; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringB9){ <CR> this.name=B9; <CR> } <CR> } <CR>  <EOC> 