 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringq){ <CR> super(q); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]w0){ <CR> Stringf6,R0; <CR> doublek4,E8; <CR> System.out.println("請輸入學生學號: "); <CR> f6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> R0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> k4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> E8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX1=newStudent(f6,R0,k4,E8); <CR> X1.setid(f6); <CR> X1.setname(R0); <CR> X1.setscore(k4); <CR> X1.setsw(E8); <CR> } <CR> staticTestmapTest(intk4){ <CR> TestY3=null; <CR> switch(k4){ <CR> case1: <CR> Y3=newExam("Exam"); <CR> break; <CR> case2: <CR> Y3=newHomework("Homework"); <CR> break; <CR> case3: <CR> Y3=newReport("Report"); <CR> break; <CR> } <CR> returnY3; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intk4=0; <CR> do <CR> { <CR> k4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(k4>3||k4<1); <CR> returnmapTest(k4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE6){ <CR> super(E6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringu){ <CR> super(u); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> Stringid; <CR> doublescore; <CR> voidsetscore(doublek3){ <CR> score=k3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringl,Stringq7,doublev5,doubleS8){ <CR> this.id=l; <CR> this.name=q7; <CR> this.score=v5; <CR> this.sw=S8; <CR> } <CR> voidsetname(Stringk3){ <CR> name=k3; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublek3){ <CR> sw=k3; <CR> } <CR> voidsetid(Stringk3){ <CR> id=k3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringt0){ <CR> this.name=t0; <CR> } <CR> } <CR>  <EOC> 