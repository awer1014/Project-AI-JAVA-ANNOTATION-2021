 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringR6){ <CR> super(R6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intB1=0; <CR> do <CR> { <CR> B1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(B1>3||B1<1); <CR> returnmapTest(B1); <CR> } <CR> staticTestmapTest(intB1){ <CR> TestX5=null; <CR> switch(B1){ <CR> case1: <CR> X5=newExam("Exam"); <CR> break; <CR> case2: <CR> X5=newHomework("Homework"); <CR> break; <CR> case3: <CR> X5=newReport("Report"); <CR> break; <CR> } <CR> returnX5; <CR> } <CR> publicstaticvoidmain(String[]Q2){ <CR> Stringc6,X7; <CR> doubleB1,M7; <CR> System.out.println("請輸入學生學號: "); <CR> c6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> X7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> B1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf4=newStudent(c6,X7,B1,M7); <CR> f4.setid(c6); <CR> f4.setname(X7); <CR> f4.setscore(B1); <CR> f4.setsw(M7); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringM1){ <CR> super(M1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringQ8){ <CR> super(Q8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringM6,Stringj6,doubled5,doubleA9){ <CR> this.id=M6; <CR> this.name=j6; <CR> this.score=d5; <CR> this.sw=A9; <CR> } <CR> doublesw; <CR> Stringid; <CR> voidsetid(StringT8){ <CR> id=T8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleT8){ <CR> sw=T8; <CR> } <CR> voidsetscore(doubleT8){ <CR> score=T8; <CR> } <CR> voidsetname(StringT8){ <CR> name=T8; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringn8){ <CR> this.name=n8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 