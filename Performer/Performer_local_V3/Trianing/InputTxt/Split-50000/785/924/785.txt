 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk5){ <CR> super(k5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intz8=0; <CR> do <CR> { <CR> z8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(z8>3||z8<1); <CR> returnmapTest(z8); <CR> } <CR> staticTestmapTest(intz8){ <CR> Testt9=null; <CR> switch(z8){ <CR> case1: <CR> t9=newExam("Exam"); <CR> break; <CR> case2: <CR> t9=newHomework("Homework"); <CR> break; <CR> case3: <CR> t9=newReport("Report"); <CR> break; <CR> } <CR> returnt9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]v8){ <CR> StringD8,r2; <CR> doublez8,W2; <CR> System.out.println("請輸入學生學號: "); <CR> D8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> z8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf0=newStudent(D8,r2,z8,W2); <CR> f0.setid(D8); <CR> f0.setname(r2); <CR> f0.setscore(z8); <CR> f0.setsw(W2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringx5){ <CR> super(x5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringA8){ <CR> super(A8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubled4){ <CR> score=d4; <CR> } <CR> voidsetsw(doubled4){ <CR> sw=d4; <CR> } <CR> voidsetname(Stringd4){ <CR> name=d4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetid(Stringd4){ <CR> id=d4; <CR> } <CR> Student(Stringn4,Stringl,doubleI7,doubleY1){ <CR> this.id=n4; <CR> this.name=l; <CR> this.score=I7; <CR> this.sw=Y1; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringC){ <CR> this.name=C; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 