 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringv5){ <CR> super(v5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]v4){ <CR> Stringq8,Q; <CR> doubleJ3,n2; <CR> System.out.println("請輸入學生學號: "); <CR> q8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> J3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX1=newStudent(q8,Q,J3,n2); <CR> X1.setid(q8); <CR> X1.setname(Q); <CR> X1.setscore(J3); <CR> X1.setsw(n2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intJ3){ <CR> TestO4=null; <CR> switch(J3){ <CR> case1: <CR> O4=newExam("Exam"); <CR> break; <CR> case2: <CR> O4=newHomework("Homework"); <CR> break; <CR> case3: <CR> O4=newReport("Report"); <CR> break; <CR> } <CR> returnO4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intJ3=0; <CR> do <CR> { <CR> J3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(J3>3||J3<1); <CR> returnmapTest(J3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringT4){ <CR> super(T4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringk9){ <CR> super(k9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doublej3){ <CR> sw=j3; <CR> } <CR> doublesw; <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Student(Stringw8,Stringb0,doubleB2,doubleh9){ <CR> this.id=w8; <CR> this.name=b0; <CR> this.score=B2; <CR> this.sw=h9; <CR> } <CR> Stringid; <CR> voidsetid(Stringj3){ <CR> id=j3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringj3){ <CR> name=j3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublej3){ <CR> score=j3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringG7){ <CR> this.name=G7; <CR> } <CR> } <CR>  <EOC> 