 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringf7){ <CR> super(f7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intG2){ <CR> Testw8=null; <CR> switch(G2){ <CR> case1: <CR> w8=newExam("Exam"); <CR> break; <CR> case2: <CR> w8=newHomework("Homework"); <CR> break; <CR> case3: <CR> w8=newReport("Report"); <CR> break; <CR> } <CR> returnw8; <CR> } <CR> publicstaticvoidmain(String[]m1){ <CR> Stringr7,x6; <CR> doubleG2,b3; <CR> System.out.println("請輸入學生學號: "); <CR> r7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> x6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> b3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX5=newStudent(r7,x6,G2,b3); <CR> X5.setid(r7); <CR> X5.setname(x6); <CR> X5.setscore(G2); <CR> X5.setsw(b3); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG2=0; <CR> do <CR> { <CR> G2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G2>3||G2<1); <CR> returnmapTest(G2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringx9){ <CR> super(x9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP3){ <CR> super(P3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringz9){ <CR> name=z9; <CR> } <CR> Stringid; <CR> voidsetid(Stringz9){ <CR> id=z9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(StringI6,Stringn9,doubleZ6,doubleQ8){ <CR> this.id=I6; <CR> this.name=n9; <CR> this.score=Z6; <CR> this.sw=Q8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetscore(doublez9){ <CR> score=z9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublez9){ <CR> sw=z9; <CR> } <CR> Stringname; <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk2){ <CR> this.name=k2; <CR> } <CR> } <CR>  <EOC> 