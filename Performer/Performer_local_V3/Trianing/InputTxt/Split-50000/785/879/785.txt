 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringn9){ <CR> super(n9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]q0){ <CR> StringJ,M7; <CR> doublej0,N5; <CR> System.out.println("請輸入學生學號: "); <CR> J=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> M7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> j0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentS4=newStudent(J,M7,j0,N5); <CR> S4.setid(J); <CR> S4.setname(M7); <CR> S4.setscore(j0); <CR> S4.setsw(N5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intj0){ <CR> Testm4=null; <CR> switch(j0){ <CR> case1: <CR> m4=newExam("Exam"); <CR> break; <CR> case2: <CR> m4=newHomework("Homework"); <CR> break; <CR> case3: <CR> m4=newReport("Report"); <CR> break; <CR> } <CR> returnm4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intj0=0; <CR> do <CR> { <CR> j0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(j0>3||j0<1); <CR> returnmapTest(j0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringM5){ <CR> super(M5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR8){ <CR> super(R8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> voidsetid(StringC1){ <CR> id=C1; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleC1){ <CR> score=C1; <CR> } <CR> Student(StringX,Stringe6,doubleg2,doublen){ <CR> this.id=X; <CR> this.name=e6; <CR> this.score=g2; <CR> this.sw=n; <CR> } <CR> voidsetname(StringC1){ <CR> name=C1; <CR> } <CR> voidsetsw(doubleC1){ <CR> sw=C1; <CR> } <CR> doublescore; <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringx){ <CR> this.name=x; <CR> } <CR> } <CR>  <EOC> 