 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk1){ <CR> super(k1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intK7=0; <CR> do <CR> { <CR> K7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(K7>3||K7<1); <CR> returnmapTest(K7); <CR> } <CR> staticTestmapTest(intK7){ <CR> TestE6=null; <CR> switch(K7){ <CR> case1: <CR> E6=newExam("Exam"); <CR> break; <CR> case2: <CR> E6=newHomework("Homework"); <CR> break; <CR> case3: <CR> E6=newReport("Report"); <CR> break; <CR> } <CR> returnE6; <CR> } <CR> publicstaticvoidmain(String[]W9){ <CR> StringA,k3; <CR> doubleK7,J4; <CR> System.out.println("請輸入學生學號: "); <CR> A=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> k3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> K7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> J4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ7=newStudent(A,k3,K7,J4); <CR> Z7.setid(A); <CR> Z7.setname(k3); <CR> Z7.setscore(K7); <CR> Z7.setsw(J4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringY8){ <CR> super(Y8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringC0){ <CR> super(C0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleH){ <CR> sw=H; <CR> } <CR> Student(Stringc6,StringW0,doubleF4,doubleG1){ <CR> this.id=c6; <CR> this.name=W0; <CR> this.score=F4; <CR> this.sw=G1; <CR> } <CR> voidsetname(StringH){ <CR> name=H; <CR> } <CR> voidsetid(StringH){ <CR> id=H; <CR> } <CR> Stringname; <CR> voidsetscore(doubleH){ <CR> score=H; <CR> } <CR> Stringid; <CR> doublescore; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringo){ <CR> this.name=o; <CR> } <CR> } <CR>  <EOC> 