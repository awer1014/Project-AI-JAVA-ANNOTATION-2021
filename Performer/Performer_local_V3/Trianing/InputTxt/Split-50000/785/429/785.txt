 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS3){ <CR> super(S3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]Y4){ <CR> StringH9,l; <CR> doubleD3,W2; <CR> System.out.println("請輸入學生學號: "); <CR> H9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> l=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> D3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentT=newStudent(H9,l,D3,W2); <CR> T.setid(H9); <CR> T.setname(l); <CR> T.setscore(D3); <CR> T.setsw(W2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intD3=0; <CR> do <CR> { <CR> D3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(D3>3||D3<1); <CR> returnmapTest(D3); <CR> } <CR> staticTestmapTest(intD3){ <CR> TestT0=null; <CR> switch(D3){ <CR> case1: <CR> T0=newExam("Exam"); <CR> break; <CR> case2: <CR> T0=newHomework("Homework"); <CR> break; <CR> case3: <CR> T0=newReport("Report"); <CR> break; <CR> } <CR> returnT0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringG4){ <CR> super(G4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringL7){ <CR> super(L7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> Stringid; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleS3){ <CR> sw=S3; <CR> } <CR> voidsetscore(doubleS3){ <CR> score=S3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringS3){ <CR> name=S3; <CR> } <CR> doublesw; <CR> voidsetid(StringS3){ <CR> id=S3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringh9,StringX6,doubleO1,doublev8){ <CR> this.id=h9; <CR> this.name=X6; <CR> this.score=O1; <CR> this.sw=v8; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringR){ <CR> this.name=R; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 