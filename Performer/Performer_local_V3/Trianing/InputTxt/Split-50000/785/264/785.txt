 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo3){ <CR> super(o3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intw5=0; <CR> do <CR> { <CR> w5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(w5>3||w5<1); <CR> returnmapTest(w5); <CR> } <CR> staticTestmapTest(intw5){ <CR> Testt2=null; <CR> switch(w5){ <CR> case1: <CR> t2=newExam("Exam"); <CR> break; <CR> case2: <CR> t2=newHomework("Homework"); <CR> break; <CR> case3: <CR> t2=newReport("Report"); <CR> break; <CR> } <CR> returnt2; <CR> } <CR> publicstaticvoidmain(String[]w8){ <CR> StringO2,u5; <CR> doublew5,a2; <CR> System.out.println("請輸入學生學號: "); <CR> O2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> u5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> w5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> a2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP1=newStudent(O2,u5,w5,a2); <CR> P1.setid(O2); <CR> P1.setname(u5); <CR> P1.setscore(w5); <CR> P1.setsw(a2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF3){ <CR> super(F3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringX6){ <CR> super(X6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringg2){ <CR> name=g2; <CR> } <CR> voidsetscore(doubleg2){ <CR> score=g2; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleg2){ <CR> sw=g2; <CR> } <CR> doublesw; <CR> Stringid; <CR> Student(StringS9,StringZ,doubleG5,doublef9){ <CR> this.id=S9; <CR> this.name=Z; <CR> this.score=G5; <CR> this.sw=f9; <CR> } <CR> voidsetid(Stringg2){ <CR> id=g2; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX){ <CR> this.name=X; <CR> } <CR> } <CR>  <EOC> 