 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS5){ <CR> super(S5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intx6=0; <CR> do <CR> { <CR> x6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(x6>3||x6<1); <CR> returnmapTest(x6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]B9){ <CR> StringU,P9; <CR> doublex6,r3; <CR> System.out.println("請輸入學生學號: "); <CR> U=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> P9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> x6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> r3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentL3=newStudent(U,P9,x6,r3); <CR> L3.setid(U); <CR> L3.setname(P9); <CR> L3.setscore(x6); <CR> L3.setsw(r3); <CR> } <CR> staticTestmapTest(intx6){ <CR> Testi9=null; <CR> switch(x6){ <CR> case1: <CR> i9=newExam("Exam"); <CR> break; <CR> case2: <CR> i9=newHomework("Homework"); <CR> break; <CR> case3: <CR> i9=newReport("Report"); <CR> break; <CR> } <CR> returni9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringL1){ <CR> super(L1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR6){ <CR> super(R6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> Stringid; <CR> voidsetsw(doubled0){ <CR> sw=d0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringd2,StringW6,doubleU6,doubleV3){ <CR> this.id=d2; <CR> this.name=W6; <CR> this.score=U6; <CR> this.sw=V3; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringd0){ <CR> id=d0; <CR> } <CR> Stringname; <CR> voidsetname(Stringd0){ <CR> name=d0; <CR> } <CR> voidsetscore(doubled0){ <CR> score=d0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringz2){ <CR> this.name=z2; <CR> } <CR> } <CR>  <EOC> 