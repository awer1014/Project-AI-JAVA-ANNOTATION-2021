 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringW4){ <CR> super(W4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intn9=0; <CR> do <CR> { <CR> n9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(n9>3||n9<1); <CR> returnmapTest(n9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]m1){ <CR> Stringc6,A2; <CR> doublen9,F1; <CR> System.out.println("請輸入學生學號: "); <CR> c6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> A2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> n9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentc3=newStudent(c6,A2,n9,F1); <CR> c3.setid(c6); <CR> c3.setname(A2); <CR> c3.setscore(n9); <CR> c3.setsw(F1); <CR> } <CR> staticTestmapTest(intn9){ <CR> Testt=null; <CR> switch(n9){ <CR> case1: <CR> t=newExam("Exam"); <CR> break; <CR> case2: <CR> t=newHomework("Homework"); <CR> break; <CR> case3: <CR> t=newReport("Report"); <CR> break; <CR> } <CR> returnt; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringV9){ <CR> super(V9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringk2){ <CR> super(k2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringv){ <CR> name=v; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublesw; <CR> Student(Stringa9,Stringo,doubleg0,doubleo1){ <CR> this.id=a9; <CR> this.name=o; <CR> this.score=g0; <CR> this.sw=o1; <CR> } <CR> voidsetscore(doublev){ <CR> score=v; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublev){ <CR> sw=v; <CR> } <CR> doublescore; <CR> voidsetid(Stringv){ <CR> id=v; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringv){ <CR> this.name=v; <CR> } <CR> } <CR>  <EOC> 