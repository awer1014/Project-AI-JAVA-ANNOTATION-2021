 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr5){ <CR> super(r5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intU8){ <CR> Testg3=null; <CR> switch(U8){ <CR> case1: <CR> g3=newExam("Exam"); <CR> break; <CR> case2: <CR> g3=newHomework("Homework"); <CR> break; <CR> case3: <CR> g3=newReport("Report"); <CR> break; <CR> } <CR> returng3; <CR> } <CR> publicstaticvoidmain(String[]z6){ <CR> Stringu,L9; <CR> doubleU8,R0; <CR> System.out.println("請輸入學生學號: "); <CR> u=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> L9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studento4=newStudent(u,L9,U8,R0); <CR> o4.setid(u); <CR> o4.setname(L9); <CR> o4.setscore(U8); <CR> o4.setsw(R0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU8=0; <CR> do <CR> { <CR> U8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U8>3||U8<1); <CR> returnmapTest(U8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringC8){ <CR> super(C8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringH8){ <CR> super(H8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> Student(StringR,Stringk4,doubleI2,doubleD1){ <CR> this.id=R; <CR> this.name=k4; <CR> this.score=I2; <CR> this.sw=D1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doublex2){ <CR> score=x2; <CR> } <CR> voidsetname(Stringx2){ <CR> name=x2; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublex2){ <CR> sw=x2; <CR> } <CR> doublescore; <CR> voidsetid(Stringx2){ <CR> id=x2; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringd4){ <CR> this.name=d4; <CR> } <CR> } <CR>  <EOC> 