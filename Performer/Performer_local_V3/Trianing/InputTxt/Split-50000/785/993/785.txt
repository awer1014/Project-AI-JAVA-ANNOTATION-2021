 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringj8){ <CR> super(j8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intw5=0; <CR> do <CR> { <CR> w5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(w5>3||w5<1); <CR> returnmapTest(w5); <CR> } <CR> publicstaticvoidmain(String[]U3){ <CR> Stringy0,I; <CR> doublew5,N5; <CR> System.out.println("請輸入學生學號: "); <CR> y0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> I=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> w5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentO9=newStudent(y0,I,w5,N5); <CR> O9.setid(y0); <CR> O9.setname(I); <CR> O9.setscore(w5); <CR> O9.setsw(N5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intw5){ <CR> TestM3=null; <CR> switch(w5){ <CR> case1: <CR> M3=newExam("Exam"); <CR> break; <CR> case2: <CR> M3=newHomework("Homework"); <CR> break; <CR> case3: <CR> M3=newReport("Report"); <CR> break; <CR> } <CR> returnM3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringo9){ <CR> super(o9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Strings8){ <CR> super(s8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> Student(Stringh1,Stringa,doubleL6,doubleS7){ <CR> this.id=h1; <CR> this.name=a; <CR> this.score=L6; <CR> this.sw=S7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetsw(doubleu2){ <CR> sw=u2; <CR> } <CR> voidsetid(Stringu2){ <CR> id=u2; <CR> } <CR> voidsetscore(doubleu2){ <CR> score=u2; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringu2){ <CR> name=u2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringX){ <CR> this.name=X; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 