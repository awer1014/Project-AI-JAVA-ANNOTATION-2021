 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk5){ <CR> super(k5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intn8=0; <CR> do <CR> { <CR> n8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(n8>3||n8<1); <CR> returnmapTest(n8); <CR> } <CR> publicstaticvoidmain(String[]H6){ <CR> Strings3,t3; <CR> doublen8,c0; <CR> System.out.println("請輸入學生學號: "); <CR> s3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> t3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> n8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> c0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Students8=newStudent(s3,t3,n8,c0); <CR> s8.setid(s3); <CR> s8.setname(t3); <CR> s8.setscore(n8); <CR> s8.setsw(c0); <CR> } <CR> staticTestmapTest(intn8){ <CR> Testw8=null; <CR> switch(n8){ <CR> case1: <CR> w8=newExam("Exam"); <CR> break; <CR> case2: <CR> w8=newHomework("Homework"); <CR> break; <CR> case3: <CR> w8=newReport("Report"); <CR> break; <CR> } <CR> returnw8; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringr7){ <CR> super(r7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringr2){ <CR> super(r2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublec1){ <CR> sw=c1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> voidsetname(Stringc1){ <CR> name=c1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> voidsetid(Stringc1){ <CR> id=c1; <CR> } <CR> doublesw; <CR> Student(StringN4,Stringc0,doubleB1,doubleb2){ <CR> this.id=N4; <CR> this.name=c0; <CR> this.score=B1; <CR> this.sw=b2; <CR> } <CR> voidsetscore(doublec1){ <CR> score=c1; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringF4){ <CR> this.name=F4; <CR> } <CR> } <CR>  <EOC> 