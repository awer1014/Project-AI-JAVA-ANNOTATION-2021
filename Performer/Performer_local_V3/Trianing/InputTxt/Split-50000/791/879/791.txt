 <BOC> abstractpublicclassEvaluation{ <CR> abstractpublicvoidprinta(); <CR> privateStringsid,name,type; <CR> protecteddoublegrade,gradepc; <CR> publicvoidprint(){ <CR> System.out.println("種類 : "+type); <CR> System.out.println("學生學號 : "+sid); <CR> System.out.println("學生姓名 : "+name); <CR> System.out.println("成績 : "+grade); <CR> System.out.println("成績比重 : "+gradepc); <CR> } <CR> publicEvaluation(StringT7,Stringh0,StringO8,doubleP8,doublej1){ <CR> sid=T7; <CR> name=h0; <CR> type=O8; <CR> this.grade=P8; <CR> this.gradepc=j1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassExamextendsEvaluation{ <CR> publicvoidprinta(){ <CR> System.out.println("考試日期: "+date); <CR> System.out.println("考試範圍: "+range); <CR> } <CR> Stringdate; <CR> Stringrange; <CR> publicExam(StringE9,Stringd5,StringY9,doublea4,doubleK9){ <CR> super(E9,d5,Y9,a4,K9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]D2){ <CR> ScannerP9=newScanner(System.in); <CR> System.out.println("請輸入種類 1(測驗), 2(作業), 3(心得報告) : "); <CR> intB8=0; <CR> do <CR> { <CR> B8=P9.nextInt(); <CR> } <CR> while(B8>3||B8<1); <CR> returnmapEvaluation(B8); <CR> } <CR> staticEvaluationmapEvaluation(intB8){ <CR> Evaluationa0=null; <CR> switch(B8){ <CR> case1: <CR> a0=newExam("Exam"); <CR> break; <CR> } <CR> } <CR> } <CR>  <EOC> 