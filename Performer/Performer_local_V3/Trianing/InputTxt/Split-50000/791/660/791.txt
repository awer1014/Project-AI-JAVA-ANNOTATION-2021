 <BOC> abstractpublicclassEvaluation{ <CR> privateStringsid,name,type; <CR> protecteddoublegrade,gradepc; <CR> publicvoidprint(){ <CR> System.out.println("種類 : "+type); <CR> System.out.println("學生學號 : "+sid); <CR> System.out.println("學生姓名 : "+name); <CR> System.out.println("成績 : "+grade); <CR> System.out.println("成績比重 : "+gradepc); <CR> } <CR> abstractpublicvoidprinta(); <CR> publicEvaluation(StringH1,Stringw4,Stringu9,doubleb4,doublec0){ <CR> sid=H1; <CR> name=w4; <CR> type=u9; <CR> this.grade=b4; <CR> this.gradepc=c0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassExamextendsEvaluation{ <CR> Stringrange; <CR> publicExam(Strings1,StringN4,StringE0,doubles5,doubleE4){ <CR> super(s1,N4,E0,s5,E4); <CR> } <CR> publicvoidprinta(){ <CR> System.out.println("考試日期: "+date); <CR> System.out.println("考試範圍: "+range); <CR> } <CR> Stringdate; <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]U){ <CR> ScannerT=newScanner(System.in); <CR> System.out.println("請輸入種類 1(測驗), 2(作業), 3(心得報告) : "); <CR> intD9=0; <CR> do <CR> { <CR> D9=T.nextInt(); <CR> } <CR> while(D9>3||D9<1); <CR> returnmapEvaluation(D9); <CR> } <CR> staticEvaluationmapEvaluation(intD9){ <CR> EvaluationV0=null; <CR> switch(D9){ <CR> case1: <CR> V0=newExam("Exam"); <CR> break; <CR> } <CR> } <CR> } <CR>  <EOC> 