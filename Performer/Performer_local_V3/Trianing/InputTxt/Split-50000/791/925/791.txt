 <BOC> abstractpublicclassEvaluation{ <CR> privateStringsid,name,type; <CR> publicvoidprint(){ <CR> System.out.println("種類 : "+type); <CR> System.out.println("學生學號 : "+sid); <CR> System.out.println("學生姓名 : "+name); <CR> System.out.println("成績 : "+grade); <CR> System.out.println("成績比重 : "+gradepc); <CR> } <CR> abstractpublicvoidprinta(); <CR> publicEvaluation(StringV7,Stringj2,StringO9,doubleo6,doublex1){ <CR> sid=V7; <CR> name=j2; <CR> type=O9; <CR> this.grade=o6; <CR> this.gradepc=x1; <CR> } <CR> protecteddoublegrade,gradepc; <CR> } <CR>  <EOC>  <BOC> publicclassExamextendsEvaluation{ <CR> Stringrange; <CR> Stringdate; <CR> publicExam(Stringj3,StringJ8,StringI9,doubleK9,doubleU6){ <CR> super(j3,J8,I9,K9,U6); <CR> } <CR> publicvoidprinta(){ <CR> System.out.println("考試日期: "+date); <CR> System.out.println("考試範圍: "+range); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]l3){ <CR> Scannerb3=newScanner(System.in); <CR> System.out.println("請輸入種類 1(測驗), 2(作業), 3(心得報告) : "); <CR> intf=0; <CR> do <CR> { <CR> f=b3.nextInt(); <CR> } <CR> while(f>3||f<1); <CR> returnmapEvaluation(f); <CR> } <CR> staticEvaluationmapEvaluation(intf){ <CR> EvaluationX3=null; <CR> switch(f){ <CR> case1: <CR> X3=newExam("Exam"); <CR> break; <CR> } <CR> } <CR> } <CR>  <EOC> 