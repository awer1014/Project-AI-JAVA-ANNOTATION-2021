 <BOC> abstractpublicclassEvaluation{ <CR> publicvoidprint(){ <CR> System.out.println("種類 : "+type); <CR> System.out.println("學生學號 : "+sid); <CR> System.out.println("學生姓名 : "+name); <CR> System.out.println("成績 : "+grade); <CR> System.out.println("成績比重 : "+gradepc); <CR> } <CR> abstractpublicvoidprinta(); <CR> publicEvaluation(StringF7,StringZ4,Stringb4,doubleJ0,doubleH7){ <CR> sid=F7; <CR> name=Z4; <CR> type=b4; <CR> this.grade=J0; <CR> this.gradepc=H7; <CR> } <CR> privateStringsid,name,type; <CR> protecteddoublegrade,gradepc; <CR> } <CR>  <EOC>  <BOC> publicclassExamextendsEvaluation{ <CR> Stringdate; <CR> publicExam(StringT8,Stringn0,Stringp5,doubleZ5,doubleP7){ <CR> super(T8,n0,p5,Z5,P7); <CR> } <CR> publicvoidprinta(){ <CR> System.out.println("考試日期: "+date); <CR> System.out.println("考試範圍: "+range); <CR> } <CR> Stringrange; <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]n7){ <CR> ScannerN5=newScanner(System.in); <CR> System.out.println("請輸入種類 1(測驗), 2(作業), 3(心得報告) : "); <CR> intX9=0; <CR> do <CR> { <CR> X9=N5.nextInt(); <CR> } <CR> while(X9>3||X9<1); <CR> returnmapEvaluation(X9); <CR> } <CR> staticEvaluationmapEvaluation(intX9){ <CR> Evaluationx3=null; <CR> switch(X9){ <CR> case1: <CR> x3=newExam("Exam"); <CR> break; <CR> } <CR> } <CR> } <CR>  <EOC> 