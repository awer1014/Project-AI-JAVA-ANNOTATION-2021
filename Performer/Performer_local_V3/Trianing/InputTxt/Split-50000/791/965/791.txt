 <BOC> abstractpublicclassEvaluation{ <CR> publicvoidprint(){ <CR> System.out.println("種類 : "+type); <CR> System.out.println("學生學號 : "+sid); <CR> System.out.println("學生姓名 : "+name); <CR> System.out.println("成績 : "+grade); <CR> System.out.println("成績比重 : "+gradepc); <CR> } <CR> abstractpublicvoidprinta(); <CR> privateStringsid,name,type; <CR> protecteddoublegrade,gradepc; <CR> publicEvaluation(Strings1,Stringn6,StringN,doubleF0,doublev9){ <CR> sid=s1; <CR> name=n6; <CR> type=N; <CR> this.grade=F0; <CR> this.gradepc=v9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassExamextendsEvaluation{ <CR> publicvoidprinta(){ <CR> System.out.println("考試日期: "+date); <CR> System.out.println("考試範圍: "+range); <CR> } <CR> Stringdate; <CR> publicExam(Stringe3,Stringi2,StringU7,doubleR4,doubleQ){ <CR> super(e3,i2,U7,R4,Q); <CR> } <CR> Stringrange; <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]D6){ <CR> Scannero7=newScanner(System.in); <CR> System.out.println("請輸入種類 1(測驗), 2(作業), 3(心得報告) : "); <CR> intQ2=0; <CR> do <CR> { <CR> Q2=o7.nextInt(); <CR> } <CR> while(Q2>3||Q2<1); <CR> returnmapEvaluation(Q2); <CR> } <CR> staticEvaluationmapEvaluation(intQ2){ <CR> Evaluationf4=null; <CR> switch(Q2){ <CR> case1: <CR> f4=newExam("Exam"); <CR> break; <CR> } <CR> } <CR> } <CR>  <EOC> 