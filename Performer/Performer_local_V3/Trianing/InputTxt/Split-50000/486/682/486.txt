 <BOC> publicclassPet{ <CR> voidspeak(StringR){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> intcount=2; <CR> Pet(StringQ8,StringR,StringW3){ <CR> Q8=p; <CR> R=n; <CR> W3=t; <CR> } <CR> voiddisplay(StringQ8,StringR,StringW3){ <CR> Q8=p; <CR> R=n; <CR> W3=t; <CR> } <CR> Stringname; <CR> Stringtype; <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringK5,StringV7){ <CR> StringK5; <CR> stringV7; <CR> } <CR> voiddisplay(StringK5,StringV7){ <CR> StringK5=K5; <CR> StringV7=V7; <CR> } <CR> publicstaticvoidmain(String[]g5){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]j4){ <CR> StringA3; <CR> intJ5; <CR> J5=A3.length(); <CR> System.out.print(J5); <CR> } <CR> } <CR>  <EOC> 