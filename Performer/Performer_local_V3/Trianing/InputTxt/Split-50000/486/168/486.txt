 <BOC> publicclassPet{ <CR> intn; <CR> voidspeak(StringM9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> voiddisplay(StringH5,StringM9,Stringj){ <CR> H5=p; <CR> M9=n; <CR> j=t; <CR> } <CR> Stringpid; <CR> intcount=2; <CR> Pet(StringH5,StringM9,Stringj){ <CR> H5=p; <CR> M9=n; <CR> j=t; <CR> } <CR> Stringtype; <CR> Stringname; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(StringV4,StringQ3){ <CR> StringV4=V4; <CR> StringQ3=Q3; <CR> } <CR> Stringtel; <CR> publicstaticvoidmain(String[]p3){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> Keeper(StringV4,StringQ3){ <CR> StringV4; <CR> stringQ3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]A8){ <CR> Stringk3; <CR> intq2; <CR> q2=k3.length(); <CR> System.out.print(q2); <CR> } <CR> } <CR>  <EOC> 