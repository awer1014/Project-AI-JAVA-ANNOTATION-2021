 <BOC> publicclassPet{ <CR> Pet(Stringm2,StringI8,Stringk){ <CR> m2=p; <CR> I8=n; <CR> k=t; <CR> } <CR> voiddisplay(Stringm2,StringI8,Stringk){ <CR> m2=p; <CR> I8=n; <CR> k=t; <CR> } <CR> intcount=2; <CR> intn; <CR> Stringname; <CR> Stringpid; <CR> voidspeak(StringI8){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringU6,StringZ4){ <CR> StringU6; <CR> stringZ4; <CR> } <CR> Stringtel; <CR> voiddisplay(StringU6,StringZ4){ <CR> StringU6=U6; <CR> StringZ4=Z4; <CR> } <CR> publicstaticvoidmain(String[]x9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]H){ <CR> StringK7; <CR> intq0; <CR> q0=K7.length(); <CR> System.out.print(q0); <CR> } <CR> } <CR>  <EOC> 