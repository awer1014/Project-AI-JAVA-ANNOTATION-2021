 <BOC> publicclassPet{ <CR> intn; <CR> voidspeak(Stringu){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> voiddisplay(Stringb1,Stringu,Stringm2){ <CR> b1=p; <CR> u=n; <CR> m2=t; <CR> } <CR> intcount=2; <CR> Stringname; <CR> Stringpid; <CR> Pet(Stringb1,Stringu,Stringm2){ <CR> b1=p; <CR> u=n; <CR> m2=t; <CR> } <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(StringG9,StringV0){ <CR> StringG9=G9; <CR> StringV0=V0; <CR> } <CR> Keeper(StringG9,StringV0){ <CR> StringG9; <CR> stringV0; <CR> } <CR> Stringtel; <CR> Stringid; <CR> publicstaticvoidmain(String[]Y9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]g0){ <CR> Stringp3; <CR> intq8; <CR> q8=p3.length(); <CR> System.out.print(q8); <CR> } <CR> } <CR>  <EOC> 