 <BOC> publicclassPet{ <CR> intcount=2; <CR> intn; <CR> voiddisplay(StringE9,StringL8,StringA1){ <CR> E9=p; <CR> L8=n; <CR> A1=t; <CR> } <CR> Pet(StringE9,StringL8,StringA1){ <CR> E9=p; <CR> L8=n; <CR> A1=t; <CR> } <CR> Stringtype; <CR> Stringname; <CR> voidspeak(StringL8){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(StringL7,StringN8){ <CR> StringL7=L7; <CR> StringN8=N8; <CR> } <CR> publicstaticvoidmain(String[]u7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(StringL7,StringN8){ <CR> StringL7; <CR> stringN8; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]X3){ <CR> Stringk8; <CR> inte0; <CR> e0=k8.length(); <CR> System.out.print(e0); <CR> } <CR> } <CR>  <EOC> 