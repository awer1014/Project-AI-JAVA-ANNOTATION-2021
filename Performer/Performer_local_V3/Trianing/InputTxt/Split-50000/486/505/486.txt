 <BOC> publicclassPet{ <CR> Stringtype; <CR> Pet(Stringx1,StringG7,StringS4){ <CR> x1=p; <CR> G7=n; <CR> S4=t; <CR> } <CR> intcount=2; <CR> Stringpid; <CR> voiddisplay(Stringx1,StringG7,StringS4){ <CR> x1=p; <CR> G7=n; <CR> S4=t; <CR> } <CR> Stringname; <CR> intn; <CR> voidspeak(StringG7){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringY4,StringJ4){ <CR> StringY4; <CR> stringJ4; <CR> } <CR> publicstaticvoidmain(String[]p){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> Stringtel; <CR> voiddisplay(StringY4,StringJ4){ <CR> StringY4=Y4; <CR> StringJ4=J4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]T8){ <CR> Stringq5; <CR> intR9; <CR> R9=q5.length(); <CR> System.out.print(R9); <CR> } <CR> } <CR>  <EOC> 