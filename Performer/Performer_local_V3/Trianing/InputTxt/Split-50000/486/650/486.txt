 <BOC> publicclassPet{ <CR> Stringname; <CR> Stringtype; <CR> voiddisplay(StringF1,Stringn3,StringM4){ <CR> F1=p; <CR> n3=n; <CR> M4=t; <CR> } <CR> Stringpid; <CR> intcount=2; <CR> Pet(StringF1,Stringn3,StringM4){ <CR> F1=p; <CR> n3=n; <CR> M4=t; <CR> } <CR> voidspeak(Stringn3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Stringtel; <CR> voiddisplay(Stringz1,StringH1){ <CR> Stringz1=z1; <CR> StringH1=H1; <CR> } <CR> Stringid; <CR> Keeper(Stringz1,StringH1){ <CR> Stringz1; <CR> stringH1; <CR> } <CR> publicstaticvoidmain(String[]d6){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]g7){ <CR> StringL2; <CR> intr9; <CR> r9=L2.length(); <CR> System.out.print(r9); <CR> } <CR> } <CR>  <EOC> 