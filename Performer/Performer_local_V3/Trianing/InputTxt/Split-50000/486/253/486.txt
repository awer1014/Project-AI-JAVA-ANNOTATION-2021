 <BOC> publicclassPet{ <CR> Pet(StringI3,StringA5,StringR4){ <CR> I3=p; <CR> A5=n; <CR> R4=t; <CR> } <CR> intn; <CR> Stringname; <CR> Stringpid; <CR> voiddisplay(StringI3,StringA5,StringR4){ <CR> I3=p; <CR> A5=n; <CR> R4=t; <CR> } <CR> intcount=2; <CR> voidspeak(StringA5){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> Keeper(Stringg6,Stringx9){ <CR> Stringg6; <CR> stringx9; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]I2){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> voiddisplay(Stringg6,Stringx9){ <CR> Stringg6=g6; <CR> Stringx9=x9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]k6){ <CR> Stringx5; <CR> intQ1; <CR> Q1=x5.length(); <CR> System.out.print(Q1); <CR> } <CR> } <CR>  <EOC> 