 <BOC> publicclassPet{ <CR> Stringpid; <CR> intn; <CR> Pet(Stringr6,StringU9,StringW3){ <CR> r6=p; <CR> U9=n; <CR> W3=t; <CR> } <CR> intcount=2; <CR> voiddisplay(Stringr6,StringU9,StringW3){ <CR> r6=p; <CR> U9=n; <CR> W3=t; <CR> } <CR> Stringname; <CR> voidspeak(StringU9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(Stringt4,StringX){ <CR> Stringt4=t4; <CR> StringX=X; <CR> } <CR> Stringid; <CR> Keeper(Stringt4,StringX){ <CR> Stringt4; <CR> stringX; <CR> } <CR> publicstaticvoidmain(String[]i0){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]G2){ <CR> Stringr0; <CR> intg8; <CR> g8=r0.length(); <CR> System.out.print(g8); <CR> } <CR> } <CR>  <EOC> 