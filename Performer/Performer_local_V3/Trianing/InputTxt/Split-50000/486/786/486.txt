 <BOC> publicclassPet{ <CR> voidspeak(Stringn1){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringtype; <CR> intn; <CR> voiddisplay(Stringy8,Stringn1,Stringe3){ <CR> y8=p; <CR> n1=n; <CR> e3=t; <CR> } <CR> intcount=2; <CR> Pet(Stringy8,Stringn1,Stringe3){ <CR> y8=p; <CR> n1=n; <CR> e3=t; <CR> } <CR> Stringpid; <CR> Stringname; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringV0,StringX0){ <CR> StringV0; <CR> stringX0; <CR> } <CR> publicstaticvoidmain(String[]H5){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> voiddisplay(StringV0,StringX0){ <CR> StringV0=V0; <CR> StringX0=X0; <CR> } <CR> Stringid; <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]Q2){ <CR> StringQ3; <CR> intF5; <CR> F5=Q3.length(); <CR> System.out.print(F5); <CR> } <CR> } <CR>  <EOC> 