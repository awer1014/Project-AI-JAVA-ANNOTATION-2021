 <BOC> publicclassPet{ <CR> voiddisplay(StringC1,Stringk1,StringP){ <CR> C1=p; <CR> k1=n; <CR> P=t; <CR> } <CR> Stringname; <CR> Pet(StringC1,Stringk1,StringP){ <CR> C1=p; <CR> k1=n; <CR> P=t; <CR> } <CR> voidspeak(Stringk1){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intcount=2; <CR> Stringtype; <CR> intn; <CR> Stringpid; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(Stringm9,Stringv6){ <CR> Stringm9=m9; <CR> Stringv6=v6; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]K5){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Keeper(Stringm9,Stringv6){ <CR> Stringm9; <CR> stringv6; <CR> } <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]g4){ <CR> StringN6; <CR> intU3; <CR> U3=N6.length(); <CR> System.out.print(U3); <CR> } <CR> } <CR>  <EOC> 