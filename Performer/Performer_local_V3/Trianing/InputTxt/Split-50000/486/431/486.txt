 <BOC> publicclassPet{ <CR> Stringtype; <CR> voidspeak(Stringx9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> intn; <CR> Pet(Stringl7,Stringx9,Strings4){ <CR> l7=p; <CR> x9=n; <CR> s4=t; <CR> } <CR> Stringname; <CR> voiddisplay(Stringl7,Stringx9,Strings4){ <CR> l7=p; <CR> x9=n; <CR> s4=t; <CR> } <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> Keeper(Stringn8,Stringn7){ <CR> Stringn8; <CR> stringn7; <CR> } <CR> Stringtel; <CR> voiddisplay(Stringn8,Stringn7){ <CR> Stringn8=n8; <CR> Stringn7=n7; <CR> } <CR> publicstaticvoidmain(String[]O9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]m0){ <CR> Stringd2; <CR> intC; <CR> C=d2.length(); <CR> System.out.print(C); <CR> } <CR> } <CR>  <EOC> 