 <BOC> publicclassPet{ <CR> Stringtype; <CR> Stringname; <CR> intn; <CR> voidspeak(Stringk3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> voiddisplay(StringS1,Stringk3,Stringg){ <CR> S1=p; <CR> k3=n; <CR> g=t; <CR> } <CR> intcount=2; <CR> Stringpid; <CR> Pet(StringS1,Stringk3,Stringg){ <CR> S1=p; <CR> k3=n; <CR> g=t; <CR> } <CR> } <CR> publicclassKeeper{ <CR> Stringtel; <CR> voiddisplay(StringX5,Stringv4){ <CR> StringX5=X5; <CR> Stringv4=v4; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]v7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Keeper(StringX5,Stringv4){ <CR> StringX5; <CR> stringv4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]x){ <CR> StringH4; <CR> intY9; <CR> Y9=H4.length(); <CR> System.out.print(Y9); <CR> } <CR> } <CR>  <EOC> 