 <BOC> publicclassPet{ <CR> intn; <CR> intcount=2; <CR> voiddisplay(StringL2,StringO0,Stringm2){ <CR> L2=p; <CR> O0=n; <CR> m2=t; <CR> } <CR> Pet(StringL2,StringO0,Stringm2){ <CR> L2=p; <CR> O0=n; <CR> m2=t; <CR> } <CR> voidspeak(StringO0){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> Stringname; <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> Keeper(Stringm3,StringF7){ <CR> Stringm3; <CR> stringF7; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]R7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> voiddisplay(Stringm3,StringF7){ <CR> Stringm3=m3; <CR> StringF7=F7; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]A){ <CR> Stringn5; <CR> intg; <CR> g=n5.length(); <CR> System.out.print(g); <CR> } <CR> } <CR>  <EOC> 