 <BOC> publicclassPet{ <CR> Pet(StringM4,StringX5,StringX3){ <CR> M4=p; <CR> X5=n; <CR> X3=t; <CR> } <CR> Stringname; <CR> intn; <CR> voiddisplay(StringM4,StringX5,StringX3){ <CR> M4=p; <CR> X5=n; <CR> X3=t; <CR> } <CR> voidspeak(StringX5){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringtype; <CR> Stringpid; <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> Keeper(StringJ3,Stringb2){ <CR> StringJ3; <CR> stringb2; <CR> } <CR> Stringtel; <CR> publicstaticvoidmain(String[]I2){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> voiddisplay(StringJ3,Stringb2){ <CR> StringJ3=J3; <CR> Stringb2=b2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]w4){ <CR> Stringf2; <CR> ints4; <CR> s4=f2.length(); <CR> System.out.print(s4); <CR> } <CR> } <CR>  <EOC> 