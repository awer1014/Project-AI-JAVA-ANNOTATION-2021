 <BOC> publicclassPet{ <CR> voidspeak(StringK4){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> voiddisplay(StringP1,StringK4,StringK5){ <CR> P1=p; <CR> K4=n; <CR> K5=t; <CR> } <CR> intn; <CR> Stringtype; <CR> Stringname; <CR> Pet(StringP1,StringK4,StringK5){ <CR> P1=p; <CR> K4=n; <CR> K5=t; <CR> } <CR> Stringpid; <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> Stringtel; <CR> Keeper(StringS3,StringB0){ <CR> StringS3; <CR> stringB0; <CR> } <CR> publicstaticvoidmain(String[]W1){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> voiddisplay(StringS3,StringB0){ <CR> StringS3=S3; <CR> StringB0=B0; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]s4){ <CR> Stringd0; <CR> into0; <CR> o0=d0.length(); <CR> System.out.print(o0); <CR> } <CR> } <CR>  <EOC> 