 <BOC> publicclassPet{ <CR> voidspeak(StringK3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Pet(StringF3,StringK3,Stringf1){ <CR> F3=p; <CR> K3=n; <CR> f1=t; <CR> } <CR> Stringpid; <CR> intcount=2; <CR> voiddisplay(StringF3,StringK3,Stringf1){ <CR> F3=p; <CR> K3=n; <CR> f1=t; <CR> } <CR> Stringtype; <CR> Stringname; <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Keeper(Stringm1,StringG0){ <CR> Stringm1; <CR> stringG0; <CR> } <CR> Stringtel; <CR> publicstaticvoidmain(String[]v6){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> voiddisplay(Stringm1,StringG0){ <CR> Stringm1=m1; <CR> StringG0=G0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]K){ <CR> Stringb3; <CR> intH1; <CR> H1=b3.length(); <CR> System.out.print(H1); <CR> } <CR> } <CR>  <EOC> 