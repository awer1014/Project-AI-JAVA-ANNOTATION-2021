 <BOC> publicclassPet{ <CR> Stringpid; <CR> voidspeak(StringP9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intcount=2; <CR> Pet(StringM8,StringP9,Stringc){ <CR> M8=p; <CR> P9=n; <CR> c=t; <CR> } <CR> voiddisplay(StringM8,StringP9,Stringc){ <CR> M8=p; <CR> P9=n; <CR> c=t; <CR> } <CR> Stringname; <CR> intn; <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> publicstaticvoidmain(String[]J8){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Keeper(Stringp1,Stringp8){ <CR> Stringp1; <CR> stringp8; <CR> } <CR> Stringtel; <CR> voiddisplay(Stringp1,Stringp8){ <CR> Stringp1=p1; <CR> Stringp8=p8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]h){ <CR> Strings0; <CR> intI9; <CR> I9=s0.length(); <CR> System.out.print(I9); <CR> } <CR> } <CR>  <EOC> 