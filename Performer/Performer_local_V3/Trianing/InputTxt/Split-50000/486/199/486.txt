 <BOC> publicclassPet{ <CR> Pet(StringT9,StringD4,Stringh4){ <CR> T9=p; <CR> D4=n; <CR> h4=t; <CR> } <CR> voiddisplay(StringT9,StringD4,Stringh4){ <CR> T9=p; <CR> D4=n; <CR> h4=t; <CR> } <CR> Stringname; <CR> intcount=2; <CR> voidspeak(StringD4){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> Stringtype; <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> voiddisplay(StringP1,Stringv1){ <CR> StringP1=P1; <CR> Stringv1=v1; <CR> } <CR> publicstaticvoidmain(String[]S8){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(StringP1,Stringv1){ <CR> StringP1; <CR> stringv1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]h){ <CR> StringD8; <CR> intZ; <CR> Z=D8.length(); <CR> System.out.print(Z); <CR> } <CR> } <CR>  <EOC> 