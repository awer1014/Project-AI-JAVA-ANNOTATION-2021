 <BOC> publicclassPet{ <CR> Stringtype; <CR> Stringname; <CR> voidspeak(Stringx6){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intn; <CR> voiddisplay(Stringc9,Stringx6,StringU4){ <CR> c9=p; <CR> x6=n; <CR> U4=t; <CR> } <CR> intcount=2; <CR> Pet(Stringc9,Stringx6,StringU4){ <CR> c9=p; <CR> x6=n; <CR> U4=t; <CR> } <CR> Stringpid; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> Keeper(Stringq9,StringI2){ <CR> Stringq9; <CR> stringI2; <CR> } <CR> publicstaticvoidmain(String[]l6){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> voiddisplay(Stringq9,StringI2){ <CR> Stringq9=q9; <CR> StringI2=I2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]e0){ <CR> Stringm3; <CR> intr0; <CR> r0=m3.length(); <CR> System.out.print(r0); <CR> } <CR> } <CR>  <EOC> 