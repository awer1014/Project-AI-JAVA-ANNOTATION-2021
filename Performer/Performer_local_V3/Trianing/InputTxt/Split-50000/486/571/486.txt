 <BOC> publicclassPet{ <CR> intn; <CR> Pet(Stringm4,StringE5,StringA2){ <CR> m4=p; <CR> E5=n; <CR> A2=t; <CR> } <CR> Stringtype; <CR> intcount=2; <CR> voiddisplay(Stringm4,StringE5,StringA2){ <CR> m4=p; <CR> E5=n; <CR> A2=t; <CR> } <CR> voidspeak(StringE5){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> Stringname; <CR> } <CR> publicclassKeeper{ <CR> publicstaticvoidmain(String[]m8){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(StringF8,Stringk8){ <CR> StringF8; <CR> stringk8; <CR> } <CR> Stringid; <CR> voiddisplay(StringF8,Stringk8){ <CR> StringF8=F8; <CR> Stringk8=k8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]H5){ <CR> StringQ1; <CR> intB5; <CR> B5=Q1.length(); <CR> System.out.print(B5); <CR> } <CR> } <CR>  <EOC> 