 <BOC> publicclassPet{ <CR> voidspeak(StringL3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringname; <CR> Pet(Strings4,StringL3,StringB8){ <CR> s4=p; <CR> L3=n; <CR> B8=t; <CR> } <CR> voiddisplay(Strings4,StringL3,StringB8){ <CR> s4=p; <CR> L3=n; <CR> B8=t; <CR> } <CR> intcount=2; <CR> Stringpid; <CR> Stringtype; <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringC2,Stringd8){ <CR> StringC2; <CR> stringd8; <CR> } <CR> voiddisplay(StringC2,Stringd8){ <CR> StringC2=C2; <CR> Stringd8=d8; <CR> } <CR> Stringid; <CR> Stringtel; <CR> publicstaticvoidmain(String[]s7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]o1){ <CR> Stringv1; <CR> intD9; <CR> D9=v1.length(); <CR> System.out.print(D9); <CR> } <CR> } <CR>  <EOC> 