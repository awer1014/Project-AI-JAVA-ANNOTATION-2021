 <BOC> publicclassPet{ <CR> voidspeak(Stringr3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> voiddisplay(Stringx0,Stringr3,Stringp6){ <CR> x0=p; <CR> r3=n; <CR> p6=t; <CR> } <CR> Stringname; <CR> intcount=2; <CR> Stringtype; <CR> Pet(Stringx0,Stringr3,Stringp6){ <CR> x0=p; <CR> r3=n; <CR> p6=t; <CR> } <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(StringW9,StringO4){ <CR> StringW9=W9; <CR> StringO4=O4; <CR> } <CR> publicstaticvoidmain(String[]G8){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> Stringtel; <CR> Keeper(StringW9,StringO4){ <CR> StringW9; <CR> stringO4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]R7){ <CR> Stringz2; <CR> intv5; <CR> v5=z2.length(); <CR> System.out.print(v5); <CR> } <CR> } <CR>  <EOC> 