 <BOC> publicclassPet{ <CR> Stringpid; <CR> voidspeak(StringW0){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringtype; <CR> Stringname; <CR> Pet(StringA1,StringW0,StringX7){ <CR> A1=p; <CR> W0=n; <CR> X7=t; <CR> } <CR> voiddisplay(StringA1,StringW0,StringX7){ <CR> A1=p; <CR> W0=n; <CR> X7=t; <CR> } <CR> intcount=2; <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringG5,Stringp2){ <CR> StringG5; <CR> stringp2; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]R2){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> voiddisplay(StringG5,Stringp2){ <CR> StringG5=G5; <CR> Stringp2=p2; <CR> } <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]y1){ <CR> Stringl7; <CR> inta9; <CR> a9=l7.length(); <CR> System.out.print(a9); <CR> } <CR> } <CR>  <EOC> 