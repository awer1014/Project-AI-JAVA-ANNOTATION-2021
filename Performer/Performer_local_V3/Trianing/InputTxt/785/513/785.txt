 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringl0){ <CR> super(l0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intc9=0; <CR> do <CR> { <CR> c9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(c9>3||c9<1); <CR> returnmapTest(c9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]b0){ <CR> Stringj9,l1; <CR> doublec9,X9; <CR> System.out.println("請輸入學生學號: "); <CR> j9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> l1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> c9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> X9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentg8=newStudent(j9,l1,c9,X9); <CR> g8.setid(j9); <CR> g8.setname(l1); <CR> g8.setscore(c9); <CR> g8.setsw(X9); <CR> } <CR> staticTestmapTest(intc9){ <CR> Teste6=null; <CR> switch(c9){ <CR> case1: <CR> e6=newExam("Exam"); <CR> break; <CR> case2: <CR> e6=newHomework("Homework"); <CR> break; <CR> case3: <CR> e6=newReport("Report"); <CR> break; <CR> } <CR> returne6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt){ <CR> super(t); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringv0){ <CR> super(v0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> voidsetid(Stringv3){ <CR> id=v3; <CR> } <CR> voidsetscore(doublev3){ <CR> score=v3; <CR> } <CR> voidsetsw(doublev3){ <CR> sw=v3; <CR> } <CR> Student(StringA5,StringQ8,doubler2,doubler4){ <CR> this.id=A5; <CR> this.name=Q8; <CR> this.score=r2; <CR> this.sw=r4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetname(Stringv3){ <CR> name=v3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringg8){ <CR> this.name=g8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 