 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh){ <CR> super(h); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intm){ <CR> Testa0=null; <CR> switch(m){ <CR> case1: <CR> a0=newExam("Exam"); <CR> break; <CR> case2: <CR> a0=newHomework("Homework"); <CR> break; <CR> case3: <CR> a0=newReport("Report"); <CR> break; <CR> } <CR> returna0; <CR> } <CR> publicstaticvoidmain(String[]n1){ <CR> Stringm2,Y5; <CR> doublem,Y3; <CR> System.out.println("請輸入學生學號: "); <CR> m2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Y5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> m=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Y3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentw5=newStudent(m2,Y5,m,Y3); <CR> w5.setid(m2); <CR> w5.setname(Y5); <CR> w5.setscore(m); <CR> w5.setsw(Y3); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intm=0; <CR> do <CR> { <CR> m=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(m>3||m<1); <CR> returnmapTest(m); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringL5){ <CR> super(L5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringf3){ <CR> super(f3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Strings7){ <CR> id=s7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubles7){ <CR> sw=s7; <CR> } <CR> Stringid; <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> Student(Stringi5,Stringg9,doubleb3,doubleC1){ <CR> this.id=i5; <CR> this.name=g9; <CR> this.score=b3; <CR> this.sw=C1; <CR> } <CR> voidsetscore(doubles7){ <CR> score=s7; <CR> } <CR> voidsetname(Strings7){ <CR> name=s7; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringw){ <CR> this.name=w; <CR> } <CR> } <CR>  <EOC> 