 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringX0){ <CR> super(X0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]T1){ <CR> StringP,l1; <CR> doubleT5,R1; <CR> System.out.println("請輸入學生學號: "); <CR> P=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> l1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studento5=newStudent(P,l1,T5,R1); <CR> o5.setid(P); <CR> o5.setname(l1); <CR> o5.setscore(T5); <CR> o5.setsw(R1); <CR> } <CR> staticTestmapTest(intT5){ <CR> Testa5=null; <CR> switch(T5){ <CR> case1: <CR> a5=newExam("Exam"); <CR> break; <CR> case2: <CR> a5=newHomework("Homework"); <CR> break; <CR> case3: <CR> a5=newReport("Report"); <CR> break; <CR> } <CR> returna5; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT5=0; <CR> do <CR> { <CR> T5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T5>3||T5<1); <CR> returnmapTest(T5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringH5){ <CR> super(H5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringS0){ <CR> super(S0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubley1){ <CR> sw=y1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringk7,StringI3,doublez2,doubleE9){ <CR> this.id=k7; <CR> this.name=I3; <CR> this.score=z2; <CR> this.sw=E9; <CR> } <CR> voidsetname(Stringy1){ <CR> name=y1; <CR> } <CR> Stringid; <CR> voidsetscore(doubley1){ <CR> score=y1; <CR> } <CR> doublescore; <CR> doublesw; <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringy1){ <CR> id=y1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringk3){ <CR> this.name=k3; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 