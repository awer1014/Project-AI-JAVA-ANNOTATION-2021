 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringT9){ <CR> super(T9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intk=0; <CR> do <CR> { <CR> k=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(k>3||k<1); <CR> returnmapTest(k); <CR> } <CR> staticTestmapTest(intk){ <CR> TestH4=null; <CR> switch(k){ <CR> case1: <CR> H4=newExam("Exam"); <CR> break; <CR> case2: <CR> H4=newHomework("Homework"); <CR> break; <CR> case3: <CR> H4=newReport("Report"); <CR> break; <CR> } <CR> returnH4; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]n6){ <CR> StringC3,z6; <CR> doublek,u6; <CR> System.out.println("請輸入學生學號: "); <CR> C3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> z6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> k=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> u6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr3=newStudent(C3,z6,k,u6); <CR> r3.setid(C3); <CR> r3.setname(z6); <CR> r3.setscore(k); <CR> r3.setsw(u6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd){ <CR> super(d); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringS6){ <CR> super(S6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublej7){ <CR> sw=j7; <CR> } <CR> Student(Stringm,Stringx2,doubleZ1,doubleV8){ <CR> this.id=m; <CR> this.name=x2; <CR> this.score=Z1; <CR> this.sw=V8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Stringname; <CR> voidsetname(Stringj7){ <CR> name=j7; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringj7){ <CR> id=j7; <CR> } <CR> voidsetscore(doublej7){ <CR> score=j7; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringR8){ <CR> this.name=R8; <CR> } <CR> } <CR>  <EOC> 