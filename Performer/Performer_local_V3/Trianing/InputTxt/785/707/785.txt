 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringI3){ <CR> super(I3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]m4){ <CR> StringA4,w8; <CR> doubleM4,o2; <CR> System.out.println("請輸入學生學號: "); <CR> A4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> w8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> M4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> o2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta8=newStudent(A4,w8,M4,o2); <CR> a8.setid(A4); <CR> a8.setname(w8); <CR> a8.setscore(M4); <CR> a8.setsw(o2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intM4){ <CR> TestM5=null; <CR> switch(M4){ <CR> case1: <CR> M5=newExam("Exam"); <CR> break; <CR> case2: <CR> M5=newHomework("Homework"); <CR> break; <CR> case3: <CR> M5=newReport("Report"); <CR> break; <CR> } <CR> returnM5; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intM4=0; <CR> do <CR> { <CR> M4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(M4>3||M4<1); <CR> returnmapTest(M4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings4){ <CR> super(s4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringO2){ <CR> super(O2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleR0){ <CR> sw=R0; <CR> } <CR> Student(StringS5,StringT4,doubleh7,doublek3){ <CR> this.id=S5; <CR> this.name=T4; <CR> this.score=h7; <CR> this.sw=k3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublesw; <CR> Stringname; <CR> voidsetscore(doubleR0){ <CR> score=R0; <CR> } <CR> voidsetid(StringR0){ <CR> id=R0; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringR0){ <CR> name=R0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringK0){ <CR> this.name=K0; <CR> } <CR> } <CR>  <EOC> 