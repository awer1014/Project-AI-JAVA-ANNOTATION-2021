 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringu9){ <CR> super(u9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]S6){ <CR> Stringm1,p8; <CR> doubleU0,g1; <CR> System.out.println("請輸入學生學號: "); <CR> m1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> p8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP7=newStudent(m1,p8,U0,g1); <CR> P7.setid(m1); <CR> P7.setname(p8); <CR> P7.setscore(U0); <CR> P7.setsw(g1); <CR> } <CR> staticTestmapTest(intU0){ <CR> Testj6=null; <CR> switch(U0){ <CR> case1: <CR> j6=newExam("Exam"); <CR> break; <CR> case2: <CR> j6=newHomework("Homework"); <CR> break; <CR> case3: <CR> j6=newReport("Report"); <CR> break; <CR> } <CR> returnj6; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU0=0; <CR> do <CR> { <CR> U0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U0>3||U0<1); <CR> returnmapTest(U0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringg1){ <CR> super(g1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP0){ <CR> super(P0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublen3){ <CR> score=n3; <CR> } <CR> voidsetname(Stringn3){ <CR> name=n3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doublen3){ <CR> sw=n3; <CR> } <CR> doublescore; <CR> doublesw; <CR> voidsetid(Stringn3){ <CR> id=n3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(Stringu5,StringN9,doubleN8,doubleq3){ <CR> this.id=u5; <CR> this.name=N9; <CR> this.score=N8; <CR> this.sw=q3; <CR> } <CR> Stringid; <CR> Stringname; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringC){ <CR> this.name=C; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 