 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringO5){ <CR> super(O5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]I0){ <CR> StringA8,N5; <CR> doublek5,D4; <CR> System.out.println("請輸入學生學號: "); <CR> A8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> k5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> D4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentM0=newStudent(A8,N5,k5,D4); <CR> M0.setid(A8); <CR> M0.setname(N5); <CR> M0.setscore(k5); <CR> M0.setsw(D4); <CR> } <CR> staticTestmapTest(intk5){ <CR> Testi9=null; <CR> switch(k5){ <CR> case1: <CR> i9=newExam("Exam"); <CR> break; <CR> case2: <CR> i9=newHomework("Homework"); <CR> break; <CR> case3: <CR> i9=newReport("Report"); <CR> break; <CR> } <CR> returni9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intk5=0; <CR> do <CR> { <CR> k5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(k5>3||k5<1); <CR> returnmapTest(k5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringw9){ <CR> super(w9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringv0){ <CR> super(v0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringq){ <CR> id=q; <CR> } <CR> voidsetscore(doubleq){ <CR> score=q; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringq1,StringY5,doubleo6,doubles3){ <CR> this.id=q1; <CR> this.name=Y5; <CR> this.score=o6; <CR> this.sw=s3; <CR> } <CR> Stringname; <CR> voidsetsw(doubleq){ <CR> sw=q; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(Stringq){ <CR> name=q; <CR> } <CR> Stringid; <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringK9){ <CR> this.name=K9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 