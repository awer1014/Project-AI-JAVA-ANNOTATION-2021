 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh0){ <CR> super(h0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(ints0){ <CR> TestT0=null; <CR> switch(s0){ <CR> case1: <CR> T0=newExam("Exam"); <CR> break; <CR> case2: <CR> T0=newHomework("Homework"); <CR> break; <CR> case3: <CR> T0=newReport("Report"); <CR> break; <CR> } <CR> returnT0; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> ints0=0; <CR> do <CR> { <CR> s0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(s0>3||s0<1); <CR> returnmapTest(s0); <CR> } <CR> publicstaticvoidmain(String[]m0){ <CR> StringS,E7; <CR> doubles0,k9; <CR> System.out.println("請輸入學生學號: "); <CR> S=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> s0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> k9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentn1=newStudent(S,E7,s0,k9); <CR> n1.setid(S); <CR> n1.setname(E7); <CR> n1.setscore(s0); <CR> n1.setsw(k9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringj2){ <CR> super(j2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringK){ <CR> super(K); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> voidsetid(StringP8){ <CR> id=P8; <CR> } <CR> voidsetname(StringP8){ <CR> name=P8; <CR> } <CR> Student(StringJ,StringM,doubleA3,doubleA0){ <CR> this.id=J; <CR> this.name=M; <CR> this.score=A3; <CR> this.sw=A0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetscore(doubleP8){ <CR> score=P8; <CR> } <CR> Stringname; <CR> voidsetsw(doubleP8){ <CR> sw=P8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringR){ <CR> this.name=R; <CR> } <CR> } <CR>  <EOC> 