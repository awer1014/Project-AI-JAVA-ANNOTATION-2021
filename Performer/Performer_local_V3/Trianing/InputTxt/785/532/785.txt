 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo5){ <CR> super(o5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intZ6=0; <CR> do <CR> { <CR> Z6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Z6>3||Z6<1); <CR> returnmapTest(Z6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]a2){ <CR> Stringd6,H1; <CR> doubleZ6,g9; <CR> System.out.println("請輸入學生學號: "); <CR> d6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> H1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Z6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentb7=newStudent(d6,H1,Z6,g9); <CR> b7.setid(d6); <CR> b7.setname(H1); <CR> b7.setscore(Z6); <CR> b7.setsw(g9); <CR> } <CR> staticTestmapTest(intZ6){ <CR> TestX6=null; <CR> switch(Z6){ <CR> case1: <CR> X6=newExam("Exam"); <CR> break; <CR> case2: <CR> X6=newHomework("Homework"); <CR> break; <CR> case3: <CR> X6=newReport("Report"); <CR> break; <CR> } <CR> returnX6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringZ2){ <CR> super(Z2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx2){ <CR> super(x2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringz3){ <CR> name=z3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringX8,StringJ1,doublee,doubleN2){ <CR> this.id=X8; <CR> this.name=J1; <CR> this.score=e; <CR> this.sw=N2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringz3){ <CR> id=z3; <CR> } <CR> voidsetsw(doublez3){ <CR> sw=z3; <CR> } <CR> Stringid; <CR> voidsetscore(doublez3){ <CR> score=z3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringS0){ <CR> this.name=S0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 