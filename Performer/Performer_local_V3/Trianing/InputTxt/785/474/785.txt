 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringK){ <CR> super(K); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]e3){ <CR> Stringr6,R5; <CR> doublel,R8; <CR> System.out.println("請輸入學生學號: "); <CR> r6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> R5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> l=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentE5=newStudent(r6,R5,l,R8); <CR> E5.setid(r6); <CR> E5.setname(R5); <CR> E5.setscore(l); <CR> E5.setsw(R8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intl){ <CR> Testf=null; <CR> switch(l){ <CR> case1: <CR> f=newExam("Exam"); <CR> break; <CR> case2: <CR> f=newHomework("Homework"); <CR> break; <CR> case3: <CR> f=newReport("Report"); <CR> break; <CR> } <CR> returnf; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intl=0; <CR> do <CR> { <CR> l=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(l>3||l<1); <CR> returnmapTest(l); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings6){ <CR> super(s6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringV8){ <CR> super(V8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetscore(doubleJ0){ <CR> score=J0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringJ0){ <CR> name=J0; <CR> } <CR> doublescore; <CR> Student(Strings,StringZ6,doubleS8,doubleo1){ <CR> this.id=s; <CR> this.name=Z6; <CR> this.score=S8; <CR> this.sw=o1; <CR> } <CR> voidsetid(StringJ0){ <CR> id=J0; <CR> } <CR> voidsetsw(doubleJ0){ <CR> sw=J0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringf9){ <CR> this.name=f9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 