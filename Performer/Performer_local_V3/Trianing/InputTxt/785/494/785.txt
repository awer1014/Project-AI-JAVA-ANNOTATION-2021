 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk2){ <CR> super(k2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV2=0; <CR> do <CR> { <CR> V2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V2>3||V2<1); <CR> returnmapTest(V2); <CR> } <CR> staticTestmapTest(intV2){ <CR> Testt9=null; <CR> switch(V2){ <CR> case1: <CR> t9=newExam("Exam"); <CR> break; <CR> case2: <CR> t9=newHomework("Homework"); <CR> break; <CR> case3: <CR> t9=newReport("Report"); <CR> break; <CR> } <CR> returnt9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]O5){ <CR> StringB7,z4; <CR> doubleV2,g7; <CR> System.out.println("請輸入學生學號: "); <CR> B7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> z4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ3=newStudent(B7,z4,V2,g7); <CR> Z3.setid(B7); <CR> Z3.setname(z4); <CR> Z3.setscore(V2); <CR> Z3.setsw(g7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF7){ <CR> super(F7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR2){ <CR> super(R2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetsw(doublek6){ <CR> sw=k6; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringk6){ <CR> id=k6; <CR> } <CR> voidsetname(Stringk6){ <CR> name=k6; <CR> } <CR> Student(StringF3,StringR1,doublez,doubleL7){ <CR> this.id=F3; <CR> this.name=R1; <CR> this.score=z; <CR> this.sw=L7; <CR> } <CR> voidsetscore(doublek6){ <CR> score=k6; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Strings4){ <CR> this.name=s4; <CR> } <CR> } <CR>  <EOC> 