 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringp0){ <CR> super(p0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]m4){ <CR> Stringk3,n2; <CR> doubleV3,s6; <CR> System.out.println("請輸入學生學號: "); <CR> k3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> n2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> s6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentm8=newStudent(k3,n2,V3,s6); <CR> m8.setid(k3); <CR> m8.setname(n2); <CR> m8.setscore(V3); <CR> m8.setsw(s6); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV3=0; <CR> do <CR> { <CR> V3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V3>3||V3<1); <CR> returnmapTest(V3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intV3){ <CR> TestE2=null; <CR> switch(V3){ <CR> case1: <CR> E2=newExam("Exam"); <CR> break; <CR> case2: <CR> E2=newHomework("Homework"); <CR> break; <CR> case3: <CR> E2=newReport("Report"); <CR> break; <CR> } <CR> returnE2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings6){ <CR> super(s6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringX){ <CR> super(X); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(StringG2,Stringp1,doubler7,doubleC7){ <CR> this.id=G2; <CR> this.name=p1; <CR> this.score=r7; <CR> this.sw=C7; <CR> } <CR> voidsetscore(doubleI){ <CR> score=I; <CR> } <CR> voidsetname(StringI){ <CR> name=I; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetid(StringI){ <CR> id=I; <CR> } <CR> voidsetsw(doubleI){ <CR> sw=I; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringk){ <CR> this.name=k; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 