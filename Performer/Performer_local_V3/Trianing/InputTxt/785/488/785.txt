 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringY9){ <CR> super(Y9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intr4=0; <CR> do <CR> { <CR> r4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(r4>3||r4<1); <CR> returnmapTest(r4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intr4){ <CR> TestR1=null; <CR> switch(r4){ <CR> case1: <CR> R1=newExam("Exam"); <CR> break; <CR> case2: <CR> R1=newHomework("Homework"); <CR> break; <CR> case3: <CR> R1=newReport("Report"); <CR> break; <CR> } <CR> returnR1; <CR> } <CR> publicstaticvoidmain(String[]a){ <CR> StringK1,U1; <CR> doubler4,b0; <CR> System.out.println("請輸入學生學號: "); <CR> K1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> U1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> r4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> b0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentt2=newStudent(K1,U1,r4,b0); <CR> t2.setid(K1); <CR> t2.setname(U1); <CR> t2.setscore(r4); <CR> t2.setsw(b0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringz){ <CR> super(z); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringK7){ <CR> super(K7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(Stringr8){ <CR> id=r8; <CR> } <CR> Stringid; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubler8){ <CR> score=r8; <CR> } <CR> Student(Stringw4,Stringp2,doubleP8,doubleO1){ <CR> this.id=w4; <CR> this.name=p2; <CR> this.score=P8; <CR> this.sw=O1; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetsw(doubler8){ <CR> sw=r8; <CR> } <CR> voidsetname(Stringr8){ <CR> name=r8; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringv0){ <CR> this.name=v0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 