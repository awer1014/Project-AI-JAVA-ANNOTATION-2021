 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringB9){ <CR> super(B9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intr5){ <CR> Tests4=null; <CR> switch(r5){ <CR> case1: <CR> s4=newExam("Exam"); <CR> break; <CR> case2: <CR> s4=newHomework("Homework"); <CR> break; <CR> case3: <CR> s4=newReport("Report"); <CR> break; <CR> } <CR> returns4; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intr5=0; <CR> do <CR> { <CR> r5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(r5>3||r5<1); <CR> returnmapTest(r5); <CR> } <CR> publicstaticvoidmain(String[]I8){ <CR> StringK7,K5; <CR> doubler5,Z0; <CR> System.out.println("請輸入學生學號: "); <CR> K7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> K5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> r5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp9=newStudent(K7,K5,r5,Z0); <CR> p9.setid(K7); <CR> p9.setname(K5); <CR> p9.setscore(r5); <CR> p9.setsw(Z0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringP2){ <CR> super(P2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE7){ <CR> super(E7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringa4){ <CR> id=a4; <CR> } <CR> Stringid; <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringl2,Stringa7,doublek5,doublel9){ <CR> this.id=l2; <CR> this.name=a7; <CR> this.score=k5; <CR> this.sw=l9; <CR> } <CR> voidsetscore(doublea4){ <CR> score=a4; <CR> } <CR> voidsetname(Stringa4){ <CR> name=a4; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublea4){ <CR> sw=a4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringu0){ <CR> this.name=u0; <CR> } <CR> } <CR>  <EOC> 