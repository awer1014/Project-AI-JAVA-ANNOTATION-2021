 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg1){ <CR> super(g1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO2=0; <CR> do <CR> { <CR> O2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O2>3||O2<1); <CR> returnmapTest(O2); <CR> } <CR> staticTestmapTest(intO2){ <CR> Testd4=null; <CR> switch(O2){ <CR> case1: <CR> d4=newExam("Exam"); <CR> break; <CR> case2: <CR> d4=newHomework("Homework"); <CR> break; <CR> case3: <CR> d4=newReport("Report"); <CR> break; <CR> } <CR> returnd4; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]A1){ <CR> Stringw9,u4; <CR> doubleO2,l4; <CR> System.out.println("請輸入學生學號: "); <CR> w9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> u4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> l4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentE6=newStudent(w9,u4,O2,l4); <CR> E6.setid(w9); <CR> E6.setname(u4); <CR> E6.setscore(O2); <CR> E6.setsw(l4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd){ <CR> super(d); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringM5){ <CR> super(M5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleA1){ <CR> score=A1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleA1){ <CR> sw=A1; <CR> } <CR> Student(Stringh,Stringm1,doubleE7,doubleg4){ <CR> this.id=h; <CR> this.name=m1; <CR> this.score=E7; <CR> this.sw=g4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> voidsetname(StringA1){ <CR> name=A1; <CR> } <CR> voidsetid(StringA1){ <CR> id=A1; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringo7){ <CR> this.name=o7; <CR> } <CR> } <CR>  <EOC> 