 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx){ <CR> super(x); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intS=0; <CR> do <CR> { <CR> S=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(S>3||S<1); <CR> returnmapTest(S); <CR> } <CR> publicstaticvoidmain(String[]I4){ <CR> StringL,j5; <CR> doubleS,L3; <CR> System.out.println("請輸入學生學號: "); <CR> L=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> j5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> S=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> L3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentM2=newStudent(L,j5,S,L3); <CR> M2.setid(L); <CR> M2.setname(j5); <CR> M2.setscore(S); <CR> M2.setsw(L3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intS){ <CR> Testo8=null; <CR> switch(S){ <CR> case1: <CR> o8=newExam("Exam"); <CR> break; <CR> case2: <CR> o8=newHomework("Homework"); <CR> break; <CR> case3: <CR> o8=newReport("Report"); <CR> break; <CR> } <CR> returno8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringk4){ <CR> super(k4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringo7){ <CR> super(o7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringD5){ <CR> name=D5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleD5){ <CR> score=D5; <CR> } <CR> voidsetsw(doubleD5){ <CR> sw=D5; <CR> } <CR> Stringname; <CR> voidsetid(StringD5){ <CR> id=D5; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> Student(StringM9,Stringl6,doublei0,doubler9){ <CR> this.id=M9; <CR> this.name=l6; <CR> this.score=i0; <CR> this.sw=r9; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringW){ <CR> this.name=W; <CR> } <CR> } <CR>  <EOC> 