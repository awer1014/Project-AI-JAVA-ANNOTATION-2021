 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringL4){ <CR> super(L4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]b0){ <CR> StringG,I6; <CR> doublet5,p0; <CR> System.out.println("請輸入學生學號: "); <CR> G=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> I6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> t5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> p0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx7=newStudent(G,I6,t5,p0); <CR> x7.setid(G); <CR> x7.setname(I6); <CR> x7.setscore(t5); <CR> x7.setsw(p0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intt5=0; <CR> do <CR> { <CR> t5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(t5>3||t5<1); <CR> returnmapTest(t5); <CR> } <CR> staticTestmapTest(intt5){ <CR> TestE8=null; <CR> switch(t5){ <CR> case1: <CR> E8=newExam("Exam"); <CR> break; <CR> case2: <CR> E8=newHomework("Homework"); <CR> break; <CR> case3: <CR> E8=newReport("Report"); <CR> break; <CR> } <CR> returnE8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp6){ <CR> super(p6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringt6){ <CR> super(t6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> voidsetid(StringA4){ <CR> id=A4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleA4){ <CR> score=A4; <CR> } <CR> doublescore; <CR> Stringname; <CR> Student(Stringd6,StringD5,doubleN4,doubleT8){ <CR> this.id=d6; <CR> this.name=D5; <CR> this.score=N4; <CR> this.sw=T8; <CR> } <CR> voidsetname(StringA4){ <CR> name=A4; <CR> } <CR> voidsetsw(doubleA4){ <CR> sw=A4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringR9){ <CR> this.name=R9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 