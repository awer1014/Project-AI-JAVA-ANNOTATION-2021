 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringO0){ <CR> super(O0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]R7){ <CR> Strings8,W; <CR> doubleC3,O4; <CR> System.out.println("請輸入學生學號: "); <CR> s8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> W=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> C3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentQ9=newStudent(s8,W,C3,O4); <CR> Q9.setid(s8); <CR> Q9.setname(W); <CR> Q9.setscore(C3); <CR> Q9.setsw(O4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intC3=0; <CR> do <CR> { <CR> C3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(C3>3||C3<1); <CR> returnmapTest(C3); <CR> } <CR> staticTestmapTest(intC3){ <CR> TestC5=null; <CR> switch(C3){ <CR> case1: <CR> C5=newExam("Exam"); <CR> break; <CR> case2: <CR> C5=newHomework("Homework"); <CR> break; <CR> case3: <CR> C5=newReport("Report"); <CR> break; <CR> } <CR> returnC5; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp5){ <CR> super(p5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN4){ <CR> super(N4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublez3){ <CR> sw=z3; <CR> } <CR> Student(StringB7,StringH3,doubleV9,doubleb2){ <CR> this.id=B7; <CR> this.name=H3; <CR> this.score=V9; <CR> this.sw=b2; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublez3){ <CR> score=z3; <CR> } <CR> doublesw; <CR> Stringname; <CR> voidsetname(Stringz3){ <CR> name=z3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringz3){ <CR> id=z3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringQ5){ <CR> this.name=Q5; <CR> } <CR> } <CR>  <EOC> 