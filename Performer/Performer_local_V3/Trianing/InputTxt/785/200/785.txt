 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringu9){ <CR> super(u9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intm3=0; <CR> do <CR> { <CR> m3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(m3>3||m3<1); <CR> returnmapTest(m3); <CR> } <CR> staticTestmapTest(intm3){ <CR> TestJ7=null; <CR> switch(m3){ <CR> case1: <CR> J7=newExam("Exam"); <CR> break; <CR> case2: <CR> J7=newHomework("Homework"); <CR> break; <CR> case3: <CR> J7=newReport("Report"); <CR> break; <CR> } <CR> returnJ7; <CR> } <CR> publicstaticvoidmain(String[]M7){ <CR> StringL2,F4; <CR> doublem3,c2; <CR> System.out.println("請輸入學生學號: "); <CR> L2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> F4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> m3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> c2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP2=newStudent(L2,F4,m3,c2); <CR> P2.setid(L2); <CR> P2.setname(F4); <CR> P2.setscore(m3); <CR> P2.setsw(c2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn7){ <CR> super(n7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP0){ <CR> super(P0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleD1){ <CR> score=D1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringt4,Stringv9,doubleQ0,doubleE6){ <CR> this.id=t4; <CR> this.name=v9; <CR> this.score=Q0; <CR> this.sw=E6; <CR> } <CR> Stringid; <CR> voidsetid(StringD1){ <CR> id=D1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringD1){ <CR> name=D1; <CR> } <CR> doublesw; <CR> voidsetsw(doubleD1){ <CR> sw=D1; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX){ <CR> this.name=X; <CR> } <CR> } <CR>  <EOC> 