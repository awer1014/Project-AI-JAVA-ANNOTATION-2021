 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringR7){ <CR> super(R7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intb8){ <CR> TestL1=null; <CR> switch(b8){ <CR> case1: <CR> L1=newExam("Exam"); <CR> break; <CR> case2: <CR> L1=newHomework("Homework"); <CR> break; <CR> case3: <CR> L1=newReport("Report"); <CR> break; <CR> } <CR> returnL1; <CR> } <CR> publicstaticvoidmain(String[]y6){ <CR> StringR1,b9; <CR> doubleb8,J8; <CR> System.out.println("請輸入學生學號: "); <CR> R1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> b9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> b8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> J8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenty7=newStudent(R1,b9,b8,J8); <CR> y7.setid(R1); <CR> y7.setname(b9); <CR> y7.setscore(b8); <CR> y7.setsw(J8); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intb8=0; <CR> do <CR> { <CR> b8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(b8>3||b8<1); <CR> returnmapTest(b8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp){ <CR> super(p); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringe5){ <CR> super(e5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetsw(doublen9){ <CR> sw=n9; <CR> } <CR> voidsetname(Stringn9){ <CR> name=n9; <CR> } <CR> voidsetid(Stringn9){ <CR> id=n9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Student(StringB8,Stringa4,doubleB6,doubley9){ <CR> this.id=B8; <CR> this.name=a4; <CR> this.score=B6; <CR> this.sw=y9; <CR> } <CR> voidsetscore(doublen9){ <CR> score=n9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringp1){ <CR> this.name=p1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 