 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringO2){ <CR> super(O2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]s3){ <CR> StringM1,u5; <CR> doublef2,v0; <CR> System.out.println("請輸入學生學號: "); <CR> M1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> u5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> v0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp=newStudent(M1,u5,f2,v0); <CR> p.setid(M1); <CR> p.setname(u5); <CR> p.setscore(f2); <CR> p.setsw(v0); <CR> } <CR> staticTestmapTest(intf2){ <CR> Testn3=null; <CR> switch(f2){ <CR> case1: <CR> n3=newExam("Exam"); <CR> break; <CR> case2: <CR> n3=newHomework("Homework"); <CR> break; <CR> case3: <CR> n3=newReport("Report"); <CR> break; <CR> } <CR> returnn3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf2=0; <CR> do <CR> { <CR> f2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f2>3||f2<1); <CR> returnmapTest(f2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringC9){ <CR> super(C9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringJ0){ <CR> super(J0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringx5,StringB6,doubleV2,doubleE6){ <CR> this.id=x5; <CR> this.name=B6; <CR> this.score=V2; <CR> this.sw=E6; <CR> } <CR> doublesw; <CR> voidsetsw(doubleR2){ <CR> sw=R2; <CR> } <CR> doublescore; <CR> voidsetname(StringR2){ <CR> name=R2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleR2){ <CR> score=R2; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(StringR2){ <CR> id=R2; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringM9){ <CR> this.name=M9; <CR> } <CR> } <CR>  <EOC> 