 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg5){ <CR> super(g5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(inty1){ <CR> Testn=null; <CR> switch(y1){ <CR> case1: <CR> n=newExam("Exam"); <CR> break; <CR> case2: <CR> n=newHomework("Homework"); <CR> break; <CR> case3: <CR> n=newReport("Report"); <CR> break; <CR> } <CR> returnn; <CR> } <CR> publicstaticvoidmain(String[]f6){ <CR> StringD1,U9; <CR> doubley1,g0; <CR> System.out.println("請輸入學生學號: "); <CR> D1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> U9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> y1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentY2=newStudent(D1,U9,y1,g0); <CR> Y2.setid(D1); <CR> Y2.setname(U9); <CR> Y2.setscore(y1); <CR> Y2.setsw(g0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inty1=0; <CR> do <CR> { <CR> y1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(y1>3||y1<1); <CR> returnmapTest(y1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringe1){ <CR> super(e1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP){ <CR> super(P); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublev4){ <CR> sw=v4; <CR> } <CR> Stringname; <CR> voidsetscore(doublev4){ <CR> score=v4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringv4){ <CR> id=v4; <CR> } <CR> Stringid; <CR> Student(StringD8,Stringi,doubleB3,doublec){ <CR> this.id=D8; <CR> this.name=i; <CR> this.score=B3; <CR> this.sw=c; <CR> } <CR> voidsetname(Stringv4){ <CR> name=v4; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringW){ <CR> this.name=W; <CR> } <CR> } <CR>  <EOC> 