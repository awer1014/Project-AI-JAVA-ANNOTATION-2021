 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringN1){ <CR> super(N1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]w7){ <CR> Stringp1,H0; <CR> doubleG4,M4; <CR> System.out.println("請輸入學生學號: "); <CR> p1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> H0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentk8=newStudent(p1,H0,G4,M4); <CR> k8.setid(p1); <CR> k8.setname(H0); <CR> k8.setscore(G4); <CR> k8.setsw(M4); <CR> } <CR> staticTestmapTest(intG4){ <CR> Teste9=null; <CR> switch(G4){ <CR> case1: <CR> e9=newExam("Exam"); <CR> break; <CR> case2: <CR> e9=newHomework("Homework"); <CR> break; <CR> case3: <CR> e9=newReport("Report"); <CR> break; <CR> } <CR> returne9; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG4=0; <CR> do <CR> { <CR> G4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G4>3||G4<1); <CR> returnmapTest(G4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringf3){ <CR> super(f3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Strings3){ <CR> super(s3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringb9,StringQ,doubleA4,doubled6){ <CR> this.id=b9; <CR> this.name=Q; <CR> this.score=A4; <CR> this.sw=d6; <CR> } <CR> doublesw; <CR> voidsetsw(doubleE0){ <CR> sw=E0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> voidsetname(StringE0){ <CR> name=E0; <CR> } <CR> voidsetid(StringE0){ <CR> id=E0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> voidsetscore(doubleE0){ <CR> score=E0; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringc8){ <CR> this.name=c8; <CR> } <CR> } <CR>  <EOC> 