 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr3){ <CR> super(r3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intv4=0; <CR> do <CR> { <CR> v4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(v4>3||v4<1); <CR> returnmapTest(v4); <CR> } <CR> staticTestmapTest(intv4){ <CR> Testc5=null; <CR> switch(v4){ <CR> case1: <CR> c5=newExam("Exam"); <CR> break; <CR> case2: <CR> c5=newHomework("Homework"); <CR> break; <CR> case3: <CR> c5=newReport("Report"); <CR> break; <CR> } <CR> returnc5; <CR> } <CR> publicstaticvoidmain(String[]n){ <CR> StringJ6,B3; <CR> doublev4,P5; <CR> System.out.println("請輸入學生學號: "); <CR> J6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> B3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> v4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> P5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp6=newStudent(J6,B3,v4,P5); <CR> p6.setid(J6); <CR> p6.setname(B3); <CR> p6.setscore(v4); <CR> p6.setsw(P5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringm0){ <CR> super(m0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringM3){ <CR> super(M3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublee1){ <CR> sw=e1; <CR> } <CR> Stringname; <CR> voidsetname(Stringe1){ <CR> name=e1; <CR> } <CR> voidsetid(Stringe1){ <CR> id=e1; <CR> } <CR> voidsetscore(doublee1){ <CR> score=e1; <CR> } <CR> Student(StringH1,StringI6,doubleE1,doubleP6){ <CR> this.id=H1; <CR> this.name=I6; <CR> this.score=E1; <CR> this.sw=P6; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringr9){ <CR> this.name=r9; <CR> } <CR> } <CR>  <EOC> 