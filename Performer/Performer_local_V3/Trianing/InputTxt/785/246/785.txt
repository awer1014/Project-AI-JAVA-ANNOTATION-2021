 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringD6){ <CR> super(D6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]V1){ <CR> StringT5,r3; <CR> doublei9,B0; <CR> System.out.println("請輸入學生學號: "); <CR> T5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> i9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> B0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentW0=newStudent(T5,r3,i9,B0); <CR> W0.setid(T5); <CR> W0.setname(r3); <CR> W0.setscore(i9); <CR> W0.setsw(B0); <CR> } <CR> staticTestmapTest(inti9){ <CR> TestB5=null; <CR> switch(i9){ <CR> case1: <CR> B5=newExam("Exam"); <CR> break; <CR> case2: <CR> B5=newHomework("Homework"); <CR> break; <CR> case3: <CR> B5=newReport("Report"); <CR> break; <CR> } <CR> returnB5; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inti9=0; <CR> do <CR> { <CR> i9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(i9>3||i9<1); <CR> returnmapTest(i9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings4){ <CR> super(s4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringt0){ <CR> super(t0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> doublesw; <CR> voidsetid(Stringx2){ <CR> id=x2; <CR> } <CR> voidsetsw(doublex2){ <CR> sw=x2; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetscore(doublex2){ <CR> score=x2; <CR> } <CR> voidsetname(Stringx2){ <CR> name=x2; <CR> } <CR> Student(Stringt5,StringU3,doubleF0,doubleq8){ <CR> this.id=t5; <CR> this.name=U3; <CR> this.score=F0; <CR> this.sw=q8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk2){ <CR> this.name=k2; <CR> } <CR> } <CR>  <EOC> 