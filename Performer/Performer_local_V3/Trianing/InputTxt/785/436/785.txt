 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringu0){ <CR> super(u0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intS5=0; <CR> do <CR> { <CR> S5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(S5>3||S5<1); <CR> returnmapTest(S5); <CR> } <CR> staticTestmapTest(intS5){ <CR> Testw1=null; <CR> switch(S5){ <CR> case1: <CR> w1=newExam("Exam"); <CR> break; <CR> case2: <CR> w1=newHomework("Homework"); <CR> break; <CR> case3: <CR> w1=newReport("Report"); <CR> break; <CR> } <CR> returnw1; <CR> } <CR> publicstaticvoidmain(String[]Z5){ <CR> Stringf,r9; <CR> doubleS5,H6; <CR> System.out.println("請輸入學生學號: "); <CR> f=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> S5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> H6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentD3=newStudent(f,r9,S5,H6); <CR> D3.setid(f); <CR> D3.setname(r9); <CR> D3.setscore(S5); <CR> D3.setsw(H6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringV3){ <CR> super(V3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR0){ <CR> super(R0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringI6){ <CR> id=I6; <CR> } <CR> voidsetname(StringI6){ <CR> name=I6; <CR> } <CR> voidsetsw(doubleI6){ <CR> sw=I6; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublesw; <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringj4,Stringp6,doublep2,doubleu5){ <CR> this.id=j4; <CR> this.name=p6; <CR> this.score=p2; <CR> this.sw=u5; <CR> } <CR> voidsetscore(doubleI6){ <CR> score=I6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringN8){ <CR> this.name=N8; <CR> } <CR> } <CR>  <EOC> 