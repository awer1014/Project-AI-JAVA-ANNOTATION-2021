 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringQ1){ <CR> super(Q1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intJ3=0; <CR> do <CR> { <CR> J3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(J3>3||J3<1); <CR> returnmapTest(J3); <CR> } <CR> publicstaticvoidmain(String[]E){ <CR> StringS8,S3; <CR> doubleJ3,i8; <CR> System.out.println("請輸入學生學號: "); <CR> S8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> S3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> J3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> i8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentN2=newStudent(S8,S3,J3,i8); <CR> N2.setid(S8); <CR> N2.setname(S3); <CR> N2.setscore(J3); <CR> N2.setsw(i8); <CR> } <CR> staticTestmapTest(intJ3){ <CR> Testm6=null; <CR> switch(J3){ <CR> case1: <CR> m6=newExam("Exam"); <CR> break; <CR> case2: <CR> m6=newHomework("Homework"); <CR> break; <CR> case3: <CR> m6=newReport("Report"); <CR> break; <CR> } <CR> returnm6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE4){ <CR> super(E4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringY6){ <CR> super(Y6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> voidsetname(Stringc1){ <CR> name=c1; <CR> } <CR> doublesw; <CR> Stringid; <CR> Stringname; <CR> voidsetsw(doublec1){ <CR> sw=c1; <CR> } <CR> voidsetid(Stringc1){ <CR> id=c1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(Stringe5,Stringy3,doubleS2,doublea2){ <CR> this.id=e5; <CR> this.name=y3; <CR> this.score=S2; <CR> this.sw=a2; <CR> } <CR> voidsetscore(doublec1){ <CR> score=c1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringR5){ <CR> this.name=R5; <CR> } <CR> } <CR>  <EOC> 