 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS){ <CR> super(S); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intn1=0; <CR> do <CR> { <CR> n1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(n1>3||n1<1); <CR> returnmapTest(n1); <CR> } <CR> staticTestmapTest(intn1){ <CR> Testv1=null; <CR> switch(n1){ <CR> case1: <CR> v1=newExam("Exam"); <CR> break; <CR> case2: <CR> v1=newHomework("Homework"); <CR> break; <CR> case3: <CR> v1=newReport("Report"); <CR> break; <CR> } <CR> returnv1; <CR> } <CR> publicstaticvoidmain(String[]i2){ <CR> Stringy6,P5; <CR> doublen1,v0; <CR> System.out.println("請輸入學生學號: "); <CR> y6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> P5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> n1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> v0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentA9=newStudent(y6,P5,n1,v0); <CR> A9.setid(y6); <CR> A9.setname(P5); <CR> A9.setscore(n1); <CR> A9.setsw(v0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringy0){ <CR> super(y0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringT4){ <CR> super(T4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleb3){ <CR> score=b3; <CR> } <CR> voidsetid(Stringb3){ <CR> id=b3; <CR> } <CR> Student(StringD8,StringC0,doubleA4,doubleP5){ <CR> this.id=D8; <CR> this.name=C0; <CR> this.score=A4; <CR> this.sw=P5; <CR> } <CR> voidsetsw(doubleb3){ <CR> sw=b3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringb3){ <CR> name=b3; <CR> } <CR> Stringname; <CR> Stringid; <CR> doublescore; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringe4){ <CR> this.name=e4; <CR> } <CR> } <CR>  <EOC> 