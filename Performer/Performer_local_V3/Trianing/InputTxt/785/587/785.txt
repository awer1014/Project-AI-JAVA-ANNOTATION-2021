 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringB7){ <CR> super(B7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]c2){ <CR> StringS,N1; <CR> doubleU8,C6; <CR> System.out.println("請輸入學生學號: "); <CR> S=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentc8=newStudent(S,N1,U8,C6); <CR> c8.setid(S); <CR> c8.setname(N1); <CR> c8.setscore(U8); <CR> c8.setsw(C6); <CR> } <CR> staticTestmapTest(intU8){ <CR> TestB8=null; <CR> switch(U8){ <CR> case1: <CR> B8=newExam("Exam"); <CR> break; <CR> case2: <CR> B8=newHomework("Homework"); <CR> break; <CR> case3: <CR> B8=newReport("Report"); <CR> break; <CR> } <CR> returnB8; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU8=0; <CR> do <CR> { <CR> U8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U8>3||U8<1); <CR> returnmapTest(U8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa){ <CR> super(a); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringU9){ <CR> super(U9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringe2,Stringp0,doubled3,doubleP5){ <CR> this.id=e2; <CR> this.name=p0; <CR> this.score=d3; <CR> this.sw=P5; <CR> } <CR> voidsetid(Stringv){ <CR> id=v; <CR> } <CR> voidsetname(Stringv){ <CR> name=v; <CR> } <CR> voidsetscore(doublev){ <CR> score=v; <CR> } <CR> voidsetsw(doublev){ <CR> sw=v; <CR> } <CR> Stringname; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringz8){ <CR> this.name=z8; <CR> } <CR> } <CR>  <EOC> 