 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringw8){ <CR> super(w8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]Z2){ <CR> StringB2,h; <CR> doublev1,g9; <CR> System.out.println("請輸入學生學號: "); <CR> B2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> h=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> v1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentz4=newStudent(B2,h,v1,g9); <CR> z4.setid(B2); <CR> z4.setname(h); <CR> z4.setscore(v1); <CR> z4.setsw(g9); <CR> } <CR> staticTestmapTest(intv1){ <CR> TestH3=null; <CR> switch(v1){ <CR> case1: <CR> H3=newExam("Exam"); <CR> break; <CR> case2: <CR> H3=newHomework("Homework"); <CR> break; <CR> case3: <CR> H3=newReport("Report"); <CR> break; <CR> } <CR> returnH3; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intv1=0; <CR> do <CR> { <CR> v1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(v1>3||v1<1); <CR> returnmapTest(v1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn4){ <CR> super(n4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi3){ <CR> super(i3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Stringname; <CR> doublescore; <CR> voidsetscore(doubleN7){ <CR> score=N7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringN7){ <CR> name=N7; <CR> } <CR> Student(StringV3,Stringz0,doublek3,doublew8){ <CR> this.id=V3; <CR> this.name=z0; <CR> this.score=k3; <CR> this.sw=w8; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleN7){ <CR> sw=N7; <CR> } <CR> voidsetid(StringN7){ <CR> id=N7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringd3){ <CR> this.name=d3; <CR> } <CR> } <CR>  <EOC> 