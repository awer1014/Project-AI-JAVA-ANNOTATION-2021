 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringq){ <CR> super(q); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intA4){ <CR> Testl2=null; <CR> switch(A4){ <CR> case1: <CR> l2=newExam("Exam"); <CR> break; <CR> case2: <CR> l2=newHomework("Homework"); <CR> break; <CR> case3: <CR> l2=newReport("Report"); <CR> break; <CR> } <CR> returnl2; <CR> } <CR> publicstaticvoidmain(String[]C){ <CR> StringN3,v0; <CR> doubleA4,G0; <CR> System.out.println("請輸入學生學號: "); <CR> N3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> v0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> G0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp1=newStudent(N3,v0,A4,G0); <CR> p1.setid(N3); <CR> p1.setname(v0); <CR> p1.setscore(A4); <CR> p1.setsw(G0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA4=0; <CR> do <CR> { <CR> A4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A4>3||A4<1); <CR> returnmapTest(A4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringh7){ <CR> super(h7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringt6){ <CR> super(t6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringN0){ <CR> id=N0; <CR> } <CR> voidsetscore(doubleN0){ <CR> score=N0; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringN0){ <CR> name=N0; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublesw; <CR> voidsetsw(doubleN0){ <CR> sw=N0; <CR> } <CR> Student(StringM7,Stringw,doublew6,doublel9){ <CR> this.id=M7; <CR> this.name=w; <CR> this.score=w6; <CR> this.sw=l9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringS0){ <CR> this.name=S0; <CR> } <CR> } <CR>  <EOC> 