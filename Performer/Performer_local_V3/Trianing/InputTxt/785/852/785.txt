 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringz6){ <CR> super(z6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intW5){ <CR> TestL9=null; <CR> switch(W5){ <CR> case1: <CR> L9=newExam("Exam"); <CR> break; <CR> case2: <CR> L9=newHomework("Homework"); <CR> break; <CR> case3: <CR> L9=newReport("Report"); <CR> break; <CR> } <CR> returnL9; <CR> } <CR> publicstaticvoidmain(String[]l2){ <CR> Stringe0,e3; <CR> doubleW5,V4; <CR> System.out.println("請輸入學生學號: "); <CR> e0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> W5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> V4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentE0=newStudent(e0,e3,W5,V4); <CR> E0.setid(e0); <CR> E0.setname(e3); <CR> E0.setscore(W5); <CR> E0.setsw(V4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intW5=0; <CR> do <CR> { <CR> W5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(W5>3||W5<1); <CR> returnmapTest(W5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE9){ <CR> super(E9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringb7){ <CR> super(b7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringH7){ <CR> name=H7; <CR> } <CR> voidsetid(StringH7){ <CR> id=H7; <CR> } <CR> doublescore; <CR> voidsetsw(doubleH7){ <CR> sw=H7; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleH7){ <CR> score=H7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Student(StringP7,StringZ9,doubleH4,doubleh5){ <CR> this.id=P7; <CR> this.name=Z9; <CR> this.score=H4; <CR> this.sw=h5; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringJ0){ <CR> this.name=J0; <CR> } <CR> } <CR>  <EOC> 