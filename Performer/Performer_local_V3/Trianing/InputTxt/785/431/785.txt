 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringp0){ <CR> super(p0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]c2){ <CR> Stringo7,e8; <CR> doubleT5,F8; <CR> System.out.println("請輸入學生學號: "); <CR> o7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentE7=newStudent(o7,e8,T5,F8); <CR> E7.setid(o7); <CR> E7.setname(e8); <CR> E7.setscore(T5); <CR> E7.setsw(F8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT5=0; <CR> do <CR> { <CR> T5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T5>3||T5<1); <CR> returnmapTest(T5); <CR> } <CR> staticTestmapTest(intT5){ <CR> Testz0=null; <CR> switch(T5){ <CR> case1: <CR> z0=newExam("Exam"); <CR> break; <CR> case2: <CR> z0=newHomework("Homework"); <CR> break; <CR> case3: <CR> z0=newReport("Report"); <CR> break; <CR> } <CR> returnz0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa8){ <CR> super(a8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringh0){ <CR> super(h0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> voidsetscore(doubleB9){ <CR> score=B9; <CR> } <CR> doublescore; <CR> Student(StringN4,StringL1,doubleE9,doubleC1){ <CR> this.id=N4; <CR> this.name=L1; <CR> this.score=E9; <CR> this.sw=C1; <CR> } <CR> Stringid; <CR> voidsetname(StringB9){ <CR> name=B9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(StringB9){ <CR> id=B9; <CR> } <CR> Stringname; <CR> voidsetsw(doubleB9){ <CR> sw=B9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringm1){ <CR> this.name=m1; <CR> } <CR> } <CR>  <EOC> 