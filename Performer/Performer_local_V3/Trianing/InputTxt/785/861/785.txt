 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringN7){ <CR> super(N7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]V9){ <CR> Stringc3,v3; <CR> doublef8,R8; <CR> System.out.println("請輸入學生學號: "); <CR> c3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> v3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenti6=newStudent(c3,v3,f8,R8); <CR> i6.setid(c3); <CR> i6.setname(v3); <CR> i6.setscore(f8); <CR> i6.setsw(R8); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf8=0; <CR> do <CR> { <CR> f8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f8>3||f8<1); <CR> returnmapTest(f8); <CR> } <CR> staticTestmapTest(intf8){ <CR> Testl2=null; <CR> switch(f8){ <CR> case1: <CR> l2=newExam("Exam"); <CR> break; <CR> case2: <CR> l2=newHomework("Homework"); <CR> break; <CR> case3: <CR> l2=newReport("Report"); <CR> break; <CR> } <CR> returnl2; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringK7){ <CR> super(K7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE4){ <CR> super(E4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringD0){ <CR> name=D0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(StringD0){ <CR> id=D0; <CR> } <CR> Stringid; <CR> Student(StringM2,Stringz2,doubleR,doublez6){ <CR> this.id=M2; <CR> this.name=z2; <CR> this.score=R; <CR> this.sw=z6; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleD0){ <CR> sw=D0; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleD0){ <CR> score=D0; <CR> } <CR> Stringname; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringd3){ <CR> this.name=d3; <CR> } <CR> } <CR>  <EOC> 