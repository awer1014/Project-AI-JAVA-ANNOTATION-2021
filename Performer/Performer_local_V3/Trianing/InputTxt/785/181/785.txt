 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringZ8){ <CR> super(Z8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]C2){ <CR> StringH7,l2; <CR> doubleD6,g4; <CR> System.out.println("請輸入學生學號: "); <CR> H7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> l2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> D6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentC4=newStudent(H7,l2,D6,g4); <CR> C4.setid(H7); <CR> C4.setname(l2); <CR> C4.setscore(D6); <CR> C4.setsw(g4); <CR> } <CR> staticTestmapTest(intD6){ <CR> TestC0=null; <CR> switch(D6){ <CR> case1: <CR> C0=newExam("Exam"); <CR> break; <CR> case2: <CR> C0=newHomework("Homework"); <CR> break; <CR> case3: <CR> C0=newReport("Report"); <CR> break; <CR> } <CR> returnC0; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intD6=0; <CR> do <CR> { <CR> D6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(D6>3||D6<1); <CR> returnmapTest(D6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringM1){ <CR> super(M1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx4){ <CR> super(x4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleX9){ <CR> score=X9; <CR> } <CR> voidsetid(StringX9){ <CR> id=X9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> doublescore; <CR> Stringid; <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleX9){ <CR> sw=X9; <CR> } <CR> Student(Stringg,Stringo8,doubleK6,doubleI3){ <CR> this.id=g; <CR> this.name=o8; <CR> this.score=K6; <CR> this.sw=I3; <CR> } <CR> voidsetname(StringX9){ <CR> name=X9; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringa){ <CR> this.name=a; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 