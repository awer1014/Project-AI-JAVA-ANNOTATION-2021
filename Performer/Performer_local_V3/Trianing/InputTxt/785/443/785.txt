 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringw6){ <CR> super(w6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intd5=0; <CR> do <CR> { <CR> d5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(d5>3||d5<1); <CR> returnmapTest(d5); <CR> } <CR> publicstaticvoidmain(String[]D3){ <CR> Stringh5,g6; <CR> doubled5,o6; <CR> System.out.println("請輸入學生學號: "); <CR> h5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> g6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> d5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> o6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studente2=newStudent(h5,g6,d5,o6); <CR> e2.setid(h5); <CR> e2.setname(g6); <CR> e2.setscore(d5); <CR> e2.setsw(o6); <CR> } <CR> staticTestmapTest(intd5){ <CR> TestA7=null; <CR> switch(d5){ <CR> case1: <CR> A7=newExam("Exam"); <CR> break; <CR> case2: <CR> A7=newHomework("Homework"); <CR> break; <CR> case3: <CR> A7=newReport("Report"); <CR> break; <CR> } <CR> returnA7; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringk1){ <CR> super(k1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringt2){ <CR> super(t2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> Student(StringY0,Stringc1,doubleQ4,doubleh8){ <CR> this.id=Y0; <CR> this.name=c1; <CR> this.score=Q4; <CR> this.sw=h8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublen9){ <CR> sw=n9; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doublen9){ <CR> score=n9; <CR> } <CR> voidsetid(Stringn9){ <CR> id=n9; <CR> } <CR> Stringname; <CR> Stringid; <CR> voidsetname(Stringn9){ <CR> name=n9; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringq9){ <CR> this.name=q9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 