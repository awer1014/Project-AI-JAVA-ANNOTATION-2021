 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx9){ <CR> super(x9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intF9=0; <CR> do <CR> { <CR> F9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(F9>3||F9<1); <CR> returnmapTest(F9); <CR> } <CR> staticTestmapTest(intF9){ <CR> TestU9=null; <CR> switch(F9){ <CR> case1: <CR> U9=newExam("Exam"); <CR> break; <CR> case2: <CR> U9=newHomework("Homework"); <CR> break; <CR> case3: <CR> U9=newReport("Report"); <CR> break; <CR> } <CR> returnU9; <CR> } <CR> publicstaticvoidmain(String[]P5){ <CR> StringC2,Q4; <CR> doubleF9,f; <CR> System.out.println("請輸入學生學號: "); <CR> C2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> F9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> f=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentW=newStudent(C2,Q4,F9,f); <CR> W.setid(C2); <CR> W.setname(Q4); <CR> W.setscore(F9); <CR> W.setsw(f); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF6){ <CR> super(F6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringz7){ <CR> super(z7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> voidsetscore(doubleY2){ <CR> score=Y2; <CR> } <CR> voidsetname(StringY2){ <CR> name=Y2; <CR> } <CR> Student(Stringb5,StringO7,doublea8,doublee9){ <CR> this.id=b5; <CR> this.name=O7; <CR> this.score=a8; <CR> this.sw=e9; <CR> } <CR> voidsetid(StringY2){ <CR> id=Y2; <CR> } <CR> voidsetsw(doubleY2){ <CR> sw=Y2; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringR5){ <CR> this.name=R5; <CR> } <CR> } <CR>  <EOC> 