 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringj9){ <CR> super(j9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]n){ <CR> Stringw6,G2; <CR> doubleS3,Y1; <CR> System.out.println("請輸入學生學號: "); <CR> w6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> G2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> S3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Y1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx0=newStudent(w6,G2,S3,Y1); <CR> x0.setid(w6); <CR> x0.setname(G2); <CR> x0.setscore(S3); <CR> x0.setsw(Y1); <CR> } <CR> staticTestmapTest(intS3){ <CR> TestB7=null; <CR> switch(S3){ <CR> case1: <CR> B7=newExam("Exam"); <CR> break; <CR> case2: <CR> B7=newHomework("Homework"); <CR> break; <CR> case3: <CR> B7=newReport("Report"); <CR> break; <CR> } <CR> returnB7; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intS3=0; <CR> do <CR> { <CR> S3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(S3>3||S3<1); <CR> returnmapTest(S3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringQ9){ <CR> super(Q9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringQ){ <CR> super(Q); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doublex9){ <CR> score=x9; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetid(Stringx9){ <CR> id=x9; <CR> } <CR> voidsetname(Stringx9){ <CR> name=x9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublex9){ <CR> sw=x9; <CR> } <CR> doublesw; <CR> Student(Stringc3,Stringj4,doublek8,doubleQ4){ <CR> this.id=c3; <CR> this.name=j4; <CR> this.score=k8; <CR> this.sw=Q4; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Strings5){ <CR> this.name=s5; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 