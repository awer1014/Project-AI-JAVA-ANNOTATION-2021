 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo8){ <CR> super(o8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intD9){ <CR> Testm2=null; <CR> switch(D9){ <CR> case1: <CR> m2=newExam("Exam"); <CR> break; <CR> case2: <CR> m2=newHomework("Homework"); <CR> break; <CR> case3: <CR> m2=newReport("Report"); <CR> break; <CR> } <CR> returnm2; <CR> } <CR> publicstaticvoidmain(String[]A3){ <CR> Stringu2,g3; <CR> doubleD9,r0; <CR> System.out.println("請輸入學生學號: "); <CR> u2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> g3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> D9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> r0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentm7=newStudent(u2,g3,D9,r0); <CR> m7.setid(u2); <CR> m7.setname(g3); <CR> m7.setscore(D9); <CR> m7.setsw(r0); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intD9=0; <CR> do <CR> { <CR> D9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(D9>3||D9<1); <CR> returnmapTest(D9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringu2){ <CR> super(u2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringV){ <CR> super(V); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doublei){ <CR> score=i; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> voidsetsw(doublei){ <CR> sw=i; <CR> } <CR> voidsetid(Stringi){ <CR> id=i; <CR> } <CR> Student(Stringm9,StringF3,doubles3,doubleE7){ <CR> this.id=m9; <CR> this.name=F3; <CR> this.score=s3; <CR> this.sw=E7; <CR> } <CR> Stringname; <CR> voidsetname(Stringi){ <CR> name=i; <CR> } <CR> doublesw; <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringB){ <CR> this.name=B; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 