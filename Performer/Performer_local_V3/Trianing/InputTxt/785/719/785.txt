 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh2){ <CR> super(h2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intj2){ <CR> Testo3=null; <CR> switch(j2){ <CR> case1: <CR> o3=newExam("Exam"); <CR> break; <CR> case2: <CR> o3=newHomework("Homework"); <CR> break; <CR> case3: <CR> o3=newReport("Report"); <CR> break; <CR> } <CR> returno3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intj2=0; <CR> do <CR> { <CR> j2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(j2>3||j2<1); <CR> returnmapTest(j2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]R){ <CR> StringL3,N6; <CR> doublej2,x; <CR> System.out.println("請輸入學生學號: "); <CR> L3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> j2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> x=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentd4=newStudent(L3,N6,j2,x); <CR> d4.setid(L3); <CR> d4.setname(N6); <CR> d4.setscore(j2); <CR> d4.setsw(x); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringO2){ <CR> super(O2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringl8){ <CR> super(l8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> voidsetsw(doublec0){ <CR> sw=c0; <CR> } <CR> Stringname; <CR> Student(StringB7,StringO8,doubleU5,doublec4){ <CR> this.id=B7; <CR> this.name=O8; <CR> this.score=U5; <CR> this.sw=c4; <CR> } <CR> voidsetname(Stringc0){ <CR> name=c0; <CR> } <CR> doublescore; <CR> voidsetid(Stringc0){ <CR> id=c0; <CR> } <CR> voidsetscore(doublec0){ <CR> score=c0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringG2){ <CR> this.name=G2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 