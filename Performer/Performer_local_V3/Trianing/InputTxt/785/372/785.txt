 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringE7){ <CR> super(E7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]H3){ <CR> Stringn7,D5; <CR> doubler2,W8; <CR> System.out.println("請輸入學生學號: "); <CR> n7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> D5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> r2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp1=newStudent(n7,D5,r2,W8); <CR> p1.setid(n7); <CR> p1.setname(D5); <CR> p1.setscore(r2); <CR> p1.setsw(W8); <CR> } <CR> staticTestmapTest(intr2){ <CR> TestF6=null; <CR> switch(r2){ <CR> case1: <CR> F6=newExam("Exam"); <CR> break; <CR> case2: <CR> F6=newHomework("Homework"); <CR> break; <CR> case3: <CR> F6=newReport("Report"); <CR> break; <CR> } <CR> returnF6; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intr2=0; <CR> do <CR> { <CR> r2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(r2>3||r2<1); <CR> returnmapTest(r2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringN9){ <CR> super(N9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringI2){ <CR> super(I2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringN1){ <CR> name=N1; <CR> } <CR> Stringname; <CR> voidsetscore(doubleN1){ <CR> score=N1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubleN1){ <CR> sw=N1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringN1){ <CR> id=N1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> Student(Stringg3,StringS9,doublek8,doubleH){ <CR> this.id=g3; <CR> this.name=S9; <CR> this.score=k8; <CR> this.sw=H; <CR> } <CR> doublescore; <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringc1){ <CR> this.name=c1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 