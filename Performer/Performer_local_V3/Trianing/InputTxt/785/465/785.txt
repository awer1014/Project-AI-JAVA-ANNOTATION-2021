 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringM7){ <CR> super(M7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]G8){ <CR> StringL6,m4; <CR> doubleZ2,i8; <CR> System.out.println("請輸入學生學號: "); <CR> L6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> m4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Z2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> i8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentu0=newStudent(L6,m4,Z2,i8); <CR> u0.setid(L6); <CR> u0.setname(m4); <CR> u0.setscore(Z2); <CR> u0.setsw(i8); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intZ2=0; <CR> do <CR> { <CR> Z2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Z2>3||Z2<1); <CR> returnmapTest(Z2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intZ2){ <CR> Testq6=null; <CR> switch(Z2){ <CR> case1: <CR> q6=newExam("Exam"); <CR> break; <CR> case2: <CR> q6=newHomework("Homework"); <CR> break; <CR> case3: <CR> q6=newReport("Report"); <CR> break; <CR> } <CR> returnq6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp4){ <CR> super(p4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringz7){ <CR> super(z7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doublei3){ <CR> score=i3; <CR> } <CR> doublesw; <CR> voidsetname(Stringi3){ <CR> name=i3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetid(Stringi3){ <CR> id=i3; <CR> } <CR> Student(Stringg9,Stringp4,doublea,doubleJ2){ <CR> this.id=g9; <CR> this.name=p4; <CR> this.score=a; <CR> this.sw=J2; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublei3){ <CR> sw=i3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringC){ <CR> this.name=C; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 