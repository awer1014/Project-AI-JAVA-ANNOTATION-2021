 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringf0){ <CR> super(f0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]p4){ <CR> Stringf9,c5; <CR> doubleg0,S1; <CR> System.out.println("請輸入學生學號: "); <CR> f9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> c5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> g0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> S1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta=newStudent(f9,c5,g0,S1); <CR> a.setid(f9); <CR> a.setname(c5); <CR> a.setscore(g0); <CR> a.setsw(S1); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intg0=0; <CR> do <CR> { <CR> g0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(g0>3||g0<1); <CR> returnmapTest(g0); <CR> } <CR> staticTestmapTest(intg0){ <CR> Testq2=null; <CR> switch(g0){ <CR> case1: <CR> q2=newExam("Exam"); <CR> break; <CR> case2: <CR> q2=newHomework("Homework"); <CR> break; <CR> case3: <CR> q2=newReport("Report"); <CR> break; <CR> } <CR> returnq2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringw3){ <CR> super(w3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringq1){ <CR> super(q1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleX1){ <CR> sw=X1; <CR> } <CR> voidsetid(StringX1){ <CR> id=X1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringX1){ <CR> name=X1; <CR> } <CR> Stringname; <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleX1){ <CR> score=X1; <CR> } <CR> Student(Stringx0,Stringh3,doubler7,doublem9){ <CR> this.id=x0; <CR> this.name=h3; <CR> this.score=r7; <CR> this.sw=m9; <CR> } <CR> doublesw; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringE1){ <CR> this.name=E1; <CR> } <CR> } <CR>  <EOC> 