 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringz7){ <CR> super(z7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]g8){ <CR> StringF,A4; <CR> doubles4,n4; <CR> System.out.println("請輸入學生學號: "); <CR> F=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> A4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> s4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentR4=newStudent(F,A4,s4,n4); <CR> R4.setid(F); <CR> R4.setname(A4); <CR> R4.setscore(s4); <CR> R4.setsw(n4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> ints4=0; <CR> do <CR> { <CR> s4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(s4>3||s4<1); <CR> returnmapTest(s4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(ints4){ <CR> TestJ1=null; <CR> switch(s4){ <CR> case1: <CR> J1=newExam("Exam"); <CR> break; <CR> case2: <CR> J1=newHomework("Homework"); <CR> break; <CR> case3: <CR> J1=newReport("Report"); <CR> break; <CR> } <CR> returnJ1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa4){ <CR> super(a4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringF2){ <CR> super(F2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringd){ <CR> id=d; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringd){ <CR> name=d; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringw3,StringQ6,doubleP9,doubleu1){ <CR> this.id=w3; <CR> this.name=Q6; <CR> this.score=P9; <CR> this.sw=u1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> Stringname; <CR> voidsetsw(doubled){ <CR> sw=d; <CR> } <CR> doublesw; <CR> voidsetscore(doubled){ <CR> score=d; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringd2){ <CR> this.name=d2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 