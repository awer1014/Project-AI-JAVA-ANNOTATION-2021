 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringG7){ <CR> super(G7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intX4=0; <CR> do <CR> { <CR> X4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(X4>3||X4<1); <CR> returnmapTest(X4); <CR> } <CR> publicstaticvoidmain(String[]i1){ <CR> StringS,t9; <CR> doubleX4,Z9; <CR> System.out.println("請輸入學生學號: "); <CR> S=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> t9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> X4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenth9=newStudent(S,t9,X4,Z9); <CR> h9.setid(S); <CR> h9.setname(t9); <CR> h9.setscore(X4); <CR> h9.setsw(Z9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intX4){ <CR> TestA2=null; <CR> switch(X4){ <CR> case1: <CR> A2=newExam("Exam"); <CR> break; <CR> case2: <CR> A2=newHomework("Homework"); <CR> break; <CR> case3: <CR> A2=newReport("Report"); <CR> break; <CR> } <CR> returnA2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringh6){ <CR> super(h6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi5){ <CR> super(i5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringe1){ <CR> id=e1; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublee1){ <CR> sw=e1; <CR> } <CR> Stringid; <CR> voidsetscore(doublee1){ <CR> score=e1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(Stringh,StringI5,doublei4,doubleC6){ <CR> this.id=h; <CR> this.name=I5; <CR> this.score=i4; <CR> this.sw=C6; <CR> } <CR> voidsetname(Stringe1){ <CR> name=e1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringX7){ <CR> this.name=X7; <CR> } <CR> } <CR>  <EOC> 