 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringz5){ <CR> super(z5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intD){ <CR> Testq6=null; <CR> switch(D){ <CR> case1: <CR> q6=newExam("Exam"); <CR> break; <CR> case2: <CR> q6=newHomework("Homework"); <CR> break; <CR> case3: <CR> q6=newReport("Report"); <CR> break; <CR> } <CR> returnq6; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]x7){ <CR> Stringa7,D0; <CR> doubleD,g1; <CR> System.out.println("請輸入學生學號: "); <CR> a7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> D0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> D=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studente2=newStudent(a7,D0,D,g1); <CR> e2.setid(a7); <CR> e2.setname(D0); <CR> e2.setscore(D); <CR> e2.setsw(g1); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intD=0; <CR> do <CR> { <CR> D=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(D>3||D<1); <CR> returnmapTest(D); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringY0){ <CR> super(Y0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringA6){ <CR> super(A6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringq2){ <CR> name=q2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringq2){ <CR> id=q2; <CR> } <CR> Stringid; <CR> voidsetscore(doubleq2){ <CR> score=q2; <CR> } <CR> voidsetsw(doubleq2){ <CR> sw=q2; <CR> } <CR> doublesw; <CR> doublescore; <CR> Student(StringU4,Stringh9,doubleb0,doubleD3){ <CR> this.id=U4; <CR> this.name=h9; <CR> this.score=b0; <CR> this.sw=D3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringW9){ <CR> this.name=W9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 