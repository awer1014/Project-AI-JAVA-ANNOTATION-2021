 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringt2){ <CR> super(t2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]L4){ <CR> Stringo1,w4; <CR> doublej9,x4; <CR> System.out.println("請輸入學生學號: "); <CR> o1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> w4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> j9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> x4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX6=newStudent(o1,w4,j9,x4); <CR> X6.setid(o1); <CR> X6.setname(w4); <CR> X6.setscore(j9); <CR> X6.setsw(x4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intj9=0; <CR> do <CR> { <CR> j9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(j9>3||j9<1); <CR> returnmapTest(j9); <CR> } <CR> staticTestmapTest(intj9){ <CR> TestP4=null; <CR> switch(j9){ <CR> case1: <CR> P4=newExam("Exam"); <CR> break; <CR> case2: <CR> P4=newHomework("Homework"); <CR> break; <CR> case3: <CR> P4=newReport("Report"); <CR> break; <CR> } <CR> returnP4; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp3){ <CR> super(p3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringa5){ <CR> super(a5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringt1){ <CR> id=t1; <CR> } <CR> Student(Stringl4,Stringf6,doublep1,doublen9){ <CR> this.id=l4; <CR> this.name=f6; <CR> this.score=p1; <CR> this.sw=n9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringt1){ <CR> name=t1; <CR> } <CR> doublescore; <CR> voidsetsw(doublet1){ <CR> sw=t1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetscore(doublet1){ <CR> score=t1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringk9){ <CR> this.name=k9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 