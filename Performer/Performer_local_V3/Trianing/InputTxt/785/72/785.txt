 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg2){ <CR> super(g2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]Z1){ <CR> StringV5,U1; <CR> doubleG8,g; <CR> System.out.println("請輸入學生學號: "); <CR> V5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> U1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> g=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentS6=newStudent(V5,U1,G8,g); <CR> S6.setid(V5); <CR> S6.setname(U1); <CR> S6.setscore(G8); <CR> S6.setsw(g); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG8=0; <CR> do <CR> { <CR> G8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G8>3||G8<1); <CR> returnmapTest(G8); <CR> } <CR> staticTestmapTest(intG8){ <CR> TestE9=null; <CR> switch(G8){ <CR> case1: <CR> E9=newExam("Exam"); <CR> break; <CR> case2: <CR> E9=newHomework("Homework"); <CR> break; <CR> case3: <CR> E9=newReport("Report"); <CR> break; <CR> } <CR> returnE9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringi7){ <CR> super(i7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringA1){ <CR> super(A1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringy5){ <CR> id=y5; <CR> } <CR> voidsetscore(doubley5){ <CR> score=y5; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubley5){ <CR> sw=y5; <CR> } <CR> voidsetname(Stringy5){ <CR> name=y5; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublesw; <CR> doublescore; <CR> Student(StringT0,Stringa4,doubleX,doubleh0){ <CR> this.id=T0; <CR> this.name=a4; <CR> this.score=X; <CR> this.sw=h0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk3){ <CR> this.name=k3; <CR> } <CR> } <CR>  <EOC> 