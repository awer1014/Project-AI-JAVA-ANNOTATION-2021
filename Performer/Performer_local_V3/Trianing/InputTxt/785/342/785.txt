 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringg2){ <CR> super(g2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]q8){ <CR> Stringc0,t5; <CR> doubleV6,S8; <CR> System.out.println("請輸入學生學號: "); <CR> c0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> t5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> S8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ7=newStudent(c0,t5,V6,S8); <CR> Z7.setid(c0); <CR> Z7.setname(t5); <CR> Z7.setscore(V6); <CR> Z7.setsw(S8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV6=0; <CR> do <CR> { <CR> V6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V6>3||V6<1); <CR> returnmapTest(V6); <CR> } <CR> staticTestmapTest(intV6){ <CR> TestT2=null; <CR> switch(V6){ <CR> case1: <CR> T2=newExam("Exam"); <CR> break; <CR> case2: <CR> T2=newHomework("Homework"); <CR> break; <CR> case3: <CR> T2=newReport("Report"); <CR> break; <CR> } <CR> returnT2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringv7){ <CR> super(v7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringl0){ <CR> super(l0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringr2){ <CR> id=r2; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(StringI5,Stringr3,doubleB4,doubleI4){ <CR> this.id=I5; <CR> this.name=r3; <CR> this.score=B4; <CR> this.sw=I4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(Stringr2){ <CR> name=r2; <CR> } <CR> voidsetscore(doubler2){ <CR> score=r2; <CR> } <CR> voidsetsw(doubler2){ <CR> sw=r2; <CR> } <CR> doublescore; <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringX8){ <CR> this.name=X8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 