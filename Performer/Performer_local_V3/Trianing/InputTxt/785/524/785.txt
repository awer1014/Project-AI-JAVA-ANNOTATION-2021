 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringi5){ <CR> super(i5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO3=0; <CR> do <CR> { <CR> O3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O3>3||O3<1); <CR> returnmapTest(O3); <CR> } <CR> staticTestmapTest(intO3){ <CR> Testq9=null; <CR> switch(O3){ <CR> case1: <CR> q9=newExam("Exam"); <CR> break; <CR> case2: <CR> q9=newHomework("Homework"); <CR> break; <CR> case3: <CR> q9=newReport("Report"); <CR> break; <CR> } <CR> returnq9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]v9){ <CR> StringM1,T; <CR> doubleO3,k0; <CR> System.out.println("請輸入學生學號: "); <CR> M1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> T=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> k0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentN2=newStudent(M1,T,O3,k0); <CR> N2.setid(M1); <CR> N2.setname(T); <CR> N2.setscore(O3); <CR> N2.setsw(k0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringg0){ <CR> super(g0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi3){ <CR> super(i3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringU3){ <CR> id=U3; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleU3){ <CR> score=U3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(StringU3){ <CR> name=U3; <CR> } <CR> Student(Stringz7,StringP3,doubleM2,doubleX4){ <CR> this.id=z7; <CR> this.name=P3; <CR> this.score=M2; <CR> this.sw=X4; <CR> } <CR> doublesw; <CR> voidsetsw(doubleU3){ <CR> sw=U3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk3){ <CR> this.name=k3; <CR> } <CR> } <CR>  <EOC> 