 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringJ9){ <CR> super(J9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intC){ <CR> TestU2=null; <CR> switch(C){ <CR> case1: <CR> U2=newExam("Exam"); <CR> break; <CR> case2: <CR> U2=newHomework("Homework"); <CR> break; <CR> case3: <CR> U2=newReport("Report"); <CR> break; <CR> } <CR> returnU2; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intC=0; <CR> do <CR> { <CR> C=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(C>3||C<1); <CR> returnmapTest(C); <CR> } <CR> publicstaticvoidmain(String[]Z7){ <CR> StringX1,D0; <CR> doubleC,Q6; <CR> System.out.println("請輸入學生學號: "); <CR> X1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> D0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> C=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Q6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentN1=newStudent(X1,D0,C,Q6); <CR> N1.setid(X1); <CR> N1.setname(D0); <CR> N1.setscore(C); <CR> N1.setsw(Q6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringP0){ <CR> super(P0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringj){ <CR> super(j); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> voidsetsw(doubleE0){ <CR> sw=E0; <CR> } <CR> Student(StringF5,StringL,doubleE1,doubleS4){ <CR> this.id=F5; <CR> this.name=L; <CR> this.score=E1; <CR> this.sw=S4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> voidsetscore(doubleE0){ <CR> score=E0; <CR> } <CR> voidsetname(StringE0){ <CR> name=E0; <CR> } <CR> Stringname; <CR> Stringid; <CR> voidsetid(StringE0){ <CR> id=E0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringI1){ <CR> this.name=I1; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 