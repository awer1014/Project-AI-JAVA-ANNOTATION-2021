 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringF3){ <CR> super(F3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intf8){ <CR> Testb9=null; <CR> switch(f8){ <CR> case1: <CR> b9=newExam("Exam"); <CR> break; <CR> case2: <CR> b9=newHomework("Homework"); <CR> break; <CR> case3: <CR> b9=newReport("Report"); <CR> break; <CR> } <CR> returnb9; <CR> } <CR> publicstaticvoidmain(String[]m2){ <CR> StringP0,A0; <CR> doublef8,c0; <CR> System.out.println("請輸入學生學號: "); <CR> P0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> A0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> c0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenty5=newStudent(P0,A0,f8,c0); <CR> y5.setid(P0); <CR> y5.setname(A0); <CR> y5.setscore(f8); <CR> y5.setsw(c0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf8=0; <CR> do <CR> { <CR> f8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f8>3||f8<1); <CR> returnmapTest(f8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringi7){ <CR> super(i7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringp3){ <CR> super(p3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublea6){ <CR> sw=a6; <CR> } <CR> voidsetname(Stringa6){ <CR> name=a6; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doublea6){ <CR> score=a6; <CR> } <CR> voidsetid(Stringa6){ <CR> id=a6; <CR> } <CR> Student(StringH3,Stringm9,doublee5,doubleG0){ <CR> this.id=H3; <CR> this.name=m9; <CR> this.score=e5; <CR> this.sw=G0; <CR> } <CR> Stringname; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringw8){ <CR> this.name=w8; <CR> } <CR> } <CR>  <EOC> 