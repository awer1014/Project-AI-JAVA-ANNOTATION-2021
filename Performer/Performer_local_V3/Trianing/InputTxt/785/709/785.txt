 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringQ2){ <CR> super(Q2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]D0){ <CR> StringS2,Q6; <CR> doubleP9,L2; <CR> System.out.println("請輸入學生學號: "); <CR> S2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> P9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> L2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentm3=newStudent(S2,Q6,P9,L2); <CR> m3.setid(S2); <CR> m3.setname(Q6); <CR> m3.setscore(P9); <CR> m3.setsw(L2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intP9=0; <CR> do <CR> { <CR> P9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(P9>3||P9<1); <CR> returnmapTest(P9); <CR> } <CR> staticTestmapTest(intP9){ <CR> Testz7=null; <CR> switch(P9){ <CR> case1: <CR> z7=newExam("Exam"); <CR> break; <CR> case2: <CR> z7=newHomework("Homework"); <CR> break; <CR> case3: <CR> z7=newReport("Report"); <CR> break; <CR> } <CR> returnz7; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringz){ <CR> super(z); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN8){ <CR> super(N8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringN9){ <CR> id=N9; <CR> } <CR> Stringid; <CR> voidsetsw(doubleN9){ <CR> sw=N9; <CR> } <CR> voidsetname(StringN9){ <CR> name=N9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(Stringl4,StringD9,doubley0,doubleo){ <CR> this.id=l4; <CR> this.name=D9; <CR> this.score=y0; <CR> this.sw=o; <CR> } <CR> doublesw; <CR> voidsetscore(doubleN9){ <CR> score=N9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringi){ <CR> this.name=i; <CR> } <CR> } <CR>  <EOC> 