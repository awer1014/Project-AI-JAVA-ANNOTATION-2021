 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringG1){ <CR> super(G1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]m6){ <CR> Stringh2,e; <CR> doubleY,h7; <CR> System.out.println("請輸入學生學號: "); <CR> h2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Y=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> h7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta8=newStudent(h2,e,Y,h7); <CR> a8.setid(h2); <CR> a8.setname(e); <CR> a8.setscore(Y); <CR> a8.setsw(h7); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intY){ <CR> TestG0=null; <CR> switch(Y){ <CR> case1: <CR> G0=newExam("Exam"); <CR> break; <CR> case2: <CR> G0=newHomework("Homework"); <CR> break; <CR> case3: <CR> G0=newReport("Report"); <CR> break; <CR> } <CR> returnG0; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intY=0; <CR> do <CR> { <CR> Y=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Y>3||Y<1); <CR> returnmapTest(Y); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringL0){ <CR> super(L0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringW6){ <CR> super(W6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doublew5){ <CR> sw=w5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(StringN7,StringO8,doublex3,doublew1){ <CR> this.id=N7; <CR> this.name=O8; <CR> this.score=x3; <CR> this.sw=w1; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetid(Stringw5){ <CR> id=w5; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doublew5){ <CR> score=w5; <CR> } <CR> doublescore; <CR> Stringid; <CR> voidsetname(Stringw5){ <CR> name=w5; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringJ2){ <CR> this.name=J2; <CR> } <CR> } <CR>  <EOC> 