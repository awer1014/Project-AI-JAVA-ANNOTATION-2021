 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringL8){ <CR> super(L8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]R7){ <CR> Stringc9,Y5; <CR> doublef5,v7; <CR> System.out.println("請輸入學生學號: "); <CR> c9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Y5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> v7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentF5=newStudent(c9,Y5,f5,v7); <CR> F5.setid(c9); <CR> F5.setname(Y5); <CR> F5.setscore(f5); <CR> F5.setsw(v7); <CR> } <CR> staticTestmapTest(intf5){ <CR> TestR8=null; <CR> switch(f5){ <CR> case1: <CR> R8=newExam("Exam"); <CR> break; <CR> case2: <CR> R8=newHomework("Homework"); <CR> break; <CR> case3: <CR> R8=newReport("Report"); <CR> break; <CR> } <CR> returnR8; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf5=0; <CR> do <CR> { <CR> f5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f5>3||f5<1); <CR> returnmapTest(f5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringl7){ <CR> super(l7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi){ <CR> super(i); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Student(StringZ8,Stringa2,doubleB7,doubleL4){ <CR> this.id=Z8; <CR> this.name=a2; <CR> this.score=B7; <CR> this.sw=L4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleK8){ <CR> score=K8; <CR> } <CR> voidsetsw(doubleK8){ <CR> sw=K8; <CR> } <CR> Stringname; <CR> voidsetid(StringK8){ <CR> id=K8; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringK8){ <CR> name=K8; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringw){ <CR> this.name=w; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 