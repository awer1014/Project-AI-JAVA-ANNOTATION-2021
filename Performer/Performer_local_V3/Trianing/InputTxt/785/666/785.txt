 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr7){ <CR> super(r7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intn){ <CR> Testw6=null; <CR> switch(n){ <CR> case1: <CR> w6=newExam("Exam"); <CR> break; <CR> case2: <CR> w6=newHomework("Homework"); <CR> break; <CR> case3: <CR> w6=newReport("Report"); <CR> break; <CR> } <CR> returnw6; <CR> } <CR> publicstaticvoidmain(String[]j){ <CR> StringT4,b5; <CR> doublen,X2; <CR> System.out.println("請輸入學生學號: "); <CR> T4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> b5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> n=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> X2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentZ5=newStudent(T4,b5,n,X2); <CR> Z5.setid(T4); <CR> Z5.setname(b5); <CR> Z5.setscore(n); <CR> Z5.setsw(X2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intn=0; <CR> do <CR> { <CR> n=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(n>3||n<1); <CR> returnmapTest(n); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringz6){ <CR> super(z6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringS7){ <CR> super(S7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doublem4){ <CR> sw=m4; <CR> } <CR> Stringid; <CR> voidsetname(Stringm4){ <CR> name=m4; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublem4){ <CR> score=m4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringm4){ <CR> id=m4; <CR> } <CR> Student(StringW5,StringL5,doubles7,doublex4){ <CR> this.id=W5; <CR> this.name=L5; <CR> this.score=s7; <CR> this.sw=x4; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringf9){ <CR> this.name=f9; <CR> } <CR> } <CR>  <EOC> 