 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringW4){ <CR> super(W4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]f){ <CR> Stringh5,Y2; <CR> doubled8,n; <CR> System.out.println("請輸入學生學號: "); <CR> h5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Y2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> d8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentE8=newStudent(h5,Y2,d8,n); <CR> E8.setid(h5); <CR> E8.setname(Y2); <CR> E8.setscore(d8); <CR> E8.setsw(n); <CR> } <CR> staticTestmapTest(intd8){ <CR> TestT1=null; <CR> switch(d8){ <CR> case1: <CR> T1=newExam("Exam"); <CR> break; <CR> case2: <CR> T1=newHomework("Homework"); <CR> break; <CR> case3: <CR> T1=newReport("Report"); <CR> break; <CR> } <CR> returnT1; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intd8=0; <CR> do <CR> { <CR> d8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(d8>3||d8<1); <CR> returnmapTest(d8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringd5){ <CR> super(d5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi5){ <CR> super(i5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringw5,Stringx6,doubler,doublec2){ <CR> this.id=w5; <CR> this.name=x6; <CR> this.score=r; <CR> this.sw=c2; <CR> } <CR> Stringname; <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetname(Stringn){ <CR> name=n; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublen){ <CR> score=n; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doublen){ <CR> sw=n; <CR> } <CR> voidsetid(Stringn){ <CR> id=n; <CR> } <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringj2){ <CR> this.name=j2; <CR> } <CR> } <CR>  <EOC> 