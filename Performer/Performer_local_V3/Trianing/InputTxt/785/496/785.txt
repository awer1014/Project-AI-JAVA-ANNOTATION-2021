 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh3){ <CR> super(h3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intC){ <CR> TestA1=null; <CR> switch(C){ <CR> case1: <CR> A1=newExam("Exam"); <CR> break; <CR> case2: <CR> A1=newHomework("Homework"); <CR> break; <CR> case3: <CR> A1=newReport("Report"); <CR> break; <CR> } <CR> returnA1; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intC=0; <CR> do <CR> { <CR> C=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(C>3||C<1); <CR> returnmapTest(C); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]V5){ <CR> Stringt6,x9; <CR> doubleC,a7; <CR> System.out.println("請輸入學生學號: "); <CR> t6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> x9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> C=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> a7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr1=newStudent(t6,x9,C,a7); <CR> r1.setid(t6); <CR> r1.setname(x9); <CR> r1.setscore(C); <CR> r1.setsw(a7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp4){ <CR> super(p4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR9){ <CR> super(R9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublesw; <CR> Student(StringN4,Stringu7,doubleF4,doubled3){ <CR> this.id=N4; <CR> this.name=u7; <CR> this.score=F4; <CR> this.sw=d3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(StringS8){ <CR> id=S8; <CR> } <CR> voidsetsw(doubleS8){ <CR> sw=S8; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringS8){ <CR> name=S8; <CR> } <CR> voidsetscore(doubleS8){ <CR> score=S8; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringe8){ <CR> this.name=e8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 