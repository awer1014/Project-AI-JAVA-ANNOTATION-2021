 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringt7){ <CR> super(t7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]g1){ <CR> StringL1,Q1; <CR> doubleI,a; <CR> System.out.println("請輸入學生學號: "); <CR> L1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> I=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> a=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentv6=newStudent(L1,Q1,I,a); <CR> v6.setid(L1); <CR> v6.setname(Q1); <CR> v6.setscore(I); <CR> v6.setsw(a); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intI){ <CR> TestC3=null; <CR> switch(I){ <CR> case1: <CR> C3=newExam("Exam"); <CR> break; <CR> case2: <CR> C3=newHomework("Homework"); <CR> break; <CR> case3: <CR> C3=newReport("Report"); <CR> break; <CR> } <CR> returnC3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intI=0; <CR> do <CR> { <CR> I=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(I>3||I<1); <CR> returnmapTest(I); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringi1){ <CR> super(i1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringc6){ <CR> super(c6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(StringM2,Stringq5,doublex,doubleR7){ <CR> this.id=M2; <CR> this.name=q5; <CR> this.score=x; <CR> this.sw=R7; <CR> } <CR> doublesw; <CR> doublescore; <CR> voidsetname(Stringi2){ <CR> name=i2; <CR> } <CR> Stringname; <CR> voidsetsw(doublei2){ <CR> sw=i2; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringi2){ <CR> id=i2; <CR> } <CR> voidsetscore(doublei2){ <CR> score=i2; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringn3){ <CR> this.name=n3; <CR> } <CR> } <CR>  <EOC> 