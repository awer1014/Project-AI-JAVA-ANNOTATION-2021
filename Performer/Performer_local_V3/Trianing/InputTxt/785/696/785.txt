 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringy9){ <CR> super(y9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]F){ <CR> Stringu7,O; <CR> doubleR4,H9; <CR> System.out.println("請輸入學生學號: "); <CR> u7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> O=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> R4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> H9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentu9=newStudent(u7,O,R4,H9); <CR> u9.setid(u7); <CR> u9.setname(O); <CR> u9.setscore(R4); <CR> u9.setsw(H9); <CR> } <CR> staticTestmapTest(intR4){ <CR> TestP8=null; <CR> switch(R4){ <CR> case1: <CR> P8=newExam("Exam"); <CR> break; <CR> case2: <CR> P8=newHomework("Homework"); <CR> break; <CR> case3: <CR> P8=newReport("Report"); <CR> break; <CR> } <CR> returnP8; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intR4=0; <CR> do <CR> { <CR> R4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(R4>3||R4<1); <CR> returnmapTest(R4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringT5){ <CR> super(T5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Strings7){ <CR> super(s7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringA4){ <CR> id=A4; <CR> } <CR> voidsetname(StringA4){ <CR> name=A4; <CR> } <CR> voidsetsw(doubleA4){ <CR> sw=A4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleA4){ <CR> score=A4; <CR> } <CR> Student(Stringy6,Stringh,doublev6,doubleg3){ <CR> this.id=y6; <CR> this.name=h; <CR> this.score=v6; <CR> this.sw=g3; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Stringname; <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringP){ <CR> this.name=P; <CR> } <CR> } <CR>  <EOC> 