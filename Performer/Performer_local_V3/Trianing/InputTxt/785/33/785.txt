 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringr3){ <CR> super(r3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]g4){ <CR> StringC3,r0; <CR> doublef3,R7; <CR> System.out.println("請輸入學生學號: "); <CR> C3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> r0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> f3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> R7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf7=newStudent(C3,r0,f3,R7); <CR> f7.setid(C3); <CR> f7.setname(r0); <CR> f7.setscore(f3); <CR> f7.setsw(R7); <CR> } <CR> staticTestmapTest(intf3){ <CR> TestP3=null; <CR> switch(f3){ <CR> case1: <CR> P3=newExam("Exam"); <CR> break; <CR> case2: <CR> P3=newHomework("Homework"); <CR> break; <CR> case3: <CR> P3=newReport("Report"); <CR> break; <CR> } <CR> returnP3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intf3=0; <CR> do <CR> { <CR> f3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(f3>3||f3<1); <CR> returnmapTest(f3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringk6){ <CR> super(k6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringZ){ <CR> super(Z); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doublen1){ <CR> sw=n1; <CR> } <CR> Student(Stringk7,StringT0,doubleK4,doubleS5){ <CR> this.id=k7; <CR> this.name=T0; <CR> this.score=K4; <CR> this.sw=S5; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublescore; <CR> voidsetid(Stringn1){ <CR> id=n1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doublen1){ <CR> score=n1; <CR> } <CR> voidsetname(Stringn1){ <CR> name=n1; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringn6){ <CR> this.name=n6; <CR> } <CR> } <CR>  <EOC> 