 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringu0){ <CR> super(u0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]V0){ <CR> Stringc3,I7; <CR> doubleI9,X9; <CR> System.out.println("請輸入學生學號: "); <CR> c3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> I7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> I9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> X9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta8=newStudent(c3,I7,I9,X9); <CR> a8.setid(c3); <CR> a8.setname(I7); <CR> a8.setscore(I9); <CR> a8.setsw(X9); <CR> } <CR> staticTestmapTest(intI9){ <CR> TestV8=null; <CR> switch(I9){ <CR> case1: <CR> V8=newExam("Exam"); <CR> break; <CR> case2: <CR> V8=newHomework("Homework"); <CR> break; <CR> case3: <CR> V8=newReport("Report"); <CR> break; <CR> } <CR> returnV8; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intI9=0; <CR> do <CR> { <CR> I9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(I9>3||I9<1); <CR> returnmapTest(I9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE5){ <CR> super(E5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringo8){ <CR> super(o8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Stringid; <CR> voidsetname(StringC){ <CR> name=C; <CR> } <CR> voidsetsw(doubleC){ <CR> sw=C; <CR> } <CR> voidsetid(StringC){ <CR> id=C; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Student(StringO9,Stringl5,doubleQ,doubleX7){ <CR> this.id=O9; <CR> this.name=l5; <CR> this.score=Q; <CR> this.sw=X7; <CR> } <CR> voidsetscore(doubleC){ <CR> score=C; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringe3){ <CR> this.name=e3; <CR> } <CR> } <CR>  <EOC> 