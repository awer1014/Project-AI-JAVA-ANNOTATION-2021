 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringE){ <CR> super(E); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intv9=0; <CR> do <CR> { <CR> v9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(v9>3||v9<1); <CR> returnmapTest(v9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]K7){ <CR> Strings8,D5; <CR> doublev9,S6; <CR> System.out.println("請輸入學生學號: "); <CR> s8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> D5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> v9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> S6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentR1=newStudent(s8,D5,v9,S6); <CR> R1.setid(s8); <CR> R1.setname(D5); <CR> R1.setscore(v9); <CR> R1.setsw(S6); <CR> } <CR> staticTestmapTest(intv9){ <CR> Testr0=null; <CR> switch(v9){ <CR> case1: <CR> r0=newExam("Exam"); <CR> break; <CR> case2: <CR> r0=newHomework("Homework"); <CR> break; <CR> case3: <CR> r0=newReport("Report"); <CR> break; <CR> } <CR> returnr0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringI){ <CR> super(I); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringO2){ <CR> super(O2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringG8){ <CR> id=G8; <CR> } <CR> Stringid; <CR> Student(StringV8,Stringt4,doublep6,doubleo2){ <CR> this.id=V8; <CR> this.name=t4; <CR> this.score=p6; <CR> this.sw=o2; <CR> } <CR> voidsetscore(doubleG8){ <CR> score=G8; <CR> } <CR> doublescore; <CR> voidsetsw(doubleG8){ <CR> sw=G8; <CR> } <CR> voidsetname(StringG8){ <CR> name=G8; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringz){ <CR> this.name=z; <CR> } <CR> } <CR>  <EOC> 