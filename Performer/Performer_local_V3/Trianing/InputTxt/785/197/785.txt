 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringA5){ <CR> super(A5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]R1){ <CR> StringD5,E9; <CR> doubleo9,C5; <CR> System.out.println("請輸入學生學號: "); <CR> D5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> o9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentQ8=newStudent(D5,E9,o9,C5); <CR> Q8.setid(D5); <CR> Q8.setname(E9); <CR> Q8.setscore(o9); <CR> Q8.setsw(C5); <CR> } <CR> staticTestmapTest(into9){ <CR> TestM=null; <CR> switch(o9){ <CR> case1: <CR> M=newExam("Exam"); <CR> break; <CR> case2: <CR> M=newHomework("Homework"); <CR> break; <CR> case3: <CR> M=newReport("Report"); <CR> break; <CR> } <CR> returnM; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> into9=0; <CR> do <CR> { <CR> o9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(o9>3||o9<1); <CR> returnmapTest(o9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringD7){ <CR> super(D7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringT4){ <CR> super(T4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleu4){ <CR> score=u4; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublesw; <CR> Student(Stringo6,StringJ7,doubleg0,doubleC2){ <CR> this.id=o6; <CR> this.name=J7; <CR> this.score=g0; <CR> this.sw=C2; <CR> } <CR> voidsetsw(doubleu4){ <CR> sw=u4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringu4){ <CR> id=u4; <CR> } <CR> voidsetname(Stringu4){ <CR> name=u4; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringL0){ <CR> this.name=L0; <CR> } <CR> } <CR>  <EOC> 