 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringA5){ <CR> super(A5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intc8=0; <CR> do <CR> { <CR> c8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(c8>3||c8<1); <CR> returnmapTest(c8); <CR> } <CR> staticTestmapTest(intc8){ <CR> Testi8=null; <CR> switch(c8){ <CR> case1: <CR> i8=newExam("Exam"); <CR> break; <CR> case2: <CR> i8=newHomework("Homework"); <CR> break; <CR> case3: <CR> i8=newReport("Report"); <CR> break; <CR> } <CR> returni8; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]J9){ <CR> StringW2,w2; <CR> doublec8,n0; <CR> System.out.println("請輸入學生學號: "); <CR> W2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> w2=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> c8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentM3=newStudent(W2,w2,c8,n0); <CR> M3.setid(W2); <CR> M3.setname(w2); <CR> M3.setscore(c8); <CR> M3.setsw(n0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringY1){ <CR> super(Y1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringk){ <CR> super(k); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleD0){ <CR> score=D0; <CR> } <CR> doublescore; <CR> doublesw; <CR> Stringid; <CR> Student(Stringe6,StringE3,doublew,doubleA6){ <CR> this.id=e6; <CR> this.name=E3; <CR> this.score=w; <CR> this.sw=A6; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleD0){ <CR> sw=D0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringD0){ <CR> name=D0; <CR> } <CR> Stringname; <CR> voidsetid(StringD0){ <CR> id=D0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringg7){ <CR> this.name=g7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 