 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringj3){ <CR> super(j3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]L){ <CR> StringR3,L5; <CR> doubleC7,j; <CR> System.out.println("請輸入學生學號: "); <CR> R3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> L5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> C7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> j=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentR8=newStudent(R3,L5,C7,j); <CR> R8.setid(R3); <CR> R8.setname(L5); <CR> R8.setscore(C7); <CR> R8.setsw(j); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intC7=0; <CR> do <CR> { <CR> C7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(C7>3||C7<1); <CR> returnmapTest(C7); <CR> } <CR> staticTestmapTest(intC7){ <CR> TestB6=null; <CR> switch(C7){ <CR> case1: <CR> B6=newExam("Exam"); <CR> break; <CR> case2: <CR> B6=newHomework("Homework"); <CR> break; <CR> case3: <CR> B6=newReport("Report"); <CR> break; <CR> } <CR> returnB6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringj6){ <CR> super(j6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringc7){ <CR> super(c7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringt,StringN9,doublez7,doublet2){ <CR> this.id=t; <CR> this.name=N9; <CR> this.score=z7; <CR> this.sw=t2; <CR> } <CR> Stringid; <CR> voidsetsw(doubleE7){ <CR> sw=E7; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringE7){ <CR> name=E7; <CR> } <CR> voidsetscore(doubleE7){ <CR> score=E7; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> voidsetid(StringE7){ <CR> id=E7; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringH6){ <CR> this.name=H6; <CR> } <CR> } <CR>  <EOC> 