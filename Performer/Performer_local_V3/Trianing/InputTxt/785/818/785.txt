 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringH4){ <CR> super(H4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intI3){ <CR> Testv8=null; <CR> switch(I3){ <CR> case1: <CR> v8=newExam("Exam"); <CR> break; <CR> case2: <CR> v8=newHomework("Homework"); <CR> break; <CR> case3: <CR> v8=newReport("Report"); <CR> break; <CR> } <CR> returnv8; <CR> } <CR> publicstaticvoidmain(String[]H){ <CR> StringY9,n1; <CR> doubleI3,u2; <CR> System.out.println("請輸入學生學號: "); <CR> Y9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> n1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> I3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> u2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx3=newStudent(Y9,n1,I3,u2); <CR> x3.setid(Y9); <CR> x3.setname(n1); <CR> x3.setscore(I3); <CR> x3.setsw(u2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intI3=0; <CR> do <CR> { <CR> I3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(I3>3||I3<1); <CR> returnmapTest(I3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringK0){ <CR> super(K0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringY2){ <CR> super(Y2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> Stringid; <CR> voidsetid(StringR3){ <CR> id=R3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringR3){ <CR> name=R3; <CR> } <CR> voidsetsw(doubleR3){ <CR> sw=R3; <CR> } <CR> voidsetscore(doubleR3){ <CR> score=R3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Student(Stringz8,Stringh5,doubleJ1,doubleL3){ <CR> this.id=z8; <CR> this.name=h5; <CR> this.score=J1; <CR> this.sw=L3; <CR> } <CR> Stringname; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringB5){ <CR> this.name=B5; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 