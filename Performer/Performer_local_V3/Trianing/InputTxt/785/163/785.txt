 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringI7){ <CR> super(I7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intq1=0; <CR> do <CR> { <CR> q1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(q1>3||q1<1); <CR> returnmapTest(q1); <CR> } <CR> staticTestmapTest(intq1){ <CR> TestY8=null; <CR> switch(q1){ <CR> case1: <CR> Y8=newExam("Exam"); <CR> break; <CR> case2: <CR> Y8=newHomework("Homework"); <CR> break; <CR> case3: <CR> Y8=newReport("Report"); <CR> break; <CR> } <CR> returnY8; <CR> } <CR> publicstaticvoidmain(String[]E3){ <CR> StringR7,G3; <CR> doubleq1,D3; <CR> System.out.println("請輸入學生學號: "); <CR> R7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> G3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> q1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> D3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentT0=newStudent(R7,G3,q1,D3); <CR> T0.setid(R7); <CR> T0.setname(G3); <CR> T0.setscore(q1); <CR> T0.setsw(D3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringy0){ <CR> super(y0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringf1){ <CR> super(f1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleF3){ <CR> score=F3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetname(StringF3){ <CR> name=F3; <CR> } <CR> Student(Stringa6,StringF9,doubleX0,doubleI8){ <CR> this.id=a6; <CR> this.name=F9; <CR> this.score=X0; <CR> this.sw=I8; <CR> } <CR> doublesw; <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringF3){ <CR> id=F3; <CR> } <CR> voidsetsw(doubleF3){ <CR> sw=F3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringj8){ <CR> this.name=j8; <CR> } <CR> } <CR>  <EOC> 