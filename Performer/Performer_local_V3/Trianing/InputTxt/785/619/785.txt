 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringV){ <CR> super(V); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intR8){ <CR> TestX7=null; <CR> switch(R8){ <CR> case1: <CR> X7=newExam("Exam"); <CR> break; <CR> case2: <CR> X7=newHomework("Homework"); <CR> break; <CR> case3: <CR> X7=newReport("Report"); <CR> break; <CR> } <CR> returnX7; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intR8=0; <CR> do <CR> { <CR> R8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(R8>3||R8<1); <CR> returnmapTest(R8); <CR> } <CR> publicstaticvoidmain(String[]f5){ <CR> Stringj4,Y0; <CR> doubleR8,W1; <CR> System.out.println("請輸入學生學號: "); <CR> j4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Y0=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> R8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentk9=newStudent(j4,Y0,R8,W1); <CR> k9.setid(j4); <CR> k9.setname(Y0); <CR> k9.setscore(R8); <CR> k9.setsw(W1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringl7){ <CR> super(l7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringt9){ <CR> super(t9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleP7){ <CR> sw=P7; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetscore(doubleP7){ <CR> score=P7; <CR> } <CR> voidsetname(StringP7){ <CR> name=P7; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> voidsetid(StringP7){ <CR> id=P7; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringg9,StringO0,doubleR7,doublev2){ <CR> this.id=g9; <CR> this.name=O0; <CR> this.score=R7; <CR> this.sw=v2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Strings0){ <CR> this.name=s0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 