 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringa4){ <CR> super(a4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intO9){ <CR> TestL=null; <CR> switch(O9){ <CR> case1: <CR> L=newExam("Exam"); <CR> break; <CR> case2: <CR> L=newHomework("Homework"); <CR> break; <CR> case3: <CR> L=newReport("Report"); <CR> break; <CR> } <CR> returnL; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]w){ <CR> StringQ1,Q8; <CR> doubleO9,q2; <CR> System.out.println("請輸入學生學號: "); <CR> Q1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Q8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> q2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenty7=newStudent(Q1,Q8,O9,q2); <CR> y7.setid(Q1); <CR> y7.setname(Q8); <CR> y7.setscore(O9); <CR> y7.setsw(q2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO9=0; <CR> do <CR> { <CR> O9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O9>3||O9<1); <CR> returnmapTest(O9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE1){ <CR> super(E1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringo5){ <CR> super(o5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringP){ <CR> name=P; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(StringL2,Stringo1,doubleJ8,doubleP8){ <CR> this.id=L2; <CR> this.name=o1; <CR> this.score=J8; <CR> this.sw=P8; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleP){ <CR> score=P; <CR> } <CR> Stringid; <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleP){ <CR> sw=P; <CR> } <CR> Stringname; <CR> voidsetid(StringP){ <CR> id=P; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Strings5){ <CR> this.name=s5; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 