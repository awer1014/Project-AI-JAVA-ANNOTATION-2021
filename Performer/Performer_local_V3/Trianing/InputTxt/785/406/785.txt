 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringk0){ <CR> super(k0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]r4){ <CR> Stringm4,d; <CR> doubley9,Z2; <CR> System.out.println("請輸入學生學號: "); <CR> m4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> d=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> y9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentB7=newStudent(m4,d,y9,Z2); <CR> B7.setid(m4); <CR> B7.setname(d); <CR> B7.setscore(y9); <CR> B7.setsw(Z2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(inty9){ <CR> Testb9=null; <CR> switch(y9){ <CR> case1: <CR> b9=newExam("Exam"); <CR> break; <CR> case2: <CR> b9=newHomework("Homework"); <CR> break; <CR> case3: <CR> b9=newReport("Report"); <CR> break; <CR> } <CR> returnb9; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inty9=0; <CR> do <CR> { <CR> y9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(y9>3||y9<1); <CR> returnmapTest(y9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt2){ <CR> super(t2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringa5){ <CR> super(a5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> voidsetscore(doublel0){ <CR> score=l0; <CR> } <CR> voidsetsw(doublel0){ <CR> sw=l0; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(Stringl0){ <CR> id=l0; <CR> } <CR> Student(StringJ5,Stringe8,doublee2,doubleR3){ <CR> this.id=J5; <CR> this.name=e8; <CR> this.score=e2; <CR> this.sw=R3; <CR> } <CR> voidsetname(Stringl0){ <CR> name=l0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringD2){ <CR> this.name=D2; <CR> } <CR> } <CR>  <EOC> 