 <BOC> publicclassExamextendsTest{ <CR> publicExam(Strings9){ <CR> super(s9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]i3){ <CR> Stringi6,w1; <CR> doubleM5,p2; <CR> System.out.println("請輸入學生學號: "); <CR> i6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> w1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> M5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> p2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX0=newStudent(i6,w1,M5,p2); <CR> X0.setid(i6); <CR> X0.setname(w1); <CR> X0.setscore(M5); <CR> X0.setsw(p2); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intM5=0; <CR> do <CR> { <CR> M5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(M5>3||M5<1); <CR> returnmapTest(M5); <CR> } <CR> staticTestmapTest(intM5){ <CR> TestN9=null; <CR> switch(M5){ <CR> case1: <CR> N9=newExam("Exam"); <CR> break; <CR> case2: <CR> N9=newHomework("Homework"); <CR> break; <CR> case3: <CR> N9=newReport("Report"); <CR> break; <CR> } <CR> returnN9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringq5){ <CR> super(q5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringV){ <CR> super(V); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Stringz0,Stringo4,doublev8,doublen3){ <CR> this.id=z0; <CR> this.name=o4; <CR> this.score=v8; <CR> this.sw=n3; <CR> } <CR> Stringid; <CR> voidsetsw(doubleK){ <CR> sw=K; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> doublesw; <CR> voidsetscore(doubleK){ <CR> score=K; <CR> } <CR> voidsetname(StringK){ <CR> name=K; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> voidsetid(StringK){ <CR> id=K; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringK2){ <CR> this.name=K2; <CR> } <CR> } <CR>  <EOC> 