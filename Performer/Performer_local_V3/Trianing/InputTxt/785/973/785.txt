 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringV0){ <CR> super(V0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intH1){ <CR> TestC9=null; <CR> switch(H1){ <CR> case1: <CR> C9=newExam("Exam"); <CR> break; <CR> case2: <CR> C9=newHomework("Homework"); <CR> break; <CR> case3: <CR> C9=newReport("Report"); <CR> break; <CR> } <CR> returnC9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]n3){ <CR> StringL9,s6; <CR> doubleH1,K7; <CR> System.out.println("請輸入學生學號: "); <CR> L9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> s6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> H1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> K7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentM7=newStudent(L9,s6,H1,K7); <CR> M7.setid(L9); <CR> M7.setname(s6); <CR> M7.setscore(H1); <CR> M7.setsw(K7); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intH1=0; <CR> do <CR> { <CR> H1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(H1>3||H1<1); <CR> returnmapTest(H1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringU2){ <CR> super(U2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringn9){ <CR> super(n9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringn7){ <CR> id=n7; <CR> } <CR> voidsetname(Stringn7){ <CR> name=n7; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(Stringo4,StringM,doubleW9,doubleR3){ <CR> this.id=o4; <CR> this.name=M; <CR> this.score=W9; <CR> this.sw=R3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> voidsetscore(doublen7){ <CR> score=n7; <CR> } <CR> voidsetsw(doublen7){ <CR> sw=n7; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringF9){ <CR> this.name=F9; <CR> } <CR> } <CR>  <EOC> 