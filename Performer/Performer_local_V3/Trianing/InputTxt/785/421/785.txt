 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx6){ <CR> super(x6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]E1){ <CR> Stringz7,V9; <CR> doubleG1,S0; <CR> System.out.println("請輸入學生學號: "); <CR> z7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> V9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> S0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr1=newStudent(z7,V9,G1,S0); <CR> r1.setid(z7); <CR> r1.setname(V9); <CR> r1.setscore(G1); <CR> r1.setsw(S0); <CR> } <CR> staticTestmapTest(intG1){ <CR> TestS5=null; <CR> switch(G1){ <CR> case1: <CR> S5=newExam("Exam"); <CR> break; <CR> case2: <CR> S5=newHomework("Homework"); <CR> break; <CR> case3: <CR> S5=newReport("Report"); <CR> break; <CR> } <CR> returnS5; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG1=0; <CR> do <CR> { <CR> G1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G1>3||G1<1); <CR> returnmapTest(G1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringb8){ <CR> super(b8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringv2){ <CR> super(v2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleg6){ <CR> score=g6; <CR> } <CR> Stringid; <CR> Stringname; <CR> Student(StringM,Stringq3,doubleH4,doubleL4){ <CR> this.id=M; <CR> this.name=q3; <CR> this.score=H4; <CR> this.sw=L4; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringg6){ <CR> name=g6; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringg6){ <CR> id=g6; <CR> } <CR> voidsetsw(doubleg6){ <CR> sw=g6; <CR> } <CR> doublescore; <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringw1){ <CR> this.name=w1; <CR> } <CR> } <CR>  <EOC> 