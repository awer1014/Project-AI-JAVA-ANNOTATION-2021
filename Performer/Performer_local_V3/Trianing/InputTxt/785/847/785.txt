 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringa7){ <CR> super(a7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intK4=0; <CR> do <CR> { <CR> K4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(K4>3||K4<1); <CR> returnmapTest(K4); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intK4){ <CR> Testh6=null; <CR> switch(K4){ <CR> case1: <CR> h6=newExam("Exam"); <CR> break; <CR> case2: <CR> h6=newHomework("Homework"); <CR> break; <CR> case3: <CR> h6=newReport("Report"); <CR> break; <CR> } <CR> returnh6; <CR> } <CR> publicstaticvoidmain(String[]Q){ <CR> StringH6,t9; <CR> doubleK4,l4; <CR> System.out.println("請輸入學生學號: "); <CR> H6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> t9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> K4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> l4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentA8=newStudent(H6,t9,K4,l4); <CR> A8.setid(H6); <CR> A8.setname(t9); <CR> A8.setscore(K4); <CR> A8.setsw(l4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt1){ <CR> super(t1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN8){ <CR> super(N8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringX){ <CR> name=X; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> Student(StringK0,StringS4,doubleC1,doubleL8){ <CR> this.id=K0; <CR> this.name=S4; <CR> this.score=C1; <CR> this.sw=L8; <CR> } <CR> voidsetscore(doubleX){ <CR> score=X; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubleX){ <CR> sw=X; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> doublescore; <CR> voidsetid(StringX){ <CR> id=X; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringT0){ <CR> this.name=T0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 