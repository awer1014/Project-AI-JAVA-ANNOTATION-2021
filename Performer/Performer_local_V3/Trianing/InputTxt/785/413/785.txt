 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringc6){ <CR> super(c6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intK7){ <CR> TestD0=null; <CR> switch(K7){ <CR> case1: <CR> D0=newExam("Exam"); <CR> break; <CR> case2: <CR> D0=newHomework("Homework"); <CR> break; <CR> case3: <CR> D0=newReport("Report"); <CR> break; <CR> } <CR> returnD0; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intK7=0; <CR> do <CR> { <CR> K7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(K7>3||K7<1); <CR> returnmapTest(K7); <CR> } <CR> publicstaticvoidmain(String[]d9){ <CR> StringL,O4; <CR> doubleK7,S3; <CR> System.out.println("請輸入學生學號: "); <CR> L=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> O4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> K7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> S3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentp1=newStudent(L,O4,K7,S3); <CR> p1.setid(L); <CR> p1.setname(O4); <CR> p1.setscore(K7); <CR> p1.setsw(S3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringf3){ <CR> super(f3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringq8){ <CR> super(q8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Student(Stringk2,Stringa9,doublea7,doubleW5){ <CR> this.id=k2; <CR> this.name=a9; <CR> this.score=a7; <CR> this.sw=W5; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringf9){ <CR> name=f9; <CR> } <CR> voidsetscore(doublef9){ <CR> score=f9; <CR> } <CR> voidsetsw(doublef9){ <CR> sw=f9; <CR> } <CR> voidsetid(Stringf9){ <CR> id=f9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringname; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringA8){ <CR> this.name=A8; <CR> } <CR> } <CR>  <EOC> 