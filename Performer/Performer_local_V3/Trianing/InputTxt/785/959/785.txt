 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringx2){ <CR> super(x2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]M3){ <CR> Stringv0,s4; <CR> doubleW7,Q3; <CR> System.out.println("請輸入學生學號: "); <CR> v0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> s4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> W7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Q3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentf6=newStudent(v0,s4,W7,Q3); <CR> f6.setid(v0); <CR> f6.setname(s4); <CR> f6.setscore(W7); <CR> f6.setsw(Q3); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intW7=0; <CR> do <CR> { <CR> W7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(W7>3||W7<1); <CR> returnmapTest(W7); <CR> } <CR> staticTestmapTest(intW7){ <CR> TestA=null; <CR> switch(W7){ <CR> case1: <CR> A=newExam("Exam"); <CR> break; <CR> case2: <CR> A=newHomework("Homework"); <CR> break; <CR> case3: <CR> A=newReport("Report"); <CR> break; <CR> } <CR> returnA; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp){ <CR> super(p); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringl8){ <CR> super(l8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> Stringname; <CR> voidsetname(Stringz6){ <CR> name=z6; <CR> } <CR> voidsetid(Stringz6){ <CR> id=z6; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublez6){ <CR> sw=z6; <CR> } <CR> doublesw; <CR> voidsetscore(doublez6){ <CR> score=z6; <CR> } <CR> Student(StringY2,StringW0,doublem,doubleH9){ <CR> this.id=Y2; <CR> this.name=W0; <CR> this.score=m; <CR> this.sw=H9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringx0){ <CR> this.name=x0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 