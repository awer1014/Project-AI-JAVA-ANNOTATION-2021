 <BOC> publicclassExamextendsTest{ <CR> publicExam(Strings8){ <CR> super(s8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]L){ <CR> StringP5,W6; <CR> doubleo9,A0; <CR> System.out.println("請輸入學生學號: "); <CR> P5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> W6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> o9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> A0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx0=newStudent(P5,W6,o9,A0); <CR> x0.setid(P5); <CR> x0.setname(W6); <CR> x0.setscore(o9); <CR> x0.setsw(A0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(into9){ <CR> TestG5=null; <CR> switch(o9){ <CR> case1: <CR> G5=newExam("Exam"); <CR> break; <CR> case2: <CR> G5=newHomework("Homework"); <CR> break; <CR> case3: <CR> G5=newReport("Report"); <CR> break; <CR> } <CR> returnG5; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> into9=0; <CR> do <CR> { <CR> o9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(o9>3||o9<1); <CR> returnmapTest(o9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringA3){ <CR> super(A3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringr0){ <CR> super(r0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleg6){ <CR> sw=g6; <CR> } <CR> doublesw; <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleg6){ <CR> score=g6; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringg6){ <CR> name=g6; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetid(Stringg6){ <CR> id=g6; <CR> } <CR> Student(Stringq,Stringr,doubleV9,doubleB0){ <CR> this.id=q; <CR> this.name=r; <CR> this.score=V9; <CR> this.sw=B0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringr9){ <CR> this.name=r9; <CR> } <CR> } <CR>  <EOC> 