 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringG6){ <CR> super(G6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]Q5){ <CR> StringM5,B1; <CR> doubleA9,W8; <CR> System.out.println("請輸入學生學號: "); <CR> M5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> B1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentM1=newStudent(M5,B1,A9,W8); <CR> M1.setid(M5); <CR> M1.setname(B1); <CR> M1.setscore(A9); <CR> M1.setsw(W8); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA9=0; <CR> do <CR> { <CR> A9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A9>3||A9<1); <CR> returnmapTest(A9); <CR> } <CR> staticTestmapTest(intA9){ <CR> TestV1=null; <CR> switch(A9){ <CR> case1: <CR> V1=newExam("Exam"); <CR> break; <CR> case2: <CR> V1=newHomework("Homework"); <CR> break; <CR> case3: <CR> V1=newReport("Report"); <CR> break; <CR> } <CR> returnV1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringg3){ <CR> super(g3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringD1){ <CR> super(D1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubles8){ <CR> sw=s8; <CR> } <CR> Student(Stringd3,Stringp2,doublei5,doubleo1){ <CR> this.id=d3; <CR> this.name=p2; <CR> this.score=i5; <CR> this.sw=o1; <CR> } <CR> Stringid; <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetid(Strings8){ <CR> id=s8; <CR> } <CR> voidsetscore(doubles8){ <CR> score=s8; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Strings8){ <CR> name=s8; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringl2){ <CR> this.name=l2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 