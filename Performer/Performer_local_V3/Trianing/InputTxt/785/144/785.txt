 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringf3){ <CR> super(f3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV=0; <CR> do <CR> { <CR> V=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V>3||V<1); <CR> returnmapTest(V); <CR> } <CR> staticTestmapTest(intV){ <CR> TestZ1=null; <CR> switch(V){ <CR> case1: <CR> Z1=newExam("Exam"); <CR> break; <CR> case2: <CR> Z1=newHomework("Homework"); <CR> break; <CR> case3: <CR> Z1=newReport("Report"); <CR> break; <CR> } <CR> returnZ1; <CR> } <CR> publicstaticvoidmain(String[]Y8){ <CR> StringM2,F8; <CR> doubleV,O1; <CR> System.out.println("請輸入學生學號: "); <CR> M2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> F8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> O1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentv9=newStudent(M2,F8,V,O1); <CR> v9.setid(M2); <CR> v9.setname(F8); <CR> v9.setscore(V); <CR> v9.setsw(O1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringE1){ <CR> super(E1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringD1){ <CR> super(D1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(StringO9){ <CR> name=O9; <CR> } <CR> doublesw; <CR> voidsetsw(doubleO9){ <CR> sw=O9; <CR> } <CR> voidsetscore(doubleO9){ <CR> score=O9; <CR> } <CR> Stringid; <CR> Student(StringH1,StringD0,doubleV8,doublen9){ <CR> this.id=H1; <CR> this.name=D0; <CR> this.score=V8; <CR> this.sw=n9; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringO9){ <CR> id=O9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringY){ <CR> this.name=Y; <CR> } <CR> } <CR>  <EOC> 