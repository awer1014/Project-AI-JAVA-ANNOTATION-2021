 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo){ <CR> super(o); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]o3){ <CR> StringN0,p1; <CR> doubleq2,E; <CR> System.out.println("請輸入學生學號: "); <CR> N0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> p1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> q2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> E=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentA=newStudent(N0,p1,q2,E); <CR> A.setid(N0); <CR> A.setname(p1); <CR> A.setscore(q2); <CR> A.setsw(E); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intq2=0; <CR> do <CR> { <CR> q2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(q2>3||q2<1); <CR> returnmapTest(q2); <CR> } <CR> staticTestmapTest(intq2){ <CR> Testv6=null; <CR> switch(q2){ <CR> case1: <CR> v6=newExam("Exam"); <CR> break; <CR> case2: <CR> v6=newHomework("Homework"); <CR> break; <CR> case3: <CR> v6=newReport("Report"); <CR> break; <CR> } <CR> returnv6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringj9){ <CR> super(j9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringw2){ <CR> super(w2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringname; <CR> doublescore; <CR> voidsetscore(doublet8){ <CR> score=t8; <CR> } <CR> doublesw; <CR> Student(Strings3,Stringk6,doubleN1,doubleq3){ <CR> this.id=s3; <CR> this.name=k6; <CR> this.score=N1; <CR> this.sw=q3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doublet8){ <CR> sw=t8; <CR> } <CR> voidsetid(Stringt8){ <CR> id=t8; <CR> } <CR> voidsetname(Stringt8){ <CR> name=t8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringg){ <CR> this.name=g; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 