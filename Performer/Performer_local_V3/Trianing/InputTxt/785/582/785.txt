 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringZ0){ <CR> super(Z0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]o0){ <CR> Stringu8,a; <CR> doubleE0,l5; <CR> System.out.println("請輸入學生學號: "); <CR> u8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> a=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> E0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> l5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentK0=newStudent(u8,a,E0,l5); <CR> K0.setid(u8); <CR> K0.setname(a); <CR> K0.setscore(E0); <CR> K0.setsw(l5); <CR> } <CR> staticTestmapTest(intE0){ <CR> TestH5=null; <CR> switch(E0){ <CR> case1: <CR> H5=newExam("Exam"); <CR> break; <CR> case2: <CR> H5=newHomework("Homework"); <CR> break; <CR> case3: <CR> H5=newReport("Report"); <CR> break; <CR> } <CR> returnH5; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intE0=0; <CR> do <CR> { <CR> E0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(E0>3||E0<1); <CR> returnmapTest(E0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringe1){ <CR> super(e1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringJ5){ <CR> super(J5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringz3){ <CR> id=z3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doublez3){ <CR> score=z3; <CR> } <CR> Stringid; <CR> doublesw; <CR> voidsetsw(doublez3){ <CR> sw=z3; <CR> } <CR> Student(StringR9,Stringm5,doubleS8,doubleN9){ <CR> this.id=R9; <CR> this.name=m5; <CR> this.score=S8; <CR> this.sw=N9; <CR> } <CR> Stringname; <CR> voidsetname(Stringz3){ <CR> name=z3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringz8){ <CR> this.name=z8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 