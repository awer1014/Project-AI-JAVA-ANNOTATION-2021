 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringI3){ <CR> super(I3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intw3=0; <CR> do <CR> { <CR> w3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(w3>3||w3<1); <CR> returnmapTest(w3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intw3){ <CR> Testw4=null; <CR> switch(w3){ <CR> case1: <CR> w4=newExam("Exam"); <CR> break; <CR> case2: <CR> w4=newHomework("Homework"); <CR> break; <CR> case3: <CR> w4=newReport("Report"); <CR> break; <CR> } <CR> returnw4; <CR> } <CR> publicstaticvoidmain(String[]o4){ <CR> StringK7,N8; <CR> doublew3,z5; <CR> System.out.println("請輸入學生學號: "); <CR> K7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> w3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> z5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentB8=newStudent(K7,N8,w3,z5); <CR> B8.setid(K7); <CR> B8.setname(N8); <CR> B8.setscore(w3); <CR> B8.setsw(z5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringz){ <CR> super(z); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringu0){ <CR> super(u0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doubleU3){ <CR> score=U3; <CR> } <CR> doublescore; <CR> voidsetname(StringU3){ <CR> name=U3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleU3){ <CR> sw=U3; <CR> } <CR> voidsetid(StringU3){ <CR> id=U3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringp2,Stringg6,doubleu8,doublek){ <CR> this.id=p2; <CR> this.name=g6; <CR> this.score=u8; <CR> this.sw=k; <CR> } <CR> doublesw; <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringo8){ <CR> this.name=o8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 