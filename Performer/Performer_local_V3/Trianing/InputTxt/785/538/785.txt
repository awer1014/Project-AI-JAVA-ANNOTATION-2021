 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringe7){ <CR> super(e7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]Q5){ <CR> Stringj0,E; <CR> doubleU5,J2; <CR> System.out.println("請輸入學生學號: "); <CR> j0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> J2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentg5=newStudent(j0,E,U5,J2); <CR> g5.setid(j0); <CR> g5.setname(E); <CR> g5.setscore(U5); <CR> g5.setsw(J2); <CR> } <CR> staticTestmapTest(intU5){ <CR> Testv7=null; <CR> switch(U5){ <CR> case1: <CR> v7=newExam("Exam"); <CR> break; <CR> case2: <CR> v7=newHomework("Homework"); <CR> break; <CR> case3: <CR> v7=newReport("Report"); <CR> break; <CR> } <CR> returnv7; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU5=0; <CR> do <CR> { <CR> U5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U5>3||U5<1); <CR> returnmapTest(U5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringr5){ <CR> super(r5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringp4){ <CR> super(p4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doublei1){ <CR> score=i1; <CR> } <CR> Student(Stringr6,StringX,doublef5,doublez){ <CR> this.id=r6; <CR> this.name=X; <CR> this.score=f5; <CR> this.sw=z; <CR> } <CR> Stringname; <CR> doublesw; <CR> voidsetname(Stringi1){ <CR> name=i1; <CR> } <CR> voidsetsw(doublei1){ <CR> sw=i1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringi1){ <CR> id=i1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringG9){ <CR> this.name=G9; <CR> } <CR> } <CR>  <EOC> 