 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringZ3){ <CR> super(Z3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> ints6=0; <CR> do <CR> { <CR> s6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(s6>3||s6<1); <CR> returnmapTest(s6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]m3){ <CR> Stringy1,i1; <CR> doubles6,W6; <CR> System.out.println("請輸入學生學號: "); <CR> y1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> i1=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> s6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentF9=newStudent(y1,i1,s6,W6); <CR> F9.setid(y1); <CR> F9.setname(i1); <CR> F9.setscore(s6); <CR> F9.setsw(W6); <CR> } <CR> staticTestmapTest(ints6){ <CR> TestU2=null; <CR> switch(s6){ <CR> case1: <CR> U2=newExam("Exam"); <CR> break; <CR> case2: <CR> U2=newHomework("Homework"); <CR> break; <CR> case3: <CR> U2=newReport("Report"); <CR> break; <CR> } <CR> returnU2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringD){ <CR> super(D); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringr4){ <CR> super(r4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringC5,Stringc,doubleb9,doublec4){ <CR> this.id=C5; <CR> this.name=c; <CR> this.score=b9; <CR> this.sw=c4; <CR> } <CR> doublescore; <CR> voidsetname(StringD8){ <CR> name=D8; <CR> } <CR> voidsetid(StringD8){ <CR> id=D8; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetscore(doubleD8){ <CR> score=D8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doubleD8){ <CR> sw=D8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringO9){ <CR> this.name=O9; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 