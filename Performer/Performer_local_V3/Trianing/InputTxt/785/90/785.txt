 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringQ9){ <CR> super(Q9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]c5){ <CR> Stringv0,k8; <CR> doubleG1,w; <CR> System.out.println("請輸入學生學號: "); <CR> v0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> k8=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> G1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> w=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentC9=newStudent(v0,k8,G1,w); <CR> C9.setid(v0); <CR> C9.setname(k8); <CR> C9.setscore(G1); <CR> C9.setsw(w); <CR> } <CR> staticTestmapTest(intG1){ <CR> Testc7=null; <CR> switch(G1){ <CR> case1: <CR> c7=newExam("Exam"); <CR> break; <CR> case2: <CR> c7=newHomework("Homework"); <CR> break; <CR> case3: <CR> c7=newReport("Report"); <CR> break; <CR> } <CR> returnc7; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intG1=0; <CR> do <CR> { <CR> G1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(G1>3||G1<1); <CR> returnmapTest(G1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringW0){ <CR> super(W0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringY7){ <CR> super(Y7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(StringO,StringG9,doublej2,doubleQ4){ <CR> this.id=O; <CR> this.name=G9; <CR> this.score=j2; <CR> this.sw=Q4; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringX7){ <CR> name=X7; <CR> } <CR> voidsetsw(doubleX7){ <CR> sw=X7; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleX7){ <CR> score=X7; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> doublescore; <CR> Stringname; <CR> voidsetid(StringX7){ <CR> id=X7; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringZ4){ <CR> this.name=Z4; <CR> } <CR> } <CR>  <EOC> 