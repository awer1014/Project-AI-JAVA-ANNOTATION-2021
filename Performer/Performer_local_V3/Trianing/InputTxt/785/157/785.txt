 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringE7){ <CR> super(E7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intO6){ <CR> Testl3=null; <CR> switch(O6){ <CR> case1: <CR> l3=newExam("Exam"); <CR> break; <CR> case2: <CR> l3=newHomework("Homework"); <CR> break; <CR> case3: <CR> l3=newReport("Report"); <CR> break; <CR> } <CR> returnl3; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]m0){ <CR> StringI,N3; <CR> doubleO6,f8; <CR> System.out.println("請輸入學生學號: "); <CR> I=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> f8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentc=newStudent(I,N3,O6,f8); <CR> c.setid(I); <CR> c.setname(N3); <CR> c.setscore(O6); <CR> c.setsw(f8); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO6=0; <CR> do <CR> { <CR> O6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O6>3||O6<1); <CR> returnmapTest(O6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringM){ <CR> super(M); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringf){ <CR> super(f); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetsw(doubleU6){ <CR> sw=U6; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublescore; <CR> voidsetname(StringU6){ <CR> name=U6; <CR> } <CR> Student(Stringl,Strings,doubleV8,doubleM4){ <CR> this.id=l; <CR> this.name=s; <CR> this.score=V8; <CR> this.sw=M4; <CR> } <CR> voidsetscore(doubleU6){ <CR> score=U6; <CR> } <CR> voidsetid(StringU6){ <CR> id=U6; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringV){ <CR> this.name=V; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 