 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringd0){ <CR> super(d0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> ints7=0; <CR> do <CR> { <CR> s7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(s7>3||s7<1); <CR> returnmapTest(s7); <CR> } <CR> staticTestmapTest(ints7){ <CR> Testx0=null; <CR> switch(s7){ <CR> case1: <CR> x0=newExam("Exam"); <CR> break; <CR> case2: <CR> x0=newHomework("Homework"); <CR> break; <CR> case3: <CR> x0=newReport("Report"); <CR> break; <CR> } <CR> returnx0; <CR> } <CR> publicstaticvoidmain(String[]X2){ <CR> StringA5,e5; <CR> doubles7,V0; <CR> System.out.println("請輸入學生學號: "); <CR> A5=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> s7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> V0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studente3=newStudent(A5,e5,s7,V0); <CR> e3.setid(A5); <CR> e3.setname(e5); <CR> e3.setscore(s7); <CR> e3.setsw(V0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF0){ <CR> super(F0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringG7){ <CR> super(G7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> voidsetid(StringK5){ <CR> id=K5; <CR> } <CR> doublesw; <CR> voidsetscore(doubleK5){ <CR> score=K5; <CR> } <CR> voidsetname(StringK5){ <CR> name=K5; <CR> } <CR> Student(StringT4,StringT2,doublef7,doubleA4){ <CR> this.id=T4; <CR> this.name=T2; <CR> this.score=f7; <CR> this.sw=A4; <CR> } <CR> Stringname; <CR> voidsetsw(doubleK5){ <CR> sw=K5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringh2){ <CR> this.name=h2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 