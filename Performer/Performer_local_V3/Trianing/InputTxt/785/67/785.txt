 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringJ0){ <CR> super(J0); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intM7=0; <CR> do <CR> { <CR> M7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(M7>3||M7<1); <CR> returnmapTest(M7); <CR> } <CR> staticTestmapTest(intM7){ <CR> TestA5=null; <CR> switch(M7){ <CR> case1: <CR> A5=newExam("Exam"); <CR> break; <CR> case2: <CR> A5=newHomework("Homework"); <CR> break; <CR> case3: <CR> A5=newReport("Report"); <CR> break; <CR> } <CR> returnA5; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]e2){ <CR> StringA,g4; <CR> doubleM7,N0; <CR> System.out.println("請輸入學生學號: "); <CR> A=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> g4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> M7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> N0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentO3=newStudent(A,g4,M7,N0); <CR> O3.setid(A); <CR> O3.setname(g4); <CR> O3.setscore(M7); <CR> O3.setsw(N0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringo9){ <CR> super(o9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringi){ <CR> super(i); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetscore(doublei7){ <CR> score=i7; <CR> } <CR> Stringname; <CR> voidsetname(Stringi7){ <CR> name=i7; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublescore; <CR> Student(Stringw3,StringN3,doubleG7,doublek5){ <CR> this.id=w3; <CR> this.name=N3; <CR> this.score=G7; <CR> this.sw=k5; <CR> } <CR> voidsetsw(doublei7){ <CR> sw=i7; <CR> } <CR> voidsetid(Stringi7){ <CR> id=i7; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringm3){ <CR> this.name=m3; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 