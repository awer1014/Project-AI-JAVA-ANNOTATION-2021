 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringU9){ <CR> super(U9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]U0){ <CR> Stringt,f9; <CR> doubleU8,J3; <CR> System.out.println("請輸入學生學號: "); <CR> t=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> f9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> J3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP=newStudent(t,f9,U8,J3); <CR> P.setid(t); <CR> P.setname(f9); <CR> P.setscore(U8); <CR> P.setsw(J3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intU8){ <CR> Testj8=null; <CR> switch(U8){ <CR> case1: <CR> j8=newExam("Exam"); <CR> break; <CR> case2: <CR> j8=newHomework("Homework"); <CR> break; <CR> case3: <CR> j8=newReport("Report"); <CR> break; <CR> } <CR> returnj8; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU8=0; <CR> do <CR> { <CR> U8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U8>3||U8<1); <CR> returnmapTest(U8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringr6){ <CR> super(r6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringC6){ <CR> super(C6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleX1){ <CR> sw=X1; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleX1){ <CR> score=X1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringx5,StringB0,doubleG3,doublec0){ <CR> this.id=x5; <CR> this.name=B0; <CR> this.score=G3; <CR> this.sw=c0; <CR> } <CR> voidsetid(StringX1){ <CR> id=X1; <CR> } <CR> doublescore; <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> voidsetname(StringX1){ <CR> name=X1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringF7){ <CR> this.name=F7; <CR> } <CR> } <CR>  <EOC> 