 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringd4){ <CR> super(d4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]t4){ <CR> Stringk4,E3; <CR> doublet7,e0; <CR> System.out.println("請輸入學生學號: "); <CR> k4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> E3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> t7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> e0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentC=newStudent(k4,E3,t7,e0); <CR> C.setid(k4); <CR> C.setname(E3); <CR> C.setscore(t7); <CR> C.setsw(e0); <CR> } <CR> staticTestmapTest(intt7){ <CR> TestI3=null; <CR> switch(t7){ <CR> case1: <CR> I3=newExam("Exam"); <CR> break; <CR> case2: <CR> I3=newHomework("Homework"); <CR> break; <CR> case3: <CR> I3=newReport("Report"); <CR> break; <CR> } <CR> returnI3; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intt7=0; <CR> do <CR> { <CR> t7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(t7>3||t7<1); <CR> returnmapTest(t7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringR8){ <CR> super(R8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringW5){ <CR> super(W5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringh0){ <CR> name=h0; <CR> } <CR> voidsetscore(doubleh0){ <CR> score=h0; <CR> } <CR> voidsetsw(doubleh0){ <CR> sw=h0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublesw; <CR> Student(StringI1,StringZ4,doublet2,doublev7){ <CR> this.id=I1; <CR> this.name=Z4; <CR> this.score=t2; <CR> this.sw=v7; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringh0){ <CR> id=h0; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringd8){ <CR> this.name=d8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 