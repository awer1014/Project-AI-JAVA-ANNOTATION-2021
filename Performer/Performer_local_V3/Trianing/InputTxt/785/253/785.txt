 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringX8){ <CR> super(X8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intB6=0; <CR> do <CR> { <CR> B6=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(B6>3||B6<1); <CR> returnmapTest(B6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]G5){ <CR> StringP1,n6; <CR> doubleB6,c0; <CR> System.out.println("請輸入學生學號: "); <CR> P1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> n6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> B6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> c0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentY2=newStudent(P1,n6,B6,c0); <CR> Y2.setid(P1); <CR> Y2.setname(n6); <CR> Y2.setscore(B6); <CR> Y2.setsw(c0); <CR> } <CR> staticTestmapTest(intB6){ <CR> TestO3=null; <CR> switch(B6){ <CR> case1: <CR> O3=newExam("Exam"); <CR> break; <CR> case2: <CR> O3=newHomework("Homework"); <CR> break; <CR> case3: <CR> O3=newReport("Report"); <CR> break; <CR> } <CR> returnO3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringA5){ <CR> super(A5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringw4){ <CR> super(w4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetid(StringC3){ <CR> id=C3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetscore(doubleC3){ <CR> score=C3; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringC3){ <CR> name=C3; <CR> } <CR> Stringname; <CR> voidsetsw(doubleC3){ <CR> sw=C3; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> Student(Stringn,StringL8,doubleN6,doubleB5){ <CR> this.id=n; <CR> this.name=L8; <CR> this.score=N6; <CR> this.sw=B5; <CR> } <CR> doublesw; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringl2){ <CR> this.name=l2; <CR> } <CR> } <CR>  <EOC> 