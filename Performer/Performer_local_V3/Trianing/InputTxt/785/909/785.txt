 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringw){ <CR> super(w); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]T2){ <CR> Stringz1,G9; <CR> doubleP9,Z8; <CR> System.out.println("請輸入學生學號: "); <CR> z1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> G9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> P9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Z8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentj3=newStudent(z1,G9,P9,Z8); <CR> j3.setid(z1); <CR> j3.setname(G9); <CR> j3.setscore(P9); <CR> j3.setsw(Z8); <CR> } <CR> staticTestmapTest(intP9){ <CR> TestP1=null; <CR> switch(P9){ <CR> case1: <CR> P1=newExam("Exam"); <CR> break; <CR> case2: <CR> P1=newHomework("Homework"); <CR> break; <CR> case3: <CR> P1=newReport("Report"); <CR> break; <CR> } <CR> returnP1; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intP9=0; <CR> do <CR> { <CR> P9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(P9>3||P9<1); <CR> returnmapTest(P9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringj5){ <CR> super(j5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringJ3){ <CR> super(J3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringM8){ <CR> id=M8; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringid; <CR> Student(StringJ2,Stringu6,doublev0,doubleX9){ <CR> this.id=J2; <CR> this.name=u6; <CR> this.score=v0; <CR> this.sw=X9; <CR> } <CR> voidsetname(StringM8){ <CR> name=M8; <CR> } <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringname; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleM8){ <CR> score=M8; <CR> } <CR> voidsetsw(doubleM8){ <CR> sw=M8; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringE7){ <CR> this.name=E7; <CR> } <CR> } <CR>  <EOC> 