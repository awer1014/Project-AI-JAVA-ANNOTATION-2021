 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringf7){ <CR> super(f7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intT7=0; <CR> do <CR> { <CR> T7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(T7>3||T7<1); <CR> returnmapTest(T7); <CR> } <CR> publicstaticvoidmain(String[]K2){ <CR> StringD0,I4; <CR> doubleT7,W5; <CR> System.out.println("請輸入學生學號: "); <CR> D0=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> I4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> T7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> W5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentl7=newStudent(D0,I4,T7,W5); <CR> l7.setid(D0); <CR> l7.setname(I4); <CR> l7.setscore(T7); <CR> l7.setsw(W5); <CR> } <CR> staticTestmapTest(intT7){ <CR> Testm3=null; <CR> switch(T7){ <CR> case1: <CR> m3=newExam("Exam"); <CR> break; <CR> case2: <CR> m3=newHomework("Homework"); <CR> break; <CR> case3: <CR> m3=newReport("Report"); <CR> break; <CR> } <CR> returnm3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringR){ <CR> super(R); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringa7){ <CR> super(a7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleq9){ <CR> sw=q9; <CR> } <CR> voidsetname(Stringq9){ <CR> name=q9; <CR> } <CR> Student(StringO9,StringP2,doublep5,doubleu7){ <CR> this.id=O9; <CR> this.name=P2; <CR> this.score=p5; <CR> this.sw=u7; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetscore(doubleq9){ <CR> score=q9; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(Stringq9){ <CR> id=q9; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> doublescore; <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringo9){ <CR> this.name=o9; <CR> } <CR> } <CR>  <EOC> 