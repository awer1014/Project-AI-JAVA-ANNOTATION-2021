 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringy9){ <CR> super(y9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intI7=0; <CR> do <CR> { <CR> I7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(I7>3||I7<1); <CR> returnmapTest(I7); <CR> } <CR> publicstaticvoidmain(String[]s9){ <CR> Stringw6,b4; <CR> doubleI7,V7; <CR> System.out.println("請輸入學生學號: "); <CR> w6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> b4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> I7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> V7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentg5=newStudent(w6,b4,I7,V7); <CR> g5.setid(w6); <CR> g5.setname(b4); <CR> g5.setscore(I7); <CR> g5.setsw(V7); <CR> } <CR> staticTestmapTest(intI7){ <CR> TestT9=null; <CR> switch(I7){ <CR> case1: <CR> T9=newExam("Exam"); <CR> break; <CR> case2: <CR> T9=newHomework("Homework"); <CR> break; <CR> case3: <CR> T9=newReport("Report"); <CR> break; <CR> } <CR> returnT9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringV5){ <CR> super(V5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringF1){ <CR> super(F1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetname(Stringr1){ <CR> name=r1; <CR> } <CR> Stringid; <CR> voidsetscore(doubler1){ <CR> score=r1; <CR> } <CR> Student(StringA1,StringN3,doubleJ7,doublen){ <CR> this.id=A1; <CR> this.name=N3; <CR> this.score=J7; <CR> this.sw=n; <CR> } <CR> voidsetsw(doubler1){ <CR> sw=r1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> voidsetid(Stringr1){ <CR> id=r1; <CR> } <CR> Stringname; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringk){ <CR> this.name=k; <CR> } <CR> } <CR>  <EOC> 