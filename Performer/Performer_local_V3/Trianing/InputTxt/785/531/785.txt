 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringv7){ <CR> super(v7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intR5=0; <CR> do <CR> { <CR> R5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(R5>3||R5<1); <CR> returnmapTest(R5); <CR> } <CR> publicstaticvoidmain(String[]P){ <CR> Stringg1,c6; <CR> doubleR5,M8; <CR> System.out.println("請輸入學生學號: "); <CR> g1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> c6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> R5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> M8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenta5=newStudent(g1,c6,R5,M8); <CR> a5.setid(g1); <CR> a5.setname(c6); <CR> a5.setscore(R5); <CR> a5.setsw(M8); <CR> } <CR> staticTestmapTest(intR5){ <CR> TestX3=null; <CR> switch(R5){ <CR> case1: <CR> X3=newExam("Exam"); <CR> break; <CR> case2: <CR> X3=newHomework("Homework"); <CR> break; <CR> case3: <CR> X3=newReport("Report"); <CR> break; <CR> } <CR> returnX3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringp4){ <CR> super(p4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP4){ <CR> super(P4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleb5){ <CR> sw=b5; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringb5){ <CR> name=b5; <CR> } <CR> voidsetscore(doubleb5){ <CR> score=b5; <CR> } <CR> Student(StringX7,Stringg5,doublen7,doubleF5){ <CR> this.id=X7; <CR> this.name=g5; <CR> this.score=n7; <CR> this.sw=F5; <CR> } <CR> Stringname; <CR> voidsetid(Stringb5){ <CR> id=b5; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublescore; <CR> doublesw; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringd3){ <CR> this.name=d3; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 