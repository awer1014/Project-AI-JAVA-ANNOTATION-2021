 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringi6){ <CR> super(i6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intn2=0; <CR> do <CR> { <CR> n2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(n2>3||n2<1); <CR> returnmapTest(n2); <CR> } <CR> staticTestmapTest(intn2){ <CR> TestZ0=null; <CR> switch(n2){ <CR> case1: <CR> Z0=newExam("Exam"); <CR> break; <CR> case2: <CR> Z0=newHomework("Homework"); <CR> break; <CR> case3: <CR> Z0=newReport("Report"); <CR> break; <CR> } <CR> returnZ0; <CR> } <CR> publicstaticvoidmain(String[]r9){ <CR> StringA7,n4; <CR> doublen2,F3; <CR> System.out.println("請輸入學生學號: "); <CR> A7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> n4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> n2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr7=newStudent(A7,n4,n2,F3); <CR> r7.setid(A7); <CR> r7.setname(n4); <CR> r7.setscore(n2); <CR> r7.setsw(F3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringR7){ <CR> super(R7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringn4){ <CR> super(n4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringJ5){ <CR> name=J5; <CR> } <CR> Stringname; <CR> Student(StringM,Stringe8,doublew5,doublez8){ <CR> this.id=M; <CR> this.name=e8; <CR> this.score=w5; <CR> this.sw=z8; <CR> } <CR> doublescore; <CR> voidsetsw(doubleJ5){ <CR> sw=J5; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringJ5){ <CR> id=J5; <CR> } <CR> voidsetscore(doubleJ5){ <CR> score=J5; <CR> } <CR> doublesw; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Strings0){ <CR> this.name=s0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 