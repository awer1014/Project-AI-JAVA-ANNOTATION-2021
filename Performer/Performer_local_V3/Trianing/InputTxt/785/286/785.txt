 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringy7){ <CR> super(y7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]n9){ <CR> Stringp,t3; <CR> doubleA8,D9; <CR> System.out.println("請輸入學生學號: "); <CR> p=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> t3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> A8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> D9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentP0=newStudent(p,t3,A8,D9); <CR> P0.setid(p); <CR> P0.setname(t3); <CR> P0.setscore(A8); <CR> P0.setsw(D9); <CR> } <CR> staticTestmapTest(intA8){ <CR> Testy1=null; <CR> switch(A8){ <CR> case1: <CR> y1=newExam("Exam"); <CR> break; <CR> case2: <CR> y1=newHomework("Homework"); <CR> break; <CR> case3: <CR> y1=newReport("Report"); <CR> break; <CR> } <CR> returny1; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intA8=0; <CR> do <CR> { <CR> A8=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(A8>3||A8<1); <CR> returnmapTest(A8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings1){ <CR> super(s1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringA8){ <CR> super(A8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> voidsetid(StringX1){ <CR> id=X1; <CR> } <CR> doublesw; <CR> voidsetname(StringX1){ <CR> name=X1; <CR> } <CR> Stringname; <CR> voidsetsw(doubleX1){ <CR> sw=X1; <CR> } <CR> voidsetscore(doubleX1){ <CR> score=X1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Student(Stringq4,Stringv4,doublei4,doublen){ <CR> this.id=q4; <CR> this.name=v4; <CR> this.score=i4; <CR> this.sw=n; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringi2){ <CR> this.name=i2; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 