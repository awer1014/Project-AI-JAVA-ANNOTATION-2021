 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringp3){ <CR> super(p3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intC0){ <CR> TestH2=null; <CR> switch(C0){ <CR> case1: <CR> H2=newExam("Exam"); <CR> break; <CR> case2: <CR> H2=newHomework("Homework"); <CR> break; <CR> case3: <CR> H2=newReport("Report"); <CR> break; <CR> } <CR> returnH2; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intC0=0; <CR> do <CR> { <CR> C0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(C0>3||C0<1); <CR> returnmapTest(C0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]J0){ <CR> Stringc4,R6; <CR> doubleC0,B8; <CR> System.out.println("請輸入學生學號: "); <CR> c4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> R6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> C0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> B8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studento1=newStudent(c4,R6,C0,B8); <CR> o1.setid(c4); <CR> o1.setname(R6); <CR> o1.setscore(C0); <CR> o1.setsw(B8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa0){ <CR> super(a0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringq4){ <CR> super(q4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringX7){ <CR> id=X7; <CR> } <CR> doublesw; <CR> voidsetname(StringX7){ <CR> name=X7; <CR> } <CR> voidsetscore(doubleX7){ <CR> score=X7; <CR> } <CR> Student(Stringt1,Stringm,doubleS0,doublej2){ <CR> this.id=t1; <CR> this.name=m; <CR> this.score=S0; <CR> this.sw=j2; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Stringid; <CR> Stringname; <CR> voidsetsw(doubleX7){ <CR> sw=X7; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Strings7){ <CR> this.name=s7; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 