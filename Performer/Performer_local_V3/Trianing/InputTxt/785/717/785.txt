 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringh9){ <CR> super(h9); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intI2){ <CR> Testw0=null; <CR> switch(I2){ <CR> case1: <CR> w0=newExam("Exam"); <CR> break; <CR> case2: <CR> w0=newHomework("Homework"); <CR> break; <CR> case3: <CR> w0=newReport("Report"); <CR> break; <CR> } <CR> returnw0; <CR> } <CR> publicstaticvoidmain(String[]H1){ <CR> Stringm9,R3; <CR> doubleI2,F2; <CR> System.out.println("請輸入學生學號: "); <CR> m9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> R3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> I2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> F2=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentX8=newStudent(m9,R3,I2,F2); <CR> X8.setid(m9); <CR> X8.setname(R3); <CR> X8.setscore(I2); <CR> X8.setsw(F2); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intI2=0; <CR> do <CR> { <CR> I2=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(I2>3||I2<1); <CR> returnmapTest(I2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn4){ <CR> super(n4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringc9){ <CR> super(c9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetname(StringU1){ <CR> name=U1; <CR> } <CR> doublescore; <CR> voidsetscore(doubleU1){ <CR> score=U1; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubleU1){ <CR> sw=U1; <CR> } <CR> Student(Stringh,Stringp1,doublel2,doublei5){ <CR> this.id=h; <CR> this.name=p1; <CR> this.score=l2; <CR> this.sw=i5; <CR> } <CR> voidsetid(StringU1){ <CR> id=U1; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringL3){ <CR> this.name=L3; <CR> } <CR> } <CR>  <EOC> 