 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringy1){ <CR> super(y1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intx9){ <CR> Testz7=null; <CR> switch(x9){ <CR> case1: <CR> z7=newExam("Exam"); <CR> break; <CR> case2: <CR> z7=newHomework("Homework"); <CR> break; <CR> case3: <CR> z7=newReport("Report"); <CR> break; <CR> } <CR> returnz7; <CR> } <CR> publicstaticvoidmain(String[]B7){ <CR> StringM8,N5; <CR> doublex9,B9; <CR> System.out.println("請輸入學生學號: "); <CR> M8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> N5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> x9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> B9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentL9=newStudent(M8,N5,x9,B9); <CR> L9.setid(M8); <CR> L9.setname(N5); <CR> L9.setscore(x9); <CR> L9.setsw(B9); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intx9=0; <CR> do <CR> { <CR> x9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(x9>3||x9<1); <CR> returnmapTest(x9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringG4){ <CR> super(G4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringN){ <CR> super(N); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetsw(doubleU0){ <CR> sw=U0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(StringU0){ <CR> name=U0; <CR> } <CR> Stringname; <CR> voidsetscore(doubleU0){ <CR> score=U0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> doublesw; <CR> Stringid; <CR> Student(StringF9,StringB5,doublei9,doubleD7){ <CR> this.id=F9; <CR> this.name=B5; <CR> this.score=i9; <CR> this.sw=D7; <CR> } <CR> voidsetid(StringU0){ <CR> id=U0; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringg){ <CR> this.name=g; <CR> } <CR> } <CR>  <EOC> 