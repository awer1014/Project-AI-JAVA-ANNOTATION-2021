 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringf){ <CR> super(f); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(inti9){ <CR> TestR3=null; <CR> switch(i9){ <CR> case1: <CR> R3=newExam("Exam"); <CR> break; <CR> case2: <CR> R3=newHomework("Homework"); <CR> break; <CR> case3: <CR> R3=newReport("Report"); <CR> break; <CR> } <CR> returnR3; <CR> } <CR> publicstaticvoidmain(String[]b0){ <CR> Stringr,h; <CR> doublei9,a7; <CR> System.out.println("請輸入學生學號: "); <CR> r=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> h=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> i9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> a7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentd9=newStudent(r,h,i9,a7); <CR> d9.setid(r); <CR> d9.setname(h); <CR> d9.setscore(i9); <CR> d9.setsw(a7); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inti9=0; <CR> do <CR> { <CR> i9=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(i9>3||i9<1); <CR> returnmapTest(i9); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt5){ <CR> super(t5); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringg){ <CR> super(g); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doublet0){ <CR> sw=t0; <CR> } <CR> doublesw; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringname; <CR> Student(StringW,StringZ,doubleE0,doubleM0){ <CR> this.id=W; <CR> this.name=Z; <CR> this.score=E0; <CR> this.sw=M0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetid(Stringt0){ <CR> id=t0; <CR> } <CR> Stringid; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringt0){ <CR> name=t0; <CR> } <CR> doublescore; <CR> voidsetscore(doublet0){ <CR> score=t0; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringZ1){ <CR> this.name=Z1; <CR> } <CR> } <CR>  <EOC> 