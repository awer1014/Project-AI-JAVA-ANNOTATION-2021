 <BOC> publicclassExamextendsTest{ <CR> publicExam(Strings1){ <CR> super(s1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inte0=0; <CR> do <CR> { <CR> e0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(e0>3||e0<1); <CR> returnmapTest(e0); <CR> } <CR> publicstaticvoidmain(String[]E4){ <CR> StringV4,J9; <CR> doublee0,s5; <CR> System.out.println("請輸入學生學號: "); <CR> V4=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> J9=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> e0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> s5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studento4=newStudent(V4,J9,e0,s5); <CR> o4.setid(V4); <CR> o4.setname(J9); <CR> o4.setscore(e0); <CR> o4.setsw(s5); <CR> } <CR> staticTestmapTest(inte0){ <CR> TestZ5=null; <CR> switch(e0){ <CR> case1: <CR> Z5=newExam("Exam"); <CR> break; <CR> case2: <CR> Z5=newHomework("Homework"); <CR> break; <CR> case3: <CR> Z5=newReport("Report"); <CR> break; <CR> } <CR> returnZ5; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringa6){ <CR> super(a6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR4){ <CR> super(R4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Student(Strings7,StringT5,doubleD1,doublev2){ <CR> this.id=s7; <CR> this.name=T5; <CR> this.score=D1; <CR> this.sw=v2; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubled0){ <CR> sw=d0; <CR> } <CR> Stringid; <CR> doublesw; <CR> Stringname; <CR> voidsetscore(doubled0){ <CR> score=d0; <CR> } <CR> voidsetid(Stringd0){ <CR> id=d0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> voidsetname(Stringd0){ <CR> name=d0; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Strings9){ <CR> this.name=s9; <CR> } <CR> } <CR>  <EOC> 