 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringH6){ <CR> super(H6); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticScannerkeyboard=newScanner(System.in); <CR> publicstaticvoidmain(String[]C7){ <CR> Stringk9,G3; <CR> doublej4,n5; <CR> System.out.println("請輸入學生學號: "); <CR> k9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> G3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> j4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> n5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentS7=newStudent(k9,G3,j4,n5); <CR> S7.setid(k9); <CR> S7.setname(G3); <CR> S7.setscore(j4); <CR> S7.setsw(n5); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intj4=0; <CR> do <CR> { <CR> j4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(j4>3||j4<1); <CR> returnmapTest(j4); <CR> } <CR> staticTestmapTest(intj4){ <CR> TestQ2=null; <CR> switch(j4){ <CR> case1: <CR> Q2=newExam("Exam"); <CR> break; <CR> case2: <CR> Q2=newHomework("Homework"); <CR> break; <CR> case3: <CR> Q2=newReport("Report"); <CR> break; <CR> } <CR> returnQ2; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Strings4){ <CR> super(s4); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringd){ <CR> super(d); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> Stringname; <CR> voidsetsw(doubleh9){ <CR> sw=h9; <CR> } <CR> doublescore; <CR> voidsetid(Stringh9){ <CR> id=h9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetname(Stringh9){ <CR> name=h9; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Student(StringN0,StringV6,doubleE,doubleW3){ <CR> this.id=N0; <CR> this.name=V6; <CR> this.score=E; <CR> this.sw=W3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> voidsetscore(doubleh9){ <CR> score=h9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringY8){ <CR> this.name=Y8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 