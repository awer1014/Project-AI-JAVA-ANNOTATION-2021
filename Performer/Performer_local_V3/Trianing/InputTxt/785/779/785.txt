 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringR2){ <CR> super(R2); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intd1=0; <CR> do <CR> { <CR> d1=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(d1>3||d1<1); <CR> returnmapTest(d1); <CR> } <CR> staticTestmapTest(intd1){ <CR> Testr1=null; <CR> switch(d1){ <CR> case1: <CR> r1=newExam("Exam"); <CR> break; <CR> case2: <CR> r1=newHomework("Homework"); <CR> break; <CR> case3: <CR> r1=newReport("Report"); <CR> break; <CR> } <CR> returnr1; <CR> } <CR> publicstaticvoidmain(String[]L3){ <CR> StringS2,Z3; <CR> doubled1,z6; <CR> System.out.println("請輸入學生學號: "); <CR> S2=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Z3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> d1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> z6=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studenth3=newStudent(S2,Z3,d1,z6); <CR> h3.setid(S2); <CR> h3.setname(Z3); <CR> h3.setscore(d1); <CR> h3.setsw(z6); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringW0){ <CR> super(W0); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringo2){ <CR> super(o2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleL1){ <CR> sw=L1; <CR> } <CR> voidsetscore(doubleL1){ <CR> score=L1; <CR> } <CR> doublescore; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetid(StringL1){ <CR> id=L1; <CR> } <CR> Stringname; <CR> voidsetname(StringL1){ <CR> name=L1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(Stringc0,StringJ5,doubleL8,doubleU8){ <CR> this.id=c0; <CR> this.name=J5; <CR> this.score=L8; <CR> this.sw=U8; <CR> } <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringM9){ <CR> this.name=M9; <CR> } <CR> } <CR>  <EOC> 