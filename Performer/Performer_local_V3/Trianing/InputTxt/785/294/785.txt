 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringE7){ <CR> super(E7); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intZ5=0; <CR> do <CR> { <CR> Z5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(Z5>3||Z5<1); <CR> returnmapTest(Z5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intZ5){ <CR> Testr6=null; <CR> switch(Z5){ <CR> case1: <CR> r6=newExam("Exam"); <CR> break; <CR> case2: <CR> r6=newHomework("Homework"); <CR> break; <CR> case3: <CR> r6=newReport("Report"); <CR> break; <CR> } <CR> returnr6; <CR> } <CR> publicstaticvoidmain(String[]Y5){ <CR> StringK1,f5; <CR> doubleZ5,z1; <CR> System.out.println("請輸入學生學號: "); <CR> K1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> f5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> Z5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> z1=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentr3=newStudent(K1,f5,Z5,z1); <CR> r3.setid(K1); <CR> r3.setname(f5); <CR> r3.setscore(Z5); <CR> r3.setsw(z1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringX7){ <CR> super(X7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringx7){ <CR> super(x7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(StringW0){ <CR> name=W0; <CR> } <CR> voidsetid(StringW0){ <CR> id=W0; <CR> } <CR> Stringid; <CR> StringgetName(){ <CR> returnname; <CR> } <CR> doublescore; <CR> doublesw; <CR> voidsetsw(doubleW0){ <CR> sw=W0; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> Student(StringZ2,StringK7,doublel8,doubleZ8){ <CR> this.id=Z2; <CR> this.name=K7; <CR> this.score=l8; <CR> this.sw=Z8; <CR> } <CR> voidsetscore(doubleW0){ <CR> score=W0; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringo1){ <CR> this.name=o1; <CR> } <CR> } <CR>  <EOC> 