 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo1){ <CR> super(o1); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> staticTestmapTest(intV4){ <CR> TestL9=null; <CR> switch(V4){ <CR> case1: <CR> L9=newExam("Exam"); <CR> break; <CR> case2: <CR> L9=newHomework("Homework"); <CR> break; <CR> case3: <CR> L9=newReport("Report"); <CR> break; <CR> } <CR> returnL9; <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intV4=0; <CR> do <CR> { <CR> V4=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(V4>3||V4<1); <CR> returnmapTest(V4); <CR> } <CR> publicstaticvoidmain(String[]D2){ <CR> StringO6,y4; <CR> doubleV4,C9; <CR> System.out.println("請輸入學生學號: "); <CR> O6=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> y4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> V4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> C9=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentx2=newStudent(O6,y4,V4,C9); <CR> x2.setid(O6); <CR> x2.setname(y4); <CR> x2.setscore(V4); <CR> x2.setsw(C9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn7){ <CR> super(n7); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringU3){ <CR> super(U3); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringid; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> doublescore; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetname(Stringu9){ <CR> name=u9; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(Stringu9){ <CR> id=u9; <CR> } <CR> Stringname; <CR> Student(Stringu5,Stringj3,doubles5,doubleN5){ <CR> this.id=u5; <CR> this.name=j3; <CR> this.score=s5; <CR> this.sw=N5; <CR> } <CR> voidsetscore(doubleu9){ <CR> score=u9; <CR> } <CR> doublesw; <CR> voidsetsw(doubleu9){ <CR> sw=u9; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Strings0){ <CR> this.name=s0; <CR> } <CR> } <CR>  <EOC> 