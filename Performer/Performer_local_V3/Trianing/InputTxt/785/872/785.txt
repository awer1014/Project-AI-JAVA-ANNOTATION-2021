 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringa8){ <CR> super(a8); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]J7){ <CR> StringI9,e3; <CR> doubleO3,Y; <CR> System.out.println("請輸入學生學號: "); <CR> I9=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> e3=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> Y=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentC7=newStudent(I9,e3,O3,Y); <CR> C7.setid(I9); <CR> C7.setname(e3); <CR> C7.setscore(O3); <CR> C7.setsw(Y); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO3=0; <CR> do <CR> { <CR> O3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O3>3||O3<1); <CR> returnmapTest(O3); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intO3){ <CR> Testa6=null; <CR> switch(O3){ <CR> case1: <CR> a6=newExam("Exam"); <CR> break; <CR> case2: <CR> a6=newHomework("Homework"); <CR> break; <CR> case3: <CR> a6=newReport("Report"); <CR> break; <CR> } <CR> returna6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringF6){ <CR> super(F6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(Stringu8){ <CR> super(u8); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetsw(doubleQ3){ <CR> sw=Q3; <CR> } <CR> voidsetname(StringQ3){ <CR> name=Q3; <CR> } <CR> doublescore; <CR> voidsetid(StringQ3){ <CR> id=Q3; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> Student(StringE0,StringN3,doubleo5,doublea2){ <CR> this.id=E0; <CR> this.name=N3; <CR> this.score=o5; <CR> this.sw=a2; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublesw; <CR> voidsetscore(doubleQ3){ <CR> score=Q3; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(Stringl5){ <CR> this.name=l5; <CR> } <CR> } <CR>  <EOC> 