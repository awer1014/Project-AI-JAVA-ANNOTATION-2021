 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringq){ <CR> super(q); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]l4){ <CR> StringA3,R7; <CR> doublev5,E4; <CR> System.out.println("請輸入學生學號: "); <CR> A3=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> R7=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> v5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> E4=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentw5=newStudent(A3,R7,v5,E4); <CR> w5.setid(A3); <CR> w5.setname(R7); <CR> w5.setscore(v5); <CR> w5.setsw(E4); <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intv5=0; <CR> do <CR> { <CR> v5=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(v5>3||v5<1); <CR> returnmapTest(v5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> staticTestmapTest(intv5){ <CR> TestD6=null; <CR> switch(v5){ <CR> case1: <CR> D6=newExam("Exam"); <CR> break; <CR> case2: <CR> D6=newHomework("Homework"); <CR> break; <CR> case3: <CR> D6=newReport("Report"); <CR> break; <CR> } <CR> returnD6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringt){ <CR> super(t); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringL1){ <CR> super(L1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringid; <CR> Stringname; <CR> doublescore; <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetsw(doublee1){ <CR> sw=e1; <CR> } <CR> Student(Stringh8,StringI8,doublev1,doubleE1){ <CR> this.id=h8; <CR> this.name=I8; <CR> this.score=v1; <CR> this.sw=E1; <CR> } <CR> voidsetid(Stringe1){ <CR> id=e1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetname(Stringe1){ <CR> name=e1; <CR> } <CR> voidsetscore(doublee1){ <CR> score=e1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(Stringm0){ <CR> this.name=m0; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 