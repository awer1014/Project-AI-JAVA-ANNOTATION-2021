 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringd4){ <CR> super(d4); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]Y3){ <CR> Stringz1,y6; <CR> doubleU0,e5; <CR> System.out.println("請輸入學生學號: "); <CR> z1=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> y6=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> U0=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> e5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentM8=newStudent(z1,y6,U0,e5); <CR> M8.setid(z1); <CR> M8.setname(y6); <CR> M8.setscore(U0); <CR> M8.setsw(e5); <CR> } <CR> staticTestmapTest(intU0){ <CR> TestF1=null; <CR> switch(U0){ <CR> case1: <CR> F1=newExam("Exam"); <CR> break; <CR> case2: <CR> F1=newHomework("Homework"); <CR> break; <CR> case3: <CR> F1=newReport("Report"); <CR> break; <CR> } <CR> returnF1; <CR> } <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intU0=0; <CR> do <CR> { <CR> U0=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(U0>3||U0<1); <CR> returnmapTest(U0); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(StringH2){ <CR> super(H2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringR2){ <CR> super(R2); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> voidsetsw(doubleP){ <CR> sw=P; <CR> } <CR> doublesw; <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> voidsetscore(doubleP){ <CR> score=P; <CR> } <CR> doublescore; <CR> Student(StringL4,StringH6,doubleY,doubleS5){ <CR> this.id=L4; <CR> this.name=H6; <CR> this.score=Y; <CR> this.sw=S5; <CR> } <CR> Stringname; <CR> Stringid; <CR> voidsetname(StringP){ <CR> name=P; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetid(StringP){ <CR> id=P; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> protectedStringname; <CR> publicTest(StringR9){ <CR> this.name=R9; <CR> } <CR> } <CR>  <EOC> 