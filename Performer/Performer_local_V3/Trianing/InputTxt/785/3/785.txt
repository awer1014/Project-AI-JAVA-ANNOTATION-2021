 <BOC> publicclassExamextendsTest{ <CR> publicExam(Stringo3){ <CR> super(o3); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]e5){ <CR> StringN8,Z4; <CR> doubleO7,l8; <CR> System.out.println("請輸入學生學號: "); <CR> N8=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> Z4=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> O7=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> l8=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> Studentq8=newStudent(N8,Z4,O7,l8); <CR> q8.setid(N8); <CR> q8.setname(Z4); <CR> q8.setscore(O7); <CR> q8.setsw(l8); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> intO7=0; <CR> do <CR> { <CR> O7=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(O7>3||O7<1); <CR> returnmapTest(O7); <CR> } <CR> staticTestmapTest(intO7){ <CR> Testx=null; <CR> switch(O7){ <CR> case1: <CR> x=newExam("Exam"); <CR> break; <CR> case2: <CR> x=newHomework("Homework"); <CR> break; <CR> case3: <CR> x=newReport("Report"); <CR> break; <CR> } <CR> returnx; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringn6){ <CR> super(n6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringE9){ <CR> super(E9); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(Stringc1){ <CR> id=c1; <CR> } <CR> doublescore; <CR> doublesw; <CR> voidsetname(Stringc1){ <CR> name=c1; <CR> } <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> Student(StringO0,StringP6,doubleR7,doubleE1){ <CR> this.id=O0; <CR> this.name=P6; <CR> this.score=R7; <CR> this.sw=E1; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> Stringid; <CR> voidsetsw(doublec1){ <CR> sw=c1; <CR> } <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> Stringname; <CR> voidsetscore(doublec1){ <CR> score=c1; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringX8){ <CR> this.name=X8; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 