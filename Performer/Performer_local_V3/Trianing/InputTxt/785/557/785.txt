 <BOC> publicclassExamextendsTest{ <CR> publicExam(StringS5){ <CR> super(S5); <CR> } <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> importjava.util.Random; <CR> publicclassGame{ <CR> publicstaticvoidmain(String[]I1){ <CR> StringH7,o5; <CR> doublee3,h5; <CR> System.out.println("請輸入學生學號: "); <CR> H7=keyboard.next(); <CR> System.out.println("請輸入學生姓名: "); <CR> o5=keyboard.next(); <CR> System.out.println("請輸入成績: "); <CR> e3=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> System.out.println("請輸入成績比重: "); <CR> h5=keyboard.nextDouble(); <CR> keyboard.nextLine(); <CR> StudentO2=newStudent(H7,o5,e3,h5); <CR> O2.setid(H7); <CR> O2.setname(o5); <CR> O2.setscore(e3); <CR> O2.setsw(h5); <CR> } <CR> staticScannerkeyboard=newScanner(System.in); <CR> privatestaticTestchooseTest(){ <CR> System.out.println("請輸入種類 1(測驗),2(作業),3(心得報告):"); <CR> inte3=0; <CR> do <CR> { <CR> e3=keyboard.nextInt(); <CR> keyboard.nextLine(); <CR> } <CR> while(e3>3||e3<1); <CR> returnmapTest(e3); <CR> } <CR> staticTestmapTest(inte3){ <CR> Teste5=null; <CR> switch(e3){ <CR> case1: <CR> e5=newExam("Exam"); <CR> break; <CR> case2: <CR> e5=newHomework("Homework"); <CR> break; <CR> case3: <CR> e5=newReport("Report"); <CR> break; <CR> } <CR> returne5; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassHomeworkextendsTest{ <CR> publicHomework(Stringx1){ <CR> super(x1); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassReportextendsTest{ <CR> publicReport(StringP6){ <CR> super(P6); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassStudent{ <CR> voidsetid(StringO0){ <CR> id=O0; <CR> } <CR> doublesw; <CR> Student(StringK4,Strings7,doubleR3,doubley0){ <CR> this.id=K4; <CR> this.name=s7; <CR> this.score=R3; <CR> this.sw=y0; <CR> } <CR> Stringname; <CR> Stringgetid(){ <CR> returnid; <CR> } <CR> doublegetscore(){ <CR> returnscore; <CR> } <CR> StringgetName(){ <CR> returnname; <CR> } <CR> voidsetscore(doubleO0){ <CR> score=O0; <CR> } <CR> voidsetname(StringO0){ <CR> name=O0; <CR> } <CR> Stringid; <CR> voidsetsw(doubleO0){ <CR> sw=O0; <CR> } <CR> doublescore; <CR> doublegetsw(){ <CR> returnsw; <CR> } <CR> } <CR>  <EOC>  <BOC> abstractpublicclassTest{ <CR> publicTest(StringZ4){ <CR> this.name=Z4; <CR> } <CR> protectedStringname; <CR> } <CR>  <EOC> 