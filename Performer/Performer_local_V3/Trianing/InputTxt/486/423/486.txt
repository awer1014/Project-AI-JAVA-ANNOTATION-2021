 <BOC> publicclassPet{ <CR> Stringtype; <CR> voidspeak(StringE2){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringname; <CR> voiddisplay(StringU9,StringE2,Stringo1){ <CR> U9=p; <CR> E2=n; <CR> o1=t; <CR> } <CR> Pet(StringU9,StringE2,Stringo1){ <CR> U9=p; <CR> E2=n; <CR> o1=t; <CR> } <CR> intn; <CR> Stringpid; <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringM7,Stringx1){ <CR> StringM7; <CR> stringx1; <CR> } <CR> publicstaticvoidmain(String[]d7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> voiddisplay(StringM7,Stringx1){ <CR> StringM7=M7; <CR> Stringx1=x1; <CR> } <CR> Stringtel; <CR> Stringid; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]M){ <CR> Stringk1; <CR> intX8; <CR> X8=k1.length(); <CR> System.out.print(X8); <CR> } <CR> } <CR>  <EOC> 