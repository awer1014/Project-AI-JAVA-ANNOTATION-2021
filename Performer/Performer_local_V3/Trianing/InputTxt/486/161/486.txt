 <BOC> publicclassPet{ <CR> Stringtype; <CR> voidspeak(Stringk5){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> voiddisplay(Stringz4,Stringk5,Stringp9){ <CR> z4=p; <CR> k5=n; <CR> p9=t; <CR> } <CR> intcount=2; <CR> Stringpid; <CR> Stringname; <CR> Pet(Stringz4,Stringk5,Stringp9){ <CR> z4=p; <CR> k5=n; <CR> p9=t; <CR> } <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> publicstaticvoidmain(String[]k7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Stringid; <CR> voiddisplay(StringM,Stringf1){ <CR> StringM=M; <CR> Stringf1=f1; <CR> } <CR> Keeper(StringM,Stringf1){ <CR> StringM; <CR> stringf1; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]v2){ <CR> Stringw4; <CR> intu7; <CR> u7=w4.length(); <CR> System.out.print(u7); <CR> } <CR> } <CR>  <EOC> 