 <BOC> publicclassPet{ <CR> Pet(Stringa7,Stringb7,Stringn8){ <CR> a7=p; <CR> b7=n; <CR> n8=t; <CR> } <CR> intn; <CR> voiddisplay(Stringa7,Stringb7,Stringn8){ <CR> a7=p; <CR> b7=n; <CR> n8=t; <CR> } <CR> Stringname; <CR> intcount=2; <CR> Stringtype; <CR> Stringpid; <CR> voidspeak(Stringb7){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> } <CR> publicclassKeeper{ <CR> Stringtel; <CR> Keeper(Stringx8,Stringd6){ <CR> Stringx8; <CR> stringd6; <CR> } <CR> publicstaticvoidmain(String[]D3){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> voiddisplay(Stringx8,Stringd6){ <CR> Stringx8=x8; <CR> Stringd6=d6; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]Z2){ <CR> StringJ9; <CR> intF3; <CR> F3=J9.length(); <CR> System.out.print(F3); <CR> } <CR> } <CR>  <EOC> 