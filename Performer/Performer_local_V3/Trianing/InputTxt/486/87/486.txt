 <BOC> publicclassPet{ <CR> voiddisplay(StringH9,StringX2,StringX3){ <CR> H9=p; <CR> X2=n; <CR> X3=t; <CR> } <CR> Pet(StringH9,StringX2,StringX3){ <CR> H9=p; <CR> X2=n; <CR> X3=t; <CR> } <CR> Stringname; <CR> intn; <CR> intcount=2; <CR> Stringpid; <CR> Stringtype; <CR> voidspeak(StringX2){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> voiddisplay(StringP8,Stringi2){ <CR> StringP8=P8; <CR> Stringi2=i2; <CR> } <CR> Keeper(StringP8,Stringi2){ <CR> StringP8; <CR> stringi2; <CR> } <CR> publicstaticvoidmain(String[]F9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]S8){ <CR> Stringq5; <CR> intm7; <CR> m7=q5.length(); <CR> System.out.print(m7); <CR> } <CR> } <CR>  <EOC> 