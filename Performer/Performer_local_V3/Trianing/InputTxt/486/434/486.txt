 <BOC> publicclassPet{ <CR> intn; <CR> Pet(Stringx8,StringA2,StringW1){ <CR> x8=p; <CR> A2=n; <CR> W1=t; <CR> } <CR> Stringtype; <CR> voidspeak(StringA2){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> intcount=2; <CR> Stringname; <CR> voiddisplay(Stringx8,StringA2,StringW1){ <CR> x8=p; <CR> A2=n; <CR> W1=t; <CR> } <CR> } <CR> publicclassKeeper{ <CR> Keeper(Stringl7,StringA8){ <CR> Stringl7; <CR> stringA8; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]P8){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> voiddisplay(Stringl7,StringA8){ <CR> Stringl7=l7; <CR> StringA8=A8; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]h7){ <CR> StringS3; <CR> into0; <CR> o0=S3.length(); <CR> System.out.print(o0); <CR> } <CR> } <CR>  <EOC> 