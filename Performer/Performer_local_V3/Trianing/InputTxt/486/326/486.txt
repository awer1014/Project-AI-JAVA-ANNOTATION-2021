 <BOC> publicclassPet{ <CR> intn; <CR> intcount=2; <CR> voiddisplay(StringL1,Stringm2,StringG3){ <CR> L1=p; <CR> m2=n; <CR> G3=t; <CR> } <CR> voidspeak(Stringm2){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringpid; <CR> Stringtype; <CR> Pet(StringL1,Stringm2,StringG3){ <CR> L1=p; <CR> m2=n; <CR> G3=t; <CR> } <CR> Stringname; <CR> } <CR> publicclassKeeper{ <CR> publicstaticvoidmain(String[]L9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Keeper(Stringx4,Stringf){ <CR> Stringx4; <CR> stringf; <CR> } <CR> Stringid; <CR> Stringtel; <CR> voiddisplay(Stringx4,Stringf){ <CR> Stringx4=x4; <CR> Stringf=f; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]n1){ <CR> Stringg8; <CR> intS1; <CR> S1=g8.length(); <CR> System.out.print(S1); <CR> } <CR> } <CR>  <EOC> 