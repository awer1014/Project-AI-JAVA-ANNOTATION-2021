 <BOC> publicclassPet{ <CR> Stringpid; <CR> intn; <CR> Stringname; <CR> voiddisplay(StringS4,StringR,StringH0){ <CR> S4=p; <CR> R=n; <CR> H0=t; <CR> } <CR> Stringtype; <CR> Pet(StringS4,StringR,StringH0){ <CR> S4=p; <CR> R=n; <CR> H0=t; <CR> } <CR> voidspeak(StringR){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(Stringk0,StringK1){ <CR> Stringk0=k0; <CR> StringK1=K1; <CR> } <CR> Stringid; <CR> Keeper(Stringk0,StringK1){ <CR> Stringk0; <CR> stringK1; <CR> } <CR> publicstaticvoidmain(String[]g4){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]q9){ <CR> Stringq1; <CR> intQ2; <CR> Q2=q1.length(); <CR> System.out.print(Q2); <CR> } <CR> } <CR>  <EOC> 