 <BOC> publicclassPet{ <CR> Stringtype; <CR> Stringpid; <CR> intn; <CR> voidspeak(Stringr3){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> voiddisplay(Stringq2,Stringr3,StringD){ <CR> q2=p; <CR> r3=n; <CR> D=t; <CR> } <CR> Pet(Stringq2,Stringr3,StringD){ <CR> q2=p; <CR> r3=n; <CR> D=t; <CR> } <CR> intcount=2; <CR> Stringname; <CR> } <CR> publicclassKeeper{ <CR> Keeper(Stringz8,Stringd6){ <CR> Stringz8; <CR> stringd6; <CR> } <CR> voiddisplay(Stringz8,Stringd6){ <CR> Stringz8=z8; <CR> Stringd6=d6; <CR> } <CR> Stringtel; <CR> Stringid; <CR> publicstaticvoidmain(String[]H1){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]h){ <CR> StringT8; <CR> intX8; <CR> X8=T8.length(); <CR> System.out.print(X8); <CR> } <CR> } <CR>  <EOC> 