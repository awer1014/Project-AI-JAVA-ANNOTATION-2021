 <BOC> publicclassPet{ <CR> Pet(StringQ7,Stringw2,StringR8){ <CR> Q7=p; <CR> w2=n; <CR> R8=t; <CR> } <CR> Stringpid; <CR> voiddisplay(StringQ7,Stringw2,StringR8){ <CR> Q7=p; <CR> w2=n; <CR> R8=t; <CR> } <CR> Stringname; <CR> intcount=2; <CR> Stringtype; <CR> voidspeak(Stringw2){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Keeper(StringG0,StringP3){ <CR> StringG0; <CR> stringP3; <CR> } <CR> Stringtel; <CR> Stringid; <CR> voiddisplay(StringG0,StringP3){ <CR> StringG0=G0; <CR> StringP3=P3; <CR> } <CR> publicstaticvoidmain(String[]P9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]M5){ <CR> Stringu4; <CR> intX8; <CR> X8=u4.length(); <CR> System.out.print(X8); <CR> } <CR> } <CR>  <EOC> 