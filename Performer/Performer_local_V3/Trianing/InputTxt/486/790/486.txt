 <BOC> publicclassPet{ <CR> voidspeak(StringM7){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intn; <CR> intcount=2; <CR> Stringname; <CR> Stringpid; <CR> voiddisplay(StringK9,StringM7,Strings9){ <CR> K9=p; <CR> M7=n; <CR> s9=t; <CR> } <CR> Pet(StringK9,StringM7,Strings9){ <CR> K9=p; <CR> M7=n; <CR> s9=t; <CR> } <CR> Stringtype; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(StringL9,StringK3){ <CR> StringL9=L9; <CR> StringK3=K3; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]w3){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(StringL9,StringK3){ <CR> StringL9; <CR> stringK3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]X1){ <CR> StringF6; <CR> intx7; <CR> x7=F6.length(); <CR> System.out.print(x7); <CR> } <CR> } <CR>  <EOC> 