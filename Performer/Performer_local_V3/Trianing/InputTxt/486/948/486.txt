 <BOC> publicclassPet{ <CR> intn; <CR> Stringname; <CR> Stringpid; <CR> voiddisplay(StringL1,StringW9,StringP5){ <CR> L1=p; <CR> W9=n; <CR> P5=t; <CR> } <CR> Stringtype; <CR> voidspeak(StringW9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Pet(StringL1,StringW9,StringP5){ <CR> L1=p; <CR> W9=n; <CR> P5=t; <CR> } <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(StringA1,Stringx0){ <CR> StringA1=A1; <CR> Stringx0=x0; <CR> } <CR> publicstaticvoidmain(String[]V9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Stringid; <CR> Keeper(StringA1,Stringx0){ <CR> StringA1; <CR> stringx0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]C5){ <CR> StringW; <CR> intZ7; <CR> Z7=W.length(); <CR> System.out.print(Z7); <CR> } <CR> } <CR>  <EOC> 