 <BOC> publicclassPet{ <CR> voiddisplay(Stringw8,StringH9,StringB1){ <CR> w8=p; <CR> H9=n; <CR> B1=t; <CR> } <CR> intcount=2; <CR> Pet(Stringw8,StringH9,StringB1){ <CR> w8=p; <CR> H9=n; <CR> B1=t; <CR> } <CR> Stringname; <CR> voidspeak(StringH9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intn; <CR> Stringtype; <CR> Stringpid; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> Keeper(StringW8,StringG4){ <CR> StringW8; <CR> stringG4; <CR> } <CR> voiddisplay(StringW8,StringG4){ <CR> StringW8=W8; <CR> StringG4=G4; <CR> } <CR> Stringtel; <CR> publicstaticvoidmain(String[]K2){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]B){ <CR> StringU3; <CR> intJ3; <CR> J3=U3.length(); <CR> System.out.print(J3); <CR> } <CR> } <CR>  <EOC> 