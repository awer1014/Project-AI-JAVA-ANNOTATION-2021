 <BOC> publicclassPet{ <CR> Pet(StringE6,Stringh1,StringX){ <CR> E6=p; <CR> h1=n; <CR> X=t; <CR> } <CR> intcount=2; <CR> Stringname; <CR> Stringpid; <CR> intn; <CR> Stringtype; <CR> voiddisplay(StringE6,Stringh1,StringX){ <CR> E6=p; <CR> h1=n; <CR> X=t; <CR> } <CR> voidspeak(Stringh1){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(Stringx1,StringB8){ <CR> Stringx1=x1; <CR> StringB8=B8; <CR> } <CR> publicstaticvoidmain(String[]b8){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> Keeper(Stringx1,StringB8){ <CR> Stringx1; <CR> stringB8; <CR> } <CR> Stringtel; <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]p8){ <CR> StringG5; <CR> intO8; <CR> O8=G5.length(); <CR> System.out.print(O8); <CR> } <CR> } <CR>  <EOC> 