 <BOC> publicclassPet{ <CR> Stringtype; <CR> voiddisplay(StringE1,StringC8,StringB3){ <CR> E1=p; <CR> C8=n; <CR> B3=t; <CR> } <CR> Pet(StringE1,StringC8,StringB3){ <CR> E1=p; <CR> C8=n; <CR> B3=t; <CR> } <CR> Stringpid; <CR> voidspeak(StringC8){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Stringname; <CR> intcount=2; <CR> intn; <CR> } <CR> publicclassKeeper{ <CR> Stringid; <CR> voiddisplay(StringL,StringR0){ <CR> StringL=L; <CR> StringR0=R0; <CR> } <CR> publicstaticvoidmain(String[]A9){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(StringL,StringR0){ <CR> StringL; <CR> stringR0; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]U2){ <CR> Stringb9; <CR> intS1; <CR> S1=b9.length(); <CR> System.out.print(S1); <CR> } <CR> } <CR>  <EOC> 