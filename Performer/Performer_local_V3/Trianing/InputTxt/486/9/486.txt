 <BOC> publicclassPet{ <CR> voidspeak(StringI1){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> intcount=2; <CR> intn; <CR> voiddisplay(StringG5,StringI1,StringS3){ <CR> G5=p; <CR> I1=n; <CR> S3=t; <CR> } <CR> Pet(StringG5,StringI1,StringS3){ <CR> G5=p; <CR> I1=n; <CR> S3=t; <CR> } <CR> Stringname; <CR> Stringtype; <CR> Stringpid; <CR> } <CR> publicclassKeeper{ <CR> Stringtel; <CR> Keeper(StringV9,StringF3){ <CR> StringV9; <CR> stringF3; <CR> } <CR> publicstaticvoidmain(String[]P7){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringid; <CR> voiddisplay(StringV9,StringF3){ <CR> StringV9=V9; <CR> StringF3=F3; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]g8){ <CR> Stringp7; <CR> intL1; <CR> L1=p7.length(); <CR> System.out.print(L1); <CR> } <CR> } <CR>  <EOC> 