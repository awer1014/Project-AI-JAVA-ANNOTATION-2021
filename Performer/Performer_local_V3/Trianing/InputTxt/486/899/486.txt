 <BOC> publicclassPet{ <CR> voiddisplay(Stringx2,StringM9,StringE6){ <CR> x2=p; <CR> M9=n; <CR> E6=t; <CR> } <CR> intn; <CR> voidspeak(StringM9){ <CR> if(cat){ <CR> return喵喵; <CR> } <CR> elseif(dog){ <CR> return汪汪; <CR> } <CR> } <CR> Pet(Stringx2,StringM9,StringE6){ <CR> x2=p; <CR> M9=n; <CR> E6=t; <CR> } <CR> Stringpid; <CR> Stringname; <CR> Stringtype; <CR> intcount=2; <CR> } <CR> publicclassKeeper{ <CR> voiddisplay(Stringg2,StringG){ <CR> Stringg2=g2; <CR> StringG=G; <CR> } <CR> Stringid; <CR> publicstaticvoidmain(String[]t3){ <CR> System.out.println("type:"+type); <CR> System.out.println("pid:"+pid); <CR> System.out.println("name:"+name); <CR> System.out.println("id:"+id); <CR> System.out.println("tel:"+tel); <CR> System.out.println("speak:"+speak); <CR> } <CR> Stringtel; <CR> Keeper(Stringg2,StringG){ <CR> Stringg2; <CR> stringG; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassScanner{ <CR> publicstaticvoidmain(String[]R2){ <CR> Stringd; <CR> intB1; <CR> B1=d.length(); <CR> System.out.print(B1); <CR> } <CR> } <CR>  <EOC> 