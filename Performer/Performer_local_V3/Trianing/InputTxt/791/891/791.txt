 <BOC> abstractpublicclassEvaluation{ <CR> privateStringsid,name,type; <CR> protecteddoublegrade,gradepc; <CR> abstractpublicvoidprinta(); <CR> publicvoidprint(){ <CR> System.out.println("種類 : "+type); <CR> System.out.println("學生學號 : "+sid); <CR> System.out.println("學生姓名 : "+name); <CR> System.out.println("成績 : "+grade); <CR> System.out.println("成績比重 : "+gradepc); <CR> } <CR> publicEvaluation(StringF5,StringA7,Stringv1,doublec1,doubleI9){ <CR> sid=F5; <CR> name=A7; <CR> type=v1; <CR> this.grade=c1; <CR> this.gradepc=I9; <CR> } <CR> } <CR>  <EOC>  <BOC> publicclassExamextendsEvaluation{ <CR> publicExam(StringA4,StringR5,Stringe5,doubleG5,doubleY9){ <CR> super(A4,R5,e5,G5,Y9); <CR> } <CR> Stringdate; <CR> publicvoidprinta(){ <CR> System.out.println("考試日期: "+date); <CR> System.out.println("考試範圍: "+range); <CR> } <CR> Stringrange; <CR> } <CR>  <EOC>  <BOC> importjava.util.Scanner; <CR> publicclassTest{ <CR> publicstaticvoidmain(String[]g6){ <CR> ScannerA3=newScanner(System.in); <CR> System.out.println("請輸入種類 1(測驗), 2(作業), 3(心得報告) : "); <CR> intj7=0; <CR> do <CR> { <CR> j7=A3.nextInt(); <CR> } <CR> while(j7>3||j7<1); <CR> returnmapEvaluation(j7); <CR> } <CR> staticEvaluationmapEvaluation(intj7){ <CR> Evaluationz9=null; <CR> switch(j7){ <CR> case1: <CR> z9=newExam("Exam"); <CR> break; <CR> } <CR> } <CR> } <CR>  <EOC> 