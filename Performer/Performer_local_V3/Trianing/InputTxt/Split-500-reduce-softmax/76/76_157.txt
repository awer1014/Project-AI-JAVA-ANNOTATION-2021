<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private int num_i ; <CR> private String id , date , coin ; <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> ChineseLetter ( String Z 3 , String Q 8 , String z 4 , Item [ ] f 9 , int S 6 ) { <CR> id = Z 3 ; <CR> date = Q 8 ; <CR> num_i = S 6 ; <CR> for ( int I 0 = <STRING> ; I 0 < S 6 ; I 0 ++ ) <CR> it [ I 0 ] = f 9 [ I 0 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( String O 8 , String j 4 , double D 4 , int L 9 , double U 4 ) { <CR> id = O 8 ; <CR> name = j 4 ; <CR> money = D 4 ; <CR> cnt = L 9 ; <CR> discnt = U 4 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private double money , discnt ; <CR> private static double total_money = <STRING> ; <CR> Item ( ) { <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private String id , name ; <CR> private int cnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static void main ( String [ ] W 9 ) { <CR> Scanner M = new Scanner ( System . in ) ; <CR> String u 5 , U 8 , N 9 ; <CR> System . out . print ( <STRING> ) ; <CR> u 5 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 8 = M . nextLine ( ) ; <CR> N 9 = M . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String R 8 , S 2 , a 2 , C 5 , Y 9 ; <CR> System . out . print ( <STRING> ) ; <CR> R 8 = M . nextLine ( ) ; <CR> if ( R 8 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> S 2 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 2 = M . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> } <CR> <EOC>