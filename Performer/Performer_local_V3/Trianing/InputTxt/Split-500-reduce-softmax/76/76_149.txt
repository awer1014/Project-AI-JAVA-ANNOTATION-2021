<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> ChineseLetter ( String x 7 , String d 7 , String f 9 , Item [ ] s 0 , int p 7 ) { <CR> id = x 7 ; <CR> date = d 7 ; <CR> num_i = p 7 ; <CR> for ( int Q 9 = <STRING> ; Q 9 < p 7 ; Q 9 ++ ) <CR> it [ Q 9 ] = s 0 [ Q 9 ] ; <CR> } <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private int num_i ; <CR> private String id , date , coin ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> private int cnt ; <CR> Item ( String J 5 , String E 4 , double e 4 , int Y 7 , double x 0 ) { <CR> id = J 5 ; <CR> name = E 4 ; <CR> money = e 4 ; <CR> cnt = Y 7 ; <CR> discnt = x 0 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( ) { <CR> } <CR> private double money , discnt ; <CR> private String id , name ; <CR> private static double total_money = <STRING> ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] R 6 ) { <CR> Scanner Z 6 = new Scanner ( System . in ) ; <CR> String S 2 , B 9 , r 6 ; <CR> System . out . print ( <STRING> ) ; <CR> S 2 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B 9 = Z 6 . nextLine ( ) ; <CR> r 6 = Z 6 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String d 9 , c 7 , B 3 , C 1 , Z 3 ; <CR> System . out . print ( <STRING> ) ; <CR> d 9 = Z 6 . nextLine ( ) ; <CR> if ( d 9 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> c 7 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B 3 = Z 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>