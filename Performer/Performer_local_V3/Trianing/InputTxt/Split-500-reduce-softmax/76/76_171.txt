<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> ChineseLetter ( String l 8 , String Z 7 , String n 2 , Item [ ] o 1 , int q 6 ) { <CR> id = l 8 ; <CR> date = Z 7 ; <CR> num_i = q 6 ; <CR> for ( int E 9 = <STRING> ; E 9 < q 6 ; E 9 ++ ) <CR> it [ E 9 ] = o 1 [ E 9 ] ; <CR> } <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private int num_i ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( String W 2 , String S 0 , double O 6 , int A 1 , double G 0 ) { <CR> id = W 2 ; <CR> name = S 0 ; <CR> money = O 6 ; <CR> cnt = A 1 ; <CR> discnt = G 0 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> private static double total_money = <STRING> ; <CR> private double money , discnt ; <CR> private int cnt ; <CR> private String id , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] c 7 ) { <CR> Scanner T 3 = new Scanner ( System . in ) ; <CR> String N 7 , b 2 , H 0 ; <CR> System . out . print ( <STRING> ) ; <CR> N 7 = T 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 2 = T 3 . nextLine ( ) ; <CR> H 0 = T 3 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String B 6 , v 1 , U 7 , w 0 , N 0 ; <CR> System . out . print ( <STRING> ) ; <CR> B 6 = T 3 . nextLine ( ) ; <CR> if ( B 6 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> v 1 = T 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 7 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>