<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> ChineseLetter ( String J 9 , String O 1 , String Y 2 , Item [ ] N 0 , int A 6 ) { <CR> id = J 9 ; <CR> date = O 1 ; <CR> num_i = A 6 ; <CR> for ( int t 9 = <STRING> ; t 9 < A 6 ; t 9 ++ ) <CR> it [ t 9 ] = N 0 [ t 9 ] ; <CR> } <CR> private int num_i ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> private static double total_money = <STRING> ; <CR> private int cnt ; <CR> private String id , name ; <CR> Item ( ) { <CR> } <CR> Item ( String s 1 , String q 3 , double I 5 , int D , double H 0 ) { <CR> id = s 1 ; <CR> name = q 3 ; <CR> money = I 5 ; <CR> cnt = D ; <CR> discnt = H 0 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private double money , discnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> public static void main ( String [ ] h 3 ) { <CR> Scanner z 9 = new Scanner ( System . in ) ; <CR> String H 1 , r 1 , E 3 ; <CR> System . out . print ( <STRING> ) ; <CR> H 1 = z 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> r 1 = z 9 . nextLine ( ) ; <CR> E 3 = z 9 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String l 7 , n 6 , r 0 , i 4 , e 7 ; <CR> System . out . print ( <STRING> ) ; <CR> l 7 = z 9 . nextLine ( ) ; <CR> if ( l 7 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> n 6 = z 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> r 0 = z 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>