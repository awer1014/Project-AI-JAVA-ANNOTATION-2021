<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <STRING> ] ; <CR> private int num_i ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private String id , date , coin ; <CR> ChineseLetter ( String P 7 , String y 5 , String V 2 , Item [ ] q 5 , int T 8 ) { <CR> id = P 7 ; <CR> date = y 5 ; <CR> num_i = T 8 ; <CR> for ( int w 1 = <STRING> ; w 1 < T 8 ; w 1 ++ ) <CR> it [ w 1 ] = q 5 [ w 1 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> private static double total_money = <STRING> ; <CR> Item ( String l 4 , String L 1 , double O 0 , int s 1 , double L 8 ) { <CR> id = l 4 ; <CR> name = L 1 ; <CR> money = O 0 ; <CR> cnt = s 1 ; <CR> discnt = L 8 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private String id , name ; <CR> private int cnt ; <CR> private double money , discnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static void main ( String [ ] G 0 ) { <CR> Scanner A 4 = new Scanner ( System . in ) ; <CR> String G , k 9 , D 5 ; <CR> System . out . print ( <STRING> ) ; <CR> G = A 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 9 = A 4 . nextLine ( ) ; <CR> D 5 = A 4 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String i 3 , H , q 7 , v 6 , T 9 ; <CR> System . out . print ( <STRING> ) ; <CR> i 3 = A 4 . nextLine ( ) ; <CR> if ( i 3 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> H = A 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 7 = A 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> public static Item [ ] item = new Item [ <STRING> ] ; <CR> } <CR> <EOC>