<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String r 7 , String D 1 , String c 5 , String q 8 , String P 9 ) { <CR> super ( r 7 , D 1 , c 5 , q 8 , P 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String g 8 , String X 5 , String u 7 , String q 1 , String A 4 ) { <CR> super ( g 8 , X 5 , u 7 , q 1 , A 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop extends Letter { <CR> String senderAddr ; <CR> String getsenderAddr ( ) { <CR> return senderAddr ; <CR> } <CR> String getreceiverAddr ( ) ; <CR> { <CR> return receiverAddr ; <CR> } <CR> String receiverAddr ; <CR> String getletter ( ) { <CR> return letter ; <CR> } <CR> Envelop ( String O , String M 7 , Letter g 5 ) { <CR> this . senderAddr = O ; <CR> this . receiverAddr = M 7 ; <CR> this . letter = g 5 ; <CR> } <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> protected String receiver ; <CR> Letter ( String V 2 , String s 6 , String f , String Q 5 , String H 5 ) { <CR> this . title = V 2 ; <CR> this . receiver = s 6 ; <CR> this . content = f ; <CR> this . sender = Q 5 ; <CR> this . date = H 5 ; <CR> } <CR> protected String title ; <CR> protected String sender ; <CR> protected String date ; <CR> public void display 2 ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . print ( date ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String content ; <CR> } <CR> <EOC> <BOC> public class non extends Letter { <CR> non ( String d 1 , String q 8 , String N , String d , String q 7 ) { <CR> super ( d 1 , q 8 , N , d , q 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] J 6 ) { <CR> Scanner n 8 = new Scanner ( System . in ) ; <CR> boolean S 5 = <STRING> ; <CR> while ( S 5 ) { <CR> System . out . print ( <STRING> ) ; <CR> String y = n 8 . nextLine ( ) ; <CR> if ( y . equals ( <STRING> ) ) { <CR> S 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String H 1 = n 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String F 7 = n 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s = n 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p = n 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 4 = n 8 . nextLine ( ) ; <CR> Letter e ; <CR> if ( y . equals ( <STRING> ) ) { <CR> e = new ChineseLetter ( H 1 , F 7 , s , p , J 4 ) ; <CR> Envelop m 2 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> e . display ( ) ; <CR> } <CR> else if ( y . equals ( <STRING> ) ) { <CR> e = new EnglishLetter ( H 1 , F 7 , s , p , J 4 ) ; <CR> Envelop m 2 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> e . display 2 ( ) ; <CR> } <CR> else { <CR> e = new non ( H 1 , F 7 , s , p , J 4 ) ; <CR> Envelop m 2 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>