<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String A 8 , String b 7 , String b 4 , String O 3 , String R ) { <CR> super ( A 8 , b 7 , b 4 , O 3 , R ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String e 3 , String e 8 , String p 3 , String j 7 , String X 2 ) { <CR> super ( e 3 , e 8 , p 3 , j 7 , X 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop extends Letter { <CR> String getsenderAddr ( ) { <CR> return senderAddr ; <CR> } <CR> String senderAddr ; <CR> Envelop ( String z 2 , String O 4 , Letter P 1 ) { <CR> this . senderAddr = z 2 ; <CR> this . receiverAddr = O 4 ; <CR> this . letter = P 1 ; <CR> } <CR> Letter letter ; <CR> String receiverAddr ; <CR> { <CR> return receiverAddr ; <CR> } <CR> String getreceiverAddr ( ) ; <CR> String getletter ( ) { <CR> return letter ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> protected String content ; <CR> protected String sender ; <CR> public void display 2 ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . print ( date ) ; <CR> } <CR> Letter ( String S , String Q 8 , String C 2 , String e , String q 6 ) { <CR> this . title = S ; <CR> this . receiver = Q 8 ; <CR> this . content = C 2 ; <CR> this . sender = e ; <CR> this . date = q 6 ; <CR> } <CR> protected String title ; <CR> protected String date ; <CR> public void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String receiver ; <CR> } <CR> <EOC> <BOC> public class non extends Letter { <CR> non ( String f 1 , String r 4 , String m , String g 0 , String L 2 ) { <CR> super ( f 1 , r 4 , m , g 0 , L 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] o 9 ) { <CR> Scanner D 9 = new Scanner ( System . in ) ; <CR> boolean R 9 = <STRING> ; <CR> while ( R 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String N 8 = D 9 . nextLine ( ) ; <CR> if ( N 8 . equals ( <STRING> ) ) { <CR> R 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String L 3 = D 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String y 8 = D 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Q 4 = D 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String U 6 = D 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String W 4 = D 9 . nextLine ( ) ; <CR> Letter d 2 ; <CR> if ( N 8 . equals ( <STRING> ) ) { <CR> d 2 = new ChineseLetter ( L 3 , y 8 , Q 4 , U 6 , W 4 ) ; <CR> Envelop M 3 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> d 2 . display ( ) ; <CR> } <CR> else if ( N 8 . equals ( <STRING> ) ) { <CR> d 2 = new EnglishLetter ( L 3 , y 8 , Q 4 , U 6 , W 4 ) ; <CR> Envelop M 3 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> d 2 . display 2 ( ) ; <CR> } <CR> else { <CR> d 2 = new non ( L 3 , y 8 , Q 4 , U 6 , W 4 ) ; <CR> Envelop M 3 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>