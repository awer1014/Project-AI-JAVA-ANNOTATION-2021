<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String S 4 , String P , String l 2 , String f 4 , String M 2 ) { <CR> super ( S 4 , P , l 2 , f 4 , M 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String E 9 , String h 7 , String S 5 , String W , String e 2 ) { <CR> super ( E 9 , h 7 , S 5 , W , e 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop extends Letter { <CR> String getletter ( ) { <CR> return letter ; <CR> } <CR> String getreceiverAddr ( ) ; <CR> String receiverAddr ; <CR> Letter letter ; <CR> { <CR> return receiverAddr ; <CR> } <CR> String senderAddr ; <CR> Envelop ( String t 3 , String A 9 , Letter X 9 ) { <CR> this . senderAddr = t 3 ; <CR> this . receiverAddr = A 9 ; <CR> this . letter = X 9 ; <CR> } <CR> String getsenderAddr ( ) { <CR> return senderAddr ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> protected String sender ; <CR> protected String receiver ; <CR> public void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . print ( date ) ; <CR> } <CR> public void display 2 ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String date ; <CR> protected String content ; <CR> protected String title ; <CR> Letter ( String r , String I 2 , String k 4 , String D 3 , String N 4 ) { <CR> this . title = r ; <CR> this . receiver = I 2 ; <CR> this . content = k 4 ; <CR> this . sender = D 3 ; <CR> this . date = N 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class non extends Letter { <CR> non ( String U 4 , String P 1 , String M 4 , String c , String W 9 ) { <CR> super ( U 4 , P 1 , M 4 , c , W 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] z 4 ) { <CR> Scanner p 9 = new Scanner ( System . in ) ; <CR> boolean Y 6 = <STRING> ; <CR> while ( Y 6 ) { <CR> System . out . print ( <STRING> ) ; <CR> String r 6 = p 9 . nextLine ( ) ; <CR> if ( r 6 . equals ( <STRING> ) ) { <CR> Y 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String W 3 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 5 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g 8 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g 9 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String T 9 = p 9 . nextLine ( ) ; <CR> Letter B 5 ; <CR> if ( r 6 . equals ( <STRING> ) ) { <CR> B 5 = new ChineseLetter ( W 3 , X 5 , g 8 , g 9 , T 9 ) ; <CR> Envelop r 4 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> B 5 . display ( ) ; <CR> } <CR> else if ( r 6 . equals ( <STRING> ) ) { <CR> B 5 = new EnglishLetter ( W 3 , X 5 , g 8 , g 9 , T 9 ) ; <CR> Envelop r 4 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> B 5 . display 2 ( ) ; <CR> } <CR> else { <CR> B 5 = new non ( W 3 , X 5 , g 8 , g 9 , T 9 ) ; <CR> Envelop r 4 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>