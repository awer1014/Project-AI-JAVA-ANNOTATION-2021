<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String y 7 , String h 1 , String T 5 , String w 6 , String O ) { <CR> super ( y 7 , h 1 , T 5 , w 6 , O ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String R 6 , String J , String u 8 , String q 7 , String V 8 ) { <CR> super ( R 6 , J , u 8 , q 7 , V 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop extends Letter { <CR> { <CR> return receiverAddr ; <CR> } <CR> String getsenderAddr ( ) { <CR> return senderAddr ; <CR> } <CR> String getreceiverAddr ( ) ; <CR> String receiverAddr ; <CR> String getletter ( ) { <CR> return letter ; <CR> } <CR> String senderAddr ; <CR> Envelop ( String Y 2 , String b 6 , Letter u 1 ) { <CR> this . senderAddr = Y 2 ; <CR> this . receiverAddr = b 6 ; <CR> this . letter = u 1 ; <CR> } <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> protected String receiver ; <CR> Letter ( String V 4 , String r , String l 5 , String R 2 , String Y 5 ) { <CR> this . title = V 4 ; <CR> this . receiver = r ; <CR> this . content = l 5 ; <CR> this . sender = R 2 ; <CR> this . date = Y 5 ; <CR> } <CR> protected String title ; <CR> public void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String sender ; <CR> protected String content ; <CR> protected String date ; <CR> public void display 2 ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . print ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class non extends Letter { <CR> non ( String b 0 , String Q 7 , String O 0 , String e 5 , String Y 6 ) { <CR> super ( b 0 , Q 7 , O 0 , e 5 , Y 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] D 5 ) { <CR> Scanner c 5 = new Scanner ( System . in ) ; <CR> boolean P 9 = <STRING> ; <CR> while ( P 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String c 3 = c 5 . nextLine ( ) ; <CR> if ( c 3 . equals ( <STRING> ) ) { <CR> P 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String H 5 = c 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String O 4 = c 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v 2 = c 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 6 = c 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String y 3 = c 5 . nextLine ( ) ; <CR> Letter c 7 ; <CR> if ( c 3 . equals ( <STRING> ) ) { <CR> c 7 = new ChineseLetter ( H 5 , O 4 , v 2 , c 6 , y 3 ) ; <CR> Envelop P 4 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> c 7 . display ( ) ; <CR> } <CR> else if ( c 3 . equals ( <STRING> ) ) { <CR> c 7 = new EnglishLetter ( H 5 , O 4 , v 2 , c 6 , y 3 ) ; <CR> Envelop P 4 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> c 7 . display 2 ( ) ; <CR> } <CR> else { <CR> c 7 = new non ( H 5 , O 4 , v 2 , c 6 , y 3 ) ; <CR> Envelop P 4 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>