<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String L 2 , String F 2 , String Y 6 , String N 2 , String m ) { <CR> super ( L 2 , F 2 , Y 6 , N 2 , m ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String p 1 , String P 9 , String A , String U 5 , String t 7 ) { <CR> super ( p 1 , P 9 , A , U 5 , t 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop extends Letter { <CR> String getsenderAddr ( ) { <CR> return senderAddr ; <CR> } <CR> String senderAddr ; <CR> Letter letter ; <CR> String receiverAddr ; <CR> { <CR> return receiverAddr ; <CR> } <CR> String getreceiverAddr ( ) ; <CR> Envelop ( String Y 1 , String o , Letter n ) { <CR> this . senderAddr = Y 1 ; <CR> this . receiverAddr = o ; <CR> this . letter = n ; <CR> } <CR> String getletter ( ) { <CR> return letter ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> public void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String sender ; <CR> protected String date ; <CR> public void display 2 ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . print ( date ) ; <CR> } <CR> protected String receiver ; <CR> Letter ( String x 0 , String p 5 , String s 8 , String a 6 , String A 9 ) { <CR> this . title = x 0 ; <CR> this . receiver = p 5 ; <CR> this . content = s 8 ; <CR> this . sender = a 6 ; <CR> this . date = A 9 ; <CR> } <CR> protected String content ; <CR> protected String title ; <CR> } <CR> <EOC> <BOC> public class non extends Letter { <CR> non ( String C 0 , String c 1 , String D 4 , String N 4 , String l 8 ) { <CR> super ( C 0 , c 1 , D 4 , N 4 , l 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] K 3 ) { <CR> Scanner S 4 = new Scanner ( System . in ) ; <CR> boolean X 9 = <STRING> ; <CR> while ( X 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String w = S 4 . nextLine ( ) ; <CR> if ( w . equals ( <STRING> ) ) { <CR> X 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String s 9 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String G 4 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String S 7 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String O 6 = S 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String F 8 = S 4 . nextLine ( ) ; <CR> Letter e 5 ; <CR> if ( w . equals ( <STRING> ) ) { <CR> e 5 = new ChineseLetter ( s 9 , G 4 , S 7 , O 6 , F 8 ) ; <CR> Envelop J 8 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> e 5 . display ( ) ; <CR> } <CR> else if ( w . equals ( <STRING> ) ) { <CR> e 5 = new EnglishLetter ( s 9 , G 4 , S 7 , O 6 , F 8 ) ; <CR> Envelop J 8 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> e 5 . display 2 ( ) ; <CR> } <CR> else { <CR> e 5 = new non ( s 9 , G 4 , S 7 , O 6 , F 8 ) ; <CR> Envelop J 8 = new Envelop ( senderAddr , receiverAddr , letter ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> <EOC>