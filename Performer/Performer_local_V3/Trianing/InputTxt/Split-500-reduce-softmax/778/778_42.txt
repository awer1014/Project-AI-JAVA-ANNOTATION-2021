<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> protected String type , num , name ; <CR> Evaluation ( String n 7 , String x 2 , String E 7 , double Z 8 , double d 7 ) { <CR> type = n 7 ; <CR> num = x 2 ; <CR> name = E 7 ; <CR> grade = Z 8 ; <CR> pgrade = d 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> public Exam ( String e 9 , String D 0 , String A 1 , double C 1 , double I 8 ) { <CR> super ( e 9 , D 0 , A 1 , C 1 , I 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String odate , des ; <CR> public HomeWork ( String e 3 , String h , String L 8 , double p 4 , double P 9 ) { <CR> super ( e 3 , h , L 8 , p 4 , P 9 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> public Report ( String Q 1 , String u , String x 1 , double Y 3 , double V 8 ) { <CR> super ( Q 1 , u , x 1 , Y 3 , V 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] o 7 ) { <CR> Scanner Z 1 = new Scanner ( System . in ) ; <CR> String V 4 , G 7 , z ; <CR> double D 4 , e 2 ; <CR> System . out . print ( <STRING> ) ; <CR> V 4 = Z 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 7 = Z 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> z = Z 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 4 = Z 1 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> e 2 = Z 1 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String I 9 , R 6 , Y 4 , l 8 , C 4 , D 6 ; <CR> if ( V 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> I 9 = Z 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 6 = Z 1 . nextLine ( ) ; <CR> } <CR> else if ( V 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Y 4 = Z 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 8 = Z 1 . nextLine ( ) ; <CR> } <CR> else if ( V 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> C 4 = Z 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 6 = Z 1 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation E 8 = <STRING> ; <CR> if ( V 4 . equals ( <STRING> ) ) <CR> E 8 = new Exam ( V 4 , G 7 , z , D 4 , e 2 ) ; <CR> else if ( V 4 . equals ( <STRING> ) ) <CR> E 8 = new HomeWork ( V 4 , G 7 , z , D 4 , e 2 ) ; <CR> else if ( V 4 . equals ( <STRING> ) ) <CR> E 8 = new Report ( V 4 , G 7 , z , D 4 , e 2 ) ; <CR> E 8 . print ( ) ; <CR> } <CR> } <CR> <EOC>