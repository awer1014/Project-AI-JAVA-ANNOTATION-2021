<BOC> import java . util . * ; <CR> public class Evaluation { <CR> Evaluation ( String t 7 , String o 8 , String V 7 , double Y 5 , double w 8 ) { <CR> type = t 7 ; <CR> num = o 8 ; <CR> name = V 7 ; <CR> grade = Y 5 ; <CR> pgrade = w 8 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected String type , num , name ; <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String tdate , trange ; <CR> public Exam ( String E 5 , String A 8 , String E 4 , double w 7 , double R ) { <CR> super ( E 5 , A 8 , E 4 , w 7 , R ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String w 3 , String p 9 , String B 9 , double Q 2 , double f 4 ) { <CR> super ( w 3 , p 9 , B 9 , Q 2 , f 4 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String l , String a 8 , String h 5 , double P , double O ) { <CR> super ( l , a 8 , h 5 , P , O ) ; <CR> } <CR> String rep , bok ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] P 2 ) { <CR> Scanner W 1 = new Scanner ( System . in ) ; <CR> String b 6 , X 0 , X 7 ; <CR> double I , f 2 ; <CR> System . out . print ( <STRING> ) ; <CR> b 6 = W 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 0 = W 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = W 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I = W 1 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 2 = W 1 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String I 8 , Q 1 , s 8 , J 7 , H 9 , Y 8 ; <CR> if ( b 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> I 8 = W 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 1 = W 1 . nextLine ( ) ; <CR> } <CR> else if ( b 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 8 = W 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 7 = W 1 . nextLine ( ) ; <CR> } <CR> else if ( b 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 9 = W 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 8 = W 1 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation f = <STRING> ; <CR> if ( b 6 . equals ( <STRING> ) ) <CR> f = new Exam ( b 6 , X 0 , X 7 , I , f 2 ) ; <CR> else if ( b 6 . equals ( <STRING> ) ) <CR> f = new HomeWork ( b 6 , X 0 , X 7 , I , f 2 ) ; <CR> else if ( b 6 . equals ( <STRING> ) ) <CR> f = new Report ( b 6 , X 0 , X 7 , I , f 2 ) ; <CR> f . print ( ) ; <CR> } <CR> } <CR> <EOC>