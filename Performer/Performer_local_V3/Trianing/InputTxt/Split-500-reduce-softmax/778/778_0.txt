<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected double grade , pgrade ; <CR> Evaluation ( String w 9 , String T , String V 6 , double r 0 , double k ) { <CR> type = w 9 ; <CR> num = T ; <CR> name = V 6 ; <CR> grade = r 0 ; <CR> pgrade = k ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected String type , num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String P , String H 1 , String t 5 , double q 4 , double g ) { <CR> super ( P , H 1 , t 5 , q 4 , g ) ; <CR> } <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> public HomeWork ( String P 2 , String d 4 , String A , double W 6 , double e 7 ) { <CR> super ( P 2 , d 4 , A , W 6 , e 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Y 9 , String O 2 , String B 9 , double m 0 , double t 4 ) { <CR> super ( Y 9 , O 2 , B 9 , m 0 , t 4 ) ; <CR> } <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] X 6 ) { <CR> Scanner M 1 = new Scanner ( System . in ) ; <CR> String g 0 , u 7 , v 4 ; <CR> double i 5 , s 9 ; <CR> System . out . print ( <STRING> ) ; <CR> g 0 = M 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 7 = M 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> v 4 = M 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> i 5 = M 1 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 9 = M 1 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String e 3 , b 9 , X 0 , b 5 , B 1 , v 2 ; <CR> if ( g 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 3 = M 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b 9 = M 1 . nextLine ( ) ; <CR> } <CR> else if ( g 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 0 = M 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b 5 = M 1 . nextLine ( ) ; <CR> } <CR> else if ( g 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> B 1 = M 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 2 = M 1 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation M 8 = <STRING> ; <CR> if ( g 0 . equals ( <STRING> ) ) <CR> M 8 = new Exam ( g 0 , u 7 , v 4 , i 5 , s 9 ) ; <CR> else if ( g 0 . equals ( <STRING> ) ) <CR> M 8 = new HomeWork ( g 0 , u 7 , v 4 , i 5 , s 9 ) ; <CR> else if ( g 0 . equals ( <STRING> ) ) <CR> M 8 = new Report ( g 0 , u 7 , v 4 , i 5 , s 9 ) ; <CR> M 8 . print ( ) ; <CR> } <CR> } <CR> <EOC>