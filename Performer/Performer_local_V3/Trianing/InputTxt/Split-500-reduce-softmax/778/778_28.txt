<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> protected String type , num , name ; <CR> Evaluation ( String F 3 , String S 3 , String K 2 , double O 4 , double b 8 ) { <CR> type = F 3 ; <CR> num = S 3 ; <CR> name = K 2 ; <CR> grade = O 4 ; <CR> pgrade = b 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> public Exam ( String U 9 , String g 0 , String O 0 , double p 0 , double w 4 ) { <CR> super ( U 9 , g 0 , O 0 , p 0 , w 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String e 7 , String n 9 , String P 9 , double Y 1 , double H 8 ) { <CR> super ( e 7 , n 9 , P 9 , Y 1 , H 8 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String b 6 , String o 7 , String l 0 , double h 4 , double X 0 ) { <CR> super ( b 6 , o 7 , l 0 , h 4 , X 0 ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] W ) { <CR> Scanner x 7 = new Scanner ( System . in ) ; <CR> String I 0 , q , V ; <CR> double w 3 , d 1 ; <CR> System . out . print ( <STRING> ) ; <CR> I 0 = x 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q = x 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V = x 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 3 = x 7 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 1 = x 7 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String g 2 , l 7 , i 3 , F 7 , q 1 , f ; <CR> if ( I 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> g 2 = x 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 7 = x 7 . nextLine ( ) ; <CR> } <CR> else if ( I 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> i 3 = x 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 7 = x 7 . nextLine ( ) ; <CR> } <CR> else if ( I 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> q 1 = x 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f = x 7 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation F 8 = <STRING> ; <CR> if ( I 0 . equals ( <STRING> ) ) <CR> F 8 = new Exam ( I 0 , q , V , w 3 , d 1 ) ; <CR> else if ( I 0 . equals ( <STRING> ) ) <CR> F 8 = new HomeWork ( I 0 , q , V , w 3 , d 1 ) ; <CR> else if ( I 0 . equals ( <STRING> ) ) <CR> F 8 = new Report ( I 0 , q , V , w 3 , d 1 ) ; <CR> F 8 . print ( ) ; <CR> } <CR> } <CR> <EOC>