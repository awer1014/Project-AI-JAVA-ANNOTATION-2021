<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> Evaluation ( String g 6 , String F 2 , String b 5 , double h 4 , double v 5 ) { <CR> type = g 6 ; <CR> num = F 2 ; <CR> name = b 5 ; <CR> grade = h 4 ; <CR> pgrade = v 5 ; <CR> } <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String T 4 , String A 2 , String F 2 , double l 5 , double p 2 ) { <CR> super ( T 4 , A 2 , F 2 , l 5 , p 2 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String odate , des ; <CR> public HomeWork ( String b 3 , String z 2 , String E 0 , double s 2 , double f ) { <CR> super ( b 3 , z 2 , E 0 , s 2 , f ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Q 0 , String f 8 , String P 6 , double z 7 , double z ) { <CR> super ( Q 0 , f 8 , P 6 , z 7 , z ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] l ) { <CR> Scanner U 0 = new Scanner ( System . in ) ; <CR> String E 7 , U 1 , D 7 ; <CR> double w 4 , d 3 ; <CR> System . out . print ( <STRING> ) ; <CR> E 7 = U 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 1 = U 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 7 = U 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 4 = U 0 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 3 = U 0 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String x , g 5 , O 0 , n 4 , v 7 , d 1 ; <CR> if ( E 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = U 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> g 5 = U 0 . nextLine ( ) ; <CR> } <CR> else if ( E 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> O 0 = U 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 4 = U 0 . nextLine ( ) ; <CR> } <CR> else if ( E 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 7 = U 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 1 = U 0 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation d = <STRING> ; <CR> if ( E 7 . equals ( <STRING> ) ) <CR> d = new Exam ( E 7 , U 1 , D 7 , w 4 , d 3 ) ; <CR> else if ( E 7 . equals ( <STRING> ) ) <CR> d = new HomeWork ( E 7 , U 1 , D 7 , w 4 , d 3 ) ; <CR> else if ( E 7 . equals ( <STRING> ) ) <CR> d = new Report ( E 7 , U 1 , D 7 , w 4 , d 3 ) ; <CR> d . print ( ) ; <CR> } <CR> } <CR> <EOC>