<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected double grade , pgrade ; <CR> protected String type , num , name ; <CR> Evaluation ( String e 4 , String r 7 , String Q 5 , double h 7 , double F 2 ) { <CR> type = e 4 ; <CR> num = r 7 ; <CR> name = Q 5 ; <CR> grade = h 7 ; <CR> pgrade = F 2 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String V 3 , String S 0 , String T 8 , double V , double A 8 ) { <CR> super ( V 3 , S 0 , T 8 , V , A 8 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String q 2 , String v 3 , String v 9 , double U 6 , double u 2 ) { <CR> super ( q 2 , v 3 , v 9 , U 6 , u 2 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String a 2 , String h 1 , String J 6 , double Z 4 , double F 3 ) { <CR> super ( a 2 , h 1 , J 6 , Z 4 , F 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] r 1 ) { <CR> Scanner U 4 = new Scanner ( System . in ) ; <CR> String n 1 , R , x 8 ; <CR> double J 3 , w 4 ; <CR> System . out . print ( <STRING> ) ; <CR> n 1 = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 8 = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 3 = U 4 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 4 = U 4 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String O 5 , n 0 , P 5 , P 4 , J 2 , B 4 ; <CR> if ( n 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> O 5 = U 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 0 = U 4 . nextLine ( ) ; <CR> } <CR> else if ( n 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> P 5 = U 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 4 = U 4 . nextLine ( ) ; <CR> } <CR> else if ( n 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> J 2 = U 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 4 = U 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation j 9 = <STRING> ; <CR> if ( n 1 . equals ( <STRING> ) ) <CR> j 9 = new Exam ( n 1 , R , x 8 , J 3 , w 4 ) ; <CR> else if ( n 1 . equals ( <STRING> ) ) <CR> j 9 = new HomeWork ( n 1 , R , x 8 , J 3 , w 4 ) ; <CR> else if ( n 1 . equals ( <STRING> ) ) <CR> j 9 = new Report ( n 1 , R , x 8 , J 3 , w 4 ) ; <CR> j 9 . print ( ) ; <CR> } <CR> } <CR> <EOC>