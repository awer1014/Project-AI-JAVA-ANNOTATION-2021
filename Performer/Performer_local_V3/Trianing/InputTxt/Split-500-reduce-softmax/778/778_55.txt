<BOC> import java . util . * ; <CR> public class Evaluation { <CR> Evaluation ( String D 4 , String U 3 , String p 6 , double b 9 , double w 7 ) { <CR> type = D 4 ; <CR> num = U 3 ; <CR> name = p 6 ; <CR> grade = b 9 ; <CR> pgrade = w 7 ; <CR> } <CR> protected double grade , pgrade ; <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String H 1 , String U 7 , String P 0 , double y 8 , double P 8 ) { <CR> super ( H 1 , U 7 , P 0 , y 8 , P 8 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String k 9 , String o 1 , String K 0 , double f 0 , double A 7 ) { <CR> super ( k 9 , o 1 , K 0 , f 0 , A 7 ) ; <CR> } <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Z 8 , String S 9 , String u 1 , double N 3 , double k 0 ) { <CR> super ( Z 8 , S 9 , u 1 , N 3 , k 0 ) ; <CR> } <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] U 1 ) { <CR> Scanner u 1 = new Scanner ( System . in ) ; <CR> String U 6 , o 1 , p 1 ; <CR> double r 6 , g 7 ; <CR> System . out . print ( <STRING> ) ; <CR> U 6 = u 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 1 = u 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 1 = u 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> r 6 = u 1 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 7 = u 1 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String D 3 , o , H 3 , J 9 , e 6 , p 3 ; <CR> if ( U 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 3 = u 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o = u 1 . nextLine ( ) ; <CR> } <CR> else if ( U 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 3 = u 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 9 = u 1 . nextLine ( ) ; <CR> } <CR> else if ( U 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 6 = u 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 3 = u 1 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation B 7 = <STRING> ; <CR> if ( U 6 . equals ( <STRING> ) ) <CR> B 7 = new Exam ( U 6 , o 1 , p 1 , r 6 , g 7 ) ; <CR> else if ( U 6 . equals ( <STRING> ) ) <CR> B 7 = new HomeWork ( U 6 , o 1 , p 1 , r 6 , g 7 ) ; <CR> else if ( U 6 . equals ( <STRING> ) ) <CR> B 7 = new Report ( U 6 , o 1 , p 1 , r 6 , g 7 ) ; <CR> B 7 . print ( ) ; <CR> } <CR> } <CR> <EOC>