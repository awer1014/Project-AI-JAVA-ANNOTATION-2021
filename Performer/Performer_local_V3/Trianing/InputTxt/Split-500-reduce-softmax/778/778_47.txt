<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> Evaluation ( String d 5 , String b 3 , String N 2 , double U 7 , double Z 3 ) { <CR> type = d 5 ; <CR> num = b 3 ; <CR> name = N 2 ; <CR> grade = U 7 ; <CR> pgrade = Z 3 ; <CR> } <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> public Exam ( String k 5 , String E 0 , String t 1 , double T 1 , double w 5 ) { <CR> super ( k 5 , E 0 , t 1 , T 1 , w 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> public HomeWork ( String p 0 , String a 1 , String z 1 , double q 7 , double A 4 ) { <CR> super ( p 0 , a 1 , z 1 , q 7 , A 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String P 2 , String e 2 , String J 3 , double f 7 , double B 0 ) { <CR> super ( P 2 , e 2 , J 3 , f 7 , B 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] Y 0 ) { <CR> Scanner V 9 = new Scanner ( System . in ) ; <CR> String l 2 , g 2 , c ; <CR> double Q 2 , J ; <CR> System . out . print ( <STRING> ) ; <CR> l 2 = V 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 2 = V 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c = V 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 2 = V 9 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J = V 9 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String p 1 , p 9 , N 9 , E 0 , w 4 , B 6 ; <CR> if ( l 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> p 1 = V 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 9 = V 9 . nextLine ( ) ; <CR> } <CR> else if ( l 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> N 9 = V 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 0 = V 9 . nextLine ( ) ; <CR> } <CR> else if ( l 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> w 4 = V 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 6 = V 9 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation M = <STRING> ; <CR> if ( l 2 . equals ( <STRING> ) ) <CR> M = new Exam ( l 2 , g 2 , c , Q 2 , J ) ; <CR> else if ( l 2 . equals ( <STRING> ) ) <CR> M = new HomeWork ( l 2 , g 2 , c , Q 2 , J ) ; <CR> else if ( l 2 . equals ( <STRING> ) ) <CR> M = new Report ( l 2 , g 2 , c , Q 2 , J ) ; <CR> M . print ( ) ; <CR> } <CR> } <CR> <EOC>