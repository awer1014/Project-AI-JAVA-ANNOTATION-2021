<BOC> import java . util . * ; <CR> public class Evaluation { <CR> Evaluation ( String s 9 , String E 7 , String K 5 , double M 9 , double e ) { <CR> type = s 9 ; <CR> num = E 7 ; <CR> name = K 5 ; <CR> grade = M 9 ; <CR> pgrade = e ; <CR> } <CR> protected String type , num , name ; <CR> protected double grade , pgrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String tdate , trange ; <CR> public Exam ( String S 0 , String Y 3 , String t 1 , double r 9 , double X 0 ) { <CR> super ( S 0 , Y 3 , t 1 , r 9 , X 0 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> public HomeWork ( String w , String i 7 , String h 1 , double s 9 , double W ) { <CR> super ( w , i 7 , h 1 , s 9 , W ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String h 0 , String p 5 , String O , double K 2 , double c 7 ) { <CR> super ( h 0 , p 5 , O , K 2 , c 7 ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] g 4 ) { <CR> Scanner m = new Scanner ( System . in ) ; <CR> String u 4 , J 9 , z 4 ; <CR> double J 7 , U 2 ; <CR> System . out . print ( <STRING> ) ; <CR> u 4 = m . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 9 = m . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> z 4 = m . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 7 = m . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U 2 = m . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String X 7 , n 6 , g 1 , f , e 2 , V 6 ; <CR> if ( u 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 7 = m . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 6 = m . nextLine ( ) ; <CR> } <CR> else if ( u 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> g 1 = m . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f = m . nextLine ( ) ; <CR> } <CR> else if ( u 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 2 = m . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 6 = m . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation U 1 = <STRING> ; <CR> if ( u 4 . equals ( <STRING> ) ) <CR> U 1 = new Exam ( u 4 , J 9 , z 4 , J 7 , U 2 ) ; <CR> else if ( u 4 . equals ( <STRING> ) ) <CR> U 1 = new HomeWork ( u 4 , J 9 , z 4 , J 7 , U 2 ) ; <CR> else if ( u 4 . equals ( <STRING> ) ) <CR> U 1 = new Report ( u 4 , J 9 , z 4 , J 7 , U 2 ) ; <CR> U 1 . print ( ) ; <CR> } <CR> } <CR> <EOC>