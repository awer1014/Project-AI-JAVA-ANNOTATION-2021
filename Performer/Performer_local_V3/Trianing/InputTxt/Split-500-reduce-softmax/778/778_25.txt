<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> Evaluation ( String q 1 , String a 8 , String U , double v 9 , double l 7 ) { <CR> type = q 1 ; <CR> num = a 8 ; <CR> name = U ; <CR> grade = v 9 ; <CR> pgrade = l 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String tdate , trange ; <CR> public Exam ( String P 9 , String R 0 , String K 3 , double l 2 , double w 7 ) { <CR> super ( P 9 , R 0 , K 3 , l 2 , w 7 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> public HomeWork ( String Z 0 , String e 8 , String Y 6 , double x 6 , double n 0 ) { <CR> super ( Z 0 , e 8 , Y 6 , x 6 , n 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String M 4 , String Z , String r , double c 9 , double w 9 ) { <CR> super ( M 4 , Z , r , c 9 , w 9 ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] T 0 ) { <CR> Scanner a 9 = new Scanner ( System . in ) ; <CR> String d 9 , a 0 , P 8 ; <CR> double D 6 , k 3 ; <CR> System . out . print ( <STRING> ) ; <CR> d 9 = a 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 0 = a 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> P 8 = a 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 6 = a 9 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 3 = a 9 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String H 5 , V 5 , v 7 , R 7 , D 2 , b 9 ; <CR> if ( d 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 5 = a 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 5 = a 9 . nextLine ( ) ; <CR> } <CR> else if ( d 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 7 = a 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 7 = a 9 . nextLine ( ) ; <CR> } <CR> else if ( d 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 2 = a 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b 9 = a 9 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation u = <STRING> ; <CR> if ( d 9 . equals ( <STRING> ) ) <CR> u = new Exam ( d 9 , a 0 , P 8 , D 6 , k 3 ) ; <CR> else if ( d 9 . equals ( <STRING> ) ) <CR> u = new HomeWork ( d 9 , a 0 , P 8 , D 6 , k 3 ) ; <CR> else if ( d 9 . equals ( <STRING> ) ) <CR> u = new Report ( d 9 , a 0 , P 8 , D 6 , k 3 ) ; <CR> u . print ( ) ; <CR> } <CR> } <CR> <EOC>