<BOC> abstract public class Evaluation { <CR> String num , name ; <CR> abstract public void play ( ) ; <CR> public Evaluation ( String r 9 , String i , double b 8 , double b 7 ) { <CR> this . num = r 9 ; <CR> this . name = i ; <CR> this . score = b 8 ; <CR> this . compete = b 7 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + compete ) ; <CR> } <CR> double score , compete ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void play ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date , range ; <CR> public Exam ( String x 2 , String U 7 , double G 9 , double O 7 , String T , String H 9 ) { <CR> super ( x 2 , U 7 , G 9 , O 7 ) ; <CR> this . date = T ; <CR> this . range = H 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String off , scribe ; <CR> public HomeWork ( String x 2 , String S 1 , double A 6 , double K 6 , String K 7 , String w 5 ) { <CR> super ( x 2 , S 1 , A 6 , K 6 ) ; <CR> this . off = K 7 ; <CR> this . scribe = w 5 ; <CR> } <CR> public void play ( ) { <CR> System . out . println ( <STRING> + off ) ; <CR> System . out . println ( <STRING> + scribe ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String a 7 , String Y 9 , double q 2 , double I 8 , String n , String s 9 ) { <CR> super ( a 7 , Y 9 , q 2 , I 8 ) ; <CR> this . content = n ; <CR> this . references = s 9 ; <CR> } <CR> public void play ( ) { <CR> System . out . println ( <STRING> + content ) ; <CR> System . out . println ( <STRING> + references ) ; <CR> } <CR> String content , references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] i 5 ) { <CR> Scanner s 9 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 2 = s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String R 7 = s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z = s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double T 2 = s 9 . nextDouble ( ) ; <CR> s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double F 5 = s 9 . nextDouble ( ) ; <CR> s 9 . nextLine ( ) ; <CR> Evaluation t 6 = <STRING> ; <CR> if ( k 2 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String U 4 = s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String N 4 = s 9 . nextLine ( ) ; <CR> t 6 = new Exam ( R 7 , z , T 2 , F 5 , U 4 , N 4 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 6 . display ( ) ; <CR> t 6 . play ( ) ; <CR> } <CR> if ( k 2 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String b 3 = s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String F 9 = s 9 . nextLine ( ) ; <CR> t 6 = new HomeWork ( R 7 , z , T 2 , F 5 , b 3 , F 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 6 . display ( ) ; <CR> t 6 . play ( ) ; <CR> } <CR> if ( k 2 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String V 1 = s 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 3 = s 9 . nextLine ( ) ; <CR> t 6 = new Report ( R 7 , z , T 2 , F 5 , V 1 , H 3 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 6 . display ( ) ; <CR> t 6 . play ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>