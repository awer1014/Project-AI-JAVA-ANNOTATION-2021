<BOC> abstract public class Evaluation { <CR> double score , compete ; <CR> public Evaluation ( String Y 6 , String B 8 , double x 3 , double e 7 ) { <CR> this . num = Y 6 ; <CR> this . name = B 8 ; <CR> this . score = x 3 ; <CR> this . compete = e 7 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + compete ) ; <CR> } <CR> String num , name ; <CR> abstract public void play ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date , range ; <CR> public void play ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Exam ( String r , String c 9 , double S 0 , double i 0 , String F 9 , String e 5 ) { <CR> super ( r , c 9 , S 0 , i 0 ) ; <CR> this . date = F 9 ; <CR> this . range = e 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String off , scribe ; <CR> public void play ( ) { <CR> System . out . println ( <STRING> + off ) ; <CR> System . out . println ( <STRING> + scribe ) ; <CR> } <CR> public HomeWork ( String h 5 , String R 6 , double i 0 , double L 5 , String y 6 , String f 4 ) { <CR> super ( h 5 , R 6 , i 0 , L 5 ) ; <CR> this . off = y 6 ; <CR> this . scribe = f 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String J 4 , String g 6 , double Q 0 , double S 0 , String s 7 , String p 5 ) { <CR> super ( J 4 , g 6 , Q 0 , S 0 ) ; <CR> this . content = s 7 ; <CR> this . references = p 5 ; <CR> } <CR> String content , references ; <CR> public void play ( ) { <CR> System . out . println ( <STRING> + content ) ; <CR> System . out . println ( <STRING> + references ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] B 7 ) { <CR> Scanner s 1 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> String b 4 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 9 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 2 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double D 7 = s 1 . nextDouble ( ) ; <CR> s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double q 9 = s 1 . nextDouble ( ) ; <CR> s 1 . nextLine ( ) ; <CR> Evaluation q 6 = <STRING> ; <CR> if ( b 4 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String l 1 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X = s 1 . nextLine ( ) ; <CR> q 6 = new Exam ( w 9 , H 2 , D 7 , q 9 , l 1 , X ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 6 . display ( ) ; <CR> q 6 . play ( ) ; <CR> } <CR> if ( b 4 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String Z 9 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String M 1 = s 1 . nextLine ( ) ; <CR> q 6 = new HomeWork ( w 9 , H 2 , D 7 , q 9 , Z 9 , M 1 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 6 . display ( ) ; <CR> q 6 . play ( ) ; <CR> } <CR> if ( b 4 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String c 8 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String y 9 = s 1 . nextLine ( ) ; <CR> q 6 = new Report ( w 9 , H 2 , D 7 , q 9 , c 8 , y 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 6 . display ( ) ; <CR> q 6 . play ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>