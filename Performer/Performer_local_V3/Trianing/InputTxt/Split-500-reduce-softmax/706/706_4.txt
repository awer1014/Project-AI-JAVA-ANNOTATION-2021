<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String tel ; <CR> String id ; <CR> public static void main ( String [ ] C 5 ) { <CR> String J 8 ; <CR> String w 8 ; <CR> Scanner g 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 8 = g 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> w 8 = g 5 . nextLine ( ) ; <CR> Keeper U 3 = new Keeper ( J 8 , w 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> void Keeper ( String J 8 , String w 8 ) { <CR> this . id = J 8 ; <CR> this . tel = w 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String type ; <CR> void Pet ( String X 5 , String W 0 , String c 5 , Keeper J 2 ) { <CR> count ++ ; <CR> this . pid = X 5 ; <CR> this . name = W 0 ; <CR> this . type = c 5 ; <CR> this . keeper = J 2 ; <CR> } <CR> String pid ; <CR> public static void main ( String [ ] q 7 ) { <CR> String X 5 ; <CR> String W 0 ; <CR> String c 5 ; <CR> String s 2 ; <CR> String Q 2 ; <CR> Scanner X 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 2 = X 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 2 = X 7 . nextLine ( ) ; <CR> Keeper B = new Keeper ( s 2 , Q 2 ) ; <CR> Scanner X 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> X 5 = X 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> c 5 = X 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> W 0 = X 7 . nextLine ( ) ; <CR> pet a 0 = new pet ( X 5 , W 0 , c 5 , B ) ; <CR> String A 7 = a 0 . Speak ( ) ; <CR> System . out . println ( <STRING> + A 7 ) ; <CR> } <CR> static int count ; <CR> String name ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> Keeper keeper ; <CR> } <CR> <EOC>