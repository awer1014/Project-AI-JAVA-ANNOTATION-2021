<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> void Keeper ( String f 1 , String z 3 ) { <CR> this . id = f 1 ; <CR> this . tel = z 3 ; <CR> } <CR> public static void main ( String [ ] o 7 ) { <CR> String f 1 ; <CR> String z 3 ; <CR> Scanner N 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 1 = N 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 3 = N 8 . nextLine ( ) ; <CR> Keeper m 7 = new Keeper ( f 1 , z 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> static int count ; <CR> void Pet ( String E , String g 2 , String f 7 , Keeper u 6 ) { <CR> count ++ ; <CR> this . pid = E ; <CR> this . name = g 2 ; <CR> this . type = f 7 ; <CR> this . keeper = u 6 ; <CR> } <CR> String name ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String pid ; <CR> Keeper keeper ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] U 5 ) { <CR> String E ; <CR> String g 2 ; <CR> String f 7 ; <CR> String i 5 ; <CR> String R 7 ; <CR> Scanner U 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 5 = U 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 7 = U 7 . nextLine ( ) ; <CR> Keeper I 3 = new Keeper ( i 5 , R 7 ) ; <CR> Scanner U 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> E = U 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 7 = U 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> g 2 = U 7 . nextLine ( ) ; <CR> pet g 7 = new pet ( E , g 2 , f 7 , I 3 ) ; <CR> String C = g 7 . Speak ( ) ; <CR> System . out . println ( <STRING> + C ) ; <CR> } <CR> String type ; <CR> } <CR> <EOC>