<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> public static void main ( String [ ] e 2 ) { <CR> String o 8 ; <CR> String B 8 ; <CR> Scanner p 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 8 = p 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 8 = p 0 . nextLine ( ) ; <CR> Keeper B 2 = new Keeper ( o 8 , B 8 ) ; <CR> } <CR> void Keeper ( String o 8 , String B 8 ) { <CR> this . id = o 8 ; <CR> this . tel = B 8 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> String id ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> static int count ; <CR> void Pet ( String V 7 , String D 8 , String y , Keeper L 1 ) { <CR> count ++ ; <CR> this . pid = V 7 ; <CR> this . name = D 8 ; <CR> this . type = y ; <CR> this . keeper = L 1 ; <CR> } <CR> public static void main ( String [ ] j 4 ) { <CR> String V 7 ; <CR> String D 8 ; <CR> String y ; <CR> String j 7 ; <CR> String v 3 ; <CR> Scanner n 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> j 7 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 3 = n 1 . nextLine ( ) ; <CR> Keeper h 8 = new Keeper ( j 7 , v 3 ) ; <CR> Scanner n 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 7 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> y = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 8 = n 1 . nextLine ( ) ; <CR> pet i 1 = new pet ( V 7 , D 8 , y , h 8 ) ; <CR> String x 4 = i 1 . Speak ( ) ; <CR> System . out . println ( <STRING> + x 4 ) ; <CR> } <CR> String name ; <CR> String pid ; <CR> String type ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> Keeper keeper ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> } <CR> <EOC>