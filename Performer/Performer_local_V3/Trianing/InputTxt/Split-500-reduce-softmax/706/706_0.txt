<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> public static void main ( String [ ] d 2 ) { <CR> String D 8 ; <CR> String N 0 ; <CR> Scanner Z 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 8 = Z 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 0 = Z 1 . nextLine ( ) ; <CR> Keeper y 1 = new Keeper ( D 8 , N 0 ) ; <CR> } <CR> String tel ; <CR> void Keeper ( String D 8 , String N 0 ) { <CR> this . id = D 8 ; <CR> this . tel = N 0 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String pid ; <CR> void Pet ( String a , String e 0 , String n 7 , Keeper B 4 ) { <CR> count ++ ; <CR> this . pid = a ; <CR> this . name = e 0 ; <CR> this . type = n 7 ; <CR> this . keeper = B 4 ; <CR> } <CR> Keeper keeper ; <CR> static int count ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String type ; <CR> String name ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] T 2 ) { <CR> String a ; <CR> String e 0 ; <CR> String n 7 ; <CR> String H 8 ; <CR> String P 3 ; <CR> Scanner L = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 8 = L . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 3 = L . nextLine ( ) ; <CR> Keeper x = new Keeper ( H 8 , P 3 ) ; <CR> Scanner L = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> a = L . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 7 = L . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 0 = L . nextLine ( ) ; <CR> pet w 0 = new pet ( a , e 0 , n 7 , x ) ; <CR> String b 2 = w 0 . Speak ( ) ; <CR> System . out . println ( <STRING> + b 2 ) ; <CR> } <CR> } <CR> <EOC>