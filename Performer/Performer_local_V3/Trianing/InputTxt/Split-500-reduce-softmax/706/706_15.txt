<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> public static void main ( String [ ] Y 6 ) { <CR> String u 1 ; <CR> String r 5 ; <CR> Scanner F 3 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> u 1 = F 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> r 5 = F 3 . nextLine ( ) ; <CR> Keeper Q 3 = new Keeper ( u 1 , r 5 ) ; <CR> } <CR> String tel ; <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> void Keeper ( String u 1 , String r 5 ) { <CR> this . id = u 1 ; <CR> this . tel = r 5 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public static void main ( String [ ] a 6 ) { <CR> String S 7 ; <CR> String l 9 ; <CR> String p 2 ; <CR> String S 9 ; <CR> String H 4 ; <CR> Scanner C 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> S 9 = C 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 4 = C 4 . nextLine ( ) ; <CR> Keeper w = new Keeper ( S 9 , H 4 ) ; <CR> Scanner C 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> S 7 = C 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 2 = C 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 9 = C 4 . nextLine ( ) ; <CR> pet k 4 = new pet ( S 7 , l 9 , p 2 , w ) ; <CR> String o 4 = k 4 . Speak ( ) ; <CR> System . out . println ( <STRING> + o 4 ) ; <CR> } <CR> Keeper keeper ; <CR> static int count ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> void Pet ( String S 7 , String l 9 , String p 2 , Keeper l ) { <CR> count ++ ; <CR> this . pid = S 7 ; <CR> this . name = l 9 ; <CR> this . type = p 2 ; <CR> this . keeper = l ; <CR> } <CR> String pid ; <CR> String type ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String name ; <CR> } <CR> <EOC>