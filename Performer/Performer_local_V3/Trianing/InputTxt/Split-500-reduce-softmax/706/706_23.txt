<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String tel ; <CR> void Keeper ( String v 8 , String l 7 ) { <CR> this . id = v 8 ; <CR> this . tel = l 7 ; <CR> } <CR> String id ; <CR> public static void main ( String [ ] j 3 ) { <CR> String v 8 ; <CR> String l 7 ; <CR> Scanner j 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 8 = j 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 7 = j 7 . nextLine ( ) ; <CR> Keeper Q 5 = new Keeper ( v 8 , l 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> Keeper keeper ; <CR> String pid ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String type ; <CR> String name ; <CR> static int count ; <CR> void Pet ( String i , String K , String x 8 , Keeper F 1 ) { <CR> count ++ ; <CR> this . pid = i ; <CR> this . name = K ; <CR> this . type = x 8 ; <CR> this . keeper = F 1 ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> public static void main ( String [ ] Z 4 ) { <CR> String i ; <CR> String K ; <CR> String x 8 ; <CR> String G 4 ; <CR> String a 6 ; <CR> Scanner o 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 4 = o 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 6 = o 9 . nextLine ( ) ; <CR> Keeper P 5 = new Keeper ( G 4 , a 6 ) ; <CR> Scanner o 9 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> i = o 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 8 = o 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K = o 9 . nextLine ( ) ; <CR> pet i 1 = new pet ( i , K , x 8 , P 5 ) ; <CR> String s 0 = i 1 . Speak ( ) ; <CR> System . out . println ( <STRING> + s 0 ) ; <CR> } <CR> } <CR> <EOC>