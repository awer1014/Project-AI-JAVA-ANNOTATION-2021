<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void Keeper ( String G 9 , String d 4 ) { <CR> this . id = G 9 ; <CR> this . tel = d 4 ; <CR> } <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] Y 6 ) { <CR> String G 9 ; <CR> String d 4 ; <CR> Scanner B 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 9 = B 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 4 = B 1 . nextLine ( ) ; <CR> Keeper l 3 = new Keeper ( G 9 , d 4 ) ; <CR> } <CR> String id ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> static int count ; <CR> public static void main ( String [ ] R 9 ) { <CR> String c 7 ; <CR> String u 0 ; <CR> String p 1 ; <CR> String E 2 ; <CR> String A 2 ; <CR> Scanner b 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 2 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 2 = b 7 . nextLine ( ) ; <CR> Keeper k 6 = new Keeper ( E 2 , A 2 ) ; <CR> Scanner b 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> c 7 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 1 = b 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> u 0 = b 7 . nextLine ( ) ; <CR> pet B = new pet ( c 7 , u 0 , p 1 , k 6 ) ; <CR> String I 1 = B . Speak ( ) ; <CR> System . out . println ( <STRING> + I 1 ) ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> String pid ; <CR> String name ; <CR> Keeper keeper ; <CR> void Pet ( String c 7 , String u 0 , String p 1 , Keeper d 2 ) { <CR> count ++ ; <CR> this . pid = c 7 ; <CR> this . name = u 0 ; <CR> this . type = p 1 ; <CR> this . keeper = d 2 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String type ; <CR> } <CR> <EOC>