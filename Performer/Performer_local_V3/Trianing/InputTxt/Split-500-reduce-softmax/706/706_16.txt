<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String tel ; <CR> public static void main ( String [ ] m 4 ) { <CR> String U ; <CR> String v 1 ; <CR> Scanner z 3 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> U = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 1 = z 3 . nextLine ( ) ; <CR> Keeper d 2 = new Keeper ( U , v 1 ) ; <CR> } <CR> void Keeper ( String U , String v 1 ) { <CR> this . id = U ; <CR> this . tel = v 1 ; <CR> } <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String type ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> Keeper keeper ; <CR> String name ; <CR> String pid ; <CR> public static void main ( String [ ] N 1 ) { <CR> String e 9 ; <CR> String L 2 ; <CR> String V 4 ; <CR> String H 7 ; <CR> String o 2 ; <CR> Scanner r 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 7 = r 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 2 = r 0 . nextLine ( ) ; <CR> Keeper N = new Keeper ( H 7 , o 2 ) ; <CR> Scanner r 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 9 = r 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 4 = r 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> L 2 = r 0 . nextLine ( ) ; <CR> pet V 0 = new pet ( e 9 , L 2 , V 4 , N ) ; <CR> String Y 8 = V 0 . Speak ( ) ; <CR> System . out . println ( <STRING> + Y 8 ) ; <CR> } <CR> void Pet ( String e 9 , String L 2 , String V 4 , Keeper j 2 ) { <CR> count ++ ; <CR> this . pid = e 9 ; <CR> this . name = L 2 ; <CR> this . type = V 4 ; <CR> this . keeper = j 2 ; <CR> } <CR> static int count ; <CR> } <CR> <EOC>