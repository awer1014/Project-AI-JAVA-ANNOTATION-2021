<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> public static void main ( String [ ] t 5 ) { <CR> String B 2 ; <CR> String p 9 ; <CR> Scanner v = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 2 = v . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 9 = v . nextLine ( ) ; <CR> Keeper L 5 = new Keeper ( B 2 , p 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> void Keeper ( String B 2 , String p 9 ) { <CR> this . id = B 2 ; <CR> this . tel = p 9 ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> String name ; <CR> String type ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> Keeper keeper ; <CR> void Pet ( String U , String m 6 , String M 6 , Keeper P 2 ) { <CR> count ++ ; <CR> this . pid = U ; <CR> this . name = m 6 ; <CR> this . type = M 6 ; <CR> this . keeper = P 2 ; <CR> } <CR> static int count ; <CR> String pid ; <CR> public static void main ( String [ ] f 5 ) { <CR> String U ; <CR> String m 6 ; <CR> String M 6 ; <CR> String g 9 ; <CR> String s 4 ; <CR> Scanner C 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> g 9 = C 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 4 = C 4 . nextLine ( ) ; <CR> Keeper K 8 = new Keeper ( g 9 , s 4 ) ; <CR> Scanner C 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> U = C 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> M 6 = C 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 6 = C 4 . nextLine ( ) ; <CR> pet O 0 = new pet ( U , m 6 , M 6 , K 8 ) ; <CR> String m 1 = O 0 . Speak ( ) ; <CR> System . out . println ( <STRING> + m 1 ) ; <CR> } <CR> } <CR> <EOC>