<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> void Keeper ( String A 1 , String B 2 ) { <CR> this . id = A 1 ; <CR> this . tel = B 2 ; <CR> } <CR> public static void main ( String [ ] w ) { <CR> String A 1 ; <CR> String B 2 ; <CR> Scanner K 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 1 = K 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 2 = K 4 . nextLine ( ) ; <CR> Keeper T 2 = new Keeper ( A 1 , B 2 ) ; <CR> } <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String type ; <CR> public static void main ( String [ ] g 7 ) { <CR> String n 6 ; <CR> String G 1 ; <CR> String E 8 ; <CR> String Y 8 ; <CR> String G ; <CR> Scanner C 2 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 8 = C 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G = C 2 . nextLine ( ) ; <CR> Keeper S = new Keeper ( Y 8 , G ) ; <CR> Scanner C 2 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 6 = C 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 8 = C 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 1 = C 2 . nextLine ( ) ; <CR> pet u 2 = new pet ( n 6 , G 1 , E 8 , S ) ; <CR> String j 4 = u 2 . Speak ( ) ; <CR> System . out . println ( <STRING> + j 4 ) ; <CR> } <CR> String name ; <CR> String pid ; <CR> Keeper keeper ; <CR> static int count ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> void Pet ( String n 6 , String G 1 , String E 8 , Keeper B 6 ) { <CR> count ++ ; <CR> this . pid = n 6 ; <CR> this . name = G 1 ; <CR> this . type = E 8 ; <CR> this . keeper = B 6 ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC>