<BOC> public class ChineseLetter extends Evaluation { <CR> public void Display ( ) { <CR> System . out . println ( getReceiver ( ) + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( getSender ( ) + <STRING> ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> public ChineseLetter ( String y 1 , String S 1 , String h 0 , String d 0 , String X ) { <CR> super ( y 1 , S 1 , h 0 , d 0 , X ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Evaluation { <CR> public EnglishLetter ( String b 4 , String l , String T 9 , String V 7 , String K 0 ) { <CR> super ( b 4 , l , T 9 , V 7 , K 0 ) ; <CR> } <CR> public void Display ( ) { <CR> System . out . println ( <STRING> + title + <STRING> + getReceiver ( ) + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( getSender ( ) ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> public Envelop ( String B 4 , String W 7 , Evaluation x 7 ) { <CR> this . senderAddr = B 4 ; <CR> this . receiverAddr = W 7 ; <CR> this . letter = x 7 ; <CR> } <CR> public static void main ( String [ ] T 1 ) { <CR> Evaluation r 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop N 9 = new Envelop ( <STRING> , <STRING> , r 3 ) ; <CR> N 9 . display ( ) ; <CR> } <CR> Evaluation letter ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr ) ; <CR> System . out . println ( <STRING> + receiverAddr ) ; <CR> letter . Display ( ) ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> protected String title , receiver , content , sender , date ; <CR> public String getSender ( ) { <CR> return sender ; <CR> } <CR> public Evaluation ( String V 4 , String i , String X 0 , String S 7 , String L 5 ) { <CR> this . title = V 4 ; <CR> this . receiver = i ; <CR> this . content = X 0 ; <CR> this . sender = S 7 ; <CR> this . date = L 5 ; <CR> } <CR> abstract protected void Display ( ) ; <CR> public String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> public class Letter implements Comparable { <CR> public int compareTo ( Object b 4 ) { <CR> Letter x 7 = ( Letter ) b 4 ; <CR> if ( this . x > x 7 . x ) <CR> return <STRING> ; <CR> else <CR> return - <STRING> ; <CR> } <CR> public void display ( int F 0 ) { <CR> list [ F 0 ] . Display ( ) ; <CR> } <CR> Letter ( int j 5 ) { <CR> this . x = j 5 ; <CR> } <CR> public static Evaluation [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> private int x ; <CR> public static void main ( String [ ] y 2 ) { <CR> int F 0 ; <CR> for ( F 0 = list . length - <STRING> ; F 0 > = <STRING> ; F 0 -- ) { <CR> int t 6 = F 0 ; <CR> Letter V 2 = new Letter ( F 0 ) ; <CR> Letter k 5 = new Letter ( t 6 - <STRING> ) ; <CR> if ( V 2 . compareTo ( k 5 ) == <STRING> ) <CR> V 2 . display ( F 0 ) ; <CR> } <CR> } <CR> } <CR> <EOC>