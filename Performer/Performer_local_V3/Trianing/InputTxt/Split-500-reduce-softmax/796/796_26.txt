<BOC> abstract public class Evaluation { <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> public Evaluation ( String X 3 , String o 5 , String g 0 , Keeper S 2 ) { <CR> pid = X 3 ; <CR> name = o 5 ; <CR> type = g 0 ; <CR> count ++ ; <CR> keeper = S 2 ; <CR> } <CR> private static int count ; <CR> protected Keeper keeper ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String F 6 , String x 4 , String a 3 , Keeper F 3 ) { <CR> super ( F 6 , x 4 , a 3 , F 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String u 0 , String a 8 , String S 5 , Keeper U 9 ) { <CR> super ( u 0 , a 8 , S 5 , U 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String q 9 , String x 0 , String L 8 ) { <CR> id = x 0 ; <CR> tel = L 8 ; <CR> name = q 9 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String J 4 , String h 7 , String a 7 , Keeper J 1 ) { <CR> super ( J 4 , h 7 , a 7 , J 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] Z 3 ) { <CR> Scanner d 0 = new Scanner ( System . in ) ; <CR> boolean l = <STRING> ; <CR> while ( l ) { <CR> System . out . print ( <STRING> ) ; <CR> String q 5 = d 0 . nextLine ( ) ; <CR> if ( q 5 . equals ( <STRING> ) ) { <CR> l = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String t 8 = d 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String i 8 = d 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String r 7 = d 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 4 = d 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 5 = d 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g 2 = d 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper P 8 = new Keeper ( r 7 , D 4 , w 5 ) ; <CR> Evaluation j ; <CR> if ( q 5 . equals ( <STRING> ) ) <CR> j = new Exam ( t 8 , i 8 , q 5 , P 8 ) ; <CR> else if ( q 5 . equals ( <STRING> ) ) <CR> j = new HomeWork ( t 8 , i 8 , q 5 , P 8 ) ; <CR> else <CR> j = new Report ( t 8 , i 8 , q 5 , P 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>