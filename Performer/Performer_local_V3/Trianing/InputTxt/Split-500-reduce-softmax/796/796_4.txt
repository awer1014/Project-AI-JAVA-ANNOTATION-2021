<BOC> abstract public class Evaluation { <CR> protected Keeper keeper ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private static int count ; <CR> public Evaluation ( String b 7 , String e 9 , String x 1 , Keeper q 7 ) { <CR> pid = b 7 ; <CR> name = e 9 ; <CR> type = x 1 ; <CR> count ++ ; <CR> keeper = q 7 ; <CR> } <CR> protected String pid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String Y 3 , String L 0 , String H 9 , Keeper A 7 ) { <CR> super ( Y 3 , L 0 , H 9 , A 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String W 6 , String n 2 , String v 7 , Keeper l ) { <CR> super ( W 6 , n 2 , v 7 , l ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public Keeper ( String A 5 , String R 6 , String e 6 ) { <CR> id = R 6 ; <CR> tel = e 6 ; <CR> name = A 5 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String V 1 , String i 5 , String B 9 , Keeper U 7 ) { <CR> super ( V 1 , i 5 , B 9 , U 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] v 4 ) { <CR> Scanner X 1 = new Scanner ( System . in ) ; <CR> boolean Z 0 = <STRING> ; <CR> while ( Z 0 ) { <CR> System . out . print ( <STRING> ) ; <CR> String A 5 = X 1 . nextLine ( ) ; <CR> if ( A 5 . equals ( <STRING> ) ) { <CR> Z 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String N = X 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String j 4 = X 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 9 = X 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 9 = X 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String B 6 = X 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 7 = X 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper y = new Keeper ( e 9 , c 9 , B 6 ) ; <CR> Evaluation k 9 ; <CR> if ( A 5 . equals ( <STRING> ) ) <CR> k 9 = new Exam ( N , j 4 , A 5 , y ) ; <CR> else if ( A 5 . equals ( <STRING> ) ) <CR> k 9 = new HomeWork ( N , j 4 , A 5 , y ) ; <CR> else <CR> k 9 = new Report ( N , j 4 , A 5 , y ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>