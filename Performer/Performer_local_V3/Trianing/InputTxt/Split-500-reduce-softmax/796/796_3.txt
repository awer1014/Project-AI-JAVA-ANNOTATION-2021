<BOC> abstract public class Evaluation { <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> public Evaluation ( String l 0 , String C 1 , String Q 1 , Keeper e ) { <CR> pid = l 0 ; <CR> name = C 1 ; <CR> type = Q 1 ; <CR> count ++ ; <CR> keeper = e ; <CR> } <CR> protected Keeper keeper ; <CR> private static int count ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String N 9 , String E 1 , String m 5 , Keeper r ) { <CR> super ( N 9 , E 1 , m 5 , r ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String H 0 , String a 4 , String C 5 , Keeper j 2 ) { <CR> super ( H 0 , a 4 , C 5 , j 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String f 5 , String H , String O 4 ) { <CR> id = H ; <CR> tel = O 4 ; <CR> name = f 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String h 4 , String j 6 , String A 0 , Keeper O 1 ) { <CR> super ( h 4 , j 6 , A 0 , O 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] k ) { <CR> Scanner K 6 = new Scanner ( System . in ) ; <CR> boolean X 8 = <STRING> ; <CR> while ( X 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String E 7 = K 6 . nextLine ( ) ; <CR> if ( E 7 . equals ( <STRING> ) ) { <CR> X 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String W 6 = K 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String j 8 = K 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 3 = K 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 0 = K 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v 5 = K 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x 2 = K 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper G = new Keeper ( H 3 , V 0 , v 5 ) ; <CR> Evaluation n 4 ; <CR> if ( E 7 . equals ( <STRING> ) ) <CR> n 4 = new Exam ( W 6 , j 8 , E 7 , G ) ; <CR> else if ( E 7 . equals ( <STRING> ) ) <CR> n 4 = new HomeWork ( W 6 , j 8 , E 7 , G ) ; <CR> else <CR> n 4 = new Report ( W 6 , j 8 , E 7 , G ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>