<BOC> abstract public class Evaluation { <CR> public Evaluation ( String q 3 , String l 2 , String X 5 , Keeper s 6 ) { <CR> pid = q 3 ; <CR> name = l 2 ; <CR> type = X 5 ; <CR> count ++ ; <CR> keeper = s 6 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> protected Keeper keeper ; <CR> private static int count ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String g 0 , String D 4 , String O 8 , Keeper T 9 ) { <CR> super ( g 0 , D 4 , O 8 , T 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String a 4 , String W , String j 5 , Keeper h 1 ) { <CR> super ( a 4 , W , j 5 , h 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String r 2 , String L 4 , String Q 5 ) { <CR> id = L 4 ; <CR> tel = Q 5 ; <CR> name = r 2 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String t 1 , String b 0 , String v 0 , Keeper Q 9 ) { <CR> super ( t 1 , b 0 , v 0 , Q 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] y 0 ) { <CR> Scanner F 3 = new Scanner ( System . in ) ; <CR> boolean v = <STRING> ; <CR> while ( v ) { <CR> System . out . print ( <STRING> ) ; <CR> String N 7 = F 3 . nextLine ( ) ; <CR> if ( N 7 . equals ( <STRING> ) ) { <CR> v = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String c 1 = F 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Z 7 = F 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 6 = F 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 7 = F 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x = F 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 6 = F 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper L 7 = new Keeper ( J 6 , D 7 , x ) ; <CR> Evaluation y 4 ; <CR> if ( N 7 . equals ( <STRING> ) ) <CR> y 4 = new Exam ( c 1 , Z 7 , N 7 , L 7 ) ; <CR> else if ( N 7 . equals ( <STRING> ) ) <CR> y 4 = new HomeWork ( c 1 , Z 7 , N 7 , L 7 ) ; <CR> else <CR> y 4 = new Report ( c 1 , Z 7 , N 7 , L 7 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>