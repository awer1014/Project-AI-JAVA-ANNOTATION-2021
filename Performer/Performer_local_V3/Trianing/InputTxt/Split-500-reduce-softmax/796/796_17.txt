<BOC> abstract public class Evaluation { <CR> protected Keeper keeper ; <CR> public Evaluation ( String U 5 , String s 3 , String e 2 , Keeper i 9 ) { <CR> pid = U 5 ; <CR> name = s 3 ; <CR> type = e 2 ; <CR> count ++ ; <CR> keeper = i 9 ; <CR> } <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String W 4 , String q 8 , String b 2 , Keeper p ) { <CR> super ( W 4 , q 8 , b 2 , p ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String f 4 , String Q 4 , String G 6 , Keeper Z 0 ) { <CR> super ( f 4 , Q 4 , G 6 , Z 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String q 3 , String m 2 , String d 5 ) { <CR> id = m 2 ; <CR> tel = d 5 ; <CR> name = q 3 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String a 1 , String S 7 , String a 3 , Keeper R 8 ) { <CR> super ( a 1 , S 7 , a 3 , R 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] t 1 ) { <CR> Scanner e 5 = new Scanner ( System . in ) ; <CR> boolean E 4 = <STRING> ; <CR> while ( E 4 ) { <CR> System . out . print ( <STRING> ) ; <CR> String X 1 = e 5 . nextLine ( ) ; <CR> if ( X 1 . equals ( <STRING> ) ) { <CR> E 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String c 3 = e 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String P 0 = e 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v = e 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String K 4 = e 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 7 = e 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z 3 = e 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper x = new Keeper ( v , K 4 , h 7 ) ; <CR> Evaluation J 7 ; <CR> if ( X 1 . equals ( <STRING> ) ) <CR> J 7 = new Exam ( c 3 , P 0 , X 1 , x ) ; <CR> else if ( X 1 . equals ( <STRING> ) ) <CR> J 7 = new HomeWork ( c 3 , P 0 , X 1 , x ) ; <CR> else <CR> J 7 = new Report ( c 3 , P 0 , X 1 , x ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>