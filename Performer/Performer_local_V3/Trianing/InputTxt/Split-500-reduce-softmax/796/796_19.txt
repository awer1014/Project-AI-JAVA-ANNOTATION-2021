<BOC> abstract public class Evaluation { <CR> public Evaluation ( String V 5 , String K 6 , String T 0 , Keeper i 6 ) { <CR> pid = V 5 ; <CR> name = K 6 ; <CR> type = T 0 ; <CR> count ++ ; <CR> keeper = i 6 ; <CR> } <CR> protected Keeper keeper ; <CR> private static int count ; <CR> protected String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String h 1 , String n 6 , String K 3 , Keeper x 2 ) { <CR> super ( h 1 , n 6 , K 3 , x 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String O 6 , String u 2 , String B 5 , Keeper C 7 ) { <CR> super ( O 6 , u 2 , B 5 , C 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public Keeper ( String t 1 , String l 6 , String h 6 ) { <CR> id = l 6 ; <CR> tel = h 6 ; <CR> name = t 1 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Z 0 , String u 2 , String M 6 , Keeper s 2 ) { <CR> super ( Z 0 , u 2 , M 6 , s 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] I ) { <CR> Scanner q 2 = new Scanner ( System . in ) ; <CR> boolean p = <STRING> ; <CR> while ( p ) { <CR> System . out . print ( <STRING> ) ; <CR> String W 9 = q 2 . nextLine ( ) ; <CR> if ( W 9 . equals ( <STRING> ) ) { <CR> p = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String U 3 = q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 1 = q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String S 4 = q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 3 = q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 4 = q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String W 3 = q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper P 8 = new Keeper ( S 4 , w 3 , C 4 ) ; <CR> Evaluation Y 8 ; <CR> if ( W 9 . equals ( <STRING> ) ) <CR> Y 8 = new Exam ( U 3 , J 1 , W 9 , P 8 ) ; <CR> else if ( W 9 . equals ( <STRING> ) ) <CR> Y 8 = new HomeWork ( U 3 , J 1 , W 9 , P 8 ) ; <CR> else <CR> Y 8 = new Report ( U 3 , J 1 , W 9 , P 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>