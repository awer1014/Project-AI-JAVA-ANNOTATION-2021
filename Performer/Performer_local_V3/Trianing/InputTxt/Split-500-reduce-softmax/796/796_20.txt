<BOC> abstract public class Evaluation { <CR> public Evaluation ( String g 1 , String k , String k 8 , Keeper A 5 ) { <CR> pid = g 1 ; <CR> name = k ; <CR> type = k 8 ; <CR> count ++ ; <CR> keeper = A 5 ; <CR> } <CR> protected String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected Keeper keeper ; <CR> private static int count ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String P 1 , String t 8 , String T 7 , Keeper H 4 ) { <CR> super ( P 1 , t 8 , T 7 , H 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String B , String g 2 , String w 5 , Keeper K 5 ) { <CR> super ( B , g 2 , w 5 , K 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String z 6 , String n 0 , String m 4 ) { <CR> id = n 0 ; <CR> tel = m 4 ; <CR> name = z 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String u 1 , String p 3 , String C 7 , Keeper k 1 ) { <CR> super ( u 1 , p 3 , C 7 , k 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 2 ) { <CR> Scanner j 5 = new Scanner ( System . in ) ; <CR> boolean b 8 = <STRING> ; <CR> while ( b 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String H 9 = j 5 . nextLine ( ) ; <CR> if ( H 9 . equals ( <STRING> ) ) { <CR> b 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String y 1 = j 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 3 = j 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d 3 = j 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String n 1 = j 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Y 0 = j 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 8 = j 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper L 9 = new Keeper ( d 3 , n 1 , Y 0 ) ; <CR> Evaluation D 5 ; <CR> if ( H 9 . equals ( <STRING> ) ) <CR> D 5 = new Exam ( y 1 , X 3 , H 9 , L 9 ) ; <CR> else if ( H 9 . equals ( <STRING> ) ) <CR> D 5 = new HomeWork ( y 1 , X 3 , H 9 , L 9 ) ; <CR> else <CR> D 5 = new Report ( y 1 , X 3 , H 9 , L 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>