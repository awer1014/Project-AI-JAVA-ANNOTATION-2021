<BOC> abstract public class Evaluation { <CR> public Evaluation ( String d 4 , String p 6 , String o 8 , Keeper k ) { <CR> pid = d 4 ; <CR> name = p 6 ; <CR> type = o 8 ; <CR> count ++ ; <CR> keeper = k ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private static int count ; <CR> protected Keeper keeper ; <CR> protected String pid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String f , String C 5 , String N 8 , Keeper T 2 ) { <CR> super ( f , C 5 , N 8 , T 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String e 9 , String G 1 , String n 2 , Keeper e 2 ) { <CR> super ( e 9 , G 1 , n 2 , e 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String V 5 , String K , String t 0 ) { <CR> id = K ; <CR> tel = t 0 ; <CR> name = V 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String z 8 , String m , String T 3 , Keeper t ) { <CR> super ( z 8 , m , T 3 , t ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] B 4 ) { <CR> Scanner i 4 = new Scanner ( System . in ) ; <CR> boolean L 4 = <STRING> ; <CR> while ( L 4 ) { <CR> System . out . print ( <STRING> ) ; <CR> String A 5 = i 4 . nextLine ( ) ; <CR> if ( A 5 . equals ( <STRING> ) ) { <CR> L 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String V 1 = i 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v 5 = i 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String f 3 = i 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String P = i 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 3 = i 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d 7 = i 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper s 9 = new Keeper ( f 3 , P , C 3 ) ; <CR> Evaluation E 0 ; <CR> if ( A 5 . equals ( <STRING> ) ) <CR> E 0 = new Exam ( V 1 , v 5 , A 5 , s 9 ) ; <CR> else if ( A 5 . equals ( <STRING> ) ) <CR> E 0 = new HomeWork ( V 1 , v 5 , A 5 , s 9 ) ; <CR> else <CR> E 0 = new Report ( V 1 , v 5 , A 5 , s 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>