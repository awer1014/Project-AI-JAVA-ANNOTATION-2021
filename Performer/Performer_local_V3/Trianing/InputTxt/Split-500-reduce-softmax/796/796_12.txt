<BOC> abstract public class Evaluation { <CR> public Evaluation ( String J 4 , String u 1 , String S 6 , Keeper s ) { <CR> pid = J 4 ; <CR> name = u 1 ; <CR> type = S 6 ; <CR> count ++ ; <CR> keeper = s ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> private static int count ; <CR> protected Keeper keeper ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String K 6 , String w 8 , String k 9 , Keeper v ) { <CR> super ( K 6 , w 8 , k 9 , v ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String b 4 , String c , String i 5 , Keeper S 5 ) { <CR> super ( b 4 , c , i 5 , S 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public Keeper ( String C 7 , String B 5 , String D 6 ) { <CR> id = B 5 ; <CR> tel = D 6 ; <CR> name = C 7 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String O 3 , String m 9 , String e , Keeper k 6 ) { <CR> super ( O 3 , m 9 , e , k 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] y 1 ) { <CR> Scanner u 4 = new Scanner ( System . in ) ; <CR> boolean L 9 = <STRING> ; <CR> while ( L 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String d 9 = u 4 . nextLine ( ) ; <CR> if ( d 9 . equals ( <STRING> ) ) { <CR> L 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String j 3 = u 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String N 6 = u 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 0 = u 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 3 = u 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 3 = u 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String i 3 = u 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper T 8 = new Keeper ( D 0 , c 3 , X 3 ) ; <CR> Evaluation w 1 ; <CR> if ( d 9 . equals ( <STRING> ) ) <CR> w 1 = new Exam ( j 3 , N 6 , d 9 , T 8 ) ; <CR> else if ( d 9 . equals ( <STRING> ) ) <CR> w 1 = new HomeWork ( j 3 , N 6 , d 9 , T 8 ) ; <CR> else <CR> w 1 = new Report ( j 3 , N 6 , d 9 , T 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>