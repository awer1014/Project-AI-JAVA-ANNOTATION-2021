<BOC> abstract public class Evaluation { <CR> protected Keeper keeper ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Evaluation ( String w , String h , String U 5 , Keeper Z 2 ) { <CR> pid = w ; <CR> name = h ; <CR> type = U 5 ; <CR> count ++ ; <CR> keeper = Z 2 ; <CR> } <CR> protected String pid , name , type ; <CR> private static int count ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String u 5 , String B 2 , String T 8 , Keeper L 3 ) { <CR> super ( u 5 , B 2 , T 8 , L 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String w 3 , String o 0 , String j 3 , Keeper r 8 ) { <CR> super ( w 3 , o 0 , j 3 , r 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String c 0 , String S 2 , String R 1 ) { <CR> id = S 2 ; <CR> tel = R 1 ; <CR> name = c 0 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String x 5 , String k 7 , String l 3 , Keeper C 8 ) { <CR> super ( x 5 , k 7 , l 3 , C 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] J 1 ) { <CR> Scanner g 0 = new Scanner ( System . in ) ; <CR> boolean i 2 = <STRING> ; <CR> while ( i 2 ) { <CR> System . out . print ( <STRING> ) ; <CR> String u 1 = g 0 . nextLine ( ) ; <CR> if ( u 1 . equals ( <STRING> ) ) { <CR> i 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String X 2 = g 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String t 7 = g 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u 3 = g 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 2 = g 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Z = g 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 6 = g 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper X 9 = new Keeper ( u 3 , H 2 , Z ) ; <CR> Evaluation l 3 ; <CR> if ( u 1 . equals ( <STRING> ) ) <CR> l 3 = new Exam ( X 2 , t 7 , u 1 , X 9 ) ; <CR> else if ( u 1 . equals ( <STRING> ) ) <CR> l 3 = new HomeWork ( X 2 , t 7 , u 1 , X 9 ) ; <CR> else <CR> l 3 = new Report ( X 2 , t 7 , u 1 , X 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>