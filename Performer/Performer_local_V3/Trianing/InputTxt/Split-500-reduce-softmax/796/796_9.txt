<BOC> abstract public class Evaluation { <CR> private static int count ; <CR> public Evaluation ( String b 9 , String n 4 , String j 9 , Keeper L ) { <CR> pid = b 9 ; <CR> name = n 4 ; <CR> type = j 9 ; <CR> count ++ ; <CR> keeper = L ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected Keeper keeper ; <CR> protected String pid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String t 2 , String a 3 , String M 9 , Keeper I 6 ) { <CR> super ( t 2 , a 3 , M 9 , I 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String s 9 , String c 3 , String T 1 , Keeper R 5 ) { <CR> super ( s 9 , c 3 , T 1 , R 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String y 1 , String Z 7 , String F 1 ) { <CR> id = Z 7 ; <CR> tel = F 1 ; <CR> name = y 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String e 3 , String E 3 , String u 2 , Keeper O ) { <CR> super ( e 3 , E 3 , u 2 , O ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] j ) { <CR> Scanner w 4 = new Scanner ( System . in ) ; <CR> boolean W 1 = <STRING> ; <CR> while ( W 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String r 2 = w 4 . nextLine ( ) ; <CR> if ( r 2 . equals ( <STRING> ) ) { <CR> W 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String G 4 = w 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String a 0 = w 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m = w 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Q 8 = w 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s 9 = w 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 4 = w 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper g 0 = new Keeper ( m , Q 8 , s 9 ) ; <CR> Evaluation J 1 ; <CR> if ( r 2 . equals ( <STRING> ) ) <CR> J 1 = new Exam ( G 4 , a 0 , r 2 , g 0 ) ; <CR> else if ( r 2 . equals ( <STRING> ) ) <CR> J 1 = new HomeWork ( G 4 , a 0 , r 2 , g 0 ) ; <CR> else <CR> J 1 = new Report ( G 4 , a 0 , r 2 , g 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>