<BOC> abstract public class Evaluation { <CR> private static int count ; <CR> protected Keeper keeper ; <CR> protected String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Evaluation ( String L 3 , String X 8 , String H , Keeper O 3 ) { <CR> pid = L 3 ; <CR> name = X 8 ; <CR> type = H ; <CR> count ++ ; <CR> keeper = O 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String S 2 , String H , String i 7 , Keeper K 1 ) { <CR> super ( S 2 , H , i 7 , K 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String m 1 , String F 5 , String c 9 , Keeper S 7 ) { <CR> super ( m 1 , F 5 , c 9 , S 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public Keeper ( String a 7 , String M 1 , String d 7 ) { <CR> id = M 1 ; <CR> tel = d 7 ; <CR> name = a 7 ; <CR> } <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String i 9 , String V 4 , String t 8 , Keeper V ) { <CR> super ( i 9 , V 4 , t 8 , V ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] F 9 ) { <CR> Scanner m 3 = new Scanner ( System . in ) ; <CR> boolean u 4 = <STRING> ; <CR> while ( u 4 ) { <CR> System . out . print ( <STRING> ) ; <CR> String w 6 = m 3 . nextLine ( ) ; <CR> if ( w 6 . equals ( <STRING> ) ) { <CR> u 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String r 6 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 9 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 4 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String B 9 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 6 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Y 3 = m 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper b 0 = new Keeper ( e 4 , B 9 , k 6 ) ; <CR> Evaluation h 9 ; <CR> if ( w 6 . equals ( <STRING> ) ) <CR> h 9 = new Exam ( r 6 , C 9 , w 6 , b 0 ) ; <CR> else if ( w 6 . equals ( <STRING> ) ) <CR> h 9 = new HomeWork ( r 6 , C 9 , w 6 , b 0 ) ; <CR> else <CR> h 9 = new Report ( r 6 , C 9 , w 6 , b 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>