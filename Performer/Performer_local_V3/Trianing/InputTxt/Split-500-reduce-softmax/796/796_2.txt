<BOC> abstract public class Evaluation { <CR> protected Keeper keeper ; <CR> private static int count ; <CR> public Evaluation ( String O 1 , String p 4 , String Z 3 , Keeper v 3 ) { <CR> pid = O 1 ; <CR> name = p 4 ; <CR> type = Z 3 ; <CR> count ++ ; <CR> keeper = v 3 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String U 6 , String i 2 , String S 3 , Keeper Y 6 ) { <CR> super ( U 6 , i 2 , S 3 , Y 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String I 0 , String e 5 , String H 3 , Keeper g 5 ) { <CR> super ( I 0 , e 5 , H 3 , g 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String G 7 , String R 8 , String J 8 ) { <CR> id = R 8 ; <CR> tel = J 8 ; <CR> name = G 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String b 3 , String w 8 , String t 9 , Keeper g 2 ) { <CR> super ( b 3 , w 8 , t 9 , g 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] g 3 ) { <CR> Scanner U 1 = new Scanner ( System . in ) ; <CR> boolean W 1 = <STRING> ; <CR> while ( W 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String y 0 = U 1 . nextLine ( ) ; <CR> if ( y 0 . equals ( <STRING> ) ) { <CR> W 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String V 2 = U 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 7 = U 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 3 = U 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 6 = U 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d 9 = U 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 2 = U 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper I 3 = new Keeper ( D 3 , h 6 , d 9 ) ; <CR> Evaluation v 4 ; <CR> if ( y 0 . equals ( <STRING> ) ) <CR> v 4 = new Exam ( V 2 , D 7 , y 0 , I 3 ) ; <CR> else if ( y 0 . equals ( <STRING> ) ) <CR> v 4 = new HomeWork ( V 2 , D 7 , y 0 , I 3 ) ; <CR> else <CR> v 4 = new Report ( V 2 , D 7 , y 0 , I 3 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>