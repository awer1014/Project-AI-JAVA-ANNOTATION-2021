<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String O 2 , String Q 4 , String x , String O 7 , String h 9 ) { <CR> super ( O 2 , Q 4 , x , O 7 , h 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String n 1 , String i 1 , String Q , String c 7 , String B 7 ) { <CR> super ( n 1 , i 1 , Q , c 7 , B 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> public int compareTo ( Object t 0 ) { <CR> Letter b 4 = ( Letter ) t 0 ; <CR> if ( this . getDate ( ) . compareTo ( b 4 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( b 4 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String L 7 , String l 7 , String L 2 , String d 1 , String K 7 ) { <CR> this . title = L 7 ; <CR> this . receiver = l 7 ; <CR> this . content = L 2 ; <CR> this . sender = d 1 ; <CR> this . date = K 7 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] W 2 ) { <CR> Letter c 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter o 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter C 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList m 4 = { c 5 , o 9 , C 7 } ; <CR> for ( Letter F 9 : m 4 ) <CR> F 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>