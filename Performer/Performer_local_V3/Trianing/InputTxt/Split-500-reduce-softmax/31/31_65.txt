<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String k 1 , String D 6 , String t 8 , String U 8 , String h 3 ) { <CR> super ( k 1 , D 6 , t 8 , U 8 , h 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String q 3 , String D 7 , String k 1 , String P 9 , String d ) { <CR> super ( q 3 , D 7 , k 1 , P 9 , d ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object a 1 ) { <CR> Letter Q = ( Letter ) a 1 ; <CR> if ( this . getDate ( ) . compareTo ( Q . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( Q . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> Letter ( String X 5 , String Q 0 , String D 8 , String x 7 , String f 4 ) { <CR> this . title = X 5 ; <CR> this . receiver = Q 0 ; <CR> this . content = D 8 ; <CR> this . sender = x 7 ; <CR> this . date = f 4 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] b 8 ) { <CR> Letter U 0 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter P 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter e 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList C 1 = { U 0 , P 2 , e 9 } ; <CR> for ( Letter x 3 : C 1 ) <CR> x 3 . display ( ) ; <CR> } <CR> } <CR> <EOC>