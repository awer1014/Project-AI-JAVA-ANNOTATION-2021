<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String Q 0 , String A 8 , String e 5 , String Q 8 , String r ) { <CR> super ( Q 0 , A 8 , e 5 , Q 8 , r ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String R 0 , String L 4 , String Z 0 , String H 4 , String Q 6 ) { <CR> super ( R 0 , L 4 , Z 0 , H 4 , Q 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object t 5 ) { <CR> Letter S 2 = ( Letter ) t 5 ; <CR> if ( this . getDate ( ) . compareTo ( S 2 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( S 2 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> Letter ( String T , String w 5 , String G 6 , String V 0 , String C 6 ) { <CR> this . title = T ; <CR> this . receiver = w 5 ; <CR> this . content = G 6 ; <CR> this . sender = V 0 ; <CR> this . date = C 6 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] s ) { <CR> Letter S 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter p 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList y 7 = { S 8 , p 8 , w 1 } ; <CR> for ( Letter O 9 : y 7 ) <CR> O 9 . display ( ) ; <CR> } <CR> } <CR> <EOC>