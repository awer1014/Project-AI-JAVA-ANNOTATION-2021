<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String u 4 , String b 7 , String b 2 , String P 5 , String X ) { <CR> super ( u 4 , b 7 , b 2 , P 5 , X ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String W 8 , String e 5 , String B 2 , String X 0 , String M 1 ) { <CR> super ( W 8 , e 5 , B 2 , X 0 , M 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String L 6 , String r 8 , String r , String P 9 , String r 3 ) { <CR> this . title = L 6 ; <CR> this . receiver = r 8 ; <CR> this . content = r ; <CR> this . sender = P 9 ; <CR> this . date = r 3 ; <CR> } <CR> public int compareTo ( Object J 8 ) { <CR> Letter F 8 = ( Letter ) J 8 ; <CR> if ( this . getDate ( ) . compareTo ( F 8 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( F 8 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] b 1 ) { <CR> Letter c 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter n 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter S 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList X 8 = { c 6 , n 0 , S 3 } ; <CR> for ( Letter E 7 : X 8 ) <CR> E 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>