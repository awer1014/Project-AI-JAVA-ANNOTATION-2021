<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String U 9 , String Y 2 , String J 9 , String H 7 , String M ) { <CR> super ( U 9 , Y 2 , J 9 , H 7 , M ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String s 5 , String e 4 , String r 3 , String b 6 , String h 5 ) { <CR> super ( s 5 , e 4 , r 3 , b 6 , h 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> Letter ( String L 8 , String A 2 , String E 0 , String Q 9 , String X 4 ) { <CR> this . title = L 8 ; <CR> this . receiver = A 2 ; <CR> this . content = E 0 ; <CR> this . sender = Q 9 ; <CR> this . date = X 4 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object T 6 ) { <CR> Letter r = ( Letter ) T 6 ; <CR> if ( this . getDate ( ) . compareTo ( r . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( r . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] W 7 ) { <CR> Letter e 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter m 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter p 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList A 1 = { e 4 , m 3 , p 9 } ; <CR> for ( Letter K 2 : A 1 ) <CR> K 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>