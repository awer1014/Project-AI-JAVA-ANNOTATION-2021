<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String u 2 , String s 8 , String h 3 , String T 1 , String z 4 ) { <CR> super ( u 2 , s 8 , h 3 , T 1 , z 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String j 9 , String f 2 , String m 5 , String y , String h 4 ) { <CR> super ( j 9 , f 2 , m 5 , y , h 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object D 9 ) { <CR> Letter F 1 = ( Letter ) D 9 ; <CR> if ( this . getDate ( ) . compareTo ( F 1 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( F 1 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> Letter ( String k 1 , String O 8 , String p 0 , String m 3 , String l 8 ) { <CR> this . title = k 1 ; <CR> this . receiver = O 8 ; <CR> this . content = p 0 ; <CR> this . sender = m 3 ; <CR> this . date = l 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] p 4 ) { <CR> Letter H = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter m 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter e 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList E 0 = { H , m 1 , e 7 } ; <CR> for ( Letter r 6 : E 0 ) <CR> r 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>