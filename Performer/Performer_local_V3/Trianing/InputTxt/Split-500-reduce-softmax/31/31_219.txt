<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String Z 8 , String l 3 , String X 8 , String v 9 , String b 3 ) { <CR> super ( Z 8 , l 3 , X 8 , v 9 , b 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String I , String S 2 , String x 3 , String B 3 , String j 0 ) { <CR> super ( I , S 2 , x 3 , B 3 , j 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String X 3 , String B 1 , String M 3 , String d , String P 3 ) { <CR> this . title = X 3 ; <CR> this . receiver = B 1 ; <CR> this . content = M 3 ; <CR> this . sender = d ; <CR> this . date = P 3 ; <CR> } <CR> public int compareTo ( Object Q 5 ) { <CR> Letter z 4 = ( Letter ) Q 5 ; <CR> if ( this . getDate ( ) . compareTo ( z 4 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( z 4 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] T 0 ) { <CR> Letter U 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter f 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter C 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList u 7 = { U 8 , f 7 , C 3 } ; <CR> for ( Letter U 7 : u 7 ) <CR> U 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>