<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String T 6 , String t 2 , String z 1 , String e 9 , String u 7 ) { <CR> super ( T 6 , t 2 , z 1 , e 9 , u 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String L 4 , String J 0 , String n , String d 3 , String N 6 ) { <CR> super ( L 4 , J 0 , n , d 3 , N 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String U 6 , String C 7 , String A , String p 5 , String F 5 ) { <CR> this . title = U 6 ; <CR> this . receiver = C 7 ; <CR> this . content = A ; <CR> this . sender = p 5 ; <CR> this . date = F 5 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object Q 8 ) { <CR> Letter f 6 = ( Letter ) Q 8 ; <CR> if ( this . getDate ( ) . compareTo ( f 6 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( f 6 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] w 3 ) { <CR> Letter P 2 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter F 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList x 1 = { P 2 , F 1 , k 3 } ; <CR> for ( Letter V 6 : x 1 ) <CR> V 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>