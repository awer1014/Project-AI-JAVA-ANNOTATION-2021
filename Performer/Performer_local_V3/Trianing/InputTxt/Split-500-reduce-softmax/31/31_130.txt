<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String s 7 , String f 7 , String l 5 , String L 1 , String k ) { <CR> super ( s 7 , f 7 , l 5 , L 1 , k ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String K , String b 1 , String A 0 , String t 7 , String S 4 ) { <CR> super ( K , b 1 , A 0 , t 7 , S 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String Y 4 , String M 4 , String W 3 , String z 1 , String r 9 ) { <CR> this . title = Y 4 ; <CR> this . receiver = M 4 ; <CR> this . content = W 3 ; <CR> this . sender = z 1 ; <CR> this . date = r 9 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object h 3 ) { <CR> Letter P 5 = ( Letter ) h 3 ; <CR> if ( this . getDate ( ) . compareTo ( P 5 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( P 5 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] I 3 ) { <CR> Letter H 8 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter z 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter n 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList o 0 = { H 8 , z 7 , n 1 } ; <CR> for ( Letter M 3 : o 0 ) <CR> M 3 . display ( ) ; <CR> } <CR> } <CR> <EOC>