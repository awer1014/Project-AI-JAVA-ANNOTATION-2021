<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String D 2 , String v 0 , String h 0 , String T 6 , String U ) { <CR> super ( D 2 , v 0 , h 0 , T 6 , U ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String w 3 , String h , String s 5 , String s 2 , String o 1 ) { <CR> super ( w 3 , h , s 5 , s 2 , o 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> public int compareTo ( Object D 5 ) { <CR> Letter D = ( Letter ) D 5 ; <CR> if ( this . getDate ( ) . compareTo ( D . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( D . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String y 5 , String M 5 , String b 5 , String j 4 , String K 3 ) { <CR> this . title = y 5 ; <CR> this . receiver = M 5 ; <CR> this . content = b 5 ; <CR> this . sender = j 4 ; <CR> this . date = K 3 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] C 4 ) { <CR> Letter G 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter B 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList T 5 = { G 6 , k 6 , B 8 } ; <CR> for ( Letter v 5 : T 5 ) <CR> v 5 . display ( ) ; <CR> } <CR> } <CR> <EOC>