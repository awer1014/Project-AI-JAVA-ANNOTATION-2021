<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String v 4 , String P 8 , String L 1 , String t 5 , String U 6 ) { <CR> super ( v 4 , P 8 , L 1 , t 5 , U 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String w 4 , String s 0 , String s 3 , String F 1 , String D 6 ) { <CR> super ( w 4 , s 0 , s 3 , F 1 , D 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object d 3 ) { <CR> Letter s 0 = ( Letter ) d 3 ; <CR> if ( this . getDate ( ) . compareTo ( s 0 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( s 0 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String x , String D , String c 3 , String Y 0 , String t 1 ) { <CR> this . title = x ; <CR> this . receiver = D ; <CR> this . content = c 3 ; <CR> this . sender = Y 0 ; <CR> this . date = t 1 ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] t 4 ) { <CR> Letter g 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter a 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter p 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList d 1 = { g 9 , a 9 , p 8 } ; <CR> for ( Letter D 2 : d 1 ) <CR> D 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>