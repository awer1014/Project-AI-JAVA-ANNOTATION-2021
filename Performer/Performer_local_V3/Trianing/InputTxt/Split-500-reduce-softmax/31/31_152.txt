<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String Z 4 , String l 9 , String i 0 , String p 8 , String D 3 ) { <CR> super ( Z 4 , l 9 , i 0 , p 8 , D 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String u 5 , String c 0 , String z 6 , String x , String q ) { <CR> super ( u 5 , c 0 , z 6 , x , q ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object E 0 ) { <CR> Letter Z 2 = ( Letter ) E 0 ; <CR> if ( this . getDate ( ) . compareTo ( Z 2 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( Z 2 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String J 8 , String z 0 , String w 8 , String R 3 , String i 4 ) { <CR> this . title = J 8 ; <CR> this . receiver = z 0 ; <CR> this . content = w 8 ; <CR> this . sender = R 3 ; <CR> this . date = i 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] Y ) { <CR> Letter F 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter e 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter U 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList c 6 = { F 6 , e 6 , U 4 } ; <CR> for ( Letter h 6 : c 6 ) <CR> h 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>