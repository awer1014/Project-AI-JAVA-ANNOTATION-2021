<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String i , String E 4 , String B 9 , String q 9 , String I 0 ) { <CR> super ( i , E 4 , B 9 , q 9 , I 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String a , String C 0 , String k 4 , String n , String C 6 ) { <CR> super ( a , C 0 , k 4 , n , C 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object j 5 ) { <CR> Letter z 9 = ( Letter ) j 5 ; <CR> if ( this . getDate ( ) . compareTo ( z 9 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( z 9 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> Letter ( String n 5 , String o 9 , String h 2 , String S 6 , String R 4 ) { <CR> this . title = n 5 ; <CR> this . receiver = o 9 ; <CR> this . content = h 2 ; <CR> this . sender = S 6 ; <CR> this . date = R 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] r 0 ) { <CR> Letter A = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter U 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter E 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList D 9 = { A , U 1 , E 7 } ; <CR> for ( Letter t 5 : D 9 ) <CR> t 5 . display ( ) ; <CR> } <CR> } <CR> <EOC>