<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String j 5 , String v 8 , String g 8 , String k 2 , String n 7 ) { <CR> super ( j 5 , v 8 , g 8 , k 2 , n 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String B 9 , String O , String b , String v 0 , String R 9 ) { <CR> super ( B 9 , O , b , v 0 , R 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object t 5 ) { <CR> Letter z 8 = ( Letter ) t 5 ; <CR> if ( this . getDate ( ) . compareTo ( z 8 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( z 8 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> Letter ( String V 0 , String z 2 , String A 9 , String X 2 , String x 8 ) { <CR> this . title = V 0 ; <CR> this . receiver = z 2 ; <CR> this . content = A 9 ; <CR> this . sender = X 2 ; <CR> this . date = x 8 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] g 5 ) { <CR> Letter X 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter R 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList H 0 = { X 3 , w , R 7 } ; <CR> for ( Letter n 6 : H 0 ) <CR> n 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>