<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String Y 4 , String y , String p 7 , String e 9 , String E 9 ) { <CR> super ( Y 4 , y , p 7 , e 9 , E 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String g 8 , String w 6 , String t 4 , String b 7 , String O 6 ) { <CR> super ( g 8 , w 6 , t 4 , b 7 , O 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> Letter ( String I 6 , String j 4 , String t , String w 1 , String m 7 ) { <CR> this . title = I 6 ; <CR> this . receiver = j 4 ; <CR> this . content = t ; <CR> this . sender = w 1 ; <CR> this . date = m 7 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object u 4 ) { <CR> Letter y = ( Letter ) u 4 ; <CR> if ( this . getDate ( ) . compareTo ( y . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( y . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] B 9 ) { <CR> Letter L 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter q 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList O 8 = { L 9 , G 2 , q 2 } ; <CR> for ( Letter Z : O 8 ) <CR> Z . display ( ) ; <CR> } <CR> } <CR> <EOC>