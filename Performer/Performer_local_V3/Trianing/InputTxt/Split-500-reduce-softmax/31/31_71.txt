<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String S 5 , String D 7 , String K 4 , String o 7 , String U 0 ) { <CR> super ( S 5 , D 7 , K 4 , o 7 , U 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String X 9 , String q 9 , String W 7 , String m 7 , String n 2 ) { <CR> super ( X 9 , q 9 , W 7 , m 7 , n 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String l 7 , String z 9 , String e 4 , String W 8 , String j 7 ) { <CR> this . title = l 7 ; <CR> this . receiver = z 9 ; <CR> this . content = e 4 ; <CR> this . sender = W 8 ; <CR> this . date = j 7 ; <CR> } <CR> public int compareTo ( Object M ) { <CR> Letter E = ( Letter ) M ; <CR> if ( this . getDate ( ) . compareTo ( E . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( E . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] e 1 ) { <CR> Letter a 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter n 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList D 1 = { a 1 , w 9 , n 1 } ; <CR> for ( Letter e 2 : D 1 ) <CR> e 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>