<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String G 7 , String i 2 , String z 9 , String v , String y 1 ) { <CR> super ( G 7 , i 2 , z 9 , v , y 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String K 8 , String X , String X 6 , String M 4 , String a 6 ) { <CR> super ( K 8 , X , X 6 , M 4 , a 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String M 2 , String q 5 , String q 2 , String z 1 , String G 5 ) { <CR> this . title = M 2 ; <CR> this . receiver = q 5 ; <CR> this . content = q 2 ; <CR> this . sender = z 1 ; <CR> this . date = G 5 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object F 4 ) { <CR> Letter B 2 = ( Letter ) F 4 ; <CR> if ( this . getDate ( ) . compareTo ( B 2 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( B 2 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] N 4 ) { <CR> Letter C 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter K 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList v 7 = { C 9 , k 6 , K 0 } ; <CR> for ( Letter l 8 : v 7 ) <CR> l 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>