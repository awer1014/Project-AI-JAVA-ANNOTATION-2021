<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String Y 7 , String j 5 , String X 8 , String Z 4 , String i 5 ) { <CR> super ( Y 7 , j 5 , X 8 , Z 4 , i 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String X 2 , String M 1 , String y 1 , String T 3 , String a 0 ) { <CR> super ( X 2 , M 1 , y 1 , T 3 , a 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object t 0 ) { <CR> Letter a = ( Letter ) t 0 ; <CR> if ( this . getDate ( ) . compareTo ( a . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( a . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String i , String T 2 , String I , String f 0 , String r 3 ) { <CR> this . title = i ; <CR> this . receiver = T 2 ; <CR> this . content = I ; <CR> this . sender = f 0 ; <CR> this . date = r 3 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] q 2 ) { <CR> Letter Q 7 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter K 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList h 4 = { Q 7 , K 7 , G 8 } ; <CR> for ( Letter C 8 : h 4 ) <CR> C 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>