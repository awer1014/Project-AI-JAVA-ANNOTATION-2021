<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String o 0 , String W 9 , String w 2 , String F 4 , String s ) { <CR> super ( o 0 , W 9 , w 2 , F 4 , s ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String U 3 , String L 2 , String W 4 , String r 3 , String a 8 ) { <CR> super ( U 3 , L 2 , W 4 , r 3 , a 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String e , String k 3 , String A 7 , String v 0 , String K ) { <CR> this . title = e ; <CR> this . receiver = k 3 ; <CR> this . content = A 7 ; <CR> this . sender = v 0 ; <CR> this . date = K ; <CR> } <CR> public int compareTo ( Object D 9 ) { <CR> Letter F 6 = ( Letter ) D 9 ; <CR> if ( this . getDate ( ) . compareTo ( F 6 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( F 6 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] S ) { <CR> Letter J 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter j 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter W 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList W 9 = { J 4 , j 7 , W 5 } ; <CR> for ( Letter Q 8 : W 9 ) <CR> Q 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>