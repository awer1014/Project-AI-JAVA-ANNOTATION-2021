<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String Z 2 , String J 6 , String T 0 , String g 2 , String A 9 ) { <CR> super ( Z 2 , J 6 , T 0 , g 2 , A 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String h 5 , String V 0 , String V 4 , String w 4 , String r 0 ) { <CR> super ( h 5 , V 0 , V 4 , w 4 , r 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String T 2 , String d , String N 6 , String V 1 , String e 3 ) { <CR> this . title = T 2 ; <CR> this . receiver = d ; <CR> this . content = N 6 ; <CR> this . sender = V 1 ; <CR> this . date = e 3 ; <CR> } <CR> public int compareTo ( Object D 7 ) { <CR> Letter D = ( Letter ) D 7 ; <CR> if ( this . getDate ( ) . compareTo ( D . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( D . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] P ) { <CR> Letter y 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter d = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter X 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList k 0 = { y 5 , d , X 5 } ; <CR> for ( Letter z 7 : k 0 ) <CR> z 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>