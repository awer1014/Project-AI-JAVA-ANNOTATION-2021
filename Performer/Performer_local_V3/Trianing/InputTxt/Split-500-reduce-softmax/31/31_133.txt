<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String w 8 , String V 8 , String P 7 , String S 4 , String z ) { <CR> super ( w 8 , V 8 , P 7 , S 4 , z ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String K 6 , String x 6 , String N 1 , String S , String x 2 ) { <CR> super ( K 6 , x 6 , N 1 , S , x 2 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object A 9 ) { <CR> Letter e 6 = ( Letter ) A 9 ; <CR> if ( this . getDate ( ) . compareTo ( e 6 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( e 6 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String M 9 , String A 3 , String O 1 , String U 5 , String B ) { <CR> this . title = M 9 ; <CR> this . receiver = A 3 ; <CR> this . content = O 1 ; <CR> this . sender = U 5 ; <CR> this . date = B ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] B 8 ) { <CR> Letter J 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter z 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter y 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList F 8 = { J 4 , z 7 , y 0 } ; <CR> for ( Letter o 0 : F 8 ) <CR> o 0 . display ( ) ; <CR> } <CR> } <CR> <EOC>