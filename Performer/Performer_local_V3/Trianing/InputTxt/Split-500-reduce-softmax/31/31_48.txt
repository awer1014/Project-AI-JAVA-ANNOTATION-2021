<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String X 3 , String V 1 , String K 1 , String T , String v 4 ) { <CR> super ( X 3 , V 1 , K 1 , T , v 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String f 1 , String i 3 , String g , String u 6 , String F 1 ) { <CR> super ( f 1 , i 3 , g , u 6 , F 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String Q 9 , String y 4 , String A 9 , String s 8 , String F 2 ) { <CR> this . title = Q 9 ; <CR> this . receiver = y 4 ; <CR> this . content = A 9 ; <CR> this . sender = s 8 ; <CR> this . date = F 2 ; <CR> } <CR> public int compareTo ( Object Y 7 ) { <CR> Letter i 8 = ( Letter ) Y 7 ; <CR> if ( this . getDate ( ) . compareTo ( i 8 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( i 8 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] c 1 ) { <CR> Letter k 7 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter V 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter f 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList T 8 = { k 7 , V 2 , f 0 } ; <CR> for ( Letter H 6 : T 8 ) <CR> H 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>