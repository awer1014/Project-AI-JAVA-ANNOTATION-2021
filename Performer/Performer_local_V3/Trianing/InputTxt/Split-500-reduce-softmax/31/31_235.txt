<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String o 0 , String H 0 , String C 9 , String A 7 , String F 6 ) { <CR> super ( o 0 , H 0 , C 9 , A 7 , F 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String Q 2 , String M 2 , String C , String j 1 , String W 3 ) { <CR> super ( Q 2 , M 2 , C , j 1 , W 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String H 1 , String i 2 , String k 8 , String E 9 , String L ) { <CR> this . title = H 1 ; <CR> this . receiver = i 2 ; <CR> this . content = k 8 ; <CR> this . sender = E 9 ; <CR> this . date = L ; <CR> } <CR> abstract void display ( ) ; <CR> public int compareTo ( Object L 4 ) { <CR> Letter S 8 = ( Letter ) L 4 ; <CR> if ( this . getDate ( ) . compareTo ( S 8 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( S 8 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] G 0 ) { <CR> Letter Q 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter l 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter g 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList K 0 = { Q 4 , l 9 , g 2 } ; <CR> for ( Letter J 3 : K 0 ) <CR> J 3 . display ( ) ; <CR> } <CR> } <CR> <EOC>