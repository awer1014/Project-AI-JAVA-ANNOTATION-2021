<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String V 0 , String z 3 , String S 6 , String P 1 , String R 6 ) { <CR> super ( V 0 , z 3 , S 6 , P 1 , R 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String y 0 , String q 9 , String n 8 , String W 2 , String D 9 ) { <CR> super ( y 0 , q 9 , n 8 , W 2 , D 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String t 3 , String V 3 , String j 2 , String N 5 , String o 7 ) { <CR> this . title = t 3 ; <CR> this . receiver = V 3 ; <CR> this . content = j 2 ; <CR> this . sender = N 5 ; <CR> this . date = o 7 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> public int compareTo ( Object c ) { <CR> Letter w = ( Letter ) c ; <CR> if ( this . getDate ( ) . compareTo ( w . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( w . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] E 4 ) { <CR> Letter F 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter P 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter x 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList t 9 = { F 6 , P 7 , x 0 } ; <CR> for ( Letter b 8 : t 9 ) <CR> b 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>