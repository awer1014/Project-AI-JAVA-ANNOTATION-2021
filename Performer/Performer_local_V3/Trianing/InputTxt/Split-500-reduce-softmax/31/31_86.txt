<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String w 0 , String h , String w 2 , String V 1 , String Z 0 ) { <CR> super ( w 0 , h , w 2 , V 1 , Z 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String O 2 , String W 9 , String Q 9 , String D 0 , String D 5 ) { <CR> super ( O 2 , W 9 , Q 9 , D 0 , D 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> public int compareTo ( Object t 7 ) { <CR> Letter a 0 = ( Letter ) t 7 ; <CR> if ( this . getDate ( ) . compareTo ( a 0 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( a 0 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String M , String T 9 , String W 0 , String J 3 , String n 1 ) { <CR> this . title = M ; <CR> this . receiver = T 9 ; <CR> this . content = W 0 ; <CR> this . sender = J 3 ; <CR> this . date = n 1 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] T 0 ) { <CR> Letter e 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter J 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Q 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList E 3 = { e 1 , J 1 , Q 1 } ; <CR> for ( Letter S 4 : E 3 ) <CR> S 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>