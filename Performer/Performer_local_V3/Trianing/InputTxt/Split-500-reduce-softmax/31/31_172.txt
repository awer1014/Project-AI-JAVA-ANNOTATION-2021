<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String T 0 , String V 5 , String E 7 , String T 4 , String Y 5 ) { <CR> super ( T 0 , V 5 , E 7 , T 4 , Y 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String T 7 , String P 7 , String G 2 , String N 3 , String R 0 ) { <CR> super ( T 7 , P 7 , G 2 , N 3 , R 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> public int compareTo ( Object G ) { <CR> Letter T 2 = ( Letter ) G ; <CR> if ( this . getDate ( ) . compareTo ( T 2 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( T 2 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String N , String y 3 , String D , String M , String W 3 ) { <CR> this . title = N ; <CR> this . receiver = y 3 ; <CR> this . content = D ; <CR> this . sender = M ; <CR> this . date = W 3 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] v 6 ) { <CR> Letter G 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter m 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter I 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList i 7 = { G 5 , m 4 , I 0 } ; <CR> for ( Letter C 3 : i 7 ) <CR> C 3 . display ( ) ; <CR> } <CR> } <CR> <EOC>