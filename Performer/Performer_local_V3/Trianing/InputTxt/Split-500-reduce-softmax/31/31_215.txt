<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String T 8 , String q , String L 3 , String y 2 , String H 8 ) { <CR> super ( T 8 , q , L 3 , y 2 , H 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String M 0 , String d 6 , String c 7 , String C 7 , String i 1 ) { <CR> super ( M 0 , d 6 , c 7 , C 7 , i 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object L 9 ) { <CR> Letter t 0 = ( Letter ) L 9 ; <CR> if ( this . getDate ( ) . compareTo ( t 0 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( t 0 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String p 8 , String z 1 , String S 9 , String G 8 , String r 1 ) { <CR> this . title = p 8 ; <CR> this . receiver = z 1 ; <CR> this . content = S 9 ; <CR> this . sender = G 8 ; <CR> this . date = r 1 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] M 5 ) { <CR> Letter d 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Z 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter b 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList w 8 = { d 6 , Z 3 , b 9 } ; <CR> for ( Letter f 4 : w 8 ) <CR> f 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>