<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String A 6 , String z 3 , String W 3 , String G 1 , String w 4 ) { <CR> super ( A 6 , z 3 , W 3 , G 1 , w 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String I , String l 4 , String e 3 , String w 3 , String F 7 ) { <CR> super ( I , l 4 , e 3 , w 3 , F 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object N 7 ) { <CR> Letter Z = ( Letter ) N 7 ; <CR> if ( this . getDate ( ) . compareTo ( Z . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( Z . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> Letter ( String W 6 , String f 2 , String v 9 , String N 3 , String J 8 ) { <CR> this . title = W 6 ; <CR> this . receiver = f 2 ; <CR> this . content = v 9 ; <CR> this . sender = N 3 ; <CR> this . date = J 8 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] C 1 ) { <CR> Letter y 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter W 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter U 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList g 5 = { y 9 , W 1 , U 2 } ; <CR> for ( Letter t 2 : g 5 ) <CR> t 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>