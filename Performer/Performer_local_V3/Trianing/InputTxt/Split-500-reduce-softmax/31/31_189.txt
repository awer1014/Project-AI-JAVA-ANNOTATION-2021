<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String C 9 , String m 3 , String j 2 , String z 9 , String e ) { <CR> super ( C 9 , m 3 , j 2 , z 9 , e ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String c 9 , String R 4 , String Y 0 , String c 1 , String l ) { <CR> super ( c 9 , R 4 , Y 0 , c 1 , l ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String Y 6 , String Y 8 , String V 0 , String v , String D 5 ) { <CR> this . title = Y 6 ; <CR> this . receiver = Y 8 ; <CR> this . content = V 0 ; <CR> this . sender = v ; <CR> this . date = D 5 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object L 1 ) { <CR> Letter M 0 = ( Letter ) L 1 ; <CR> if ( this . getDate ( ) . compareTo ( M 0 . getDate ( ) ) < <STRING> ) { <CR> return <STRING> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( M 0 . getDate ( ) ) > <STRING> ) { <CR> return - <STRING> ; <CR> } <CR> else { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] u 7 ) { <CR> Letter K = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter n 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter J = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList V 1 = { K , n 3 , J } ; <CR> for ( Letter Z 1 : V 1 ) <CR> Z 1 . display ( ) ; <CR> } <CR> } <CR> <EOC>