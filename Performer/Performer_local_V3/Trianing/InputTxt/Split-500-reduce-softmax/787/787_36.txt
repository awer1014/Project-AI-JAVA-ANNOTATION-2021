<BOC> public class Homework extends require { <CR> public Homework ( student m 3 , String b 1 , String z 4 , String E ) { <CR> super ( m 3 , b 1 , z 4 , E ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student J 6 , String C , String c 9 , String P 6 ) { <CR> super ( J 6 , C , c 9 , P 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student l 2 , String Z 5 , String v 4 , String n 3 ) { <CR> super ( l 2 , Z 5 , v 4 , n 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> public require ( student T 1 , String S , String y 3 , String X ) { <CR> student = T 1 ; <CR> id = S ; <CR> date = y 3 ; <CR> type = X ; <CR> } <CR> private student student ; <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> private String id , date , type ; <CR> } <CR> <EOC> <BOC> public class student { <CR> student ( String k 0 , String S 7 , double Q , double n 3 ) { <CR> id = k 0 ; <CR> name = S 7 ; <CR> grade = Q ; <CR> gradepp = n 3 ; <CR> } <CR> private double grade , gradepp ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> private String id , name ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] S 7 ) { <CR> Scanner z 2 = new Scanner ( System . in ) ; <CR> boolean e 8 = <STRING> ; <CR> while ( e 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String I = z 2 . nextLine ( ) ; <CR> if ( I . equals ( <STRING> ) ) { <CR> e 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String Q 2 = z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d = z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double h 3 = z 2 . nextDouble ( ) ; <CR> z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double F 5 = z 2 . nextDouble ( ) ; <CR> z 2 . nextLine ( ) ; <CR> String M , O 0 ; <CR> student r 4 = new student ( Q 2 , d , h 3 , F 5 ) ; <CR> require K 8 = <STRING> ; <CR> if ( I . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M = z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 0 = z 2 . nextLine ( ) ; <CR> K 8 = new Quiz ( r 4 , I , M , O 0 ) ; <CR> } <CR> else if ( I . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M = z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 0 = z 2 . nextLine ( ) ; <CR> K 8 = new Homework ( r 4 , I , M , O 0 ) ; <CR> } <CR> else if ( I . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M = z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 0 = z 2 . nextLine ( ) ; <CR> K 8 = new Report ( r 4 , I , M , O 0 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( K 8 ! = <STRING> ) { <CR> r 4 . display ( ) ; <CR> K 8 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>