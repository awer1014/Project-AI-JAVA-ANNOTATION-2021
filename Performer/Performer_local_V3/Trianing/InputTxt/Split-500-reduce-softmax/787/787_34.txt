<BOC> public class Homework extends require { <CR> public Homework ( student N 0 , String v 0 , String A 5 , String j 0 ) { <CR> super ( N 0 , v 0 , A 5 , j 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student j 5 , String N 9 , String U 8 , String p 2 ) { <CR> super ( j 5 , N 9 , U 8 , p 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student V 8 , String Y 1 , String a 5 , String b 3 ) { <CR> super ( V 8 , Y 1 , a 5 , b 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> private student student ; <CR> public require ( student C 7 , String T 5 , String J 1 , String t 4 ) { <CR> student = C 7 ; <CR> id = T 5 ; <CR> date = J 1 ; <CR> type = t 4 ; <CR> } <CR> private String id , date , type ; <CR> } <CR> <EOC> <BOC> public class student { <CR> private String id , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> private double grade , gradepp ; <CR> student ( String v , String Z , double L , double B 7 ) { <CR> id = v ; <CR> name = Z ; <CR> grade = L ; <CR> gradepp = B 7 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] p 8 ) { <CR> Scanner n 5 = new Scanner ( System . in ) ; <CR> boolean M 9 = <STRING> ; <CR> while ( M 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String g 1 = n 5 . nextLine ( ) ; <CR> if ( g 1 . equals ( <STRING> ) ) { <CR> M 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String I 9 = n 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x 8 = n 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double E 1 = n 5 . nextDouble ( ) ; <CR> n 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double R 9 = n 5 . nextDouble ( ) ; <CR> n 5 . nextLine ( ) ; <CR> String x 0 , l 5 ; <CR> student k 5 = new student ( I 9 , x 8 , E 1 , R 9 ) ; <CR> require J 7 = <STRING> ; <CR> if ( g 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 0 = n 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 5 = n 5 . nextLine ( ) ; <CR> J 7 = new Quiz ( k 5 , g 1 , x 0 , l 5 ) ; <CR> } <CR> else if ( g 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 0 = n 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 5 = n 5 . nextLine ( ) ; <CR> J 7 = new Homework ( k 5 , g 1 , x 0 , l 5 ) ; <CR> } <CR> else if ( g 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 0 = n 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 5 = n 5 . nextLine ( ) ; <CR> J 7 = new Report ( k 5 , g 1 , x 0 , l 5 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( J 7 ! = <STRING> ) { <CR> k 5 . display ( ) ; <CR> J 7 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>