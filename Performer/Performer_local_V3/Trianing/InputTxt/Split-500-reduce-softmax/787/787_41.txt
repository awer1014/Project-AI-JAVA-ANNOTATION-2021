<BOC> public class Homework extends require { <CR> public Homework ( student S 9 , String B 4 , String d 6 , String T ) { <CR> super ( S 9 , B 4 , d 6 , T ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student t 5 , String x 3 , String d 6 , String I 6 ) { <CR> super ( t 5 , x 3 , d 6 , I 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student m 8 , String J 5 , String U 4 , String G 5 ) { <CR> super ( m 8 , J 5 , U 4 , G 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> private student student ; <CR> private String id , date , type ; <CR> public require ( student F 1 , String J 6 , String b , String I 7 ) { <CR> student = F 1 ; <CR> id = J 6 ; <CR> date = b ; <CR> type = I 7 ; <CR> } <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class student { <CR> private double grade , gradepp ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> student ( String r 6 , String B , double y 6 , double c 6 ) { <CR> id = r 6 ; <CR> name = B ; <CR> grade = y 6 ; <CR> gradepp = c 6 ; <CR> } <CR> private String id , name ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] q 5 ) { <CR> Scanner r 3 = new Scanner ( System . in ) ; <CR> boolean o 7 = <STRING> ; <CR> while ( o 7 ) { <CR> System . out . print ( <STRING> ) ; <CR> String g = r 3 . nextLine ( ) ; <CR> if ( g . equals ( <STRING> ) ) { <CR> o 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String G 8 = r 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String K 1 = r 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double i 0 = r 3 . nextDouble ( ) ; <CR> r 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double O 2 = r 3 . nextDouble ( ) ; <CR> r 3 . nextLine ( ) ; <CR> String e , m 7 ; <CR> student P 2 = new student ( G 8 , K 1 , i 0 , O 2 ) ; <CR> require f = <STRING> ; <CR> if ( g . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e = r 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 7 = r 3 . nextLine ( ) ; <CR> f = new Quiz ( P 2 , g , e , m 7 ) ; <CR> } <CR> else if ( g . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e = r 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 7 = r 3 . nextLine ( ) ; <CR> f = new Homework ( P 2 , g , e , m 7 ) ; <CR> } <CR> else if ( g . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e = r 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 7 = r 3 . nextLine ( ) ; <CR> f = new Report ( P 2 , g , e , m 7 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( f ! = <STRING> ) { <CR> P 2 . display ( ) ; <CR> f . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>