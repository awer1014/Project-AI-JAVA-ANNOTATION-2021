<BOC> public class Homework extends require { <CR> public Homework ( student a 4 , String c 2 , String j 9 , String t 2 ) { <CR> super ( a 4 , c 2 , j 9 , t 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student H 4 , String y 3 , String k 1 , String K ) { <CR> super ( H 4 , y 3 , k 1 , K ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student a 5 , String y 4 , String e 7 , String s 3 ) { <CR> super ( a 5 , y 4 , e 7 , s 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> private String id , date , type ; <CR> public require ( student s 1 , String J 1 , String y 0 , String H ) { <CR> student = s 1 ; <CR> id = J 1 ; <CR> date = y 0 ; <CR> type = H ; <CR> } <CR> private student student ; <CR> } <CR> <EOC> <BOC> public class student { <CR> private double grade , gradepp ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> private String id , name ; <CR> student ( String m 4 , String d 9 , double l 4 , double a 2 ) { <CR> id = m 4 ; <CR> name = d 9 ; <CR> grade = l 4 ; <CR> gradepp = a 2 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] k 0 ) { <CR> Scanner U = new Scanner ( System . in ) ; <CR> boolean V 5 = <STRING> ; <CR> while ( V 5 ) { <CR> System . out . print ( <STRING> ) ; <CR> String n 2 = U . nextLine ( ) ; <CR> if ( n 2 . equals ( <STRING> ) ) { <CR> V 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String w 4 = U . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String N 8 = U . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double O 0 = U . nextDouble ( ) ; <CR> U . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double F 2 = U . nextDouble ( ) ; <CR> U . nextLine ( ) ; <CR> String T , H 6 ; <CR> student p 8 = new student ( w 4 , N 8 , O 0 , F 2 ) ; <CR> require i 7 = <STRING> ; <CR> if ( n 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T = U . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 6 = U . nextLine ( ) ; <CR> i 7 = new Quiz ( p 8 , n 2 , T , H 6 ) ; <CR> } <CR> else if ( n 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T = U . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 6 = U . nextLine ( ) ; <CR> i 7 = new Homework ( p 8 , n 2 , T , H 6 ) ; <CR> } <CR> else if ( n 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T = U . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> H 6 = U . nextLine ( ) ; <CR> i 7 = new Report ( p 8 , n 2 , T , H 6 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( i 7 ! = <STRING> ) { <CR> p 8 . display ( ) ; <CR> i 7 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>