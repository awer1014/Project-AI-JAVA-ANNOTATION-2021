<BOC> public class Homework extends require { <CR> public Homework ( student y 7 , String h 3 , String l 3 , String U 6 ) { <CR> super ( y 7 , h 3 , l 3 , U 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student N 9 , String k 7 , String w 7 , String w 4 ) { <CR> super ( N 9 , k 7 , w 7 , w 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student f 4 , String I 4 , String a 3 , String y 9 ) { <CR> super ( f 4 , I 4 , a 3 , y 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> public require ( student T , String J 6 , String L , String Y 2 ) { <CR> student = T ; <CR> id = J 6 ; <CR> date = L ; <CR> type = Y 2 ; <CR> } <CR> private student student ; <CR> private String id , date , type ; <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class student { <CR> student ( String c 4 , String P 3 , double n 8 , double j 6 ) { <CR> id = c 4 ; <CR> name = P 3 ; <CR> grade = n 8 ; <CR> gradepp = j 6 ; <CR> } <CR> private double grade , gradepp ; <CR> private String id , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] P 6 ) { <CR> Scanner u 5 = new Scanner ( System . in ) ; <CR> boolean Y 9 = <STRING> ; <CR> while ( Y 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String Q 6 = u 5 . nextLine ( ) ; <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> Y 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String H 2 = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String A 1 = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double E 3 = u 5 . nextDouble ( ) ; <CR> u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double p 6 = u 5 . nextDouble ( ) ; <CR> u 5 . nextLine ( ) ; <CR> String p , z 6 ; <CR> student c 4 = new student ( H 2 , A 1 , E 3 , p 6 ) ; <CR> require n 5 = <STRING> ; <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> p = u 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 6 = u 5 . nextLine ( ) ; <CR> n 5 = new Quiz ( c 4 , Q 6 , p , z 6 ) ; <CR> } <CR> else if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> p = u 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 6 = u 5 . nextLine ( ) ; <CR> n 5 = new Homework ( c 4 , Q 6 , p , z 6 ) ; <CR> } <CR> else if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> p = u 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 6 = u 5 . nextLine ( ) ; <CR> n 5 = new Report ( c 4 , Q 6 , p , z 6 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( n 5 ! = <STRING> ) { <CR> c 4 . display ( ) ; <CR> n 5 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>