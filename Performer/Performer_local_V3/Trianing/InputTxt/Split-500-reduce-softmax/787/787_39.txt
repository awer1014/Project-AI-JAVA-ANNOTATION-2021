<BOC> public class Homework extends require { <CR> public Homework ( student k 3 , String I 7 , String B 7 , String m ) { <CR> super ( k 3 , I 7 , B 7 , m ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student i 3 , String c 4 , String y 5 , String V 3 ) { <CR> super ( i 3 , c 4 , y 5 , V 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student b 2 , String g 3 , String B 1 , String K 5 ) { <CR> super ( b 2 , g 3 , B 1 , K 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> private String id , date , type ; <CR> private student student ; <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> public require ( student S 1 , String B 8 , String R 2 , String M 4 ) { <CR> student = S 1 ; <CR> id = B 8 ; <CR> date = R 2 ; <CR> type = M 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class student { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> student ( String C 2 , String S , double r 7 , double K 7 ) { <CR> id = C 2 ; <CR> name = S ; <CR> grade = r 7 ; <CR> gradepp = K 7 ; <CR> } <CR> private String id , name ; <CR> private double grade , gradepp ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] s 3 ) { <CR> Scanner y 6 = new Scanner ( System . in ) ; <CR> boolean y 9 = <STRING> ; <CR> while ( y 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String W 6 = y 6 . nextLine ( ) ; <CR> if ( W 6 . equals ( <STRING> ) ) { <CR> y 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String H 4 = y 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String B 4 = y 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double U = y 6 . nextDouble ( ) ; <CR> y 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double N 3 = y 6 . nextDouble ( ) ; <CR> y 6 . nextLine ( ) ; <CR> String s 9 , h 3 ; <CR> student r = new student ( H 4 , B 4 , U , N 3 ) ; <CR> require g 8 = <STRING> ; <CR> if ( W 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 9 = y 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 3 = y 6 . nextLine ( ) ; <CR> g 8 = new Quiz ( r , W 6 , s 9 , h 3 ) ; <CR> } <CR> else if ( W 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 9 = y 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 3 = y 6 . nextLine ( ) ; <CR> g 8 = new Homework ( r , W 6 , s 9 , h 3 ) ; <CR> } <CR> else if ( W 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 9 = y 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 3 = y 6 . nextLine ( ) ; <CR> g 8 = new Report ( r , W 6 , s 9 , h 3 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( g 8 ! = <STRING> ) { <CR> r . display ( ) ; <CR> g 8 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>