<BOC> abstract public class Evaluation { <CR> protected String id ; <CR> abstract public void A ( ) ; <CR> abstract public void B ( ) ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> protected double g ; <CR> protected String type ; <CR> protected double w ; <CR> public Evaluation ( String B 2 , String X 3 , double Z 4 , double D 0 , String i 9 ) { <CR> this . id = B 2 ; <CR> this . name = X 3 ; <CR> this . g = Z 4 ; <CR> this . w = D 0 ; <CR> this . type = i 9 ; <CR> } <CR> abstract public void Dis ( String i 4 , String A 9 ) ; <CR> protected String name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String N 8 , String d 4 , double A 7 , double L 9 , String Q 7 ) { <CR> super ( N 8 , d 4 , A 7 , L 9 , Q 7 ) ; <CR> } <CR> public void Dis ( String G 5 , String V ) { <CR> System . out . println ( <STRING> + G 5 ) ; <CR> System . out . println ( <STRING> + V ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void Dis ( String X 1 , String g 1 ) { <CR> System . out . println ( <STRING> + X 1 ) ; <CR> System . out . println ( <STRING> + g 1 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String z 0 , String Q 2 , double a 8 , double U 5 , String f 4 ) { <CR> super ( z 0 , Q 2 , a 8 , U 5 , f 4 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void Dis ( String t 7 , String F 9 ) { <CR> System . out . println ( <STRING> + t 7 ) ; <CR> System . out . println ( <STRING> + F 9 ) ; <CR> } <CR> public Report ( String C 4 , String q 8 , double g 3 , double t 4 , String d 6 ) { <CR> super ( C 4 , q 8 , g 3 , t 4 , d 6 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] L 8 ) { <CR> Scanner P 0 = new Scanner ( System . in ) ; <CR> boolean Q 6 = <STRING> ; <CR> while ( Q 6 ) { <CR> System . out . print ( <STRING> ) ; <CR> String r 4 = P 0 . nextLine ( ) ; <CR> if ( r 4 . equals ( <STRING> ) ) { <CR> Q 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String N 4 = P 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g 8 = P 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double Q 3 = P 0 . nextDouble ( ) ; <CR> String w 0 = P 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double r 3 = P 0 . nextDouble ( ) ; <CR> w 0 = P 0 . nextLine ( ) ; <CR> Evaluation i 0 ; <CR> if ( r 4 . equals ( <STRING> ) ) <CR> i 0 = new Exam ( N 4 , g 8 , Q 3 , r 3 , r 4 ) ; <CR> else if ( r 4 . equals ( <STRING> ) ) <CR> i 0 = new HomeWork ( N 4 , g 8 , Q 3 , r 3 , r 4 ) ; <CR> else <CR> i 0 = new Report ( N 4 , g 8 , Q 3 , r 3 , r 4 ) ; <CR> i 0 . A ( ) ; <CR> String o 7 = P 0 . nextLine ( ) ; <CR> i 0 . B ( ) ; <CR> String T 1 = P 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 0 . display ( ) ; <CR> i 0 . Dis ( o 7 , T 1 ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 0 = P 0 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>