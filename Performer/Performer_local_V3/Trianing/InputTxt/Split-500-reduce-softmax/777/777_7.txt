<BOC> abstract public class Evaluation { <CR> protected double w ; <CR> protected String type ; <CR> public Evaluation ( String z , String x 5 , double o 4 , double j 2 , String X 2 ) { <CR> this . id = z ; <CR> this . name = x 5 ; <CR> this . g = o 4 ; <CR> this . w = j 2 ; <CR> this . type = X 2 ; <CR> } <CR> abstract public void A ( ) ; <CR> protected String name ; <CR> protected String id ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> protected double g ; <CR> abstract public void Dis ( String o 9 , String a 6 ) ; <CR> abstract public void B ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String o 6 , String d 8 , double E 5 , double P 7 , String q 8 ) { <CR> super ( o 6 , d 8 , E 5 , P 7 , q 8 ) ; <CR> } <CR> public void Dis ( String e 1 , String X 9 ) { <CR> System . out . println ( <STRING> + e 1 ) ; <CR> System . out . println ( <STRING> + X 9 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void Dis ( String D 8 , String A 0 ) { <CR> System . out . println ( <STRING> + D 8 ) ; <CR> System . out . println ( <STRING> + A 0 ) ; <CR> } <CR> public HomeWork ( String v 3 , String R 9 , double g 6 , double r 7 , String p 5 ) { <CR> super ( v 3 , R 9 , g 6 , r 7 , p 5 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String L 4 , String x 0 , double V 1 , double E 0 , String o ) { <CR> super ( L 4 , x 0 , V 1 , E 0 , o ) ; <CR> } <CR> public void Dis ( String b 1 , String K 6 ) { <CR> System . out . println ( <STRING> + b 1 ) ; <CR> System . out . println ( <STRING> + K 6 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] L 8 ) { <CR> Scanner r 0 = new Scanner ( System . in ) ; <CR> boolean t 9 = <STRING> ; <CR> while ( t 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String L 3 = r 0 . nextLine ( ) ; <CR> if ( L 3 . equals ( <STRING> ) ) { <CR> t 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String i 7 = r 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d 8 = r 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double g = r 0 . nextDouble ( ) ; <CR> String b 6 = r 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double g 9 = r 0 . nextDouble ( ) ; <CR> b 6 = r 0 . nextLine ( ) ; <CR> Evaluation D 9 ; <CR> if ( L 3 . equals ( <STRING> ) ) <CR> D 9 = new Exam ( i 7 , d 8 , g , g 9 , L 3 ) ; <CR> else if ( L 3 . equals ( <STRING> ) ) <CR> D 9 = new HomeWork ( i 7 , d 8 , g , g 9 , L 3 ) ; <CR> else <CR> D 9 = new Report ( i 7 , d 8 , g , g 9 , L 3 ) ; <CR> D 9 . A ( ) ; <CR> String M 7 = r 0 . nextLine ( ) ; <CR> D 9 . B ( ) ; <CR> String Y 3 = r 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 9 . display ( ) ; <CR> D 9 . Dis ( M 7 , Y 3 ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 6 = r 0 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>