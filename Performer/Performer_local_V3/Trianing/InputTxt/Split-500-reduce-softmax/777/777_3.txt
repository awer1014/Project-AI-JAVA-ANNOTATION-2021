<BOC> abstract public class Evaluation { <CR> protected double g ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> abstract public void Dis ( String L 1 , String V ) ; <CR> protected String id ; <CR> protected String name ; <CR> abstract public void A ( ) ; <CR> protected String type ; <CR> public Evaluation ( String o 0 , String I 3 , double y 1 , double X 8 , String g ) { <CR> this . id = o 0 ; <CR> this . name = I 3 ; <CR> this . g = y 1 ; <CR> this . w = X 8 ; <CR> this . type = g ; <CR> } <CR> abstract public void B ( ) ; <CR> protected double w ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void Dis ( String P 6 , String U 5 ) { <CR> System . out . println ( <STRING> + P 6 ) ; <CR> System . out . println ( <STRING> + U 5 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String u 2 , String R 8 , double i 7 , double B 6 , String m ) { <CR> super ( u 2 , R 8 , i 7 , B 6 , m ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String X 9 , String h 8 , double v 0 , double k 9 , String T 3 ) { <CR> super ( X 9 , h 8 , v 0 , k 9 , T 3 ) ; <CR> } <CR> public void Dis ( String p 2 , String K ) { <CR> System . out . println ( <STRING> + p 2 ) ; <CR> System . out . println ( <STRING> + K ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void Dis ( String k 3 , String w 0 ) { <CR> System . out . println ( <STRING> + k 3 ) ; <CR> System . out . println ( <STRING> + w 0 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String R 1 , String r , double G 8 , double B 3 , String G 2 ) { <CR> super ( R 1 , r , G 8 , B 3 , G 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] m ) { <CR> Scanner F 8 = new Scanner ( System . in ) ; <CR> boolean t 1 = <STRING> ; <CR> while ( t 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String b 2 = F 8 . nextLine ( ) ; <CR> if ( b 2 . equals ( <STRING> ) ) { <CR> t 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String Z 9 = F 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String U 8 = F 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double a = F 8 . nextDouble ( ) ; <CR> String z 4 = F 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double A 1 = F 8 . nextDouble ( ) ; <CR> z 4 = F 8 . nextLine ( ) ; <CR> Evaluation Q 8 ; <CR> if ( b 2 . equals ( <STRING> ) ) <CR> Q 8 = new Exam ( Z 9 , U 8 , a , A 1 , b 2 ) ; <CR> else if ( b 2 . equals ( <STRING> ) ) <CR> Q 8 = new HomeWork ( Z 9 , U 8 , a , A 1 , b 2 ) ; <CR> else <CR> Q 8 = new Report ( Z 9 , U 8 , a , A 1 , b 2 ) ; <CR> Q 8 . A ( ) ; <CR> String d 4 = F 8 . nextLine ( ) ; <CR> Q 8 . B ( ) ; <CR> String s 9 = F 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 8 . display ( ) ; <CR> Q 8 . Dis ( d 4 , s 9 ) ; <CR> System . out . print ( <STRING> ) ; <CR> z 4 = F 8 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>