<BOC> abstract public class Evaluation { <CR> protected double g ; <CR> protected String type ; <CR> public Evaluation ( String B 4 , String I 2 , double r 3 , double i 7 , String k 9 ) { <CR> this . id = B 4 ; <CR> this . name = I 2 ; <CR> this . g = r 3 ; <CR> this . w = i 7 ; <CR> this . type = k 9 ; <CR> } <CR> abstract public void A ( ) ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> protected String name ; <CR> protected String id ; <CR> abstract public void B ( ) ; <CR> abstract public void Dis ( String s 6 , String M 6 ) ; <CR> protected double w ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void Dis ( String c 2 , String c 9 ) { <CR> System . out . println ( <STRING> + c 2 ) ; <CR> System . out . println ( <STRING> + c 9 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String W 1 , String E 6 , double l 3 , double r 5 , String c 0 ) { <CR> super ( W 1 , E 6 , l 3 , r 5 , c 0 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String V , String S 1 ) { <CR> System . out . println ( <STRING> + V ) ; <CR> System . out . println ( <STRING> + S 1 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String i 7 , String a 5 , double g 3 , double m 7 , String m 1 ) { <CR> super ( i 7 , a 5 , g 3 , m 7 , m 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void Dis ( String Y 3 , String E 6 ) { <CR> System . out . println ( <STRING> + Y 3 ) ; <CR> System . out . println ( <STRING> + E 6 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String o 7 , String z 5 , double F 5 , double i 7 , String k 0 ) { <CR> super ( o 7 , z 5 , F 5 , i 7 , k 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] K 6 ) { <CR> Scanner R 2 = new Scanner ( System . in ) ; <CR> boolean e 3 = <STRING> ; <CR> while ( e 3 ) { <CR> System . out . print ( <STRING> ) ; <CR> String y 4 = R 2 . nextLine ( ) ; <CR> if ( y 4 . equals ( <STRING> ) ) { <CR> e 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String a 3 = R 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 9 = R 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double r 1 = R 2 . nextDouble ( ) ; <CR> String L 5 = R 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double b 9 = R 2 . nextDouble ( ) ; <CR> L 5 = R 2 . nextLine ( ) ; <CR> Evaluation T 5 ; <CR> if ( y 4 . equals ( <STRING> ) ) <CR> T 5 = new Exam ( a 3 , p 9 , r 1 , b 9 , y 4 ) ; <CR> else if ( y 4 . equals ( <STRING> ) ) <CR> T 5 = new HomeWork ( a 3 , p 9 , r 1 , b 9 , y 4 ) ; <CR> else <CR> T 5 = new Report ( a 3 , p 9 , r 1 , b 9 , y 4 ) ; <CR> T 5 . A ( ) ; <CR> String K 8 = R 2 . nextLine ( ) ; <CR> T 5 . B ( ) ; <CR> String M 4 = R 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> T 5 . display ( ) ; <CR> T 5 . Dis ( K 8 , M 4 ) ; <CR> System . out . print ( <STRING> ) ; <CR> L 5 = R 2 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>