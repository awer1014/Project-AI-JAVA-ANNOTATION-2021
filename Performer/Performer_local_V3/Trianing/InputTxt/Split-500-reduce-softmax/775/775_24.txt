<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] K 5 ) { <CR> Scanner r 1 = new Scanner ( System . in ) ; <CR> String C 4 , o 0 , p 1 , p , X 4 , l 9 , w 3 ; <CR> System . out . print ( <STRING> ) ; <CR> C 4 = r 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = r 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 1 = r 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p = r 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 4 = r 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 9 = r 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 3 = r 1 . nextLine ( ) ; <CR> if ( C 4 . equals ( <STRING> ) ) { <CR> Kindsoftest y 6 = new Test ( p 1 , o 0 , p , l 9 , X 4 , w 3 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( C 4 . equals ( <STRING> ) ) { <CR> Kindsoftest y 6 = new Hwork ( p 1 , o 0 , p , l 9 , X 4 , w 3 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest y 6 = new Mind ( p 1 , o 0 , p , l 9 , X 4 , w 3 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String z , int u 3 , int H 0 , int T 0 , double o 1 , String h 5 ) { <CR> super ( z , u 3 , H 0 , T 0 , o 1 , h 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected String name , range ; <CR> public Kindsoftest ( String b 3 , int D 8 , int u , int l 6 , double Z 8 , String y 9 ) { <CR> this . id = D 8 ; <CR> this . name = b 3 ; <CR> this . gread = u ; <CR> this . gp = Z 8 ; <CR> this . date = l 6 ; <CR> this . range = y 9 ; <CR> } <CR> protected double gp ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String e 3 , int j 6 , int J 2 , int Q 4 , double q 8 , String o 6 ) { <CR> super ( e 3 , j 6 , J 2 , Q 4 , q 8 , o 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String O , int n 0 , int d 0 , int O 3 , double Q 2 , String w 2 ) { <CR> super ( O , n 0 , d 0 , O 3 , Q 2 , w 2 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>