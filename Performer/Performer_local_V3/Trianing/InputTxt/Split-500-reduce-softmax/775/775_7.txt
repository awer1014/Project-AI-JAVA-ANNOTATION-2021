<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] Z 6 ) { <CR> Scanner C 4 = new Scanner ( System . in ) ; <CR> String m 3 , G 9 , u 9 , e 9 , s 1 , X 7 , G 1 ; <CR> System . out . print ( <STRING> ) ; <CR> m 3 = C 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 9 = C 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 9 = C 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> e 9 = C 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 1 = C 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 7 = C 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 1 = C 4 . nextLine ( ) ; <CR> if ( m 3 . equals ( <STRING> ) ) { <CR> Kindsoftest s 8 = new Test ( u 9 , G 9 , e 9 , X 7 , s 1 , G 1 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( m 3 . equals ( <STRING> ) ) { <CR> Kindsoftest s 8 = new Hwork ( u 9 , G 9 , e 9 , X 7 , s 1 , G 1 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest s 8 = new Mind ( u 9 , G 9 , e 9 , X 7 , s 1 , G 1 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String t , int Z 1 , int I 9 , int c 6 , double c 2 , String O 0 ) { <CR> super ( t , Z 1 , I 9 , c 6 , c 2 , O 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> protected double gp ; <CR> public Kindsoftest ( String Z 2 , int F 9 , int H 9 , int I 6 , double z 6 , String f 7 ) { <CR> this . id = F 9 ; <CR> this . name = Z 2 ; <CR> this . gread = H 9 ; <CR> this . gp = z 6 ; <CR> this . date = I 6 ; <CR> this . range = f 7 ; <CR> } <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String i 9 , int q 1 , int w 0 , int O 0 , double x 5 , String P 9 ) { <CR> super ( i 9 , q 1 , w 0 , O 0 , x 5 , P 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String z 1 , int E 2 , int z 2 , int d 4 , double G 3 , String S 0 ) { <CR> super ( z 1 , E 2 , z 2 , d 4 , G 3 , S 0 ) ; <CR> } <CR> } <CR> <EOC>