<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] f 1 ) { <CR> Scanner Q 8 = new Scanner ( System . in ) ; <CR> String P 6 , q 4 , g 1 , F , T 8 , V 5 , X 9 ; <CR> System . out . print ( <STRING> ) ; <CR> P 6 = Q 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 4 = Q 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 1 = Q 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F = Q 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 8 = Q 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V 5 = Q 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 9 = Q 8 . nextLine ( ) ; <CR> if ( P 6 . equals ( <STRING> ) ) { <CR> Kindsoftest o 6 = new Test ( g 1 , q 4 , F , V 5 , T 8 , X 9 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( P 6 . equals ( <STRING> ) ) { <CR> Kindsoftest o 6 = new Hwork ( g 1 , q 4 , F , V 5 , T 8 , X 9 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest o 6 = new Mind ( g 1 , q 4 , F , V 5 , T 8 , X 9 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String k 2 , int H 0 , int u 1 , int S 4 , double a 9 , String K 7 ) { <CR> super ( k 2 , H 0 , u 1 , S 4 , a 9 , K 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> public Kindsoftest ( String U 6 , int v 3 , int k 0 , int Z 1 , double T 2 , String g 8 ) { <CR> this . id = v 3 ; <CR> this . name = U 6 ; <CR> this . gread = k 0 ; <CR> this . gp = T 2 ; <CR> this . date = Z 1 ; <CR> this . range = g 8 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String R 7 , int R , int D 8 , int Y 7 , double V 8 , String S 2 ) { <CR> super ( R 7 , R , D 8 , Y 7 , V 8 , S 2 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String K 9 , int I 5 , int X 4 , int R 9 , double R 0 , String B 3 ) { <CR> super ( K 9 , I 5 , X 4 , R 9 , R 0 , B 3 ) ; <CR> } <CR> } <CR> <EOC>