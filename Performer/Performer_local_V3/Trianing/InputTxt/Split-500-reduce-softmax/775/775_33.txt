<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] H 0 ) { <CR> Scanner j 6 = new Scanner ( System . in ) ; <CR> String E 8 , u 8 , D 6 , X 6 , w 1 , I 6 , s 1 ; <CR> System . out . print ( <STRING> ) ; <CR> E 8 = j 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 8 = j 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 6 = j 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 6 = j 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 1 = j 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 6 = j 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 1 = j 6 . nextLine ( ) ; <CR> if ( E 8 . equals ( <STRING> ) ) { <CR> Kindsoftest F 9 = new Test ( D 6 , u 8 , X 6 , I 6 , w 1 , s 1 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( E 8 . equals ( <STRING> ) ) { <CR> Kindsoftest F 9 = new Hwork ( D 6 , u 8 , X 6 , I 6 , w 1 , s 1 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest F 9 = new Mind ( D 6 , u 8 , X 6 , I 6 , w 1 , s 1 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String i 8 , int R 8 , int c , int z 8 , double x 8 , String X 0 ) { <CR> super ( i 8 , R 8 , c , z 8 , x 8 , X 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String p 7 , int m , int c 0 , int b 3 , double r 0 , String v ) { <CR> this . id = m ; <CR> this . name = p 7 ; <CR> this . gread = c 0 ; <CR> this . gp = r 0 ; <CR> this . date = b 3 ; <CR> this . range = v ; <CR> } <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String y 7 , int Q 6 , int q , int d , double A , String T 5 ) { <CR> super ( y 7 , Q 6 , q , d , A , T 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String z 4 , int v 3 , int K 0 , int v 9 , double Y 2 , String X 2 ) { <CR> super ( z 4 , v 3 , K 0 , v 9 , Y 2 , X 2 ) ; <CR> } <CR> } <CR> <EOC>