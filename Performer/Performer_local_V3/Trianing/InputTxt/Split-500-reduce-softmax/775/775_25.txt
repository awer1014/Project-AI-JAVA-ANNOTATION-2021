<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] W ) { <CR> Scanner l 5 = new Scanner ( System . in ) ; <CR> String v 5 , D 8 , d 9 , T 3 , Y 1 , c 8 , A ; <CR> System . out . print ( <STRING> ) ; <CR> v 5 = l 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 8 = l 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 9 = l 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 3 = l 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Y 1 = l 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 8 = l 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A = l 5 . nextLine ( ) ; <CR> if ( v 5 . equals ( <STRING> ) ) { <CR> Kindsoftest R 2 = new Test ( d 9 , D 8 , T 3 , c 8 , Y 1 , A ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( v 5 . equals ( <STRING> ) ) { <CR> Kindsoftest R 2 = new Hwork ( d 9 , D 8 , T 3 , c 8 , Y 1 , A ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest R 2 = new Mind ( d 9 , D 8 , T 3 , c 8 , Y 1 , A ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String F 1 , int n 3 , int b 8 , int Y 8 , double P , String M 4 ) { <CR> super ( F 1 , n 3 , b 8 , Y 8 , P , M 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected double gp ; <CR> public Kindsoftest ( String M 4 , int l 4 , int k 2 , int E 6 , double Y 4 , String V 3 ) { <CR> this . id = l 4 ; <CR> this . name = M 4 ; <CR> this . gread = k 2 ; <CR> this . gp = Y 4 ; <CR> this . date = E 6 ; <CR> this . range = V 3 ; <CR> } <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String d 0 , int Y 5 , int G 5 , int E 3 , double R 2 , String O 1 ) { <CR> super ( d 0 , Y 5 , G 5 , E 3 , R 2 , O 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String J 2 , int L 6 , int f , int V 7 , double N 4 , String h 9 ) { <CR> super ( J 2 , L 6 , f , V 7 , N 4 , h 9 ) ; <CR> } <CR> } <CR> <EOC>