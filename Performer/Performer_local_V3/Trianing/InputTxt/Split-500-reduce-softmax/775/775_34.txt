<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] c 3 ) { <CR> Scanner b 4 = new Scanner ( System . in ) ; <CR> String e 4 , B 8 , r 1 , p 7 , F 2 , A 6 , n 4 ; <CR> System . out . print ( <STRING> ) ; <CR> e 4 = b 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B 8 = b 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> r 1 = b 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 7 = b 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 2 = b 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 6 = b 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> n 4 = b 4 . nextLine ( ) ; <CR> if ( e 4 . equals ( <STRING> ) ) { <CR> Kindsoftest A 9 = new Test ( r 1 , B 8 , p 7 , A 6 , F 2 , n 4 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( e 4 . equals ( <STRING> ) ) { <CR> Kindsoftest A 9 = new Hwork ( r 1 , B 8 , p 7 , A 6 , F 2 , n 4 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest A 9 = new Mind ( r 1 , B 8 , p 7 , A 6 , F 2 , n 4 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String S 7 , int Q 2 , int k 3 , int O 6 , double v 1 , String f 4 ) { <CR> super ( S 7 , Q 2 , k 3 , O 6 , v 1 , f 4 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String w 0 , int m 7 , int j 7 , int o 7 , double e 1 , String O 1 ) { <CR> this . id = m 7 ; <CR> this . name = w 0 ; <CR> this . gread = j 7 ; <CR> this . gp = e 1 ; <CR> this . date = o 7 ; <CR> this . range = O 1 ; <CR> } <CR> protected double gp ; <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String g 4 , int r 7 , int O 3 , int u 8 , double h 7 , String j 5 ) { <CR> super ( g 4 , r 7 , O 3 , u 8 , h 7 , j 5 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String z , int o 0 , int V 0 , int e 1 , double Y 2 , String p 6 ) { <CR> super ( z , o 0 , V 0 , e 1 , Y 2 , p 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>