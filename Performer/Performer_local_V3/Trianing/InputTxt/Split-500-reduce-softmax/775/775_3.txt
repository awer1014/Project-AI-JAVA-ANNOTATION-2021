<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] w 2 ) { <CR> Scanner h 7 = new Scanner ( System . in ) ; <CR> String n 1 , i 4 , a 9 , b , N 8 , R 1 , f 5 ; <CR> System . out . print ( <STRING> ) ; <CR> n 1 = h 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> i 4 = h 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 9 = h 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b = h 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> N 8 = h 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R 1 = h 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 5 = h 7 . nextLine ( ) ; <CR> if ( n 1 . equals ( <STRING> ) ) { <CR> Kindsoftest o 4 = new Test ( a 9 , i 4 , b , R 1 , N 8 , f 5 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( n 1 . equals ( <STRING> ) ) { <CR> Kindsoftest o 4 = new Hwork ( a 9 , i 4 , b , R 1 , N 8 , f 5 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest o 4 = new Mind ( a 9 , i 4 , b , R 1 , N 8 , f 5 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String b 0 , int W 2 , int M 0 , int L 6 , double V 3 , String B 2 ) { <CR> super ( b 0 , W 2 , M 0 , L 6 , V 3 , B 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> public Kindsoftest ( String h 0 , int z , int G 8 , int B 4 , double D 5 , String k 8 ) { <CR> this . id = z ; <CR> this . name = h 0 ; <CR> this . gread = G 8 ; <CR> this . gp = D 5 ; <CR> this . date = B 4 ; <CR> this . range = k 8 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String x 4 , int m 3 , int Q 3 , int P 7 , double x , String S 4 ) { <CR> super ( x 4 , m 3 , Q 3 , P 7 , x , S 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String j 1 , int Q 1 , int T 5 , int d 2 , double u 6 , String t 2 ) { <CR> super ( j 1 , Q 1 , T 5 , d 2 , u 6 , t 2 ) ; <CR> } <CR> } <CR> <EOC>