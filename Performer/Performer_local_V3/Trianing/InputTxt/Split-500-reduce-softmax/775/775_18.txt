<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] R 9 ) { <CR> Scanner R 8 = new Scanner ( System . in ) ; <CR> String J 8 , D 3 , V 2 , E 9 , K 5 , A 7 , I 3 ; <CR> System . out . print ( <STRING> ) ; <CR> J 8 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 3 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V 2 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> E 9 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 5 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 7 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 3 = R 8 . nextLine ( ) ; <CR> if ( J 8 . equals ( <STRING> ) ) { <CR> Kindsoftest N 6 = new Test ( V 2 , D 3 , E 9 , A 7 , K 5 , I 3 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( J 8 . equals ( <STRING> ) ) { <CR> Kindsoftest N 6 = new Hwork ( V 2 , D 3 , E 9 , A 7 , K 5 , I 3 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest N 6 = new Mind ( V 2 , D 3 , E 9 , A 7 , K 5 , I 3 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String t 7 , int q 2 , int G 5 , int g 0 , double S 5 , String s 0 ) { <CR> super ( t 7 , q 2 , G 5 , g 0 , S 5 , s 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String r 8 , int e 7 , int V 2 , int g 0 , double t 1 , String f 7 ) { <CR> this . id = e 7 ; <CR> this . name = r 8 ; <CR> this . gread = V 2 ; <CR> this . gp = t 1 ; <CR> this . date = g 0 ; <CR> this . range = f 7 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String m 7 , int m 9 , int m 8 , int l 9 , double g 6 , String X ) { <CR> super ( m 7 , m 9 , m 8 , l 9 , g 6 , X ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String l 8 , int k 3 , int l 7 , int N 1 , double F 7 , String v 1 ) { <CR> super ( l 8 , k 3 , l 7 , N 1 , F 7 , v 1 ) ; <CR> } <CR> } <CR> <EOC>