<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] Q 2 ) { <CR> Scanner q 3 = new Scanner ( System . in ) ; <CR> String B 8 , p , H 4 , a 8 , V 7 , k 5 , t 2 ; <CR> System . out . print ( <STRING> ) ; <CR> B 8 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> H 4 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V 7 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 5 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 2 = q 3 . nextLine ( ) ; <CR> if ( B 8 . equals ( <STRING> ) ) { <CR> Kindsoftest k 7 = new Test ( H 4 , p , a 8 , k 5 , V 7 , t 2 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( B 8 . equals ( <STRING> ) ) { <CR> Kindsoftest k 7 = new Hwork ( H 4 , p , a 8 , k 5 , V 7 , t 2 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest k 7 = new Mind ( H 4 , p , a 8 , k 5 , V 7 , t 2 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String x 2 , int B 8 , int e , int c 0 , double A 4 , String G 3 ) { <CR> super ( x 2 , B 8 , e , c 0 , A 4 , G 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected double gp ; <CR> public Kindsoftest ( String z 5 , int S 9 , int M , int g 0 , double a 9 , String r 4 ) { <CR> this . id = S 9 ; <CR> this . name = z 5 ; <CR> this . gread = M ; <CR> this . gp = a 9 ; <CR> this . date = g 0 ; <CR> this . range = r 4 ; <CR> } <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String E 5 , int H 4 , int g 3 , int q 9 , double m 2 , String V 0 ) { <CR> super ( E 5 , H 4 , g 3 , q 9 , m 2 , V 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String l 2 , int X , int n 3 , int X 9 , double k 0 , String t 9 ) { <CR> super ( l 2 , X , n 3 , X 9 , k 0 , t 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>