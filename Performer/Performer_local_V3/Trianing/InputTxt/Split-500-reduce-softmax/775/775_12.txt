<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] W 3 ) { <CR> Scanner m 6 = new Scanner ( System . in ) ; <CR> String a 1 , P 8 , q 5 , v 8 , u 7 , p 2 , W 1 ; <CR> System . out . print ( <STRING> ) ; <CR> a 1 = m 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> P 8 = m 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 5 = m 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> v 8 = m 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 7 = m 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 2 = m 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 1 = m 6 . nextLine ( ) ; <CR> if ( a 1 . equals ( <STRING> ) ) { <CR> Kindsoftest I 9 = new Test ( q 5 , P 8 , v 8 , p 2 , u 7 , W 1 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( a 1 . equals ( <STRING> ) ) { <CR> Kindsoftest I 9 = new Hwork ( q 5 , P 8 , v 8 , p 2 , u 7 , W 1 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest I 9 = new Mind ( q 5 , P 8 , v 8 , p 2 , u 7 , W 1 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String T 2 , int E 2 , int k 7 , int p 2 , double L 5 , String N 2 ) { <CR> super ( T 2 , E 2 , k 7 , p 2 , L 5 , N 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> protected double gp ; <CR> protected String name , range ; <CR> public Kindsoftest ( String K 6 , int k 7 , int U 1 , int O 0 , double h 2 , String H 2 ) { <CR> this . id = k 7 ; <CR> this . name = K 6 ; <CR> this . gread = U 1 ; <CR> this . gp = h 2 ; <CR> this . date = O 0 ; <CR> this . range = H 2 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String N 2 , int K 2 , int w 6 , int j 7 , double a 1 , String Q 0 ) { <CR> super ( N 2 , K 2 , w 6 , j 7 , a 1 , Q 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String H 1 , int K 2 , int R 9 , int s 4 , double E 9 , String i 6 ) { <CR> super ( H 1 , K 2 , R 9 , s 4 , E 9 , i 6 ) ; <CR> } <CR> } <CR> <EOC>