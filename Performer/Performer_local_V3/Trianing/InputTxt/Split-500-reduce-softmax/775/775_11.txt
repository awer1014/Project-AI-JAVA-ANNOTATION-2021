<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] f 9 ) { <CR> Scanner e 2 = new Scanner ( System . in ) ; <CR> String Z 0 , u 8 , v 3 , A 8 , v 6 , Q 9 , N 3 ; <CR> System . out . print ( <STRING> ) ; <CR> Z 0 = e 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 8 = e 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> v 3 = e 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 8 = e 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> v 6 = e 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 9 = e 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> N 3 = e 2 . nextLine ( ) ; <CR> if ( Z 0 . equals ( <STRING> ) ) { <CR> Kindsoftest Y 1 = new Test ( v 3 , u 8 , A 8 , Q 9 , v 6 , N 3 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( Z 0 . equals ( <STRING> ) ) { <CR> Kindsoftest Y 1 = new Hwork ( v 3 , u 8 , A 8 , Q 9 , v 6 , N 3 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest Y 1 = new Mind ( v 3 , u 8 , A 8 , Q 9 , v 6 , N 3 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String Y 4 , int m 1 , int o 7 , int D 4 , double c 7 , String c 0 ) { <CR> super ( Y 4 , m 1 , o 7 , D 4 , c 7 , c 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> public Kindsoftest ( String r 3 , int X 8 , int d 3 , int c 8 , double Y 9 , String H 5 ) { <CR> this . id = X 8 ; <CR> this . name = r 3 ; <CR> this . gread = d 3 ; <CR> this . gp = Y 9 ; <CR> this . date = c 8 ; <CR> this . range = H 5 ; <CR> } <CR> protected String name , range ; <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String e 4 , int c 5 , int S 4 , int d 4 , double O 4 , String I 6 ) { <CR> super ( e 4 , c 5 , S 4 , d 4 , O 4 , I 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String y 5 , int n 6 , int U 5 , int y 8 , double i 4 , String f 6 ) { <CR> super ( y 5 , n 6 , U 5 , y 8 , i 4 , f 6 ) ; <CR> } <CR> } <CR> <EOC>