<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] E 5 ) { <CR> Scanner N 8 = new Scanner ( System . in ) ; <CR> String q 5 , c 6 , B , J 6 , k 8 , O , i 7 ; <CR> System . out . print ( <STRING> ) ; <CR> q 5 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 6 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 6 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 8 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> O = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> i 7 = N 8 . nextLine ( ) ; <CR> if ( q 5 . equals ( <STRING> ) ) { <CR> Kindsoftest G 3 = new Test ( B , c 6 , J 6 , O , k 8 , i 7 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( q 5 . equals ( <STRING> ) ) { <CR> Kindsoftest G 3 = new Hwork ( B , c 6 , J 6 , O , k 8 , i 7 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest G 3 = new Mind ( B , c 6 , J 6 , O , k 8 , i 7 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String b 2 , int V 3 , int T 4 , int z 0 , double U , String b 9 ) { <CR> super ( b 2 , V 3 , T 4 , z 0 , U , b 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String i 9 , int P 8 , int w 3 , int S 3 , double G , String r 8 ) { <CR> this . id = P 8 ; <CR> this . name = i 9 ; <CR> this . gread = w 3 ; <CR> this . gp = G ; <CR> this . date = S 3 ; <CR> this . range = r 8 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String O 4 , int U 1 , int g 7 , int e 7 , double V 9 , String F ) { <CR> super ( O 4 , U 1 , g 7 , e 7 , V 9 , F ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String D 6 , int j 0 , int z 3 , int Q 6 , double A 7 , String d 0 ) { <CR> super ( D 6 , j 0 , z 3 , Q 6 , A 7 , d 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>