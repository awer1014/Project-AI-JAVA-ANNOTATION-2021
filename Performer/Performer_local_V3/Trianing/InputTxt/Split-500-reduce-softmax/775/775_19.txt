<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] p 6 ) { <CR> Scanner Z 6 = new Scanner ( System . in ) ; <CR> String n 2 , W 7 , o 0 , J 8 , v , Y 3 , O 3 ; <CR> System . out . print ( <STRING> ) ; <CR> n 2 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 7 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 8 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> v = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Y 3 = Z 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> O 3 = Z 6 . nextLine ( ) ; <CR> if ( n 2 . equals ( <STRING> ) ) { <CR> Kindsoftest p 3 = new Test ( o 0 , W 7 , J 8 , Y 3 , v , O 3 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( n 2 . equals ( <STRING> ) ) { <CR> Kindsoftest p 3 = new Hwork ( o 0 , W 7 , J 8 , Y 3 , v , O 3 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest p 3 = new Mind ( o 0 , W 7 , J 8 , Y 3 , v , O 3 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String f 4 , int e 4 , int N 2 , int Z 3 , double P 1 , String o ) { <CR> super ( f 4 , e 4 , N 2 , Z 3 , P 1 , o ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String O 4 , int y 6 , int G 0 , int L 1 , double Q 0 , String q 0 ) { <CR> this . id = y 6 ; <CR> this . name = O 4 ; <CR> this . gread = G 0 ; <CR> this . gp = Q 0 ; <CR> this . date = L 1 ; <CR> this . range = q 0 ; <CR> } <CR> protected double gp ; <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String R 0 , int L 7 , int S , int L 3 , double u 1 , String X 1 ) { <CR> super ( R 0 , L 7 , S , L 3 , u 1 , X 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String b 8 , int a 2 , int M 0 , int r 0 , double B 9 , String Y 3 ) { <CR> super ( b 8 , a 2 , M 0 , r 0 , B 9 , Y 3 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>