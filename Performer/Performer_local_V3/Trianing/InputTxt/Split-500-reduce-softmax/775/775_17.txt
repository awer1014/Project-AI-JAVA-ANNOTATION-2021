<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] D 6 ) { <CR> Scanner C 2 = new Scanner ( System . in ) ; <CR> String w 3 , x 6 , J 4 , j 6 , I 6 , o 5 , o 4 ; <CR> System . out . print ( <STRING> ) ; <CR> w 3 = C 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 6 = C 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> J 4 = C 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> j 6 = C 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 6 = C 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 5 = C 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 4 = C 2 . nextLine ( ) ; <CR> if ( w 3 . equals ( <STRING> ) ) { <CR> Kindsoftest p 7 = new Test ( J 4 , x 6 , j 6 , o 5 , I 6 , o 4 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( w 3 . equals ( <STRING> ) ) { <CR> Kindsoftest p 7 = new Hwork ( J 4 , x 6 , j 6 , o 5 , I 6 , o 4 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest p 7 = new Mind ( J 4 , x 6 , j 6 , o 5 , I 6 , o 4 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String f 3 , int x 7 , int z , int z 9 , double T 7 , String y 4 ) { <CR> super ( f 3 , x 7 , z , z 9 , T 7 , y 4 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected double gp ; <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> public Kindsoftest ( String f 4 , int P 7 , int M 5 , int W 7 , double J 6 , String W ) { <CR> this . id = P 7 ; <CR> this . name = f 4 ; <CR> this . gread = M 5 ; <CR> this . gp = J 6 ; <CR> this . date = W 7 ; <CR> this . range = W ; <CR> } <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String G 2 , int o 8 , int F 7 , int y 7 , double r 5 , String H 4 ) { <CR> super ( G 2 , o 8 , F 7 , y 7 , r 5 , H 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String c 7 , int g 7 , int e 6 , int s , double C 4 , String A 2 ) { <CR> super ( c 7 , g 7 , e 6 , s , C 4 , A 2 ) ; <CR> } <CR> } <CR> <EOC>