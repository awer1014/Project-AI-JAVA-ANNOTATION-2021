<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] s 7 ) { <CR> Scanner v 7 = new Scanner ( System . in ) ; <CR> String U 4 , c 0 , R , s 2 , d 1 , Q 8 , c 9 ; <CR> System . out . print ( <STRING> ) ; <CR> U 4 = v 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 0 = v 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R = v 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 2 = v 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 1 = v 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 8 = v 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 9 = v 7 . nextLine ( ) ; <CR> if ( U 4 . equals ( <STRING> ) ) { <CR> Kindsoftest l 5 = new Test ( R , c 0 , s 2 , Q 8 , d 1 , c 9 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( U 4 . equals ( <STRING> ) ) { <CR> Kindsoftest l 5 = new Hwork ( R , c 0 , s 2 , Q 8 , d 1 , c 9 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest l 5 = new Mind ( R , c 0 , s 2 , Q 8 , d 1 , c 9 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String n 3 , int c 3 , int G 2 , int i , double f 2 , String x ) { <CR> super ( n 3 , c 3 , G 2 , i , f 2 , x ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> public Kindsoftest ( String n 1 , int Y 6 , int X 2 , int e 0 , double M 8 , String C 8 ) { <CR> this . id = Y 6 ; <CR> this . name = n 1 ; <CR> this . gread = X 2 ; <CR> this . gp = M 8 ; <CR> this . date = e 0 ; <CR> this . range = C 8 ; <CR> } <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String f 4 , int a 4 , int G 0 , int o 3 , double V 8 , String m 9 ) { <CR> super ( f 4 , a 4 , G 0 , o 3 , V 8 , m 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String t 1 , int u 7 , int J 6 , int n , double r 4 , String O 0 ) { <CR> super ( t 1 , u 7 , J 6 , n , r 4 , O 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>