<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] l 7 ) { <CR> Scanner C 8 = new Scanner ( System . in ) ; <CR> String L 6 , s 6 , G 9 , G 5 , p 4 , E 1 , w 4 ; <CR> System . out . print ( <STRING> ) ; <CR> L 6 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 6 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 9 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> G 5 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 4 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> E 1 = C 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 4 = C 8 . nextLine ( ) ; <CR> if ( L 6 . equals ( <STRING> ) ) { <CR> Kindsoftest s 3 = new Test ( G 9 , s 6 , G 5 , E 1 , p 4 , w 4 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( L 6 . equals ( <STRING> ) ) { <CR> Kindsoftest s 3 = new Hwork ( G 9 , s 6 , G 5 , E 1 , p 4 , w 4 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest s 3 = new Mind ( G 9 , s 6 , G 5 , E 1 , p 4 , w 4 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String P , int E , int o 3 , int M 3 , double n 9 , String K 3 ) { <CR> super ( P , E , o 3 , M 3 , n 9 , K 3 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> public Kindsoftest ( String O 8 , int C 4 , int n 7 , int d 8 , double y 7 , String h 6 ) { <CR> this . id = C 4 ; <CR> this . name = O 8 ; <CR> this . gread = n 7 ; <CR> this . gp = y 7 ; <CR> this . date = d 8 ; <CR> this . range = h 6 ; <CR> } <CR> protected String name , range ; <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String F 6 , int S 0 , int K 3 , int h 6 , double n 4 , String f 2 ) { <CR> super ( F 6 , S 0 , K 3 , h 6 , n 4 , f 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String P 3 , int P 8 , int y 5 , int E 9 , double g 9 , String L 5 ) { <CR> super ( P 3 , P 8 , y 5 , E 9 , g 9 , L 5 ) ; <CR> } <CR> } <CR> <EOC>