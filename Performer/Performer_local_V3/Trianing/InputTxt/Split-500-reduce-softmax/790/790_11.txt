<BOC> abstract public class Evaluation { <CR> protected String name ; <CR> public Evaluation ( String T 6 , String k 2 , double y 5 , double U 6 , String r 4 , String s 4 ) { <CR> this . stuno = T 6 ; <CR> this . name = k 2 ; <CR> this . score = y 5 ; <CR> this . rate = U 6 ; <CR> } <CR> double getRate ( ) { <CR> return rate ; <CR> } <CR> protected String stuno ; <CR> double getScore ( ) { <CR> return score ; <CR> } <CR> protected double score , rate ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + stuno ) ; <CR> } <CR> public Exam ( String C 2 , String I 1 , double k 1 , double I 3 , String i 1 , String U 6 ) { <CR> super ( C 2 , I 1 , k 1 , I 3 , i 1 , U 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Homework extends Evaluation { <CR> public Homework ( String G 4 , String P 5 , double w 0 , double Y 7 , String O 6 , String O 7 ) { <CR> super ( G 4 , P 5 , w 0 , Y 7 , O 6 , O 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String T 7 , String J 5 , double c 6 , double s 2 , String C 9 , String c 1 ) { <CR> super ( T 7 , J 5 , c 6 , s 2 , C 9 , c 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> static Scanner scanner = new Scanner ( System . in ) ; <CR> public static void main ( String [ ] q 9 ) { <CR> int D 1 = <STRING> ; <CR> String Y 2 , V 9 ; <CR> double L 8 , W 9 ; <CR> System . out . print ( <STRING> ) ; <CR> D 1 = scanner . nextInt ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V 9 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Y 2 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> L 8 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 9 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> if ( D 1 == <STRING> ) { <CR> String O 2 , I 5 ; <CR> System . out . print ( <STRING> ) ; <CR> O 2 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 5 = scanner . nextLine ( ) ; <CR> Evaluation N 8 = new Exam ( V 9 , Y 2 , L 8 , W 9 , O 2 , I 5 ) ; <CR> } <CR> if ( D 1 == <STRING> ) { <CR> String M 0 , k 2 ; <CR> System . out . print ( <STRING> ) ; <CR> M 0 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> k 2 = scanner . nextLine ( ) ; <CR> Evaluation N 8 = new Homework ( V 9 , Y 2 , L 8 , W 9 , M 0 , k 2 ) ; <CR> } <CR> if ( D 1 == <STRING> ) { <CR> String r 7 , R ; <CR> System . out . print ( <STRING> ) ; <CR> r 7 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> R = scanner . nextLine ( ) ; <CR> Evaluation N 8 = new Report ( V 9 , Y 2 , L 8 , W 9 , r 7 , R ) ; <CR> } <CR> } <CR> } <CR> <EOC>