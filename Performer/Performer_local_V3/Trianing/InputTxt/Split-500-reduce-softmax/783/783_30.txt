<BOC> public class Evaluation { <CR> public Evaluation ( String e 6 , String a 6 ) { <CR> day = e 6 ; <CR> cover = a 6 ; <CR> } <CR> public void print ( ) { <CR> } <CR> protected String day , cover ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String x 2 , String z 8 ) { <CR> super ( x 2 , z 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String s 4 , String b 7 ) { <CR> super ( s 4 , b 7 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Report ( String X 8 , String I 4 ) { <CR> super ( X 8 , I 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> Student ( String B 0 , String p , String f 7 , String K 9 , String z 4 ) { <CR> evaluation = B 0 ; <CR> stid = p ; <CR> stname = f 7 ; <CR> stnumber = K 9 ; <CR> stnumberc = z 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] k 7 ) { <CR> Scanner K 5 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = K 5 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String b 2 , b 7 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> b 2 = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 7 = K 5 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> b 2 = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 7 = K 5 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> b 2 = K 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 7 = K 5 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation H 3 = setEvaluation ( evaluation ) ; <CR> H 3 . print ( ) ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Evaluation setEvaluation ( String B 5 ) { <CR> Evaluation O = <STRING> ; <CR> switch ( B 5 ) { <CR> case <STRING> : <CR> O = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> O = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> O = new Report ( day , cover ) ; <CR> } <CR> return O ; <CR> } <CR> static Student st ; <CR> } <CR> <EOC>