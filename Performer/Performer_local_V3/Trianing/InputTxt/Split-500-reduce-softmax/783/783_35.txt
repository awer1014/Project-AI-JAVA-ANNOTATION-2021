<BOC> public class Evaluation { <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String M 4 , String R 3 ) { <CR> day = M 4 ; <CR> cover = R 3 ; <CR> } <CR> protected String day , cover ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String u 4 , String V 8 ) { <CR> super ( u 4 , V 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String l 7 , String z 9 ) { <CR> super ( l 7 , z 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Z 4 , String J 9 ) { <CR> super ( Z 4 , J 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String d 8 , String L 1 , String G 1 , String w 8 , String R 9 ) { <CR> evaluation = d 8 ; <CR> stid = L 1 ; <CR> stname = G 1 ; <CR> stnumber = w 8 ; <CR> stnumberc = R 9 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] O ) { <CR> Scanner l 0 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = l 0 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String m 5 , D 0 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> m 5 = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 0 = l 0 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> m 5 = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 0 = l 0 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> m 5 = l 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 0 = l 0 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation t = setEvaluation ( evaluation ) ; <CR> t . print ( ) ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Evaluation setEvaluation ( String D 9 ) { <CR> Evaluation c 4 = <STRING> ; <CR> switch ( D 9 ) { <CR> case <STRING> : <CR> c 4 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> c 4 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> c 4 = new Report ( day , cover ) ; <CR> } <CR> return c 4 ; <CR> } <CR> } <CR> <EOC>