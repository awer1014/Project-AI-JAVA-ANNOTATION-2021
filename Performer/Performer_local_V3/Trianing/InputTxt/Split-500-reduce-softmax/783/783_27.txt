<BOC> public class Evaluation { <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String K 9 , String y 2 ) { <CR> day = K 9 ; <CR> cover = y 2 ; <CR> } <CR> protected String day , cover ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String J 4 , String q ) { <CR> super ( J 4 , q ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String H 8 , String p 3 ) { <CR> super ( H 8 , p 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Report ( String G 3 , String t 3 ) { <CR> super ( G 3 , t 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String X 4 , String l 3 , String b 9 , String x 6 , String h 3 ) { <CR> evaluation = X 4 ; <CR> stid = l 3 ; <CR> stname = b 9 ; <CR> stnumber = x 6 ; <CR> stnumberc = h 3 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] i 8 ) { <CR> Scanner s 2 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = s 2 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String z 7 , a 8 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> z 7 = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 = s 2 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> z 7 = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 = s 2 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> z 7 = s 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 = s 2 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation J 2 = setEvaluation ( evaluation ) ; <CR> J 2 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String A 5 ) { <CR> Evaluation K = <STRING> ; <CR> switch ( A 5 ) { <CR> case <STRING> : <CR> K = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> K = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> K = new Report ( day , cover ) ; <CR> } <CR> return K ; <CR> } <CR> static Student st ; <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> } <CR> <EOC>