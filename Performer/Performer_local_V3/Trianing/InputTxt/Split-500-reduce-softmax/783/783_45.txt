<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public Evaluation ( String W 1 , String H 3 ) { <CR> day = W 1 ; <CR> cover = H 3 ; <CR> } <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String Q 4 , String n 1 ) { <CR> super ( Q 4 , n 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String T 9 , String z 3 ) { <CR> super ( T 9 , z 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String I 6 , String w 5 ) { <CR> super ( I 6 , w 5 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String l 0 , String D 7 , String z 0 , String f 1 , String O 8 ) { <CR> evaluation = l 0 ; <CR> stid = D 7 ; <CR> stname = z 0 ; <CR> stnumber = f 1 ; <CR> stnumberc = O 8 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] B 6 ) { <CR> Scanner Q 1 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = Q 1 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String X 3 , g 9 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> X 3 = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 9 = Q 1 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> X 3 = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 9 = Q 1 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> X 3 = Q 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 9 = Q 1 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation q 9 = setEvaluation ( evaluation ) ; <CR> q 9 . print ( ) ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Evaluation setEvaluation ( String S ) { <CR> Evaluation r 4 = <STRING> ; <CR> switch ( S ) { <CR> case <STRING> : <CR> r 4 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> r 4 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> r 4 = new Report ( day , cover ) ; <CR> } <CR> return r 4 ; <CR> } <CR> } <CR> <EOC>