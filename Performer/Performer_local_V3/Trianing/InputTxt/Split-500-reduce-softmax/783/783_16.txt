<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String n 6 , String s 1 ) { <CR> day = n 6 ; <CR> cover = s 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String B 7 , String N 2 ) { <CR> super ( B 7 , N 2 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String C 4 , String E 4 ) { <CR> super ( C 4 , E 4 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String K 6 , String I 7 ) { <CR> super ( K 6 , I 7 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String g 1 , String W 6 , String u 3 , String Q 0 , String Q 8 ) { <CR> evaluation = g 1 ; <CR> stid = W 6 ; <CR> stname = u 3 ; <CR> stnumber = Q 0 ; <CR> stnumberc = Q 8 ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] L 8 ) { <CR> Scanner G 8 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = G 8 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String M 3 , b 9 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> M 3 = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 9 = G 8 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> M 3 = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 9 = G 8 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> M 3 = G 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 9 = G 8 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation o 6 = setEvaluation ( evaluation ) ; <CR> o 6 . print ( ) ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Evaluation setEvaluation ( String n 4 ) { <CR> Evaluation U 1 = <STRING> ; <CR> switch ( n 4 ) { <CR> case <STRING> : <CR> U 1 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> U 1 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> U 1 = new Report ( day , cover ) ; <CR> } <CR> return U 1 ; <CR> } <CR> } <CR> <EOC>