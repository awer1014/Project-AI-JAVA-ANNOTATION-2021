<BOC> public class Evaluation { <CR> public void print ( ) { <CR> } <CR> protected String day , cover ; <CR> public Evaluation ( String s 9 , String K 6 ) { <CR> day = s 9 ; <CR> cover = K 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String T 0 , String G 0 ) { <CR> super ( T 0 , G 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String O 5 , String N 3 ) { <CR> super ( O 5 , N 3 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String I 2 , String T 1 ) { <CR> super ( I 2 , T 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> Student ( String T 5 , String D 4 , String x 1 , String T 8 , String l ) { <CR> evaluation = T 5 ; <CR> stid = D 4 ; <CR> stname = x 1 ; <CR> stnumber = T 8 ; <CR> stnumberc = l ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] A 3 ) { <CR> Scanner f 4 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = f 4 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String Q 0 , o 0 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> Q 0 = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = f 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> Q 0 = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = f 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> Q 0 = f 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 0 = f 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation a 9 = setEvaluation ( evaluation ) ; <CR> a 9 . print ( ) ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Evaluation setEvaluation ( String e 6 ) { <CR> Evaluation F 3 = <STRING> ; <CR> switch ( e 6 ) { <CR> case <STRING> : <CR> F 3 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> F 3 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> F 3 = new Report ( day , cover ) ; <CR> } <CR> return F 3 ; <CR> } <CR> } <CR> <EOC>