<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public Evaluation ( String I 4 , String j 7 ) { <CR> day = I 4 ; <CR> cover = j 7 ; <CR> } <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String e 8 , String f 9 ) { <CR> super ( e 8 , f 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String Z 5 , String Z 1 ) { <CR> super ( Z 5 , Z 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Report ( String C 2 , String p ) { <CR> super ( C 2 , p ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String l , String m 2 , String I 7 , String f 9 , String A 7 ) { <CR> evaluation = l ; <CR> stid = m 2 ; <CR> stname = I 7 ; <CR> stnumber = f 9 ; <CR> stnumberc = A 7 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] u 4 ) { <CR> Scanner q 3 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = q 3 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String I 6 , b 1 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> I 6 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 1 = q 3 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> I 6 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 1 = q 3 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> I 6 = q 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 1 = q 3 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation s 4 = setEvaluation ( evaluation ) ; <CR> s 4 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String Z 8 ) { <CR> Evaluation F 5 = <STRING> ; <CR> switch ( Z 8 ) { <CR> case <STRING> : <CR> F 5 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> F 5 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> F 5 = new Report ( day , cover ) ; <CR> } <CR> return F 5 ; <CR> } <CR> static Student st ; <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> } <CR> <EOC>