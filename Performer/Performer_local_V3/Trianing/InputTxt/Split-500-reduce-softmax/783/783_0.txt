<BOC> public class Evaluation { <CR> public Evaluation ( String B 1 , String Q 7 ) { <CR> day = B 1 ; <CR> cover = Q 7 ; <CR> } <CR> public void print ( ) { <CR> } <CR> protected String day , cover ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String F 6 , String M 1 ) { <CR> super ( F 6 , M 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String P 8 , String M 5 ) { <CR> super ( P 8 , M 5 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String z 7 , String g 5 ) { <CR> super ( z 7 , g 5 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> Student ( String y 9 , String v 5 , String h 6 , String w 2 , String C 1 ) { <CR> evaluation = y 9 ; <CR> stid = v 5 ; <CR> stname = h 6 ; <CR> stnumber = w 2 ; <CR> stnumberc = C 1 ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> static Evaluation setEvaluation ( String E 1 ) { <CR> Evaluation C 8 = <STRING> ; <CR> switch ( E 1 ) { <CR> case <STRING> : <CR> C 8 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> C 8 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> C 8 = new Report ( day , cover ) ; <CR> } <CR> return C 8 ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> public static void main ( String [ ] B 3 ) { <CR> Scanner Z = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = Z . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String n 8 , m 6 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> n 8 = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m 6 = Z . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> n 8 = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m 6 = Z . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> n 8 = Z . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m 6 = Z . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation o 7 = setEvaluation ( evaluation ) ; <CR> o 7 . print ( ) ; <CR> } <CR> } <CR> <EOC>