<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String O , String s 1 ) { <CR> day = O ; <CR> cover = s 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String B 3 , String E 9 ) { <CR> super ( B 3 , E 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String F 4 , String H 0 ) { <CR> super ( F 4 , H 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String P 4 , String h 0 ) { <CR> super ( P 4 , h 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String G 3 , String z 1 , String C , String N , String t 8 ) { <CR> evaluation = G 3 ; <CR> stid = z 1 ; <CR> stname = C ; <CR> stnumber = N ; <CR> stnumberc = t 8 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Evaluation setEvaluation ( String X 0 ) { <CR> Evaluation h 4 = <STRING> ; <CR> switch ( X 0 ) { <CR> case <STRING> : <CR> h 4 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> h 4 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> h 4 = new Report ( day , cover ) ; <CR> } <CR> return h 4 ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Student st ; <CR> public static void main ( String [ ] A ) { <CR> Scanner U 4 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = U 4 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String s , b 0 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> s = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 0 = U 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> s = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 0 = U 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> s = U 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 0 = U 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation X 4 = setEvaluation ( evaluation ) ; <CR> X 4 . print ( ) ; <CR> } <CR> } <CR> <EOC>