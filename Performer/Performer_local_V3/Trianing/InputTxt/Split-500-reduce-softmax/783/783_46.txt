<BOC> public class Evaluation { <CR> public Evaluation ( String A 4 , String O 9 ) { <CR> day = A 4 ; <CR> cover = O 9 ; <CR> } <CR> protected String day , cover ; <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String w 5 , String z 8 ) { <CR> super ( w 5 , z 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String P 6 , String O 1 ) { <CR> super ( P 6 , O 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String a 7 , String j 0 ) { <CR> super ( a 7 , j 0 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> Student ( String l 2 , String h 1 , String k 6 , String o 7 , String s 1 ) { <CR> evaluation = l 2 ; <CR> stid = h 1 ; <CR> stname = k 6 ; <CR> stnumber = o 7 ; <CR> stnumberc = s 1 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> public static void main ( String [ ] T 4 ) { <CR> Scanner g 4 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = g 4 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String F 4 , T 5 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> F 4 = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 5 = g 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> F 4 = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 5 = g 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> F 4 = g 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 5 = g 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation y 9 = setEvaluation ( evaluation ) ; <CR> y 9 . print ( ) ; <CR> } <CR> static Student st ; <CR> static Evaluation setEvaluation ( String q 6 ) { <CR> Evaluation d 3 = <STRING> ; <CR> switch ( q 6 ) { <CR> case <STRING> : <CR> d 3 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> d 3 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> d 3 = new Report ( day , cover ) ; <CR> } <CR> return d 3 ; <CR> } <CR> } <CR> <EOC>