<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public Evaluation ( String M 8 , String r 8 ) { <CR> day = M 8 ; <CR> cover = r 8 ; <CR> } <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String o 2 , String b 1 ) { <CR> super ( o 2 , b 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String C 6 , String u 1 ) { <CR> super ( C 6 , u 1 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String k 6 , String p ) { <CR> super ( k 6 , p ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String i 2 , String M 2 , String U 6 , String a 6 , String B 9 ) { <CR> evaluation = i 2 ; <CR> stid = M 2 ; <CR> stname = U 6 ; <CR> stnumber = a 6 ; <CR> stnumberc = B 9 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> public static void main ( String [ ] b 7 ) { <CR> Scanner Q 2 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = Q 2 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String j , X 0 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> j = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 0 = Q 2 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> j = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 0 = Q 2 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> j = Q 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> X 0 = Q 2 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation v 9 = setEvaluation ( evaluation ) ; <CR> v 9 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String p 9 ) { <CR> Evaluation J 2 = <STRING> ; <CR> switch ( p 9 ) { <CR> case <STRING> : <CR> J 2 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> J 2 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> J 2 = new Report ( day , cover ) ; <CR> } <CR> return J 2 ; <CR> } <CR> } <CR> <EOC>