<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String N 2 , String y 4 ) { <CR> day = N 2 ; <CR> cover = y 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String a 7 , String K 8 ) { <CR> super ( a 7 , K 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String S 2 , String B 6 ) { <CR> super ( S 2 , B 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String I , String l 3 ) { <CR> super ( I , l 3 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> Student ( String I 0 , String c 5 , String E 9 , String P 4 , String o 4 ) { <CR> evaluation = I 0 ; <CR> stid = c 5 ; <CR> stname = E 9 ; <CR> stnumber = P 4 ; <CR> stnumberc = o 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] m 3 ) { <CR> Scanner L 7 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = L 7 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String h 6 , Y ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> h 6 = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Y = L 7 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> h 6 = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Y = L 7 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> h 6 = L 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Y = L 7 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation T 1 = setEvaluation ( evaluation ) ; <CR> T 1 . print ( ) ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Evaluation setEvaluation ( String F ) { <CR> Evaluation R 4 = <STRING> ; <CR> switch ( F ) { <CR> case <STRING> : <CR> R 4 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> R 4 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> R 4 = new Report ( day , cover ) ; <CR> } <CR> return R 4 ; <CR> } <CR> } <CR> <EOC>