<BOC> public class Evaluation { <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String h 7 , String x 0 ) { <CR> day = h 7 ; <CR> cover = x 0 ; <CR> } <CR> protected String day , cover ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String o 9 , String b 9 ) { <CR> super ( o 9 , b 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String w , String i 8 ) { <CR> super ( w , i 8 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String D 0 , String b 2 ) { <CR> super ( D 0 , b 2 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String u 5 , String j 8 , String E 3 , String g 8 , String Y 7 ) { <CR> evaluation = u 5 ; <CR> stid = j 8 ; <CR> stname = E 3 ; <CR> stnumber = g 8 ; <CR> stnumberc = Y 7 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> static Student st ; <CR> public static void main ( String [ ] k 3 ) { <CR> Scanner c 4 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = c 4 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String z 8 , T 9 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> z 8 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 9 = c 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> z 8 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 9 = c 4 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> z 8 = c 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 9 = c 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation M = setEvaluation ( evaluation ) ; <CR> M . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String l 3 ) { <CR> Evaluation x 5 = <STRING> ; <CR> switch ( l 3 ) { <CR> case <STRING> : <CR> x 5 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> x 5 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> x 5 = new Report ( day , cover ) ; <CR> } <CR> return x 5 ; <CR> } <CR> } <CR> <EOC>