<BOC> public class Keeper { <CR> private String tel ; <CR> private String id ; <CR> public Keeper ( String F 0 , String M 9 ) { <CR> this . id = F 0 ; <CR> this . tel = M 9 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + this . id ) ; <CR> System . out . println ( <STRING> + this . tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String keeper ; <CR> public void keep ( String R 6 ) { <CR> this . keeper = R 6 ; <CR> } <CR> public void speak ( ) { <CR> if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + this . type ) ; <CR> System . out . println ( <STRING> + this . pid ) ; <CR> System . out . println ( <STRING> + this . name ) ; <CR> } <CR> private String type ; <CR> private String name ; <CR> private String pid ; <CR> public Pet ( String k 2 , String L 3 , String G 0 ) { <CR> this . pid = k 2 ; <CR> this . name = L 3 ; <CR> this . type = G 0 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test 2 { <CR> public static String type , pid , name , id , tel ; <CR> public static void input ( ) { <CR> System . out . println ( <STRING> ) ; <CR> type = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> pid = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> name = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> id = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> tel = keyboard . nextLine ( ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> public static void main ( String [ ] i 2 ) { <CR> input ( ) ; <CR> Pet N 4 = new Pet ( type , pid , name ) ; <CR> N 4 . keep ( id ) ; <CR> Keeper S 2 = new Keeper ( id , tel ) ; <CR> System . out . println ( <STRING> ) ; <CR> input ( ) ; <CR> Pet G 9 = new Pet ( type , pid , name ) ; <CR> G 9 . keep ( id ) ; <CR> Keeper i 3 = new Keeper ( id , tel ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 4 . display ( ) ; <CR> S 2 . display ( ) ; <CR> N 4 . speak ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 9 . display ( ) ; <CR> i 3 . display ( ) ; <CR> G 9 . speak ( ) ; <CR> } <CR> } <CR> <EOC>