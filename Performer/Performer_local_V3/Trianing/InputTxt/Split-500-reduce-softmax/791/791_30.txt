<BOC> abstract public class Evaluation { <CR> public Evaluation ( String d 7 , String U 4 , String I 4 , double q 2 , double D 9 ) { <CR> sid = d 7 ; <CR> name = U 4 ; <CR> type = I 4 ; <CR> this . grade = q 2 ; <CR> this . gradepc = D 9 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> abstract public void printa ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date ; <CR> public Exam ( String B 5 , String M 2 , String f 0 , double J 9 , double R 8 ) { <CR> super ( B 5 , M 2 , f 0 , J 9 , R 8 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String range ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] f 9 ) { <CR> Scanner Q 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int k 6 = <STRING> ; <CR> do <CR> { <CR> k 6 = Q 6 . nextInt ( ) ; <CR> } <CR> while ( k 6 > <STRING> || k 6 < <STRING> ) ; <CR> return mapEvaluation ( k 6 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int k 6 ) { <CR> Evaluation h 9 = <STRING> ; <CR> switch ( k 6 ) { <CR> case <STRING> : <CR> h 9 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>