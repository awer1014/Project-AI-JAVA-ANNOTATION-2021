<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> abstract public void printa ( ) ; <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> public Evaluation ( String q 7 , String i 2 , String A 4 , double C 5 , double E 7 ) { <CR> sid = q 7 ; <CR> name = i 2 ; <CR> type = A 4 ; <CR> this . grade = C 5 ; <CR> this . gradepc = E 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Exam ( String m 0 , String x , String w 7 , double v 6 , double a 1 ) { <CR> super ( m 0 , x , w 7 , v 6 , a 1 ) ; <CR> } <CR> String date ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] E 9 ) { <CR> Scanner i 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int s 2 = <STRING> ; <CR> do <CR> { <CR> s 2 = i 7 . nextInt ( ) ; <CR> } <CR> while ( s 2 > <STRING> || s 2 < <STRING> ) ; <CR> return mapEvaluation ( s 2 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int s 2 ) { <CR> Evaluation g 3 = <STRING> ; <CR> switch ( s 2 ) { <CR> case <STRING> : <CR> g 3 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>