<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> public Evaluation ( String n 6 , String m 6 , String z 1 , double q 2 , double S 0 ) { <CR> sid = n 6 ; <CR> name = m 6 ; <CR> type = z 1 ; <CR> this . grade = q 2 ; <CR> this . gradepc = S 0 ; <CR> } <CR> abstract public void printa ( ) ; <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> public Exam ( String W 8 , String v 1 , String W 9 , double G 7 , double t 3 ) { <CR> super ( W 8 , v 1 , W 9 , G 7 , t 3 ) ; <CR> } <CR> String date ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] b ) { <CR> Scanner u 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int O 8 = <STRING> ; <CR> do <CR> { <CR> O 8 = u 0 . nextInt ( ) ; <CR> } <CR> while ( O 8 > <STRING> || O 8 < <STRING> ) ; <CR> return mapEvaluation ( O 8 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int O 8 ) { <CR> Evaluation Q 9 = <STRING> ; <CR> switch ( O 8 ) { <CR> case <STRING> : <CR> Q 9 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>