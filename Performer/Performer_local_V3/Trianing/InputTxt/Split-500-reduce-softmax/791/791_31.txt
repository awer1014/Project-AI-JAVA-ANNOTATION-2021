<BOC> abstract public class Evaluation { <CR> public Evaluation ( String b 8 , String A 3 , String J 6 , double q 5 , double S 0 ) { <CR> sid = b 8 ; <CR> name = A 3 ; <CR> type = J 6 ; <CR> this . grade = q 5 ; <CR> this . gradepc = S 0 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> protected double grade , gradepc ; <CR> abstract public void printa ( ) ; <CR> private String sid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String W 3 , String N 0 , String D 0 , double z 5 , double g 0 ) { <CR> super ( W 3 , N 0 , D 0 , z 5 , g 0 ) ; <CR> } <CR> String date ; <CR> String range ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] x 5 ) { <CR> Scanner z 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int T 9 = <STRING> ; <CR> do <CR> { <CR> T 9 = z 6 . nextInt ( ) ; <CR> } <CR> while ( T 9 > <STRING> || T 9 < <STRING> ) ; <CR> return mapEvaluation ( T 9 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int T 9 ) { <CR> Evaluation m 8 = <STRING> ; <CR> switch ( T 9 ) { <CR> case <STRING> : <CR> m 8 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>