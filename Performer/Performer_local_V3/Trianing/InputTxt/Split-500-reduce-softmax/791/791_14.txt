<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> public Evaluation ( String o 5 , String L 3 , String B 5 , double x 3 , double I 4 ) { <CR> sid = o 5 ; <CR> name = L 3 ; <CR> type = B 5 ; <CR> this . grade = x 3 ; <CR> this . gradepc = I 4 ; <CR> } <CR> abstract public void printa ( ) ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> public Exam ( String m 0 , String Y 3 , String s 1 , double E 8 , double V 8 ) { <CR> super ( m 0 , Y 3 , s 1 , E 8 , V 8 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] J 0 ) { <CR> Scanner A 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int A 2 = <STRING> ; <CR> do <CR> { <CR> A 2 = A 5 . nextInt ( ) ; <CR> } <CR> while ( A 2 > <STRING> || A 2 < <STRING> ) ; <CR> return mapEvaluation ( A 2 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int A 2 ) { <CR> Evaluation r 2 = <STRING> ; <CR> switch ( A 2 ) { <CR> case <STRING> : <CR> r 2 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>