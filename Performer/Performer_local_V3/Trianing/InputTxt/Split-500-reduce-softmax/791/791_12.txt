<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> public Evaluation ( String q 5 , String Y 9 , String z , double I 9 , double D 1 ) { <CR> sid = q 5 ; <CR> name = Y 9 ; <CR> type = z ; <CR> this . grade = I 9 ; <CR> this . gradepc = D 1 ; <CR> } <CR> abstract public void printa ( ) ; <CR> private String sid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String date ; <CR> public Exam ( String i 1 , String j 3 , String X 5 , double q 3 , double N ) { <CR> super ( i 1 , j 3 , X 5 , q 3 , N ) ; <CR> } <CR> String range ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] K 2 ) { <CR> Scanner Z 3 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int s = <STRING> ; <CR> do <CR> { <CR> s = Z 3 . nextInt ( ) ; <CR> } <CR> while ( s > <STRING> || s < <STRING> ) ; <CR> return mapEvaluation ( s ) ; <CR> } <CR> static Evaluation mapEvaluation ( int s ) { <CR> Evaluation G 0 = <STRING> ; <CR> switch ( s ) { <CR> case <STRING> : <CR> G 0 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>