<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> private String sid , name , type ; <CR> abstract public void printa ( ) ; <CR> public Evaluation ( String W 7 , String v 5 , String I 7 , double y 2 , double e 5 ) { <CR> sid = W 7 ; <CR> name = v 5 ; <CR> type = I 7 ; <CR> this . grade = y 2 ; <CR> this . gradepc = e 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String N 8 , String O 6 , String Y 5 , double e 0 , double L 2 ) { <CR> super ( N 8 , O 6 , Y 5 , e 0 , L 2 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date ; <CR> String range ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation mapEvaluation ( int Q 2 ) { <CR> Evaluation t 0 = <STRING> ; <CR> switch ( Q 2 ) { <CR> case <STRING> : <CR> t 0 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> public static void main ( String [ ] b 5 ) { <CR> Scanner w 8 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int Q 2 = <STRING> ; <CR> do <CR> { <CR> Q 2 = w 8 . nextInt ( ) ; <CR> } <CR> while ( Q 2 > <STRING> || Q 2 < <STRING> ) ; <CR> return mapEvaluation ( Q 2 ) ; <CR> } <CR> } <CR> <EOC>