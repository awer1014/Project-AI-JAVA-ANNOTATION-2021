<BOC> public class Exam extends type { <CR> String grade , range ; <CR> public Exam ( String p 5 , String T ) { <CR> p 5 = this . grade ; <CR> T = this . range ; <CR> } <CR> public String getExam ( ) { <CR> return grade ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends type { <CR> String discribe ; <CR> public Homework ( String E 8 , String z 8 ) { <CR> } <CR> String data ; <CR> public String getHomework ( ) { <CR> return data ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student extends type { <CR> String id ; <CR> public String Sudent ( String E 2 , String W ) { <CR> E 2 = this . name ; <CR> W = this . id ; <CR> } <CR> String name ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] j 2 ) { <CR> String m 3 , q 0 , N 2 , x 5 , T 1 , O 3 , g 7 , d 5 ; <CR> Scanner w = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> q 0 = w . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> N 2 = w . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 5 = w . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 1 = w . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> O 3 = w . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 7 = w . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 5 = w . nextLine ( ) ; <CR> int g 0 = <STRING> ; <CR> while ( <STRING> ) { <CR> m 3 = w . nextLine ( ) ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + q 0 ) ; <CR> System . out . println ( <STRING> + N 2 ) ; <CR> System . out . println ( <STRING> + x 5 ) ; <CR> System . out . println ( <STRING> + T 1 ) ; <CR> System . out . println ( <STRING> + O 3 ) ; <CR> System . out . println ( <STRING> + g 7 ) ; <CR> System . out . println ( <STRING> + d 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class type { <CR> public type ( ) { <CR> } <CR> } <CR> <EOC>