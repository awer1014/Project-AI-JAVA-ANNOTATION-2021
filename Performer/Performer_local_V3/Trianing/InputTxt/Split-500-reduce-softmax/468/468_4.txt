<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String v 4 , String h 5 , String n 3 ) { <CR> id = h 5 ; <CR> tel = n 3 ; <CR> name = v 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private Keeper keeper ; <CR> private String pid , name , type ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Pet ( String z 1 , String k 4 , String c 1 , Keeper E 6 ) { <CR> pid = z 1 ; <CR> name = k 4 ; <CR> type = c 1 ; <CR> count ++ ; <CR> keeper = E 6 ; <CR> } <CR> private static int count ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] p 4 ) { <CR> Scanner E 6 = new Scanner ( System . in ) ; <CR> boolean S 8 = <STRING> ; <CR> while ( S 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String N 6 = E 6 . nextLine ( ) ; <CR> if ( N 6 . equals ( <STRING> ) ) { <CR> S 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String e 0 = E 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String a 1 = E 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d = E 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String r 8 = E 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 3 = E 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper v 2 = new Keeper ( d , r 8 , V 3 ) ; <CR> Pet v 7 = new Pet ( e 0 , a 1 , N 6 , v 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 7 . display ( ) ; <CR> v 2 . display ( ) ; <CR> v 7 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>