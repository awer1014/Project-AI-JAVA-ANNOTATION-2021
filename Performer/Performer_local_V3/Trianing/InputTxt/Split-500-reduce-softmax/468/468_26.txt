<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String o 5 , String V 4 , String x 2 ) { <CR> id = V 4 ; <CR> tel = x 2 ; <CR> name = o 5 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public Pet ( String d 7 , String X 8 , String T 8 , Keeper S 6 ) { <CR> pid = d 7 ; <CR> name = X 8 ; <CR> type = T 8 ; <CR> count ++ ; <CR> keeper = S 6 ; <CR> } <CR> private static int count ; <CR> private Keeper keeper ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private String pid , name , type ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] C 3 ) { <CR> Scanner Q = new Scanner ( System . in ) ; <CR> boolean d 0 = <STRING> ; <CR> while ( d 0 ) { <CR> System . out . print ( <STRING> ) ; <CR> String r 0 = Q . nextLine ( ) ; <CR> if ( r 0 . equals ( <STRING> ) ) { <CR> d 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String X 8 = Q . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 1 = Q . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x 5 = Q . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Y 8 = Q . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s 7 = Q . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper s 8 = new Keeper ( x 5 , Y 8 , s 7 ) ; <CR> Pet F 3 = new Pet ( X 8 , p 1 , r 0 , s 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 3 . display ( ) ; <CR> s 8 . display ( ) ; <CR> F 3 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>