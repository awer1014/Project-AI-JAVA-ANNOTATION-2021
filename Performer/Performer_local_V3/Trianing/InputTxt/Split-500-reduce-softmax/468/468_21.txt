<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String U 1 , String f 2 , String O 6 ) { <CR> id = f 2 ; <CR> tel = O 6 ; <CR> name = U 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private Keeper keeper ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> public Pet ( String S 4 , String e 7 , String b 5 , Keeper K 3 ) { <CR> pid = S 4 ; <CR> name = e 7 ; <CR> type = b 5 ; <CR> count ++ ; <CR> keeper = K 3 ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> private static int count ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] G 1 ) { <CR> Scanner s 1 = new Scanner ( System . in ) ; <CR> boolean x 1 = <STRING> ; <CR> while ( x 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String y 8 = s 1 . nextLine ( ) ; <CR> if ( y 8 . equals ( <STRING> ) ) { <CR> x 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String z 4 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String q = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String U = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u 3 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String R 7 = s 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper Y 9 = new Keeper ( U , u 3 , R 7 ) ; <CR> Pet a 2 = new Pet ( z 4 , q , y 8 , Y 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 2 . display ( ) ; <CR> Y 9 . display ( ) ; <CR> a 2 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>