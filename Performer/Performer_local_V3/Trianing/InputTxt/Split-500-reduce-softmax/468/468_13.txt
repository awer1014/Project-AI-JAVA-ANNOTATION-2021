<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String J 8 , String e 6 , String B 1 ) { <CR> id = e 6 ; <CR> tel = B 1 ; <CR> name = J 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public Pet ( String f 3 , String U , String E 7 , Keeper T 9 ) { <CR> pid = f 3 ; <CR> name = U ; <CR> type = E 7 ; <CR> count ++ ; <CR> keeper = T 9 ; <CR> } <CR> private static int count ; <CR> private Keeper keeper ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] A 0 ) { <CR> Scanner V = new Scanner ( System . in ) ; <CR> boolean x 3 = <STRING> ; <CR> while ( x 3 ) { <CR> System . out . print ( <STRING> ) ; <CR> String J 5 = V . nextLine ( ) ; <CR> if ( J 5 . equals ( <STRING> ) ) { <CR> x 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String q 4 = V . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String E 4 = V . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String C 2 = V . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 2 = V . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w = V . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper i 0 = new Keeper ( C 2 , e 2 , w ) ; <CR> Pet W 7 = new Pet ( q 4 , E 4 , J 5 , i 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> W 7 . display ( ) ; <CR> i 0 . display ( ) ; <CR> W 7 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>