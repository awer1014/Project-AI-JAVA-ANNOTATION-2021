<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String f 6 , String w 8 , String H 3 ) { <CR> id = w 8 ; <CR> tel = H 3 ; <CR> name = f 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private Keeper keeper ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Pet ( String P , String z 4 , String I 2 , Keeper z 1 ) { <CR> pid = P ; <CR> name = z 4 ; <CR> type = I 2 ; <CR> count ++ ; <CR> keeper = z 1 ; <CR> } <CR> private String pid , name , type ; <CR> private static int count ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] Q 9 ) { <CR> Scanner E 3 = new Scanner ( System . in ) ; <CR> boolean y 7 = <STRING> ; <CR> while ( y 7 ) { <CR> System . out . print ( <STRING> ) ; <CR> String a 6 = E 3 . nextLine ( ) ; <CR> if ( a 6 . equals ( <STRING> ) ) { <CR> y 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String V 7 = E 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s 0 = E 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Y 3 = E 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String F 8 = E 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String l 5 = E 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper C = new Keeper ( Y 3 , F 8 , l 5 ) ; <CR> Pet s 8 = new Pet ( V 7 , s 0 , a 6 , C ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 8 . display ( ) ; <CR> C . display ( ) ; <CR> s 8 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>