<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String w 3 , String w 5 , String j 3 ) { <CR> id = w 5 ; <CR> tel = j 3 ; <CR> name = w 3 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private static int count ; <CR> private String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public Pet ( String G 2 , String p 0 , String e 3 , Keeper y 1 ) { <CR> pid = G 2 ; <CR> name = p 0 ; <CR> type = e 3 ; <CR> count ++ ; <CR> keeper = y 1 ; <CR> } <CR> private Keeper keeper ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] d 8 ) { <CR> Scanner O 9 = new Scanner ( System . in ) ; <CR> boolean f 1 = <STRING> ; <CR> while ( f 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String t 6 = O 9 . nextLine ( ) ; <CR> if ( t 6 . equals ( <STRING> ) ) { <CR> f 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String H 2 = O 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 2 = O 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s 8 = O 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m 1 = O 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String W 6 = O 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper Z 7 = new Keeper ( s 8 , m 1 , W 6 ) ; <CR> Pet a = new Pet ( H 2 , k 2 , t 6 , Z 7 ) ; <CR> System . out . println ( <STRING> ) ; <CR> a . display ( ) ; <CR> Z 7 . display ( ) ; <CR> a . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>