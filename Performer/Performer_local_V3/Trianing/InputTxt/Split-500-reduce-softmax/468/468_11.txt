<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String j 5 , String D 3 , String l 6 ) { <CR> id = D 3 ; <CR> tel = l 6 ; <CR> name = j 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Pet ( String F , String T 0 , String n 0 , Keeper O 0 ) { <CR> pid = F ; <CR> name = T 0 ; <CR> type = n 0 ; <CR> count ++ ; <CR> keeper = O 0 ; <CR> } <CR> private static int count ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> private Keeper keeper ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] e 5 ) { <CR> Scanner u 5 = new Scanner ( System . in ) ; <CR> boolean d 7 = <STRING> ; <CR> while ( d 7 ) { <CR> System . out . print ( <STRING> ) ; <CR> String y 5 = u 5 . nextLine ( ) ; <CR> if ( y 5 . equals ( <STRING> ) ) { <CR> d 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String J 1 = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String y 2 = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v 2 = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 1 = u 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper w 9 = new Keeper ( v 2 , u , c 1 ) ; <CR> Pet O 6 = new Pet ( J 1 , y 2 , y 5 , w 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 6 . display ( ) ; <CR> w 9 . display ( ) ; <CR> O 6 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>