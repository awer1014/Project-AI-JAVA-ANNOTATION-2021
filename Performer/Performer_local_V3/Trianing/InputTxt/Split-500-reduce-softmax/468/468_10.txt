<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String F 7 , String T 3 , String p ) { <CR> id = T 3 ; <CR> tel = p ; <CR> name = F 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public Pet ( String b 9 , String b 7 , String C 7 , Keeper V 4 ) { <CR> pid = b 9 ; <CR> name = b 7 ; <CR> type = C 7 ; <CR> count ++ ; <CR> keeper = V 4 ; <CR> } <CR> private static int count ; <CR> private Keeper keeper ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] J 1 ) { <CR> Scanner d 3 = new Scanner ( System . in ) ; <CR> boolean r 2 = <STRING> ; <CR> while ( r 2 ) { <CR> System . out . print ( <STRING> ) ; <CR> String I 9 = d 3 . nextLine ( ) ; <CR> if ( I 9 . equals ( <STRING> ) ) { <CR> r 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String T 5 = d 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String I 3 = d 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String e 0 = d 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String O 5 = d 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String G 3 = d 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper G 1 = new Keeper ( e 0 , O 5 , G 3 ) ; <CR> Pet a 9 = new Pet ( T 5 , I 3 , I 9 , G 1 ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 9 . display ( ) ; <CR> G 1 . display ( ) ; <CR> a 9 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>