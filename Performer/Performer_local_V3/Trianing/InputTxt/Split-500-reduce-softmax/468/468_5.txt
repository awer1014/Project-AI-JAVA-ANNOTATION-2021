<BOC> public class Keeper { <CR> public Keeper ( String m 7 , String e 2 , String t 0 ) { <CR> id = e 2 ; <CR> tel = t 0 ; <CR> name = m 7 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> private Keeper keeper ; <CR> private static int count ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public Pet ( String F 5 , String D 0 , String h 5 , Keeper B 1 ) { <CR> pid = F 5 ; <CR> name = D 0 ; <CR> type = h 5 ; <CR> count ++ ; <CR> keeper = B 1 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] a 8 ) { <CR> Scanner M 2 = new Scanner ( System . in ) ; <CR> boolean g 1 = <STRING> ; <CR> while ( g 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String n 4 = M 2 . nextLine ( ) ; <CR> if ( n 4 . equals ( <STRING> ) ) { <CR> g 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String l 9 = M 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 1 = M 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String f 5 = M 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Y 3 = M 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String P 9 = M 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper X 0 = new Keeper ( f 5 , Y 3 , P 9 ) ; <CR> Pet D 5 = new Pet ( l 9 , o 1 , n 4 , X 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 5 . display ( ) ; <CR> X 0 . display ( ) ; <CR> D 5 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>