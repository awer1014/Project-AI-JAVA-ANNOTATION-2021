<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String t 5 , String P 2 , String A 6 ) { <CR> id = P 2 ; <CR> tel = A 6 ; <CR> name = t 5 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> public Pet ( String a 7 , String x 3 , String k 8 , Keeper Y 5 ) { <CR> pid = a 7 ; <CR> name = x 3 ; <CR> type = k 8 ; <CR> count ++ ; <CR> keeper = Y 5 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private static int count ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private Keeper keeper ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] D 3 ) { <CR> Scanner A 3 = new Scanner ( System . in ) ; <CR> boolean W 3 = <STRING> ; <CR> while ( W 3 ) { <CR> System . out . print ( <STRING> ) ; <CR> String m 8 = A 3 . nextLine ( ) ; <CR> if ( m 8 . equals ( <STRING> ) ) { <CR> W 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String U = A 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x 9 = A 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 8 = A 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String a 3 = A 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 2 = A 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper K 2 = new Keeper ( H 8 , a 3 , V 2 ) ; <CR> Pet E 8 = new Pet ( U , x 9 , m 8 , K 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 8 . display ( ) ; <CR> K 2 . display ( ) ; <CR> E 8 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>