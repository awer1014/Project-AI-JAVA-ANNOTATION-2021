<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String t 2 , String t 4 , String o 6 ) { <CR> id = t 4 ; <CR> tel = o 6 ; <CR> name = t 2 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> public Pet ( String E 0 , String X 2 , String P 9 , Keeper x 7 ) { <CR> pid = E 0 ; <CR> name = X 2 ; <CR> type = P 9 ; <CR> count ++ ; <CR> keeper = x 7 ; <CR> } <CR> private Keeper keeper ; <CR> private static int count ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] g 5 ) { <CR> Scanner F 1 = new Scanner ( System . in ) ; <CR> boolean l 2 = <STRING> ; <CR> while ( l 2 ) { <CR> System . out . print ( <STRING> ) ; <CR> String m 1 = F 1 . nextLine ( ) ; <CR> if ( m 1 . equals ( <STRING> ) ) { <CR> l 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String k 8 = F 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 1 = F 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 7 = F 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String r 8 = F 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m 6 = F 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper y 2 = new Keeper ( D 7 , r 8 , m 6 ) ; <CR> Pet O 5 = new Pet ( k 8 , V 1 , m 1 , y 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 5 . display ( ) ; <CR> y 2 . display ( ) ; <CR> O 5 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>