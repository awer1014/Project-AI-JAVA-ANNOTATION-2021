<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String Q 7 , String m 7 , String K ) { <CR> id = m 7 ; <CR> tel = K ; <CR> name = Q 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> public Pet ( String D 7 , String L 3 , String k 3 , Keeper L 1 ) { <CR> pid = D 7 ; <CR> name = L 3 ; <CR> type = k 3 ; <CR> count ++ ; <CR> keeper = L 1 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private static int count ; <CR> private Keeper keeper ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] y 7 ) { <CR> Scanner H 3 = new Scanner ( System . in ) ; <CR> boolean V 1 = <STRING> ; <CR> while ( V 1 ) { <CR> System . out . print ( <STRING> ) ; <CR> String j 4 = H 3 . nextLine ( ) ; <CR> if ( j 4 . equals ( <STRING> ) ) { <CR> V 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String P 0 = H 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Z 0 = H 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String I 5 = H 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String R 3 = H 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String O 6 = H 3 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper Y 0 = new Keeper ( I 5 , R 3 , O 6 ) ; <CR> Pet n 9 = new Pet ( P 0 , Z 0 , j 4 , Y 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 9 . display ( ) ; <CR> Y 0 . display ( ) ; <CR> n 9 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>