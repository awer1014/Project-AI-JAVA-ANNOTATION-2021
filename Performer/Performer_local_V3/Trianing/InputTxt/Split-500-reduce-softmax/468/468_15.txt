<BOC> public class Keeper { <CR> public Keeper ( String g 6 , String k 0 , String A 7 ) { <CR> id = k 0 ; <CR> tel = A 7 ; <CR> name = g 6 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String pid , name , type ; <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private Keeper keeper ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public Pet ( String D 4 , String Z 2 , String h , Keeper w ) { <CR> pid = D 4 ; <CR> name = Z 2 ; <CR> type = h ; <CR> count ++ ; <CR> keeper = w ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] p 1 ) { <CR> Scanner D 5 = new Scanner ( System . in ) ; <CR> boolean A 6 = <STRING> ; <CR> while ( A 6 ) { <CR> System . out . print ( <STRING> ) ; <CR> String A 4 = D 5 . nextLine ( ) ; <CR> if ( A 4 . equals ( <STRING> ) ) { <CR> A 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String G = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String M 1 = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String A 8 = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d 6 = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z 8 = D 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper N 2 = new Keeper ( A 8 , d 6 , z 8 ) ; <CR> Pet z 2 = new Pet ( G , M 1 , A 4 , N 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 2 . display ( ) ; <CR> N 2 . display ( ) ; <CR> z 2 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>