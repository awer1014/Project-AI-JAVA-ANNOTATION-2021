<BOC> public class Exam extends Test { <CR> public Exam ( String n 5 , String a 5 , double m 7 , double g 1 ) { <CR> super ( n 5 , a 5 , m 7 , g 1 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String t 8 , String O 9 , double o 6 , double d 9 ) { <CR> super ( t 8 , O 9 , o 6 , d 9 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] W 2 ) { <CR> Scanner V 2 = new Scanner ( System . in ) ; <CR> boolean D 0 = <STRING> ; <CR> while ( D 0 ) { <CR> System . out . println ( <STRING> ) ; <CR> String Q 6 = V 2 . nextLine ( ) ; <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> D 0 = <STRING> ; <CR> break ; <CR> } <CR> if ( Q 6 . equals ( <STRING> ) || Q 6 . equals ( <STRING> ) || Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String n 4 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String e 2 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double s 5 = Double . parseDouble ( V 2 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double B = Double . parseDouble ( V 2 . nextLine ( ) ) ; <CR> String y = <STRING> ; <CR> String G 0 = <STRING> ; <CR> String G 2 = <STRING> ; <CR> String v 4 = <STRING> ; <CR> String T 8 = <STRING> ; <CR> String p 2 = <STRING> ; <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> G 2 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 4 = V 2 . nextLine ( ) ; <CR> } <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> y = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 0 = V 2 . nextLine ( ) ; <CR> } <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 8 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 2 = V 2 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test L 7 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( Q 6 . equals ( <STRING> ) ) <CR> L 7 = new Exam ( n 4 , e 2 , s 5 , B ) ; <CR> else if ( Q 6 . equals ( <STRING> ) ) <CR> L 7 = new HomeWork ( n 4 , e 2 , s 5 , B ) ; <CR> else if ( Q 6 . equals ( <STRING> ) ) <CR> L 7 = new Report ( n 4 , e 2 , s 5 , B ) ; <CR> if ( L 7 ! = <STRING> ) { <CR> L 7 . print ( ) ; <CR> if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + G 2 ) ; <CR> System . out . println ( <STRING> + v 4 ) ; <CR> } <CR> else if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + y ) ; <CR> System . out . println ( <STRING> + G 0 ) ; <CR> } <CR> else if ( Q 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + T 8 ) ; <CR> System . out . println ( <STRING> + p 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> L 7 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String M 5 , String g 8 , double S 1 , double x 1 ) { <CR> super ( M 5 , g 8 , S 1 , x 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> abstract public void print ( ) ; <CR> String info ; <CR> String info_description ; <CR> private String name ; <CR> public Test ( String e 7 , String E 5 , double v 1 , double W 5 ) { <CR> number = e 7 ; <CR> name = E 5 ; <CR> score = v 1 ; <CR> propotation = W 5 ; <CR> } <CR> private String number ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> private double score ; <CR> private String time , range , end_time , description ; <CR> private double propotation ; <CR> } <CR> <EOC>