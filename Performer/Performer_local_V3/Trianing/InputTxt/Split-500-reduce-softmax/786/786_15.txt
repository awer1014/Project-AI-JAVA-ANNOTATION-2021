<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String V 8 , String Q 8 , double Y 7 , double f 4 ) { <CR> super ( V 8 , Q 8 , Y 7 , f 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String s 2 , String a 6 , double y 2 , double l 6 ) { <CR> super ( s 2 , a 6 , y 2 , l 6 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] F 6 ) { <CR> Scanner w 1 = new Scanner ( System . in ) ; <CR> boolean t = <STRING> ; <CR> while ( t ) { <CR> System . out . println ( <STRING> ) ; <CR> String k = w 1 . nextLine ( ) ; <CR> if ( k . equals ( <STRING> ) ) { <CR> t = <STRING> ; <CR> break ; <CR> } <CR> if ( k . equals ( <STRING> ) || k . equals ( <STRING> ) || k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String M 9 = w 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String U 7 = w 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double w 0 = Double . parseDouble ( w 1 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double u 4 = Double . parseDouble ( w 1 . nextLine ( ) ) ; <CR> String T = <STRING> ; <CR> String w 9 = <STRING> ; <CR> String D 6 = <STRING> ; <CR> String k 1 = <STRING> ; <CR> String G 9 = <STRING> ; <CR> String h 3 = <STRING> ; <CR> if ( k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 6 = w 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 1 = w 1 . nextLine ( ) ; <CR> } <CR> if ( k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T = w 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> w 9 = w 1 . nextLine ( ) ; <CR> } <CR> if ( k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> G 9 = w 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 3 = w 1 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test w 4 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( k . equals ( <STRING> ) ) <CR> w 4 = new Exam ( M 9 , U 7 , w 0 , u 4 ) ; <CR> else if ( k . equals ( <STRING> ) ) <CR> w 4 = new HomeWork ( M 9 , U 7 , w 0 , u 4 ) ; <CR> else if ( k . equals ( <STRING> ) ) <CR> w 4 = new Report ( M 9 , U 7 , w 0 , u 4 ) ; <CR> if ( w 4 ! = <STRING> ) { <CR> w 4 . print ( ) ; <CR> if ( k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + D 6 ) ; <CR> System . out . println ( <STRING> + k 1 ) ; <CR> } <CR> else if ( k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + T ) ; <CR> System . out . println ( <STRING> + w 9 ) ; <CR> } <CR> else if ( k . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + G 9 ) ; <CR> System . out . println ( <STRING> + h 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> w 4 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String q 1 , String Q 8 , double b 4 , double i ) { <CR> super ( q 1 , Q 8 , b 4 , i ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private double propotation ; <CR> private double score ; <CR> private String time , range , end_time , description ; <CR> String info ; <CR> private String name ; <CR> private String number ; <CR> abstract public void print ( ) ; <CR> public Test ( String W 6 , String a 0 , double p , double i 0 ) { <CR> number = W 6 ; <CR> name = a 0 ; <CR> score = p ; <CR> propotation = i 0 ; <CR> } <CR> String info_description ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> } <CR> <EOC>