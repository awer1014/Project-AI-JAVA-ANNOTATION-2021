<BOC> public class Exam extends Test { <CR> public Exam ( String W 8 , String r 5 , double B 4 , double n 5 ) { <CR> super ( W 8 , r 5 , B 4 , n 5 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String y 7 , String s 1 , double g 3 , double u 0 ) { <CR> super ( y 7 , s 1 , g 3 , u 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] J 1 ) { <CR> Scanner E 6 = new Scanner ( System . in ) ; <CR> boolean G 1 = <STRING> ; <CR> while ( G 1 ) { <CR> System . out . println ( <STRING> ) ; <CR> String B 6 = E 6 . nextLine ( ) ; <CR> if ( B 6 . equals ( <STRING> ) ) { <CR> G 1 = <STRING> ; <CR> break ; <CR> } <CR> if ( B 6 . equals ( <STRING> ) || B 6 . equals ( <STRING> ) || B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String u 2 = E 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String S 2 = E 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double p 0 = Double . parseDouble ( E 6 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double P = Double . parseDouble ( E 6 . nextLine ( ) ) ; <CR> String M 1 = <STRING> ; <CR> String o 4 = <STRING> ; <CR> String M = <STRING> ; <CR> String i 4 = <STRING> ; <CR> String o 0 = <STRING> ; <CR> String Z 3 = <STRING> ; <CR> if ( B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M = E 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 4 = E 6 . nextLine ( ) ; <CR> } <CR> if ( B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M 1 = E 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 4 = E 6 . nextLine ( ) ; <CR> } <CR> if ( B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> o 0 = E 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 3 = E 6 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test m 3 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( B 6 . equals ( <STRING> ) ) <CR> m 3 = new Exam ( u 2 , S 2 , p 0 , P ) ; <CR> else if ( B 6 . equals ( <STRING> ) ) <CR> m 3 = new HomeWork ( u 2 , S 2 , p 0 , P ) ; <CR> else if ( B 6 . equals ( <STRING> ) ) <CR> m 3 = new Report ( u 2 , S 2 , p 0 , P ) ; <CR> if ( m 3 ! = <STRING> ) { <CR> m 3 . print ( ) ; <CR> if ( B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + M ) ; <CR> System . out . println ( <STRING> + i 4 ) ; <CR> } <CR> else if ( B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + M 1 ) ; <CR> System . out . println ( <STRING> + o 4 ) ; <CR> } <CR> else if ( B 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + o 0 ) ; <CR> System . out . println ( <STRING> + Z 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> m 3 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String W 9 , String e 1 , double l 1 , double L ) { <CR> super ( W 9 , e 1 , l 1 , L ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> public Test ( String v 7 , String C 1 , double L 7 , double J 4 ) { <CR> number = v 7 ; <CR> name = C 1 ; <CR> score = L 7 ; <CR> propotation = J 4 ; <CR> } <CR> private String number ; <CR> private String name ; <CR> abstract public void print ( ) ; <CR> private String time , range , end_time , description ; <CR> private double propotation ; <CR> private double score ; <CR> String info_description ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info ; <CR> } <CR> <EOC>