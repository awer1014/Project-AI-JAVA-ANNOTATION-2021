<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String V 8 , String Q 5 , double t , double B 8 ) { <CR> super ( V 8 , Q 5 , t , B 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String o 1 , String k 0 , double M 3 , double K 4 ) { <CR> super ( o 1 , k 0 , M 3 , K 4 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] G 3 ) { <CR> Scanner W 9 = new Scanner ( System . in ) ; <CR> boolean Q 5 = <STRING> ; <CR> while ( Q 5 ) { <CR> System . out . println ( <STRING> ) ; <CR> String N 0 = W 9 . nextLine ( ) ; <CR> if ( N 0 . equals ( <STRING> ) ) { <CR> Q 5 = <STRING> ; <CR> break ; <CR> } <CR> if ( N 0 . equals ( <STRING> ) || N 0 . equals ( <STRING> ) || N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String e 7 = W 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String g = W 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double V 8 = Double . parseDouble ( W 9 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double A = Double . parseDouble ( W 9 . nextLine ( ) ) ; <CR> String w 8 = <STRING> ; <CR> String A 9 = <STRING> ; <CR> String e 8 = <STRING> ; <CR> String M 5 = <STRING> ; <CR> String f 5 = <STRING> ; <CR> String E 5 = <STRING> ; <CR> if ( N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 8 = W 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> M 5 = W 9 . nextLine ( ) ; <CR> } <CR> if ( N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> w 8 = W 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 9 = W 9 . nextLine ( ) ; <CR> } <CR> if ( N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> f 5 = W 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E 5 = W 9 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test r 6 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( N 0 . equals ( <STRING> ) ) <CR> r 6 = new Exam ( e 7 , g , V 8 , A ) ; <CR> else if ( N 0 . equals ( <STRING> ) ) <CR> r 6 = new HomeWork ( e 7 , g , V 8 , A ) ; <CR> else if ( N 0 . equals ( <STRING> ) ) <CR> r 6 = new Report ( e 7 , g , V 8 , A ) ; <CR> if ( r 6 ! = <STRING> ) { <CR> r 6 . print ( ) ; <CR> if ( N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + e 8 ) ; <CR> System . out . println ( <STRING> + M 5 ) ; <CR> } <CR> else if ( N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + w 8 ) ; <CR> System . out . println ( <STRING> + A 9 ) ; <CR> } <CR> else if ( N 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + f 5 ) ; <CR> System . out . println ( <STRING> + E 5 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> r 6 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String k 2 , String G 0 , double I 5 , double h 3 ) { <CR> super ( k 2 , G 0 , I 5 , h 3 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> abstract public void print ( ) ; <CR> private String time , range , end_time , description ; <CR> private String name ; <CR> private double score ; <CR> private double propotation ; <CR> private String number ; <CR> public Test ( String u 3 , String U , double J 8 , double N 9 ) { <CR> number = u 3 ; <CR> name = U ; <CR> score = J 8 ; <CR> propotation = N 9 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info ; <CR> String info_description ; <CR> } <CR> <EOC>