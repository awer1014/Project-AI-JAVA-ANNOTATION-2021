<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String c 7 , String F 1 , double B , double Z 2 ) { <CR> super ( c 7 , F 1 , B , Z 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String f 4 , String c 5 , double G 3 , double P 9 ) { <CR> super ( f 4 , c 5 , G 3 , P 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] T 4 ) { <CR> Scanner s = new Scanner ( System . in ) ; <CR> boolean H 1 = <STRING> ; <CR> while ( H 1 ) { <CR> System . out . println ( <STRING> ) ; <CR> String O = s . nextLine ( ) ; <CR> if ( O . equals ( <STRING> ) ) { <CR> H 1 = <STRING> ; <CR> break ; <CR> } <CR> if ( O . equals ( <STRING> ) || O . equals ( <STRING> ) || O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String P 0 = s . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String s 5 = s . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double N 5 = Double . parseDouble ( s . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double j = Double . parseDouble ( s . nextLine ( ) ) ; <CR> String H 5 = <STRING> ; <CR> String R 8 = <STRING> ; <CR> String v 5 = <STRING> ; <CR> String v 0 = <STRING> ; <CR> String m 0 = <STRING> ; <CR> String x 2 = <STRING> ; <CR> if ( O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 5 = s . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 0 = s . nextLine ( ) ; <CR> } <CR> if ( O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 5 = s . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 8 = s . nextLine ( ) ; <CR> } <CR> if ( O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> m 0 = s . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 2 = s . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test y 4 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( O . equals ( <STRING> ) ) <CR> y 4 = new Exam ( P 0 , s 5 , N 5 , j ) ; <CR> else if ( O . equals ( <STRING> ) ) <CR> y 4 = new HomeWork ( P 0 , s 5 , N 5 , j ) ; <CR> else if ( O . equals ( <STRING> ) ) <CR> y 4 = new Report ( P 0 , s 5 , N 5 , j ) ; <CR> if ( y 4 ! = <STRING> ) { <CR> y 4 . print ( ) ; <CR> if ( O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + v 5 ) ; <CR> System . out . println ( <STRING> + v 0 ) ; <CR> } <CR> else if ( O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + H 5 ) ; <CR> System . out . println ( <STRING> + R 8 ) ; <CR> } <CR> else if ( O . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + m 0 ) ; <CR> System . out . println ( <STRING> + x 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> y 4 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String l , String e , double m 2 , double M 0 ) { <CR> super ( l , e , m 2 , M 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> abstract public void print ( ) ; <CR> private double propotation ; <CR> private String number ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info ; <CR> private double score ; <CR> String info_description ; <CR> private String time , range , end_time , description ; <CR> private String name ; <CR> public Test ( String f 6 , String n 7 , double T 1 , double q 1 ) { <CR> number = f 6 ; <CR> name = n 7 ; <CR> score = T 1 ; <CR> propotation = q 1 ; <CR> } <CR> } <CR> <EOC>