<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String b , String O 7 , double A 5 , double A 8 ) { <CR> super ( b , O 7 , A 5 , A 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String w 4 , String X 2 , double O 3 , double j 6 ) { <CR> super ( w 4 , X 2 , O 3 , j 6 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] n ) { <CR> Scanner R 0 = new Scanner ( System . in ) ; <CR> boolean a 8 = <STRING> ; <CR> while ( a 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String o 0 = R 0 . nextLine ( ) ; <CR> if ( o 0 . equals ( <STRING> ) ) { <CR> a 8 = <STRING> ; <CR> break ; <CR> } <CR> if ( o 0 . equals ( <STRING> ) || o 0 . equals ( <STRING> ) || o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String W 3 = R 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Z 8 = R 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double T 9 = Double . parseDouble ( R 0 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double p = Double . parseDouble ( R 0 . nextLine ( ) ) ; <CR> String d 4 = <STRING> ; <CR> String t 4 = <STRING> ; <CR> String q 4 = <STRING> ; <CR> String T = <STRING> ; <CR> String C 8 = <STRING> ; <CR> String n 3 = <STRING> ; <CR> if ( o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> q 4 = R 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> T = R 0 . nextLine ( ) ; <CR> } <CR> if ( o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> d 4 = R 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 4 = R 0 . nextLine ( ) ; <CR> } <CR> if ( o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> C 8 = R 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 3 = R 0 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test G 8 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( o 0 . equals ( <STRING> ) ) <CR> G 8 = new Exam ( W 3 , Z 8 , T 9 , p ) ; <CR> else if ( o 0 . equals ( <STRING> ) ) <CR> G 8 = new HomeWork ( W 3 , Z 8 , T 9 , p ) ; <CR> else if ( o 0 . equals ( <STRING> ) ) <CR> G 8 = new Report ( W 3 , Z 8 , T 9 , p ) ; <CR> if ( G 8 ! = <STRING> ) { <CR> G 8 . print ( ) ; <CR> if ( o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + q 4 ) ; <CR> System . out . println ( <STRING> + T ) ; <CR> } <CR> else if ( o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + d 4 ) ; <CR> System . out . println ( <STRING> + t 4 ) ; <CR> } <CR> else if ( o 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + C 8 ) ; <CR> System . out . println ( <STRING> + n 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> G 8 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String K 2 , String x 5 , double m 0 , double F 7 ) { <CR> super ( K 2 , x 5 , m 0 , F 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private String name ; <CR> private String number ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info ; <CR> private double score ; <CR> public Test ( String f 7 , String R 5 , double y 4 , double r 4 ) { <CR> number = f 7 ; <CR> name = R 5 ; <CR> score = y 4 ; <CR> propotation = r 4 ; <CR> } <CR> private String time , range , end_time , description ; <CR> private double propotation ; <CR> String info_description ; <CR> abstract public void print ( ) ; <CR> } <CR> <EOC>