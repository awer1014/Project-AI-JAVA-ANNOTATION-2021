<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String m 1 , String W 7 , double I 0 , double g ) { <CR> super ( m 1 , W 7 , I 0 , g ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String P 3 , String L 3 , double y 7 , double K ) { <CR> super ( P 3 , L 3 , y 7 , K ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] r 4 ) { <CR> Scanner J 7 = new Scanner ( System . in ) ; <CR> boolean Z = <STRING> ; <CR> while ( Z ) { <CR> System . out . println ( <STRING> ) ; <CR> String n 0 = J 7 . nextLine ( ) ; <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> Z = <STRING> ; <CR> break ; <CR> } <CR> if ( n 0 . equals ( <STRING> ) || n 0 . equals ( <STRING> ) || n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String i 0 = J 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String j 2 = J 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double z 8 = Double . parseDouble ( J 7 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double m 2 = Double . parseDouble ( J 7 . nextLine ( ) ) ; <CR> String Q 4 = <STRING> ; <CR> String Q 2 = <STRING> ; <CR> String F 9 = <STRING> ; <CR> String v 1 = <STRING> ; <CR> String d = <STRING> ; <CR> String Z 9 = <STRING> ; <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 9 = J 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 1 = J 7 . nextLine ( ) ; <CR> } <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q 4 = J 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 2 = J 7 . nextLine ( ) ; <CR> } <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> d = J 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 9 = J 7 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test q 5 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( n 0 . equals ( <STRING> ) ) <CR> q 5 = new Exam ( i 0 , j 2 , z 8 , m 2 ) ; <CR> else if ( n 0 . equals ( <STRING> ) ) <CR> q 5 = new HomeWork ( i 0 , j 2 , z 8 , m 2 ) ; <CR> else if ( n 0 . equals ( <STRING> ) ) <CR> q 5 = new Report ( i 0 , j 2 , z 8 , m 2 ) ; <CR> if ( q 5 ! = <STRING> ) { <CR> q 5 . print ( ) ; <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + F 9 ) ; <CR> System . out . println ( <STRING> + v 1 ) ; <CR> } <CR> else if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + Q 4 ) ; <CR> System . out . println ( <STRING> + Q 2 ) ; <CR> } <CR> else if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + d ) ; <CR> System . out . println ( <STRING> + Z 9 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> q 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String m 2 , String Y , double A 3 , double v 8 ) { <CR> super ( m 2 , Y , A 3 , v 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> abstract public void print ( ) ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> private String time , range , end_time , description ; <CR> private double propotation ; <CR> private String name ; <CR> private String number ; <CR> String info ; <CR> private double score ; <CR> String info_description ; <CR> public Test ( String d 0 , String c 0 , double Z 6 , double U 3 ) { <CR> number = d 0 ; <CR> name = c 0 ; <CR> score = Z 6 ; <CR> propotation = U 3 ; <CR> } <CR> } <CR> <EOC>