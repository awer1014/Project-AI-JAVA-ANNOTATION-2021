<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String G 0 , String p 6 , double b , double O 1 ) { <CR> super ( G 0 , p 6 , b , O 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String Z 2 , String Q 0 , double U 2 , double N ) { <CR> super ( Z 2 , Q 0 , U 2 , N ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] M 2 ) { <CR> Scanner M 8 = new Scanner ( System . in ) ; <CR> boolean P 2 = <STRING> ; <CR> while ( P 2 ) { <CR> System . out . println ( <STRING> ) ; <CR> String C 3 = M 8 . nextLine ( ) ; <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> P 2 = <STRING> ; <CR> break ; <CR> } <CR> if ( C 3 . equals ( <STRING> ) || C 3 . equals ( <STRING> ) || C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String K 0 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String v 1 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double e 4 = Double . parseDouble ( M 8 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double j = Double . parseDouble ( M 8 . nextLine ( ) ) ; <CR> String r 2 = <STRING> ; <CR> String j 7 = <STRING> ; <CR> String H 2 = <STRING> ; <CR> String c 5 = <STRING> ; <CR> String L 9 = <STRING> ; <CR> String z 1 = <STRING> ; <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 2 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> c 5 = M 8 . nextLine ( ) ; <CR> } <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> r 2 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> j 7 = M 8 . nextLine ( ) ; <CR> } <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> L 9 = M 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 1 = M 8 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test Q 2 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( C 3 . equals ( <STRING> ) ) <CR> Q 2 = new Exam ( K 0 , v 1 , e 4 , j ) ; <CR> else if ( C 3 . equals ( <STRING> ) ) <CR> Q 2 = new HomeWork ( K 0 , v 1 , e 4 , j ) ; <CR> else if ( C 3 . equals ( <STRING> ) ) <CR> Q 2 = new Report ( K 0 , v 1 , e 4 , j ) ; <CR> if ( Q 2 ! = <STRING> ) { <CR> Q 2 . print ( ) ; <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + H 2 ) ; <CR> System . out . println ( <STRING> + c 5 ) ; <CR> } <CR> else if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + r 2 ) ; <CR> System . out . println ( <STRING> + j 7 ) ; <CR> } <CR> else if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + L 9 ) ; <CR> System . out . println ( <STRING> + z 1 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Q 2 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String D 1 , String I 5 , double d 4 , double R 4 ) { <CR> super ( D 1 , I 5 , d 4 , R 4 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> String info_description ; <CR> private String number ; <CR> private String name ; <CR> public Test ( String Y 7 , String E 6 , double q 5 , double S 7 ) { <CR> number = Y 7 ; <CR> name = E 6 ; <CR> score = q 5 ; <CR> propotation = S 7 ; <CR> } <CR> abstract public void print ( ) ; <CR> private double propotation ; <CR> String info ; <CR> private double score ; <CR> private String time , range , end_time , description ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> } <CR> <EOC>