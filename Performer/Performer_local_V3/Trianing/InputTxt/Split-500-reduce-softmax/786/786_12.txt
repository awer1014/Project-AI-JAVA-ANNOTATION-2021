<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String t 5 , String C 1 , double X 5 , double d 5 ) { <CR> super ( t 5 , C 1 , X 5 , d 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String S 6 , String y 5 , double F 4 , double N 5 ) { <CR> super ( S 6 , y 5 , F 4 , N 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] n 4 ) { <CR> Scanner C 1 = new Scanner ( System . in ) ; <CR> boolean n 7 = <STRING> ; <CR> while ( n 7 ) { <CR> System . out . println ( <STRING> ) ; <CR> String C 3 = C 1 . nextLine ( ) ; <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> n 7 = <STRING> ; <CR> break ; <CR> } <CR> if ( C 3 . equals ( <STRING> ) || C 3 . equals ( <STRING> ) || C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String O 0 = C 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String l 9 = C 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double R 9 = Double . parseDouble ( C 1 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double d = Double . parseDouble ( C 1 . nextLine ( ) ) ; <CR> String F 3 = <STRING> ; <CR> String L 8 = <STRING> ; <CR> String T 8 = <STRING> ; <CR> String A 1 = <STRING> ; <CR> String B 5 = <STRING> ; <CR> String q = <STRING> ; <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 8 = C 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 1 = C 1 . nextLine ( ) ; <CR> } <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 3 = C 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> L 8 = C 1 . nextLine ( ) ; <CR> } <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> B 5 = C 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q = C 1 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test p 9 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( C 3 . equals ( <STRING> ) ) <CR> p 9 = new Exam ( O 0 , l 9 , R 9 , d ) ; <CR> else if ( C 3 . equals ( <STRING> ) ) <CR> p 9 = new HomeWork ( O 0 , l 9 , R 9 , d ) ; <CR> else if ( C 3 . equals ( <STRING> ) ) <CR> p 9 = new Report ( O 0 , l 9 , R 9 , d ) ; <CR> if ( p 9 ! = <STRING> ) { <CR> p 9 . print ( ) ; <CR> if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + T 8 ) ; <CR> System . out . println ( <STRING> + A 1 ) ; <CR> } <CR> else if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + F 3 ) ; <CR> System . out . println ( <STRING> + L 8 ) ; <CR> } <CR> else if ( C 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + B 5 ) ; <CR> System . out . println ( <STRING> + q ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> p 9 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String H 5 , String P 8 , double n 7 , double k 3 ) { <CR> super ( H 5 , P 8 , n 7 , k 3 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> String info ; <CR> private String name ; <CR> public Test ( String z 8 , String I 4 , double H 4 , double r 0 ) { <CR> number = z 8 ; <CR> name = I 4 ; <CR> score = H 4 ; <CR> propotation = r 0 ; <CR> } <CR> private double score ; <CR> private double propotation ; <CR> private String time , range , end_time , description ; <CR> abstract public void print ( ) ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info_description ; <CR> private String number ; <CR> } <CR> <EOC>