<BOC> import java . util . * ; <CR> abstract public class Evaluation { <CR> public static void main ( String [ ] J 6 ) { <CR> } <CR> protected String a ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> Scanner n = new Scanner ( System . in ) ; <CR> public Evaluation ( String u 6 , String s 8 , double W 6 , double O 9 ) { <CR> System . out . println ( <STRING> ) ; <CR> type = n . nextInt ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> u 6 = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 8 = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> W 6 = n . nextDouble ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 9 = n . nextDouble ( ) ; <CR> if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else if ( type == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> } <CR> protected int type ; <CR> protected String b ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String J 1 , String x 0 , double q 9 , double F 8 ) { <CR> super ( J 1 , x 0 , q 9 , F 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String S 1 , String V 5 , double P 1 , double X 7 ) { <CR> super ( S 1 , V 5 , P 1 , X 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String a 0 , String l 4 , double H , double p 5 ) { <CR> super ( a 0 , l 4 , H , p 5 ) ; <CR> } <CR> } <CR> <EOC>