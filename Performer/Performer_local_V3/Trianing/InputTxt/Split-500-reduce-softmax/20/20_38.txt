<BOC> import java . util . Arrays ; <CR> public class Card implements Comparable { <CR> static Letter [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> public String getDate ( ) { <CR> return letter . date ; <CR> } <CR> public int compareTo ( Object N 8 ) { <CR> Card N = ( Card ) N 8 ; <CR> int y 4 = Integer . parseInt ( this . getDate ) ; <CR> int s 2 = Integer . parseInt ( N . getDate ) ; <CR> int W 2 = y 4 - s 2 ; <CR> } <CR> private short lists ; <CR> Card ( Letter a 8 ) { <CR> this . letter = a 8 ; <CR> } <CR> public static String listsAsString ( short m ) { <CR> return list [ m ] ; <CR> } <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String L 1 , String v , String J 5 , String U 3 , String P 8 ) { <CR> super ( L 1 , v , J 5 , U 3 , P 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String h , String O , String A 4 , String A 5 , String z 5 ) { <CR> super ( h , O , A 4 , A 5 , z 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> Envelop ( String t 0 , String Q 1 , Letter z 1 ) { <CR> this . senderAddr = t 0 ; <CR> this . receiverAddr = Q 1 ; <CR> this . letter = z 1 ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr + <STRING> + letter . sender ) ; <CR> System . out . println ( <STRING> + receiverAddr + <STRING> + letter . receiver + <STRING> + letter . title ) ; <CR> } <CR> Letter letter ; <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> void display ( int Q 2 ) { <CR> if ( Q 2 == <STRING> ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String S 6 , String h 3 , String G 8 , String Y 7 , String V 0 ) { <CR> this . title = S 6 ; <CR> this . receiver = h 3 ; <CR> this . content = G 8 ; <CR> this . sender = Y 7 ; <CR> this . date = V 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test { <CR> public static void main ( String [ ] o 9 ) { <CR> Letter z 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop g 4 = new Envelop ( <STRING> , <STRING> , z 3 ) ; <CR> g 4 . display ( ) ; <CR> z 3 . display ( <STRING> ) ; <CR> } <CR> } <CR> <EOC>