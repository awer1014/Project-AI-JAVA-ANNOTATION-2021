<BOC> import java . util . Scanner ; <CR> public class keeper { <CR> String id ; <CR> public void keeperdisplay ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> public keeper ( String c 1 , String C 8 ) { <CR> this . id = c 1 ; <CR> this . tel = C 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> keeper keep ; <CR> String type ; <CR> pet ( String Z 6 , String k 5 , String z 9 , keeper x 0 ) { <CR> this . pid = Z 6 ; <CR> this . name = k 5 ; <CR> this . type = z 9 ; <CR> this . keep = x 0 ; <CR> count += <STRING> ; <CR> } <CR> String pid ; <CR> public void petdisplay ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> static int count = <STRING> ; <CR> public void speak ( String k 5 ) { <CR> if ( k 5 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else if ( k 5 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> static Scanner sca = new Scanner ( System . in ) ; <CR> String name ; <CR> public static void main ( String [ ] d 5 ) { <CR> int g 3 = <STRING> ; <CR> while ( g 3 ! = <STRING> ) { <CR> System . out . print ( <STRING> ) ; <CR> String l 6 = sca . next ( ) ; <CR> if ( Integer . parseInt ( l 6 ) == <STRING> ) <CR> break ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m 8 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String L 8 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x 7 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 4 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> keeper C = new keeper ( x 7 , k 4 ) ; <CR> pet o 3 = new pet ( l 6 , m 8 , L 8 , C ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 3 . petdisplay ( ) ; <CR> C . keeperdisplay ( ) ; <CR> o 3 . speak ( o 3 . pid ) ; <CR> System . out . println ( <STRING> ) ; <CR> count ++ ; <CR> } <CR> System . out . println ( <STRING> + count + <STRING> ) ; <CR> } <CR> } <CR> <EOC>