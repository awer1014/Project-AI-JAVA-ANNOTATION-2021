<BOC> import java . util . Scanner ; <CR> public class keeper { <CR> String tel ; <CR> public void keeperdisplay ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> public keeper ( String c 5 , String b 9 ) { <CR> this . id = c 5 ; <CR> this . tel = b 9 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public void speak ( String w 6 ) { <CR> if ( w 6 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else if ( w 6 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> static Scanner sca = new Scanner ( System . in ) ; <CR> pet ( String Y 8 , String w 6 , String B 4 , keeper A 1 ) { <CR> this . pid = Y 8 ; <CR> this . name = w 6 ; <CR> this . type = B 4 ; <CR> this . keep = A 1 ; <CR> count += <STRING> ; <CR> } <CR> String name ; <CR> public void petdisplay ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> public static void main ( String [ ] s 6 ) { <CR> int c 6 = <STRING> ; <CR> while ( c 6 ! = <STRING> ) { <CR> System . out . print ( <STRING> ) ; <CR> String g 6 = sca . next ( ) ; <CR> if ( Integer . parseInt ( g 6 ) == <STRING> ) <CR> break ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String b 9 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String t 3 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 9 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z 8 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> keeper U 4 = new keeper ( p 9 , z 8 ) ; <CR> pet a = new pet ( g 6 , b 9 , t 3 , U 4 ) ; <CR> System . out . println ( <STRING> ) ; <CR> a . petdisplay ( ) ; <CR> U 4 . keeperdisplay ( ) ; <CR> a . speak ( a . pid ) ; <CR> System . out . println ( <STRING> ) ; <CR> count ++ ; <CR> } <CR> System . out . println ( <STRING> + count + <STRING> ) ; <CR> } <CR> static int count = <STRING> ; <CR> String pid ; <CR> String type ; <CR> keeper keep ; <CR> } <CR> <EOC>