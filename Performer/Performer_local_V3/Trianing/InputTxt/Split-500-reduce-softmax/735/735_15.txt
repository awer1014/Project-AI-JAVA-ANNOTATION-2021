<BOC> import java . util . Scanner ; <CR> public class keeper { <CR> public keeper ( String P 8 , String c 8 ) { <CR> this . id = P 8 ; <CR> this . tel = c 8 ; <CR> } <CR> String id ; <CR> public void keeperdisplay ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String name ; <CR> public void petdisplay ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> public void speak ( String C 5 ) { <CR> if ( C 5 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else if ( C 5 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> static int count = <STRING> ; <CR> String pid ; <CR> pet ( String u 4 , String C 5 , String j 2 , keeper v 9 ) { <CR> this . pid = u 4 ; <CR> this . name = C 5 ; <CR> this . type = j 2 ; <CR> this . keep = v 9 ; <CR> count += <STRING> ; <CR> } <CR> keeper keep ; <CR> static Scanner sca = new Scanner ( System . in ) ; <CR> public static void main ( String [ ] i 7 ) { <CR> int t 4 = <STRING> ; <CR> while ( t 4 ! = <STRING> ) { <CR> System . out . print ( <STRING> ) ; <CR> String n 3 = sca . next ( ) ; <CR> if ( Integer . parseInt ( n 3 ) == <STRING> ) <CR> break ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String S 0 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 1 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 1 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String B 9 = sca . next ( ) ; <CR> System . out . println ( ) ; <CR> keeper z 3 = new keeper ( w 1 , B 9 ) ; <CR> pet p 5 = new pet ( n 3 , S 0 , D 1 , z 3 ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 5 . petdisplay ( ) ; <CR> z 3 . keeperdisplay ( ) ; <CR> p 5 . speak ( p 5 . pid ) ; <CR> System . out . println ( <STRING> ) ; <CR> count ++ ; <CR> } <CR> System . out . println ( <STRING> + count + <STRING> ) ; <CR> } <CR> String type ; <CR> } <CR> <EOC>