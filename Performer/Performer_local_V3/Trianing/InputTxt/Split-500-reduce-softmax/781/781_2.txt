<BOC> abstract public class Evaluation { <CR> public Evaluation ( String d 9 ) { <CR> kind = d 9 ; <CR> } <CR> public void print ( ) { <CR> String m 6 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> m 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> m 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> m 6 += <STRING> ; <CR> System . out . println ( <STRING> + m 6 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String n 7 , String h 7 ) { <CR> super ( n 7 , h 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String w 4 , String F 0 ) { <CR> super ( w 4 , F 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String I 3 , String H 8 ) { <CR> super ( I 3 , H 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String d 6 , String s 7 , String R 9 , String y 6 ) { <CR> id = d 6 ; <CR> name = s 7 ; <CR> score = R 9 ; <CR> prop = y 6 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] r 2 ) { <CR> Scanner W 3 = new Scanner ( System . in ) ; <CR> boolean l 2 = <STRING> ; <CR> while ( l 2 ) { <CR> System . out . println ( <STRING> ) ; <CR> String b 6 = W 3 . nextLine ( ) ; <CR> if ( b 6 . equals ( <STRING> ) ) { <CR> l 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String p 5 = W 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String d 1 = W 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Y = W 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String R = W 3 . nextLine ( ) ; <CR> Student X 1 = new Student ( p 5 , d 1 , Y , R ) ; <CR> Evaluation q = new Evaluation ( b 6 ) ; <CR> Evaluation t 5 = <STRING> ; <CR> String G 6 , x 7 ; <CR> if ( b 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> G 6 = W 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 7 = W 3 . nextLine ( ) ; <CR> t 5 = new Exam ( G 6 , x 7 ) ; <CR> } <CR> else if ( b 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> G 6 = W 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 7 = W 3 . nextLine ( ) ; <CR> t 5 = new HomeWork ( G 6 , x 7 ) ; <CR> } <CR> else if ( b 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> G 6 = W 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 7 = W 3 . nextLine ( ) ; <CR> t 5 = new Report ( G 6 , x 7 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( t 5 ! = <STRING> ) { <CR> q . print ( ) ; <CR> X 1 . print ( ) ; <CR> t 5 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>