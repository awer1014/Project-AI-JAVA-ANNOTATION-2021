<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public Evaluation ( String Z 9 ) { <CR> kind = Z 9 ; <CR> } <CR> public void print ( ) { <CR> String X 8 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> X 8 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> X 8 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> X 8 += <STRING> ; <CR> System . out . println ( <STRING> + X 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String k 3 , String Q 1 ) { <CR> super ( k 3 , Q 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String G , String d 7 ) { <CR> super ( G , d 7 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String h 2 , String D 6 ) { <CR> super ( h 2 , D 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String v 3 , String G 9 , String P 2 , String r 0 ) { <CR> id = v 3 ; <CR> name = G 9 ; <CR> score = P 2 ; <CR> prop = r 0 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] q 1 ) { <CR> Scanner f 7 = new Scanner ( System . in ) ; <CR> boolean b 2 = <STRING> ; <CR> while ( b 2 ) { <CR> System . out . println ( <STRING> ) ; <CR> String x 4 = f 7 . nextLine ( ) ; <CR> if ( x 4 . equals ( <STRING> ) ) { <CR> b 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String O 9 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String y 5 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String p 9 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String r 4 = f 7 . nextLine ( ) ; <CR> Student r 5 = new Student ( O 9 , y 5 , p 9 , r 4 ) ; <CR> Evaluation Q 7 = new Evaluation ( x 4 ) ; <CR> Evaluation l = <STRING> ; <CR> String N 0 , O 3 ; <CR> if ( x 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> N 0 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 3 = f 7 . nextLine ( ) ; <CR> l = new Exam ( N 0 , O 3 ) ; <CR> } <CR> else if ( x 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> N 0 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 3 = f 7 . nextLine ( ) ; <CR> l = new HomeWork ( N 0 , O 3 ) ; <CR> } <CR> else if ( x 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> N 0 = f 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 3 = f 7 . nextLine ( ) ; <CR> l = new Report ( N 0 , O 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( l ! = <STRING> ) { <CR> Q 7 . print ( ) ; <CR> r 5 . print ( ) ; <CR> l . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>