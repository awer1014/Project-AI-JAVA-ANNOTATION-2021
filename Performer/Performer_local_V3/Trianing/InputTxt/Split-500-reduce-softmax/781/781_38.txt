<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> public void print ( ) { <CR> String I 6 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> I 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> I 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> I 6 += <STRING> ; <CR> System . out . println ( <STRING> + I 6 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String V ) { <CR> kind = V ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String O 2 , String X 5 ) { <CR> super ( O 2 , X 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String d 9 , String N 4 ) { <CR> super ( d 9 , N 4 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String D 7 , String v 5 ) { <CR> super ( D 7 , v 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String f 9 , String z , String b 7 , String d 4 ) { <CR> id = f 9 ; <CR> name = z ; <CR> score = b 7 ; <CR> prop = d 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] o 5 ) { <CR> Scanner s 0 = new Scanner ( System . in ) ; <CR> boolean k = <STRING> ; <CR> while ( k ) { <CR> System . out . println ( <STRING> ) ; <CR> String q 3 = s 0 . nextLine ( ) ; <CR> if ( q 3 . equals ( <STRING> ) ) { <CR> k = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String L 9 = s 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String G = s 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String e 1 = s 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String C 3 = s 0 . nextLine ( ) ; <CR> Student a 6 = new Student ( L 9 , G , e 1 , C 3 ) ; <CR> Evaluation L 0 = new Evaluation ( q 3 ) ; <CR> Evaluation c 3 = <STRING> ; <CR> String q 0 , Y 4 ; <CR> if ( q 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> q 0 = s 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 4 = s 0 . nextLine ( ) ; <CR> c 3 = new Exam ( q 0 , Y 4 ) ; <CR> } <CR> else if ( q 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> q 0 = s 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 4 = s 0 . nextLine ( ) ; <CR> c 3 = new HomeWork ( q 0 , Y 4 ) ; <CR> } <CR> else if ( q 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> q 0 = s 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 4 = s 0 . nextLine ( ) ; <CR> c 3 = new Report ( q 0 , Y 4 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( c 3 ! = <STRING> ) { <CR> L 0 . print ( ) ; <CR> a 6 . print ( ) ; <CR> c 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>