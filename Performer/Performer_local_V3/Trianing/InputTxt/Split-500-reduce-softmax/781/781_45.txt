<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String t 3 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> t 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> t 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> t 3 += <STRING> ; <CR> System . out . println ( <STRING> + t 3 ) ; <CR> } <CR> private String kind ; <CR> public Evaluation ( String U 1 ) { <CR> kind = U 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String o 7 , String x 5 ) { <CR> super ( o 7 , x 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String W 7 , String H 7 ) { <CR> super ( W 7 , H 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String V 0 , String d 1 ) { <CR> super ( V 0 , d 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String q 4 , String b 4 , String S 1 , String f 1 ) { <CR> id = q 4 ; <CR> name = b 4 ; <CR> score = S 1 ; <CR> prop = f 1 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 4 ) { <CR> Scanner z 3 = new Scanner ( System . in ) ; <CR> boolean w 8 = <STRING> ; <CR> while ( w 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String s 3 = z 3 . nextLine ( ) ; <CR> if ( s 3 . equals ( <STRING> ) ) { <CR> w 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String P 1 = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String g 5 = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String T 8 = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String k 5 = z 3 . nextLine ( ) ; <CR> Student f 0 = new Student ( P 1 , g 5 , T 8 , k 5 ) ; <CR> Evaluation f = new Evaluation ( s 3 ) ; <CR> Evaluation P 6 = <STRING> ; <CR> String K 0 , p 2 ; <CR> if ( s 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> K 0 = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 2 = z 3 . nextLine ( ) ; <CR> P 6 = new Exam ( K 0 , p 2 ) ; <CR> } <CR> else if ( s 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> K 0 = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 2 = z 3 . nextLine ( ) ; <CR> P 6 = new HomeWork ( K 0 , p 2 ) ; <CR> } <CR> else if ( s 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> K 0 = z 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> p 2 = z 3 . nextLine ( ) ; <CR> P 6 = new Report ( K 0 , p 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( P 6 ! = <STRING> ) { <CR> f . print ( ) ; <CR> f 0 . print ( ) ; <CR> P 6 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>