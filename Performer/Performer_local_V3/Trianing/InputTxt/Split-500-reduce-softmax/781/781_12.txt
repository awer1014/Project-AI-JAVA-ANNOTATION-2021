<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public Evaluation ( String s 1 ) { <CR> kind = s 1 ; <CR> } <CR> public void print ( ) { <CR> String Y 2 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> Y 2 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> Y 2 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> Y 2 += <STRING> ; <CR> System . out . println ( <STRING> + Y 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String c 8 , String f 0 ) { <CR> super ( c 8 , f 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String g 3 , String R 2 ) { <CR> super ( g 3 , R 2 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String p 6 , String E ) { <CR> super ( p 6 , E ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String u 2 , String X 8 , String g 2 , String O 6 ) { <CR> id = u 2 ; <CR> name = X 8 ; <CR> score = g 2 ; <CR> prop = O 6 ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] N 3 ) { <CR> Scanner V 2 = new Scanner ( System . in ) ; <CR> boolean c 8 = <STRING> ; <CR> while ( c 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String i 6 = V 2 . nextLine ( ) ; <CR> if ( i 6 . equals ( <STRING> ) ) { <CR> c 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String p 4 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Z 1 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String g 0 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String v 2 = V 2 . nextLine ( ) ; <CR> Student t = new Student ( p 4 , Z 1 , g 0 , v 2 ) ; <CR> Evaluation q 3 = new Evaluation ( i 6 ) ; <CR> Evaluation u 1 = <STRING> ; <CR> String F 7 , e ; <CR> if ( i 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 7 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e = V 2 . nextLine ( ) ; <CR> u 1 = new Exam ( F 7 , e ) ; <CR> } <CR> else if ( i 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 7 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e = V 2 . nextLine ( ) ; <CR> u 1 = new HomeWork ( F 7 , e ) ; <CR> } <CR> else if ( i 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 7 = V 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e = V 2 . nextLine ( ) ; <CR> u 1 = new Report ( F 7 , e ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( u 1 ! = <STRING> ) { <CR> q 3 . print ( ) ; <CR> t . print ( ) ; <CR> u 1 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>