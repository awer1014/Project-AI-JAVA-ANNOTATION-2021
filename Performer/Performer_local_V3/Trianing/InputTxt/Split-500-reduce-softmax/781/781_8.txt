<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String k ) { <CR> kind = k ; <CR> } <CR> private String kind ; <CR> public void print ( ) { <CR> String T 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> T 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> T 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> T 9 += <STRING> ; <CR> System . out . println ( <STRING> + T 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String m 4 , String u 2 ) { <CR> super ( m 4 , u 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String C 7 , String T 3 ) { <CR> super ( C 7 , T 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String O 2 , String L 0 ) { <CR> super ( O 2 , L 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> public Student ( String p 4 , String h 7 , String v , String W 7 ) { <CR> id = p 4 ; <CR> name = h 7 ; <CR> score = v ; <CR> prop = W 7 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] m 2 ) { <CR> Scanner O 9 = new Scanner ( System . in ) ; <CR> boolean j 6 = <STRING> ; <CR> while ( j 6 ) { <CR> System . out . println ( <STRING> ) ; <CR> String G 7 = O 9 . nextLine ( ) ; <CR> if ( G 7 . equals ( <STRING> ) ) { <CR> j 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String e 3 = O 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String X 7 = O 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String E 9 = O 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String m 4 = O 9 . nextLine ( ) ; <CR> Student q 9 = new Student ( e 3 , X 7 , E 9 , m 4 ) ; <CR> Evaluation g 0 = new Evaluation ( G 7 ) ; <CR> Evaluation m 3 = <STRING> ; <CR> String R 3 , V 8 ; <CR> if ( G 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 3 = O 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 8 = O 9 . nextLine ( ) ; <CR> m 3 = new Exam ( R 3 , V 8 ) ; <CR> } <CR> else if ( G 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 3 = O 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 8 = O 9 . nextLine ( ) ; <CR> m 3 = new HomeWork ( R 3 , V 8 ) ; <CR> } <CR> else if ( G 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 3 = O 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 8 = O 9 . nextLine ( ) ; <CR> m 3 = new Report ( R 3 , V 8 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( m 3 ! = <STRING> ) { <CR> g 0 . print ( ) ; <CR> q 9 . print ( ) ; <CR> m 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>