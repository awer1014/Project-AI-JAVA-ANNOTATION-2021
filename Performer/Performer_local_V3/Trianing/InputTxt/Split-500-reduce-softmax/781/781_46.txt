<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String E 6 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> E 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> E 6 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> E 6 += <STRING> ; <CR> System . out . println ( <STRING> + E 6 ) ; <CR> } <CR> private String kind ; <CR> public Evaluation ( String K 5 ) { <CR> kind = K 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String n 8 , String N ) { <CR> super ( n 8 , N ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String z 7 , String A 0 ) { <CR> super ( z 7 , A 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String P 1 , String w 0 ) { <CR> super ( P 1 , w 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String F 7 , String B 7 , String G 3 , String c 2 ) { <CR> id = F 7 ; <CR> name = B 7 ; <CR> score = G 3 ; <CR> prop = c 2 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 3 ) { <CR> Scanner D 0 = new Scanner ( System . in ) ; <CR> boolean V 9 = <STRING> ; <CR> while ( V 9 ) { <CR> System . out . println ( <STRING> ) ; <CR> String n 0 = D 0 . nextLine ( ) ; <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> V 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String x 9 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String o 5 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String T 8 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String i 5 = D 0 . nextLine ( ) ; <CR> Student b 4 = new Student ( x 9 , o 5 , T 8 , i 5 ) ; <CR> Evaluation X 2 = new Evaluation ( n 0 ) ; <CR> Evaluation F 8 = <STRING> ; <CR> String s 6 , A 2 ; <CR> if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 6 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 2 = D 0 . nextLine ( ) ; <CR> F 8 = new Exam ( s 6 , A 2 ) ; <CR> } <CR> else if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 6 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 2 = D 0 . nextLine ( ) ; <CR> F 8 = new HomeWork ( s 6 , A 2 ) ; <CR> } <CR> else if ( n 0 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> s 6 = D 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 2 = D 0 . nextLine ( ) ; <CR> F 8 = new Report ( s 6 , A 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( F 8 ! = <STRING> ) { <CR> X 2 . print ( ) ; <CR> b 4 . print ( ) ; <CR> F 8 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>