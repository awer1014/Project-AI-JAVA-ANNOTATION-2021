<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> String x 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> x 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> x 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> x 9 += <STRING> ; <CR> System . out . println ( <STRING> + x 9 ) ; <CR> } <CR> public Evaluation ( String G ) { <CR> kind = G ; <CR> } <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String e 6 , String i 7 ) { <CR> super ( e 6 , i 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String Y 8 , String S 8 ) { <CR> super ( Y 8 , S 8 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String U 8 , String V 2 ) { <CR> super ( U 8 , V 2 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String t 3 , String s 8 , String E 9 , String Z 6 ) { <CR> id = t 3 ; <CR> name = s 8 ; <CR> score = E 9 ; <CR> prop = Z 6 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] H 7 ) { <CR> Scanner b 0 = new Scanner ( System . in ) ; <CR> boolean t 5 = <STRING> ; <CR> while ( t 5 ) { <CR> System . out . println ( <STRING> ) ; <CR> String O 7 = b 0 . nextLine ( ) ; <CR> if ( O 7 . equals ( <STRING> ) ) { <CR> t 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String a 3 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String y 4 = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String g = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String P 6 = b 0 . nextLine ( ) ; <CR> Student E 2 = new Student ( a 3 , y 4 , g , P 6 ) ; <CR> Evaluation f 2 = new Evaluation ( O 7 ) ; <CR> Evaluation t 9 = <STRING> ; <CR> String H , n 0 ; <CR> if ( O 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 0 = b 0 . nextLine ( ) ; <CR> t 9 = new Exam ( H , n 0 ) ; <CR> } <CR> else if ( O 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 0 = b 0 . nextLine ( ) ; <CR> t 9 = new HomeWork ( H , n 0 ) ; <CR> } <CR> else if ( O 7 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H = b 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 0 = b 0 . nextLine ( ) ; <CR> t 9 = new Report ( H , n 0 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( t 9 ! = <STRING> ) { <CR> f 2 . print ( ) ; <CR> E 2 . print ( ) ; <CR> t 9 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>