<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String h 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> h 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> h 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> h 9 += <STRING> ; <CR> System . out . println ( <STRING> + h 9 ) ; <CR> } <CR> private String kind ; <CR> public Evaluation ( String B 2 ) { <CR> kind = B 2 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String K 9 , String N 0 ) { <CR> super ( K 9 , N 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String q 9 , String I 6 ) { <CR> super ( q 9 , I 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String S , String s 4 ) { <CR> super ( S , s 4 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String F , String g 2 , String a 0 , String R 2 ) { <CR> id = F ; <CR> name = g 2 ; <CR> score = a 0 ; <CR> prop = R 2 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] e 8 ) { <CR> Scanner r 7 = new Scanner ( System . in ) ; <CR> boolean O 5 = <STRING> ; <CR> while ( O 5 ) { <CR> System . out . println ( <STRING> ) ; <CR> String r 6 = r 7 . nextLine ( ) ; <CR> if ( r 6 . equals ( <STRING> ) ) { <CR> O 5 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String X = r 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String l 6 = r 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String h 9 = r 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String l 7 = r 7 . nextLine ( ) ; <CR> Student M 8 = new Student ( X , l 6 , h 9 , l 7 ) ; <CR> Evaluation O 0 = new Evaluation ( r 6 ) ; <CR> Evaluation a = <STRING> ; <CR> String k 0 , I 8 ; <CR> if ( r 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> k 0 = r 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 8 = r 7 . nextLine ( ) ; <CR> a = new Exam ( k 0 , I 8 ) ; <CR> } <CR> else if ( r 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> k 0 = r 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 8 = r 7 . nextLine ( ) ; <CR> a = new HomeWork ( k 0 , I 8 ) ; <CR> } <CR> else if ( r 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> k 0 = r 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 8 = r 7 . nextLine ( ) ; <CR> a = new Report ( k 0 , I 8 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( a ! = <STRING> ) { <CR> O 0 . print ( ) ; <CR> M 8 . print ( ) ; <CR> a . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>