<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> String b 1 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> b 1 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> b 1 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> b 1 += <STRING> ; <CR> System . out . println ( <STRING> + b 1 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String J 8 ) { <CR> kind = J 8 ; <CR> } <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String U 3 , String C 0 ) { <CR> super ( U 3 , C 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String U 4 , String Q 2 ) { <CR> super ( U 4 , Q 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String Y 2 , String y 6 ) { <CR> super ( Y 2 , y 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String D 7 , String Q 7 , String h 2 , String A 5 ) { <CR> id = D 7 ; <CR> name = Q 7 ; <CR> score = h 2 ; <CR> prop = A 5 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] t ) { <CR> Scanner n 1 = new Scanner ( System . in ) ; <CR> boolean y 0 = <STRING> ; <CR> while ( y 0 ) { <CR> System . out . println ( <STRING> ) ; <CR> String T 3 = n 1 . nextLine ( ) ; <CR> if ( T 3 . equals ( <STRING> ) ) { <CR> y 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String x 1 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String N 2 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String q 9 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String H 8 = n 1 . nextLine ( ) ; <CR> Student G = new Student ( x 1 , N 2 , q 9 , H 8 ) ; <CR> Evaluation Q 0 = new Evaluation ( T 3 ) ; <CR> Evaluation x 3 = <STRING> ; <CR> String R 7 , E ; <CR> if ( T 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 7 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E = n 1 . nextLine ( ) ; <CR> x 3 = new Exam ( R 7 , E ) ; <CR> } <CR> else if ( T 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 7 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E = n 1 . nextLine ( ) ; <CR> x 3 = new HomeWork ( R 7 , E ) ; <CR> } <CR> else if ( T 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 7 = n 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> E = n 1 . nextLine ( ) ; <CR> x 3 = new Report ( R 7 , E ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( x 3 ! = <STRING> ) { <CR> Q 0 . print ( ) ; <CR> G . print ( ) ; <CR> x 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>