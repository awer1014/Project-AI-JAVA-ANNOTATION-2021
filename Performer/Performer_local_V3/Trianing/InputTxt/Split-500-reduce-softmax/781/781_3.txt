<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> String x 2 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> x 2 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> x 2 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> x 2 += <STRING> ; <CR> System . out . println ( <STRING> + x 2 ) ; <CR> } <CR> public Evaluation ( String N 5 ) { <CR> kind = N 5 ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String J 1 , String U 3 ) { <CR> super ( J 1 , U 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String S 0 , String m 9 ) { <CR> super ( S 0 , m 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String T 8 , String k 9 ) { <CR> super ( T 8 , k 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String E 9 , String u 4 , String O , String Z 7 ) { <CR> id = E 9 ; <CR> name = u 4 ; <CR> score = O ; <CR> prop = Z 7 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 2 ) { <CR> Scanner d 6 = new Scanner ( System . in ) ; <CR> boolean y 4 = <STRING> ; <CR> while ( y 4 ) { <CR> System . out . println ( <STRING> ) ; <CR> String W 2 = d 6 . nextLine ( ) ; <CR> if ( W 2 . equals ( <STRING> ) ) { <CR> y 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String H 6 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String z 5 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String P 1 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String v 3 = d 6 . nextLine ( ) ; <CR> Student A 0 = new Student ( H 6 , z 5 , P 1 , v 3 ) ; <CR> Evaluation E 9 = new Evaluation ( W 2 ) ; <CR> Evaluation I 6 = <STRING> ; <CR> String n 9 , I 3 ; <CR> if ( W 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> n 9 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 3 = d 6 . nextLine ( ) ; <CR> I 6 = new Exam ( n 9 , I 3 ) ; <CR> } <CR> else if ( W 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> n 9 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 3 = d 6 . nextLine ( ) ; <CR> I 6 = new HomeWork ( n 9 , I 3 ) ; <CR> } <CR> else if ( W 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> n 9 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 3 = d 6 . nextLine ( ) ; <CR> I 6 = new Report ( n 9 , I 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( I 6 ! = <STRING> ) { <CR> E 9 . print ( ) ; <CR> A 0 . print ( ) ; <CR> I 6 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>