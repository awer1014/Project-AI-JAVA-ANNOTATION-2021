<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> public Evaluation ( String X 7 ) { <CR> kind = X 7 ; <CR> } <CR> public void print ( ) { <CR> String K 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> K 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> K 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> K 9 += <STRING> ; <CR> System . out . println ( <STRING> + K 9 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String D 2 , String x 5 ) { <CR> super ( D 2 , x 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String r 1 , String l ) { <CR> super ( r 1 , l ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String b 3 , String I 1 ) { <CR> super ( b 3 , I 1 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String b 8 , String t 4 , String K 8 , String Y 2 ) { <CR> id = b 8 ; <CR> name = t 4 ; <CR> score = K 8 ; <CR> prop = Y 2 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] a ) { <CR> Scanner k 3 = new Scanner ( System . in ) ; <CR> boolean L 4 = <STRING> ; <CR> while ( L 4 ) { <CR> System . out . println ( <STRING> ) ; <CR> String f 2 = k 3 . nextLine ( ) ; <CR> if ( f 2 . equals ( <STRING> ) ) { <CR> L 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String O 9 = k 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String o 5 = k 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String m 2 = k 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String t 7 = k 3 . nextLine ( ) ; <CR> Student r 5 = new Student ( O 9 , o 5 , m 2 , t 7 ) ; <CR> Evaluation M = new Evaluation ( f 2 ) ; <CR> Evaluation e 6 = <STRING> ; <CR> String I 8 , q 3 ; <CR> if ( f 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> I 8 = k 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 3 = k 3 . nextLine ( ) ; <CR> e 6 = new Exam ( I 8 , q 3 ) ; <CR> } <CR> else if ( f 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> I 8 = k 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 3 = k 3 . nextLine ( ) ; <CR> e 6 = new HomeWork ( I 8 , q 3 ) ; <CR> } <CR> else if ( f 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> I 8 = k 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 3 = k 3 . nextLine ( ) ; <CR> e 6 = new Report ( I 8 , q 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( e 6 ! = <STRING> ) { <CR> M . print ( ) ; <CR> r 5 . print ( ) ; <CR> e 6 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>