<BOC> abstract public class Evaluation { <CR> public Evaluation ( String a 9 ) { <CR> kind = a 9 ; <CR> } <CR> public void print ( ) { <CR> String U 8 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> U 8 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> U 8 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> U 8 += <STRING> ; <CR> System . out . println ( <STRING> + U 8 ) ; <CR> } <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String i 3 , String D 7 ) { <CR> super ( i 3 , D 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String O , String U 9 ) { <CR> super ( O , U 9 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String J 5 , String v 7 ) { <CR> super ( J 5 , v 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String K 5 , String t 2 , String t 0 , String s ) { <CR> id = K 5 ; <CR> name = t 2 ; <CR> score = t 0 ; <CR> prop = s ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] r 3 ) { <CR> Scanner o 4 = new Scanner ( System . in ) ; <CR> boolean j = <STRING> ; <CR> while ( j ) { <CR> System . out . println ( <STRING> ) ; <CR> String e = o 4 . nextLine ( ) ; <CR> if ( e . equals ( <STRING> ) ) { <CR> j = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String g 9 = o 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String i 3 = o 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String C 5 = o 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String D 7 = o 4 . nextLine ( ) ; <CR> Student L 8 = new Student ( g 9 , i 3 , C 5 , D 7 ) ; <CR> Evaluation L 2 = new Evaluation ( e ) ; <CR> Evaluation Y 6 = <STRING> ; <CR> String a 9 , d 7 ; <CR> if ( e . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> a 9 = o 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 7 = o 4 . nextLine ( ) ; <CR> Y 6 = new Exam ( a 9 , d 7 ) ; <CR> } <CR> else if ( e . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> a 9 = o 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 7 = o 4 . nextLine ( ) ; <CR> Y 6 = new HomeWork ( a 9 , d 7 ) ; <CR> } <CR> else if ( e . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> a 9 = o 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 7 = o 4 . nextLine ( ) ; <CR> Y 6 = new Report ( a 9 , d 7 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( Y 6 ! = <STRING> ) { <CR> L 2 . print ( ) ; <CR> L 8 . print ( ) ; <CR> Y 6 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>