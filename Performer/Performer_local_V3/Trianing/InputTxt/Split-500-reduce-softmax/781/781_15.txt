<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> String g 0 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> g 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> g 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> g 0 += <STRING> ; <CR> System . out . println ( <STRING> + g 0 ) ; <CR> } <CR> public Evaluation ( String h 2 ) { <CR> kind = h 2 ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String B 3 , String t 9 ) { <CR> super ( B 3 , t 9 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String B 9 , String l 3 ) { <CR> super ( B 9 , l 3 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String y 4 , String b 1 ) { <CR> super ( y 4 , b 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String Y 3 , String r 8 , String j 7 , String l 9 ) { <CR> id = Y 3 ; <CR> name = r 8 ; <CR> score = j 7 ; <CR> prop = l 9 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] U 9 ) { <CR> Scanner J 6 = new Scanner ( System . in ) ; <CR> boolean G 2 = <STRING> ; <CR> while ( G 2 ) { <CR> System . out . println ( <STRING> ) ; <CR> String i = J 6 . nextLine ( ) ; <CR> if ( i . equals ( <STRING> ) ) { <CR> G 2 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String o 3 = J 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String x 2 = J 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String S = J 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String x 5 = J 6 . nextLine ( ) ; <CR> Student c 3 = new Student ( o 3 , x 2 , S , x 5 ) ; <CR> Evaluation c 0 = new Evaluation ( i ) ; <CR> Evaluation u 9 = <STRING> ; <CR> String M 8 , q 4 ; <CR> if ( i . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M 8 = J 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 4 = J 6 . nextLine ( ) ; <CR> u 9 = new Exam ( M 8 , q 4 ) ; <CR> } <CR> else if ( i . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M 8 = J 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 4 = J 6 . nextLine ( ) ; <CR> u 9 = new HomeWork ( M 8 , q 4 ) ; <CR> } <CR> else if ( i . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M 8 = J 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 4 = J 6 . nextLine ( ) ; <CR> u 9 = new Report ( M 8 , q 4 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( u 9 ! = <STRING> ) { <CR> c 0 . print ( ) ; <CR> c 3 . print ( ) ; <CR> u 9 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>