<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String l 7 ) { <CR> kind = l 7 ; <CR> } <CR> private String kind ; <CR> public void print ( ) { <CR> String u 2 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> u 2 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> u 2 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> u 2 += <STRING> ; <CR> System . out . println ( <STRING> + u 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String y 7 , String X 9 ) { <CR> super ( y 7 , X 9 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String I 7 , String m 8 ) { <CR> super ( I 7 , m 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String l 1 , String W 9 ) { <CR> super ( l 1 , W 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String T 5 , String H 4 , String n 1 , String l ) { <CR> id = T 5 ; <CR> name = H 4 ; <CR> score = n 1 ; <CR> prop = l ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] x 7 ) { <CR> Scanner T 3 = new Scanner ( System . in ) ; <CR> boolean u = <STRING> ; <CR> while ( u ) { <CR> System . out . println ( <STRING> ) ; <CR> String d 8 = T 3 . nextLine ( ) ; <CR> if ( d 8 . equals ( <STRING> ) ) { <CR> u = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String s 0 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String H 9 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String y 3 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String M 9 = T 3 . nextLine ( ) ; <CR> Student F 7 = new Student ( s 0 , H 9 , y 3 , M 9 ) ; <CR> Evaluation a 5 = new Evaluation ( d 8 ) ; <CR> Evaluation Q 0 = <STRING> ; <CR> String T 7 , v ; <CR> if ( d 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 7 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v = T 3 . nextLine ( ) ; <CR> Q 0 = new Exam ( T 7 , v ) ; <CR> } <CR> else if ( d 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 7 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v = T 3 . nextLine ( ) ; <CR> Q 0 = new HomeWork ( T 7 , v ) ; <CR> } <CR> else if ( d 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 7 = T 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v = T 3 . nextLine ( ) ; <CR> Q 0 = new Report ( T 7 , v ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( Q 0 ! = <STRING> ) { <CR> a 5 . print ( ) ; <CR> F 7 . print ( ) ; <CR> Q 0 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>