<BOC> abstract public class Evaluation { <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> public void print ( ) { <CR> String D 1 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> D 1 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> D 1 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> D 1 += <STRING> ; <CR> System . out . println ( <STRING> + D 1 ) ; <CR> } <CR> public Evaluation ( String p 5 ) { <CR> kind = p 5 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String W 9 , String f 5 ) { <CR> super ( W 9 , f 5 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String k 3 , String v ) { <CR> super ( k 3 , v ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String o 0 , String T 8 ) { <CR> super ( o 0 , T 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String G 1 , String J 4 , String T 9 , String w 4 ) { <CR> id = G 1 ; <CR> name = J 4 ; <CR> score = T 9 ; <CR> prop = w 4 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] z 4 ) { <CR> Scanner u 7 = new Scanner ( System . in ) ; <CR> boolean d 0 = <STRING> ; <CR> while ( d 0 ) { <CR> System . out . println ( <STRING> ) ; <CR> String g 8 = u 7 . nextLine ( ) ; <CR> if ( g 8 . equals ( <STRING> ) ) { <CR> d 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String W 6 = u 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String w 2 = u 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String X 8 = u 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String j = u 7 . nextLine ( ) ; <CR> Student a 9 = new Student ( W 6 , w 2 , X 8 , j ) ; <CR> Evaluation z 0 = new Evaluation ( g 8 ) ; <CR> Evaluation x 3 = <STRING> ; <CR> String R 8 , t 2 ; <CR> if ( g 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 8 = u 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 2 = u 7 . nextLine ( ) ; <CR> x 3 = new Exam ( R 8 , t 2 ) ; <CR> } <CR> else if ( g 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 8 = u 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 2 = u 7 . nextLine ( ) ; <CR> x 3 = new HomeWork ( R 8 , t 2 ) ; <CR> } <CR> else if ( g 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> R 8 = u 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 2 = u 7 . nextLine ( ) ; <CR> x 3 = new Report ( R 8 , t 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( x 3 ! = <STRING> ) { <CR> z 0 . print ( ) ; <CR> a 9 . print ( ) ; <CR> x 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>