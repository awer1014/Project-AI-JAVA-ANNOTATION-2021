<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sProportion ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> Evaluation ( String D 1 , String m 4 , double F 2 , double V 6 ) { <CR> this . sNumber = D 1 ; <CR> this . sName = m 4 ; <CR> this . sGrade = F 2 ; <CR> this . sProportion = V 6 ; <CR> } <CR> protected String sName ; <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String O 8 , String O 4 , double a 7 , double k 9 , String z 4 , String m 1 ) { <CR> super ( O 8 , O 4 , a 7 , k 9 ) ; <CR> this . date = z 4 ; <CR> this . range = m 1 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String N 3 , String V 3 , double n 6 , double h 6 , String k 0 , String W 0 ) { <CR> super ( N 3 , V 3 , n 6 , h 6 ) ; <CR> this . deadline = k 0 ; <CR> this . description = W 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> public Report ( String k , String J 7 , double B 1 , double i 2 , String H 4 , String Z 7 ) { <CR> super ( k , J 7 , B 1 , i 2 ) ; <CR> this . content = H 4 ; <CR> this . references = Z 7 ; <CR> } <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int v 7 ) { <CR> switch ( v 7 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int v 7 = <STRING> ; <CR> do <CR> { <CR> v 7 = keyboard . nextInt ( ) ; <CR> } <CR> while ( v 7 > <STRING> || v 7 < <STRING> ) ; <CR> return choice ( v 7 ) ; <CR> } <CR> } <CR> <EOC>