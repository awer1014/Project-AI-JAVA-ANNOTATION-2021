<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sName ; <CR> Evaluation ( String u 1 , String l 8 , double i 9 , double F 1 ) { <CR> this . sNumber = u 1 ; <CR> this . sName = l 8 ; <CR> this . sGrade = i 9 ; <CR> this . sProportion = F 1 ; <CR> } <CR> protected double sProportion ; <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String range ; <CR> public Exam ( String x 5 , String S 5 , double A 9 , double h 2 , String R 3 , String y 0 ) { <CR> super ( x 5 , S 5 , A 9 , h 2 ) ; <CR> this . date = R 3 ; <CR> this . range = y 0 ; <CR> } <CR> protected String date ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String deadline ; <CR> public Homework ( String m 5 , String g 5 , double w 9 , double M 0 , String n 0 , String E 4 ) { <CR> super ( m 5 , g 5 , w 9 , M 0 ) ; <CR> this . deadline = n 0 ; <CR> this . description = E 4 ; <CR> } <CR> protected String description ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> protected String references ; <CR> public Report ( String v 2 , String e 5 , double B 8 , double S 4 , String D 5 , String M 3 ) { <CR> super ( v 2 , e 5 , B 8 , S 4 ) ; <CR> this . content = D 5 ; <CR> this . references = M 3 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int X 1 = <STRING> ; <CR> do <CR> { <CR> X 1 = keyboard . nextInt ( ) ; <CR> } <CR> while ( X 1 > <STRING> || X 1 < <STRING> ) ; <CR> return choice ( X 1 ) ; <CR> } <CR> static Evaluation choice ( int X 1 ) { <CR> switch ( X 1 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>