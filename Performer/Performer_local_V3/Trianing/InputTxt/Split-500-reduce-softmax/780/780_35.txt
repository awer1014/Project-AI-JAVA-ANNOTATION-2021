<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> protected double sProportion ; <CR> protected String sNumber ; <CR> Evaluation ( String A 9 , String e 8 , double L 8 , double z ) { <CR> this . sNumber = A 9 ; <CR> this . sName = e 8 ; <CR> this . sGrade = L 8 ; <CR> this . sProportion = z ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sName ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String H 7 , String C 8 , double K 7 , double E , String r 8 , String v 3 ) { <CR> super ( H 7 , C 8 , K 7 , E ) ; <CR> this . date = r 8 ; <CR> this . range = v 3 ; <CR> } <CR> protected String date ; <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String p 5 , String R 5 , double t 3 , double C 7 , String g 4 , String f 6 ) { <CR> super ( p 5 , R 5 , t 3 , C 7 ) ; <CR> this . deadline = g 4 ; <CR> this . description = f 6 ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String e 4 , String C 4 , double C 2 , double c 4 , String g 8 , String V 2 ) { <CR> super ( e 4 , C 4 , C 2 , c 4 ) ; <CR> this . content = g 8 ; <CR> this . references = V 2 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int j 3 ) { <CR> switch ( j 3 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int j 3 = <STRING> ; <CR> do <CR> { <CR> j 3 = keyboard . nextInt ( ) ; <CR> } <CR> while ( j 3 > <STRING> || j 3 < <STRING> ) ; <CR> return choice ( j 3 ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>