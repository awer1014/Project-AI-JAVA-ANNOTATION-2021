<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> protected String sNumber ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sName ; <CR> protected double sProportion ; <CR> Evaluation ( String s 8 , String S 5 , double D 3 , double b 0 ) { <CR> this . sNumber = s 8 ; <CR> this . sName = S 5 ; <CR> this . sGrade = D 3 ; <CR> this . sProportion = b 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String Y 6 , String H 6 , double X , double p , String X 2 , String E 8 ) { <CR> super ( Y 6 , H 6 , X , p ) ; <CR> this . date = X 2 ; <CR> this . range = E 8 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String d , String g 5 , double N 9 , double Q 9 , String W 3 , String W 8 ) { <CR> super ( d , g 5 , N 9 , Q 9 ) ; <CR> this . deadline = W 3 ; <CR> this . description = W 8 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> protected String content ; <CR> public Report ( String Q 9 , String C 6 , double R , double X 7 , String V 7 , String o 9 ) { <CR> super ( Q 9 , C 6 , R , X 7 ) ; <CR> this . content = V 7 ; <CR> this . references = o 9 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int n = <STRING> ; <CR> do <CR> { <CR> n = keyboard . nextInt ( ) ; <CR> } <CR> while ( n > <STRING> || n < <STRING> ) ; <CR> return choice ( n ) ; <CR> } <CR> static Evaluation choice ( int n ) { <CR> switch ( n ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>