<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> protected double sGrade ; <CR> protected String sName ; <CR> Evaluation ( String j 4 , String B 8 , double L 2 , double N 3 ) { <CR> this . sNumber = j 4 ; <CR> this . sName = B 8 ; <CR> this . sGrade = L 2 ; <CR> this . sProportion = N 3 ; <CR> } <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String j 4 , String J 3 , double e 8 , double E 7 , String O 9 , String R 9 ) { <CR> super ( j 4 , J 3 , e 8 , E 7 ) ; <CR> this . date = O 9 ; <CR> this . range = R 9 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String y 1 , String k 7 , double M 5 , double Z 7 , String H , String v ) { <CR> super ( y 1 , k 7 , M 5 , Z 7 ) ; <CR> this . deadline = H ; <CR> this . description = v ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String t , String u 8 , double U 1 , double T 1 , String q 0 , String o 5 ) { <CR> super ( t , u 8 , U 1 , T 1 ) ; <CR> this . content = q 0 ; <CR> this . references = o 5 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int f 7 ) { <CR> switch ( f 7 ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int f 7 = <STRING> ; <CR> do <CR> { <CR> f 7 = keyboard . nextInt ( ) ; <CR> } <CR> while ( f 7 > <STRING> || f 7 < <STRING> ) ; <CR> return choice ( f 7 ) ; <CR> } <CR> } <CR> <EOC>