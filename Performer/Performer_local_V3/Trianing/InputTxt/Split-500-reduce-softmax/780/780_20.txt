<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sProportion ; <CR> protected String sNumber ; <CR> Evaluation ( String C 6 , String q 1 , double N 0 , double p 8 ) { <CR> this . sNumber = C 6 ; <CR> this . sName = q 1 ; <CR> this . sGrade = N 0 ; <CR> this . sProportion = p 8 ; <CR> } <CR> protected String sName ; <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> protected String range ; <CR> public Exam ( String S 3 , String L 7 , double n 9 , double c 1 , String e , String r 0 ) { <CR> super ( S 3 , L 7 , n 9 , c 1 ) ; <CR> this . date = e ; <CR> this . range = r 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String V 0 , String e 0 , double F 4 , double U 5 , String N 7 , String W 1 ) { <CR> super ( V 0 , e 0 , F 4 , U 5 ) ; <CR> this . deadline = N 7 ; <CR> this . description = W 1 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String w 1 , String e 2 , double q 0 , double P 3 , String L 5 , String u 4 ) { <CR> super ( w 1 , e 2 , q 0 , P 3 ) ; <CR> this . content = L 5 ; <CR> this . references = u 4 ; <CR> } <CR> protected String content ; <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int A ) { <CR> switch ( A ) { <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <STRING> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int A = <STRING> ; <CR> do <CR> { <CR> A = keyboard . nextInt ( ) ; <CR> } <CR> while ( A > <STRING> || A < <STRING> ) ; <CR> return choice ( A ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>