<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String a 1 , String B 5 , String t 4 , String c 4 , String U 1 ) { <CR> super ( a 1 , B 5 , t 4 , c 4 , U 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String l 8 , String v 1 , String d 0 , String w 3 , String o 0 ) { <CR> super ( l 8 , v 1 , d 0 , w 3 , o 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title + <STRING> + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public Letter ( String i 6 , String N 6 , String z 1 , String g 2 , String J 0 ) { <CR> this . title = i 6 ; <CR> this . receiver = N 6 ; <CR> this . content = z 1 ; <CR> this . sender = g 2 ; <CR> this . date = J 0 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Main { <CR> public static void main ( String [ ] d 3 ) { <CR> ChineseLetter V 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter S 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> V 6 . display ( ) ; <CR> S 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>