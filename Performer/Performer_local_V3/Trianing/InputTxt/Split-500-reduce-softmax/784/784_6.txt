<BOC> import java . util . Scanner ; <CR> public class Evaluation { <CR> public void levelPrint ( ) { <CR> System . out . println ( level ) ; <CR> } <CR> public void gradePrint ( ) { <CR> System . out . println ( grade ) ; <CR> } <CR> public Evaluation ( String w 5 , String k 8 , double m 8 , double b 0 ) { <CR> this . num = w 5 ; <CR> this . name = k 8 ; <CR> this . grade = m 8 ; <CR> this . level = b 0 ; <CR> } <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> String num , name ; <CR> public void numPrint ( ) { <CR> System . out . println ( num ) ; <CR> } <CR> double grade , level ; <CR> public void namePrint ( ) { <CR> System . out . println ( name ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String data , b ; <CR> public Exam ( String T 6 , String E 9 , double r 8 , double I 3 , String S 6 , String y 3 ) { <CR> super ( T 6 , E 9 , r 8 , I 3 ) ; <CR> this . data = S 6 ; <CR> this . b = y 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String q 6 , String Z 4 , double x , double b 5 , String b , String P 0 ) { <CR> super ( q 6 , Z 4 , x , b 5 ) ; <CR> this . data = b ; <CR> this . a = P 0 ; <CR> } <CR> String data , a ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String W 5 , String o 8 , double a 8 , double H 3 , String X 4 , String o 1 ) { <CR> super ( W 5 , o 8 , a 8 , H 3 ) ; <CR> this . file = X 4 ; <CR> this . f = o 1 ; <CR> } <CR> String file , f ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static double grade , level ; <CR> static String num , name , eat ; <CR> public static void main ( String [ ] I 8 ) { <CR> int W 3 ; <CR> System . out . print ( <STRING> ) ; <CR> W 3 = cin . nextInt ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> num = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> name = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> grade = cin . nextFloat ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> level = cin . nextFloat ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> switch ( W 3 ) { <CR> case <STRING> : <CR> String m 1 , l ; <CR> System . out . print ( <STRING> ) ; <CR> m 1 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l = cin . nextLine ( ) ; <CR> Exam M 5 = new Exam ( num , name , grade , level , m 1 , l ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + M 5 . m 1 ) ; <CR> System . out . println ( <STRING> + M 5 . l ) ; <CR> break ; <CR> case <STRING> : <CR> String y 6 ; <CR> System . out . print ( <STRING> ) ; <CR> m 1 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> y 6 = cin . nextLine ( ) ; <CR> HomeWork D 8 = new HomeWork ( num , name , grade , level , m 1 , y 6 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 8 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 8 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 8 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 8 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + D 8 . m 1 ) ; <CR> System . out . println ( <STRING> + D 8 . y 6 ) ; <CR> break ; <CR> case <STRING> : <CR> String v 3 , O ; <CR> System . out . print ( <STRING> ) ; <CR> v 3 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> O = cin . nextLine ( ) ; <CR> Report B = new Report ( num , name , grade , level , v 3 , O ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> B . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B . levelPrint ( ) ; <CR> System . out . println ( <STRING> + B . v 3 ) ; <CR> System . out . println ( <STRING> + B . O ) ; <CR> break ; <CR> } <CR> } <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> } <CR> <EOC>