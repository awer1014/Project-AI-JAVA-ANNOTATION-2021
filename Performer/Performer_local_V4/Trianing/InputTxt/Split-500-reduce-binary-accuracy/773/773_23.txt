<BOC> abstract public class EvalutionE { <CR> protected String sid , name , date , range , deadline , discribe , content , literature , grade , proportion ; <CR> public EvalutionE ( String V 9 , String q 9 , String w 5 , String T 4 , String I 1 , String Y 4 ) { <CR> sid = V 9 ; <CR> name = q 9 ; <CR> grade = w 5 ; <CR> proportion = T 4 ; <CR> date = I 1 ; <CR> range = Y 4 ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class EvalutionH { <CR> public EvalutionH ( String P 3 , String V 4 , String N 4 , String D 7 , String i 8 , String W 5 ) { <CR> sid = P 3 ; <CR> name = V 4 ; <CR> grade = N 4 ; <CR> proportion = D 7 ; <CR> deadline = i 8 ; <CR> discribe = W 5 ; <CR> } <CR> protected String sid , name , date , range , deadline , discribe , content , literature , grade , proportion ; <CR> } <CR> <EOC> <BOC> abstract public class EvalutionR { <CR> public EvalutionR ( String q 7 , String H 2 , String g 1 , String g 8 , String T 8 , String x 7 ) { <CR> sid = q 7 ; <CR> name = H 2 ; <CR> grade = g 1 ; <CR> proportion = g 8 ; <CR> content = T 8 ; <CR> literature = x 7 ; <CR> } <CR> protected String sid , name , date , range , deadline , discribe , content , literature , grade , proportion ; <CR> } <CR> <EOC> <BOC> public class Exam extends EvalutionE { <CR> public Exam ( String Q 4 , String i , String i 4 , String Z 7 , String c 6 , String F 2 ) { <CR> super ( Q 4 , i , i 4 , Z 7 , c 6 , F 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends EvalutionH { <CR> public Homework ( String e 9 , String p 4 , String q 2 , String W 3 , String a 3 , String r 9 ) { <CR> super ( e 9 , p 4 , q 2 , W 3 , a 3 , r 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends EvalutionR { <CR> public Report ( String D , String a 3 , String K , String U 2 , String R 9 , String q ) { <CR> super ( D , a 3 , K , U 2 , R 9 , q ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] Q 1 ) { <CR> Scanner M = new Scanner ( System . in ) ; <CR> boolean Y 3 = <STRING> ; <CR> while ( Y 3 ) { <CR> System . out . print ( <STRING> ) ; <CR> String w 1 = M . nextLine ( ) ; <CR> if ( w 1 . equals ( <STRING> ) ) { <CR> Y 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String b 8 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String h 0 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String B 4 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m 2 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String t 7 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String i = M . nextLine ( ) ; <CR> EvalutionE D ; <CR> System . out . print ( <STRING> ) ; <CR> String c 8 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 4 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String d 7 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String b 4 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String y 7 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g = M . nextLine ( ) ; <CR> EvalutionH Z 3 ; <CR> System . out . print ( <STRING> ) ; <CR> String P 2 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 8 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String R 9 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 5 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String V 1 = M . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String i 2 = M . nextLine ( ) ; <CR> EvalutionR b 2 ; <CR> if ( w 1 . equals ( <STRING> ) ) <CR> D = new Exam ( b 8 , h 0 , t 7 , i , B 4 , m 2 ) ; <CR> else if ( w 1 . equals ( <STRING> ) ) <CR> Z 3 = new Homework ( b 8 , h 0 , B 4 , m 2 , y 7 , g ) ; <CR> else if ( w 1 . equals ( <STRING> ) ) <CR> b 2 = new Report ( b 8 , h 0 , B 4 , m 2 , V 1 , i 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> D . display ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>