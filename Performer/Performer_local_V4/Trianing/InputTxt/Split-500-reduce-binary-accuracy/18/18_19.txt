<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String N 9 , String F 1 , String j 9 , String B 3 , String J 9 ) { <CR> super ( N 9 , F 1 , j 9 , B 3 , J 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String J , String o 5 , String l 2 , String O 8 , String m 7 ) { <CR> super ( J , o 5 , l 2 , O 8 , m 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> Envelop ( String Q 2 , String y , Letter Q 0 ) { <CR> this . senderAddr = Q 2 ; <CR> this . receiverAddr = y ; <CR> this . letter = Q 0 ; <CR> } <CR> Letter letter ; <CR> String senderAddr , receiverAddr ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr + <STRING> + letter . sender ) ; <CR> System . out . println ( <STRING> + receiverAddr + <STRING> + letter . receiver + <STRING> + letter . title ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter { <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> void display ( int c 6 ) { <CR> if ( c 6 == <NUM_INT> ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> Letter ( String b 3 , String w 3 , String x 0 , String X 2 , String f ) { <CR> this . title = b 3 ; <CR> this . receiver = w 3 ; <CR> this . content = x 0 ; <CR> this . sender = X 2 ; <CR> this . date = f ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test { <CR> public static void main ( String [ ] f 6 ) { <CR> Letter L 2 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop F 1 = new Envelop ( <STRING> , <STRING> , L 2 ) ; <CR> F 1 . display ( ) ; <CR> L 2 . display ( <NUM_INT> ) ; <CR> } <CR> } <CR> <EOC>