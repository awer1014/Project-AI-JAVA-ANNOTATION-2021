<BOC> abstract public class Evaluation { <CR> public Evaluation ( String e 3 , String f 4 , String N 0 , double c 1 , double S 6 ) { <CR> sid = e 3 ; <CR> name = f 4 ; <CR> type = N 0 ; <CR> this . grade = c 1 ; <CR> this . gradepc = S 6 ; <CR> } <CR> abstract public void printa ( ) ; <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> String date ; <CR> public Exam ( String n , String L 5 , String O 4 , double f 8 , double t 6 ) { <CR> super ( n , L 5 , O 4 , f 8 , t 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] P 1 ) { <CR> Scanner f 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int e 5 = <NUM_INT> ; <CR> do { <CR> e 5 = f 6 . nextInt ( ) ; <CR> } <CR> while ( e 5 > <NUM_INT> || e 5 < <NUM_INT> ) ; <CR> return mapEvaluation ( e 5 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int e 5 ) { <CR> Evaluation o 0 = <STRING> ; <CR> switch ( e 5 ) { <CR> case <NUM_INT> : <CR> o 0 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>