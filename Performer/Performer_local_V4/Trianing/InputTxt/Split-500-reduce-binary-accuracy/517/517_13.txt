<BOC> import java . util . * ; <CR> abstract public class Evaluation { <CR> protected int type ; <CR> public Evaluation ( String F 4 , String o , double k 4 , double T 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> type = n . nextInt ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 4 = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> k 4 = n . nextDouble ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> T 8 = n . nextDouble ( ) ; <CR> if ( type == <NUM_INT> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else if ( type == <NUM_INT> ) { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> else { <CR> System . out . println ( <STRING> ) ; <CR> a = n . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b = n . nextLine ( ) ; <CR> } <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> Scanner n = new Scanner ( System . in ) ; <CR> protected String b ; <CR> protected String a ; <CR> public static void main ( String [ ] Q 5 ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String n 8 , String z 9 , double v 1 , double D 7 ) { <CR> super ( n 8 , z 9 , v 1 , D 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String s 8 , String D 8 , double H 0 , double q 4 ) { <CR> super ( s 8 , D 8 , H 0 , q 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String J 3 , String n 2 , double q 9 , double k 7 ) { <CR> super ( J 3 , n 2 , q 9 , k 7 ) ; <CR> } <CR> } <CR> <EOC>