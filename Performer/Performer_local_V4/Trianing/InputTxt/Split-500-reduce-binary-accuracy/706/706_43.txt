<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] B 4 ) { <CR> String h 7 ; <CR> String f 3 ; <CR> Scanner z 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> h 7 = z 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 3 = z 6 . nextLine ( ) ; <CR> Keeper h 0 = new Keeper ( h 7 , f 3 ) ; <CR> } <CR> String tel ; <CR> void Keeper ( String h 7 , String f 3 ) { <CR> this . id = h 7 ; <CR> this . tel = f 3 ; <CR> } <CR> String id ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String pid ; <CR> void Pet ( String i 1 , String J 6 , String C 7 , Keeper O 7 ) { <CR> count ++ ; <CR> this . pid = i 1 ; <CR> this . name = J 6 ; <CR> this . type = C 7 ; <CR> this . keeper = O 7 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> Keeper keeper ; <CR> String name ; <CR> public static void main ( String [ ] d 7 ) { <CR> String i 1 ; <CR> String J 6 ; <CR> String C 7 ; <CR> String G 9 ; <CR> String l ; <CR> Scanner F 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 9 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l = F 1 . nextLine ( ) ; <CR> Keeper K 4 = new Keeper ( G 9 , l ) ; <CR> Scanner F 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 1 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> C 7 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 6 = F 1 . nextLine ( ) ; <CR> pet J 3 = new pet ( i 1 , J 6 , C 7 , K 4 ) ; <CR> String R 6 = J 3 . Speak ( ) ; <CR> System . out . println ( <STRING> + R 6 ) ; <CR> } <CR> String type ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> static int count ; <CR> } <CR> <EOC>