<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] T 3 ) { <CR> String e 5 ; <CR> String S 6 ; <CR> Scanner y 1 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 5 = y 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> S 6 = y 1 . nextLine ( ) ; <CR> Keeper P 2 = new Keeper ( e 5 , S 6 ) ; <CR> } <CR> void Keeper ( String e 5 , String S 6 ) { <CR> this . id = e 5 ; <CR> this . tel = S 6 ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public static void main ( String [ ] d 1 ) { <CR> String n 8 ; <CR> String Q 3 ; <CR> String L 5 ; <CR> String x 2 ; <CR> String a 3 ; <CR> Scanner y 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 2 = y 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 3 = y 6 . nextLine ( ) ; <CR> Keeper u 9 = new Keeper ( x 2 , a 3 ) ; <CR> Scanner y 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 8 = y 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> L 5 = y 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 3 = y 6 . nextLine ( ) ; <CR> pet B 2 = new pet ( n 8 , Q 3 , L 5 , u 9 ) ; <CR> String P 0 = B 2 . Speak ( ) ; <CR> System . out . println ( <STRING> + P 0 ) ; <CR> } <CR> void Pet ( String n 8 , String Q 3 , String L 5 , Keeper m ) { <CR> count ++ ; <CR> this . pid = n 8 ; <CR> this . name = Q 3 ; <CR> this . type = L 5 ; <CR> this . keeper = m ; <CR> } <CR> String type ; <CR> String name ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> String pid ; <CR> Keeper keeper ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> static int count ; <CR> } <CR> <EOC>