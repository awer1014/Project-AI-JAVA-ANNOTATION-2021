<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void Keeper ( String r 4 , String e 9 ) { <CR> this . id = r 4 ; <CR> this . tel = e 9 ; <CR> } <CR> String tel ; <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] w ) { <CR> String r 4 ; <CR> String e 9 ; <CR> Scanner A 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> r 4 = A 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 9 = A 0 . nextLine ( ) ; <CR> Keeper Q 7 = new Keeper ( r 4 , e 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> void Pet ( String m 9 , String T 2 , String M 5 , Keeper P ) { <CR> count ++ ; <CR> this . pid = m 9 ; <CR> this . name = T 2 ; <CR> this . type = M 5 ; <CR> this . keeper = P ; <CR> } <CR> String pid ; <CR> String name ; <CR> Keeper keeper ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> static int count ; <CR> public static void main ( String [ ] w 4 ) { <CR> String m 9 ; <CR> String T 2 ; <CR> String M 5 ; <CR> String U 4 ; <CR> String B 6 ; <CR> Scanner b 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 4 = b 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 6 = b 5 . nextLine ( ) ; <CR> Keeper v 0 = new Keeper ( U 4 , B 6 ) ; <CR> Scanner b 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 9 = b 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> M 5 = b 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> T 2 = b 5 . nextLine ( ) ; <CR> pet T 3 = new pet ( m 9 , T 2 , M 5 , v 0 ) ; <CR> String u 2 = T 3 . Speak ( ) ; <CR> System . out . println ( <STRING> + u 2 ) ; <CR> } <CR> String type ; <CR> } <CR> <EOC>