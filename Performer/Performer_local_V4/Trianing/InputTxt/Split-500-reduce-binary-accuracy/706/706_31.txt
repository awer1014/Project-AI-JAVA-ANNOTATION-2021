<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void Keeper ( String U 4 , String V 4 ) { <CR> this . id = U 4 ; <CR> this . tel = V 4 ; <CR> } <CR> String id ; <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public static void main ( String [ ] f 1 ) { <CR> String U 4 ; <CR> String V 4 ; <CR> Scanner v 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 4 = v 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 4 = v 0 . nextLine ( ) ; <CR> Keeper p 4 = new Keeper ( U 4 , V 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public static void main ( String [ ] l 6 ) { <CR> String s 9 ; <CR> String K 2 ; <CR> String z 2 ; <CR> String F 8 ; <CR> String Q 3 ; <CR> Scanner v = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 8 = v . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 3 = v . nextLine ( ) ; <CR> Keeper b 2 = new Keeper ( F 8 , Q 3 ) ; <CR> Scanner v = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 9 = v . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> z 2 = v . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 2 = v . nextLine ( ) ; <CR> pet d 7 = new pet ( s 9 , K 2 , z 2 , b 2 ) ; <CR> String f 0 = d 7 . Speak ( ) ; <CR> System . out . println ( <STRING> + f 0 ) ; <CR> } <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> void Pet ( String s 9 , String K 2 , String z 2 , Keeper m ) { <CR> count ++ ; <CR> this . pid = s 9 ; <CR> this . name = K 2 ; <CR> this . type = z 2 ; <CR> this . keeper = m ; <CR> } <CR> String pid ; <CR> String type ; <CR> String name ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> static int count ; <CR> Keeper keeper ; <CR> } <CR> <EOC>