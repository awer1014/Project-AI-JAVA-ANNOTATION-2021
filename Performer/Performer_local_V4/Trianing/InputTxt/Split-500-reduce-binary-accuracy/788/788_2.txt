<BOC> import java . util . Scanner ; <CR> import java . util . Random ; <CR> public class Display { <CR> public static void main ( String [ ] O 0 ) { <CR> Student c 6 = new Student ( <STRING> ) ; <CR> c 6 . setEvaluation ( chooseDisplay ( ) ) ; <CR> c 6 . display ( ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation chooseDisplay ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int D 8 = <NUM_INT> ; <CR> do { <CR> D 8 = keyboard . nextInt ( ) ; <CR> } <CR> while ( D 8 > <NUM_INT> || D 8 < <NUM_INT> ) ; <CR> return mapDisplay ( D 8 ) ; <CR> } <CR> static Evaluation mapDisplay ( int D 8 ) { <CR> Evaluation H 0 = <STRING> ; <CR> switch ( D 8 ) { <CR> case <NUM_INT> : <CR> H 0 = new Exam ( <STRING> , <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> H 0 = new HomeWork ( <STRING> , <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> H 0 = new Report ( <STRING> , <STRING> ) ; <CR> break ; <CR> } <CR> return H 0 ; <CR> } <CR> static Evaluation randoomChooseDisplay ( ) { <CR> Random K 4 = new Random ( ) ; <CR> int L 9 = K 4 . nextInt ( <NUM_INT> ) + <NUM_INT> ; <CR> return mapDisplay ( L 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> protected double grade ; <CR> protected String name ; <CR> protected String number ; <CR> Evaluation ( String e 2 , String o 9 , double a 8 , double E 1 ) { <CR> this . number = e 2 ; <CR> this . name = o 9 ; <CR> this . grade = a 8 ; <CR> this . hundred = E 1 ; <CR> } <CR> protected double hundred ; <CR> double getGrade ( ) { <CR> return grade ; <CR> } <CR> double getHundred ( ) { <CR> return hundred ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Random ; <CR> public class Exam extends Evaluation { <CR> public Exam ( String e 6 , String t 3 ) { <CR> super ( e 6 , t 3 , <NUM_INT> , <NUM_INT> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Random z 2 = new Random ( ) ; <CR> grade = z 2 . nextDouble ( ) * <NUM_FLOAT> ; <CR> hundred = <NUM_FLOAT> ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Random ; <CR> public class HomeWork extends Evaluation { <CR> public HomeWork ( String S 8 , String S 0 ) { <CR> super ( S 8 , S 0 , <NUM_INT> , <NUM_INT> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Random m 0 = new Random ( ) ; <CR> grade = m 0 . nextDouble ( ) * <NUM_FLOAT> ; <CR> hundred = <NUM_FLOAT> ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Random ; <CR> public class Report extends Evaluation { <CR> public Report ( String F , String F 7 ) { <CR> super ( F , F 7 , <NUM_INT> , <NUM_INT> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Random r 8 = new Random ( ) ; <CR> grade = r 8 . nextDouble ( ) * <NUM_FLOAT> ; <CR> hundred = <NUM_FLOAT> ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> class Student { <CR> void display ( ) { <CR> System . out . println ( <STRING> + eva . number ) ; <CR> System . out . println ( <STRING> + eva . name ) ; <CR> System . out . println ( <STRING> + eva . grade ) ; <CR> } <CR> static Scanner number_keyboard = new Scanner ( System . in ) ; <CR> Evaluation eva ; <CR> void setEvaluation ( Evaluation v 2 ) { <CR> eva = v 2 ; <CR> } <CR> Evaluation getEvaluation ( ) { <CR> return eva ; <CR> } <CR> Student ( String u ) { <CR> this . name = u ; <CR> } <CR> String getName ( ) { <CR> return name ; <CR> } <CR> String name ; <CR> } <CR> <EOC>