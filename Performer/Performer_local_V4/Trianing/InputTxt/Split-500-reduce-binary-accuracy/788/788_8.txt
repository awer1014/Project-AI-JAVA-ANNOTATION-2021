<BOC> import java . util . Scanner ; <CR> import java . util . Random ; <CR> public class Display { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> public static void main ( String [ ] Z 8 ) { <CR> Student M 3 = new Student ( <STRING> ) ; <CR> M 3 . setEvaluation ( chooseDisplay ( ) ) ; <CR> M 3 . display ( ) ; <CR> } <CR> static Evaluation randoomChooseDisplay ( ) { <CR> Random r = new Random ( ) ; <CR> int B 7 = r . nextInt ( <NUM_INT> ) + <NUM_INT> ; <CR> return mapDisplay ( B 7 ) ; <CR> } <CR> static Evaluation mapDisplay ( int x 2 ) { <CR> Evaluation z 8 = <STRING> ; <CR> switch ( x 2 ) { <CR> case <NUM_INT> : <CR> z 8 = new Exam ( <STRING> , <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> z 8 = new HomeWork ( <STRING> , <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> z 8 = new Report ( <STRING> , <STRING> ) ; <CR> break ; <CR> } <CR> return z 8 ; <CR> } <CR> private static Evaluation chooseDisplay ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int x 2 = <NUM_INT> ; <CR> do { <CR> x 2 = keyboard . nextInt ( ) ; <CR> } <CR> while ( x 2 > <NUM_INT> || x 2 < <NUM_INT> ) ; <CR> return mapDisplay ( x 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> Evaluation ( String r 4 , String X 2 , double O 3 , double G 9 ) { <CR> this . number = r 4 ; <CR> this . name = X 2 ; <CR> this . grade = O 3 ; <CR> this . hundred = G 9 ; <CR> } <CR> protected String number ; <CR> protected String name ; <CR> double getGrade ( ) { <CR> return grade ; <CR> } <CR> protected double hundred ; <CR> protected double grade ; <CR> double getHundred ( ) { <CR> return hundred ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Random ; <CR> public class Exam extends Evaluation { <CR> public Exam ( String D 6 , String A 1 ) { <CR> super ( D 6 , A 1 , <NUM_INT> , <NUM_INT> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Random f 4 = new Random ( ) ; <CR> grade = f 4 . nextDouble ( ) * <NUM_FLOAT> ; <CR> hundred = <NUM_FLOAT> ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Random ; <CR> public class HomeWork extends Evaluation { <CR> public HomeWork ( String D 1 , String v 7 ) { <CR> super ( D 1 , v 7 , <NUM_INT> , <NUM_INT> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Random B 1 = new Random ( ) ; <CR> grade = B 1 . nextDouble ( ) * <NUM_FLOAT> ; <CR> hundred = <NUM_FLOAT> ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Random ; <CR> public class Report extends Evaluation { <CR> public Report ( String S , String J ) { <CR> super ( S , J , <NUM_INT> , <NUM_INT> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Random N 3 = new Random ( ) ; <CR> grade = N 3 . nextDouble ( ) * <NUM_FLOAT> ; <CR> hundred = <NUM_FLOAT> ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> class Student { <CR> Evaluation eva ; <CR> Student ( String n 9 ) { <CR> this . name = n 9 ; <CR> } <CR> String name ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + eva . number ) ; <CR> System . out . println ( <STRING> + eva . name ) ; <CR> System . out . println ( <STRING> + eva . grade ) ; <CR> } <CR> static Scanner number_keyboard = new Scanner ( System . in ) ; <CR> String getName ( ) { <CR> return name ; <CR> } <CR> void setEvaluation ( Evaluation s 5 ) { <CR> eva = s 5 ; <CR> } <CR> Evaluation getEvaluation ( ) { <CR> return eva ; <CR> } <CR> } <CR> <EOC>