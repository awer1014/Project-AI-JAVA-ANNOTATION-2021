<BOC> abstract public class Evaluation { <CR> public Evaluation ( String k 9 , String t 3 , String G 8 , Keeper u 3 ) { <CR> pid = k 9 ; <CR> name = t 3 ; <CR> type = G 8 ; <CR> count ++ ; <CR> keeper = u 3 ; <CR> } <CR> private static int count ; <CR> protected String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected Keeper keeper ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String L 5 , String V 5 , String Y 2 , Keeper Q 9 ) { <CR> super ( L 5 , V 5 , Y 2 , Q 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String Z 4 , String s 8 , String o 9 , Keeper V ) { <CR> super ( Z 4 , s 8 , o 9 , V ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String o 0 , String E 9 , String R 5 ) { <CR> id = E 9 ; <CR> tel = R 5 ; <CR> name = o 0 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String L , String m 6 , String h 5 , Keeper e 3 ) { <CR> super ( L , m 6 , h 5 , e 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] m 0 ) { <CR> Scanner C = new Scanner ( System . in ) ; <CR> boolean H 6 = <STRING> ; <CR> while ( H 6 ) { <CR> System . out . print ( <STRING> ) ; <CR> String a 3 = C . nextLine ( ) ; <CR> if ( a 3 . equals ( <STRING> ) ) { <CR> H 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String a 5 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 5 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String q 2 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String M 4 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 8 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String r 8 = C . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper t = new Keeper ( q 2 , M 4 , X 8 ) ; <CR> Evaluation F 2 ; <CR> if ( a 3 . equals ( <STRING> ) ) <CR> F 2 = new Exam ( a 5 , o 5 , a 3 , t ) ; <CR> else if ( a 3 . equals ( <STRING> ) ) <CR> F 2 = new HomeWork ( a 5 , o 5 , a 3 , t ) ; <CR> else <CR> F 2 = new Report ( a 5 , o 5 , a 3 , t ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>