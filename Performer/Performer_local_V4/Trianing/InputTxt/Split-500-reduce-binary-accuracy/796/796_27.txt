<BOC> abstract public class Evaluation { <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected String pid , name , type ; <CR> protected Keeper keeper ; <CR> public Evaluation ( String r 1 , String y 5 , String I 0 , Keeper n ) { <CR> pid = r 1 ; <CR> name = y 5 ; <CR> type = I 0 ; <CR> count ++ ; <CR> keeper = n ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String s 1 , String e 1 , String C 9 , Keeper f 4 ) { <CR> super ( s 1 , e 1 , C 9 , f 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String P 1 , String h 9 , String i 9 , Keeper j 8 ) { <CR> super ( P 1 , h 9 , i 9 , j 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String I 3 , String K 7 , String u 6 ) { <CR> id = K 7 ; <CR> tel = u 6 ; <CR> name = I 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String O 1 , String h , String a 8 , Keeper D 1 ) { <CR> super ( O 1 , h , a 8 , D 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] h 6 ) { <CR> Scanner L 1 = new Scanner ( System . in ) ; <CR> boolean a 4 = <STRING> ; <CR> while ( a 4 ) { <CR> System . out . print ( <STRING> ) ; <CR> String A 7 = L 1 . nextLine ( ) ; <CR> if ( A 7 . equals ( <STRING> ) ) { <CR> a 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String c 7 = L 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String N 9 = L 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String f 6 = L 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String I 9 = L 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 9 = L 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String o 4 = L 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper n 9 = new Keeper ( f 6 , I 9 , o 9 ) ; <CR> Evaluation Y 6 ; <CR> if ( A 7 . equals ( <STRING> ) ) <CR> Y 6 = new Exam ( c 7 , N 9 , A 7 , n 9 ) ; <CR> else if ( A 7 . equals ( <STRING> ) ) <CR> Y 6 = new HomeWork ( c 7 , N 9 , A 7 , n 9 ) ; <CR> else <CR> Y 6 = new Report ( c 7 , N 9 , A 7 , n 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>