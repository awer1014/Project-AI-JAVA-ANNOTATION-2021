<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> Evaluation ( String F 6 , String e 3 , double V 9 , double h 7 ) { <CR> this . sNumber = F 6 ; <CR> this . sName = e 3 ; <CR> this . sGrade = V 9 ; <CR> this . sProportion = h 7 ; <CR> } <CR> protected String sName ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sProportion ; <CR> protected double sGrade ; <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String u 9 , String w 9 , double f 4 , double n 3 , String e 3 , String S 0 ) { <CR> super ( u 9 , w 9 , f 4 , n 3 ) ; <CR> this . date = e 3 ; <CR> this . range = S 0 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String p 3 , String R 6 , double I 6 , double r 3 , String j 3 , String V 3 ) { <CR> super ( p 3 , R 6 , I 6 , r 3 ) ; <CR> this . deadline = j 3 ; <CR> this . description = V 3 ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> public Report ( String I 3 , String L 9 , double W 5 , double k 5 , String r 1 , String b 9 ) { <CR> super ( I 3 , L 9 , W 5 , k 5 ) ; <CR> this . content = r 1 ; <CR> this . references = b 9 ; <CR> } <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int R 2 ) { <CR> switch ( R 2 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int R 2 = <NUM_INT> ; <CR> do { <CR> R 2 = keyboard . nextInt ( ) ; <CR> } <CR> while ( R 2 > <NUM_INT> || R 2 < <NUM_INT> ) ; <CR> return choice ( R 2 ) ; <CR> } <CR> } <CR> <EOC>