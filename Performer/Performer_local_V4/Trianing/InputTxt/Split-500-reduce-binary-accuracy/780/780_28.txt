<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sProportion ; <CR> Evaluation ( String p 6 , String P , double c 1 , double A 6 ) { <CR> this . sNumber = p 6 ; <CR> this . sName = P ; <CR> this . sGrade = c 1 ; <CR> this . sProportion = A 6 ; <CR> } <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sName ; <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String X 6 , String V 2 , double p 5 , double x 8 , String c , String p 4 ) { <CR> super ( X 6 , V 2 , p 5 , x 8 ) ; <CR> this . date = c ; <CR> this . range = p 4 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String a 2 , String N , double N 5 , double V 7 , String x , String Y 2 ) { <CR> super ( a 2 , N , N 5 , V 7 ) ; <CR> this . deadline = x ; <CR> this . description = Y 2 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> public Report ( String d 4 , String X 1 , double Y 0 , double s 0 , String c 8 , String Z 2 ) { <CR> super ( d 4 , X 1 , Y 0 , s 0 ) ; <CR> this . content = c 8 ; <CR> this . references = Z 2 ; <CR> } <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int i ) { <CR> switch ( i ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int i = <NUM_INT> ; <CR> do { <CR> i = keyboard . nextInt ( ) ; <CR> } <CR> while ( i > <NUM_INT> || i < <NUM_INT> ) ; <CR> return choice ( i ) ; <CR> } <CR> } <CR> <EOC>