<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> protected double sProportion ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sNumber ; <CR> protected String sName ; <CR> Evaluation ( String e 4 , String l 6 , double h 6 , double j 7 ) { <CR> this . sNumber = e 4 ; <CR> this . sName = l 6 ; <CR> this . sGrade = h 6 ; <CR> this . sProportion = j 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String j 0 , String O , double L 2 , double p 7 , String f 9 , String R 3 ) { <CR> super ( j 0 , O , L 2 , p 7 ) ; <CR> this . date = f 9 ; <CR> this . range = R 3 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String r 1 , String c 7 , double v 1 , double H 3 , String g , String A 8 ) { <CR> super ( r 1 , c 7 , v 1 , H 3 ) ; <CR> this . deadline = g ; <CR> this . description = A 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> protected String content ; <CR> public Report ( String u 5 , String z 9 , double F 4 , double W 8 , String H 3 , String A 8 ) { <CR> super ( u 5 , z 9 , F 4 , W 8 ) ; <CR> this . content = H 3 ; <CR> this . references = A 8 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int P 0 = <NUM_INT> ; <CR> do { <CR> P 0 = keyboard . nextInt ( ) ; <CR> } <CR> while ( P 0 > <NUM_INT> || P 0 < <NUM_INT> ) ; <CR> return choice ( P 0 ) ; <CR> } <CR> static Evaluation choice ( int P 0 ) { <CR> switch ( P 0 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>