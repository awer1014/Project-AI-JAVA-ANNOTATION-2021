<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> Evaluation ( String L , String q 9 , double X 5 , double X 9 ) { <CR> this . sNumber = L ; <CR> this . sName = q 9 ; <CR> this . sGrade = X 5 ; <CR> this . sProportion = X 9 ; <CR> } <CR> protected String sName ; <CR> protected String sNumber ; <CR> protected double sProportion ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String range ; <CR> public Exam ( String g 1 , String M 2 , double Z 8 , double e 7 , String f 6 , String e 6 ) { <CR> super ( g 1 , M 2 , Z 8 , e 7 ) ; <CR> this . date = f 6 ; <CR> this . range = e 6 ; <CR> } <CR> protected String date ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String deadline ; <CR> public Homework ( String a , String X 5 , double g 8 , double Q 3 , String j 8 , String i 4 ) { <CR> super ( a , X 5 , g 8 , Q 3 ) ; <CR> this . deadline = j 8 ; <CR> this . description = i 4 ; <CR> } <CR> protected String description ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String o 7 , String S 5 , double b 1 , double i 4 , String E 1 , String o 0 ) { <CR> super ( o 7 , S 5 , b 1 , i 4 ) ; <CR> this . content = E 1 ; <CR> this . references = o 0 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int c 6 ) { <CR> switch ( c 6 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int c 6 = <NUM_INT> ; <CR> do { <CR> c 6 = keyboard . nextInt ( ) ; <CR> } <CR> while ( c 6 > <NUM_INT> || c 6 < <NUM_INT> ) ; <CR> return choice ( c 6 ) ; <CR> } <CR> } <CR> <EOC>