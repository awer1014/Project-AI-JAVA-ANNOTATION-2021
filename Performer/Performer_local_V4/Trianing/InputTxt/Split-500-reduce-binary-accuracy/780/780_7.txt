<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> protected String sName ; <CR> protected String sNumber ; <CR> Evaluation ( String V 0 , String H 3 , double i 8 , double N 4 ) { <CR> this . sNumber = V 0 ; <CR> this . sName = H 3 ; <CR> this . sGrade = i 8 ; <CR> this . sProportion = N 4 ; <CR> } <CR> protected double sProportion ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String C 7 , String e 1 , double z 5 , double U 9 , String l 9 , String y 0 ) { <CR> super ( C 7 , e 1 , z 5 , U 9 ) ; <CR> this . date = l 9 ; <CR> this . range = y 0 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> public Homework ( String i 7 , String Y 8 , double Y 0 , double i 0 , String L 0 , String Z 1 ) { <CR> super ( i 7 , Y 8 , Y 0 , i 0 ) ; <CR> this . deadline = L 0 ; <CR> this . description = Z 1 ; <CR> } <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> public Report ( String H 1 , String H 3 , double J 0 , double v 4 , String D 1 , String K 9 ) { <CR> super ( H 1 , H 3 , J 0 , v 4 ) ; <CR> this . content = D 1 ; <CR> this . references = K 9 ; <CR> } <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int Y 2 = <NUM_INT> ; <CR> do { <CR> Y 2 = keyboard . nextInt ( ) ; <CR> } <CR> while ( Y 2 > <NUM_INT> || Y 2 < <NUM_INT> ) ; <CR> return choice ( Y 2 ) ; <CR> } <CR> static Evaluation choice ( int Y 2 ) { <CR> switch ( Y 2 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>