<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] p 6 ) { <CR> Scanner R 0 = new Scanner ( System . in ) ; <CR> String x 5 , j 8 , M 5 , S 5 , s 6 , D 5 , Q 7 ; <CR> System . out . print ( <STRING> ) ; <CR> x 5 = R 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> j 8 = R 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 = R 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> S 5 = R 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 6 = R 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 5 = R 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 7 = R 0 . nextLine ( ) ; <CR> if ( x 5 . equals ( <STRING> ) ) { <CR> Kindsoftest j 7 = new Test ( M 5 , j 8 , S 5 , D 5 , s 6 , Q 7 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( x 5 . equals ( <STRING> ) ) { <CR> Kindsoftest j 7 = new Hwork ( M 5 , j 8 , S 5 , D 5 , s 6 , Q 7 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest j 7 = new Mind ( M 5 , j 8 , S 5 , D 5 , s 6 , Q 7 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String P 5 , int d 8 , int M 6 , int t 9 , double O 6 , String A 9 ) { <CR> super ( P 5 , d 8 , M 6 , t 9 , O 6 , A 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected String name , range ; <CR> protected int id , gread , date ; <CR> protected double gp ; <CR> public Kindsoftest ( String f 1 , int p 7 , int J 4 , int n 8 , double c 1 , String x ) { <CR> this . id = p 7 ; <CR> this . name = f 1 ; <CR> this . gread = J 4 ; <CR> this . gp = c 1 ; <CR> this . date = n 8 ; <CR> this . range = x ; <CR> } <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String a 4 , int U 5 , int n 1 , int U 0 , double b 6 , String R 4 ) { <CR> super ( a 4 , U 5 , n 1 , U 0 , b 6 , R 4 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> public Test ( String q 1 , int A 2 , int l 7 , int k 3 , double N 5 , String W 6 ) { <CR> super ( q 1 , A 2 , l 7 , k 3 , N 5 , W 6 ) ; <CR> } <CR> } <CR> <EOC>