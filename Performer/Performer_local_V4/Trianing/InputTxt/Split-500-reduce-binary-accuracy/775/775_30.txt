<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] e 8 ) { <CR> Scanner N 8 = new Scanner ( System . in ) ; <CR> String D 2 , d 8 , e 3 , l 4 , N 2 , Q 7 , I 2 ; <CR> System . out . print ( <STRING> ) ; <CR> D 2 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> d 8 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> e 3 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 4 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> N 2 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 7 = N 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> I 2 = N 8 . nextLine ( ) ; <CR> if ( D 2 . equals ( <STRING> ) ) { <CR> Kindsoftest W 2 = new Test ( e 3 , d 8 , l 4 , Q 7 , N 2 , I 2 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( D 2 . equals ( <STRING> ) ) { <CR> Kindsoftest W 2 = new Hwork ( e 3 , d 8 , l 4 , Q 7 , N 2 , I 2 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest W 2 = new Mind ( e 3 , d 8 , l 4 , Q 7 , N 2 , I 2 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String w , int S 6 , int W 5 , int K 0 , double i 9 , String l 1 ) { <CR> super ( w , S 6 , W 5 , K 0 , i 9 , l 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected int id , gread , date ; <CR> public Kindsoftest ( String K 5 , int X 1 , int E 6 , int J 9 , double a 9 , String x 4 ) { <CR> this . id = X 1 ; <CR> this . name = K 5 ; <CR> this . gread = E 6 ; <CR> this . gp = a 9 ; <CR> this . date = J 9 ; <CR> this . range = x 4 ; <CR> } <CR> protected String name , range ; <CR> protected double gp ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String Q 0 , int L 7 , int j , int f 2 , double O 1 , String D 9 ) { <CR> super ( Q 0 , L 7 , j , f 2 , O 1 , D 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String T 2 , int y 0 , int L , int k 2 , double P 8 , String c 3 ) { <CR> super ( T 2 , y 0 , L , k 2 , P 8 , c 3 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>