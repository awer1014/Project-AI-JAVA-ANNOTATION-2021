<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] H 5 ) { <CR> Scanner B 0 = new Scanner ( System . in ) ; <CR> String V 1 , v 2 , F 9 , y 2 , f 3 , h 9 , n 0 ; <CR> System . out . print ( <STRING> ) ; <CR> V 1 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> v 2 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 9 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> y 2 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 3 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> h 9 = B 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> n 0 = B 0 . nextLine ( ) ; <CR> if ( V 1 . equals ( <STRING> ) ) { <CR> Kindsoftest A 0 = new Test ( F 9 , v 2 , y 2 , h 9 , f 3 , n 0 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( V 1 . equals ( <STRING> ) ) { <CR> Kindsoftest A 0 = new Hwork ( F 9 , v 2 , y 2 , h 9 , f 3 , n 0 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest A 0 = new Mind ( F 9 , v 2 , y 2 , h 9 , f 3 , n 0 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> public Hwork ( String w 1 , int c 0 , int A 7 , int X 0 , double y , String E 6 ) { <CR> super ( w 1 , c 0 , A 7 , X 0 , y , E 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> public Kindsoftest ( String W 8 , int U 9 , int N , int d 7 , double y 1 , String V 3 ) { <CR> this . id = U 9 ; <CR> this . name = W 8 ; <CR> this . gread = N ; <CR> this . gp = y 1 ; <CR> this . date = d 7 ; <CR> this . range = V 3 ; <CR> } <CR> protected double gp ; <CR> protected int id , gread , date ; <CR> protected String name , range ; <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Mind ( String C 4 , int C 2 , int D 7 , int h 9 , double i 2 , String a ) { <CR> super ( C 4 , C 2 , D 7 , h 9 , i 2 , a ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String E 6 , int V 7 , int P 2 , int x 1 , double o 0 , String d 9 ) { <CR> super ( E 6 , V 7 , P 2 , x 1 , o 0 , d 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>