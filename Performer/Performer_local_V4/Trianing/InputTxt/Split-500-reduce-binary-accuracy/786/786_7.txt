<BOC> public class Exam extends Test { <CR> public Exam ( String s 9 , String z 5 , double s 2 , double p ) { <CR> super ( s 9 , z 5 , s 2 , p ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String r 1 , String P , double c 1 , double M 5 ) { <CR> super ( r 1 , P , c 1 , M 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] R 3 ) { <CR> Scanner K 7 = new Scanner ( System . in ) ; <CR> boolean v 9 = <STRING> ; <CR> while ( v 9 ) { <CR> System . out . println ( <STRING> ) ; <CR> String n 5 = K 7 . nextLine ( ) ; <CR> if ( n 5 . equals ( <STRING> ) ) { <CR> v 9 = <STRING> ; <CR> break ; <CR> } <CR> if ( n 5 . equals ( <STRING> ) || n 5 . equals ( <STRING> ) || n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String Q 3 = K 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String V 1 = K 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double h 2 = Double . parseDouble ( K 7 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double v 6 = Double . parseDouble ( K 7 . nextLine ( ) ) ; <CR> String H 1 = <STRING> ; <CR> String W 1 = <STRING> ; <CR> String C 1 = <STRING> ; <CR> String r 6 = <STRING> ; <CR> String e 1 = <STRING> ; <CR> String Z 2 = <STRING> ; <CR> if ( n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> C 1 = K 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> r 6 = K 7 . nextLine ( ) ; <CR> } <CR> if ( n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 1 = K 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> W 1 = K 7 . nextLine ( ) ; <CR> } <CR> if ( n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 1 = K 7 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Z 2 = K 7 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test C 5 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( n 5 . equals ( <STRING> ) ) <CR> C 5 = new Exam ( Q 3 , V 1 , h 2 , v 6 ) ; <CR> else if ( n 5 . equals ( <STRING> ) ) <CR> C 5 = new HomeWork ( Q 3 , V 1 , h 2 , v 6 ) ; <CR> else if ( n 5 . equals ( <STRING> ) ) <CR> C 5 = new Report ( Q 3 , V 1 , h 2 , v 6 ) ; <CR> if ( C 5 ! = <STRING> ) { <CR> C 5 . print ( ) ; <CR> if ( n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + C 1 ) ; <CR> System . out . println ( <STRING> + r 6 ) ; <CR> } <CR> else if ( n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + H 1 ) ; <CR> System . out . println ( <STRING> + W 1 ) ; <CR> } <CR> else if ( n 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + e 1 ) ; <CR> System . out . println ( <STRING> + Z 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> C 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String M 0 , String B 7 , double b 1 , double d 0 ) { <CR> super ( M 0 , B 7 , b 1 , d 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private String time , range , end_time , description ; <CR> public Test ( String P 5 , String J 8 , double B 9 , double e 8 ) { <CR> number = P 5 ; <CR> name = J 8 ; <CR> score = B 9 ; <CR> propotation = e 8 ; <CR> } <CR> private String number ; <CR> abstract public void print ( ) ; <CR> private String name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info ; <CR> private double score ; <CR> String info_description ; <CR> private double propotation ; <CR> } <CR> <EOC>