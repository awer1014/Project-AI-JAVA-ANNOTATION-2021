<BOC> public class Exam extends Test { <CR> public Exam ( String c 2 , String o 6 , double F 3 , double E 8 ) { <CR> super ( c 2 , o 6 , F 3 , E 8 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String y 6 , String t 6 , double n 9 , double W 6 ) { <CR> super ( y 6 , t 6 , n 9 , W 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] q 7 ) { <CR> Scanner c 8 = new Scanner ( System . in ) ; <CR> boolean N 5 = <STRING> ; <CR> while ( N 5 ) { <CR> System . out . println ( <STRING> ) ; <CR> String o 1 = c 8 . nextLine ( ) ; <CR> if ( o 1 . equals ( <STRING> ) ) { <CR> N 5 = <STRING> ; <CR> break ; <CR> } <CR> if ( o 1 . equals ( <STRING> ) || o 1 . equals ( <STRING> ) || o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String a 8 = c 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String B 2 = c 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double s 5 = Double . parseDouble ( c 8 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double b = Double . parseDouble ( c 8 . nextLine ( ) ) ; <CR> String v 4 = <STRING> ; <CR> String d 5 = <STRING> ; <CR> String n 8 = <STRING> ; <CR> String B = <STRING> ; <CR> String m 3 = <STRING> ; <CR> String Q 1 = <STRING> ; <CR> if ( o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> n 8 = c 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B = c 8 . nextLine ( ) ; <CR> } <CR> if ( o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> v 4 = c 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 5 = c 8 . nextLine ( ) ; <CR> } <CR> if ( o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> m 3 = c 8 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Q 1 = c 8 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test p 5 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( o 1 . equals ( <STRING> ) ) <CR> p 5 = new Exam ( a 8 , B 2 , s 5 , b ) ; <CR> else if ( o 1 . equals ( <STRING> ) ) <CR> p 5 = new HomeWork ( a 8 , B 2 , s 5 , b ) ; <CR> else if ( o 1 . equals ( <STRING> ) ) <CR> p 5 = new Report ( a 8 , B 2 , s 5 , b ) ; <CR> if ( p 5 ! = <STRING> ) { <CR> p 5 . print ( ) ; <CR> if ( o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + n 8 ) ; <CR> System . out . println ( <STRING> + B ) ; <CR> } <CR> else if ( o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + v 4 ) ; <CR> System . out . println ( <STRING> + d 5 ) ; <CR> } <CR> else if ( o 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + m 3 ) ; <CR> System . out . println ( <STRING> + Q 1 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> p 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String Y 1 , String e 1 , double g 0 , double o 8 ) { <CR> super ( Y 1 , e 1 , g 0 , o 8 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private String time , range , end_time , description ; <CR> public Test ( String W 5 , String M 8 , double Z 7 , double Z 0 ) { <CR> number = W 5 ; <CR> name = M 8 ; <CR> score = Z 7 ; <CR> propotation = Z 0 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> private String name ; <CR> String info ; <CR> private String number ; <CR> abstract public void print ( ) ; <CR> String info_description ; <CR> private double score ; <CR> private double propotation ; <CR> } <CR> <EOC>