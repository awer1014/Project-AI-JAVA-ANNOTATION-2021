<BOC> abstract public class Evaluation { <CR> protected double g ; <CR> protected String type ; <CR> protected String name ; <CR> protected String id ; <CR> abstract public void B ( ) ; <CR> abstract public void Dis ( String v , String D 3 ) ; <CR> public Evaluation ( String O 6 , String n 2 , double O 0 , double M , String f 2 ) { <CR> this . id = O 6 ; <CR> this . name = n 2 ; <CR> this . g = O 0 ; <CR> this . w = M ; <CR> this . type = f 2 ; <CR> } <CR> protected double w ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> abstract public void A ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String Q 0 , String b 0 , double K 1 , double v 7 , String G 5 ) { <CR> super ( Q 0 , b 0 , K 1 , v 7 , G 5 ) ; <CR> } <CR> public void Dis ( String D 5 , String i 5 ) { <CR> System . out . println ( <STRING> + D 5 ) ; <CR> System . out . println ( <STRING> + i 5 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String l 0 , String Y 0 , double d 5 , double G 1 , String e 6 ) { <CR> super ( l 0 , Y 0 , d 5 , G 1 , e 6 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String t 7 , String p 7 ) { <CR> System . out . println ( <STRING> + t 7 ) ; <CR> System . out . println ( <STRING> + p 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String O 8 , String e 8 ) { <CR> System . out . println ( <STRING> + O 8 ) ; <CR> System . out . println ( <STRING> + e 8 ) ; <CR> } <CR> public Report ( String y 9 , String s 2 , double E 9 , double F 5 , String g 0 ) { <CR> super ( y 9 , s 2 , E 9 , F 5 , g 0 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] M 2 ) { <CR> Scanner A 2 = new Scanner ( System . in ) ; <CR> boolean Q 8 = <STRING> ; <CR> while ( Q 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String S 7 = A 2 . nextLine ( ) ; <CR> if ( S 7 . equals ( <STRING> ) ) { <CR> Q 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String s 9 = A 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 1 = A 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double U 1 = A 2 . nextDouble ( ) ; <CR> String F 0 = A 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double A 6 = A 2 . nextDouble ( ) ; <CR> F 0 = A 2 . nextLine ( ) ; <CR> Evaluation q 2 ; <CR> if ( S 7 . equals ( <STRING> ) ) <CR> q 2 = new Exam ( s 9 , w 1 , U 1 , A 6 , S 7 ) ; <CR> else if ( S 7 . equals ( <STRING> ) ) <CR> q 2 = new HomeWork ( s 9 , w 1 , U 1 , A 6 , S 7 ) ; <CR> else <CR> q 2 = new Report ( s 9 , w 1 , U 1 , A 6 , S 7 ) ; <CR> q 2 . A ( ) ; <CR> String l 4 = A 2 . nextLine ( ) ; <CR> q 2 . B ( ) ; <CR> String l 3 = A 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 2 . display ( ) ; <CR> q 2 . Dis ( l 4 , l 3 ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 0 = A 2 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>