<BOC> abstract public class Evaluation { <CR> protected String id ; <CR> abstract public void B ( ) ; <CR> abstract public void Dis ( String o 6 , String k 1 ) ; <CR> protected String name ; <CR> abstract public void A ( ) ; <CR> protected double g ; <CR> protected double w ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> public Evaluation ( String S 4 , String g 9 , double a 8 , double m , String t ) { <CR> this . id = S 4 ; <CR> this . name = g 9 ; <CR> this . g = a 8 ; <CR> this . w = m ; <CR> this . type = t ; <CR> } <CR> protected String type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String o 0 , String j 2 , double y 9 , double p 7 , String F 2 ) { <CR> super ( o 0 , j 2 , y 9 , p 7 , F 2 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String S 4 , String X 4 ) { <CR> System . out . println ( <STRING> + S 4 ) ; <CR> System . out . println ( <STRING> + X 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String d 1 , String Z 7 , double B 8 , double j 8 , String O 9 ) { <CR> super ( d 1 , Z 7 , B 8 , j 8 , O 9 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String w 9 , String R 4 ) { <CR> System . out . println ( <STRING> + w 9 ) ; <CR> System . out . println ( <STRING> + R 4 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String p 5 , String x 1 , double X 0 , double V 7 , String k 6 ) { <CR> super ( p 5 , x 1 , X 0 , V 7 , k 6 ) ; <CR> } <CR> public void Dis ( String r 7 , String T 7 ) { <CR> System . out . println ( <STRING> + r 7 ) ; <CR> System . out . println ( <STRING> + T 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] M 0 ) { <CR> Scanner z 2 = new Scanner ( System . in ) ; <CR> boolean L 0 = <STRING> ; <CR> while ( L 0 ) { <CR> System . out . print ( <STRING> ) ; <CR> String f 8 = z 2 . nextLine ( ) ; <CR> if ( f 8 . equals ( <STRING> ) ) { <CR> L 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String q 7 = z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s 3 = z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double d 0 = z 2 . nextDouble ( ) ; <CR> String H 0 = z 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double O 4 = z 2 . nextDouble ( ) ; <CR> H 0 = z 2 . nextLine ( ) ; <CR> Evaluation o 2 ; <CR> if ( f 8 . equals ( <STRING> ) ) <CR> o 2 = new Exam ( q 7 , s 3 , d 0 , O 4 , f 8 ) ; <CR> else if ( f 8 . equals ( <STRING> ) ) <CR> o 2 = new HomeWork ( q 7 , s 3 , d 0 , O 4 , f 8 ) ; <CR> else <CR> o 2 = new Report ( q 7 , s 3 , d 0 , O 4 , f 8 ) ; <CR> o 2 . A ( ) ; <CR> String y 7 = z 2 . nextLine ( ) ; <CR> o 2 . B ( ) ; <CR> String G 3 = z 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> o 2 . display ( ) ; <CR> o 2 . Dis ( y 7 , G 3 ) ; <CR> System . out . print ( <STRING> ) ; <CR> H 0 = z 2 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>