<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String U 4 , String A 2 , String m 6 ) { <CR> id = A 2 ; <CR> tel = m 6 ; <CR> name = U 4 ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public Pet ( String t 0 , String X 1 , String C 4 , Keeper O 5 ) { <CR> pid = t 0 ; <CR> name = X 1 ; <CR> type = C 4 ; <CR> count ++ ; <CR> keeper = O 5 ; <CR> } <CR> private Keeper keeper ; <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private String pid , name , type ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] K 3 ) { <CR> Scanner r 9 = new Scanner ( System . in ) ; <CR> boolean M 7 = <STRING> ; <CR> while ( M 7 ) { <CR> System . out . print ( <STRING> ) ; <CR> String d 9 = r 9 . nextLine ( ) ; <CR> if ( d 9 . equals ( <STRING> ) ) { <CR> M 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String P 5 = r 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String v 5 = r 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 7 = r 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String k 1 = r 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String J 0 = r 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper W 2 = new Keeper ( p 7 , k 1 , J 0 ) ; <CR> Pet r 8 = new Pet ( P 5 , v 5 , d 9 , W 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> r 8 . display ( ) ; <CR> W 2 . display ( ) ; <CR> r 8 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>