<BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public Keeper ( String f 3 , String r 8 , String v 2 ) { <CR> id = r 8 ; <CR> tel = v 2 ; <CR> name = f 3 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> public Pet ( String d 0 , String x 1 , String a 9 , Keeper C 7 ) { <CR> pid = d 0 ; <CR> name = x 1 ; <CR> type = a 9 ; <CR> count ++ ; <CR> keeper = C 7 ; <CR> } <CR> private Keeper keeper ; <CR> private static int count ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 9 ) { <CR> Scanner l 1 = new Scanner ( System . in ) ; <CR> boolean Q 4 = <STRING> ; <CR> while ( Q 4 ) { <CR> System . out . print ( <STRING> ) ; <CR> String P 2 = l 1 . nextLine ( ) ; <CR> if ( P 2 . equals ( <STRING> ) ) { <CR> Q 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String i 3 = l 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String D 1 = l 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z 3 = l 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z 2 = l 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String F 0 = l 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper o 5 = new Keeper ( z 3 , z 2 , F 0 ) ; <CR> Pet a 6 = new Pet ( i 3 , D 1 , P 2 , o 5 ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 6 . display ( ) ; <CR> o 5 . display ( ) ; <CR> a 6 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>