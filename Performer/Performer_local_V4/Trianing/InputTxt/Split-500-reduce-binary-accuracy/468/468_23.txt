<BOC> public class Keeper { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> public Keeper ( String U 9 , String m 4 , String o 0 ) { <CR> id = m 4 ; <CR> tel = o 0 ; <CR> name = U 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private static int count ; <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> private String pid , name , type ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Pet ( String n 3 , String y 5 , String y 4 , Keeper v 8 ) { <CR> pid = n 3 ; <CR> name = y 5 ; <CR> type = y 4 ; <CR> count ++ ; <CR> keeper = v 8 ; <CR> } <CR> private Keeper keeper ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] A 3 ) { <CR> Scanner G 5 = new Scanner ( System . in ) ; <CR> boolean q 8 = <STRING> ; <CR> while ( q 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String X 8 = G 5 . nextLine ( ) ; <CR> if ( X 8 . equals ( <STRING> ) ) { <CR> q 8 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String X 9 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String y 7 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String b 6 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String z = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String x 5 = G 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper s 5 = new Keeper ( b 6 , z , x 5 ) ; <CR> Pet s 6 = new Pet ( X 9 , y 7 , X 8 , s 5 ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 6 . display ( ) ; <CR> s 5 . display ( ) ; <CR> s 6 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>