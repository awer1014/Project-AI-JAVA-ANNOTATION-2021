<BOC> public class Homework extends require { <CR> public Homework ( student F 9 , String f 6 , String L 2 , String L 6 ) { <CR> super ( F 9 , f 6 , L 2 , L 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Quiz extends require { <CR> public Quiz ( student B 2 , String c , String S 1 , String G 2 ) { <CR> super ( B 2 , c , S 1 , G 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends require { <CR> public Report ( student S 8 , String j 3 , String A 7 , String H 2 ) { <CR> super ( S 8 , j 3 , A 7 , H 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class require { <CR> private String id , date , type ; <CR> public require ( student c , String p 9 , String U 5 , String V 4 ) { <CR> student = c ; <CR> id = p 9 ; <CR> date = U 5 ; <CR> type = V 4 ; <CR> } <CR> public void display ( ) { <CR> if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> else if ( id . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> } <CR> private student student ; <CR> } <CR> <EOC> <BOC> public class student { <CR> private String id , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepp ) ; <CR> } <CR> private double grade , gradepp ; <CR> student ( String b 9 , String z 5 , double x 7 , double c 2 ) { <CR> id = b 9 ; <CR> name = z 5 ; <CR> grade = x 7 ; <CR> gradepp = c 2 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] e 1 ) { <CR> Scanner d = new Scanner ( System . in ) ; <CR> boolean X 7 = <STRING> ; <CR> while ( X 7 ) { <CR> System . out . print ( <STRING> ) ; <CR> String N 1 = y 1 . nextLine ( ) ; <CR> if ( N 1 . equals ( <STRING> ) ) { <CR> X 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String C 5 = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p = y 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double t 2 = y 1 . nextDouble ( ) ; <CR> d . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double j 3 = y 1 . nextDouble ( ) ; <CR> d . nextLine ( ) ; <CR> String y 1 , B 9 ; <CR> student S 7 = new student ( C 5 , p , t 2 , j 3 ) ; <CR> require Z 5 = <STRING> ; <CR> if ( N 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> y 1 = d . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 9 = d . nextLine ( ) ; <CR> Z 5 = new Quiz ( S 7 , N 1 , y 1 , B 9 ) ; <CR> } <CR> else if ( N 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> y 1 = d . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 9 = d . nextLine ( ) ; <CR> Z 5 = new Homework ( S 7 , N 1 , y 1 , B 9 ) ; <CR> } <CR> else if ( N 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> y 1 = d . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 9 = d . nextLine ( ) ; <CR> Z 5 = new Report ( S 7 , N 1 , y 1 , B 9 ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( Z 5 ! = <STRING> ) { <CR> S 7 . display ( ) ; <CR> Z 5 . display ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>