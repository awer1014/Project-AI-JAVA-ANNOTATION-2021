<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String y , String d , String Y 2 , String c 3 , String b 2 ) { <CR> super ( y , d , Y 2 , c 3 , b 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String t 7 , String t 9 , String k 2 , String R 6 , String Z 8 ) { <CR> super ( t 7 , t 9 , k 2 , R 6 , Z 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String E 6 , String h 7 , String P 3 , String C 3 , String e 6 ) { <CR> this . title = E 6 ; <CR> this . receiver = h 7 ; <CR> this . content = P 3 ; <CR> this . sender = C 3 ; <CR> this . date = e 6 ; <CR> } <CR> public int compareTo ( Object s 1 ) { <CR> Letter c 9 = ( Letter ) s 1 ; <CR> if ( this . getDate ( ) . compareTo ( c 9 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( c 9 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] V 2 ) { <CR> Letter o 0 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter r 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter f 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList s 4 = { o 0 , r 2 , f 7 } ; <CR> for ( Letter s 2 : s 4 ) <CR> s 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>