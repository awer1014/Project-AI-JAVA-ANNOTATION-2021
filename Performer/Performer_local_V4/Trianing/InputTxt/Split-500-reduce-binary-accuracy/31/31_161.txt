<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String U 7 , String G 2 , String O 5 , String m 5 , String C 8 ) { <CR> super ( U 7 , G 2 , O 5 , m 5 , C 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String y 4 , String M 2 , String I 2 , String j 9 , String a 8 ) { <CR> super ( y 4 , M 2 , I 2 , j 9 , a 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String o 4 , String W 3 , String z , String S 3 , String W ) { <CR> this . title = o 4 ; <CR> this . receiver = W 3 ; <CR> this . content = z ; <CR> this . sender = S 3 ; <CR> this . date = W ; <CR> } <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object F ) { <CR> Letter j = ( Letter ) F ; <CR> if ( this . getDate ( ) . compareTo ( j . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( j . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] q 7 ) { <CR> Letter k = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter K 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter g = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList V 7 = { k , K 6 , g } ; <CR> for ( Letter H 2 : V 7 ) <CR> H 2 . display ( ) ; <CR> } <CR> } <CR> <EOC>