<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String X , String R 5 , String Z 5 , String o 1 , String Z 8 ) { <CR> super ( X , R 5 , Z 5 , o 1 , Z 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String i 1 , String o 8 , String c 5 , String L 2 , String M ) { <CR> super ( i 1 , o 8 , c 5 , L 2 , M ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object j 1 ) { <CR> Letter U 5 = ( Letter ) j 1 ; <CR> if ( this . getDate ( ) . compareTo ( U 5 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( U 5 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String K 2 , String D 9 , String B , String y 1 , String o 4 ) { <CR> this . title = K 2 ; <CR> this . receiver = D 9 ; <CR> this . content = B ; <CR> this . sender = y 1 ; <CR> this . date = o 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] S 9 ) { <CR> Letter L 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter L 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter F 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList u 6 = { L 4 , L 7 , F 5 } ; <CR> for ( Letter B 8 : u 6 ) <CR> B 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>