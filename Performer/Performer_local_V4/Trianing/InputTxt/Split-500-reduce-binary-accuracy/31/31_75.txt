<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String K , String D , String G 0 , String O 0 , String J 9 ) { <CR> super ( K , D , G 0 , O 0 , J 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String C 7 , String E 2 , String n 5 , String e 4 , String X 5 ) { <CR> super ( C 7 , E 2 , n 5 , e 4 , X 5 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String T 8 , String T 3 , String M 8 , String y 4 , String w 2 ) { <CR> this . title = T 8 ; <CR> this . receiver = T 3 ; <CR> this . content = M 8 ; <CR> this . sender = y 4 ; <CR> this . date = w 2 ; <CR> } <CR> public int compareTo ( Object W ) { <CR> Letter n = ( Letter ) W ; <CR> if ( this . getDate ( ) . compareTo ( n . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( n . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] E 8 ) { <CR> Letter w 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter I 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter j 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList S 6 = { w 9 , I 5 , j 2 } ; <CR> for ( Letter y 1 : S 6 ) <CR> y 1 . display ( ) ; <CR> } <CR> } <CR> <EOC>