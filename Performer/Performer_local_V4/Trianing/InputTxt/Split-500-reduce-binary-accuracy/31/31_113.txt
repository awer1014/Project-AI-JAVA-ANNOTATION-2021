<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String V 2 , String g , String Y 3 , String D 5 , String k 8 ) { <CR> super ( V 2 , g , Y 3 , D 5 , k 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String R 3 , String g 2 , String H , String v 0 , String d 5 ) { <CR> super ( R 3 , g 2 , H , v 0 , d 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object o ) { <CR> Letter g = ( Letter ) o ; <CR> if ( this . getDate ( ) . compareTo ( g . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( g . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String m , String j 9 , String O 6 , String r 1 , String k 4 ) { <CR> this . title = m ; <CR> this . receiver = j 9 ; <CR> this . content = O 6 ; <CR> this . sender = r 1 ; <CR> this . date = k 4 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] e ) { <CR> Letter v 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter a 1 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter j 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList R 1 = { v 1 , a 1 , j 6 } ; <CR> for ( Letter I 1 : R 1 ) <CR> I 1 . display ( ) ; <CR> } <CR> } <CR> <EOC>