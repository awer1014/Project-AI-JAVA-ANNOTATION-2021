<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String I 4 , String z 0 , String a , String J 4 , String w 7 ) { <CR> super ( I 4 , z 0 , a , J 4 , w 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String j 1 , String E 6 , String L 6 , String K 4 , String b 5 ) { <CR> super ( j 1 , E 6 , L 6 , K 4 , b 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> public int compareTo ( Object R 3 ) { <CR> Letter Z 4 = ( Letter ) R 3 ; <CR> if ( this . getDate ( ) . compareTo ( Z 4 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( Z 4 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> Letter ( String M 3 , String h 0 , String U , String B 6 , String j 1 ) { <CR> this . title = M 3 ; <CR> this . receiver = h 0 ; <CR> this . content = U ; <CR> this . sender = B 6 ; <CR> this . date = j 1 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] C 7 ) { <CR> Letter H 7 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter Z 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter I 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList S 7 = { H 7 , Z 2 , I 3 } ; <CR> for ( Letter J 4 : S 7 ) <CR> J 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>