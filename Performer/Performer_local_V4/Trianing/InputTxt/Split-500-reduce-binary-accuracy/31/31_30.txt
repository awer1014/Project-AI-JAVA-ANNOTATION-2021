<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String B 5 , String v 1 , String n 6 , String B 6 , String f 8 ) { <CR> super ( B 5 , v 1 , n 6 , B 6 , f 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String f 5 , String Z , String P 3 , String R 0 , String M 1 ) { <CR> super ( f 5 , Z , P 3 , R 0 , M 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object T ) { <CR> Letter I 9 = ( Letter ) T ; <CR> if ( this . getDate ( ) . compareTo ( I 9 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( I 9 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String k 0 , String j 0 , String c 4 , String G 2 , String A 4 ) { <CR> this . title = k 0 ; <CR> this . receiver = j 0 ; <CR> this . content = c 4 ; <CR> this . sender = G 2 ; <CR> this . date = A 4 ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] p ) { <CR> Letter G 2 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter a 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList v 4 = { G 2 , a 5 , k } ; <CR> for ( Letter U 8 : v 4 ) <CR> U 8 . display ( ) ; <CR> } <CR> } <CR> <EOC>