<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String t 3 , String h , String o 4 , String F 7 , String y ) { <CR> super ( t 3 , h , o 4 , F 7 , y ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String W 3 , String j 7 , String p 3 , String r 8 , String O 8 ) { <CR> super ( W 3 , j 7 , p 3 , r 8 , O 8 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> Letter ( String x 1 , String o 9 , String i 7 , String r , String E 1 ) { <CR> this . title = x 1 ; <CR> this . receiver = o 9 ; <CR> this . content = i 7 ; <CR> this . sender = r ; <CR> this . date = E 1 ; <CR> } <CR> public int compareTo ( Object z 0 ) { <CR> Letter c 3 = ( Letter ) z 0 ; <CR> if ( this . getDate ( ) . compareTo ( c 3 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( c 3 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] a 9 ) { <CR> Letter A 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter D 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter U 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList h 5 = { A 3 , D 3 , U 7 } ; <CR> for ( Letter V 3 : h 5 ) <CR> V 3 . display ( ) ; <CR> } <CR> } <CR> <EOC>