<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String U 5 , String w , String m 7 , String u 2 , String s 5 ) { <CR> super ( U 5 , w , m 7 , u 2 , s 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String O 1 , String p 4 , String w 5 , String m , String d 1 ) { <CR> super ( O 1 , p 4 , w 5 , m , d 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object L 2 ) { <CR> Letter S 1 = ( Letter ) L 2 ; <CR> if ( this . getDate ( ) . compareTo ( S 1 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( S 1 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String u 9 , String u 5 , String f 1 , String T 1 , String A 6 ) { <CR> this . title = u 9 ; <CR> this . receiver = u 5 ; <CR> this . content = f 1 ; <CR> this . sender = T 1 ; <CR> this . date = A 6 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] P 6 ) { <CR> Letter x 2 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter M 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter G 2 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList p 4 = { x 2 , M 8 , G 2 } ; <CR> for ( Letter m 6 : p 4 ) <CR> m 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>