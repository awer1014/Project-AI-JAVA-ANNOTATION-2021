<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String w 5 , String t 1 , String p 5 , String H , String I 3 ) { <CR> super ( w 5 , t 1 , p 5 , H , I 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String E 0 , String f 0 , String j 5 , String v 7 , String q 7 ) { <CR> super ( E 0 , f 0 , j 5 , v 7 , q 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> public int compareTo ( Object m 7 ) { <CR> Letter o 3 = ( Letter ) m 7 ; <CR> if ( this . getDate ( ) . compareTo ( o 3 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( o 3 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String Z 0 , String E 7 , String x 4 , String n 2 , String t ) { <CR> this . title = Z 0 ; <CR> this . receiver = E 7 ; <CR> this . content = x 4 ; <CR> this . sender = n 2 ; <CR> this . date = t ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] X ) { <CR> Letter w 7 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter b 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter U 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList O 9 = { w 7 , b 0 , U 7 } ; <CR> for ( Letter S : O 9 ) <CR> S . display ( ) ; <CR> } <CR> } <CR> <EOC>