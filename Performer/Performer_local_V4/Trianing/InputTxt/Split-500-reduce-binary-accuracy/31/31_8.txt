<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String a 1 , String y 0 , String X 8 , String o , String Y 3 ) { <CR> super ( a 1 , y 0 , X 8 , o , Y 3 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String w 0 , String k , String G 3 , String h 7 , String P 1 ) { <CR> super ( w 0 , k , G 3 , h 7 , P 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> Letter ( String L 9 , String I 6 , String O , String u 9 , String o 0 ) { <CR> this . title = L 9 ; <CR> this . receiver = I 6 ; <CR> this . content = O ; <CR> this . sender = u 9 ; <CR> this . date = o 0 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> abstract void display ( ) ; <CR> public int compareTo ( Object c 9 ) { <CR> Letter C 9 = ( Letter ) c 9 ; <CR> if ( this . getDate ( ) . compareTo ( C 9 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( C 9 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] l 3 ) { <CR> Letter Z 4 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter k 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter D 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList O = { Z 4 , k 6 , D 6 } ; <CR> for ( Letter T 7 : O ) <CR> T 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>