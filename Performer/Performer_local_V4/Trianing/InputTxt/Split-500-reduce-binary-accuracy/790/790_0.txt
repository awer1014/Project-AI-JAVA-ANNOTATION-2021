<BOC> abstract public class Evaluation { <CR> double getScore ( ) { <CR> return score ; <CR> } <CR> public Evaluation ( String b 8 , String U 5 , double j 4 , double z 4 , String S 0 , String Z 0 ) { <CR> this . stuno = b 8 ; <CR> this . name = U 5 ; <CR> this . score = j 4 ; <CR> this . rate = z 4 ; <CR> } <CR> protected double score , rate ; <CR> double getRate ( ) { <CR> return rate ; <CR> } <CR> protected String name ; <CR> protected String stuno ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Exam extends Evaluation { <CR> public Exam ( String O 5 , String p 2 , double L 3 , double H 7 , String j 7 , String P 6 ) { <CR> super ( O 5 , p 2 , L 3 , H 7 , j 7 , P 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + stuno ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Homework extends Evaluation { <CR> public Homework ( String y 6 , String p , double K 0 , double d , String M , String M 6 ) { <CR> super ( y 6 , p , K 0 , d , M , M 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String C 6 , String N 8 , double d 0 , double Z 3 , String V 1 , String M 9 ) { <CR> super ( C 6 , N 8 , d 0 , Z 3 , V 1 , M 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] E 2 ) { <CR> int p 5 = <NUM_INT> ; <CR> String f 7 , p 8 ; <CR> double t 1 , s 5 ; <CR> System . out . print ( <STRING> ) ; <CR> p 5 = scanner . nextInt ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 8 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 7 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> t 1 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 5 = scanner . nextDouble ( ) ; <CR> scanner . nextLine ( ) ; <CR> if ( p 5 == <NUM_INT> ) { <CR> String U 5 , Z 2 ; <CR> System . out . print ( <STRING> ) ; <CR> U 5 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Z 2 = scanner . nextLine ( ) ; <CR> Evaluation y 5 = new Exam ( p 8 , f 7 , t 1 , s 5 , U 5 , Z 2 ) ; <CR> } <CR> if ( p 5 == <NUM_INT> ) { <CR> String f 4 , p 2 ; <CR> System . out . print ( <STRING> ) ; <CR> f 4 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 2 = scanner . nextLine ( ) ; <CR> Evaluation y 5 = new Homework ( p 8 , f 7 , t 1 , s 5 , f 4 , p 2 ) ; <CR> } <CR> if ( p 5 == <NUM_INT> ) { <CR> String L 9 , M ; <CR> System . out . print ( <STRING> ) ; <CR> L 9 = scanner . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M = scanner . nextLine ( ) ; <CR> Evaluation y 5 = new Report ( p 8 , f 7 , t 1 , s 5 , L 9 , M ) ; <CR> } <CR> } <CR> static Scanner scanner = new Scanner ( System . in ) ; <CR> } <CR> <EOC>