<BOC> public class Keeper { <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> Keeper ( String g 3 , String t 8 ) { <CR> this . id = g 3 ; <CR> this . tel = t 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> String pid ; <CR> public static void main ( String [ ] o 9 ) { <CR> String P 1 = o 9 [ <NUM_INT> ] ; <CR> String L 0 = o 9 [ <NUM_INT> ] ; <CR> String h 2 = o 9 [ <NUM_INT> ] ; <CR> String J 1 = o 9 [ <NUM_INT> ] ; <CR> String r 2 = o 9 [ <NUM_INT> ] ; <CR> String o 1 = o 9 [ <NUM_INT> ] ; <CR> Pet D 0 = new Pet ( P 1 , L 0 , h 2 ) ; <CR> Keeper U 8 = new Keeper ( <STRING> , <STRING> ) ; <CR> System . out . println ( <STRING> + h 2 ) ; <CR> System . out . println ( <STRING> + P 1 ) ; <CR> System . out . println ( <STRING> + L 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + o 1 ) ; <CR> System . out . println ( <STRING> + J 1 ) ; <CR> System . out . println ( <STRING> + r 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 0 . display ( ) ; <CR> U 8 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Pet f 9 = new Pet ( J 1 , r 2 , o 1 ) ; <CR> Keeper U 6 = new Keeper ( <STRING> , <STRING> ) ; <CR> f 9 . display ( ) ; <CR> U 6 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> Pet ( String P 1 , String L 0 , String h 2 ) { <CR> this . pid = P 1 ; <CR> this . name = L 0 ; <CR> this . type = h 2 ; <CR> } <CR> String type ; <CR> String name ; <CR> int count ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> void speak ( ) { <CR> } <CR> } <CR> <EOC>