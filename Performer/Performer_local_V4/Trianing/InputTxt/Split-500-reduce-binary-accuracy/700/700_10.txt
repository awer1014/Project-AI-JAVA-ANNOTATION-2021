<BOC> public class Keeper { <CR> String tel ; <CR> Keeper ( String g 7 , String T 4 ) { <CR> this . id = g 7 ; <CR> this . tel = T 4 ; <CR> } <CR> String id ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> String pid ; <CR> String name ; <CR> int count ; <CR> public static void main ( String [ ] R 8 ) { <CR> String l 9 = R 8 [ <NUM_INT> ] ; <CR> String T 9 = R 8 [ <NUM_INT> ] ; <CR> String v 5 = R 8 [ <NUM_INT> ] ; <CR> String W = R 8 [ <NUM_INT> ] ; <CR> String R 0 = R 8 [ <NUM_INT> ] ; <CR> String o 7 = R 8 [ <NUM_INT> ] ; <CR> Pet s 2 = new Pet ( l 9 , T 9 , v 5 ) ; <CR> Keeper W 6 = new Keeper ( <STRING> , <STRING> ) ; <CR> System . out . println ( <STRING> + v 5 ) ; <CR> System . out . println ( <STRING> + l 9 ) ; <CR> System . out . println ( <STRING> + T 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + o 7 ) ; <CR> System . out . println ( <STRING> + W ) ; <CR> System . out . println ( <STRING> + R 0 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 2 . display ( ) ; <CR> W 6 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Pet s 4 = new Pet ( W , R 0 , o 7 ) ; <CR> Keeper p 2 = new Keeper ( <STRING> , <STRING> ) ; <CR> s 4 . display ( ) ; <CR> p 2 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> Pet ( String l 9 , String T 9 , String v 5 ) { <CR> this . pid = l 9 ; <CR> this . name = T 9 ; <CR> this . type = v 5 ; <CR> } <CR> String type ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> void speak ( ) { <CR> } <CR> } <CR> <EOC>