<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public Evaluation ( String m 1 , String z 7 ) { <CR> day = m 1 ; <CR> cover = z 7 ; <CR> } <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String H 0 , String X 9 ) { <CR> super ( H 0 , X 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String D 0 , String C 6 ) { <CR> super ( D 0 , C 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String Z 4 , String a 6 ) { <CR> super ( Z 4 , a 6 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String o 3 , String U 2 , String E 7 , String E 8 , String b 8 ) { <CR> evaluation = o 3 ; <CR> stid = U 2 ; <CR> stname = E 7 ; <CR> stnumber = E 8 ; <CR> stnumberc = b 8 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> public static void main ( String [ ] j 4 ) { <CR> Scanner g 8 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = g 8 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String s , p 5 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> s = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 5 = g 8 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> s = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 5 = g 8 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> s = g 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> p 5 = g 8 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation s 1 = setEvaluation ( evaluation ) ; <CR> s 1 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String X ) { <CR> Evaluation N 3 = <STRING> ; <CR> switch ( X ) { <CR> case <STRING> : <CR> N 3 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> N 3 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> N 3 = new Report ( day , cover ) ; <CR> } <CR> return N 3 ; <CR> } <CR> static Student st ; <CR> } <CR> <EOC>