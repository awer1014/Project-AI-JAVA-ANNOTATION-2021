<BOC> public class ChineseLetter extends Evaluation { <CR> public ChineseLetter ( String a 5 , String D 1 , String s 4 , String h 3 , String W 6 ) { <CR> super ( a 5 , D 1 , s 4 , h 3 , W 6 ) ; <CR> } <CR> public void Display ( ) { <CR> System . out . println ( getReceiver ( ) + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( getSender ( ) + <STRING> ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Evaluation { <CR> public EnglishLetter ( String w 3 , String P , String m 7 , String D 7 , String h 2 ) { <CR> super ( w 3 , P , m 7 , D 7 , h 2 ) ; <CR> } <CR> public void Display ( ) { <CR> System . out . println ( <STRING> + title + <STRING> + getReceiver ( ) + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( getSender ( ) ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> String senderAddr , receiverAddr ; <CR> public static void main ( String [ ] M 3 ) { <CR> Evaluation X 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop Q 5 = new Envelop ( <STRING> , <STRING> , X 5 ) ; <CR> Q 5 . display ( ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr ) ; <CR> System . out . println ( <STRING> + receiverAddr ) ; <CR> letter . Display ( ) ; <CR> } <CR> Evaluation letter ; <CR> public Envelop ( String B 1 , String V 2 , Evaluation V 5 ) { <CR> this . senderAddr = B 1 ; <CR> this . receiverAddr = V 2 ; <CR> this . letter = V 5 ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> public String getDate ( ) { <CR> return date ; <CR> } <CR> abstract protected void Display ( ) ; <CR> protected String title , receiver , content , sender , date ; <CR> public Evaluation ( String W 2 , String K 5 , String t 7 , String P 8 , String V 9 ) { <CR> this . title = W 2 ; <CR> this . receiver = K 5 ; <CR> this . content = t 7 ; <CR> this . sender = P 8 ; <CR> this . date = V 9 ; <CR> } <CR> public String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> public class Letter implements Comparable { <CR> Letter ( int b ) { <CR> this . x = b ; <CR> } <CR> private int x ; <CR> public static Evaluation [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> public int compareTo ( Object c 0 ) { <CR> Letter l 4 = ( Letter ) c 0 ; <CR> if ( this . x > l 4 . x ) <CR> return <NUM_INT> ; <CR> else <CR> return - <NUM_INT> ; <CR> } <CR> public void display ( int h 3 ) { <CR> list [ h 3 ] . Display ( ) ; <CR> } <CR> public static void main ( String [ ] X 5 ) { <CR> int h 3 ; <CR> for ( h 3 = list . length - <NUM_INT> ; h 3 > = <NUM_INT> ; h 3 -- ) { <CR> int U 2 = h 3 ; <CR> Letter O 1 = new Letter ( h 3 ) ; <CR> Letter B 2 = new Letter ( U 2 - <NUM_INT> ) ; <CR> if ( O 1 . compareTo ( B 2 ) == <NUM_INT> ) <CR> O 1 . display ( h 3 ) ; <CR> } <CR> } <CR> } <CR> <EOC>