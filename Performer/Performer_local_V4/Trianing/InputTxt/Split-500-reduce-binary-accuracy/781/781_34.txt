<BOC> abstract public class Evaluation { <CR> public Evaluation ( String O 4 ) { <CR> kind = O 4 ; <CR> } <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String o 5 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> o 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> o 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> o 5 += <STRING> ; <CR> System . out . println ( <STRING> + o 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String t , String y 8 ) { <CR> super ( t , y 8 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String X 2 , String k 1 ) { <CR> super ( X 2 , k 1 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Report ( String G 6 , String Y 7 ) { <CR> super ( G 6 , Y 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String Q 4 , String h 9 , String P 8 , String T ) { <CR> id = Q 4 ; <CR> name = h 9 ; <CR> score = P 8 ; <CR> prop = T ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] k 7 ) { <CR> Scanner N 2 = new Scanner ( System . in ) ; <CR> boolean m 6 = <STRING> ; <CR> while ( m 6 ) { <CR> System . out . println ( <STRING> ) ; <CR> String A 2 = N 2 . nextLine ( ) ; <CR> if ( A 2 . equals ( <STRING> ) ) { <CR> m 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String c 5 = N 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String o 3 = N 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String N = N 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String q 3 = N 2 . nextLine ( ) ; <CR> Student y 2 = new Student ( c 5 , o 3 , N , q 3 ) ; <CR> Evaluation Q 1 = new Evaluation ( A 2 ) ; <CR> Evaluation R 7 = <STRING> ; <CR> String Q , I 3 ; <CR> if ( A 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q = N 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 3 = N 2 . nextLine ( ) ; <CR> R 7 = new Exam ( Q , I 3 ) ; <CR> } <CR> else if ( A 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q = N 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 3 = N 2 . nextLine ( ) ; <CR> R 7 = new HomeWork ( Q , I 3 ) ; <CR> } <CR> else if ( A 2 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Q = N 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 3 = N 2 . nextLine ( ) ; <CR> R 7 = new Report ( Q , I 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( R 7 ! = <STRING> ) { <CR> Q 1 . print ( ) ; <CR> y 2 . print ( ) ; <CR> R 7 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>