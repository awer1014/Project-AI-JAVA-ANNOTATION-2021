<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> public void print ( ) { <CR> String n 7 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> n 7 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> n 7 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> n 7 += <STRING> ; <CR> System . out . println ( <STRING> + n 7 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String r 6 ) { <CR> kind = r 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String E 1 , String X 6 ) { <CR> super ( E 1 , X 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String e 8 , String Z 6 ) { <CR> super ( e 8 , Z 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String w 3 , String q 6 ) { <CR> super ( w 3 , q 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public Student ( String v 0 , String C 9 , String S 1 , String h 5 ) { <CR> id = v 0 ; <CR> name = C 9 ; <CR> score = S 1 ; <CR> prop = h 5 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] E 3 ) { <CR> Scanner F 1 = new Scanner ( System . in ) ; <CR> boolean O 1 = <STRING> ; <CR> while ( O 1 ) { <CR> System . out . println ( <STRING> ) ; <CR> String O 5 = F 1 . nextLine ( ) ; <CR> if ( O 5 . equals ( <STRING> ) ) { <CR> O 1 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String j 4 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String h 3 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String n 6 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String O 4 = F 1 . nextLine ( ) ; <CR> Student D = new Student ( j 4 , h 3 , n 6 , O 4 ) ; <CR> Evaluation T 3 = new Evaluation ( O 5 ) ; <CR> Evaluation Y 3 = <STRING> ; <CR> String z 3 , e 1 ; <CR> if ( O 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 3 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 1 = F 1 . nextLine ( ) ; <CR> Y 3 = new Exam ( z 3 , e 1 ) ; <CR> } <CR> else if ( O 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 3 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 1 = F 1 . nextLine ( ) ; <CR> Y 3 = new HomeWork ( z 3 , e 1 ) ; <CR> } <CR> else if ( O 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 3 = F 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> e 1 = F 1 . nextLine ( ) ; <CR> Y 3 = new Report ( z 3 , e 1 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( Y 3 ! = <STRING> ) { <CR> T 3 . print ( ) ; <CR> D . print ( ) ; <CR> Y 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>