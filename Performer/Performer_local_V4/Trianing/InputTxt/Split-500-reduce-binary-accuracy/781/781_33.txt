<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> public Evaluation ( String i 4 ) { <CR> kind = i 4 ; <CR> } <CR> public void print ( ) { <CR> String W 0 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> W 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> W 0 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> W 0 += <STRING> ; <CR> System . out . println ( <STRING> + W 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String o 2 , String G 0 ) { <CR> super ( o 2 , G 0 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String X 2 , String e 6 ) { <CR> super ( X 2 , e 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String k 8 , String x 1 ) { <CR> super ( k 8 , x 1 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public Student ( String F 1 , String k , String n 6 , String s 2 ) { <CR> id = F 1 ; <CR> name = k ; <CR> score = n 6 ; <CR> prop = s 2 ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] q 8 ) { <CR> Scanner s 3 = new Scanner ( System . in ) ; <CR> boolean s 4 = <STRING> ; <CR> while ( s 4 ) { <CR> System . out . println ( <STRING> ) ; <CR> String R 5 = s 3 . nextLine ( ) ; <CR> if ( R 5 . equals ( <STRING> ) ) { <CR> s 4 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String s 9 = s 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String g 1 = s 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String C 6 = s 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String u 0 = s 3 . nextLine ( ) ; <CR> Student P 1 = new Student ( s 9 , g 1 , C 6 , u 0 ) ; <CR> Evaluation y = new Evaluation ( R 5 ) ; <CR> Evaluation A 3 = <STRING> ; <CR> String W 0 , q 3 ; <CR> if ( R 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> W 0 = s 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 3 = s 3 . nextLine ( ) ; <CR> A 3 = new Exam ( W 0 , q 3 ) ; <CR> } <CR> else if ( R 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> W 0 = s 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 3 = s 3 . nextLine ( ) ; <CR> A 3 = new HomeWork ( W 0 , q 3 ) ; <CR> } <CR> else if ( R 5 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> W 0 = s 3 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> q 3 = s 3 . nextLine ( ) ; <CR> A 3 = new Report ( W 0 , q 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( A 3 ! = <STRING> ) { <CR> y . print ( ) ; <CR> P 1 . print ( ) ; <CR> A 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>