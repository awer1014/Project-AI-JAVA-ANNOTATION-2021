<BOC> abstract public class Evaluation { <CR> public Evaluation ( String H 3 ) { <CR> kind = H 3 ; <CR> } <CR> private String kind ; <CR> public void print ( ) { <CR> String s 3 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> s 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> s 3 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> s 3 += <STRING> ; <CR> System . out . println ( <STRING> + s 3 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String T 8 , String A 3 ) { <CR> super ( T 8 , A 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String A 2 , String l ) { <CR> super ( A 2 , l ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String D 4 , String k 2 ) { <CR> super ( D 4 , k 2 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String W 8 , String q 6 , String W 6 , String Y 7 ) { <CR> id = W 8 ; <CR> name = q 6 ; <CR> score = W 6 ; <CR> prop = Y 7 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] q 0 ) { <CR> Scanner d 6 = new Scanner ( System . in ) ; <CR> boolean C = <STRING> ; <CR> while ( C ) { <CR> System . out . println ( <STRING> ) ; <CR> String i 6 = d 6 . nextLine ( ) ; <CR> if ( i 6 . equals ( <STRING> ) ) { <CR> C = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String n 3 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String m = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String L 3 = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String b 8 = d 6 . nextLine ( ) ; <CR> Student G 1 = new Student ( n 3 , m , L 3 , b 8 ) ; <CR> Evaluation s 5 = new Evaluation ( i 6 ) ; <CR> Evaluation a 8 = <STRING> ; <CR> String x , O 5 ; <CR> if ( i 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 5 = d 6 . nextLine ( ) ; <CR> a 8 = new Exam ( x , O 5 ) ; <CR> } <CR> else if ( i 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 5 = d 6 . nextLine ( ) ; <CR> a 8 = new HomeWork ( x , O 5 ) ; <CR> } <CR> else if ( i 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x = d 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 5 = d 6 . nextLine ( ) ; <CR> a 8 = new Report ( x , O 5 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( a 8 ! = <STRING> ) { <CR> s 5 . print ( ) ; <CR> G 1 . print ( ) ; <CR> a 8 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>