<BOC> public class Keeper { <CR> String id , tel ; <CR> public Keeper ( String t 7 , String v 4 ) { <CR> id = t 7 ; <CR> tel = v 4 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . io . * ; <CR> import java . util . * ; <CR> import java . math . * ; <CR> public class Test { <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> public static void main ( String [ ] i ) { <CR> String a 1 [ ] = new String [ <NUM_INT> ] ; <CR> String j 0 [ ] = new String [ <NUM_INT> ] ; <CR> String n 0 [ ] = new String [ <NUM_INT> ] ; <CR> String R 9 [ ] = new String [ <NUM_INT> ] ; <CR> String b 9 [ ] = new String [ <NUM_INT> ] ; <CR> int R 3 = <NUM_INT> ; <CR> do { <CR> System . out . println ( <STRING> ) ; <CR> n 0 [ R 3 ] = cin . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 1 [ R 3 ] = cin . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> j 0 [ R 3 ] = cin . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 9 [ R 3 ] = cin . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b 9 [ R 3 ] = cin . nextLine ( ) ; <CR> R 3 ++ ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> while ( n 0 ! = <STRING> ) ; <CR> for ( int h 3 = <NUM_INT> ; h 3 < R 3 ; h 3 ++ ) { <CR> Pet k 8 = new Pet ( a 1 [ h 3 ] , j 0 [ h 3 ] , n 0 [ h 3 ] ) ; <CR> Keeper D 8 = new Keeper ( R 9 [ h 3 ] , b 9 [ R 9 ] ) ; <CR> k 8 . display ( ) ; <CR> D 8 . display ( ) ; <CR> k 8 . speak ( j 0 [ h 3 ] ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> import java . io . * ; <CR> import java . util . * ; <CR> import java . math . * ; <CR> public class Pet { <CR> String pid , name , type ; <CR> public Pet ( String E 8 , String X 7 , String i 3 ) { <CR> name = X 7 ; <CR> pid = E 8 ; <CR> type = i 3 ; <CR> } <CR> void speak ( String q 7 ) { <CR> if ( q 7 == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> } <CR> <EOC>