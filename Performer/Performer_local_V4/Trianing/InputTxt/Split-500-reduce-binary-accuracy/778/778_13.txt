<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected String type , num , name ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> Evaluation ( String W , String I 2 , String H 2 , double l 5 , double K 7 ) { <CR> type = W ; <CR> num = I 2 ; <CR> name = H 2 ; <CR> grade = l 5 ; <CR> pgrade = K 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> public Exam ( String p , String V 7 , String N , double I 0 , double M ) { <CR> super ( p , V 7 , N , I 0 , M ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> String odate , des ; <CR> public HomeWork ( String L 0 , String D 2 , String Q , double w 2 , double J 7 ) { <CR> super ( L 0 , D 2 , Q , w 2 , J 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String e 3 , String j 4 , String S 2 , double e 4 , double L 4 ) { <CR> super ( e 3 , j 4 , S 2 , e 4 , L 4 ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] T 3 ) { <CR> Scanner i 5 = new Scanner ( System . in ) ; <CR> String u 9 , W 7 , P ; <CR> double l 2 , c 2 ; <CR> System . out . print ( <STRING> ) ; <CR> u 9 = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 7 = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> P = i 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 2 = i 5 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 2 = i 5 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String x 8 , D 5 , F 2 , b 2 , q 8 , y 5 ; <CR> if ( u 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 8 = i 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 5 = i 5 . nextLine ( ) ; <CR> } <CR> else if ( u 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> F 2 = i 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> b 2 = i 5 . nextLine ( ) ; <CR> } <CR> else if ( u 9 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> q 8 = i 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> y 5 = i 5 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation q 3 = <STRING> ; <CR> if ( u 9 . equals ( <STRING> ) ) <CR> q 3 = new Exam ( u 9 , W 7 , P , l 2 , c 2 ) ; <CR> else if ( u 9 . equals ( <STRING> ) ) <CR> q 3 = new HomeWork ( u 9 , W 7 , P , l 2 , c 2 ) ; <CR> else if ( u 9 . equals ( <STRING> ) ) <CR> q 3 = new Report ( u 9 , W 7 , P , l 2 , c 2 ) ; <CR> q 3 . print ( ) ; <CR> } <CR> } <CR> <EOC>