<BOC> import java . util . * ; <CR> public class Evaluation { <CR> Evaluation ( String F 9 , String I 5 , String u 2 , double o 7 , double I 8 ) { <CR> type = F 9 ; <CR> num = I 5 ; <CR> name = u 2 ; <CR> grade = o 7 ; <CR> pgrade = I 8 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> protected String type , num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String j 7 , String l , String W 1 , double L , double S 1 ) { <CR> super ( j 7 , l , W 1 , L , S 1 ) ; <CR> } <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String g 9 , String b 0 , String V 4 , double L 2 , double V ) { <CR> super ( g 9 , b 0 , V 4 , L 2 , V ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> public Report ( String b 0 , String Q 2 , String U 7 , double O 2 , double v 8 ) { <CR> super ( b 0 , Q 2 , U 7 , O 2 , v 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] a 5 ) { <CR> Scanner G 2 = new Scanner ( System . in ) ; <CR> String N 1 , b 6 , D 5 ; <CR> double K 4 , V 0 ; <CR> System . out . print ( <STRING> ) ; <CR> N 1 = G 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> b 6 = G 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 5 = G 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 4 = G 2 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V 0 = G 2 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String i 0 , s 5 , E , B 7 , j , F 3 ; <CR> if ( N 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> i 0 = G 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 5 = G 2 . nextLine ( ) ; <CR> } <CR> else if ( N 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> E = G 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 7 = G 2 . nextLine ( ) ; <CR> } <CR> else if ( N 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> j = G 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> F 3 = G 2 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation K 1 = <STRING> ; <CR> if ( N 1 . equals ( <STRING> ) ) <CR> K 1 = new Exam ( N 1 , b 6 , D 5 , K 4 , V 0 ) ; <CR> else if ( N 1 . equals ( <STRING> ) ) <CR> K 1 = new HomeWork ( N 1 , b 6 , D 5 , K 4 , V 0 ) ; <CR> else if ( N 1 . equals ( <STRING> ) ) <CR> K 1 = new Report ( N 1 , b 6 , D 5 , K 4 , V 0 ) ; <CR> K 1 . print ( ) ; <CR> } <CR> } <CR> <EOC>