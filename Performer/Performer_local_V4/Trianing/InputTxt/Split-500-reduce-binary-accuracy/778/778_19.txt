<BOC> import java . util . * ; <CR> public class Evaluation { <CR> protected double grade , pgrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> Evaluation ( String p 2 , String B 5 , String I 5 , double i 1 , double s 0 ) { <CR> type = p 2 ; <CR> num = B 5 ; <CR> name = I 5 ; <CR> grade = i 1 ; <CR> pgrade = s 0 ; <CR> } <CR> protected String type , num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> public Exam ( String O 9 , String z 8 , String O 4 , double G 0 , double U 7 ) { <CR> super ( O 9 , z 8 , O 4 , G 0 , U 7 ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String o 0 , String s 8 , String S , double d , double y 6 ) { <CR> super ( o 0 , s 8 , S , d , y 6 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String R 1 , String X 7 , String s 8 , double k , double A 8 ) { <CR> super ( R 1 , X 7 , s 8 , k , A 8 ) ; <CR> } <CR> String rep , bok ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] R 7 ) { <CR> Scanner I 5 = new Scanner ( System . in ) ; <CR> String N 8 , K 3 , V 8 ; <CR> double M 0 , i 3 ; <CR> System . out . print ( <STRING> ) ; <CR> N 8 = I 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 3 = I 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> V 8 = I 5 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 0 = I 5 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> i 3 = I 5 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String N 4 , y 5 , H 9 , n 0 , z 8 , j 7 ; <CR> if ( N 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> N 4 = I 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> y 5 = I 5 . nextLine ( ) ; <CR> } <CR> else if ( N 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> H 9 = I 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 0 = I 5 . nextLine ( ) ; <CR> } <CR> else if ( N 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> z 8 = I 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> j 7 = I 5 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation T 4 = <STRING> ; <CR> if ( N 8 . equals ( <STRING> ) ) <CR> T 4 = new Exam ( N 8 , K 3 , V 8 , M 0 , i 3 ) ; <CR> else if ( N 8 . equals ( <STRING> ) ) <CR> T 4 = new HomeWork ( N 8 , K 3 , V 8 , M 0 , i 3 ) ; <CR> else if ( N 8 . equals ( <STRING> ) ) <CR> T 4 = new Report ( N 8 , K 3 , V 8 , M 0 , i 3 ) ; <CR> T 4 . print ( ) ; <CR> } <CR> } <CR> <EOC>