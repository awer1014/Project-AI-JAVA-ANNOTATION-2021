<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> Evaluation ( String h 2 , String g 7 , String N 4 , double U 0 , double l 0 ) { <CR> type = h 2 ; <CR> num = g 7 ; <CR> name = N 4 ; <CR> grade = U 0 ; <CR> pgrade = l 0 ; <CR> } <CR> protected double grade , pgrade ; <CR> protected String type , num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> public Exam ( String x 8 , String x 0 , String v 9 , double U 2 , double Y 9 ) { <CR> super ( x 8 , x 0 , v 9 , U 2 , Y 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String D 5 , String h 2 , String F 0 , double R 8 , double D 4 ) { <CR> super ( D 5 , h 2 , F 0 , R 8 , D 4 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> public Report ( String P 6 , String O 6 , String j 8 , double F 1 , double F 7 ) { <CR> super ( P 6 , O 6 , j 8 , F 1 , F 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] w 8 ) { <CR> Scanner P 1 = new Scanner ( System . in ) ; <CR> String X 1 , T 6 , A 6 ; <CR> double E , C 1 ; <CR> System . out . print ( <STRING> ) ; <CR> X 1 = P 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> T 6 = P 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 6 = P 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> E = P 1 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 1 = P 1 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String X 9 , w 7 , e 7 , f 2 , J 2 , Y 0 ; <CR> if ( X 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> X 9 = P 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> w 7 = P 1 . nextLine ( ) ; <CR> } <CR> else if ( X 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 7 = P 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> f 2 = P 1 . nextLine ( ) ; <CR> } <CR> else if ( X 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> J 2 = P 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> Y 0 = P 1 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation s 8 = <STRING> ; <CR> if ( X 1 . equals ( <STRING> ) ) <CR> s 8 = new Exam ( X 1 , T 6 , A 6 , E , C 1 ) ; <CR> else if ( X 1 . equals ( <STRING> ) ) <CR> s 8 = new HomeWork ( X 1 , T 6 , A 6 , E , C 1 ) ; <CR> else if ( X 1 . equals ( <STRING> ) ) <CR> s 8 = new Report ( X 1 , T 6 , A 6 , E , C 1 ) ; <CR> s 8 . print ( ) ; <CR> } <CR> } <CR> <EOC>