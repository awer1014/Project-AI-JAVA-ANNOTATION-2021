<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private String id , date , coin ; <CR> ChineseLetter ( String q 9 , String Y 5 , String E 9 , Item [ ] N 0 , int M 0 ) { <CR> id = q 9 ; <CR> date = Y 5 ; <CR> num_i = M 0 ; <CR> for ( int p 5 = <NUM_INT> ; p 5 < M 0 ; p 5 ++ ) <CR> it [ p 5 ] = N 0 [ p 5 ] ; <CR> } <CR> private int num_i ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( ) { <CR> } <CR> private String id , name ; <CR> private double money , discnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private static double total_money = <NUM_INT> ; <CR> private int cnt ; <CR> Item ( String d 9 , String X 9 , double d 7 , int u 7 , double V 6 ) { <CR> id = d 9 ; <CR> name = X 9 ; <CR> money = d 7 ; <CR> cnt = u 7 ; <CR> discnt = V 6 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] B 4 ) { <CR> Scanner p 1 = new Scanner ( System . in ) ; <CR> String Y 7 , s 9 , i ; <CR> System . out . print ( <STRING> ) ; <CR> Y 7 = p 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> s 9 = p 1 . nextLine ( ) ; <CR> i = p 1 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String X 1 , T 2 , a 9 , B 3 , D 8 ; <CR> System . out . print ( <STRING> ) ; <CR> X 1 = p 1 . nextLine ( ) ; <CR> if ( X 1 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> T 2 = p 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 9 = p 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>