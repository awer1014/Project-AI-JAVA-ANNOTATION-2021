<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> ChineseLetter ( String l 8 , String u 2 , String j , Item [ ] o 0 , int A 9 ) { <CR> id = l 8 ; <CR> date = u 2 ; <CR> num_i = A 9 ; <CR> for ( int k 8 = <NUM_INT> ; k 8 < A 9 ; k 8 ++ ) <CR> it [ k 8 ] = o 0 [ k 8 ] ; <CR> } <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> private int num_i ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private String id , date , coin ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> Item ( ) { <CR> } <CR> private double money , discnt ; <CR> private String id , name ; <CR> private static double total_money = <NUM_INT> ; <CR> Item ( String w 7 , String C 6 , double X 4 , int i 0 , double H 6 ) { <CR> id = w 7 ; <CR> name = C 6 ; <CR> money = X 4 ; <CR> cnt = i 0 ; <CR> discnt = H 6 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> private int cnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] I 9 ) { <CR> Scanner t 2 = new Scanner ( System . in ) ; <CR> String C 5 , L 5 , G 8 ; <CR> System . out . print ( <STRING> ) ; <CR> C 5 = t 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> L 5 = t 2 . nextLine ( ) ; <CR> G 8 = t 2 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String D 0 , K 1 , f 4 , m , M 0 ; <CR> System . out . print ( <STRING> ) ; <CR> D 0 = t 2 . nextLine ( ) ; <CR> if ( D 0 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> K 1 = t 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> f 4 = t 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>