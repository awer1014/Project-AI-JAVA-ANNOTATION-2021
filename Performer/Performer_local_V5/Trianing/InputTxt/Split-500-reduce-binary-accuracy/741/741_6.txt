<BOC> import java . util . Scanner ; <CR> import java . util . Random ; <CR> public class input { <CR> public static void main ( String [ ] N 8 ) { <CR> System . out . print ( <STRING> ) ; <CR> String f 2 = keyboard . nextLine ( ) ; <CR> while ( f 2 ! = <STRING> ) { <CR> System . out . print ( <STRING> ) ; <CR> String B 7 = keyboard . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 0 = keyboard . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String w 7 = keyboard . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String q 3 = keyboard . nextLine ( ) ; <CR> } <CR> if ( f 2 == <STRING> ) { <CR> } <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static int count = <NUM_INT> ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> static String tel ; <CR> public Keeper ( String I 9 , String n 6 ) { <CR> this . id = I 9 ; <CR> this . tel = n 6 ; <CR> } <CR> static String id ; <CR> public void display ( String I 9 , String n 6 ) { <CR> System . out . println ( <STRING> + I 9 ) ; <CR> System . out . println ( <STRING> + n 6 ) ; <CR> } <CR> public String getId ( ) { <CR> return id ; <CR> } <CR> public String getTel ( ) { <CR> return tel ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public void speek ( String p 0 ) { <CR> if ( p 0 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> if ( p 0 == <STRING> ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> private String pid ; <CR> private String name ; <CR> private String type ; <CR> public String getPid ( ) { <CR> return pid ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> } <CR> public String getName ( ) { <CR> return name ; <CR> } <CR> public Pet ( String m 1 , String O 1 , String p 0 ) { <CR> this . pid = m 1 ; <CR> this . name = O 1 ; <CR> this . type = p 0 ; <CR> } <CR> public String getType ( ) { <CR> return type ; <CR> } <CR> } <CR> <EOC>