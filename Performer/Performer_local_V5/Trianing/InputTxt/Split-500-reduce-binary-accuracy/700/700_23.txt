<BOC> public class Keeper { <CR> String tel ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> Keeper ( String Z 8 , String b 9 ) { <CR> this . id = Z 8 ; <CR> this . tel = b 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Pet { <CR> String pid ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> Pet ( String W 9 , String A 9 , String G 8 ) { <CR> this . pid = W 9 ; <CR> this . name = A 9 ; <CR> this . type = G 8 ; <CR> } <CR> public static void main ( String [ ] f 9 ) { <CR> String W 9 = f 9 [ <NUM_INT> ] ; <CR> String A 9 = f 9 [ <NUM_INT> ] ; <CR> String G 8 = f 9 [ <NUM_INT> ] ; <CR> String O 5 = f 9 [ <NUM_INT> ] ; <CR> String p 6 = f 9 [ <NUM_INT> ] ; <CR> String F 9 = f 9 [ <NUM_INT> ] ; <CR> Pet O 0 = new Pet ( W 9 , A 9 , G 8 ) ; <CR> Keeper E 6 = new Keeper ( <STRING> , <STRING> ) ; <CR> System . out . println ( <STRING> + G 8 ) ; <CR> System . out . println ( <STRING> + W 9 ) ; <CR> System . out . println ( <STRING> + A 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + F 9 ) ; <CR> System . out . println ( <STRING> + O 5 ) ; <CR> System . out . println ( <STRING> + p 6 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> O 0 . display ( ) ; <CR> E 6 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Pet N 2 = new Pet ( O 5 , p 6 , F 9 ) ; <CR> Keeper M 5 = new Keeper ( <STRING> , <STRING> ) ; <CR> N 2 . display ( ) ; <CR> M 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> String name ; <CR> String type ; <CR> int count ; <CR> void speak ( ) { <CR> } <CR> } <CR> <EOC>