<BOC> public class Keeper { <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> Keeper ( String v 1 , String f ) { <CR> this . id = v 1 ; <CR> this . tel = f ; <CR> } <CR> String id ; <CR> String tel ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> String name ; <CR> public static void main ( String [ ] R 8 ) { <CR> String u 4 = R 8 [ <NUM_INT> ] ; <CR> String b 9 = R 8 [ <NUM_INT> ] ; <CR> String q = R 8 [ <NUM_INT> ] ; <CR> String z 0 = R 8 [ <NUM_INT> ] ; <CR> String P 2 = R 8 [ <NUM_INT> ] ; <CR> String Z 0 = R 8 [ <NUM_INT> ] ; <CR> Pet d 1 = new Pet ( u 4 , b 9 , q ) ; <CR> Keeper G 9 = new Keeper ( <STRING> , <STRING> ) ; <CR> System . out . println ( <STRING> + q ) ; <CR> System . out . println ( <STRING> + u 4 ) ; <CR> System . out . println ( <STRING> + b 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + Z 0 ) ; <CR> System . out . println ( <STRING> + z 0 ) ; <CR> System . out . println ( <STRING> + P 2 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 1 . display ( ) ; <CR> G 9 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> Pet A 6 = new Pet ( z 0 , P 2 , Z 0 ) ; <CR> Keeper k 0 = new Keeper ( <STRING> , <STRING> ) ; <CR> A 6 . display ( ) ; <CR> k 0 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> String type ; <CR> String pid ; <CR> int count ; <CR> Pet ( String u 4 , String b 9 , String q ) { <CR> this . pid = u 4 ; <CR> this . name = b 9 ; <CR> this . type = q ; <CR> } <CR> void speak ( ) { <CR> } <CR> } <CR> <EOC>