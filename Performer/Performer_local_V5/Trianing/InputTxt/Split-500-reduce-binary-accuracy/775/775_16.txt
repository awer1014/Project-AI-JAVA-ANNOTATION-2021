<BOC> import java . util . Scanner ; <CR> public class Exam { <CR> public static void main ( String [ ] o 8 ) { <CR> Scanner M 6 = new Scanner ( System . in ) ; <CR> String Y 7 , l 1 , z 3 , K 0 , A 9 , Q 9 , c 1 ; <CR> System . out . print ( <STRING> ) ; <CR> Y 7 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 1 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> z 3 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 0 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 9 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Q 9 = M 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 1 = M 6 . nextLine ( ) ; <CR> if ( Y 7 . equals ( <STRING> ) ) { <CR> Kindsoftest s 8 = new Test ( z 3 , l 1 , K 0 , Q 9 , A 9 , c 1 ) ; <CR> Test . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else if ( Y 7 . equals ( <STRING> ) ) { <CR> Kindsoftest s 8 = new Hwork ( z 3 , l 1 , K 0 , Q 9 , A 9 , c 1 ) ; <CR> Hwork . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else { <CR> Kindsoftest s 8 = new Mind ( z 3 , l 1 , K 0 , Q 9 , A 9 , c 1 ) ; <CR> Mind . print ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Hwork extends Kindsoftest { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Hwork ( String a 4 , int B 1 , int a 3 , int r 3 , double V 9 , String d 4 ) { <CR> super ( a 4 , B 1 , a 3 , r 3 , V 9 , d 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Kindsoftest { <CR> protected String name , range ; <CR> protected double gp ; <CR> protected int id , gread , date ; <CR> public Kindsoftest ( String c 1 , int W 6 , int q 4 , int H 0 , double y 2 , String X 3 ) { <CR> this . id = W 6 ; <CR> this . name = c 1 ; <CR> this . gread = q 4 ; <CR> this . gp = y 2 ; <CR> this . date = H 0 ; <CR> this . range = X 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Mind extends Kindsoftest { <CR> public Mind ( String i 7 , int Z 2 , int B 5 , int G 3 , double N 4 , String x 9 ) { <CR> super ( i 7 , Z 2 , B 5 , G 3 , N 4 , x 9 ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Test extends Kindsoftest { <CR> public Test ( String B 8 , int m 6 , int T 2 , int z 5 , double L 1 , String D ) { <CR> super ( B 8 , m 6 , T 2 , z 5 , L 1 , D ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + gread ) ; <CR> System . out . println ( <STRING> + gp ) ; <CR> System . out . println ( <STRING> + date ) ; <CR> } <CR> } <CR> <EOC>