<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected String sNumber ; <CR> protected double sGrade ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> Evaluation ( String O 6 , String i 6 , double R 6 , double P 0 ) { <CR> this . sNumber = O 6 ; <CR> this . sName = i 6 ; <CR> this . sGrade = R 6 ; <CR> this . sProportion = P 0 ; <CR> } <CR> protected double sProportion ; <CR> protected String sName ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> public Exam ( String S 6 , String e 2 , double w 2 , double g 5 , String y 0 , String T 0 ) { <CR> super ( S 6 , e 2 , w 2 , g 5 ) ; <CR> this . date = y 0 ; <CR> this . range = T 0 ; <CR> } <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String a 2 , String m 5 , double K 3 , double C 9 , String G 0 , String s 1 ) { <CR> super ( a 2 , m 5 , K 3 , C 9 ) ; <CR> this . deadline = G 0 ; <CR> this . description = s 1 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> public Report ( String h 8 , String o 6 , double j 1 , double L 8 , String Q 7 , String v 4 ) { <CR> super ( h 8 , o 6 , j 1 , L 8 ) ; <CR> this . content = Q 7 ; <CR> this . references = v 4 ; <CR> } <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int r 4 = <NUM_INT> ; <CR> do { <CR> r 4 = keyboard . nextInt ( ) ; <CR> } <CR> while ( r 4 > <NUM_INT> || r 4 < <NUM_INT> ) ; <CR> return choice ( r 4 ) ; <CR> } <CR> static Evaluation choice ( int r 4 ) { <CR> switch ( r 4 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>