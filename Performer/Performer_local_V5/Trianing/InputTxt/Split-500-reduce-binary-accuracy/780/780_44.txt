<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> Evaluation ( String d , String n 7 , double q 8 , double B 5 ) { <CR> this . sNumber = d ; <CR> this . sName = n 7 ; <CR> this . sGrade = q 8 ; <CR> this . sProportion = B 5 ; <CR> } <CR> protected double sProportion ; <CR> protected String sName ; <CR> protected String sNumber ; <CR> protected double sGrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String range ; <CR> protected String date ; <CR> public Exam ( String v 6 , String h 3 , double W 5 , double j 9 , String B 6 , String B 7 ) { <CR> super ( v 6 , h 3 , W 5 , j 9 ) ; <CR> this . date = B 6 ; <CR> this . range = B 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String deadline ; <CR> protected String description ; <CR> public Homework ( String w , String A 3 , double Q 7 , double B 9 , String y 5 , String s 6 ) { <CR> super ( w , A 3 , Q 7 , B 9 ) ; <CR> this . deadline = y 5 ; <CR> this . description = s 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String s 9 , String f 8 , double f 6 , double o 3 , String l 1 , String k 8 ) { <CR> super ( s 9 , f 8 , f 6 , o 3 ) ; <CR> this . content = l 1 ; <CR> this . references = k 8 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Evaluation choice ( int v 8 ) { <CR> switch ( v 8 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int v 8 = <NUM_INT> ; <CR> do { <CR> v 8 = keyboard . nextInt ( ) ; <CR> } <CR> while ( v 8 > <NUM_INT> || v 8 < <NUM_INT> ) ; <CR> return choice ( v 8 ) ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>