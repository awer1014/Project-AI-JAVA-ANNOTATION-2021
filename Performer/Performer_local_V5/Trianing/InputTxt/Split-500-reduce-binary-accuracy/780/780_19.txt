<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> Evaluation ( String s 4 , String J 2 , double D 9 , double X ) { <CR> this . sNumber = s 4 ; <CR> this . sName = J 2 ; <CR> this . sGrade = D 9 ; <CR> this . sProportion = X ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> protected double sProportion ; <CR> protected String sName ; <CR> protected String sNumber ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String k 9 , String b 4 , double D 8 , double L 3 , String W 2 , String U 1 ) { <CR> super ( k 9 , b 4 , D 8 , L 3 ) ; <CR> this . date = W 2 ; <CR> this . range = U 1 ; <CR> } <CR> protected String date ; <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String description ; <CR> protected String deadline ; <CR> public Homework ( String B 1 , String f 5 , double b 7 , double A 2 , String V 6 , String O 0 ) { <CR> super ( B 1 , f 5 , b 7 , A 2 ) ; <CR> this . deadline = V 6 ; <CR> this . description = O 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String i 6 , String C 9 , double y 5 , double Z 4 , String M 6 , String C 5 ) { <CR> super ( i 6 , C 9 , y 5 , Z 4 ) ; <CR> this . content = M 6 ; <CR> this . references = C 5 ; <CR> } <CR> protected String references ; <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int c 0 ) { <CR> switch ( c 0 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int c 0 = <NUM_INT> ; <CR> do { <CR> c 0 = keyboard . nextInt ( ) ; <CR> } <CR> while ( c 0 > <NUM_INT> || c 0 < <NUM_INT> ) ; <CR> return choice ( c 0 ) ; <CR> } <CR> } <CR> <EOC>