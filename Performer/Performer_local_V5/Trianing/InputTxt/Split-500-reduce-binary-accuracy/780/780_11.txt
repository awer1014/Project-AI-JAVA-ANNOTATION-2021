<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> protected double sGrade ; <CR> protected double sProportion ; <CR> protected String sName ; <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected String sNumber ; <CR> Evaluation ( String i 9 , String L 9 , double y 6 , double J 4 ) { <CR> this . sNumber = i 9 ; <CR> this . sName = L 9 ; <CR> this . sGrade = y 6 ; <CR> this . sProportion = J 4 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> protected String date ; <CR> protected String range ; <CR> public Exam ( String Q 7 , String j 4 , double U 9 , double R 3 , String r 6 , String N 7 ) { <CR> super ( Q 7 , j 4 , U 9 , R 3 ) ; <CR> this . date = r 6 ; <CR> this . range = N 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> protected String deadline ; <CR> public Homework ( String V 9 , String P 5 , double Y 9 , double L 4 , String X 8 , String M 1 ) { <CR> super ( V 9 , P 5 , Y 9 , L 4 ) ; <CR> this . deadline = X 8 ; <CR> this . description = M 1 ; <CR> } <CR> protected String description ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String references ; <CR> public Report ( String r 5 , String L 5 , double z 6 , double D 0 , String N 4 , String d 5 ) { <CR> super ( r 5 , L 5 , z 6 , D 0 ) ; <CR> this . content = N 4 ; <CR> this . references = d 5 ; <CR> } <CR> protected String content ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int e 9 = <NUM_INT> ; <CR> do { <CR> e 9 = keyboard . nextInt ( ) ; <CR> } <CR> while ( e 9 > <NUM_INT> || e 9 < <NUM_INT> ) ; <CR> return choice ( e 9 ) ; <CR> } <CR> static Evaluation choice ( int e 9 ) { <CR> switch ( e 9 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> } <CR> <EOC>