<BOC> import java . util . Scanner ; <CR> abstract public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + sNumber ) ; <CR> System . out . println ( <STRING> + sName ) ; <CR> System . out . println ( <STRING> + sGrade ) ; <CR> System . out . println ( <STRING> + sProportion ) ; <CR> } <CR> protected double sGrade ; <CR> Evaluation ( String W 5 , String Z 9 , double t 0 , double O 5 ) { <CR> this . sNumber = W 5 ; <CR> this . sName = Z 9 ; <CR> this . sGrade = t 0 ; <CR> this . sProportion = O 5 ; <CR> } <CR> protected String sNumber ; <CR> protected double sProportion ; <CR> protected String sName ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String s , String k , double Z 6 , double k 2 , String Q 8 , String e 3 ) { <CR> super ( s , k , Z 6 , k 2 ) ; <CR> this . date = Q 8 ; <CR> this . range = e 3 ; <CR> } <CR> protected String date ; <CR> protected String range ; <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String j , String l 7 , double E 1 , double S 4 , String g 5 , String Z 5 ) { <CR> super ( j , l 7 , E 1 , S 4 ) ; <CR> this . deadline = g 5 ; <CR> this . description = Z 5 ; <CR> } <CR> protected String description ; <CR> protected String deadline ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> protected String content ; <CR> public Report ( String a 0 , String Z 6 , double B 6 , double n 5 , String m 0 , String e 3 ) { <CR> super ( a 0 , Z 6 , B 6 , n 5 ) ; <CR> this . content = m 0 ; <CR> this . references = e 3 ; <CR> } <CR> protected String references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> static Evaluation choice ( int J 1 ) { <CR> switch ( J 1 ) { <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> case <NUM_INT> : <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> break ; <CR> } <CR> return ev ; <CR> } <CR> private static Evaluation choose ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> int J 1 = <NUM_INT> ; <CR> do { <CR> J 1 = keyboard . nextInt ( ) ; <CR> } <CR> while ( J 1 > <NUM_INT> || J 1 < <NUM_INT> ) ; <CR> return choice ( J 1 ) ; <CR> } <CR> } <CR> <EOC>