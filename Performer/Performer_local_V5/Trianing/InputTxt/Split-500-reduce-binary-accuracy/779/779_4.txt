<BOC> abstract public class Evaluation { <CR> public void display ( ) { <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + compete ) ; <CR> } <CR> public Evaluation ( String x 6 , String l 0 , double t 0 , double y 2 ) { <CR> this . num = x 6 ; <CR> this . name = l 0 ; <CR> this . score = t 0 ; <CR> this . compete = y 2 ; <CR> } <CR> double score , compete ; <CR> abstract public void play ( ) ; <CR> String num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void play ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> public Exam ( String i 9 , String t 9 , double h , double a 2 , String X , String F 6 ) { <CR> super ( i 9 , t 9 , h , a 2 ) ; <CR> this . date = X ; <CR> this . range = F 6 ; <CR> } <CR> String date , range ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void play ( ) { <CR> System . out . println ( <STRING> + off ) ; <CR> System . out . println ( <STRING> + scribe ) ; <CR> } <CR> String off , scribe ; <CR> public HomeWork ( String f 4 , String W 8 , double s 3 , double S 5 , String V , String w 1 ) { <CR> super ( f 4 , W 8 , s 3 , S 5 ) ; <CR> this . off = V ; <CR> this . scribe = w 1 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String U 6 , String e 0 , double b 7 , double J 0 , String t 4 , String Q 0 ) { <CR> super ( U 6 , e 0 , b 7 , J 0 ) ; <CR> this . content = t 4 ; <CR> this . references = Q 0 ; <CR> } <CR> public void play ( ) { <CR> System . out . println ( <STRING> + content ) ; <CR> System . out . println ( <STRING> + references ) ; <CR> } <CR> String content , references ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] C 8 ) { <CR> Scanner e 4 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> String N 6 = e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String u 7 = e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String S 6 = e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double M 2 = e 4 . nextDouble ( ) ; <CR> e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double l 8 = e 4 . nextDouble ( ) ; <CR> e 4 . nextLine ( ) ; <CR> Evaluation V 4 = <STRING> ; <CR> if ( N 6 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String Z 5 = e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String p 1 = e 4 . nextLine ( ) ; <CR> V 4 = new Exam ( u 7 , S 6 , M 2 , l 8 , Z 5 , p 1 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 4 . display ( ) ; <CR> V 4 . play ( ) ; <CR> } <CR> if ( N 6 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String s 9 = e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String t 7 = e 4 . nextLine ( ) ; <CR> V 4 = new HomeWork ( u 7 , S 6 , M 2 , l 8 , s 9 , t 7 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 4 . display ( ) ; <CR> V 4 . play ( ) ; <CR> } <CR> if ( N 6 . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> String g 6 = e 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String H 3 = e 4 . nextLine ( ) ; <CR> V 4 = new Report ( u 7 , S 6 , M 2 , l 8 , g 6 , H 3 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> V 4 . display ( ) ; <CR> V 4 . play ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>