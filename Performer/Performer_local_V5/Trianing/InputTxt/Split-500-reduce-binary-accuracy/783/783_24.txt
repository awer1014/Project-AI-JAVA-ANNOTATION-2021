<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public void print ( ) { <CR> } <CR> public Evaluation ( String p 4 , String w ) { <CR> day = p 4 ; <CR> cover = w ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String c 9 , String d 8 ) { <CR> super ( c 9 , d 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> public Homework ( String G 3 , String c ) { <CR> super ( G 3 , c ) ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Report ( String R 0 , String n 4 ) { <CR> super ( R 0 , n 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String r 3 , String J 1 , String U 4 , String g 6 , String N 1 ) { <CR> evaluation = r 3 ; <CR> stid = J 1 ; <CR> stname = U 4 ; <CR> stnumber = g 6 ; <CR> stnumberc = N 1 ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static Student st ; <CR> public static void main ( String [ ] g 3 ) { <CR> Scanner d 7 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = d 7 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String k 7 , K 6 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> k 7 = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 6 = d 7 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> k 7 = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 6 = d 7 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> k 7 = d 7 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 6 = d 7 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation M 9 = setEvaluation ( evaluation ) ; <CR> M 9 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String T 8 ) { <CR> Evaluation X 8 = <STRING> ; <CR> switch ( T 8 ) { <CR> case <STRING> : <CR> X 8 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> X 8 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> X 8 = new Report ( day , cover ) ; <CR> } <CR> return X 8 ; <CR> } <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> } <CR> <EOC>