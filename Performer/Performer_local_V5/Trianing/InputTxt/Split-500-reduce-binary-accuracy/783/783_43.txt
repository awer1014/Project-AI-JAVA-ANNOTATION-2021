<BOC> public class Evaluation { <CR> protected String day , cover ; <CR> public Evaluation ( String L 2 , String B 4 ) { <CR> day = L 2 ; <CR> cover = B 4 ; <CR> } <CR> public void print ( ) { <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Exam ( String G 3 , String X 0 ) { <CR> super ( G 3 , X 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Homework extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Homework ( String G 1 , String d 2 ) { <CR> super ( G 1 , d 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> + day ) ; <CR> System . out . println ( <STRING> + cover ) ; <CR> } <CR> public Report ( String D 6 , String M 3 ) { <CR> super ( D 6 , M 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> Student ( String x 2 , String t 1 , String F 8 , String X 5 , String v 5 ) { <CR> evaluation = x 2 ; <CR> stid = t 1 ; <CR> stname = F 8 ; <CR> stnumber = X 5 ; <CR> stnumberc = v 5 ; <CR> } <CR> void print ( ) { <CR> System . out . println ( <STRING> + evaluation ) ; <CR> System . out . println ( <STRING> + stid ) ; <CR> System . out . println ( <STRING> + stname ) ; <CR> System . out . println ( <STRING> + stnumber ) ; <CR> System . out . println ( <STRING> + stnumberc ) ; <CR> } <CR> private String evaluation , stid , stname , stnumber , stnumberc ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> public static void main ( String [ ] w 2 ) { <CR> Scanner p 9 = new Scanner ( System . in ) ; <CR> System . out . print ( <STRING> ) ; <CR> evaluation = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stid = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stname = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumber = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> stnumberc = p 9 . nextLine ( ) ; <CR> st = new Student ( evaluation , stid , stname , stnumber , stnumberc ) ; <CR> while ( <STRING> ) { <CR> String o 0 , l 8 ; <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> o 0 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 8 = p 9 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> o 0 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 8 = p 9 . nextLine ( ) ; <CR> } <CR> if ( evaluation . equals ( <STRING> ) ) { <CR> System . out . print ( <STRING> ) ; <CR> o 0 = p 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> l 8 = p 9 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation a 8 = setEvaluation ( evaluation ) ; <CR> a 8 . print ( ) ; <CR> } <CR> static Evaluation setEvaluation ( String Y ) { <CR> Evaluation I 5 = <STRING> ; <CR> switch ( Y ) { <CR> case <STRING> : <CR> I 5 = new Exam ( day , cover ) ; <CR> case <STRING> : <CR> I 5 = new Homework ( day , cover ) ; <CR> case <STRING> : <CR> I 5 = new Report ( day , cover ) ; <CR> } <CR> return I 5 ; <CR> } <CR> static Student st ; <CR> static String evaluation , stid , stname , stnumber , stnumberc , day , cover ; <CR> } <CR> <EOC>