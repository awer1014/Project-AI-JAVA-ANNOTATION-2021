<BOC> abstract public class Evaluation { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> public Evaluation ( String Q 3 , String p 2 , String M 6 , double R 6 , double u 6 ) { <CR> sid = Q 3 ; <CR> name = p 2 ; <CR> type = M 6 ; <CR> this . grade = R 6 ; <CR> this . gradepc = u 6 ; <CR> } <CR> private String sid , name , type ; <CR> abstract public void printa ( ) ; <CR> protected double grade , gradepc ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String U 1 , String Q 3 , String b , double S 6 , double L 1 ) { <CR> super ( U 1 , Q 3 , b , S 6 , L 1 ) ; <CR> } <CR> String date ; <CR> String range ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] Q ) { <CR> Scanner I 7 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int A 3 = <NUM_INT> ; <CR> do { <CR> A 3 = I 7 . nextInt ( ) ; <CR> } <CR> while ( A 3 > <NUM_INT> || A 3 < <NUM_INT> ) ; <CR> return mapEvaluation ( A 3 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int A 3 ) { <CR> Evaluation E 1 = <STRING> ; <CR> switch ( A 3 ) { <CR> case <NUM_INT> : <CR> E 1 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>