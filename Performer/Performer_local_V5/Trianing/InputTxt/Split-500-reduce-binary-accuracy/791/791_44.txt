<BOC> abstract public class Evaluation { <CR> public Evaluation ( String H 8 , String x 6 , String v 1 , double f 0 , double u 4 ) { <CR> sid = H 8 ; <CR> name = x 6 ; <CR> type = v 1 ; <CR> this . grade = f 0 ; <CR> this . gradepc = u 4 ; <CR> } <CR> protected double grade , gradepc ; <CR> abstract public void printa ( ) ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> private String sid , name , type ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> public Exam ( String r 6 , String m 4 , String c 6 , double Q 5 , double y 0 ) { <CR> super ( r 6 , m 4 , c 6 , Q 5 , y 0 ) ; <CR> } <CR> String date ; <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] a 7 ) { <CR> Scanner g 6 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int b 9 = <NUM_INT> ; <CR> do { <CR> b 9 = g 6 . nextInt ( ) ; <CR> } <CR> while ( b 9 > <NUM_INT> || b 9 < <NUM_INT> ) ; <CR> return mapEvaluation ( b 9 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int b 9 ) { <CR> Evaluation x 3 = <STRING> ; <CR> switch ( b 9 ) { <CR> case <NUM_INT> : <CR> x 3 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>