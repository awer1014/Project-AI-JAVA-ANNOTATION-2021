<BOC> abstract public class Evaluation { <CR> protected double grade , gradepc ; <CR> private String sid , name , type ; <CR> public Evaluation ( String c 7 , String r 8 , String u 9 , double p 5 , double V 6 ) { <CR> sid = c 7 ; <CR> name = r 8 ; <CR> type = u 9 ; <CR> this . grade = p 5 ; <CR> this . gradepc = V 6 ; <CR> } <CR> abstract public void printa ( ) ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + sid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + gradepc ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> String range ; <CR> String date ; <CR> public Exam ( String M 5 , String X 4 , String O 6 , double P 0 , double n 1 ) { <CR> super ( M 5 , X 4 , O 6 , P 0 , n 1 ) ; <CR> } <CR> public void printa ( ) { <CR> System . out . println ( <STRING> + date ) ; <CR> System . out . println ( <STRING> + range ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] I 1 ) { <CR> Scanner k 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> int Q 8 = <NUM_INT> ; <CR> do { <CR> Q 8 = k 0 . nextInt ( ) ; <CR> } <CR> while ( Q 8 > <NUM_INT> || Q 8 < <NUM_INT> ) ; <CR> return mapEvaluation ( Q 8 ) ; <CR> } <CR> static Evaluation mapEvaluation ( int Q 8 ) { <CR> Evaluation L 1 = <STRING> ; <CR> switch ( Q 8 ) { <CR> case <NUM_INT> : <CR> L 1 = new Exam ( <STRING> ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>