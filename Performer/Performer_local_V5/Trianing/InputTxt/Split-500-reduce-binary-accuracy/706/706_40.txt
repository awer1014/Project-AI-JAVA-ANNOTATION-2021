<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void Keeper ( String j , String G 1 ) { <CR> this . id = j ; <CR> this . tel = G 1 ; <CR> } <CR> String id ; <CR> public static void main ( String [ ] G 2 ) { <CR> String j ; <CR> String G 1 ; <CR> Scanner h 5 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> j = h 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> G 1 = h 5 . nextLine ( ) ; <CR> Keeper Z 4 = new Keeper ( j , G 1 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String tel ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> String pid ; <CR> String name ; <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> public static void main ( String [ ] v 2 ) { <CR> String D 2 ; <CR> String m 0 ; <CR> String N 5 ; <CR> String c 4 ; <CR> String U 4 ; <CR> Scanner O 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> c 4 = O 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 4 = O 4 . nextLine ( ) ; <CR> Keeper V = new Keeper ( c 4 , U 4 ) ; <CR> Scanner O 4 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 2 = O 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 5 = O 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 0 = O 4 . nextLine ( ) ; <CR> pet u 1 = new pet ( D 2 , m 0 , N 5 , V ) ; <CR> String x 5 = u 1 . Speak ( ) ; <CR> System . out . println ( <STRING> + x 5 ) ; <CR> } <CR> static int count ; <CR> void Pet ( String D 2 , String m 0 , String N 5 , Keeper g 8 ) { <CR> count ++ ; <CR> this . pid = D 2 ; <CR> this . name = m 0 ; <CR> this . type = N 5 ; <CR> this . keeper = g 8 ; <CR> } <CR> String type ; <CR> Keeper keeper ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> } <CR> <EOC>