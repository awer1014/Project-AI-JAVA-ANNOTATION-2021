<BOC> import java . util . Scanner ; <CR> public class Keeper { <CR> void display ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> String id ; <CR> public static void main ( String [ ] A 7 ) { <CR> String k ; <CR> String n 4 ; <CR> Scanner K 0 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> k = K 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> n 4 = K 0 . nextLine ( ) ; <CR> Keeper b 3 = new Keeper ( k , n 4 ) ; <CR> } <CR> String tel ; <CR> void Keeper ( String k , String n 4 ) { <CR> this . id = k ; <CR> this . tel = n 4 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class pet { <CR> public static void main ( String [ ] T 1 ) { <CR> String D 7 ; <CR> String v 5 ; <CR> String m 1 ; <CR> String a 5 ; <CR> String M ; <CR> Scanner Y 2 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> a 5 = Y 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> M = Y 2 . nextLine ( ) ; <CR> Keeper V 3 = new Keeper ( a 5 , M ) ; <CR> Scanner Y 2 = new Scanner ( System . in ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 7 = Y 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> m 1 = Y 2 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 5 = Y 2 . nextLine ( ) ; <CR> pet O 2 = new pet ( D 7 , v 5 , m 1 , V 3 ) ; <CR> String x 2 = O 2 . Speak ( ) ; <CR> System . out . println ( <STRING> + x 2 ) ; <CR> } <CR> String name ; <CR> String pid ; <CR> static int count ; <CR> Keeper keeper ; <CR> String Speak ( ) { <CR> if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> else if ( pid . equals ( <STRING> ) ) { <CR> return <STRING> ; <CR> } <CR> } <CR> String type ; <CR> void Pet ( String D 7 , String v 5 , String m 1 , Keeper b 9 ) { <CR> count ++ ; <CR> this . pid = D 7 ; <CR> this . name = v 5 ; <CR> this . type = m 1 ; <CR> this . keeper = b 9 ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> keeper . display ( ) ; <CR> } <CR> } <CR> <EOC>