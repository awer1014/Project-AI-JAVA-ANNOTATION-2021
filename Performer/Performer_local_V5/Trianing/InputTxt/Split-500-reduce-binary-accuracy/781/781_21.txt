<BOC> abstract public class Evaluation { <CR> public Evaluation ( String x 7 ) { <CR> kind = x 7 ; <CR> } <CR> public void print ( ) { <CR> String j 9 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> j 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> j 9 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> j 9 += <STRING> ; <CR> System . out . println ( <STRING> + j 9 ) ; <CR> } <CR> abstract public void ask ( ) ; <CR> private String kind ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String o 2 , String N ) { <CR> super ( o 2 , N ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String t 1 , String u 6 ) { <CR> super ( t 1 , u 6 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String g 6 , String d 7 ) { <CR> super ( g 6 , d 7 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String U 2 , String H 2 , String G 8 , String D 0 ) { <CR> id = U 2 ; <CR> name = H 2 ; <CR> score = G 8 ; <CR> prop = D 0 ; <CR> } <CR> private String id , name , score , prop ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] i 4 ) { <CR> Scanner e 5 = new Scanner ( System . in ) ; <CR> boolean C 3 = <STRING> ; <CR> while ( C 3 ) { <CR> System . out . println ( <STRING> ) ; <CR> String K 6 = e 5 . nextLine ( ) ; <CR> if ( K 6 . equals ( <STRING> ) ) { <CR> C 3 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String r 2 = e 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String a 9 = e 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String u 4 = e 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String a 5 = e 5 . nextLine ( ) ; <CR> Student W 0 = new Student ( r 2 , a 9 , u 4 , a 5 ) ; <CR> Evaluation b 6 = new Evaluation ( K 6 ) ; <CR> Evaluation K = <STRING> ; <CR> String D 0 , A 8 ; <CR> if ( K 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 0 = e 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 8 = e 5 . nextLine ( ) ; <CR> K = new Exam ( D 0 , A 8 ) ; <CR> } <CR> else if ( K 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 0 = e 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 8 = e 5 . nextLine ( ) ; <CR> K = new HomeWork ( D 0 , A 8 ) ; <CR> } <CR> else if ( K 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> D 0 = e 5 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 8 = e 5 . nextLine ( ) ; <CR> K = new Report ( D 0 , A 8 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( K ! = <STRING> ) { <CR> b 6 . print ( ) ; <CR> W 0 . print ( ) ; <CR> K . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>