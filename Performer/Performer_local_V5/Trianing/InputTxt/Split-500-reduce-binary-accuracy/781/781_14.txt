<BOC> abstract public class Evaluation { <CR> private String kind ; <CR> abstract public void ask ( ) ; <CR> public void print ( ) { <CR> String L 5 = <STRING> ; <CR> if ( kind . equals ( <STRING> ) ) <CR> L 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> L 5 += <STRING> ; <CR> else if ( kind . equals ( <STRING> ) ) <CR> L 5 += <STRING> ; <CR> System . out . println ( <STRING> + L 5 ) ; <CR> } <CR> public Evaluation ( String v 8 ) { <CR> kind = v 8 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public Exam ( String w 5 , String U 4 ) { <CR> super ( w 5 , U 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> public HomeWork ( String Y 7 , String b 2 ) { <CR> super ( Y 7 , b 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String B 0 , String J 9 ) { <CR> super ( B 0 , J 9 ) ; <CR> } <CR> public void ask ( ) { <CR> System . out . println ( <STRING> + ask 1 ) ; <CR> System . out . println ( <STRING> + ask 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Student { <CR> private String id , name , score , prop ; <CR> public void print ( ) { <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + prop ) ; <CR> } <CR> public Student ( String c 6 , String y 8 , String U 1 , String A 7 ) { <CR> id = c 6 ; <CR> name = y 8 ; <CR> score = U 1 ; <CR> prop = A 7 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] R 5 ) { <CR> Scanner R 4 = new Scanner ( System . in ) ; <CR> boolean l 6 = <STRING> ; <CR> while ( l 6 ) { <CR> System . out . println ( <STRING> ) ; <CR> String z 4 = R 4 . nextLine ( ) ; <CR> if ( z 4 . equals ( <STRING> ) ) { <CR> l 6 = <STRING> ; <CR> break ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> String k 3 = R 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String k 8 = R 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String G 0 = R 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String Z 5 = R 4 . nextLine ( ) ; <CR> Student e 4 = new Student ( k 3 , k 8 , G 0 , Z 5 ) ; <CR> Evaluation T 7 = new Evaluation ( z 4 ) ; <CR> Evaluation y 3 = <STRING> ; <CR> String Z 3 , N 2 ; <CR> if ( z 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Z 3 = R 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 2 = R 4 . nextLine ( ) ; <CR> y 3 = new Exam ( Z 3 , N 2 ) ; <CR> } <CR> else if ( z 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Z 3 = R 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 2 = R 4 . nextLine ( ) ; <CR> y 3 = new HomeWork ( Z 3 , N 2 ) ; <CR> } <CR> else if ( z 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Z 3 = R 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> N 2 = R 4 . nextLine ( ) ; <CR> y 3 = new Report ( Z 3 , N 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> if ( y 3 ! = <STRING> ) { <CR> T 7 . print ( ) ; <CR> e 4 . print ( ) ; <CR> y 3 . ask ( ) ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>