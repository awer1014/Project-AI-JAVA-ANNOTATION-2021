<BOC> public class ChineseLetter extends Evaluation { <CR> public ChineseLetter ( String T 9 , String J 9 , String s 1 , String E 6 , String J 2 ) { <CR> super ( T 9 , J 9 , s 1 , E 6 , J 2 ) ; <CR> } <CR> public void Display ( ) { <CR> System . out . println ( getReceiver ( ) + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( getSender ( ) + <STRING> ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Evaluation { <CR> public void Display ( ) { <CR> System . out . println ( <STRING> + title + <STRING> + getReceiver ( ) + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( getSender ( ) ) ; <CR> System . out . println ( getDate ( ) ) ; <CR> } <CR> public EnglishLetter ( String J 8 , String s 0 , String Z 3 , String h 4 , String N 2 ) { <CR> super ( J 8 , s 0 , Z 3 , h 4 , N 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Envelop { <CR> public static void main ( String [ ] C 0 ) { <CR> Evaluation x 7 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Envelop E 5 = new Envelop ( <STRING> , <STRING> , x 7 ) ; <CR> E 5 . display ( ) ; <CR> } <CR> String senderAddr , receiverAddr ; <CR> Evaluation letter ; <CR> public Envelop ( String h 0 , String P , Evaluation n ) { <CR> this . senderAddr = h 0 ; <CR> this . receiverAddr = P ; <CR> this . letter = n ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + senderAddr ) ; <CR> System . out . println ( <STRING> + receiverAddr ) ; <CR> letter . Display ( ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Evaluation { <CR> public String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> abstract protected void Display ( ) ; <CR> public String getSender ( ) { <CR> return sender ; <CR> } <CR> public String getDate ( ) { <CR> return date ; <CR> } <CR> protected String title , receiver , content , sender , date ; <CR> public Evaluation ( String S 2 , String E 9 , String S 3 , String T 7 , String a 6 ) { <CR> this . title = S 2 ; <CR> this . receiver = E 9 ; <CR> this . content = S 3 ; <CR> this . sender = T 7 ; <CR> this . date = a 6 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Letter implements Comparable { <CR> public static void main ( String [ ] Z 3 ) { <CR> int y 1 ; <CR> for ( y 1 = list . length - <NUM_INT> ; y 1 > = <NUM_INT> ; y 1 -- ) { <CR> int y 4 = y 1 ; <CR> Letter U 0 = new Letter ( y 1 ) ; <CR> Letter R 0 = new Letter ( y 4 - <NUM_INT> ) ; <CR> if ( U 0 . compareTo ( R 0 ) == <NUM_INT> ) <CR> U 0 . display ( y 1 ) ; <CR> } <CR> } <CR> public int compareTo ( Object C 4 ) { <CR> Letter f 9 = ( Letter ) C 4 ; <CR> if ( this . x > f 9 . x ) <CR> return <NUM_INT> ; <CR> else <CR> return - <NUM_INT> ; <CR> } <CR> public void display ( int y 1 ) { <CR> list [ y 1 ] . Display ( ) ; <CR> } <CR> Letter ( int N 2 ) { <CR> this . x = N 2 ; <CR> } <CR> private int x ; <CR> public static Evaluation [ ] list = { new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) , new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) } ; <CR> } <CR> <EOC>