<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String j 1 , String O 8 , String o 4 , String K 1 , String N 0 ) { <CR> super ( j 1 , O 8 , o 4 , K 1 , N 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String U 5 , String K 5 , String K , String l , String e 9 ) { <CR> super ( U 5 , K 5 , K , l , e 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> Letter ( String X 7 , String M 2 , String O 0 , String K 2 , String x 9 ) { <CR> this . title = X 7 ; <CR> this . receiver = M 2 ; <CR> this . content = O 0 ; <CR> this . sender = K 2 ; <CR> this . date = x 9 ; <CR> } <CR> public int compareTo ( Object c 7 ) { <CR> Letter S 3 = ( Letter ) c 7 ; <CR> if ( this . getDate ( ) . compareTo ( S 3 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( S 3 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] I 8 ) { <CR> Letter e 6 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter T 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter x 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList w 8 = { e 6 , T 8 , x 4 } ; <CR> for ( Letter E 7 : w 8 ) <CR> E 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>