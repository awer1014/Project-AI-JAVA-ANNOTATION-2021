<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String G , String B 7 , String G 7 , String S 6 , String F 3 ) { <CR> super ( G , B 7 , G 7 , S 6 , F 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String N 3 , String z , String d 1 , String I 1 , String p 4 ) { <CR> super ( N 3 , z , d 1 , I 1 , p 4 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String title , receiver , content , sender , date ; <CR> Letter ( String F 0 , String i 0 , String K 3 , String E , String b 7 ) { <CR> this . title = F 0 ; <CR> this . receiver = i 0 ; <CR> this . content = K 3 ; <CR> this . sender = E ; <CR> this . date = b 7 ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object Y 4 ) { <CR> Letter M 3 = ( Letter ) Y 4 ; <CR> if ( this . getDate ( ) . compareTo ( M 3 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( M 3 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] W ) { <CR> Letter L 2 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter r 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter h 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList C 4 = { L 2 , r 4 , h 9 } ; <CR> for ( Letter X 6 : C 4 ) <CR> X 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>