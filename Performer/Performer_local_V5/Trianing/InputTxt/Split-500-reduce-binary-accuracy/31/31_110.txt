<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String w 3 , String Y 8 , String T 8 , String Q , String u 2 ) { <CR> super ( w 3 , Y 8 , T 8 , Q , u 2 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String Z 3 , String f 0 , String T 8 , String F 9 , String l 0 ) { <CR> super ( Z 3 , f 0 , T 8 , F 9 , l 0 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object q ) { <CR> Letter q 4 = ( Letter ) q ; <CR> if ( this . getDate ( ) . compareTo ( q 4 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( q 4 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> Letter ( String z 3 , String z 8 , String D , String c 2 , String x 7 ) { <CR> this . title = z 3 ; <CR> this . receiver = z 8 ; <CR> this . content = D ; <CR> this . sender = c 2 ; <CR> this . date = x 7 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] C 5 ) { <CR> Letter A 5 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter D 4 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter N 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList E 9 = { A 5 , D 4 , N 5 } ; <CR> for ( Letter b 0 : E 9 ) <CR> b 0 . display ( ) ; <CR> } <CR> } <CR> <EOC>