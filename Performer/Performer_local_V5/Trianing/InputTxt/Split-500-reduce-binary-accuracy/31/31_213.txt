<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String N 3 , String A 2 , String T , String J 4 , String O ) { <CR> super ( N 3 , A 2 , T , J 4 , O ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String S 0 , String C 8 , String d 3 , String O 3 , String Y 9 ) { <CR> super ( S 0 , C 8 , d 3 , O 3 , Y 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object O 6 ) { <CR> Letter M 9 = ( Letter ) O 6 ; <CR> if ( this . getDate ( ) . compareTo ( M 9 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( M 9 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> Letter ( String x 0 , String l 0 , String f 0 , String T 0 , String Z 0 ) { <CR> this . title = x 0 ; <CR> this . receiver = l 0 ; <CR> this . content = f 0 ; <CR> this . sender = T 0 ; <CR> this . date = Z 0 ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] M 2 ) { <CR> Letter m 0 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter s 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter L 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList F 7 = { m 0 , s 7 , L 8 } ; <CR> for ( Letter d 0 : F 7 ) <CR> d 0 . display ( ) ; <CR> } <CR> } <CR> <EOC>