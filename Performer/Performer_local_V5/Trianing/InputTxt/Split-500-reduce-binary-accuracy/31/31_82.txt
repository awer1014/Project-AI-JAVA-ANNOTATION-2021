<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String H 4 , String P 7 , String o 9 , String o 4 , String C 9 ) { <CR> super ( H 4 , P 7 , o 9 , o 4 , C 9 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String F 5 , String H 9 , String w 2 , String N 4 , String f 0 ) { <CR> super ( F 5 , H 9 , w 2 , N 4 , f 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object u 4 ) { <CR> Letter I 7 = ( Letter ) u 4 ; <CR> if ( this . getDate ( ) . compareTo ( I 7 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( I 7 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> Letter ( String Z , String s 1 , String V 4 , String R , String P 0 ) { <CR> this . title = Z ; <CR> this . receiver = s 1 ; <CR> this . content = V 4 ; <CR> this . sender = R ; <CR> this . date = P 0 ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] T 0 ) { <CR> Letter P 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter N 7 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter K 6 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList B 7 = { P 3 , N 7 , K 6 } ; <CR> for ( Letter z 4 : B 7 ) <CR> z 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>