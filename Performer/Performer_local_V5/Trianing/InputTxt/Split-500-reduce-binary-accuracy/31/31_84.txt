<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String S 3 , String t 8 , String G 0 , String w 5 , String F 7 ) { <CR> super ( S 3 , t 8 , G 0 , w 5 , F 7 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String m 1 , String z 3 , String x 7 , String S 2 , String i 5 ) { <CR> super ( m 1 , z 3 , x 7 , S 2 , i 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> public int compareTo ( Object m ) { <CR> Letter F 7 = ( Letter ) m ; <CR> if ( this . getDate ( ) . compareTo ( F 7 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( F 7 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> Letter ( String X 9 , String Q 1 , String O 9 , String J 5 , String e 6 ) { <CR> this . title = X 9 ; <CR> this . receiver = Q 1 ; <CR> this . content = O 9 ; <CR> this . sender = J 5 ; <CR> this . date = e 6 ; <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] C 0 ) { <CR> Letter t 3 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w 8 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter O 5 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList k 1 = { t 3 , w 8 , O 5 } ; <CR> for ( Letter d 4 : k 1 ) <CR> d 4 . display ( ) ; <CR> } <CR> } <CR> <EOC>