<BOC> public class ChineseLetter extends Letter { <CR> ChineseLetter ( String W 5 , String I 2 , String R 8 , String s 0 , String g 2 ) { <CR> super ( W 5 , I 2 , R 8 , s 0 , g 2 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> EnglishLetter ( String y , String m 4 , String o 3 , String P 5 , String J 2 ) { <CR> super ( y , m 4 , o 3 , P 5 , J 2 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> public int compareTo ( Object j 7 ) { <CR> Letter x 8 = ( Letter ) j 7 ; <CR> if ( this . getDate ( ) . compareTo ( x 8 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( x 8 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> Letter ( String w 8 , String b , String x 9 , String G 6 , String x 1 ) { <CR> this . title = w 8 ; <CR> this . receiver = b ; <CR> this . content = x 9 ; <CR> this . sender = G 6 ; <CR> this . date = x 1 ; <CR> } <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> abstract void display ( ) ; <CR> String title , receiver , content , sender , date ; <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] Z 0 ) { <CR> Letter J 9 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter q 0 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter w = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList A 4 = { J 9 , q 0 , w } ; <CR> for ( Letter Z 7 : A 4 ) <CR> Z 7 . display ( ) ; <CR> } <CR> } <CR> <EOC>