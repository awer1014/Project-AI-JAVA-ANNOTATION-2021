<BOC> public class ChineseLetter extends Letter { <CR> void display ( ) { <CR> System . out . println ( receiver + <STRING> + title + <STRING> ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( sender + <STRING> ) ; <CR> System . out . println ( date ) ; <CR> } <CR> ChineseLetter ( String o 2 , String y 8 , String i 7 , String C 6 , String B ) { <CR> super ( o 2 , y 8 , i 7 , C 6 , B ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class EnglishLetter extends Letter { <CR> EnglishLetter ( String u 9 , String p 7 , String m 4 , String c 1 , String p 6 ) { <CR> super ( u 9 , p 7 , m 4 , c 1 , p 6 ) ; <CR> } <CR> void display ( ) { <CR> System . out . println ( <STRING> + receiver + <STRING> + title ) ; <CR> System . out . println ( content ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( sender ) ; <CR> System . out . println ( date ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Letter implements Comparable { <CR> String getReceiver ( ) { <CR> return receiver ; <CR> } <CR> String title , receiver , content , sender , date ; <CR> public int compareTo ( Object o ) { <CR> Letter T 3 = ( Letter ) o ; <CR> if ( this . getDate ( ) . compareTo ( T 3 . getDate ( ) ) < <NUM_INT> ) { <CR> return <NUM_INT> ; <CR> } <CR> else if ( this . getDate ( ) . compareTo ( T 3 . getDate ( ) ) > <NUM_INT> ) { <CR> return - <NUM_INT> ; <CR> } <CR> else { <CR> return <NUM_INT> ; <CR> } <CR> } <CR> abstract void display ( ) ; <CR> String getSender ( ) { <CR> return sender ; <CR> } <CR> Letter ( String H 6 , String y 5 , String F 9 , String T , String j 0 ) { <CR> this . title = H 6 ; <CR> this . receiver = y 5 ; <CR> this . content = F 9 ; <CR> this . sender = T ; <CR> this . date = j 0 ; <CR> } <CR> String getDate ( ) { <CR> return date ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class Test { <CR> public static void main ( String [ ] g 6 ) { <CR> Letter S 1 = new ChineseLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter J 9 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> Letter K 3 = new EnglishLetter ( <STRING> , <STRING> , <STRING> , <STRING> , <STRING> ) ; <CR> ArrayList V 2 = { S 1 , J 9 , K 3 } ; <CR> for ( Letter x 6 : V 2 ) <CR> x 6 . display ( ) ; <CR> } <CR> } <CR> <EOC>