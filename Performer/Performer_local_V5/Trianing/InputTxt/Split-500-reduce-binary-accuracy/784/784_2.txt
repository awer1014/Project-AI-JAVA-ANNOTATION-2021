<BOC> import java . util . Scanner ; <CR> public class Evaluation { <CR> double grade , level ; <CR> public void gradePrint ( ) { <CR> System . out . println ( grade ) ; <CR> } <CR> public void levelPrint ( ) { <CR> System . out . println ( level ) ; <CR> } <CR> public Evaluation ( String b 3 , String r 7 , double c 7 , double S 8 ) { <CR> this . num = b 3 ; <CR> this . name = r 7 ; <CR> this . grade = c 7 ; <CR> this . level = S 8 ; <CR> } <CR> public void numPrint ( ) { <CR> System . out . println ( num ) ; <CR> } <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> String num , name ; <CR> public void namePrint ( ) { <CR> System . out . println ( name ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String O 8 , String d 1 , double j 5 , double u 4 , String v 3 , String z 3 ) { <CR> super ( O 8 , d 1 , j 5 , u 4 ) ; <CR> this . data = v 3 ; <CR> this . b = z 3 ; <CR> } <CR> String data , b ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> String data , a ; <CR> public HomeWork ( String C 9 , String T , double p 9 , double B 5 , String e 0 , String F 9 ) { <CR> super ( C 9 , T , p 9 , B 5 ) ; <CR> this . data = e 0 ; <CR> this . a = F 9 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String e 8 , String Q 4 , double w 7 , double l 7 , String l 8 , String O 9 ) { <CR> super ( e 8 , Q 4 , w 7 , l 7 ) ; <CR> this . file = l 8 ; <CR> this . f = O 9 ; <CR> } <CR> String file , f ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test { <CR> static double grade , level ; <CR> static Scanner cin = new Scanner ( System . in ) ; <CR> static String num , name , eat ; <CR> public static void main ( String [ ] T 5 ) { <CR> int g 7 ; <CR> System . out . print ( <STRING> ) ; <CR> g 7 = cin . nextInt ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> num = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> name = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> grade = cin . nextFloat ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> level = cin . nextFloat ( ) ; <CR> eat = cin . nextLine ( ) ; <CR> switch ( g 7 ) { <CR> case <NUM_INT> : <CR> String c 2 , U ; <CR> System . out . print ( <STRING> ) ; <CR> c 2 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> U = cin . nextLine ( ) ; <CR> Exam C 9 = new Exam ( num , name , grade , level , c 2 , U ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 9 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 9 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 9 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> C 9 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + C 9 . c 2 ) ; <CR> System . out . println ( <STRING> + C 9 . U ) ; <CR> break ; <CR> case <NUM_INT> : <CR> String m 9 ; <CR> System . out . print ( <STRING> ) ; <CR> c 2 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m 9 = cin . nextLine ( ) ; <CR> HomeWork g 2 = new HomeWork ( num , name , grade , level , c 2 , m 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 2 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 2 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 2 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> g 2 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + g 2 . c 2 ) ; <CR> System . out . println ( <STRING> + g 2 . m 9 ) ; <CR> break ; <CR> case <NUM_INT> : <CR> String c 3 , a 8 ; <CR> System . out . print ( <STRING> ) ; <CR> c 3 = cin . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 8 = cin . nextLine ( ) ; <CR> Report D 3 = new Report ( num , name , grade , level , c 3 , a 8 ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 3 . numPrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 3 . namePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 3 . gradePrint ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> D 3 . levelPrint ( ) ; <CR> System . out . println ( <STRING> + D 3 . c 3 ) ; <CR> System . out . println ( <STRING> + D 3 . a 8 ) ; <CR> break ; <CR> } <CR> } <CR> } <CR> <EOC>