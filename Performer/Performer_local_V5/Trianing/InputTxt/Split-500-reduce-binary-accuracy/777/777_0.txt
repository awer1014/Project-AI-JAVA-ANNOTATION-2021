<BOC> abstract public class Evaluation { <CR> abstract public void B ( ) ; <CR> public Evaluation ( String Z 2 , String i 9 , double i 7 , double d 1 , String d 5 ) { <CR> this . id = Z 2 ; <CR> this . name = i 9 ; <CR> this . g = i 7 ; <CR> this . w = d 1 ; <CR> this . type = d 5 ; <CR> } <CR> protected double w ; <CR> protected String type ; <CR> abstract public void Dis ( String l 2 , String w 6 ) ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + g ) ; <CR> System . out . println ( <STRING> + w ) ; <CR> } <CR> protected String name ; <CR> protected double g ; <CR> abstract public void A ( ) ; <CR> protected String id ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String I 6 , String R 7 , double u 7 , double b 8 , String Y 5 ) { <CR> super ( I 6 , R 7 , u 7 , b 8 , Y 5 ) ; <CR> } <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String U 4 , String Y 3 ) { <CR> System . out . println ( <STRING> + U 4 ) ; <CR> System . out . println ( <STRING> + Y 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String h 1 , String W 3 ) { <CR> System . out . println ( <STRING> + h 1 ) ; <CR> System . out . println ( <STRING> + W 3 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String W 4 , String v 1 , double w 5 , double w 1 , String k 5 ) { <CR> super ( W 4 , v 1 , w 5 , w 1 , k 5 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public void A ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public void Dis ( String E 3 , String F 1 ) { <CR> System . out . println ( <STRING> + E 3 ) ; <CR> System . out . println ( <STRING> + F 1 ) ; <CR> } <CR> public void B ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String N 2 , String n 8 , double b 2 , double F 2 , String v 6 ) { <CR> super ( N 2 , n 8 , b 2 , F 2 , v 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] q 1 ) { <CR> Scanner K 1 = new Scanner ( System . in ) ; <CR> boolean c = <STRING> ; <CR> while ( c ) { <CR> System . out . print ( <STRING> ) ; <CR> String D 5 = K 1 . nextLine ( ) ; <CR> if ( D 5 . equals ( <STRING> ) ) { <CR> c = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String x 9 = K 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String i 5 = K 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double Q 1 = K 1 . nextDouble ( ) ; <CR> String Z 5 = K 1 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> double h 4 = K 1 . nextDouble ( ) ; <CR> Z 5 = K 1 . nextLine ( ) ; <CR> Evaluation s 0 ; <CR> if ( D 5 . equals ( <STRING> ) ) <CR> s 0 = new Exam ( x 9 , i 5 , Q 1 , h 4 , D 5 ) ; <CR> else if ( D 5 . equals ( <STRING> ) ) <CR> s 0 = new HomeWork ( x 9 , i 5 , Q 1 , h 4 , D 5 ) ; <CR> else <CR> s 0 = new Report ( x 9 , i 5 , Q 1 , h 4 , D 5 ) ; <CR> s 0 . A ( ) ; <CR> String H 3 = K 1 . nextLine ( ) ; <CR> s 0 . B ( ) ; <CR> String H 7 = K 1 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> s 0 . display ( ) ; <CR> s 0 . Dis ( H 3 , H 7 ) ; <CR> System . out . print ( <STRING> ) ; <CR> Z 5 = K 1 . nextLine ( ) ; <CR> } <CR> } <CR> } <CR> <EOC>