<BOC> public class Keeper { <CR> public Keeper ( String Q 6 , String f 7 , String l 8 ) { <CR> id = f 7 ; <CR> tel = l 8 ; <CR> name = Q 6 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> private String id , tel , name ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> public void speak ( ) { <CR> System . out . print ( <STRING> ) ; <CR> if ( name == <STRING> ) <CR> System . out . println ( <STRING> ) ; <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Pet ( String O , String V 2 , String U 0 , Keeper U 3 ) { <CR> pid = O ; <CR> name = V 2 ; <CR> type = U 0 ; <CR> count ++ ; <CR> keeper = U 3 ; <CR> } <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> private String pid , name , type ; <CR> private Keeper keeper ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + pid ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> } <CR> private static int count ; <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] i 6 ) { <CR> Scanner R 8 = new Scanner ( System . in ) ; <CR> boolean V 0 = <STRING> ; <CR> while ( V 0 ) { <CR> System . out . print ( <STRING> ) ; <CR> String h 3 = R 8 . nextLine ( ) ; <CR> if ( h 3 . equals ( <STRING> ) ) { <CR> V 0 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String M 4 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String M 3 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String m 9 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String Y 1 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String E 1 = R 8 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper r 6 = new Keeper ( m 9 , Y 1 , E 1 ) ; <CR> Pet W 1 = new Pet ( M 4 , M 3 , h 3 , r 6 ) ; <CR> System . out . println ( <STRING> ) ; <CR> W 1 . display ( ) ; <CR> r 6 . display ( ) ; <CR> W 1 . speak ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> } <CR> System . out . println ( <STRING> + Pet . getcount ( ) + <STRING> ) ; <CR> } <CR> } <CR> <EOC>