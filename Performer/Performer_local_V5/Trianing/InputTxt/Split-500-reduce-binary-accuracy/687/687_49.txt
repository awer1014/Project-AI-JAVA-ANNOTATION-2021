<BOC> public class Keeper { <CR> private String id ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + this . id ) ; <CR> System . out . println ( <STRING> + this . tel ) ; <CR> } <CR> public Keeper ( String D 3 , String L 0 ) { <CR> this . id = D 3 ; <CR> this . tel = L 0 ; <CR> } <CR> private String tel ; <CR> } <CR> <EOC> <BOC> public class Pet { <CR> private String name ; <CR> private String pid ; <CR> private String type ; <CR> public Pet ( String Z 9 , String V 6 , String O 3 ) { <CR> this . pid = Z 9 ; <CR> this . name = V 6 ; <CR> this . type = O 3 ; <CR> } <CR> public void speak ( ) { <CR> if ( type . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> else <CR> System . out . println ( <STRING> ) ; <CR> } <CR> private String keeper ; <CR> public void keep ( String w 2 ) { <CR> this . keeper = w 2 ; <CR> } <CR> public void display ( ) { <CR> System . out . println ( <STRING> + this . type ) ; <CR> System . out . println ( <STRING> + this . pid ) ; <CR> System . out . println ( <STRING> + this . name ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class test 2 { <CR> public static String type , pid , name , id , tel ; <CR> static Scanner keyboard = new Scanner ( System . in ) ; <CR> public static void input ( ) { <CR> System . out . println ( <STRING> ) ; <CR> type = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> pid = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> name = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> id = keyboard . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> tel = keyboard . nextLine ( ) ; <CR> } <CR> public static void main ( String [ ] Q 3 ) { <CR> input ( ) ; <CR> Pet w 5 = new Pet ( type , pid , name ) ; <CR> w 5 . keep ( id ) ; <CR> Keeper Y 2 = new Keeper ( id , tel ) ; <CR> System . out . println ( <STRING> ) ; <CR> input ( ) ; <CR> Pet y 3 = new Pet ( type , pid , name ) ; <CR> y 3 . keep ( id ) ; <CR> Keeper d 7 = new Keeper ( id , tel ) ; <CR> System . out . println ( <STRING> ) ; <CR> w 5 . display ( ) ; <CR> Y 2 . display ( ) ; <CR> w 5 . speak ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> y 3 . display ( ) ; <CR> d 7 . display ( ) ; <CR> y 3 . speak ( ) ; <CR> } <CR> } <CR> <EOC>