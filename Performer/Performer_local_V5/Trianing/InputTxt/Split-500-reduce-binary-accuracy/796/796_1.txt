<BOC> abstract public class Evaluation { <CR> protected Keeper keeper ; <CR> protected String pid , name , type ; <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> public Evaluation ( String O 6 , String r 6 , String F 5 , Keeper N ) { <CR> pid = O 6 ; <CR> name = r 6 ; <CR> type = F 5 ; <CR> count ++ ; <CR> keeper = N ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String r 9 , String E 5 , String D 1 , Keeper Z 1 ) { <CR> super ( r 9 , E 5 , D 1 , Z 1 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String S 2 , String m 8 , String T 3 , Keeper i 9 ) { <CR> super ( S 2 , m 8 , T 3 , i 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String w 3 , String o 6 , String U 9 ) { <CR> id = o 6 ; <CR> tel = U 9 ; <CR> name = w 3 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String U 8 , String E 2 , String c 0 , Keeper A 6 ) { <CR> super ( U 8 , E 2 , c 0 , A 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] A 3 ) { <CR> Scanner H 2 = new Scanner ( System . in ) ; <CR> boolean h 9 = <STRING> ; <CR> while ( h 9 ) { <CR> System . out . print ( <STRING> ) ; <CR> String x 7 = H 2 . nextLine ( ) ; <CR> if ( x 7 . equals ( <STRING> ) ) { <CR> h 9 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String d 4 = H 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String g 5 = H 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String R = H 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String P 5 = H 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String c 2 = H 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String s 4 = H 2 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper S 1 = new Keeper ( R , P 5 , c 2 ) ; <CR> Evaluation T 0 ; <CR> if ( x 7 . equals ( <STRING> ) ) <CR> T 0 = new Exam ( d 4 , g 5 , x 7 , S 1 ) ; <CR> else if ( x 7 . equals ( <STRING> ) ) <CR> T 0 = new HomeWork ( d 4 , g 5 , x 7 , S 1 ) ; <CR> else <CR> T 0 = new Report ( d 4 , g 5 , x 7 , S 1 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>