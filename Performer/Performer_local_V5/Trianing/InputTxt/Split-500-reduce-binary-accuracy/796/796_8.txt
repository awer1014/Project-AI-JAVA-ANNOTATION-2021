<BOC> abstract public class Evaluation { <CR> public Evaluation ( String X 2 , String k 2 , String i 6 , Keeper S 7 ) { <CR> pid = X 2 ; <CR> name = k 2 ; <CR> type = i 6 ; <CR> count ++ ; <CR> keeper = S 7 ; <CR> } <CR> protected String pid , name , type ; <CR> private static int count ; <CR> public static int getcount ( ) { <CR> return count ; <CR> } <CR> protected Keeper keeper ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String u 5 , String G 9 , String L 2 , Keeper r 7 ) { <CR> super ( u 5 , G 9 , L 2 , r 7 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String I 7 , String q 8 , String M , Keeper c 9 ) { <CR> super ( I 7 , q 8 , M , c 9 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Keeper { <CR> private String id , tel , name ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + id ) ; <CR> System . out . println ( <STRING> + tel ) ; <CR> } <CR> public Keeper ( String w 7 , String A 9 , String m 2 ) { <CR> id = A 9 ; <CR> tel = m 2 ; <CR> name = w 7 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String p 9 , String q 3 , String a , Keeper A 4 ) { <CR> super ( p 9 , q 3 , a , A 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Test { <CR> public static void main ( String [ ] T 5 ) { <CR> Scanner s 6 = new Scanner ( System . in ) ; <CR> boolean f 7 = <STRING> ; <CR> while ( f 7 ) { <CR> System . out . print ( <STRING> ) ; <CR> String B = s 6 . nextLine ( ) ; <CR> if ( B . equals ( <STRING> ) ) { <CR> f 7 = <STRING> ; <CR> break ; <CR> } <CR> System . out . print ( <STRING> ) ; <CR> String y 9 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String W 1 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String X 9 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String a 5 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String q 2 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> String I 0 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> Keeper x 9 = new Keeper ( X 9 , a 5 , q 2 ) ; <CR> Evaluation r 2 ; <CR> if ( B . equals ( <STRING> ) ) <CR> r 2 = new Exam ( y 9 , W 1 , B , x 9 ) ; <CR> else if ( B . equals ( <STRING> ) ) <CR> r 2 = new HomeWork ( y 9 , W 1 , B , x 9 ) ; <CR> else <CR> r 2 = new Report ( y 9 , W 1 , B , x 9 ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>