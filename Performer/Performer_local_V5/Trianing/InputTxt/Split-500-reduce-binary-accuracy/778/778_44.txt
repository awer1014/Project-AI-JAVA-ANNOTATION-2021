<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected String type , num , name ; <CR> Evaluation ( String s 9 , String w 4 , String q 2 , double X 5 , double J 9 ) { <CR> type = s 9 ; <CR> num = w 4 ; <CR> name = q 2 ; <CR> grade = X 5 ; <CR> pgrade = J 9 ; <CR> } <CR> protected double grade , pgrade ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String x 4 , String B 4 , String f 7 , double p 0 , double r 0 ) { <CR> super ( x 4 , B 4 , f 7 , p 0 , r 0 ) ; <CR> } <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> String tdate , trange ; <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String G 7 , String S 5 , String T , double t , double D 6 ) { <CR> super ( G 7 , S 5 , T , t , D 6 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> String rep , bok ; <CR> public Report ( String v 6 , String Q 0 , String D 2 , double c , double c 4 ) { <CR> super ( v 6 , Q 0 , D 2 , c , c 4 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] P 0 ) { <CR> Scanner x = new Scanner ( System . in ) ; <CR> String y 4 , x 4 , F 1 ; <CR> double u 1 , K 8 ; <CR> System . out . print ( <STRING> ) ; <CR> y 4 = x . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> x 4 = x . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> F 1 = x . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 1 = x . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> K 8 = x . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String J 1 , X , l 1 , U 8 , T 8 , R 3 ; <CR> if ( y 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> J 1 = x . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> X = x . nextLine ( ) ; <CR> } <CR> else if ( y 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> l 1 = x . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 8 = x . nextLine ( ) ; <CR> } <CR> else if ( y 4 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> T 8 = x . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> R 3 = x . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation f 1 = <STRING> ; <CR> if ( y 4 . equals ( <STRING> ) ) <CR> f 1 = new Exam ( y 4 , x 4 , F 1 , u 1 , K 8 ) ; <CR> else if ( y 4 . equals ( <STRING> ) ) <CR> f 1 = new HomeWork ( y 4 , x 4 , F 1 , u 1 , K 8 ) ; <CR> else if ( y 4 . equals ( <STRING> ) ) <CR> f 1 = new Report ( y 4 , x 4 , F 1 , u 1 , K 8 ) ; <CR> f 1 . print ( ) ; <CR> } <CR> } <CR> <EOC>