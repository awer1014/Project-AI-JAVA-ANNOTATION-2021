<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected String type , num , name ; <CR> protected double grade , pgrade ; <CR> Evaluation ( String u 2 , String R 1 , String P 0 , double J 5 , double S 0 ) { <CR> type = u 2 ; <CR> num = R 1 ; <CR> name = P 0 ; <CR> grade = J 5 ; <CR> pgrade = S 0 ; <CR> } <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String C 6 , String b 1 , String n 2 , double z , double E ) { <CR> super ( C 6 , b 1 , n 2 , z , E ) ; <CR> } <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> public HomeWork ( String i 3 , String L 2 , String b 9 , double U 1 , double V 1 ) { <CR> super ( i 3 , L 2 , b 9 , U 1 , V 1 ) ; <CR> } <CR> String odate , des ; <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> public Report ( String v 8 , String k 4 , String H 6 , double c 6 , double y 3 ) { <CR> super ( v 8 , k 4 , H 6 , c 6 , y 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] L 1 ) { <CR> Scanner X 4 = new Scanner ( System . in ) ; <CR> String k 8 , c 1 , u 4 ; <CR> double r 9 , o 8 ; <CR> System . out . print ( <STRING> ) ; <CR> k 8 = X 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> c 1 = X 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> u 4 = X 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> r 9 = X 4 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 8 = X 4 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String B 9 , d 8 , w 7 , P 5 , x 5 , U 6 ; <CR> if ( k 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> B 9 = X 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> d 8 = X 4 . nextLine ( ) ; <CR> } <CR> else if ( k 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> w 7 = X 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> P 5 = X 4 . nextLine ( ) ; <CR> } <CR> else if ( k 8 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 5 = X 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> U 6 = X 4 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation U 3 = <STRING> ; <CR> if ( k 8 . equals ( <STRING> ) ) <CR> U 3 = new Exam ( k 8 , c 1 , u 4 , r 9 , o 8 ) ; <CR> else if ( k 8 . equals ( <STRING> ) ) <CR> U 3 = new HomeWork ( k 8 , c 1 , u 4 , r 9 , o 8 ) ; <CR> else if ( k 8 . equals ( <STRING> ) ) <CR> U 3 = new Report ( k 8 , c 1 , u 4 , r 9 , o 8 ) ; <CR> U 3 . print ( ) ; <CR> } <CR> } <CR> <EOC>