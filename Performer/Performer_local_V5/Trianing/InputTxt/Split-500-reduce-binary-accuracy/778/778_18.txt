<BOC> import java . util . * ; <CR> public class Evaluation { <CR> void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> + type ) ; <CR> System . out . println ( <STRING> + num ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + grade ) ; <CR> System . out . println ( <STRING> + pgrade ) ; <CR> } <CR> protected double grade , pgrade ; <CR> Evaluation ( String r 1 , String j 0 , String u 0 , double O 4 , double f 5 ) { <CR> type = r 1 ; <CR> num = j 0 ; <CR> name = u 0 ; <CR> grade = O 4 ; <CR> pgrade = f 5 ; <CR> } <CR> protected String type , num , name ; <CR> } <CR> <EOC> <BOC> public class Exam extends Evaluation { <CR> public Exam ( String k 8 , String M 1 , String B 1 , double S 4 , double d ) { <CR> super ( k 8 , M 1 , B 1 , S 4 , d ) ; <CR> } <CR> String tdate , trange ; <CR> void Eprint ( ) { <CR> System . out . println ( <STRING> + tdate ) ; <CR> System . out . println ( <STRING> + trange ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Evaluation { <CR> void Hprint ( ) { <CR> System . out . println ( <STRING> + odate ) ; <CR> System . out . println ( <STRING> + des ) ; <CR> } <CR> public HomeWork ( String I 7 , String o 9 , String W 2 , double f 7 , double U ) { <CR> super ( I 7 , o 9 , W 2 , f 7 , U ) ; <CR> } <CR> String odate , des ; <CR> } <CR> <EOC> <BOC> public class Report extends Evaluation { <CR> public Report ( String B 1 , String g , String G 2 , double I 7 , double B 7 ) { <CR> super ( B 1 , g , G 2 , I 7 , B 7 ) ; <CR> } <CR> String rep , bok ; <CR> void Rprint ( ) { <CR> System . out . println ( <STRING> + rep ) ; <CR> System . out . println ( <STRING> + bok ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test { <CR> public static void main ( String [ ] z ) { <CR> Scanner E 9 = new Scanner ( System . in ) ; <CR> String N , M 5 , S 9 ; <CR> double W 0 , m 9 ; <CR> System . out . print ( <STRING> ) ; <CR> N = E 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 5 = E 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> S 9 = E 9 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> W 0 = E 9 . nextDouble ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> m 9 = E 9 . nextDouble ( ) ; <CR> while ( <STRING> ) { <CR> String O 0 , I 5 , V 8 , t 7 , t 8 , K 5 ; <CR> if ( N . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> O 0 = E 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 5 = E 9 . nextLine ( ) ; <CR> } <CR> else if ( N . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> V 8 = E 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> t 7 = E 9 . nextLine ( ) ; <CR> } <CR> else if ( N . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> t 8 = E 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> K 5 = E 9 . nextLine ( ) ; <CR> } <CR> } <CR> Evaluation o 4 = <STRING> ; <CR> if ( N . equals ( <STRING> ) ) <CR> o 4 = new Exam ( N , M 5 , S 9 , W 0 , m 9 ) ; <CR> else if ( N . equals ( <STRING> ) ) <CR> o 4 = new HomeWork ( N , M 5 , S 9 , W 0 , m 9 ) ; <CR> else if ( N . equals ( <STRING> ) ) <CR> o 4 = new Report ( N , M 5 , S 9 , W 0 , m 9 ) ; <CR> o 4 . print ( ) ; <CR> } <CR> } <CR> <EOC>