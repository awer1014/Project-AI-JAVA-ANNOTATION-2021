<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private int num_i ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> private String id , date , coin ; <CR> ChineseLetter ( String u 4 , String R 1 , String x , Item [ ] P 1 , int C 7 ) { <CR> id = u 4 ; <CR> date = R 1 ; <CR> num_i = C 7 ; <CR> for ( int j 1 = <NUM_INT> ; j 1 < C 7 ; j 1 ++ ) <CR> it [ j 1 ] = P 1 [ j 1 ] ; <CR> } <CR> } <CR> <EOC> <BOC> public class Item { <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( String X 0 , String y 1 , double d 2 , int q 6 , double D ) { <CR> id = X 0 ; <CR> name = y 1 ; <CR> money = d 2 ; <CR> cnt = q 6 ; <CR> discnt = D ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> private String id , name ; <CR> private int cnt ; <CR> private static double total_money = <NUM_INT> ; <CR> private double money , discnt ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] R 0 ) { <CR> Scanner L 6 = new Scanner ( System . in ) ; <CR> String N 7 , a 9 , x 7 ; <CR> System . out . print ( <STRING> ) ; <CR> N 7 = L 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 9 = L 6 . nextLine ( ) ; <CR> x 7 = L 6 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String D 1 , n 8 , w 2 , B 8 , U 0 ; <CR> System . out . print ( <STRING> ) ; <CR> D 1 = L 6 . nextLine ( ) ; <CR> if ( D 1 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> n 8 = L 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> w 2 = L 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>