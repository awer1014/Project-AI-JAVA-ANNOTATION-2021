<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> private int num_i ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> ChineseLetter ( String o 1 , String i 6 , String X 7 , Item [ ] p 1 , int X 9 ) { <CR> id = o 1 ; <CR> date = i 6 ; <CR> num_i = X 9 ; <CR> for ( int z 4 = <NUM_INT> ; z 4 < X 9 ; z 4 ++ ) <CR> it [ z 4 ] = p 1 [ z 4 ] ; <CR> } <CR> private String id , date , coin ; <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> private static double total_money = <NUM_INT> ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( String V 6 , String a , double B 9 , int J 5 , double J 2 ) { <CR> id = V 6 ; <CR> name = a ; <CR> money = B 9 ; <CR> cnt = J 5 ; <CR> discnt = J 2 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private int cnt ; <CR> private String id , name ; <CR> private double money , discnt ; <CR> Item ( ) { <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] C 6 ) { <CR> Scanner y 0 = new Scanner ( System . in ) ; <CR> String o 6 , a 6 , D 2 ; <CR> System . out . print ( <STRING> ) ; <CR> o 6 = y 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> a 6 = y 0 . nextLine ( ) ; <CR> D 2 = y 0 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String N 5 , G 6 , M 2 , r 1 , F 7 ; <CR> System . out . print ( <STRING> ) ; <CR> N 5 = y 0 . nextLine ( ) ; <CR> if ( N 5 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> G 6 = y 0 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> M 2 = y 0 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>