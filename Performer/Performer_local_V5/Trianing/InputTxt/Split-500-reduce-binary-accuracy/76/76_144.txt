<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private String id , date , coin ; <CR> private int num_i ; <CR> ChineseLetter ( String S 7 , String h 6 , String a 6 , Item [ ] f 8 , int n 5 ) { <CR> id = S 7 ; <CR> date = h 6 ; <CR> num_i = n 5 ; <CR> for ( int b 4 = <NUM_INT> ; b 4 < n 5 ; b 4 ++ ) <CR> it [ b 4 ] = f 8 [ b 4 ] ; <CR> } <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> private String id , name ; <CR> private int cnt ; <CR> private static double total_money = <NUM_INT> ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( String c , String x 2 , double l 6 , int r 6 , double R 3 ) { <CR> id = c ; <CR> name = x 2 ; <CR> money = l 6 ; <CR> cnt = r 6 ; <CR> discnt = R 3 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> private double money , discnt ; <CR> Item ( ) { <CR> } <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] x 3 ) { <CR> Scanner s 6 = new Scanner ( System . in ) ; <CR> String M 6 , o 1 , S 5 ; <CR> System . out . print ( <STRING> ) ; <CR> M 6 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> o 1 = s 6 . nextLine ( ) ; <CR> S 5 = s 6 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String C 4 , C 3 , j 4 , J 1 , h 2 ; <CR> System . out . print ( <STRING> ) ; <CR> C 4 = s 6 . nextLine ( ) ; <CR> if ( C 4 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> C 3 = s 6 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> j 4 = s 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>