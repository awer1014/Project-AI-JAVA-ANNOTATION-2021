<BOC> import java . util . * ; <CR> public class ChineseLetter { <CR> ChineseLetter ( String D 0 , String R 0 , String e 8 , Item [ ] L , int T 5 ) { <CR> id = D 0 ; <CR> date = R 0 ; <CR> num_i = T 5 ; <CR> for ( int p 2 = <NUM_INT> ; p 2 < T 5 ; p 2 ++ ) <CR> it [ p 2 ] = L [ p 2 ] ; <CR> } <CR> private String id , date , coin ; <CR> void print ( ) { <CR> System . out . println ( id + <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( date + <STRING> ) ; <CR> } <CR> private Item [ ] it = new Item [ <NUM_INT> ] ; <CR> private int num_i ; <CR> } <CR> <EOC> <BOC> public class Item { <CR> private double money , discnt ; <CR> private static double total_money = <NUM_INT> ; <CR> private int cnt ; <CR> void print ( ) { <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + money ) ; <CR> System . out . println ( <STRING> + cnt ) ; <CR> System . out . println ( <STRING> + discnt ) ; <CR> } <CR> Item ( String y 1 , String b 9 , double O 4 , int D 1 , double F 3 ) { <CR> id = y 1 ; <CR> name = b 9 ; <CR> money = O 4 ; <CR> cnt = D 1 ; <CR> discnt = F 3 ; <CR> total_money += money * discnt * cnt ; <CR> } <CR> Item ( ) { <CR> } <CR> private String id , name ; <CR> } <CR> <EOC> <BOC> import java . util . * ; <CR> public class test 3 { <CR> public static Item [ ] item = new Item [ <NUM_INT> ] ; <CR> public static void main ( String [ ] z 1 ) { <CR> Scanner v 4 = new Scanner ( System . in ) ; <CR> String n 4 , A 1 , M 8 ; <CR> System . out . print ( <STRING> ) ; <CR> n 4 = v 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> A 1 = v 4 . nextLine ( ) ; <CR> M 8 = v 4 . nextLine ( ) ; <CR> while ( <STRING> ) { <CR> String F 0 , j 6 , B 5 , c 2 , G 3 ; <CR> System . out . print ( <STRING> ) ; <CR> F 0 = v 4 . nextLine ( ) ; <CR> if ( F 0 . equals ( <STRING> ) ) { <CR> } <CR> System . out . print ( <STRING> ) ; <CR> j 6 = v 4 . nextLine ( ) ; <CR> System . out . print ( <STRING> ) ; <CR> B 5 = v 4 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> <EOC>