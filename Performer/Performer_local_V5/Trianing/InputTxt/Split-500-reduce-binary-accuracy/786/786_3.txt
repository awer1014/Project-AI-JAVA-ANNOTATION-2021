<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String W 9 , String b 0 , double t , double W 6 ) { <CR> super ( W 9 , b 0 , t , W 6 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public HomeWork ( String s 3 , String b , double z 0 , double l 0 ) { <CR> super ( s 3 , b , z 0 , l 0 ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] c 2 ) { <CR> Scanner g 9 = new Scanner ( System . in ) ; <CR> boolean i 5 = <STRING> ; <CR> while ( i 5 ) { <CR> System . out . println ( <STRING> ) ; <CR> String H 1 = g 9 . nextLine ( ) ; <CR> if ( H 1 . equals ( <STRING> ) ) { <CR> i 5 = <STRING> ; <CR> break ; <CR> } <CR> if ( H 1 . equals ( <STRING> ) || H 1 . equals ( <STRING> ) || H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String L 4 = g 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String C 9 = g 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double a = Double . parseDouble ( g 9 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double K 2 = Double . parseDouble ( g 9 . nextLine ( ) ) ; <CR> String e 5 = <STRING> ; <CR> String i 3 = <STRING> ; <CR> String p 6 = <STRING> ; <CR> String I 1 = <STRING> ; <CR> String U 2 = <STRING> ; <CR> String x 3 = <STRING> ; <CR> if ( H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> p 6 = g 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> I 1 = g 9 . nextLine ( ) ; <CR> } <CR> if ( H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> e 5 = g 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> i 3 = g 9 . nextLine ( ) ; <CR> } <CR> if ( H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> U 2 = g 9 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> x 3 = g 9 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test t 3 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( H 1 . equals ( <STRING> ) ) <CR> t 3 = new Exam ( L 4 , C 9 , a , K 2 ) ; <CR> else if ( H 1 . equals ( <STRING> ) ) <CR> t 3 = new HomeWork ( L 4 , C 9 , a , K 2 ) ; <CR> else if ( H 1 . equals ( <STRING> ) ) <CR> t 3 = new Report ( L 4 , C 9 , a , K 2 ) ; <CR> if ( t 3 ! = <STRING> ) { <CR> t 3 . print ( ) ; <CR> if ( H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + p 6 ) ; <CR> System . out . println ( <STRING> + I 1 ) ; <CR> } <CR> else if ( H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + e 5 ) ; <CR> System . out . println ( <STRING> + i 3 ) ; <CR> } <CR> else if ( H 1 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + U 2 ) ; <CR> System . out . println ( <STRING> + x 3 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> t 3 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String W 2 , String m 2 , double C 4 , double G 0 ) { <CR> super ( W 2 , m 2 , C 4 , G 0 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private String time , range , end_time , description ; <CR> String info_description ; <CR> private String name ; <CR> private double propotation ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> private String number ; <CR> public Test ( String O 2 , String I 5 , double J 0 , double k 4 ) { <CR> number = O 2 ; <CR> name = I 5 ; <CR> score = J 0 ; <CR> propotation = k 4 ; <CR> } <CR> private double score ; <CR> abstract public void print ( ) ; <CR> String info ; <CR> } <CR> <EOC>