<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String V 6 , String j 9 , double S 0 , double g 8 ) { <CR> super ( V 6 , j 9 , S 0 , g 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String S 9 , String b 3 , double D 5 , double h 1 ) { <CR> super ( S 9 , b 3 , D 5 , h 1 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] o 7 ) { <CR> Scanner D 6 = new Scanner ( System . in ) ; <CR> boolean b 8 = <STRING> ; <CR> while ( b 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String x 6 = D 6 . nextLine ( ) ; <CR> if ( x 6 . equals ( <STRING> ) ) { <CR> b 8 = <STRING> ; <CR> break ; <CR> } <CR> if ( x 6 . equals ( <STRING> ) || x 6 . equals ( <STRING> ) || x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String P 9 = D 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String k 7 = D 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double a 6 = Double . parseDouble ( D 6 . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double g 1 = Double . parseDouble ( D 6 . nextLine ( ) ) ; <CR> String M = <STRING> ; <CR> String J 1 = <STRING> ; <CR> String Y 8 = <STRING> ; <CR> String l 0 = <STRING> ; <CR> String K 8 = <STRING> ; <CR> String v 6 = <STRING> ; <CR> if ( x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> Y 8 = D 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> l 0 = D 6 . nextLine ( ) ; <CR> } <CR> if ( x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> M = D 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> J 1 = D 6 . nextLine ( ) ; <CR> } <CR> if ( x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> K 8 = D 6 . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> v 6 = D 6 . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test D = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( x 6 . equals ( <STRING> ) ) <CR> D = new Exam ( P 9 , k 7 , a 6 , g 1 ) ; <CR> else if ( x 6 . equals ( <STRING> ) ) <CR> D = new HomeWork ( P 9 , k 7 , a 6 , g 1 ) ; <CR> else if ( x 6 . equals ( <STRING> ) ) <CR> D = new Report ( P 9 , k 7 , a 6 , g 1 ) ; <CR> if ( D ! = <STRING> ) { <CR> D . print ( ) ; <CR> if ( x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + Y 8 ) ; <CR> System . out . println ( <STRING> + l 0 ) ; <CR> } <CR> else if ( x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + M ) ; <CR> System . out . println ( <STRING> + J 1 ) ; <CR> } <CR> else if ( x 6 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + K 8 ) ; <CR> System . out . println ( <STRING> + v 6 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> D . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Report ( String m 5 , String e 1 , double g 5 , double v 3 ) { <CR> super ( m 5 , e 1 , g 5 , v 3 ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private double score ; <CR> private String name ; <CR> private double propotation ; <CR> private String number ; <CR> String info ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info_description ; <CR> public Test ( String P , String E 9 , double M 2 , double O 6 ) { <CR> number = P ; <CR> name = E 9 ; <CR> score = M 2 ; <CR> propotation = O 6 ; <CR> } <CR> private String time , range , end_time , description ; <CR> abstract public void print ( ) ; <CR> } <CR> <EOC>