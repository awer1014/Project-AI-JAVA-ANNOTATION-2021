<BOC> public class Exam extends Test { <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> public Exam ( String S 9 , String p 2 , double h 7 , double x 8 ) { <CR> super ( S 9 , p 2 , h 7 , x 8 ) ; <CR> } <CR> } <CR> <EOC> <BOC> public class HomeWork extends Test { <CR> public HomeWork ( String B 4 , String f 6 , double M 7 , double J 0 ) { <CR> super ( B 4 , f 6 , M 7 , J 0 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> import java . util . Scanner ; <CR> public class Main { <CR> public static void main ( String [ ] e 0 ) { <CR> Scanner H = new Scanner ( System . in ) ; <CR> boolean i 8 = <STRING> ; <CR> while ( i 8 ) { <CR> System . out . println ( <STRING> ) ; <CR> String R 3 = H . nextLine ( ) ; <CR> if ( R 3 . equals ( <STRING> ) ) { <CR> i 8 = <STRING> ; <CR> break ; <CR> } <CR> if ( R 3 . equals ( <STRING> ) || R 3 . equals ( <STRING> ) || R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> String p 2 = H . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> String z 6 = H . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> double K 0 = Double . parseDouble ( H . nextLine ( ) ) ; <CR> System . out . println ( <STRING> ) ; <CR> double G 0 = Double . parseDouble ( H . nextLine ( ) ) ; <CR> String x 8 = <STRING> ; <CR> String A 0 = <STRING> ; <CR> String j 2 = <STRING> ; <CR> String D 2 = <STRING> ; <CR> String n 5 = <STRING> ; <CR> String B 2 = <STRING> ; <CR> if ( R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> j 2 = H . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> D 2 = H . nextLine ( ) ; <CR> } <CR> if ( R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> x 8 = H . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> A 0 = H . nextLine ( ) ; <CR> } <CR> if ( R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> ) ; <CR> n 5 = H . nextLine ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> B 2 = H . nextLine ( ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> Test p 5 = <STRING> ; <CR> System . out . println ( <STRING> ) ; <CR> System . out . println ( <STRING> ) ; <CR> if ( R 3 . equals ( <STRING> ) ) <CR> p 5 = new Exam ( p 2 , z 6 , K 0 , G 0 ) ; <CR> else if ( R 3 . equals ( <STRING> ) ) <CR> p 5 = new HomeWork ( p 2 , z 6 , K 0 , G 0 ) ; <CR> else if ( R 3 . equals ( <STRING> ) ) <CR> p 5 = new Report ( p 2 , z 6 , K 0 , G 0 ) ; <CR> if ( p 5 ! = <STRING> ) { <CR> p 5 . print ( ) ; <CR> if ( R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + j 2 ) ; <CR> System . out . println ( <STRING> + D 2 ) ; <CR> } <CR> else if ( R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + x 8 ) ; <CR> System . out . println ( <STRING> + A 0 ) ; <CR> } <CR> else if ( R 3 . equals ( <STRING> ) ) { <CR> System . out . println ( <STRING> + n 5 ) ; <CR> System . out . println ( <STRING> + B 2 ) ; <CR> } <CR> System . out . println ( <STRING> ) ; <CR> p 5 . display ( ) ; <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> } <CR> } <CR> } <CR> <EOC> <BOC> public class Report extends Test { <CR> public Report ( String G 7 , String w 1 , double i 2 , double G 9 ) { <CR> super ( G 7 , w 1 , i 2 , G 9 ) ; <CR> } <CR> public void print ( ) { <CR> System . out . println ( <STRING> ) ; <CR> } <CR> } <CR> <EOC> <BOC> abstract public class Test { <CR> private double propotation ; <CR> private String number ; <CR> private double score ; <CR> public Test ( String Y 7 , String z 6 , double W 5 , double J 8 ) { <CR> number = Y 7 ; <CR> name = z 6 ; <CR> score = W 5 ; <CR> propotation = J 8 ; <CR> } <CR> String info_description ; <CR> private String time , range , end_time , description ; <CR> abstract public void print ( ) ; <CR> public void display ( ) { <CR> System . out . println ( <STRING> + number ) ; <CR> System . out . println ( <STRING> + name ) ; <CR> System . out . println ( <STRING> + score ) ; <CR> System . out . println ( <STRING> + propotation ) ; <CR> } <CR> String info ; <CR> private String name ; <CR> } <CR> <EOC>