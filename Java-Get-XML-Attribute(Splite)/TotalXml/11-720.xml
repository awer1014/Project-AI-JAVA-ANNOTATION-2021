<ErrorList id="D:\Users\楊子霆\Desktop\Lesson\專題\擴增 修改版\正規化\11\11.xml">
	
<SourceCode_List><SourceCode lines="26" name="ChineseLetter.java">public class ChineseLetter extends Letter { 
String title , receiver , content , sender , date ; 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
public void display ( ) { 
System . out . println ( receiver + title + ",您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + " 敬上" ) ; 
System . out . println ( date ) ; 
} 
public String getSender ( ) { 
return this . sender ; 
} 
public String getReceiver ( ) { 
return this . receiver ; 
} 
public String getDate ( ) { 
return this . date ; 
} 
} 
</SourceCode><SourceCode lines="27" name="EnglishLetter.java">public class EnglishLetter extends Letter { 
String title , receiver , content , sender , date ; 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
public void display ( ) { 
System . out . println ( "Dear " + title + " " + receiver ) ; 
System . out . println ( content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( sender ) ; 
System . out . println ( date ) ; 
} 
public String getSender ( ) { 
return this . sender ; 
} 
public String getReceiver ( ) { 
return this . receiver ; 
} 
public String getDate ( ) { 
return this . date ; 
} 
} 
</SourceCode><SourceCode lines="7" name="Letter.java">abstract public class Letter { 
abstract protected void display ( ) ; 
abstract protected String getSender ( ) ; 
abstract protected String getReceiver ( ) ; 
abstract protected String getDate ( ) ; 
} 
</SourceCode><SourceCode lines="9" name="test.java">public class test { 
public static void main ( String [ ] args ) { 
Letter lt = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ; 
lt . display ( ) ; 
Letter lt2 = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ; 
lt2 . display ( ) ; 
} 
} 
</SourceCode></SourceCode_List><Errors><Error tpye="抽象:不會分離變跟不變的部分"><Message>共同的物件資料/動作是可以被子類別繼承的，只需在父類別宣告一次即可。各自不同的物件資料/動作則由各子類別宣告即可。</Message><Linelist><line Begin="11" End="11" src="ChineseLetter" /><line Begin="18" End="24" src="ChineseLetter" /><line Begin="8" End="10" src="ChineseLetter" /><line Begin="12" End="17" src="ChineseLetter" /><line Begin="18" End="25" src="EnglishLetter" /><line Begin="9" End="17" src="EnglishLetter" /><line Begin="2" End="3" src="Letter" /><line Begin="5" End="5" src="Letter" /></Linelist></Error><Error tpye="物件:不會使用物件之間的關係"><Message>當EnglishLetter物件擁有Letter物件時，EnglishLetter物件可以直接呼叫Letter物件的物件動作去取得該動作回傳值。
public class EnglishLetter extends Letter{
@Override public void display(){
System.out.print("Dear "+getTitle()+getReceiver()+",");
System.out.print(getContent());
System.out.print("Sincerely");
System.out.print(getSender());
 System.out.print(getDate());
}
}
</Message><Linelist><line Begin="2" End="7" src="ChineseLetter" /><line Begin="2" End="7" src="ChineseLetter" /><line Begin="12" End="12" src="ChineseLetter" /></Linelist></Error></Errors></ErrorList>