<ErrorList id="C:\Users\sae4a\OneDrive\桌面\java\錯誤(已正規化)\465\465.xml">
	
<SourceCode_List><SourceCode lines="37" name="Keeper.java">import java . util . Scanner ; 
class Keeper { 
String id ; 
String tel ; 
Keeper ( String id , String tel ) { 
this . id = id ; 
this . tel = tel ; 
} 
void display ( ) { 
System . out . println ( "飼主身分證字號:" + this . id ) ; 
System . out . println ( "飼主電話：" + tel ) ; 
} 
public static void main ( String [ ] args ) { 
String a1 , a2 , a3 , a4 , a5 ; 
for ( int i = 0 ; i &lt; 100 ; i ++ ) { 
Scanner scanner = new Scanner ( System . in ) ; 
System . out . println ( "請輸入寵物種類:" ) ; 
a1 = scanner . nextLine ( ) ; 
System . out . println ( "請輸入寵物編號:" ) ; 
a2 = scanner . nextLine ( ) ; 
System . out . println ( "請輸入寵物名稱:" ) ; 
a3 = scanner . nextLine ( ) ; 
System . out . println ( "請輸入飼主身分證字號:" ) ; 
a4 = scanner . nextLine ( ) ; 
System . out . println ( "請輸入飼主電話:" ) ; 
a5 = scanner . nextLine ( ) ; 
pet K = new pet ( a2 , a3 , a1 ) ; 
Keeper S = new Keeper ( a4 , a5 ) ; 
K . display ( ) ; 
S . display ( ) ; 
K . speak ( ) ; 
int r = K . A ( ) ; 
System . out . println ( "總共" + r + "+隻寵物！" ) ; 
} 
} 
} 
</SourceCode><SourceCode lines="29" name="pet.java">class pet { 
private int count ; 
String pid ; 
String name ; 
String type ; 
pet ( String pid , String name , String type ) { 
this . pid = pid ; 
this . name = name ; 
this . type = type ; 
count ++ ; 
} 
int A ( ) { 
return count ; 
} 
void speak ( ) { 
if ( this . type == "貓" ) { 
System . out . println ( "喵喵" ) ; 
} 
else if ( this . type == "狗" ) { 
System . out . println ( "汪汪" ) ; 
} 
} 
void display ( ) { 
System . out . println ( "編號" + this . pid + "名稱" + this . name + "種類" + this . type ) ; 
} 
public static void main ( String [ ] args ) { 
} 
} 
</SourceCode></SourceCode_List><Errors><Error tpye="字串:字串比較錯誤(沒有使用equals函數)"><Message>字串間的比較應使用equals函數較為恰當。
例如，本程式的pet類別，需改成type.equals("貓")，type.equals("狗")。</Message><Linelist><line Begin="9" End="13" src="pet" /></Linelist></Error><Error tpye="物件:建立物件之間的關係"><Message>兩物件之間的關係經常可利用一物件擁有另一物件來實踐。例如，要描述寵物(Pet)與飼主(Keeper)的關係，可以在Pet物件內宣告一個物件資料，類型是Keeper，以表示該Pet物件的Keeper是誰。
例如，可以在本程式的Keeper類別中加入private Keeper keeper，
並在本程式的Pet類別中加入Keeper keeper。</Message><Linelist><line Begin="2" End="2" src="Keeper" /><line Begin="7" End="12" src="Keeper" /></Linelist></Error></Errors></ErrorList>