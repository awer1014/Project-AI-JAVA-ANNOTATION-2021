<ErrorList id="C:\Users\a2744\Desktop\專研\專研JAVA\工具\標註程式 NI99A Extreme Version\NormalizedCODES\703\703.xml">
	
<SourceCode_List><SourceCode lines="15" name="Keeper.java">public class Keeper { 
public String id ; 
public String tel ; 
public Keeper ( String id , String tel ) { 
this . id = id ; 
this . tel = tel ; 
} 
public void display ( ) { 
System . out . println ( "飼主身分證字號：" + id ) ; 
System . out . println ( "飼主電話：" + tel ) ; 
} 
public static void main ( ) { 
} 
} 
</SourceCode><SourceCode lines="44" name="Pet.java">import java . util . Scanner ; 
public class Pet { 
public static int count ; 
public String pid ; 
public String name ; 
public String type ; 
public Pet ( String pid , String name , String type ) { 
this . pid = pid ; 
this . name = name ; 
this . type = type ; 
} 
public void speak ( ) { 
System . out . println ( "您的寵物叫聲是：" ) ; 
if ( type == "狗" ) 
System . out . println ( "汪汪" ) ; 
else if ( type == "貓" ) 
System . out . println ( "喵喵" ) ; 
} 
public void display ( ) { 
System . out . println ( "寵物種類:" + type ) ; 
System . out . println ( "寵物編號：" + pid ) ; 
System . out . println ( "寵物名稱：" + name ) ; 
} 
public static void main ( ) { 
String ty , p , n , i , te ; 
Scanner scanner = new Scanner ( System . in ) ; 
System . out . println ( "請輸入寵物種類:" ) ; 
ty = scanner . nextLine ( ) ; 
System . out . println ( "請輸入寵物編號：" ) ; 
p = scanner . nextLine ( ) ; 
System . out . println ( "請輸入寵物名稱：" ) ; 
n = scanner . nextLine ( ) ; 
System . out . println ( "請輸入飼主身分證字號：" ) ; 
i = scanner . nextLine ( ) ; 
System . out . println ( "請輸入飼主電話：" ) ; 
te = scanner . nextLine ( ) ; 
Pet a = new Pet ( p , n , ty ) ; 
Keeper k = new Keeper ( i , te ) ; 
a . display ( ) ; 
k . display ( ) ; 
a . speak ( ) ; 
} 
} 
</SourceCode></SourceCode_List><Errors><Error tpye="字串:字串比較錯誤(沒有使用equals函數)"><Message>字串間的比較應使用equals函數較為恰當。
例如，
if ( type.equals ( "狗" ) )</Message><Linelist><line Begin="8" End="8" src="Pet" /><line Begin="10" End="10" src="Pet" /></Linelist></Error><Error tpye="物件:建立物件之間的關係"><Message>兩物件之間的關係經常可利用一物件擁有另一物件來實踐。
例如，要描述寵物(Pet)與飼主(Keeper)的關係，可以在Pet物件內宣告一個物件資料，類型是Keeper，以表示該Pet物件的Keeper是誰。
可利用建構子建立keeper物件變數的值，例如，
public Pet(String pid, String name, String type, Keeper keeper) {    
    ...
    this.keeper = keeper;
}
Pet建構子內已有keeper參數可以取得Keeper的資料，因此，下列程式可產生擁有Keeper物件的Pet物件，
Pet a = new Pet(p,n,ty,k);</Message><Linelist><line Begin="4" End="4" src="Pet" /><line Begin="19" End="19" src="Pet" /><line Begin="19" End="23" src="Pet" /><line Begin="37" End="37" src="Pet" /></Linelist></Error><Error tpye="變數:變數未定義無法使用"><Message>k變數需先宣告後才能使用。
Keeper應擺在Pet前面才能讓Pet有Keeper的資料，例如，
Keeper k = new Keeper(...);
Pet a = new Pet(..., k);
</Message><Linelist><line Begin="37" End="38" src="Pet" /></Linelist></Error></Errors></ErrorList>