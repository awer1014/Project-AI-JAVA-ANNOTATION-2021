<ErrorList id="D:\Users\楊子霆\Desktop\Lesson\專題\擴增 修改版\正規化\4\4.xml">
	
<SourceCode_List><SourceCode lines="35" name="ChineseLetter.java">public class ChineseLetter { 
String title ; 
String receiver ; 
String content ; 
String sender ; 
String date ; 
ChineseLetter ( ) { 
} 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
void display ( ) { 
System . out . println ( receiver + " " + title + ", " + "您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + "敬上" ) ; 
System . out . println ( date ) ; 
} 
public String getSender ( ) { 
return this . sender ; 
} 
public String getTitle ( ) { 
return this . title ; 
} 
public String getReceiver ( ) { 
return this . receiver ; 
} 
public String getDate ( ) { 
return this . date ; 
} 
} 
</SourceCode><SourceCode lines="22" name="EnglishLetter.java">public class EnglishLetter { 
String title ; 
String receiver ; 
String content ; 
String sender ; 
String date ; 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
void display ( ) { 
System . out . print ( "Dear " + title + receiver + "," ) ; 
System . out . print ( content ) ; 
System . out . print ( "Sincerely" ) ; 
System . out . print ( sender ) ; 
System . out . print ( date ) ; 
} 
} 
</SourceCode><SourceCode lines="15" name="Envelop.java">public class Envelop extends A { 
String senderAddr ; 
String receiverAddr ; 
Letter letter ; 
Envelop ( String senderAddr , String receiverAddr , Letter letter ) { 
this . senderAddr = senderAddr ; 
this . receiverAddr = receiverAddr ; 
this . letter = letter ; 
} 
void display ( ) { 
System . out . println ( "From: " + senderAddr + ", " + getSender ( ) ) ; 
System . out . println ( "To: " + receiverAddr + ", " + getReceiver ( ) + " " + getTitle ( ) ) ; 
} 
} 
</SourceCode><SourceCode lines="5" name="Letter.java">abstract public class Letter { 
Letter ( ) { 
} 
} 
</SourceCode></SourceCode_List><Errors><Error tpye="抽象:不會分離變跟不變的部分"><Message>共同的物件資料/動作是可以被子類別繼承的，只需在父類別宣告一次即可。各自不同的物件資料/動作則由各子類別宣告即可。</Message><Linelist><line Begin="11" End="11" src="ChineseLetter" /><line Begin="15" End="15" src="ChineseLetter" /><line Begin="19" End="29" src="ChineseLetter" /><line Begin="33" End="33" src="ChineseLetter" /><line Begin="2" End="10" src="EnglishLetter" /><line Begin="18" End="20" src="EnglishLetter" /></Linelist></Error><Error tpye="物件:不會使用物件之間的關係"><Message>兩物件之間的關係經常可利用一物件擁有另一物件來實踐。

因為Envelop擁有Letter的letter物件資料
所以在呼叫letter的物件動作的時候應加上
System.out.println( "From: "+ senderAddr +", "+ letter.getSender());
System.out.println( "To: "+ receiverAddr +", "+ letter.getReceiver() +" " + letter.getTitle());</Message><Linelist><line Begin="3" End="4" src="Envelop" /></Linelist></Error><Error tpye="繼承:使用繼承"><Message>為了避免程式和資料的冗餘問題，應該善用繼承的機制。相同的資料或動作可藉由proetced 宣告，給子類別繼承使用。</Message><Linelist><line Begin="1" End="1" src="ChineseLetter" /><line Begin="1" End="1" src="EnglishLetter" /><line Begin="1" End="1" src="Envelop" /></Linelist></Error><Error tpye="變數:不了解局部變數的概念"><Message>局部變數只在所宣告的函式內被存取或修改，而且需要先有值才能進行運算。</Message><Linelist><line Begin="6" End="7" src="Envelop" /><line Begin="13" End="13" src="Envelop" /><line Begin="8" End="8" src="Envelop" /><line Begin="4" End="4" src="Envelop" /></Linelist></Error></Errors></ErrorList>