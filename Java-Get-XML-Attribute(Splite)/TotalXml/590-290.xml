<ErrorList id="C:\Users\User\Desktop\錯誤正規化\590\590.xml">
	
<SourceCode_List><SourceCode lines="6" name="ChineseLetter.java">public class ChineseLetter extends Letter { 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
} 
</SourceCode><SourceCode lines="6" name="EnglishLetter.java">public class EnglishLetter extends Letter { 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
} 
</SourceCode><SourceCode lines="21" name="Envelop.java">public class Envelop extends Letter { 
String senderAddr ; 
String receiverAddr ; 
Letter letter ; 
Envelop ( String senderAddr , String receiverAddr , Letter letter ) { 
this . senderAddr = senderAddr ; 
this . receiverAddr = receiverAddr ; 
this . letter = letter ; 
} 
String getsenderAddr ( ) { 
return senderAddr ; 
} 
String getreceiverAddr ( ) ; 
{ 
return receiverAddr ; 
} 
String getletter ( ) { 
return letter ; 
} 
} 
</SourceCode><SourceCode lines="28" name="Letter.java">abstract public class Letter { 
protected String title ; 
protected String receiver ; 
protected String content ; 
protected String sender ; 
protected String date ; 
Letter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
public void display2 ( ) { 
System . out . println ( "Dear" + receiver + " " + title + "," ) ; 
System . out . println ( content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( sender ) ; 
System . out . print ( date ) ; 
} 
public void display ( ) { 
System . out . println ( receiver + " " + title + ", 您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + "   敬上" ) ; 
System . out . print ( date ) ; 
} 
} 
</SourceCode><SourceCode lines="6" name="non.java">public class non extends Letter { 
non ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
} 
</SourceCode><SourceCode lines="42" name="test.java">import java . util . Scanner ; 
public class test { 
public static void main ( String [ ] args ) { 
Scanner input = new Scanner ( System . in ) ; 
boolean b = true ; 
while ( b ) { 
System . out . print ( "input Chinese orEnglish (輸入0為終止): " ) ; 
String ltt = input . nextLine ( ) ; 
if ( ltt . equals ( "0" ) ) { 
b = false ; 
break ; 
} 
System . out . print ( "input title:" ) ; 
String title = input . nextLine ( ) ; 
System . out . print ( "input receiver:" ) ; 
String receiver = input . nextLine ( ) ; 
System . out . print ( "input content :" ) ; 
String content = input . nextLine ( ) ; 
System . out . print ( "input sender :" ) ; 
String sender = input . nextLine ( ) ; 
System . out . print ( "input date :" ) ; 
String date = input . nextLine ( ) ; 
Letter lt ; 
if ( ltt . equals ( "Chinese" ) ) { 
lt = new ChineseLetter ( title , receiver , content , sender , date ) ; 
Envelop env = new Envelop ( senderAddr , receiverAddr , letter ) ; 
lt . display ( ) ; 
} 
else if ( ltt . equals ( "English" ) ) { 
lt = new EnglishLetter ( title , receiver , content , sender , date ) ; 
Envelop env = new Envelop ( senderAddr , receiverAddr , letter ) ; 
lt . display2 ( ) ; 
} 
else { 
lt = new non ( title , receiver , content , sender , date ) ; 
Envelop env = new Envelop ( senderAddr , receiverAddr , letter ) ; 
System . out . println ( "您可能輸入的大小寫錯誤或是拼字錯誤造成無法印出!!" ) ; 
} 
} 
} 
} 
</SourceCode></SourceCode_List><Errors><Error tpye="抽象:抽象動作"><Message>抽象動作是抽象類別裡面的物件動作，只宣告函式名稱以及參數列型態，沒有實質的函式內容。實際的函式內容則由子類別來實踐並加以覆寫，進而完成物件動作的多型功能。
例如本程式可修改成
public String getSender(){         return this.sender;     }          
public String getTitle(){         return this.title;     }     
//可取得 receiver
public String getReceiver(){         return this.receiver;     }   
// 可取得 date     
public String getDate(){         return this.date;     }   
abstract void display();</Message><Linelist><line Begin="4" End="10" src="Letter" /><line Begin="21" End="26" src="Letter" /></Linelist></Error></Errors></ErrorList>