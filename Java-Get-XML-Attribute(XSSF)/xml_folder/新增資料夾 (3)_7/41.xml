<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorList id="C:\Users\USER\Desktop\手機待儲存\專研程式碼標記錯誤\XML_Error\1.12\JavaAnnotationXMLProgram\code(正規化)\期末考題二\41\41.xml">
	
<SourceCode_List><SourceCode lines="30" name="ChineseLetter.java"><![CDATA[public class ChineseLetter extends Letter { 
private String title , receiver , content , sender , date ; 
public String getSender ( ) { 
return sender ; 
} 
public String getReceiver ( ) { 
return receiver ; 
} 
public String getDate ( ) { 
return date ; 
} 
ChineseLetter ( String t , String r , String c , String s , String d ) { 
title = t ; 
receiver = r ; 
content = c ; 
sender = s ; 
date = d ; 
} 
public void display ( ) { 
System . out . println ( getReceiver ( ) + " " + this . title + ", 您好" ) ; 
System . out . println ( this . content ) ; 
System . out . println ( getSender ( ) + " 敬上" ) ; 
System . out . println ( getDate ( ) ) ; 
} 
public static void main ( String [ ] args ) { 
Letter lt = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ; 
lt . display ( ) ; 
} 
} 
]]></SourceCode><SourceCode lines="31" name="EnglishLetter.java"><![CDATA[public class EnglishLetter extends Letter { 
private String title , receiver , content , sender , date ; 
public String getSender ( ) { 
return sender ; 
} 
public String getReceiver ( ) { 
return receiver ; 
} 
public String getDate ( ) { 
return date ; 
} 
EnglishLetter ( String t , String r , String c , String s , String d ) { 
title = t ; 
receiver = r ; 
content = c ; 
sender = s ; 
date = d ; 
} 
public void display ( ) { 
System . out . println ( "Dear " + this . title + " " + getReceiver ( ) + "," ) ; 
System . out . println ( this . content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( getSender ( ) ) ; 
System . out . println ( getDate ( ) ) ; 
} 
public static void main ( String [ ] args ) { 
Letter lt = new EnglishLetter ( "Professor" , "Wang" , "I am glad to write to you!" , "J. J. Lin" , "2019/01/05" ) ; 
lt . display ( ) ; 
} 
} 
]]></SourceCode><SourceCode lines="4" name="Letter.java"><![CDATA[abstract public class Letter { 
abstract public void display ( ) ; 
} 
]]></SourceCode></SourceCode_List><Errors><Error tpye="抽象:不會分離變跟不變的部分"><Message><![CDATA[物件資料是可以被子類別繼承的,只需在Letter宣告一次即可
public abstract class Letter 
{
public String title,receiver,content,sender,date;
Letter(String title, String receiver, String content, String sender, String date)
{
this.title= title;
this.receiver=receiver;
this.content=content;
this.sender=sender;
this.date=date;
}
}
子類別的建構子再利用super做資料傳遞給上一層
public class EnglishLetter extends Letter
{
public EnglishLetter(String title, String receiver, String content, String sender, String date)
{
super(title,receiver,content,sender,date);
}
}

public class ChineseLetter extends Letter
{
public ChineseLetter(String title, String receiver, String content, String sender, String date)
{
super(title,receiver,content,sender,date);
}
}
另一方面,將共同物件寫在父類別,
宣告成public供所有類別做使用,
子類別就不用再宣告一次物件動作
public abstract class Letter 
{
public String getTitle()
{
return title;
}
public String getReceiver()
{
return receiver;
}
public String getContent()
{
return content;
}
public String getSender()
{
return sender;
}
public String getDate()
{
return date;
}
}]]></Message><Linelist><line Begin="2" End="18" src="ChineseLetter"/><line Begin="2" End="18" src="ChineseLetter"/></Linelist></Error></Errors></ErrorList>