<?xml version="1.0" encoding="UTF-8" standalone="no"?><ErrorList id="C:\Users\a2631\OneDrive\桌面\碩士\論文研究\Data\黃崇睿xml\error\587.xml">
	
<SourceCode_List><SourceCode lines="33" name="ChineseLetter.java"><![CDATA[public class ChineseLetter extends Letter { 
String title ; 
String receiver ; 
String content ; 
String sender ; 
String date ; 
ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
void display ( ) { 
System . out . println ( getReceiver ( ) + " " + title + ",您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( getSender ( ) + "敬上" ) ; 
System . out . println ( getDate ( ) ) ; 
} 
String getSender ( ) { 
return sender ; 
} 
String getReceiver ( ) { 
return receiver ; 
} 
String getDate ( ) { 
return date ; 
} 
String getTitle ( ) { 
return title ; 
} 
} 
]]></SourceCode><SourceCode lines="34" name="EnglishLetter.java"><![CDATA[public class EnglishLetter extends Letter { 
String title ; 
String receiver ; 
String content ; 
String sender ; 
String date ; 
EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
this . title = title ; 
this . receiver = receiver ; 
this . content = content ; 
this . sender = sender ; 
this . date = date ; 
} 
void display ( ) { 
System . out . println ( "Dear " + title + " " + getReceiver ( ) + "," ) ; 
System . out . println ( content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( getSender ( ) ) ; 
System . out . println ( getDate ( ) ) ; 
} 
String getSender ( ) { 
return sender ; 
} 
String getReceiver ( ) { 
return receiver ; 
} 
String getDate ( ) { 
return date ; 
} 
String getTitle ( ) { 
return title ; 
} 
} 
]]></SourceCode><SourceCode lines="31" name="Letter.java"><![CDATA[import java.util.Arrays;
public abstract class Letter implements Comparable
{
    String sender;
    String receiver;
    String title;
    String date;
    Letter[] list =  {
        new ChineseLetter ("教授", "王", "很高興跟您連絡", "銘哥", "2019/01/05"),
        new EnglishLetter("Professor", "Wang", "I am glad to write to you!", "J. J. Lin", "2018/11/01") , 
        new EnglishLetter("Professor", "Liu", "I am sorry!", "K. Ming", "2018/07/05")
    };
    void display(){}
    String getSender(){return sender;}
    String getReceiver(){return receiver;}
    String getTitle(){return title;}
    String getDate(){return date;}
    
    @Override
    public int compareTo(Object o){
        Letter obj = (Letter) o;
        if(this.Letter[0] < obj.Letter[0]{
            return 1;
        }else if(this.getDate() > obj.getDate()){
            return -1;
        }else{
            return 0;
        }
        }  
}
]]></SourceCode><SourceCode lines="6" name="Test.java"><![CDATA[import java . util . Arrays ; 
public class Test { 
public static void main ( String [ ] args ) { 
} 
} 
]]></SourceCode></SourceCode_List><Errors><Error tpye="抽象:抽象動作"><Message><![CDATA[Letter:13~13
這裡應宣告抽象動作
public abstract void display();]]></Message><Linelist><line Begin="13" End="13" src="Letter"/></Linelist></Error><Error tpye="抽象:繼承資料或動作"><Message><![CDATA[ChineseLetter:2~6,ChineseLetter:20~31,EnglishLetter:2~6,EnglishLetter:21~32
Letter已經做過,這裡不需做一次]]></Message><Linelist><line Begin="2" End="6" src="ChineseLetter"/><line Begin="20" End="31" src="ChineseLetter"/><line Begin="2" End="6" src="EnglishLetter"/><line Begin="21" End="32" src="EnglishLetter"/></Linelist></Error><Error tpye="正確:正確"><Message/><Linelist><line Begin="-1" End="-1" src="Test"/></Linelist></Error></Errors></ErrorList>