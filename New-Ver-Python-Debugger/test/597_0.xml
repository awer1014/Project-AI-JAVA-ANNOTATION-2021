<ErrorList id="C:\Users\User\Desktop\錯誤正規化\597\597.xml">
	
<SourceCode_List><SourceCode lines="13" name="ChineseLetter.java">public class ChineseLetter extends Letter { 
String a , b , c ; 
public ChineseLetter ( ) { 
} 
public ChineseLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
public void display ( ) { 
} 
public void Display ( ) { 
} 
} 
</SourceCode><SourceCode lines="12" name="EnglishLetter.java">public class EnglishLetter extends Letter { 
public EnglishLetter ( ) { 
} 
public EnglishLetter ( String title , String receiver , String content , String sender , String date ) { 
super ( title , receiver , content , sender , date ) ; 
} 
public void display ( ) { 
} 
public void Display ( ) { 
} 
} 
</SourceCode><SourceCode lines="19" name="Envelop.java">public class Envelop extends Letter { 
String senderAddr , receiverAddr , a , b , c ; 
Letter letter ; 
public Envelop ( ) { 
} 
public Envelop ( String senderAddr , String receiverAddr , Letter letter ) { 
this . senderAddr = senderAddr ; 
this . receiverAddr = receiverAddr ; 
this . letter = letter ; 
} 
public void display ( ) { 
System . out . println ( "From: " + senderAddr + "," + "銘哥" ) ; 
System . out . println ( "To: " + receiverAddr + "," + "王" + " " + "教授" ) ; 
System . out . println ( "信件內容:" ) ; 
} 
public void Display ( ) { 
} 
} 
</SourceCode><SourceCode lines="41" name="Letter.java">abstract public class Letter { 
String title ; 
String receiver ; 
String content ; 
String sender ; 
String date , senderAddr , receiverAddr ; 
public Letter ( ) { 
} 
public Letter ( String a , String b , String c , String d , String e ) { 
title = a ; 
receiver = b ; 
content = c ; 
sender = d ; 
date = e ; 
} 
abstract public void display ( ) ; 
public void displayFull ( ) { 
System . out . println ( receiver + " " + title + "您好" ) ; 
System . out . println ( content ) ; 
System . out . println ( sender + " " + "敬上" ) ; 
System . out . println ( date ) ; 
} 
abstract public void Display ( ) ; 
public void DisplayFull ( ) { 
System . out . println ( "Dear " + receiver + " " + title ) ; 
System . out . println ( content ) ; 
System . out . println ( "Sincerely" ) ; 
System . out . println ( sender ) ; 
System . out . println ( date ) ; 
} 
String getreceiver ( ) { 
return receiver ; 
} 
String getsender ( ) { 
return sender ; 
} 
String getdate ( ) { 
return date ; 
} 
} 
</SourceCode><SourceCode lines="9" name="text.java">public class text { 
public static void main ( ) { 
Letter it = new ChineseLetter ( "教授" , "王" , "很高興跟您連絡" , "銘哥" , "2019/01/05" ) ; 
Envelop env = new Envelop ( "Taipei" , "Kaohsiung" , it ) ; 
env . display ( ) ; 
it . displayFull ( ) ; 
} 
} 
</SourceCode></SourceCode_List><Errors><Error tpye="物件:不會使用物件之間的關係"><Message>當A物件擁有B物件時，A物件可以直接呼叫B物件的物件動作去取得該動作回傳值。
例如 可在本程式的 public void display()中 加入 letter.display();</Message><Linelist><line Begin="4" End="4" src="Envelop" /></Linelist></Error></Errors></ErrorList>